

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 13:19:20 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   228                           	psect	text190,global,reloc=2,class=CODE,delta=1
   229                           	psect	text191,global,reloc=2,class=CODE,delta=1
   230                           	psect	text192,global,reloc=2,class=CODE,delta=1
   231                           	psect	text193,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text196,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   238                           	dabs	1,0x400,48,_BDT
   239                           	dabs	1,0x438,8,_CtrlTrfData
   240                           	dabs	1,0x430,8,_SetupPkt
   241  0000                     
   242                           ; Version 1.45
   243                           ; Generated 16/11/2017 GMT
   244                           ; 
   245                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46J50 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277                           	psect	idataBANK0
   278  006B78                     __pidataBANK0:
   279                           	opt stack 0
   280                           
   281                           ;initializer for findEmptySpot@currentPosition
   282  006B78  20                 	db	32
   283                           
   284                           ;initializer for isNumberInMemory@currentPosition
   285  006B79  20                 	db	32
   286                           
   287                           	psect	idataBANK1
   288  006B7A                     __pidataBANK1:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _isMemoryEmpty
   292  006B7A  01                 	db	1
   293                           
   294                           ;initializer for InitGprsNetwork@GprsInitSts
   295  006B7B  01                 	db	1
   296                           
   297                           	psect	idataBANK2
   298  006AE6                     __pidataBANK2:
   299                           	opt stack 0
   300                           
   301                           ;initializer for Terminal@EchoOption
   302  006AE6  01                 	db	1
   303                           
   304                           ;initializer for _MainSystemTimebaseFlag
   305  006AE7  01                 	db	1
   306                           
   307                           ;initializer for _ConnTimeout
   308  006AE8  00                 	db	0
   309  006AE9  01                 	db	1
   310  006AEA  0000               	dw	0
   311  006AEC  0000               	dw	0
   312  006AEE  0000               	dw	0
   313  006AF0  0000               	dw	0
   314  006AF2  00                 	db	0
   315                           
   316                           	psect	idataBANK3
   317  0062D8                     __pidataBANK3:
   318                           	opt stack 0
   319                           
   320                           ;initializer for ModemEvtParser@F9114
   321  0062D8  2B                 	db	43
   322  0062D9  43                 	db	67
   323  0062DA  4D                 	db	77
   324  0062DB  54                 	db	84
   325  0062DC  49                 	db	73
   326                           
   327                           ;initializer for ModemEvtParser@F9112
   328  0062DD  2B                 	db	43
   329  0062DE  43                 	db	67
   330  0062DF  4C                 	db	76
   331  0062E0  49                 	db	73
   332  0062E1  50                 	db	80
   333                           
   334                           ;initializer for ModemEvtParser@F9110
   335  0062E2  52                 	db	82
   336  0062E3  49                 	db	73
   337  0062E4  4E                 	db	78
   338  0062E5  47                 	db	71
   339                           
   340                           ;initializer for triggerRelay@F9012
   341  0062E6  50                 	db	80
   342  0062E7  00                 	db	0
   343                           
   344                           ;initializer for Term_MainSm@TermDelay
   345  0062E8  01                 	db	1
   346  0062E9  01                 	db	1
   347  0062EA  0000               	dw	0
   348  0062EC  0000               	dw	0
   349  0062EE  0000               	dw	0
   350  0062F0  0000               	dw	0
   351  0062F2  00                 	db	0
   352                           
   353                           ;initializer for _ConnWait
   354  0062F3  00                 	db	0
   355  0062F4  01                 	db	1
   356  0062F5  0000               	dw	0
   357  0062F7  0000               	dw	0
   358  0062F9  0000               	dw	0
   359  0062FB  0000               	dw	0
   360  0062FD  00                 	db	0
   361                           
   362                           ;initializer for SendSmsSm@SwTimer
   363  0062FE  01                 	db	1
   364  0062FF  01                 	db	1
   365  006300  0000               	dw	0
   366  006302  0000               	dw	0
   367  006304  0000               	dw	0
   368  006306  0000               	dw	0
   369  006308  00                 	db	0
   370                           
   371                           ;initializer for CheckModem@Timeout
   372  006309  00                 	db	0
   373  00630A  01                 	db	1
   374  00630B  0000               	dw	0
   375  00630D  0000               	dw	0
   376  00630F  0000               	dw	0
   377  006311  0000               	dw	0
   378  006313  00                 	db	0
   379                           
   380                           	psect	idataBANK4
   381  006B0C                     __pidataBANK4:
   382                           	opt stack 0
   383                           
   384                           ;initializer for ModemEvtParser@F9116
   385  006B0C  43                 	db	67
   386  006B0D  61                 	db	97
   387  006B0E  6C                 	db	108
   388  006B0F  6C                 	db	108
   389  006B10  20                 	db	32
   390  006B11  52                 	db	82
   391  006B12  65                 	db	101
   392  006B13  61                 	db	97
   393  006B14  64                 	db	100
   394  006B15  79                 	db	121
   395                           
   396                           	psect	idataBANK5
   397  005D4A                     __pidataBANK5:
   398                           	opt stack 0
   399                           
   400                           ;initializer for _TaskTable
   401  005D4A  56                 	db	low _Mdm_DrvMainFn
   402  005D4B  6B                 	db	high _Mdm_DrvMainFn
   403  005D4C  00                 	db	0
   404  005D4D  0000               	dw	0
   405  005D4F  000A               	dw	10
   406  005D51  00                 	db	0
   407  005D52  02                 	db	low _I2cSlv_MainTask
   408  005D53  5B                 	db	high _I2cSlv_MainTask
   409  005D54  00                 	db	0
   410  005D55  0000               	dw	0
   411  005D57  0001               	dw	1
   412  005D59  00                 	db	0
   413  005D5A  9A                 	db	low _Mdm_MainTask
   414  005D5B  5D                 	db	high _Mdm_MainTask
   415  005D5C  00                 	db	0
   416  005D5D  0000               	dw	0
   417  005D5F  0001               	dw	1
   418  005D61  00                 	db	0
   419  005D62  04                 	db	low _MdmHttp_MainTask
   420  005D63  60                 	db	high _MdmHttp_MainTask
   421  005D64  00                 	db	0
   422  005D65  0000               	dw	0
   423  005D67  0001               	dw	1
   424  005D69  00                 	db	0
   425  005D6A  E8                 	db	low _UsbDevice_MainTask
   426  005D6B  66                 	db	high _UsbDevice_MainTask
   427  005D6C  00                 	db	0
   428  005D6D  0000               	dw	0
   429  005D6F  0001               	dw	1
   430  005D71  00                 	db	0
   431  005D72  78                 	db	low _Wdg_MainTask
   432  005D73  67                 	db	high _Wdg_MainTask
   433  005D74  00                 	db	0
   434  005D75  0000               	dw	0
   435  005D77  0064               	dw	100
   436  005D79  00                 	db	0
   437  005D7A  B6                 	db	low _Led_MainTask
   438  005D7B  3B                 	db	high _Led_MainTask
   439  005D7C  00                 	db	0
   440  005D7D  0000               	dw	0
   441  005D7F  0032               	dw	50
   442  005D81  00                 	db	0
   443  005D82  8C                 	db	low _Rtcm_MainTask
   444  005D83  50                 	db	high _Rtcm_MainTask
   445  005D84  00                 	db	0
   446  005D85  0000               	dw	0
   447  005D87  0064               	dw	100
   448  005D89  00                 	db	0
   449  005D8A  50                 	db	low _Term_MainTask
   450  005D8B  69                 	db	high _Term_MainTask
   451  005D8C  00                 	db	0
   452  005D8D  0000               	dw	0
   453  005D8F  0001               	dw	1
   454  005D91  00                 	db	0
   455  005D92  2C                 	db	low _MyApp_Task
   456  005D93  33                 	db	high _MyApp_Task
   457  005D94  00                 	db	0
   458  005D95  0000               	dw	0
   459  005D97  0064               	dw	100
   460  005D99  00                 	db	0
   461                           
   462                           	psect	mediumconst
   463  00FC0E                     __pmediumconst:
   464                           	opt stack 0
   465  00FC0E  00                 	db	0
   466  00FC0F                     delCmdFsm@F9013:
   467                           	opt stack 0
   468  00FC0F  00                 	db	0
   469  00FC10  00                 	db	0
   470  00FC11  00                 	db	0
   471  00FC12  00                 	db	0
   472  00FC13  00                 	db	0
   473  00FC14  00                 	db	0
   474  00FC15  00                 	db	0
   475  00FC16  00                 	db	0
   476  00FC17  00                 	db	0
   477  00FC18  00                 	db	0
   478  00FC19  00                 	db	0
   479  00FC1A  00                 	db	0
   480  00FC1B  00                 	db	0
   481  00FC1C                     __end_ofdelCmdFsm@F9013:
   482                           	opt stack 0
   483  00FC1C                     _USB_SD_Ptr:
   484                           	opt stack 0
   485  00FC1C  5B                 	db	low _sd000
   486  00FC1D  FE                 	db	high _sd000
   487  00FC1E  14                 	db	low _sd001
   488  00FC1F  FE                 	db	high _sd001
   489  00FC20  EE                 	db	low _sd002
   490  00FC21  FD                 	db	high _sd002
   491  00FC22                     __end_of_USB_SD_Ptr:
   492                           	opt stack 0
   493  00FC22                     parseCommand@F9030:
   494                           	opt stack 0
   495  00FC22  52                 	db	82
   496  00FC23  45                 	db	69
   497  00FC24  53                 	db	83
   498  00FC25  3B                 	db	59
   499  00FC26                     __end_ofparseCommand@F9030:
   500                           	opt stack 0
   501  00FC26                     parseCommand@F9028:
   502                           	opt stack 0
   503  00FC26  44                 	db	68
   504  00FC27  45                 	db	69
   505  00FC28  4C                 	db	76
   506  00FC29  3B                 	db	59
   507  00FC2A                     __end_ofparseCommand@F9028:
   508                           	opt stack 0
   509  00FC2A                     parseCommand@F9026:
   510                           	opt stack 0
   511  00FC2A  41                 	db	65
   512  00FC2B  44                 	db	68
   513  00FC2C  44                 	db	68
   514  00FC2D  3B                 	db	59
   515  00FC2E                     __end_ofparseCommand@F9026:
   516                           	opt stack 0
   517  00FC2E                     _USB_CD_Ptr:
   518                           	opt stack 0
   519  00FC2E  AB                 	db	low _configDescriptor1
   520  00FC2F  FD                 	db	high _configDescriptor1
   521  00FC30                     __end_of_USB_CD_Ptr:
   522                           	opt stack 0
   523  00FC30                     _TaskNumber:
   524                           	opt stack 0
   525  00FC30  000A               	dw	10
   526  00FC32                     __end_of_TaskNumber:
   527                           	opt stack 0
   528  00FC32                     _MsgFormat:
   529                           	opt stack 0
   530  00FC32  48                 	db	72
   531  00FC33  6F                 	db	111
   532  00FC34  73                 	db	115
   533  00FC35  74                 	db	116
   534  00FC36  20                 	db	32
   535  00FC37  6D                 	db	109
   536  00FC38  65                 	db	101
   537  00FC39  73                 	db	115
   538  00FC3A  73                 	db	115
   539  00FC3B  61                 	db	97
   540  00FC3C  67                 	db	103
   541  00FC3D  65                 	db	101
   542  00FC3E  20                 	db	32
   543  00FC3F  66                 	db	102
   544  00FC40  6F                 	db	111
   545  00FC41  72                 	db	114
   546  00FC42  6D                 	db	109
   547  00FC43  61                 	db	97
   548  00FC44  74                 	db	116
   549  00FC45  3A                 	db	58
   550  00FC46  20                 	db	32
   551  00FC47  0D                 	db	13
   552  00FC48  0A                 	db	10
   553  00FC49  5B                 	db	91
   554  00FC4A  6F                 	db	111
   555  00FC4B  70                 	db	112
   556  00FC4C  5F                 	db	95
   557  00FC4D  74                 	db	116
   558  00FC4E  79                 	db	121
   559  00FC4F  70                 	db	112
   560  00FC50  65                 	db	101
   561  00FC51  5D                 	db	93
   562  00FC52  3A                 	db	58
   563  00FC53  5B                 	db	91
   564  00FC54  6F                 	db	111
   565  00FC55  70                 	db	112
   566  00FC56  5D                 	db	93
   567  00FC57  3A                 	db	58
   568  00FC58  5B                 	db	91
   569  00FC59  6C                 	db	108
   570  00FC5A  65                 	db	101
   571  00FC5B  6E                 	db	110
   572  00FC5C  5D                 	db	93
   573  00FC5D  3A                 	db	58
   574  00FC5E  5B                 	db	91
   575  00FC5F  61                 	db	97
   576  00FC60  64                 	db	100
   577  00FC61  64                 	db	100
   578  00FC62  72                 	db	114
   579  00FC63  5D                 	db	93
   580  00FC64  3A                 	db	58
   581  00FC65  5B                 	db	91
   582  00FC66  70                 	db	112
   583  00FC67  61                 	db	97
   584  00FC68  79                 	db	121
   585  00FC69  6C                 	db	108
   586  00FC6A  6F                 	db	111
   587  00FC6B  61                 	db	97
   588  00FC6C  64                 	db	100
   589  00FC6D  5D                 	db	93
   590  00FC6E  0D                 	db	13
   591  00FC6F  0A                 	db	10
   592  00FC70  0D                 	db	13
   593  00FC71  0A                 	db	10
   594  00FC72  5B                 	db	91
   595  00FC73  6F                 	db	111
   596  00FC74  70                 	db	112
   597  00FC75  5F                 	db	95
   598  00FC76  74                 	db	116
   599  00FC77  79                 	db	121
   600  00FC78  70                 	db	112
   601  00FC79  65                 	db	101
   602  00FC7A  5D                 	db	93
   603  00FC7B  20                 	db	32
   604  00FC7C  3D                 	db	61
   605  00FC7D  20                 	db	32
   606  00FC7E  53                 	db	83
   607  00FC7F  4F                 	db	79
   608  00FC80  2C                 	db	44
   609  00FC81  53                 	db	83
   610  00FC82  42                 	db	66
   611  00FC83  0D                 	db	13
   612  00FC84  0A                 	db	10
   613  00FC85  5B                 	db	91
   614  00FC86  6F                 	db	111
   615  00FC87  70                 	db	112
   616  00FC88  5D                 	db	93
   617  00FC89  20                 	db	32
   618  00FC8A  3D                 	db	61
   619  00FC8B  20                 	db	32
   620  00FC8C  52                 	db	82
   621  00FC8D  3A                 	db	58
   622  00FC8E  20                 	db	32
   623  00FC8F  72                 	db	114
   624  00FC90  65                 	db	101
   625  00FC91  61                 	db	97
   626  00FC92  64                 	db	100
   627  00FC93  2C                 	db	44
   628  00FC94  57                 	db	87
   629  00FC95  3A                 	db	58
   630  00FC96  20                 	db	32
   631  00FC97  77                 	db	119
   632  00FC98  72                 	db	114
   633  00FC99  69                 	db	105
   634  00FC9A  74                 	db	116
   635  00FC9B  65                 	db	101
   636  00FC9C  0D                 	db	13
   637  00FC9D  0A                 	db	10
   638  00FC9E  5B                 	db	91
   639  00FC9F  6C                 	db	108
   640  00FCA0  65                 	db	101
   641  00FCA1  6E                 	db	110
   642  00FCA2  5D                 	db	93
   643  00FCA3  20                 	db	32
   644  00FCA4  3D                 	db	61
   645  00FCA5  20                 	db	32
   646  00FCA6  32                 	db	50
   647  00FCA7  20                 	db	32
   648  00FCA8  62                 	db	98
   649  00FCA9  79                 	db	121
   650  00FCAA  74                 	db	116
   651  00FCAB  65                 	db	101
   652  00FCAC  20                 	db	32
   653  00FCAD  41                 	db	65
   654  00FCAE  53                 	db	83
   655  00FCAF  43                 	db	67
   656  00FCB0  49                 	db	73
   657  00FCB1  49                 	db	73
   658  00FCB2  0D                 	db	13
   659  00FCB3  0A                 	db	10
   660  00FCB4  5B                 	db	91
   661  00FCB5  61                 	db	97
   662  00FCB6  64                 	db	100
   663  00FCB7  64                 	db	100
   664  00FCB8  72                 	db	114
   665  00FCB9  5D                 	db	93
   666  00FCBA  20                 	db	32
   667  00FCBB  3D                 	db	61
   668  00FCBC  20                 	db	32
   669  00FCBD  32                 	db	50
   670  00FCBE  20                 	db	32
   671  00FCBF  62                 	db	98
   672  00FCC0  79                 	db	121
   673  00FCC1  74                 	db	116
   674  00FCC2  65                 	db	101
   675  00FCC3  20                 	db	32
   676  00FCC4  41                 	db	65
   677  00FCC5  53                 	db	83
   678  00FCC6  43                 	db	67
   679  00FCC7  49                 	db	73
   680  00FCC8  49                 	db	73
   681  00FCC9  0D                 	db	13
   682  00FCCA  0A                 	db	10
   683  00FCCB  5B                 	db	91
   684  00FCCC  70                 	db	112
   685  00FCCD  61                 	db	97
   686  00FCCE  79                 	db	121
   687  00FCCF  6C                 	db	108
   688  00FCD0  6F                 	db	111
   689  00FCD1  61                 	db	97
   690  00FCD2  64                 	db	100
   691  00FCD3  5D                 	db	93
   692  00FCD4  20                 	db	32
   693  00FCD5  3D                 	db	61
   694  00FCD6  20                 	db	32
   695  00FCD7  6D                 	db	109
   696  00FCD8  61                 	db	97
   697  00FCD9  78                 	db	120
   698  00FCDA  20                 	db	32
   699  00FCDB  32                 	db	50
   700  00FCDC  30                 	db	48
   701  00FCDD  20                 	db	32
   702  00FCDE  62                 	db	98
   703  00FCDF  79                 	db	121
   704  00FCE0  74                 	db	116
   705  00FCE1  65                 	db	101
   706  00FCE2  20                 	db	32
   707  00FCE3  41                 	db	65
   708  00FCE4  53                 	db	83
   709  00FCE5  43                 	db	67
   710  00FCE6  49                 	db	73
   711  00FCE7  49                 	db	73
   712  00FCE8  0D                 	db	13
   713  00FCE9  0A                 	db	10
   714  00FCEA  0D                 	db	13
   715  00FCEB  0A                 	db	10
   716  00FCEC  54                 	db	84
   717  00FCED  65                 	db	101
   718  00FCEE  72                 	db	114
   719  00FCEF  6D                 	db	109
   720  00FCF0  69                 	db	105
   721  00FCF1  6E                 	db	110
   722  00FCF2  61                 	db	97
   723  00FCF3  6C                 	db	108
   724  00FCF4  20                 	db	32
   725  00FCF5  4D                 	db	77
   726  00FCF6  6F                 	db	111
   727  00FCF7  64                 	db	100
   728  00FCF8  65                 	db	101
   729  00FCF9  3A                 	db	58
   730  00FCFA  20                 	db	32
   731  00FCFB  43                 	db	67
   732  00FCFC  4F                 	db	79
   733  00FCFD  4D                 	db	77
   734  00FCFE  4D                 	db	77
   735  00FCFF  41                 	db	65
   736  00FD00  4E                 	db	78
   737  00FD01  44                 	db	68
   738  00FD02  20                 	db	32
   739  00FD03  4D                 	db	77
   740  00FD04  4F                 	db	79
   741  00FD05  44                 	db	68
   742  00FD06  45                 	db	69
   743  00FD07  0D                 	db	13
   744  00FD08  0A                 	db	10
   745  00FD09  4D                 	db	77
   746  00FD0A  6F                 	db	111
   747  00FD0B  64                 	db	100
   748  00FD0C  65                 	db	101
   749  00FD0D  6D                 	db	109
   750  00FD0E  20                 	db	32
   751  00FD0F  54                 	db	84
   752  00FD10  79                 	db	121
   753  00FD11  70                 	db	112
   754  00FD12  65                 	db	101
   755  00FD13  3A                 	db	58
   756  00FD14  20                 	db	32
   757  00FD15  47                 	db	71
   758  00FD16  53                 	db	83
   759  00FD17  4D                 	db	77
   760  00FD18  2F                 	db	47
   761  00FD19  47                 	db	71
   762  00FD1A  50                 	db	80
   763  00FD1B  52                 	db	82
   764  00FD1C  53                 	db	83
   765  00FD1D  0D                 	db	13
   766  00FD1E  0A                 	db	10
   767  00FD1F  0D                 	db	13
   768  00FD20  0A                 	db	10
   769  00FD21  00                 	db	0
   770  00FD22                     __end_of_MsgFormat:
   771                           	opt stack 0
   772  00FD22                     _Welcome:
   773                           	opt stack 0
   774  00FD22  2A                 	db	42
   775  00FD23  2A                 	db	42
   776  00FD24  2A                 	db	42
   777  00FD25  2A                 	db	42
   778  00FD26  2A                 	db	42
   779  00FD27  2A                 	db	42
   780  00FD28  2A                 	db	42
   781  00FD29  2A                 	db	42
   782  00FD2A  2A                 	db	42
   783  00FD2B  2A                 	db	42
   784  00FD2C  2A                 	db	42
   785  00FD2D  2A                 	db	42
   786  00FD2E  2A                 	db	42
   787  00FD2F  2A                 	db	42
   788  00FD30  2A                 	db	42
   789  00FD31  2A                 	db	42
   790  00FD32  2A                 	db	42
   791  00FD33  2A                 	db	42
   792  00FD34  2A                 	db	42
   793  00FD35  2A                 	db	42
   794  00FD36  2A                 	db	42
   795  00FD37  2A                 	db	42
   796  00FD38  2A                 	db	42
   797  00FD39  2A                 	db	42
   798  00FD3A  2A                 	db	42
   799  00FD3B  2A                 	db	42
   800  00FD3C  2A                 	db	42
   801  00FD3D  2A                 	db	42
   802  00FD3E  2A                 	db	42
   803  00FD3F  2A                 	db	42
   804  00FD40  2A                 	db	42
   805  00FD41  2A                 	db	42
   806  00FD42  2A                 	db	42
   807  00FD43  2A                 	db	42
   808  00FD44  2A                 	db	42
   809  00FD45  2A                 	db	42
   810  00FD46  2A                 	db	42
   811  00FD47  2A                 	db	42
   812  00FD48  2A                 	db	42
   813  00FD49  2A                 	db	42
   814  00FD4A  2A                 	db	42
   815  00FD4B  2A                 	db	42
   816  00FD4C  2A                 	db	42
   817  00FD4D  2A                 	db	42
   818  00FD4E  2A                 	db	42
   819  00FD4F  2A                 	db	42
   820  00FD50  2A                 	db	42
   821  00FD51  2A                 	db	42
   822  00FD52  2A                 	db	42
   823  00FD53  0D                 	db	13
   824  00FD54  0A                 	db	10
   825  00FD55  20                 	db	32
   826  00FD56  20                 	db	32
   827  00FD57  20                 	db	32
   828  00FD58  20                 	db	32
   829  00FD59  20                 	db	32
   830  00FD5A  20                 	db	32
   831  00FD5B  20                 	db	32
   832  00FD5C  20                 	db	32
   833  00FD5D  20                 	db	32
   834  00FD5E  20                 	db	32
   835  00FD5F  20                 	db	32
   836  00FD60  20                 	db	32
   837  00FD61  20                 	db	32
   838  00FD62  20                 	db	32
   839  00FD63  20                 	db	32
   840  00FD64  20                 	db	32
   841  00FD65  20                 	db	32
   842  00FD66  20                 	db	32
   843  00FD67  4D                 	db	77
   844  00FD68  45                 	db	69
   845  00FD69  52                 	db	82
   846  00FD6A  43                 	db	67
   847  00FD6B  55                 	db	85
   848  00FD6C  52                 	db	82
   849  00FD6D  59                 	db	89
   850  00FD6E  20                 	db	32
   851  00FD6F  53                 	db	83
   852  00FD70  59                 	db	89
   853  00FD71  53                 	db	83
   854  00FD72  54                 	db	84
   855  00FD73  45                 	db	69
   856  00FD74  4D                 	db	77
   857  00FD75  0D                 	db	13
   858  00FD76  0A                 	db	10
   859  00FD77  2A                 	db	42
   860  00FD78  2A                 	db	42
   861  00FD79  2A                 	db	42
   862  00FD7A  2A                 	db	42
   863  00FD7B  2A                 	db	42
   864  00FD7C  2A                 	db	42
   865  00FD7D  2A                 	db	42
   866  00FD7E  2A                 	db	42
   867  00FD7F  2A                 	db	42
   868  00FD80  2A                 	db	42
   869  00FD81  2A                 	db	42
   870  00FD82  2A                 	db	42
   871  00FD83  2A                 	db	42
   872  00FD84  2A                 	db	42
   873  00FD85  2A                 	db	42
   874  00FD86  2A                 	db	42
   875  00FD87  2A                 	db	42
   876  00FD88  2A                 	db	42
   877  00FD89  2A                 	db	42
   878  00FD8A  2A                 	db	42
   879  00FD8B  2A                 	db	42
   880  00FD8C  2A                 	db	42
   881  00FD8D  2A                 	db	42
   882  00FD8E  2A                 	db	42
   883  00FD8F  2A                 	db	42
   884  00FD90  2A                 	db	42
   885  00FD91  2A                 	db	42
   886  00FD92  2A                 	db	42
   887  00FD93  2A                 	db	42
   888  00FD94  2A                 	db	42
   889  00FD95  2A                 	db	42
   890  00FD96  2A                 	db	42
   891  00FD97  2A                 	db	42
   892  00FD98  2A                 	db	42
   893  00FD99  2A                 	db	42
   894  00FD9A  2A                 	db	42
   895  00FD9B  2A                 	db	42
   896  00FD9C  2A                 	db	42
   897  00FD9D  2A                 	db	42
   898  00FD9E  2A                 	db	42
   899  00FD9F  2A                 	db	42
   900  00FDA0  2A                 	db	42
   901  00FDA1  2A                 	db	42
   902  00FDA2  2A                 	db	42
   903  00FDA3  2A                 	db	42
   904  00FDA4  2A                 	db	42
   905  00FDA5  2A                 	db	42
   906  00FDA6  2A                 	db	42
   907  00FDA7  2A                 	db	42
   908  00FDA8  0D                 	db	13
   909  00FDA9  0A                 	db	10
   910  00FDAA  00                 	db	0
   911  00FDAB                     __end_of_Welcome:
   912                           	opt stack 0
   913  00FDAB                     _configDescriptor1:
   914                           	opt stack 0
   915  00FDAB  09                 	db	9
   916  00FDAC  02                 	db	2
   917  00FDAD  43                 	db	67
   918  00FDAE  00                 	db	0
   919  00FDAF  02                 	db	2
   920  00FDB0  01                 	db	1
   921  00FDB1  00                 	db	0
   922  00FDB2  C0                 	db	192
   923  00FDB3  32                 	db	50
   924  00FDB4  09                 	db	9
   925  00FDB5  04                 	db	4
   926  00FDB6  00                 	db	0
   927  00FDB7  00                 	db	0
   928  00FDB8  01                 	db	1
   929  00FDB9  02                 	db	2
   930  00FDBA  02                 	db	2
   931  00FDBB  01                 	db	1
   932  00FDBC  00                 	db	0
   933  00FDBD  05                 	db	5
   934  00FDBE  24                 	db	36
   935  00FDBF  00                 	db	0
   936  00FDC0  10                 	db	16
   937  00FDC1  01                 	db	1
   938  00FDC2  04                 	db	4
   939  00FDC3  24                 	db	36
   940  00FDC4  02                 	db	2
   941  00FDC5  02                 	db	2
   942  00FDC6  05                 	db	5
   943  00FDC7  24                 	db	36
   944  00FDC8  06                 	db	6
   945  00FDC9  00                 	db	0
   946  00FDCA  01                 	db	1
   947  00FDCB  05                 	db	5
   948  00FDCC  24                 	db	36
   949  00FDCD  01                 	db	1
   950  00FDCE  00                 	db	0
   951  00FDCF  01                 	db	1
   952  00FDD0  07                 	db	7
   953  00FDD1  05                 	db	5
   954  00FDD2  81                 	db	129
   955  00FDD3  03                 	db	3
   956  00FDD4  08                 	db	8
   957  00FDD5  00                 	db	0
   958  00FDD6  02                 	db	2
   959  00FDD7  09                 	db	9
   960  00FDD8  04                 	db	4
   961  00FDD9  01                 	db	1
   962  00FDDA  00                 	db	0
   963  00FDDB  02                 	db	2
   964  00FDDC  0A                 	db	10
   965  00FDDD  00                 	db	0
   966  00FDDE  00                 	db	0
   967  00FDDF  00                 	db	0
   968  00FDE0  07                 	db	7
   969  00FDE1  05                 	db	5
   970  00FDE2  02                 	db	2
   971  00FDE3  02                 	db	2
   972  00FDE4  40                 	db	64
   973  00FDE5  00                 	db	0
   974  00FDE6  00                 	db	0
   975  00FDE7  07                 	db	7
   976  00FDE8  05                 	db	5
   977  00FDE9  82                 	db	130
   978  00FDEA  02                 	db	2
   979  00FDEB  40                 	db	64
   980  00FDEC  00                 	db	0
   981  00FDED  00                 	db	0
   982  00FDEE                     __end_of_configDescriptor1:
   983                           	opt stack 0
   984  00FDEE                     _sd002:
   985                           	opt stack 0
   986  00FDEE  26                 	db	38
   987  00FDEF  03                 	db	3
   988  00FDF0  0054               	dw	84
   989  00FDF2  0065               	dw	101
   990  00FDF4  0072               	dw	114
   991  00FDF6  006D               	dw	109
   992  00FDF8  0069               	dw	105
   993  00FDFA  006E               	dw	110
   994  00FDFC  0061               	dw	97
   995  00FDFE  006C               	dw	108
   996  00FE00  0020               	dw	32
   997  00FE02  0049               	dw	73
   998  00FE04  006E               	dw	110
   999  00FE06  0074               	dw	116
  1000  00FE08  0065               	dw	101
  1001  00FE0A  0072               	dw	114
  1002  00FE0C  0066               	dw	102
  1003  00FE0E  0061               	dw	97
  1004  00FE10  0063               	dw	99
  1005  00FE12  0065               	dw	101
  1006  00FE14                     __end_of_sd002:
  1007                           	opt stack 0
  1008  00FE14                     _sd001:
  1009                           	opt stack 0
  1010  00FE14  1E                 	db	30
  1011  00FE15  03                 	db	3
  1012  00FE16  004D               	dw	77
  1013  00FE18  0065               	dw	101
  1014  00FE1A  0072               	dw	114
  1015  00FE1C  0063               	dw	99
  1016  00FE1E  0075               	dw	117
  1017  00FE20  0072               	dw	114
  1018  00FE22  0079               	dw	121
  1019  00FE24  0020               	dw	32
  1020  00FE26  0053               	dw	83
  1021  00FE28  0079               	dw	121
  1022  00FE2A  0073               	dw	115
  1023  00FE2C  0074               	dw	116
  1024  00FE2E  0065               	dw	101
  1025  00FE30  006D               	dw	109
  1026  00FE32                     __end_of_sd001:
  1027                           	opt stack 0
  1028  00FE32                     _MsgReady:
  1029                           	opt stack 0
  1030  00FE32  0D                 	db	13
  1031  00FE33  0A                 	db	10
  1032  00FE34  53                 	db	83
  1033  00FE35  79                 	db	121
  1034  00FE36  73                 	db	115
  1035  00FE37  74                 	db	116
  1036  00FE38  65                 	db	101
  1037  00FE39  6D                 	db	109
  1038  00FE3A  20                 	db	32
  1039  00FE3B  52                 	db	82
  1040  00FE3C  65                 	db	101
  1041  00FE3D  61                 	db	97
  1042  00FE3E  64                 	db	100
  1043  00FE3F  79                 	db	121
  1044  00FE40  2E                 	db	46
  1045  00FE41  2E                 	db	46
  1046  00FE42  2E                 	db	46
  1047  00FE43  20                 	db	32
  1048  00FE44  0D                 	db	13
  1049  00FE45  0A                 	db	10
  1050  00FE46  0D                 	db	13
  1051  00FE47  0A                 	db	10
  1052  00FE48  00                 	db	0
  1053  00FE49                     __end_of_MsgReady:
  1054                           	opt stack 0
  1055  00FE49                     _device_dsc:
  1056                           	opt stack 0
  1057  00FE49  12                 	db	18
  1058  00FE4A  01                 	db	1
  1059  00FE4B  0200               	dw	512
  1060  00FE4D  02                 	db	2
  1061  00FE4E  00                 	db	0
  1062  00FE4F  00                 	db	0
  1063  00FE50  08                 	db	8
  1064  00FE51  04D8               	dw	1240
  1065  00FE53  000A               	dw	10
  1066  00FE55  0100               	dw	256
  1067  00FE57  01                 	db	1
  1068  00FE58  02                 	db	2
  1069  00FE59  00                 	db	0
  1070  00FE5A  01                 	db	1
  1071  00FE5B                     __end_of_device_dsc:
  1072                           	opt stack 0
  1073  00FE5B                     _sd000:
  1074                           	opt stack 0
  1075  00FE5B  04                 	db	4
  1076  00FE5C  03                 	db	3
  1077  00FE5D  0409               	dw	1033
  1078  00FE5F                     __end_of_sd000:
  1079                           	opt stack 0
  1080  0000                     _RPINR1	set	3815
  1081  0000                     _UEP0bits	set	3878
  1082  0000                     _UIEbits	set	3894
  1083  0000                     _UADDR	set	3896
  1084  0000                     _UIE	set	3894
  1085  0000                     _UEIE	set	3895
  1086  0000                     _UCFG	set	3897
  1087  0000                     _RTCCAL	set	3902
  1088  0000                     _PADCFG1bits	set	3900
  1089  0000                     _RTCCFGbits	set	3903
  1090  0000                     _DSCONLbits	set	3916
  1091  0000                     _DSGPR1	set	3919
  1092  0000                     _DSGPR0	set	3918
  1093  0000                     _DSCONHbits	set	3917
  1094  0000                     _ANCON1bits	set	3913
  1095  0000                     _UEP1	set	3879
  1096  0000                     _UEP0	set	3878
  1097  0000                     _T1CONbits	set	4045
  1098  0000                     _PORTDbits	set	3971
  1099  0000                     _USTAT	set	3940
  1100  0000                     _PIR2bits	set	4001
  1101  0000                     _UCON	set	3941
  1102  0000                     _UIRbits	set	3938
  1103  0000                     _UCONbits	set	3941
  1104  0000                     _UIR	set	3938
  1105  0000                     _UEIR	set	3939
  1106  0000                     _PIE2bits	set	4000
  1107  0000                     _BAUDCON2	set	3964
  1108  0000                     _RCSTA2	set	3996
  1109  0000                     _BAUDCON1	set	3966
  1110  0000                     _RCSTA1	set	4012
  1111  0000                     _TRISCbits	set	3988
  1112  0000                     _TXSTA2	set	4008
  1113  0000                     _TXSTA1	set	4013
  1114  0000                     _RCREG2	set	4010
  1115  0000                     _RCREG1	set	4015
  1116  0000                     _TXREG2	set	4009
  1117  0000                     _TXREG1	set	4014
  1118  0000                     _SPBRG2	set	4011
  1119  0000                     _SPBRGH2	set	3965
  1120  0000                     _SPBRG1	set	4016
  1121  0000                     _SPBRGH1	set	3967
  1122  0000                     _PR4	set	3959
  1123  0000                     _PR2	set	4043
  1124  0000                     _PIE1bits	set	3997
  1125  0000                     _IPR1bits	set	3999
  1126  0000                     _T4CONbits	set	3958
  1127  0000                     _T2CONbits	set	4042
  1128  0000                     _ALRMVALL	set	3982
  1129  0000                     _ALRMVALH	set	3983
  1130  0000                     _RTCVALH	set	3993
  1131  0000                     _RTCVALL	set	3992
  1132  0000                     _ALRMRPTbits	set	3984
  1133  0000                     _ALRMCFGbits	set	3985
  1134  0000                     _PIE3bits	set	4003
  1135  0000                     _IPR3bits	set	4005
  1136  0000                     _OSCCONbits	set	4051
  1137  0000                     _PORTEbits	set	3972
  1138  0000                     _TRISEbits	set	3990
  1139  0000                     _WDTCONbits	set	4032
  1140  0000                     _INTCON2bits	set	4081
  1141  0000                     _TRISBbits	set	3987
  1142  0000                     _OSCTUNEbits	set	3995
  1143  0000                     _SSP2CON1	set	3954
  1144  0000                     _TRISDbits	set	3989
  1145  0000                     _SSP2BUF	set	3957
  1146  0000                     _SSP2CON2bits	set	3953
  1147  0000                     _SSP2STAT	set	3955
  1148  0000                     _SSP2CON2	set	3953
  1149  0000                     _SSP2ADD	set	3956
  1150  0000                     _PIR1bits	set	3998
  1151  0000                     _PIR3bits	set	4004
  1152  0000                     _INTCON3bits	set	4080
  1153  0000                     _INTCONbits	set	4082
  1154  0000                     _RCONbits	set	4048
  1155  00FE5F                     STR_21:
  1156  00FE5F  20                 	db	32
  1157  00FE60  4C                 	db	76	;'L'
  1158  00FE61  61                 	db	97	;'a'
  1159  00FE62  7A                 	db	122	;'z'
  1160  00FE63  79                 	db	121	;'y'
  1161  00FE64  20                 	db	32
  1162  00FE65  64                 	db	100	;'d'
  1163  00FE66  65                 	db	101	;'e'
  1164  00FE67  76                 	db	118	;'v'
  1165  00FE68  69                 	db	105	;'i'
  1166  00FE69  63                 	db	99	;'c'
  1167  00FE6A  65                 	db	101	;'e'
  1168  00FE6B  2E                 	db	46
  1169  00FE6C  2E                 	db	46
  1170  00FE6D  2E                 	db	46
  1171  00FE6E  79                 	db	121	;'y'
  1172  00FE6F  6F                 	db	111	;'o'
  1173  00FE70  75                 	db	117	;'u'
  1174  00FE71  27                 	db	39
  1175  00FE72  76                 	db	118	;'v'
  1176  00FE73  65                 	db	101	;'e'
  1177  00FE74  20                 	db	32
  1178  00FE75  62                 	db	98	;'b'
  1179  00FE76  65                 	db	101	;'e'
  1180  00FE77  65                 	db	101	;'e'
  1181  00FE78  6E                 	db	110	;'n'
  1182  00FE79  20                 	db	32
  1183  00FE7A  74                 	db	116	;'t'
  1184  00FE7B  69                 	db	105	;'i'
  1185  00FE7C  6D                 	db	109	;'m'
  1186  00FE7D  65                 	db	101	;'e'
  1187  00FE7E  64                 	db	100	;'d'
  1188  00FE7F  2D                 	db	45
  1189  00FE80  6F                 	db	111	;'o'
  1190  00FE81  75                 	db	117	;'u'
  1191  00FE82  74                 	db	116	;'t'
  1192  00FE83  21                 	db	33
  1193  00FE84  21                 	db	33
  1194  00FE85  21                 	db	33
  1195  00FE86  0D                 	db	13
  1196  00FE87  0A                 	db	10
  1197  00FE88  00                 	db	0
  1198  00FE89                     STR_8:
  1199  00FE89  41                 	db	65	;'A'
  1200  00FE8A  54                 	db	84	;'T'
  1201  00FE8B  2B                 	db	43
  1202  00FE8C  53                 	db	83	;'S'
  1203  00FE8D  41                 	db	65	;'A'
  1204  00FE8E  50                 	db	80	;'P'
  1205  00FE8F  42                 	db	66	;'B'
  1206  00FE90  52                 	db	82	;'R'
  1207  00FE91  3D                 	db	61	;'='
  1208  00FE92  33                 	db	51	;'3'
  1209  00FE93  2C                 	db	44
  1210  00FE94  31                 	db	49	;'1'
  1211  00FE95  2C                 	db	44
  1212  00FE96  22                 	db	34
  1213  00FE97  43                 	db	67	;'C'
  1214  00FE98  6F                 	db	111	;'o'
  1215  00FE99  6E                 	db	110	;'n'
  1216  00FE9A  74                 	db	116	;'t'
  1217  00FE9B  79                 	db	121	;'y'
  1218  00FE9C  70                 	db	112	;'p'
  1219  00FE9D  65                 	db	101	;'e'
  1220  00FE9E  22                 	db	34
  1221  00FE9F  2C                 	db	44
  1222  00FEA0  22                 	db	34
  1223  00FEA1  47                 	db	71	;'G'
  1224  00FEA2  50                 	db	80	;'P'
  1225  00FEA3  52                 	db	82	;'R'
  1226  00FEA4  53                 	db	83	;'S'
  1227  00FEA5  22                 	db	34
  1228  00FEA6  0D                 	db	13
  1229  00FEA7  00                 	db	0
  1230  00FEA8                     STR_14:
  1231  00FEA8  41                 	db	65	;'A'
  1232  00FEA9  54                 	db	84	;'T'
  1233  00FEAA  2B                 	db	43
  1234  00FEAB  48                 	db	72	;'H'
  1235  00FEAC  54                 	db	84	;'T'
  1236  00FEAD  54                 	db	84	;'T'
  1237  00FEAE  50                 	db	80	;'P'
  1238  00FEAF  50                 	db	80	;'P'
  1239  00FEB0  41                 	db	65	;'A'
  1240  00FEB1  52                 	db	82	;'R'
  1241  00FEB2  41                 	db	65	;'A'
  1242  00FEB3  3D                 	db	61	;'='
  1243  00FEB4  22                 	db	34
  1244  00FEB5  43                 	db	67	;'C'
  1245  00FEB6  49                 	db	73	;'I'
  1246  00FEB7  44                 	db	68	;'D'
  1247  00FEB8  22                 	db	34
  1248  00FEB9  2C                 	db	44
  1249  00FEBA  31                 	db	49	;'1'
  1250  00FEBB  0D                 	db	13
  1251  00FEBC  00                 	db	0
  1252  00FEBD                     STR_9:
  1253  00FEBD  41                 	db	65	;'A'
  1254  00FEBE  54                 	db	84	;'T'
  1255  00FEBF  2B                 	db	43
  1256  00FEC0  53                 	db	83	;'S'
  1257  00FEC1  41                 	db	65	;'A'
  1258  00FEC2  50                 	db	80	;'P'
  1259  00FEC3  42                 	db	66	;'B'
  1260  00FEC4  52                 	db	82	;'R'
  1261  00FEC5  3D                 	db	61	;'='
  1262  00FEC6  33                 	db	51	;'3'
  1263  00FEC7  2C                 	db	44
  1264  00FEC8  31                 	db	49	;'1'
  1265  00FEC9  2C                 	db	44
  1266  00FECA  22                 	db	34
  1267  00FECB  41                 	db	65	;'A'
  1268  00FECC  50                 	db	80	;'P'
  1269  00FECD  4E                 	db	78	;'N'
  1270  00FECE  22                 	db	34
  1271  00FECF  2C                 	db	44
  1272  00FED0  22                 	db	34
  1273  00FED1  00                 	db	0
  1274  00FED2                     STR_23:
  1275  00FED2  46                 	db	70	;'F'
  1276  00FED3  72                 	db	114	;'r'
  1277  00FED4  61                 	db	97	;'a'
  1278  00FED5  6D                 	db	109	;'m'
  1279  00FED6  65                 	db	101	;'e'
  1280  00FED7  77                 	db	119	;'w'
  1281  00FED8  6F                 	db	111	;'o'
  1282  00FED9  72                 	db	114	;'r'
  1283  00FEDA  6B                 	db	107	;'k'
  1284  00FEDB  20                 	db	32
  1285  00FEDC  56                 	db	86	;'V'
  1286  00FEDD  65                 	db	101	;'e'
  1287  00FEDE  72                 	db	114	;'r'
  1288  00FEDF  73                 	db	115	;'s'
  1289  00FEE0  69                 	db	105	;'i'
  1290  00FEE1  6F                 	db	111	;'o'
  1291  00FEE2  6E                 	db	110	;'n'
  1292  00FEE3  3A                 	db	58	;':'
  1293  00FEE4  20                 	db	32
  1294  00FEE5  00                 	db	0
  1295  00FEE6                     STR_15:
  1296  00FEE6  41                 	db	65	;'A'
  1297  00FEE7  54                 	db	84	;'T'
  1298  00FEE8  2B                 	db	43
  1299  00FEE9  48                 	db	72	;'H'
  1300  00FEEA  54                 	db	84	;'T'
  1301  00FEEB  54                 	db	84	;'T'
  1302  00FEEC  50                 	db	80	;'P'
  1303  00FEED  50                 	db	80	;'P'
  1304  00FEEE  41                 	db	65	;'A'
  1305  00FEEF  52                 	db	82	;'R'
  1306  00FEF0  41                 	db	65	;'A'
  1307  00FEF1  3D                 	db	61	;'='
  1308  00FEF2  22                 	db	34
  1309  00FEF3  55                 	db	85	;'U'
  1310  00FEF4  52                 	db	82	;'R'
  1311  00FEF5  4C                 	db	76	;'L'
  1312  00FEF6  22                 	db	34
  1313  00FEF7  2C                 	db	44
  1314  00FEF8  22                 	db	34
  1315  00FEF9  00                 	db	0
  1316  00FEFA                     STR_30:
  1317  00FEFA  41                 	db	65	;'A'
  1318  00FEFB  54                 	db	84	;'T'
  1319  00FEFC  2B                 	db	43
  1320  00FEFD  43                 	db	67	;'C'
  1321  00FEFE  4D                 	db	77	;'M'
  1322  00FEFF  47                 	db	71	;'G'
  1323  00FF00  44                 	db	68	;'D'
  1324  00FF01  41                 	db	65	;'A'
  1325  00FF02  3D                 	db	61	;'='
  1326  00FF03  44                 	db	68	;'D'
  1327  00FF04  45                 	db	69	;'E'
  1328  00FF05  4C                 	db	76	;'L'
  1329  00FF06  20                 	db	32
  1330  00FF07  41                 	db	65	;'A'
  1331  00FF08  4C                 	db	76	;'L'
  1332  00FF09  4C                 	db	76	;'L'
  1333  00FF0A  0D                 	db	13
  1334  00FF0B  0A                 	db	10
  1335  00FF0C  00                 	db	0
  1336  00FF0D                     STR_27:
  1337  00FF0D  42                 	db	66	;'B'
  1338  00FF0E  75                 	db	117	;'u'
  1339  00FF0F  69                 	db	105	;'i'
  1340  00FF10  6C                 	db	108	;'l'
  1341  00FF11  64                 	db	100	;'d'
  1342  00FF12  20                 	db	32
  1343  00FF13  44                 	db	68	;'D'
  1344  00FF14  61                 	db	97	;'a'
  1345  00FF15  74                 	db	116	;'t'
  1346  00FF16  65                 	db	101	;'e'
  1347  00FF17  3A                 	db	58	;':'
  1348  00FF18  20                 	db	32
  1349  00FF19  25                 	db	37
  1350  00FF1A  73                 	db	115	;'s'
  1351  00FF1B  0D                 	db	13
  1352  00FF1C  0A                 	db	10
  1353  00FF1D  00                 	db	0
  1354  00FF1E                     STR_16:
  1355  00FF1E  41                 	db	65	;'A'
  1356  00FF1F  54                 	db	84	;'T'
  1357  00FF20  2B                 	db	43
  1358  00FF21  48                 	db	72	;'H'
  1359  00FF22  54                 	db	84	;'T'
  1360  00FF23  54                 	db	84	;'T'
  1361  00FF24  50                 	db	80	;'P'
  1362  00FF25  41                 	db	65	;'A'
  1363  00FF26  43                 	db	67	;'C'
  1364  00FF27  54                 	db	84	;'T'
  1365  00FF28  49                 	db	73	;'I'
  1366  00FF29  4F                 	db	79	;'O'
  1367  00FF2A  4E                 	db	78	;'N'
  1368  00FF2B  3D                 	db	61	;'='
  1369  00FF2C  30                 	db	48	;'0'
  1370  00FF2D  0D                 	db	13
  1371  00FF2E  00                 	db	0
  1372  00FF2F                     STR_29:
  1373  00FF2F  41                 	db	65	;'A'
  1374  00FF30  54                 	db	84	;'T'
  1375  00FF31  2B                 	db	43
  1376  00FF32  43                 	db	67	;'C'
  1377  00FF33  4D                 	db	77	;'M'
  1378  00FF34  47                 	db	71	;'G'
  1379  00FF35  44                 	db	68	;'D'
  1380  00FF36  3D                 	db	61	;'='
  1381  00FF37  31                 	db	49	;'1'
  1382  00FF38  2C                 	db	44
  1383  00FF39  30                 	db	48	;'0'
  1384  00FF3A  0D                 	db	13
  1385  00FF3B  0A                 	db	10
  1386  00FF3C  00                 	db	0
  1387  00FF3D  41                 	db	65	;'A'
  1388  00FF3E  54                 	db	84	;'T'
  1389  00FF3F  2B                 	db	43
  1390  00FF40  48                 	db	72	;'H'
  1391  00FF41  54                 	db	84	;'T'
  1392  00FF42  54                 	db	84	;'T'
  1393  00FF43  50                 	db	80	;'P'
  1394  00FF44  53                 	db	83	;'S'
  1395  00FF45  53                 	db	83	;'S'
  1396  00FF46  4C                 	db	76	;'L'
  1397  00FF47  3D                 	db	61	;'='
  1398  00FF48  30                 	db	48	;'0'
  1399  00FF49  0D                 	db	13
  1400  00FF4A  00                 	db	0
  1401  00FF4B                     STR_10:
  1402  00FF4B  41                 	db	65	;'A'
  1403  00FF4C  54                 	db	84	;'T'
  1404  00FF4D  2B                 	db	43
  1405  00FF4E  53                 	db	83	;'S'
  1406  00FF4F  41                 	db	65	;'A'
  1407  00FF50  50                 	db	80	;'P'
  1408  00FF51  42                 	db	66	;'B'
  1409  00FF52  52                 	db	82	;'R'
  1410  00FF53  3D                 	db	61	;'='
  1411  00FF54  31                 	db	49	;'1'
  1412  00FF55  2C                 	db	44
  1413  00FF56  31                 	db	49	;'1'
  1414  00FF57  0D                 	db	13
  1415  00FF58  00                 	db	0
  1416  00FF59                     STR_11:
  1417  00FF59  41                 	db	65	;'A'
  1418  00FF5A  54                 	db	84	;'T'
  1419  00FF5B  2B                 	db	43
  1420  00FF5C  53                 	db	83	;'S'
  1421  00FF5D  41                 	db	65	;'A'
  1422  00FF5E  50                 	db	80	;'P'
  1423  00FF5F  42                 	db	66	;'B'
  1424  00FF60  52                 	db	82	;'R'
  1425  00FF61  3D                 	db	61	;'='
  1426  00FF62  32                 	db	50	;'2'
  1427  00FF63  2C                 	db	44
  1428  00FF64  31                 	db	49	;'1'
  1429  00FF65  0D                 	db	13
  1430  00FF66  00                 	db	0
  1431  00FF67                     STR_13:
  1432  00FF67  41                 	db	65	;'A'
  1433  00FF68  54                 	db	84	;'T'
  1434  00FF69  2B                 	db	43
  1435  00FF6A  48                 	db	72	;'H'
  1436  00FF6B  54                 	db	84	;'T'
  1437  00FF6C  54                 	db	84	;'T'
  1438  00FF6D  50                 	db	80	;'P'
  1439  00FF6E  53                 	db	83	;'S'
  1440  00FF6F  53                 	db	83	;'S'
  1441  00FF70  4C                 	db	76	;'L'
  1442  00FF71  3D                 	db	61	;'='
  1443  00FF72  31                 	db	49	;'1'
  1444  00FF73  0D                 	db	13
  1445  00FF74  00                 	db	0
  1446  00FF75                     STR_2:
  1447  00FF75  41                 	db	65	;'A'
  1448  00FF76  54                 	db	84	;'T'
  1449  00FF77  2B                 	db	43
  1450  00FF78  49                 	db	73	;'I'
  1451  00FF79  50                 	db	80	;'P'
  1452  00FF7A  52                 	db	82	;'R'
  1453  00FF7B  3D                 	db	61	;'='
  1454  00FF7C  39                 	db	57	;'9'
  1455  00FF7D  36                 	db	54	;'6'
  1456  00FF7E  30                 	db	48	;'0'
  1457  00FF7F  30                 	db	48	;'0'
  1458  00FF80  0D                 	db	13
  1459  00FF81  0A                 	db	10
  1460  00FF82  00                 	db	0
  1461  00FF83                     STR_17:
  1462  00FF83  41                 	db	65	;'A'
  1463  00FF84  54                 	db	84	;'T'
  1464  00FF85  2B                 	db	43
  1465  00FF86  48                 	db	72	;'H'
  1466  00FF87  54                 	db	84	;'T'
  1467  00FF88  54                 	db	84	;'T'
  1468  00FF89  50                 	db	80	;'P'
  1469  00FF8A  52                 	db	82	;'R'
  1470  00FF8B  45                 	db	69	;'E'
  1471  00FF8C  41                 	db	65	;'A'
  1472  00FF8D  44                 	db	68	;'D'
  1473  00FF8E  0D                 	db	13
  1474  00FF8F  00                 	db	0
  1475  00FF90                     STR_18:
  1476  00FF90  41                 	db	65	;'A'
  1477  00FF91  54                 	db	84	;'T'
  1478  00FF92  2B                 	db	43
  1479  00FF93  48                 	db	72	;'H'
  1480  00FF94  54                 	db	84	;'T'
  1481  00FF95  54                 	db	84	;'T'
  1482  00FF96  50                 	db	80	;'P'
  1483  00FF97  54                 	db	84	;'T'
  1484  00FF98  45                 	db	69	;'E'
  1485  00FF99  52                 	db	82	;'R'
  1486  00FF9A  4D                 	db	77	;'M'
  1487  00FF9B  0D                 	db	13
  1488  00FF9C  00                 	db	0
  1489  00FF9D                     STR_12:
  1490  00FF9D  41                 	db	65	;'A'
  1491  00FF9E  54                 	db	84	;'T'
  1492  00FF9F  2B                 	db	43
  1493  00FFA0  48                 	db	72	;'H'
  1494  00FFA1  54                 	db	84	;'T'
  1495  00FFA2  54                 	db	84	;'T'
  1496  00FFA3  50                 	db	80	;'P'
  1497  00FFA4  49                 	db	73	;'I'
  1498  00FFA5  4E                 	db	78	;'N'
  1499  00FFA6  49                 	db	73	;'I'
  1500  00FFA7  54                 	db	84	;'T'
  1501  00FFA8  0D                 	db	13
  1502  00FFA9  00                 	db	0
  1503  00FFAA                     STR_31:
  1504  00FFAA  41                 	db	65	;'A'
  1505  00FFAB  54                 	db	84	;'T'
  1506  00FFAC  2B                 	db	43
  1507  00FFAD  43                 	db	67	;'C'
  1508  00FFAE  4C                 	db	76	;'L'
  1509  00FFAF  49                 	db	73	;'I'
  1510  00FFB0  50                 	db	80	;'P'
  1511  00FFB1  3D                 	db	61	;'='
  1512  00FFB2  31                 	db	49	;'1'
  1513  00FFB3  0D                 	db	13
  1514  00FFB4  0A                 	db	10
  1515  00FFB5  00                 	db	0
  1516  00FFB6                     STR_28:
  1517  00FFB6  4D                 	db	77	;'M'
  1518  00FFB7  61                 	db	97	;'a'
  1519  00FFB8  72                 	db	114	;'r'
  1520  00FFB9  20                 	db	32
  1521  00FFBA  32                 	db	50	;'2'
  1522  00FFBB  37                 	db	55	;'7'
  1523  00FFBC  20                 	db	32
  1524  00FFBD  32                 	db	50	;'2'
  1525  00FFBE  30                 	db	48	;'0'
  1526  00FFBF  32                 	db	50	;'2'
  1527  00FFC0  32                 	db	50	;'2'
  1528  00FFC1  00                 	db	0
  1529  00FFC2                     STR_4:
  1530  00FFC2  41                 	db	65	;'A'
  1531  00FFC3  54                 	db	84	;'T'
  1532  00FFC4  2B                 	db	43
  1533  00FFC5  43                 	db	67	;'C'
  1534  00FFC6  4D                 	db	77	;'M'
  1535  00FFC7  47                 	db	71	;'G'
  1536  00FFC8  52                 	db	82	;'R'
  1537  00FFC9  3D                 	db	61	;'='
  1538  00FFCA  31                 	db	49	;'1'
  1539  00FFCB  0D                 	db	13
  1540  00FFCC  0A                 	db	10
  1541  00FFCD  00                 	db	0
  1542  00FFCE                     STR_5:
  1543  00FFCE  41                 	db	65	;'A'
  1544  00FFCF  54                 	db	84	;'T'
  1545  00FFD0  2B                 	db	43
  1546  00FFD1  43                 	db	67	;'C'
  1547  00FFD2  4D                 	db	77	;'M'
  1548  00FFD3  47                 	db	71	;'G'
  1549  00FFD4  53                 	db	83	;'S'
  1550  00FFD5  3D                 	db	61	;'='
  1551  00FFD6  22                 	db	34
  1552  00FFD7  00                 	db	0
  1553  00FFD8                     STR_32:
  1554  00FFD8  28                 	db	40
  1555  00FFD9  6E                 	db	110	;'n'
  1556  00FFDA  75                 	db	117	;'u'
  1557  00FFDB  6C                 	db	108	;'l'
  1558  00FFDC  6C                 	db	108	;'l'
  1559  00FFDD  29                 	db	41
  1560  00FFDE  00                 	db	0
  1561  00FFDF                     STR_3:
  1562  00FFDF  41                 	db	65	;'A'
  1563  00FFE0  54                 	db	84	;'T'
  1564  00FFE1  45                 	db	69	;'E'
  1565  00FFE2  30                 	db	48	;'0'
  1566  00FFE3  0D                 	db	13
  1567  00FFE4  0A                 	db	10
  1568  00FFE5  00                 	db	0
  1569  00FFE6                     STR_1:
  1570  00FFE6  41                 	db	65	;'A'
  1571  00FFE7  54                 	db	84	;'T'
  1572  00FFE8  0D                 	db	13
  1573  00FFE9  0A                 	db	10
  1574  00FFEA  00                 	db	0
  1575  00FFEB  41                 	db	65	;'A'
  1576  00FFEC  54                 	db	84	;'T'
  1577  00FFED  41                 	db	65	;'A'
  1578  00FFEE  0D                 	db	13
  1579  00FFEF  00                 	db	0
  1580  00FFF0                     STR_6:
  1581  00FFF0  41                 	db	65	;'A'
  1582  00FFF1  54                 	db	84	;'T'
  1583  00FFF2  48                 	db	72	;'H'
  1584  00FFF3  0D                 	db	13
  1585  00FFF4  00                 	db	0
  1586  00FFF5                     STR_24:
  1587  00FFF5  2E                 	db	46
  1588  00FFF6  00                 	db	0
  1589  0000                     
  1590                           ; #config settings
  1591  00FFF7  00                 	db	0	; dummy byte at the end
  1592  0000                     
  1593                           	psect	cinit
  1594  0022DE                     __pcinit:
  1595                           	opt stack 0
  1596  0022DE                     start_initialization:
  1597                           	opt stack 0
  1598  0022DE                     __initialization:
  1599                           	opt stack 0
  1600                           
  1601                           ; Initialize objects allocated to BANK5 (80 bytes)
  1602                           ; load TBLPTR registers with __pidataBANK5
  1603  0022DE  0E4A               	movlw	low __pidataBANK5
  1604  0022E0  6EF6               	movwf	tblptrl,c
  1605  0022E2  0E5D               	movlw	high __pidataBANK5
  1606  0022E4  6EF7               	movwf	tblptrh,c
  1607  0022E6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1608  0022E8  6EF8               	movwf	tblptru,c
  1609  0022EA  EE05  F0A4         	lfsr	0,__pdataBANK5
  1610  0022EE  EE10 F050          	lfsr	1,80
  1611  0022F2                     copy_data0:
  1612  0022F2  0009               	tblrd		*+
  1613  0022F4  CFF5 FFEE          	movff	tablat,postinc0
  1614  0022F8  50E5               	movf	postdec1,w,c
  1615  0022FA  50E1               	movf	fsr1l,w,c
  1616  0022FC  E1FA               	bnz	copy_data0
  1617                           
  1618                           ; Initialize objects allocated to BANK3 (60 bytes)
  1619                           ; load TBLPTR registers with __pidataBANK3
  1620  0022FE  0ED8               	movlw	low __pidataBANK3
  1621  002300  6EF6               	movwf	tblptrl,c
  1622  002302  0E62               	movlw	high __pidataBANK3
  1623  002304  6EF7               	movwf	tblptrh,c
  1624  002306  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1625  002308  6EF8               	movwf	tblptru,c
  1626  00230A  EE03  F0C4         	lfsr	0,__pdataBANK3
  1627  00230E  EE10 F03C          	lfsr	1,60
  1628  002312                     copy_data1:
  1629  002312  0009               	tblrd		*+
  1630  002314  CFF5 FFEE          	movff	tablat,postinc0
  1631  002318  50E5               	movf	postdec1,w,c
  1632  00231A  50E1               	movf	fsr1l,w,c
  1633  00231C  E1FA               	bnz	copy_data1
  1634                           
  1635                           ; Initialize objects allocated to BANK2 (13 bytes)
  1636                           ; load TBLPTR registers with __pidataBANK2
  1637  00231E  0EE6               	movlw	low __pidataBANK2
  1638  002320  6EF6               	movwf	tblptrl,c
  1639  002322  0E6A               	movlw	high __pidataBANK2
  1640  002324  6EF7               	movwf	tblptrh,c
  1641  002326  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1642  002328  6EF8               	movwf	tblptru,c
  1643  00232A  EE02  F0F3         	lfsr	0,__pdataBANK2
  1644  00232E  EE10 F00D          	lfsr	1,13
  1645  002332                     copy_data2:
  1646  002332  0009               	tblrd		*+
  1647  002334  CFF5 FFEE          	movff	tablat,postinc0
  1648  002338  50E5               	movf	postdec1,w,c
  1649  00233A  50E1               	movf	fsr1l,w,c
  1650  00233C  E1FA               	bnz	copy_data2
  1651                           
  1652                           ; Initialize objects allocated to BANK1 (2 bytes)
  1653                           ; load TBLPTR registers with __pidataBANK1
  1654  00233E  0E7A               	movlw	low __pidataBANK1
  1655  002340  6EF6               	movwf	tblptrl,c
  1656  002342  0E6B               	movlw	high __pidataBANK1
  1657  002344  6EF7               	movwf	tblptrh,c
  1658  002346  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1659  002348  6EF8               	movwf	tblptru,c
  1660  00234A  0009               	tblrd		*+	;fetch initializer
  1661  00234C  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1662  002350  0009               	tblrd		*+	;fetch initializer
  1663  002352  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1664                           
  1665                           ; Initialize objects allocated to BANK4 (10 bytes)
  1666                           ; load TBLPTR registers with __pidataBANK4
  1667  002356  0E0C               	movlw	low __pidataBANK4
  1668  002358  6EF6               	movwf	tblptrl,c
  1669  00235A  0E6B               	movlw	high __pidataBANK4
  1670  00235C  6EF7               	movwf	tblptrh,c
  1671  00235E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1672  002360  6EF8               	movwf	tblptru,c
  1673  002362  EE04  F0ED         	lfsr	0,__pdataBANK4
  1674  002366  EE10 F00A          	lfsr	1,10
  1675  00236A                     copy_data3:
  1676  00236A  0009               	tblrd		*+
  1677  00236C  CFF5 FFEE          	movff	tablat,postinc0
  1678  002370  50E5               	movf	postdec1,w,c
  1679  002372  50E1               	movf	fsr1l,w,c
  1680  002374  E1FA               	bnz	copy_data3
  1681                           
  1682                           ; Initialize objects allocated to BANK0 (2 bytes)
  1683                           ; load TBLPTR registers with __pidataBANK0
  1684  002376  0E78               	movlw	low __pidataBANK0
  1685  002378  6EF6               	movwf	tblptrl,c
  1686  00237A  0E6B               	movlw	high __pidataBANK0
  1687  00237C  6EF7               	movwf	tblptrh,c
  1688  00237E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1689  002380  6EF8               	movwf	tblptru,c
  1690  002382  0009               	tblrd		*+	;fetch initializer
  1691  002384  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1692  002388  0009               	tblrd		*+	;fetch initializer
  1693  00238A  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1694                           
  1695                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1696  00238E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1697  002392  EE13 F020          	lfsr	1,800
  1698  002396                     clear_0:
  1699  002396  6AEE               	clrf	postinc0,c
  1700  002398  50E5               	movf	postdec1,w,c
  1701  00239A  50E1               	movf	fsr1l,w,c
  1702  00239C  E1FC               	bnz	clear_0
  1703  00239E  50E2               	movf	fsr1h,w,c
  1704  0023A0  E1FA               	bnz	clear_0
  1705                           
  1706                           ; Clear objects allocated to BANK9 (200 bytes)
  1707  0023A2  EE09  F000         	lfsr	0,__pbssBANK9
  1708  0023A6  0EC8               	movlw	200
  1709  0023A8                     clear_1:
  1710  0023A8  6AEE               	clrf	postinc0,c
  1711  0023AA  06E8               	decf	wreg,f,c
  1712  0023AC  E1FD               	bnz	clear_1
  1713                           
  1714                           ; Clear objects allocated to BANK8 (200 bytes)
  1715  0023AE  EE08  F000         	lfsr	0,__pbssBANK8
  1716  0023B2  0EC8               	movlw	200
  1717  0023B4                     clear_2:
  1718  0023B4  6AEE               	clrf	postinc0,c
  1719  0023B6  06E8               	decf	wreg,f,c
  1720  0023B8  E1FD               	bnz	clear_2
  1721                           
  1722                           ; Clear objects allocated to BANK7 (246 bytes)
  1723  0023BA  EE07  F000         	lfsr	0,__pbssBANK7
  1724  0023BE  0EF6               	movlw	246
  1725  0023C0                     clear_3:
  1726  0023C0  6AEE               	clrf	postinc0,c
  1727  0023C2  06E8               	decf	wreg,f,c
  1728  0023C4  E1FD               	bnz	clear_3
  1729                           
  1730                           ; Clear objects allocated to BANK6 (220 bytes)
  1731  0023C6  EE06  F000         	lfsr	0,__pbssBANK6
  1732  0023CA  0EDC               	movlw	220
  1733  0023CC                     clear_4:
  1734  0023CC  6AEE               	clrf	postinc0,c
  1735  0023CE  06E8               	decf	wreg,f,c
  1736  0023D0  E1FD               	bnz	clear_4
  1737                           
  1738                           ; Clear objects allocated to BANK5 (164 bytes)
  1739  0023D2  EE05  F000         	lfsr	0,__pbssBANK5
  1740  0023D6  0EA4               	movlw	164
  1741  0023D8                     clear_5:
  1742  0023D8  6AEE               	clrf	postinc0,c
  1743  0023DA  06E8               	decf	wreg,f,c
  1744  0023DC  E1FD               	bnz	clear_5
  1745                           
  1746                           ; Clear objects allocated to BANK3 (196 bytes)
  1747  0023DE  EE03  F000         	lfsr	0,__pbssBANK3
  1748  0023E2  0EC4               	movlw	196
  1749  0023E4                     clear_6:
  1750  0023E4  6AEE               	clrf	postinc0,c
  1751  0023E6  06E8               	decf	wreg,f,c
  1752  0023E8  E1FD               	bnz	clear_6
  1753                           
  1754                           ; Clear objects allocated to BANK2 (43 bytes)
  1755  0023EA  EE02  F0C8         	lfsr	0,__pbssBANK2
  1756  0023EE  0E2B               	movlw	43
  1757  0023F0                     clear_7:
  1758  0023F0  6AEE               	clrf	postinc0,c
  1759  0023F2  06E8               	decf	wreg,f,c
  1760  0023F4  E1FD               	bnz	clear_7
  1761                           
  1762                           ; Clear objects allocated to BANK1 (53 bytes)
  1763  0023F6  EE01  F0C9         	lfsr	0,__pbssBANK1
  1764  0023FA  0E35               	movlw	53
  1765  0023FC                     clear_8:
  1766  0023FC  6AEE               	clrf	postinc0,c
  1767  0023FE  06E8               	decf	wreg,f,c
  1768  002400  E1FD               	bnz	clear_8
  1769                           
  1770                           ; Clear objects allocated to BANK4 (173 bytes)
  1771  002402  EE04  F040         	lfsr	0,__pbssBANK4
  1772  002406  0EAD               	movlw	173
  1773  002408                     clear_9:
  1774  002408  6AEE               	clrf	postinc0,c
  1775  00240A  06E8               	decf	wreg,f,c
  1776  00240C  E1FD               	bnz	clear_9
  1777                           
  1778                           ; Clear objects allocated to BANK0 (49 bytes)
  1779  00240E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1780  002412  0E31               	movlw	49
  1781  002414                     clear_10:
  1782  002414  6AEE               	clrf	postinc0,c
  1783  002416  06E8               	decf	wreg,f,c
  1784  002418  E1FD               	bnz	clear_10
  1785                           
  1786                           ; Clear objects allocated to COMRAM (31 bytes)
  1787  00241A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1788  00241E  0E1F               	movlw	31
  1789  002420                     clear_11:
  1790  002420  6AEE               	clrf	postinc0,c
  1791  002422  06E8               	decf	wreg,f,c
  1792  002424  E1FD               	bnz	clear_11
  1793  002426                     end_of_initialization:
  1794                           	opt stack 0
  1795  002426                     __end_of__initialization:
  1796                           	opt stack 0
  1797  002426  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1798  002428  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1799  00242A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1800  00242C  6EF8               	movwf	tblptru,c
  1801  00242E  0100               	movlb	0
  1802  002430  EF7A  F035         	goto	_main	;jump to C main() function
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1h	equ	0xFE2
  1811                           fsr1l	equ	0xFE1
  1812                           
  1813                           	psect	bssCOMRAM
  1814  000023                     __pbssCOMRAM:
  1815                           	opt stack 0
  1816  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1817                           	opt stack 0
  1818  000023                     	ds	2
  1819  000025                     _USBDeferOUTDataStagePackets:
  1820                           	opt stack 0
  1821  000025                     	ds	1
  1822  000026                     _USBDeferINDataStagePackets:
  1823                           	opt stack 0
  1824  000026                     	ds	1
  1825  000027                     _USBStatusStageEnabledFlag2:
  1826                           	opt stack 0
  1827  000027                     	ds	1
  1828  000028                     _USBStatusStageEnabledFlag1:
  1829                           	opt stack 0
  1830  000028                     	ds	1
  1831  000029                     _USBStatusStageTimeoutCounter:
  1832                           	opt stack 0
  1833  000029                     	ds	1
  1834  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1835                           	opt stack 0
  1836  00002A                     	ds	1
  1837  00002B                     _ComChecCompleted:
  1838                           	opt stack 0
  1839  00002B                     	ds	1
  1840  00002C                     Uart_Uart1RxIsr@UartRxData:
  1841                           	opt stack 0
  1842  00002C                     	ds	1
  1843  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1844                           	opt stack 0
  1845  00002D                     	ds	1
  1846  00002E                     MdmCntSm@MdmCntState:
  1847                           	opt stack 0
  1848  00002E                     	ds	1
  1849  00002F                     RiSm@MdmDrvState:
  1850                           	opt stack 0
  1851  00002F                     	ds	1
  1852  000030                     _Mmd_RingIndicator:
  1853                           	opt stack 0
  1854  000030                     	ds	1
  1855  000031                     I2c_ReadData@ReadStatus:
  1856                           	opt stack 0
  1857  000031                     	ds	1
  1858  000032                     I2c_ReadData@TentativeCounter:
  1859                           	opt stack 0
  1860  000032                     	ds	1
  1861  000033                     I2c_ReadData@DataCounter:
  1862                           	opt stack 0
  1863  000033                     	ds	1
  1864  000034                     I2c_ReadData@I2cReadState:
  1865                           	opt stack 0
  1866  000034                     	ds	1
  1867  000035                     I2c_WriteData@WriteStatus:
  1868                           	opt stack 0
  1869  000035                     	ds	1
  1870  000036                     I2c_WriteData@TentativeCounter:
  1871                           	opt stack 0
  1872  000036                     	ds	1
  1873  000037                     I2c_WriteData@I2cNextState:
  1874                           	opt stack 0
  1875  000037                     	ds	1
  1876  000038                     I2c_WriteData@I2cWriteState:
  1877                           	opt stack 0
  1878  000038                     	ds	1
  1879  000039                     _I2cReadDataEvt:
  1880                           	opt stack 0
  1881  000039                     	ds	1
  1882  00003A                     _NewStringMdmTerminal:
  1883                           	opt stack 0
  1884  00003A                     	ds	1
  1885  00003B                     _NewMdmEvtParserRequest:
  1886                           	opt stack 0
  1887  00003B                     	ds	1
  1888  00003C                     _NewStringReceived:
  1889                           	opt stack 0
  1890  00003C                     	ds	1
  1891  00003D                     _MdmResetRequest:
  1892                           	opt stack 0
  1893  00003D                     	ds	1
  1894  00003E                     _CallClosedEvent:
  1895                           	opt stack 0
  1896  00003E                     	ds	1
  1897  00003F                     _IncomingCallEvent:
  1898                           	opt stack 0
  1899  00003F                     	ds	1
  1900  000040                     _NewSmsEvent:
  1901                           	opt stack 0
  1902  000040                     	ds	1
  1903  000041                     _ActivateRiDetection:
  1904                           	opt stack 0
  1905  000041                     	ds	1
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	bssBANK0
  1917  0000B0                     __pbssBANK0:
  1918                           	opt stack 0
  1919  0000B0                     _inPipes:
  1920                           	opt stack 0
  1921  0000B0                     	ds	6
  1922  0000B6                     _pBDTEntryIn:
  1923                           	opt stack 0
  1924  0000B6                     	ds	6
  1925  0000BC                     _CDCDataOutHandle:
  1926                           	opt stack 0
  1927  0000BC                     	ds	2
  1928  0000BE                     _pBDTEntryEP0OutNext:
  1929                           	opt stack 0
  1930  0000BE                     	ds	2
  1931  0000C0                     _pBDTEntryEP0OutCurrent:
  1932                           	opt stack 0
  1933  0000C0                     	ds	2
  1934  0000C2                     _RxLen:
  1935                           	opt stack 0
  1936  0000C2                     	ds	2
  1937  0000C4                     findEmptySpot@currentState:
  1938                           	opt stack 0
  1939  0000C4                     	ds	1
  1940  0000C5                     isNumberInMemory@currentState:
  1941                           	opt stack 0
  1942  0000C5                     	ds	1
  1943  0000C6                     Eeprom_Reset@memoryAddress:
  1944                           	opt stack 0
  1945  0000C6                     	ds	1
  1946  0000C7                     _cdc_tx_len:
  1947                           	opt stack 0
  1948  0000C7                     	ds	1
  1949  0000C8                     _cdc_trf_state:
  1950                           	opt stack 0
  1951  0000C8                     	ds	1
  1952  0000C9                     _cdc_rx_len:
  1953                           	opt stack 0
  1954  0000C9                     	ds	1
  1955  0000CA                     _USBDeferStatusStagePacket:
  1956                           	opt stack 0
  1957  0000CA                     	ds	1
  1958  0000CB                     _endpoint_number:
  1959                           	opt stack 0
  1960  0000CB                     	ds	1
  1961  0000CC                     _controlTransferState:
  1962                           	opt stack 0
  1963  0000CC                     	ds	1
  1964  0000CD                     _shortPacketStatus:
  1965                           	opt stack 0
  1966  0000CD                     	ds	1
  1967  0000CE                     _USBDeviceState:
  1968                           	opt stack 0
  1969  0000CE                     	ds	1
  1970  0000CF                     _I2cComSts:
  1971                           	opt stack 0
  1972  0000CF                     	ds	1
  1973  0000D0                     HttpGetMethod@GetMethodNextState:
  1974                           	opt stack 0
  1975  0000D0                     	ds	1
  1976  0000D1                     _MdmStatus:
  1977                           	opt stack 0
  1978  0000D1                     	ds	1
  1979  0000D2                     _PhoneNumbLen:
  1980                           	opt stack 0
  1981  0000D2                     	ds	1
  1982  0000D3                     _SmsLen:
  1983                           	opt stack 0
  1984  0000D3                     	ds	1
  1985  0000D4                     _SystemState:
  1986                           	opt stack 0
  1987  0000D4                     	ds	1
  1988  0000D5                     _USTATcopy:
  1989                           	opt stack 0
  1990  0000D5                     	ds	1
  1991  0000D6                     _USBActiveConfiguration:
  1992                           	opt stack 0
  1993  0000D6                     	ds	1
  1994  0000D7                     _I2cWriteDataEvt:
  1995                           	opt stack 0
  1996  0000D7                     	ds	1
  1997  0000D8                     _GetMethod:
  1998                           	opt stack 0
  1999  0000D8                     	ds	1
  2000  0000D9                     _InitNetwork:
  2001                           	opt stack 0
  2002  0000D9                     	ds	1
  2003  0000DA                     _SmsTxtReady:
  2004                           	opt stack 0
  2005  0000DA                     	ds	1
  2006  0000DB                     _GetSmsText:
  2007                           	opt stack 0
  2008  0000DB                     	ds	1
  2009  0000DC                     _SmsEvent:
  2010                           	opt stack 0
  2011  0000DC                     	ds	1
  2012  0000DD                     _ClipEvent:
  2013                           	opt stack 0
  2014  0000DD                     	ds	1
  2015  0000DE                     _RingEvent:
  2016                           	opt stack 0
  2017  0000DE                     	ds	1
  2018  0000DF                     _SendSmsEvent:
  2019                           	opt stack 0
  2020  0000DF                     	ds	1
  2021  0000E0                     _MdmOnOffPulseRequest:
  2022                           	opt stack 0
  2023  0000E0                     	ds	1
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	dataBANK0
  2035  0000E1                     __pdataBANK0:
  2036                           	opt stack 0
  2037  0000E1                     findEmptySpot@currentPosition:
  2038                           	opt stack 0
  2039  0000E1                     	ds	1
  2040  0000E2                     isNumberInMemory@currentPosition:
  2041                           	opt stack 0
  2042  0000E2                     	ds	1
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           
  2053                           	psect	bssBANK1
  2054  0001C9                     __pbssBANK1:
  2055                           	opt stack 0
  2056  0001C9                     _outPipes:
  2057                           	opt stack 0
  2058  0001C9                     	ds	8
  2059  0001D1                     _CDCDataInHandle:
  2060                           	opt stack 0
  2061  0001D1                     	ds	2
  2062  0001D3                     triggerCmdFsm@currentState:
  2063                           	opt stack 0
  2064  0001D3                     	ds	1
  2065  0001D4                     delCmdFsm@currentState:
  2066                           	opt stack 0
  2067  0001D4                     	ds	1
  2068  0001D5                     addCmdFsm@currentState:
  2069                           	opt stack 0
  2070  0001D5                     	ds	1
  2071  0001D6                     initFsm@currentState:
  2072                           	opt stack 0
  2073  0001D6                     	ds	1
  2074  0001D7                     initEeprom@currentState:
  2075                           	opt stack 0
  2076  0001D7                     	ds	1
  2077  0001D8                     initGprsModem@currentState:
  2078                           	opt stack 0
  2079  0001D8                     	ds	1
  2080  0001D9                     MyApp_Task@currentState:
  2081                           	opt stack 0
  2082  0001D9                     	ds	1
  2083  0001DA                     GsmGprsTerminal@SMS:
  2084                           	opt stack 0
  2085  0001DA                     	ds	1
  2086  0001DB                     	ds	1
  2087  0001DC                     _control_signal_bitmap:
  2088                           	opt stack 0
  2089  0001DC                     	ds	1
  2090  0001DD                     _cdc_mem_type:
  2091                           	opt stack 0
  2092  0001DD                     	ds	1
  2093  0001DE                     _USBTicksSinceSuspendEnd:
  2094                           	opt stack 0
  2095  0001DE                     	ds	1
  2096  0001DF                     _BothEP0OutUOWNsSet:
  2097                           	opt stack 0
  2098  0001DF                     	ds	1
  2099  0001E0                     _USBBusIsSuspended:
  2100                           	opt stack 0
  2101  0001E0                     	ds	1
  2102  0001E1                     _RemoteWakeup:
  2103                           	opt stack 0
  2104  0001E1                     	ds	1
  2105  0001E2                     I2cSlv_QueryI2cData@Ret:
  2106                           	opt stack 0
  2107  0001E2                     	ds	1
  2108  0001E3                     I2cSlv_QueryI2cData@I2cOpState:
  2109                           	opt stack 0
  2110  0001E3                     	ds	1
  2111  0001E4                     I2cSendMsgSm@I2cComState:
  2112                           	opt stack 0
  2113  0001E4                     	ds	1
  2114  0001E5                     _I2cBusStatus:
  2115                           	opt stack 0
  2116  0001E5                     	ds	1
  2117  0001E6                     HttpGetMethod@GetMOutSts:
  2118                           	opt stack 0
  2119  0001E6                     	ds	1
  2120  0001E7                     HttpGetMethod@GetMethodState:
  2121                           	opt stack 0
  2122  0001E7                     	ds	1
  2123  0001E8                     InitGprsNetwork@GprsNetInitState:
  2124                           	opt stack 0
  2125  0001E8                     	ds	1
  2126  0001E9                     _PostMethod:
  2127                           	opt stack 0
  2128  0001E9                     	ds	1
  2129  0001EA                     _HttpGetMethodSts:
  2130                           	opt stack 0
  2131  0001EA                     	ds	1
  2132  0001EB                     _GprsNetworkSts:
  2133                           	opt stack 0
  2134  0001EB                     	ds	1
  2135  0001EC                     _ApnLenLocal:
  2136                           	opt stack 0
  2137  0001EC                     	ds	1
  2138  0001ED                     SendSmsSm@SendSms_NextState:
  2139                           	opt stack 0
  2140  0001ED                     	ds	1
  2141  0001EE                     SendSmsSm@SendSms_State:
  2142                           	opt stack 0
  2143  0001EE                     	ds	1
  2144  0001EF                     GetSmsSm@GetSmsState:
  2145                           	opt stack 0
  2146  0001EF                     	ds	1
  2147  0001F0                     ConfigureModem@NextState:
  2148                           	opt stack 0
  2149  0001F0                     	ds	1
  2150  0001F1                     ConfigureModem@MdmConfigState:
  2151                           	opt stack 0
  2152  0001F1                     	ds	1
  2153  0001F2                     TurnOnModem@TurnOnMdmState:
  2154                           	opt stack 0
  2155  0001F2                     	ds	1
  2156  0001F3                     CheckModem@CheckMdmSts:
  2157                           	opt stack 0
  2158  0001F3                     	ds	1
  2159  0001F4                     _AlarmEvent:
  2160                           	opt stack 0
  2161  0001F4                     	ds	1
  2162  0001F5                     _Led3OutSts:
  2163                           	opt stack 0
  2164  0001F5                     	ds	1
  2165  0001F6                     _Led3Sts:
  2166                           	opt stack 0
  2167  0001F6                     	ds	1
  2168  0001F7                     _Led2OutSts:
  2169                           	opt stack 0
  2170  0001F7                     	ds	1
  2171  0001F8                     _Led2Sts:
  2172                           	opt stack 0
  2173  0001F8                     	ds	1
  2174  0001F9                     _Led1OutSts:
  2175                           	opt stack 0
  2176  0001F9                     	ds	1
  2177  0001FA                     _Led1Sts:
  2178                           	opt stack 0
  2179  0001FA                     	ds	1
  2180  0001FB                     _ReadAddress:
  2181                           	opt stack 0
  2182  0001FB                     	ds	1
  2183  0001FC                     I2cDummyTx@DummyBuffer:
  2184                           	opt stack 0
  2185  0001FC                     	ds	1
  2186  0001FD                     _MdmStsReady:
  2187                           	opt stack 0
  2188  0001FD                     	ds	1
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           
  2199                           	psect	dataBANK1
  2200  0001FE                     __pdataBANK1:
  2201                           	opt stack 0
  2202  0001FE                     _isMemoryEmpty:
  2203                           	opt stack 0
  2204  0001FE                     	ds	1
  2205  0001FF                     InitGprsNetwork@GprsInitSts:
  2206                           	opt stack 0
  2207  0001FF                     	ds	1
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	bssBANK2
  2219  0002C8                     __pbssBANK2:
  2220                           	opt stack 0
  2221  0002C8                     _pCDCDst:
  2222                           	opt stack 0
  2223  0002C8                     	ds	3
  2224  0002CB                     _pCDCSrc:
  2225                           	opt stack 0
  2226  0002CB                     	ds	3
  2227  0002CE                     _ep_data_out:
  2228                           	opt stack 0
  2229  0002CE                     	ds	3
  2230  0002D1                     _ep_data_in:
  2231                           	opt stack 0
  2232  0002D1                     	ds	3
  2233  0002D4                     _pDst:
  2234                           	opt stack 0
  2235  0002D4                     	ds	2
  2236  0002D6                     ConfigureModem@DelayCounter:
  2237                           	opt stack 0
  2238  0002D6                     	ds	2
  2239  0002D8                     ConfigureModem@DelayValueMs:
  2240                           	opt stack 0
  2241  0002D8                     	ds	2
  2242  0002DA                     TurnOnModem@Counter:
  2243                           	opt stack 0
  2244  0002DA                     	ds	2
  2245  0002DC                     UpdateSchFlag@InterruptCounter:
  2246                           	opt stack 0
  2247  0002DC                     	ds	2
  2248  0002DE                     MdmCntSm@Counter:
  2249                           	opt stack 0
  2250  0002DE                     	ds	2
  2251  0002E0                     RiSm@Counter:
  2252                           	opt stack 0
  2253  0002E0                     	ds	2
  2254  0002E2                     _ExtInt1IsrCallback:
  2255                           	opt stack 0
  2256  0002E2                     	ds	2
  2257  0002E4                     _ExtInt0IsrCallback:
  2258                           	opt stack 0
  2259  0002E4                     	ds	2
  2260  0002E6                     _RtccIsrCallback:
  2261                           	opt stack 0
  2262  0002E6                     	ds	2
  2263  0002E8                     _Tmr4IsrCallback:
  2264                           	opt stack 0
  2265  0002E8                     	ds	2
  2266  0002EA                     _Tmr2IsrCallback:
  2267                           	opt stack 0
  2268  0002EA                     	ds	2
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     _UsbMasterPhoneNumberLen:
  2338                           	opt stack 0
  2339  000318                     	ds	2
  2340  00031A                     _ApnLocal:
  2341                           	opt stack 0
  2342  00031A                     	ds	2
  2343  00031C                     _UartConfig:
  2344                           	opt stack 0
  2345  00031C                     	ds	21
  2346  000331                     _readBuffer:
  2347                           	opt stack 0
  2348  000331                     	ds	13
  2349  00033E                     _callerNumber:
  2350                           	opt stack 0
  2351  00033E                     	ds	13
  2352  00034B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2353                           	opt stack 0
  2354  00034B                     	ds	11
  2355  000356                     _I2cConfig:
  2356                           	opt stack 0
  2357  000356                     	ds	10
  2358  000360                     _Led3Blink:
  2359                           	opt stack 0
  2360  000360                     	ds	9
  2361  000369                     _Led2Blink:
  2362                           	opt stack 0
  2363  000369                     	ds	9
  2364  000372                     _Led1Blink:
  2365                           	opt stack 0
  2366  000372                     	ds	9
  2367  00037B                     _dummy_encapsulated_cmd_response:
  2368                           	opt stack 0
  2369  00037B                     	ds	8
  2370  000383                     _line_coding:
  2371                           	opt stack 0
  2372  000383                     	ds	7
  2373  00038A                     _Led3Pulse:
  2374                           	opt stack 0
  2375  00038A                     	ds	6
  2376  000390                     _Led2Pulse:
  2377                           	opt stack 0
  2378  000390                     	ds	6
  2379  000396                     _Led1Pulse:
  2380                           	opt stack 0
  2381  000396                     	ds	6
  2382  00039C                     _I2cRxPacket:
  2383                           	opt stack 0
  2384  00039C                     	ds	6
  2385  0003A2                     _I2cTxPacket:
  2386                           	opt stack 0
  2387  0003A2                     	ds	5
  2388  0003A7                     _HttpGetDataLocal:
  2389                           	opt stack 0
  2390  0003A7                     	ds	5
  2391  0003AC                     _memoryPreamble:
  2392                           	opt stack 0
  2393  0003AC                     	ds	4
  2394  0003B0                     Terminal@Addr:
  2395                           	opt stack 0
  2396  0003B0                     	ds	4
  2397  0003B4                     Terminal@Len:
  2398                           	opt stack 0
  2399  0003B4                     	ds	4
  2400  0003B8                     _AlCfg:
  2401                           	opt stack 0
  2402  0003B8                     	ds	4
  2403  0003BC                     _RtcConfig:
  2404                           	opt stack 0
  2405  0003BC                     	ds	4
  2406  0003C0                     initGprsModem@modemCounter:
  2407                           	opt stack 0
  2408  0003C0                     	ds	2
  2409  0003C2                     _setupCallTicks:
  2410                           	opt stack 0
  2411  0003C2                     	ds	2
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           
  2422                           	psect	dataBANK3
  2423  0003C4                     __pdataBANK3:
  2424                           	opt stack 0
  2425  0003C4                     ModemEvtParser@F9114:
  2426                           	opt stack 0
  2427  0003C4                     	ds	5
  2428  0003C9                     ModemEvtParser@F9112:
  2429                           	opt stack 0
  2430  0003C9                     	ds	5
  2431  0003CE                     ModemEvtParser@F9110:
  2432                           	opt stack 0
  2433  0003CE                     	ds	4
  2434  0003D2                     triggerRelay@F9012:
  2435                           	opt stack 0
  2436  0003D2                     	ds	2
  2437  0003D4                     Term_MainSm@TermDelay:
  2438                           	opt stack 0
  2439  0003D4                     	ds	11
  2440  0003DF                     _ConnWait:
  2441                           	opt stack 0
  2442  0003DF                     	ds	11
  2443  0003EA                     SendSmsSm@SwTimer:
  2444                           	opt stack 0
  2445  0003EA                     	ds	11
  2446  0003F5                     CheckModem@Timeout:
  2447                           	opt stack 0
  2448  0003F5                     	ds	11
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           
  2459                           	psect	bssBANK4
  2460  000440                     __pbssBANK4:
  2461                           	opt stack 0
  2462  000440                     _UsbMasterPhoneNumber:
  2463                           	opt stack 0
  2464  000440                     	ds	15
  2465  00044F                     _cdc_notice:
  2466                           	opt stack 0
  2467  00044F                     	ds	10
  2468  000459                     _Rtcm_SystemDate:
  2469                           	opt stack 0
  2470  000459                     	ds	8
  2471  000461                     Term_MainSm@Data:
  2472                           	opt stack 0
  2473  000461                     	ds	50
  2474  000493                     _smsText:
  2475                           	opt stack 0
  2476  000493                     	ds	20
  2477  0004A7                     _PhoneNumber:
  2478                           	opt stack 0
  2479  0004A7                     	ds	20
  2480  0004BB                     _EepromBuffer:
  2481                           	opt stack 0
  2482  0004BB                     	ds	15
  2483  0004CA                     _receivedNumber:
  2484                           	opt stack 0
  2485  0004CA                     	ds	13
  2486  0004D7                     Terminal@SwTimer:
  2487                           	opt stack 0
  2488  0004D7                     	ds	11
  2489  0004E2                     I2cSlv_QueryI2cData@QueryTimer:
  2490                           	opt stack 0
  2491  0004E2                     	ds	11
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           
  2502                           	psect	dataBANK4
  2503  0004ED                     __pdataBANK4:
  2504                           	opt stack 0
  2505  0004ED                     ModemEvtParser@F9116:
  2506                           	opt stack 0
  2507  0004ED                     	ds	10
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1h	equ	0xFE2
  2516                           fsr1l	equ	0xFE1
  2517                           
  2518                           	psect	bssBANK5
  2519  000500                     __pbssBANK5:
  2520                           	opt stack 0
  2521  000500                     _cdc_data_rx:
  2522                           	opt stack 0
  2523  000500                     	ds	64
  2524  000540                     Terminal@TermRxBuffer:
  2525                           	opt stack 0
  2526  000540                     	ds	50
  2527  000572                     _MessageText:
  2528                           	opt stack 0
  2529  000572                     	ds	50
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           postdec1	equ	0xFE5
  2537                           fsr1h	equ	0xFE2
  2538                           fsr1l	equ	0xFE1
  2539                           
  2540                           	psect	dataBANK5
  2541  0005A4                     __pdataBANK5:
  2542                           	opt stack 0
  2543  0005A4                     _TaskTable:
  2544                           	opt stack 0
  2545  0005A4                     	ds	80
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           
  2556                           	psect	bssBANK6
  2557  000600                     __pbssBANK6:
  2558                           	opt stack 0
  2559  000600                     _OsAlarms:
  2560                           	opt stack 0
  2561  000600                     	ds	220
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           
  2572                           	psect	bssBANK7
  2573  000700                     __pbssBANK7:
  2574                           	opt stack 0
  2575  000700                     _Mdm_SmsRx:
  2576                           	opt stack 0
  2577  000700                     	ds	102
  2578  000766                     Terminal@Payload:
  2579                           	opt stack 0
  2580  000766                     	ds	80
  2581  0007B6                     _cdc_data_tx:
  2582                           	opt stack 0
  2583  0007B6                     	ds	64
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           
  2594                           	psect	bssBANK8
  2595  000800                     __pbssBANK8:
  2596                           	opt stack 0
  2597  000800                     GsmGprsTerminal@UsbBuffer:
  2598                           	opt stack 0
  2599  000800                     	ds	200
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           
  2610                           	psect	bssBANK9
  2611  000900                     __pbssBANK9:
  2612                           	opt stack 0
  2613  000900                     GsmGprsTerminal@UartBuffer:
  2614                           	opt stack 0
  2615  000900                     	ds	200
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1h	equ	0xFE2
  2624                           fsr1l	equ	0xFE1
  2625                           
  2626                           	psect	bssBIGRAMl
  2627  000AC8                     __pbssBIGRAMl:
  2628                           	opt stack 0
  2629  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2630                           	opt stack 0
  2631  000AC8                     	ds	400
  2632  000C58                     _RxBuffer:
  2633                           	opt stack 0
  2634  000C58                     	ds	400
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           
  2645                           	psect	cstackBANK10
  2646  000A00                     __pcstackBANK10:
  2647                           	opt stack 0
  2648  000A00                     Terminal@UsbRxBuffer:
  2649                           	opt stack 0
  2650                           
  2651                           ; 200 bytes @ 0x0
  2652  000A00                     	ds	200
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postdec1	equ	0xFE5
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           
  2663                           	psect	cstackBANK4
  2664  0004F7                     __pcstackBANK4:
  2665                           	opt stack 0
  2666  0004F7                     ??_InitializeTasks:
  2667  0004F7                     ??_ScheduleTasks:
  2668                           
  2669                           ; 1 bytes @ 0x0
  2670  0004F7                     	ds	2
  2671  0004F9                     InitializeTasks@ActiveTaskIndex:
  2672                           	opt stack 0
  2673                           
  2674                           ; 1 bytes @ 0x2
  2675  0004F9                     	ds	2
  2676  0004FB                     ScheduleTasks@ActiveTaskIndex:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x4
  2680  0004FB                     	ds	1
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           
  2691                           	psect	cstackBANK2
  2692  000200                     __pcstackBANK2:
  2693                           	opt stack 0
  2694  000200                     Terminal@UsbTxBuffer:
  2695                           	opt stack 0
  2696                           
  2697                           ; 200 bytes @ 0x0
  2698  000200                     	ds	200
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           
  2709                           	psect	cstackBANK1
  2710  000100                     __pcstackBANK1:
  2711                           	opt stack 0
  2712  000100                     initEeprom@addressToRead:
  2713                           	opt stack 0
  2714  000100                     isNumberInMemory@phoneNumber:
  2715                           	opt stack 0
  2716  000100                     isMasterNumber@phoneNumber:
  2717                           	opt stack 0
  2718  000100                     findEmptySpot@positionInMemory:
  2719                           	opt stack 0
  2720  000100                     SendSmsSm@UartMessage:
  2721                           	opt stack 0
  2722  000100                     InitGprsNetwork@UartMessage:
  2723                           	opt stack 0
  2724  000100                     Terminal@TermTxBuffer:
  2725                           	opt stack 0
  2726  000100                     HttpGetMethod@UartMessage:
  2727                           	opt stack 0
  2728                           
  2729                           ; 200 bytes @ 0x0
  2730  000100                     	ds	1
  2731  000101                     initEeprom@memoryOpResult:
  2732                           	opt stack 0
  2733                           
  2734                           ; 1 bytes @ 0x1
  2735  000101                     	ds	1
  2736  000102                     initEeprom@isInitialized:
  2737                           	opt stack 0
  2738  000102                     isMasterNumber@memoryOpResult:
  2739                           	opt stack 0
  2740  000102                     findEmptySpot@memoryOpResult:
  2741                           	opt stack 0
  2742  000102                     isNumberInMemory@positionInMemory:
  2743                           	opt stack 0
  2744                           
  2745                           ; 2 bytes @ 0x2
  2746  000102                     	ds	1
  2747  000103                     initFsm@isInitialized:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x3
  2751  000103                     	ds	1
  2752  000104                     isNumberInMemory@memoryOpResult:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0x4
  2756  000104                     	ds	1
  2757  000105                     addCmdFsm@receivedNumber:
  2758                           	opt stack 0
  2759  000105                     delCmdFsm@receivedNumber:
  2760                           	opt stack 0
  2761                           
  2762                           ; 2 bytes @ 0x5
  2763  000105                     	ds	2
  2764  000107                     addCmdFsm@smsText:
  2765                           	opt stack 0
  2766  000107                     delCmdFsm@smsText:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x7
  2770  000107                     	ds	2
  2771  000109                     addCmdFsm@isComplete:
  2772                           	opt stack 0
  2773  000109                     delCmdFsm@emptyNumber:
  2774                           	opt stack 0
  2775                           
  2776                           ; 13 bytes @ 0x9
  2777  000109                     	ds	1
  2778  00010A                     addCmdFsm@masterOpResult:
  2779                           	opt stack 0
  2780                           
  2781                           ; 1 bytes @ 0xA
  2782  00010A                     	ds	1
  2783  00010B                     addCmdFsm@numberInMemory:
  2784                           	opt stack 0
  2785                           
  2786                           ; 1 bytes @ 0xB
  2787  00010B                     	ds	1
  2788  00010C                     addCmdFsm@searchNumber:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0xC
  2792  00010C                     	ds	10
  2793  000116                     delCmdFsm@isComplete:
  2794                           	opt stack 0
  2795                           
  2796                           ; 1 bytes @ 0x16
  2797  000116                     	ds	1
  2798  000117                     delCmdFsm@masterOpResult:
  2799                           	opt stack 0
  2800                           
  2801                           ; 1 bytes @ 0x17
  2802  000117                     	ds	1
  2803  000118                     delCmdFsm@numberInMemory:
  2804                           	opt stack 0
  2805                           
  2806                           ; 1 bytes @ 0x18
  2807  000118                     	ds	1
  2808  000119                     delCmdFsm@searchNumber:
  2809                           	opt stack 0
  2810                           
  2811                           ; 1 bytes @ 0x19
  2812  000119                     	ds	25
  2813  000132                     InitGprsNetwork@Index:
  2814                           	opt stack 0
  2815  000132                     Term_MainSm@FwkMajorStr:
  2816                           	opt stack 0
  2817                           
  2818                           ; 4 bytes @ 0x32
  2819  000132                     	ds	4
  2820  000136                     Term_MainSm@FwkMinorStr:
  2821                           	opt stack 0
  2822                           
  2823                           ; 4 bytes @ 0x36
  2824  000136                     	ds	4
  2825  00013A                     Term_MainSm@FwkBuildStr:
  2826                           	opt stack 0
  2827                           
  2828                           ; 4 bytes @ 0x3A
  2829  00013A                     	ds	142
  2830  0001C8                     HttpGetMethod@Index:
  2831                           	opt stack 0
  2832                           
  2833                           ; 1 bytes @ 0xC8
  2834  0001C8                     	ds	1
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           postdec1	equ	0xFE5
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           
  2845                           	psect	cstackBANK0
  2846  000060                     __pcstackBANK0:
  2847                           	opt stack 0
  2848  000060                     
  2849                           ; 1 bytes @ 0x0
  2850  000060                     	ds	8
  2851  000068                     ??_LowPriorityIsr:
  2852                           
  2853                           ; 1 bytes @ 0x8
  2854  000068                     	ds	21
  2855  00007D                     ??_isdigit:
  2856  00007D                     ??_isspace:
  2857  00007D                     ??_isupper:
  2858  00007D                     ??_Rtcc_GetRtccValue:
  2859  00007D                     ??_UartTxBufferStatus:
  2860  00007D                     ??_USBStdGetDscHandler:
  2861  00007D                     ??_USBStdGetStatusHandler:
  2862  00007D                     ?_GetLastInteractionNumber:
  2863                           	opt stack 0
  2864  00007D                     ?_USBTransferOnePacket:
  2865                           	opt stack 0
  2866  00007D                     ?_strlen:
  2867                           	opt stack 0
  2868  00007D                     ?_sprintf:
  2869                           	opt stack 0
  2870  00007D                     ?_initPreamble:
  2871                           	opt stack 0
  2872  00007D                     ?___wmul:
  2873                           	opt stack 0
  2874  00007D                     ?___awdiv:
  2875                           	opt stack 0
  2876  00007D                     ?___awmod:
  2877                           	opt stack 0
  2878  00007D                     ?___lwmod:
  2879                           	opt stack 0
  2880  00007D                     ?_GetOsTickCounter:
  2881                           	opt stack 0
  2882  00007D                     ?___lmul:
  2883                           	opt stack 0
  2884  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2885                           	opt stack 0
  2886  00007D                     SetAckStatus@AckSts:
  2887                           	opt stack 0
  2888  00007D                     WriteByte@Byte:
  2889                           	opt stack 0
  2890  00007D                     ReadByte@Byte:
  2891                           	opt stack 0
  2892  00007D                     Mcu_SetWdgSts@WdgSts:
  2893                           	opt stack 0
  2894  00007D                     RtccIrqInit@Priority:
  2895                           	opt stack 0
  2896  00007D                     Rtcc_SetRtcStatus@Status:
  2897                           	opt stack 0
  2898  00007D                     TmrBInit@Prescaler:
  2899                           	opt stack 0
  2900  00007D                     Tmr_TmrBIrqSet@Priority:
  2901                           	opt stack 0
  2902  00007D                     Tmr_StartTmr@TmrNumb:
  2903                           	opt stack 0
  2904  00007D                     UartWriteByte@ByteToWrite:
  2905                           	opt stack 0
  2906  00007D                     USBTransferOnePacket@dir:
  2907                           	opt stack 0
  2908  00007D                     USBConfigureEndpoint@direction:
  2909                           	opt stack 0
  2910  00007D                     USBCtrlTrfTxService@byteToSend:
  2911                           	opt stack 0
  2912  00007D                     USBCtrlTrfRxService@i:
  2913                           	opt stack 0
  2914  00007D                     Led_SetLedStatus@LedSts:
  2915                           	opt stack 0
  2916  00007D                     toupper@c:
  2917                           	opt stack 0
  2918  00007D                     tolower@c:
  2919                           	opt stack 0
  2920  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2921                           	opt stack 0
  2922  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2923                           	opt stack 0
  2924  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2925                           	opt stack 0
  2926  00007D                     Uart_ClearRxBuffer@Index:
  2927                           	opt stack 0
  2928  00007D                     GenerateEvt@Event:
  2929                           	opt stack 0
  2930  00007D                     ReceiveEvt@Event:
  2931                           	opt stack 0
  2932  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2933                           	opt stack 0
  2934  00007D                     StringCompare@String1:
  2935                           	opt stack 0
  2936  00007D                     ClearBuffer@Buffer:
  2937                           	opt stack 0
  2938  00007D                     isNumberValid@phoneNumber:
  2939                           	opt stack 0
  2940  00007D                     sprintf@sp:
  2941                           	opt stack 0
  2942  00007D                     ___wmul@multiplier:
  2943                           	opt stack 0
  2944  00007D                     ___awdiv@dividend:
  2945                           	opt stack 0
  2946  00007D                     ___awmod@dividend:
  2947                           	opt stack 0
  2948  00007D                     ___lwmod@dividend:
  2949                           	opt stack 0
  2950  00007D                     memcpy@d1:
  2951                           	opt stack 0
  2952  00007D                     memset@p1:
  2953                           	opt stack 0
  2954  00007D                     strcat@to:
  2955                           	opt stack 0
  2956  00007D                     strcpy@to:
  2957                           	opt stack 0
  2958  00007D                     strlen@s:
  2959                           	opt stack 0
  2960  00007D                     ___lmul@multiplier:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x1D
  2964  00007D                     	ds	1
  2965  00007E                     ??_USBConfigureEndpoint:
  2966  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2967                           	opt stack 0
  2968  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2969                           	opt stack 0
  2970  00007E                     TmrBInit@Postscaler:
  2971                           	opt stack 0
  2972  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2973                           	opt stack 0
  2974  00007E                     UartWriteByte@Module:
  2975                           	opt stack 0
  2976  00007E                     UartTxBufferStatus@Module:
  2977                           	opt stack 0
  2978  00007E                     USBCtrlTrfRxService@byteToRead:
  2979                           	opt stack 0
  2980  00007E                     USBCtrlTrfInHandler@lastDTS:
  2981                           	opt stack 0
  2982  00007E                     Led_SetLedStatus@Led:
  2983                           	opt stack 0
  2984  00007E                     _isdigit$6425:
  2985                           	opt stack 0
  2986  00007E                     _isspace$6694:
  2987                           	opt stack 0
  2988  00007E                     _isupper$6697:
  2989                           	opt stack 0
  2990  00007E                     I2c_WriteData@WritePacket:
  2991                           	opt stack 0
  2992  00007E                     Rtcc_RtcConfig@RtcConfig:
  2993                           	opt stack 0
  2994  00007E                     USBTransferOnePacket@data:
  2995                           	opt stack 0
  2996  00007E                     USBStdGetStatusHandler@p:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0x1E
  3000  00007E                     	ds	1
  3001  00007F                     ??_strlen:
  3002  00007F                     ??_Rtcc_AlarmConfig:
  3003  00007F                     ??_TmrBInit:
  3004  00007F                     Irq_InitIntController@IntPriorityEn:
  3005                           	opt stack 0
  3006  00007F                     Rtcc_GetRtccValue@RetValue:
  3007                           	opt stack 0
  3008  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3009                           	opt stack 0
  3010  00007F                     UartTxBufferStatus@TxBufferStatus:
  3011                           	opt stack 0
  3012  00007F                     GenerateEvt@EventStatus:
  3013                           	opt stack 0
  3014  00007F                     isdigit@c:
  3015                           	opt stack 0
  3016  00007F                     isspace@c:
  3017                           	opt stack 0
  3018  00007F                     isupper@c:
  3019                           	opt stack 0
  3020  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3021                           	opt stack 0
  3022  00007F                     StringCompare@String2:
  3023                           	opt stack 0
  3024  00007F                     ClearBuffer@Len:
  3025                           	opt stack 0
  3026  00007F                     sprintf@f:
  3027                           	opt stack 0
  3028  00007F                     ___wmul@multiplicand:
  3029                           	opt stack 0
  3030  00007F                     ___awdiv@divisor:
  3031                           	opt stack 0
  3032  00007F                     ___awmod@divisor:
  3033                           	opt stack 0
  3034  00007F                     ___lwmod@divisor:
  3035                           	opt stack 0
  3036  00007F                     memcpy@s1:
  3037                           	opt stack 0
  3038  00007F                     memset@c:
  3039                           	opt stack 0
  3040  00007F                     strcat@from:
  3041                           	opt stack 0
  3042  00007F                     strcpy@from:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0x1F
  3046  00007F                     	ds	1
  3047  000080                     ??_isalpha:
  3048  000080                     ??_isxdigit:
  3049  000080                     ??_I2c_WriteData:
  3050  000080                     ??_Rtcc_RtcConfig:
  3051  000080                     Rtcc_GetRtccValue@RegValue:
  3052                           	opt stack 0
  3053  000080                     TmrBInit@TmrNumb:
  3054                           	opt stack 0
  3055  000080                     ReceiveEvt@EventStatus:
  3056                           	opt stack 0
  3057  000080                     USBTransferOnePacket@len:
  3058                           	opt stack 0
  3059  000080                     isNumberValid@isNumberOk:
  3060                           	opt stack 0
  3061  000080                     I2c_ReadData@ReadPacket:
  3062                           	opt stack 0
  3063  000080                     Uart_WriteConstString@ConstStringToWrite:
  3064                           	opt stack 0
  3065  000080                     Uart_WriteString@StringToWrite:
  3066                           	opt stack 0
  3067  000080                     Uart_WriteStringLen@StringToWrite:
  3068                           	opt stack 0
  3069  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3070                           	opt stack 0
  3071  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3072                           	opt stack 0
  3073                           
  3074                           ; 2 bytes @ 0x20
  3075  000080                     	ds	1
  3076  000081                     ?_GetElapsedTime:
  3077                           	opt stack 0
  3078  000081                     ?_Rtcm_GetRtccDate:
  3079                           	opt stack 0
  3080  000081                     Mdm_IsSmsReceived@Ret:
  3081                           	opt stack 0
  3082  000081                     Mdm_IsRinging@Ret:
  3083                           	opt stack 0
  3084  000081                     I2cSlv_I2cReadMsgSts@Result:
  3085                           	opt stack 0
  3086  000081                     USBTransferOnePacket@ep:
  3087                           	opt stack 0
  3088  000081                     Led_SetLedBlinkTime@Led:
  3089                           	opt stack 0
  3090  000081                     isNumberValid@i:
  3091                           	opt stack 0
  3092  000081                     ___awdiv@counter:
  3093                           	opt stack 0
  3094  000081                     ___awmod@counter:
  3095                           	opt stack 0
  3096  000081                     ___lwmod@counter:
  3097                           	opt stack 0
  3098  000081                     _isalpha$6691:
  3099                           	opt stack 0
  3100  000081                     _isxdigit$6701:
  3101                           	opt stack 0
  3102  000081                     OsTmr_StartTimer@Timer:
  3103                           	opt stack 0
  3104  000081                     StringCompare@Len:
  3105                           	opt stack 0
  3106  000081                     ClearBuffer@Index:
  3107                           	opt stack 0
  3108  000081                     ___wmul@product:
  3109                           	opt stack 0
  3110  000081                     memcpy@n:
  3111                           	opt stack 0
  3112  000081                     memset@n:
  3113                           	opt stack 0
  3114  000081                     strcat@cp:
  3115                           	opt stack 0
  3116  000081                     strcpy@cp:
  3117                           	opt stack 0
  3118  000081                     strlen@cp:
  3119                           	opt stack 0
  3120  000081                     GetElapsedTime@StartTime:
  3121                           	opt stack 0
  3122  000081                     ___lmul@multiplicand:
  3123                           	opt stack 0
  3124                           
  3125                           ; 4 bytes @ 0x21
  3126  000081                     	ds	1
  3127  000082                     ??_I2c_ReadData:
  3128  000082                     Uart_WriteConstString@Module:
  3129                           	opt stack 0
  3130  000082                     Uart_WriteString@Module:
  3131                           	opt stack 0
  3132  000082                     Uart_WriteStringLen@Len:
  3133                           	opt stack 0
  3134  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3135                           	opt stack 0
  3136  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3137                           	opt stack 0
  3138  000082                     USBConfigureEndpoint@EPNum:
  3139                           	opt stack 0
  3140  000082                     ___awdiv@sign:
  3141                           	opt stack 0
  3142  000082                     ___awmod@sign:
  3143                           	opt stack 0
  3144  000082                     isalpha@c:
  3145                           	opt stack 0
  3146  000082                     isxdigit@c:
  3147                           	opt stack 0
  3148  000082                     USBTransferOnePacket@handle:
  3149                           	opt stack 0
  3150                           
  3151                           ; 2 bytes @ 0x22
  3152  000082                     	ds	1
  3153  000083                     ?_GetCallerNumber:
  3154                           	opt stack 0
  3155  000083                     ?_atoi:
  3156                           	opt stack 0
  3157  000083                     ?_xtoi:
  3158                           	opt stack 0
  3159  000083                     ?___lwdiv:
  3160                           	opt stack 0
  3161  000083                     Uart_WriteStringLen@Index:
  3162                           	opt stack 0
  3163  000083                     Mdm_SetSmsFormat@Index:
  3164                           	opt stack 0
  3165  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3166                           	opt stack 0
  3167  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3168                           	opt stack 0
  3169  000083                     getSetupCall@isCalledReceived:
  3170                           	opt stack 0
  3171  000083                     sprintf@flag:
  3172                           	opt stack 0
  3173  000083                     memcpy@tmp:
  3174                           	opt stack 0
  3175  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3176                           	opt stack 0
  3177  000083                     USBConfigureEndpoint@handle:
  3178                           	opt stack 0
  3179  000083                     putUSBUSART@data:
  3180                           	opt stack 0
  3181  000083                     atoi@s:
  3182                           	opt stack 0
  3183  000083                     ___awdiv@quotient:
  3184                           	opt stack 0
  3185  000083                     ___lwdiv@dividend:
  3186                           	opt stack 0
  3187  000083                     memset@p:
  3188                           	opt stack 0
  3189  000083                     xtoi@s:
  3190                           	opt stack 0
  3191  000083                     OsTmr_StartTimer@Timeout:
  3192                           	opt stack 0
  3193                           
  3194                           ; 4 bytes @ 0x23
  3195  000083                     	ds	1
  3196  000084                     Uart_WriteStringLen@Module:
  3197                           	opt stack 0
  3198  000084                     I2cSlv_SendI2cMsg@TxSts:
  3199                           	opt stack 0
  3200  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3201                           	opt stack 0
  3202  000084                     CDCTxService@i:
  3203                           	opt stack 0
  3204  000084                     getsUSBUSART@buffer:
  3205                           	opt stack 0
  3206  000084                     sprintf@ap:
  3207                           	opt stack 0
  3208  000084                     memcpy@d:
  3209                           	opt stack 0
  3210  000084                     Mdm_SetSmsFormat@UartMessage:
  3211                           	opt stack 0
  3212                           
  3213                           ; 20 bytes @ 0x24
  3214  000084                     	ds	1
  3215  000085                     ??_atoi:
  3216  000085                     ??_xtoi:
  3217  000085                     ??_GetElapsedTime:
  3218  000085                     Rtcc_SetRtccValue@Value:
  3219                           	opt stack 0
  3220  000085                     USBDeviceInit@i:
  3221                           	opt stack 0
  3222  000085                     USBEnableEndpoint@options:
  3223                           	opt stack 0
  3224  000085                     putUSBUSART@length:
  3225                           	opt stack 0
  3226  000085                     CDCTxService@byte_to_send:
  3227                           	opt stack 0
  3228  000085                     Eeprom_Reset@SlaveAddress:
  3229                           	opt stack 0
  3230  000085                     StringCompare@Result:
  3231                           	opt stack 0
  3232  000085                     triggerRelay@res:
  3233                           	opt stack 0
  3234  000085                     StringCopy@SourceStr:
  3235                           	opt stack 0
  3236  000085                     ___lwdiv@divisor:
  3237                           	opt stack 0
  3238  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3239                           	opt stack 0
  3240  000085                     ___lmul@product:
  3241                           	opt stack 0
  3242                           
  3243                           ; 4 bytes @ 0x25
  3244  000085                     	ds	1
  3245  000086                     ??_Rtcc_SetRtccValue:
  3246  000086                     getsUSBUSART@len:
  3247                           	opt stack 0
  3248  000086                     triggerRelay@isRelayOn:
  3249                           	opt stack 0
  3250  000086                     sprintf@c:
  3251                           	opt stack 0
  3252  000086                     USBEnableEndpoint@p:
  3253                           	opt stack 0
  3254  000086                     StringCompare@Index:
  3255                           	opt stack 0
  3256  000086                     memcpy@s:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x26
  3260  000086                     	ds	1
  3261  000087                     atoi@sign:
  3262                           	opt stack 0
  3263  000087                     ___lwdiv@counter:
  3264                           	opt stack 0
  3265  000087                     xtoi@sign:
  3266                           	opt stack 0
  3267  000087                     StringCopy@DestStr:
  3268                           	opt stack 0
  3269  000087                     triggerRelay@txBuffer:
  3270                           	opt stack 0
  3271  000087                     sprintf@cp:
  3272                           	opt stack 0
  3273                           
  3274                           ; 2 bytes @ 0x27
  3275  000087                     	ds	1
  3276  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3277                           	opt stack 0
  3278  000088                     USBEnableEndpoint@ep:
  3279                           	opt stack 0
  3280  000088                     atoi@a:
  3281                           	opt stack 0
  3282  000088                     ___lwdiv@quotient:
  3283                           	opt stack 0
  3284  000088                     xtoi@val:
  3285                           	opt stack 0
  3286  000088                     parseCommand@addNumberCmd:
  3287                           	opt stack 0
  3288                           
  3289                           ; 4 bytes @ 0x28
  3290  000088                     	ds	1
  3291  000089                     ??_Rtcm_GetRtccDate:
  3292  000089                     ?_strtol:
  3293                           	opt stack 0
  3294  000089                     ?___lldiv:
  3295                           	opt stack 0
  3296  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3297                           	opt stack 0
  3298  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3299                           	opt stack 0
  3300  000089                     StringCopy@Len:
  3301                           	opt stack 0
  3302  000089                     triggerCmdFsm@receivedNumber:
  3303                           	opt stack 0
  3304  000089                     strtol@s:
  3305                           	opt stack 0
  3306  000089                     ___lldiv@dividend:
  3307                           	opt stack 0
  3308  000089                     Rtcm_SetRtccDate@Date:
  3309                           	opt stack 0
  3310                           
  3311                           ; 8 bytes @ 0x29
  3312  000089                     	ds	1
  3313  00008A                     xtoi@c:
  3314                           	opt stack 0
  3315  00008A                     LedBlinkStateMachine@LedBlink:
  3316                           	opt stack 0
  3317  00008A                     LedPulseStateMachine@LedPulse:
  3318                           	opt stack 0
  3319  00008A                     secondsAppTimer@counter:
  3320                           	opt stack 0
  3321  00008A                     utoa@buf:
  3322                           	opt stack 0
  3323  00008A                     Rtcm_GetRtccDate@LocalDate:
  3324                           	opt stack 0
  3325                           
  3326                           ; 8 bytes @ 0x2A
  3327  00008A                     	ds	1
  3328  00008B                     ??_StringCopy:
  3329  00008B                     triggerCmdFsm@isComplete:
  3330                           	opt stack 0
  3331  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3332                           	opt stack 0
  3333  00008B                     strtol@endptr:
  3334                           	opt stack 0
  3335                           
  3336                           ; 2 bytes @ 0x2B
  3337  00008B                     	ds	1
  3338  00008C                     LedPulseStateMachine@Led:
  3339                           	opt stack 0
  3340  00008C                     secondsAppTimer@isCyclic:
  3341                           	opt stack 0
  3342  00008C                     triggerCmdFsm@numberInMemory:
  3343                           	opt stack 0
  3344  00008C                     utoa@val:
  3345                           	opt stack 0
  3346  00008C                     parseCommand@deleteNumberCmd:
  3347                           	opt stack 0
  3348                           
  3349                           ; 4 bytes @ 0x2C
  3350  00008C                     	ds	1
  3351  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3352                           	opt stack 0
  3353  00008D                     StringCopy@Index:
  3354                           	opt stack 0
  3355  00008D                     strtol@base:
  3356                           	opt stack 0
  3357  00008D                     GetElapsedTime@TimeValue:
  3358                           	opt stack 0
  3359  00008D                     ___lldiv@divisor:
  3360                           	opt stack 0
  3361                           
  3362                           ; 4 bytes @ 0x2D
  3363  00008D                     	ds	1
  3364  00008E                     utoa@base:
  3365                           	opt stack 0
  3366                           
  3367                           ; 2 bytes @ 0x2E
  3368  00008E                     	ds	1
  3369  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3370  00008F                     ??_strtol:
  3371  00008F                     secondsAppTimer@seconds:
  3372                           	opt stack 0
  3373  00008F                     Mdm_GetSmsData@MessageText:
  3374                           	opt stack 0
  3375  00008F                     Eeprom_Write@WriteBuffer:
  3376                           	opt stack 0
  3377  00008F                     LedStateMachine@LedSts:
  3378                           	opt stack 0
  3379  00008F                     ModemEvtParser@CallReadyString:
  3380                           	opt stack 0
  3381                           
  3382                           ; 10 bytes @ 0x2F
  3383  00008F                     	ds	1
  3384  000090                     secondsAppTimer@isExpired:
  3385                           	opt stack 0
  3386  000090                     utoa@v:
  3387                           	opt stack 0
  3388  000090                     parseCommand@resetCmd:
  3389                           	opt stack 0
  3390                           
  3391                           ; 4 bytes @ 0x30
  3392  000090                     	ds	1
  3393  000091                     ??_USBStdFeatureReqHandler:
  3394  000091                     Mdm_GetSmsData@GetSmsStatus:
  3395                           	opt stack 0
  3396  000091                     USBStdSetCfgHandler@i:
  3397                           	opt stack 0
  3398  000091                     Eeprom_Write@DataLength:
  3399                           	opt stack 0
  3400  000091                     LedStateMachine@LedOut:
  3401                           	opt stack 0
  3402  000091                     secondsAppTimer@destinationTicks:
  3403                           	opt stack 0
  3404  000091                     GetElapsedTime@CurrentTimestamp:
  3405                           	opt stack 0
  3406  000091                     ___lldiv@quotient:
  3407                           	opt stack 0
  3408                           
  3409                           ; 4 bytes @ 0x31
  3410  000091                     	ds	1
  3411  000092                     Eeprom_Write@WriteSts:
  3412                           	opt stack 0
  3413  000092                     utoa@c:
  3414                           	opt stack 0
  3415  000092                     USBStdFeatureReqHandler@pUEP:
  3416                           	opt stack 0
  3417                           
  3418                           ; 2 bytes @ 0x32
  3419  000092                     	ds	1
  3420  000093                     Eeprom_Write@MemoryAddress:
  3421                           	opt stack 0
  3422  000093                     waitSetupCall@isCallArrived:
  3423                           	opt stack 0
  3424  000093                     strtol@sign:
  3425                           	opt stack 0
  3426  000093                     LedStateMachine@LedBlink:
  3427                           	opt stack 0
  3428  000093                     itoa@buf:
  3429                           	opt stack 0
  3430                           
  3431                           ; 2 bytes @ 0x33
  3432  000093                     	ds	1
  3433  000094                     USBStdFeatureReqHandler@current_ep_data:
  3434                           	opt stack 0
  3435  000094                     Eeprom_Write@SlaveAddress:
  3436                           	opt stack 0
  3437  000094                     parseCommand@state:
  3438                           	opt stack 0
  3439  000094                     strtol@a:
  3440                           	opt stack 0
  3441                           
  3442                           ; 4 bytes @ 0x34
  3443  000094                     	ds	1
  3444  000095                     Eeprom_Write@CommandLength:
  3445                           	opt stack 0
  3446  000095                     detectCmd@currentState:
  3447                           	opt stack 0
  3448  000095                     ___lldiv@counter:
  3449                           	opt stack 0
  3450  000095                     OsTmr_GetTimerStatus@Timer:
  3451                           	opt stack 0
  3452  000095                     USBStdFeatureReqHandler@p:
  3453                           	opt stack 0
  3454  000095                     LedStateMachine@LedPulse:
  3455                           	opt stack 0
  3456  000095                     itoa@val:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x35
  3460  000095                     	ds	1
  3461  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3462                           	opt stack 0
  3463  000096                     SetUartBaudRate@UartConfig:
  3464                           	opt stack 0
  3465  000096                     saveNumberInMemory@phoneNumber:
  3466                           	opt stack 0
  3467  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3468                           	opt stack 0
  3469                           
  3470                           ; 4 bytes @ 0x36
  3471  000096                     	ds	1
  3472  000097                     ??_USBCtrlEPService:
  3473  000097                     itoa@base:
  3474                           	opt stack 0
  3475                           
  3476                           ; 2 bytes @ 0x37
  3477  000097                     	ds	1
  3478  000098                     Tmr_TmrBPrSet@Prescaler:
  3479                           	opt stack 0
  3480  000098                     Mdm_SetSmsFormat@TextFormat:
  3481                           	opt stack 0
  3482  000098                     USBDeviceTasks@i:
  3483                           	opt stack 0
  3484  000098                     LedStateMachine@LedOutSts:
  3485                           	opt stack 0
  3486  000098                     saveNumberInMemory@address:
  3487                           	opt stack 0
  3488  000098                     strtol@c:
  3489                           	opt stack 0
  3490                           
  3491                           ; 1 bytes @ 0x38
  3492  000098                     	ds	1
  3493  000099                     Tmr_TmrBPrSet@Postscaler:
  3494                           	opt stack 0
  3495  000099                     SetUartBaudRate@Module:
  3496                           	opt stack 0
  3497  000099                     LedStateMachine@Led:
  3498                           	opt stack 0
  3499  000099                     initGprsModem@isInitialized:
  3500                           	opt stack 0
  3501  000099                     itoa@cp:
  3502                           	opt stack 0
  3503  000099                     ModemEvtParser@ClipString:
  3504                           	opt stack 0
  3505                           
  3506                           ; 5 bytes @ 0x39
  3507  000099                     	ds	1
  3508  00009A                     ??_Led_MainTask:
  3509  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3510                           	opt stack 0
  3511  00009A                     SetUartBaudRate@BaudRateRegister:
  3512                           	opt stack 0
  3513  00009A                     SetBaudRate@McuClockHz:
  3514                           	opt stack 0
  3515                           
  3516                           ; 4 bytes @ 0x3A
  3517  00009A                     	ds	1
  3518  00009B                     ??_SendSmsSm:
  3519  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3520                           	opt stack 0
  3521  00009B                     OsTmr_Wait@WaitTimer:
  3522                           	opt stack 0
  3523  00009B                     InitGprsNetwork@Apn:
  3524                           	opt stack 0
  3525  00009B                     HttpGetMethod@GetData:
  3526                           	opt stack 0
  3527                           
  3528                           ; 2 bytes @ 0x3B
  3529  00009B                     	ds	1
  3530  00009C                     SetUartBaudRate@DivisionFactor:
  3531                           	opt stack 0
  3532  00009C                     Tmr_TmrBPrSet@Divisor:
  3533                           	opt stack 0
  3534                           
  3535                           ; 4 bytes @ 0x3C
  3536  00009C                     	ds	1
  3537  00009D                     ??_HttpGetMethod:
  3538  00009D                     InitGprsNetwork@ApnLen:
  3539                           	opt stack 0
  3540  00009D                     Uart_InitUartModule@UartConfig:
  3541                           	opt stack 0
  3542  00009D                     OsTmr_Wait@DelayMs:
  3543                           	opt stack 0
  3544                           
  3545                           ; 4 bytes @ 0x3D
  3546  00009D                     	ds	1
  3547  00009E                     ??_SetBaudRate:
  3548  00009E                     ??_InitGprsNetwork:
  3549  00009E                     ModemEvtParser@SmsString:
  3550                           	opt stack 0
  3551                           
  3552                           ; 5 bytes @ 0x3E
  3553  00009E                     	ds	1
  3554  00009F                     ??_Uart_InitUartModule:
  3555                           
  3556                           ; 1 bytes @ 0x3F
  3557  00009F                     	ds	1
  3558  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3559                           	opt stack 0
  3560                           
  3561                           ; 2 bytes @ 0x40
  3562  0000A0                     	ds	1
  3563  0000A1                     Uart_InitUartModule@Module:
  3564                           	opt stack 0
  3565  0000A1                     OsTmr_Wait@Ret:
  3566                           	opt stack 0
  3567                           
  3568                           ; 1 bytes @ 0x41
  3569  0000A1                     	ds	1
  3570  0000A2                     ??_Terminal:
  3571  0000A2                     I2c_InitI2cModule@I2cConfig:
  3572                           	opt stack 0
  3573  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x42
  3577  0000A2                     	ds	1
  3578  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3579                           	opt stack 0
  3580  0000A3                     ModemEvtParser@RingString:
  3581                           	opt stack 0
  3582                           
  3583                           ; 4 bytes @ 0x43
  3584  0000A3                     	ds	1
  3585  0000A4                     ??_I2c_InitI2cModule:
  3586  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3587                           	opt stack 0
  3588  0000A4                     Terminal@i:
  3589                           	opt stack 0
  3590  0000A4                     InitSchedTimer@TmrBConfig:
  3591                           	opt stack 0
  3592                           
  3593                           ; 7 bytes @ 0x44
  3594  0000A4                     	ds	1
  3595  0000A5                     Terminal@ReceivedBytes:
  3596                           	opt stack 0
  3597  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3598                           	opt stack 0
  3599                           
  3600                           ; 2 bytes @ 0x45
  3601  0000A5                     	ds	1
  3602  0000A6                     Terminal@Index:
  3603                           	opt stack 0
  3604                           
  3605                           ; 1 bytes @ 0x46
  3606  0000A6                     	ds	1
  3607  0000A7                     ModemEvtParser@Match:
  3608                           	opt stack 0
  3609  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3610                           	opt stack 0
  3611                           
  3612                           ; 1 bytes @ 0x47
  3613  0000A7                     	ds	1
  3614  0000A8                     ModemEvtParser@CompareIdx:
  3615                           	opt stack 0
  3616  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3617                           	opt stack 0
  3618                           
  3619                           ; 1 bytes @ 0x48
  3620  0000A8                     	ds	1
  3621  0000A9                     Eeprom_Read@ReadBuffer:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x49
  3625  0000A9                     	ds	2
  3626  0000AB                     Eeprom_Read@DataLength:
  3627                           	opt stack 0
  3628                           
  3629                           ; 1 bytes @ 0x4B
  3630  0000AB                     	ds	1
  3631  0000AC                     Eeprom_Read@MemoryAddress:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x4C
  3635  0000AC                     	ds	1
  3636  0000AD                     Eeprom_Read@SlaveAddress:
  3637                           	opt stack 0
  3638                           
  3639                           ; 1 bytes @ 0x4D
  3640  0000AD                     	ds	1
  3641  0000AE                     Eeprom_Read@ReadSts:
  3642                           	opt stack 0
  3643                           
  3644                           ; 1 bytes @ 0x4E
  3645  0000AE                     	ds	1
  3646  0000AF                     Eeprom_Read@QuerySts:
  3647                           	opt stack 0
  3648                           
  3649                           ; 1 bytes @ 0x4F
  3650  0000AF                     	ds	1
  3651  0000B0                     tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           postinc0	equ	0xFEE
  3656                           wreg	equ	0xFE8
  3657                           postdec1	equ	0xFE5
  3658                           fsr1h	equ	0xFE2
  3659                           fsr1l	equ	0xFE1
  3660                           
  3661                           ; 1 bytes @ 0x50
  3662                           
  3663                           	psect	cstackCOMRAM
  3664  000001                     __pcstackCOMRAM:
  3665                           	opt stack 0
  3666  000001                     i2GenerateEvt@Event:
  3667                           	opt stack 0
  3668                           
  3669                           ; 2 bytes @ 0x0
  3670  000001                     	ds	2
  3671  000003                     i2GenerateEvt@EventStatus:
  3672                           	opt stack 0
  3673                           
  3674                           ; 1 bytes @ 0x2
  3675  000003                     	ds	1
  3676  000004                     Uart_MdmGsmGprsReadService@UartData:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x3
  3680  000004                     	ds	1
  3681  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x4
  3685  000005                     	ds	2
  3686  000007                     ??_HighPriorityIsr:
  3687                           
  3688                           ; 1 bytes @ 0x6
  3689  000007                     	ds	18
  3690  000019                     ?i1___wmul:
  3691                           	opt stack 0
  3692  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3693                           	opt stack 0
  3694  000019                     i1GenerateEvt@Event:
  3695                           	opt stack 0
  3696  000019                     i1___wmul@multiplier:
  3697                           	opt stack 0
  3698                           
  3699                           ; 2 bytes @ 0x18
  3700  000019                     	ds	2
  3701  00001B                     i1GenerateEvt@EventStatus:
  3702                           	opt stack 0
  3703  00001B                     i1___wmul@multiplicand:
  3704                           	opt stack 0
  3705                           
  3706                           ; 2 bytes @ 0x1A
  3707  00001B                     	ds	1
  3708  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3709                           	opt stack 0
  3710                           
  3711                           ; 2 bytes @ 0x1B
  3712  00001C                     	ds	1
  3713  00001D                     i1___wmul@product:
  3714                           	opt stack 0
  3715                           
  3716                           ; 2 bytes @ 0x1C
  3717  00001D                     	ds	1
  3718  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3719                           	opt stack 0
  3720                           
  3721                           ; 1 bytes @ 0x1D
  3722  00001E                     	ds	1
  3723  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3724                           	opt stack 0
  3725                           
  3726                           ; 1 bytes @ 0x1E
  3727  00001F                     	ds	1
  3728  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x1F
  3732  000020                     	ds	1
  3733  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0x20
  3737  000021                     	ds	2
  3738  000023                     tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1h	equ	0xFE2
  3746                           fsr1l	equ	0xFE1
  3747                           
  3748                           ; 1 bytes @ 0x22
  3749 ;;
  3750 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3751 ;;
  3752 ;; *************** function _main *****************
  3753 ;; Defined at:
  3754 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   14[None  ] short 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels required when called:   23
  3774 ;; This function calls:
  3775 ;;		_Sch_MainScheduler
  3776 ;;		_SystemInit
  3777 ;; This function is called by:
  3778 ;;		Startup code after reset
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text0
  3783  006AF4                     __ptext0:
  3784                           	opt stack 0
  3785  006AF4                     _main:
  3786                           	opt stack 8
  3787                           
  3788                           ;main.c: 61: SystemInit();
  3789                           
  3790                           ;incstack = 0
  3791  006AF4  EC7F  F032         	call	_SystemInit	;wreg free
  3792                           
  3793                           ;main.c: 64: Sch_MainScheduler();
  3794  006AF8  EC61  F034         	call	_Sch_MainScheduler	;wreg free
  3795                           
  3796                           ;main.c: 67: return 0;
  3797                           ;	Return value of _main is never used
  3798  006AFC  EF66  F000         	goto	start
  3799  006B00                     __end_of_main:
  3800                           	opt stack 0
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           postinc0	equ	0xFEE
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           
  3811 ;; *************** function _SystemInit *****************
  3812 ;; Defined at:
  3813 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:   15
  3834 ;; This function calls:
  3835 ;;		_InitSchedTimer
  3836 ;;		_Irq_InitIntController
  3837 ;;		_Mcu_ConfigExtInt
  3838 ;;		_Mcu_StartSystemPll
  3839 ;;		_Pm_DsReleasePinControl
  3840 ;;		_Tmr_RegisterTmr2IsrCallback
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text1
  3847  0064FE                     __ptext1:
  3848                           	opt stack 0
  3849  0064FE                     _SystemInit:
  3850                           	opt stack 15
  3851                           
  3852                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3853                           
  3854                           ;incstack = 0
  3855  0064FE  ECA8  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3856                           
  3857                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3858  006502  EC52  F034         	call	_Mcu_StartSystemPll	;wreg free
  3859                           
  3860                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3861  006506  0E01               	movlw	1
  3862  006508  0100               	movlb	0	; () banked
  3863  00650A  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3864  00650C  0E01               	movlw	1
  3865  00650E  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3866  006510  0E01               	movlw	1
  3867  006512  EC23  F033         	call	_Irq_InitIntController
  3868                           
  3869                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3870  006516  0ED8               	movlw	low _Sch_SchmIntService
  3871  006518  0100               	movlb	0	; () banked
  3872  00651A  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3873  00651C  0E6A               	movlw	high _Sch_SchmIntService
  3874  00651E  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3875  006520  EC8B  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3876                           
  3877                           ;sys_init.c: 132: InitSchedTimer();
  3878  006524  ECDF  F032         	call	_InitSchedTimer	;wreg free
  3879                           
  3880                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3881  006528  EC9B  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3882  00652C  0012               	return		;funcret
  3883  00652E                     __end_of_SystemInit:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           postdec1	equ	0xFE5
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           
  3895 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3896 ;; Defined at:
  3897 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3900 ;;		 -> Sch_SchmIntService(1), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   11
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_SystemInit
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text2
  3927  006B16                     __ptext2:
  3928                           	opt stack 0
  3929  006B16                     _Tmr_RegisterTmr2IsrCallback:
  3930                           	opt stack 18
  3931                           
  3932                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3933                           
  3934                           ;incstack = 0
  3935  006B16  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3936  006B1A  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3937  006B1E  0012               	return		;funcret
  3938  006B20                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           
  3950 ;; *************** function _Pm_DsReleasePinControl *****************
  3951 ;; Defined at:
  3952 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		None
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:   11
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_SystemInit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text3
  3981  006B50                     __ptext3:
  3982                           	opt stack 0
  3983  006B50                     _Pm_DsReleasePinControl:
  3984                           	opt stack 18
  3985                           
  3986                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3987                           
  3988                           ;incstack = 0
  3989  006B50  010F               	movlb	15	; () banked
  3990  006B52  914C               	bcf	76,0,b	;volatile
  3991                           
  3992                           ; BSR set to: 15
  3993  006B54  0012               	return		;funcret
  3994  006B56                     __end_of_Pm_DsReleasePinControl:
  3995                           	opt stack 0
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           postinc0	equ	0xFEE
  4001                           wreg	equ	0xFE8
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           
  4006 ;; *************** function _Mcu_StartSystemPll *****************
  4007 ;; Defined at:
  4008 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:   11
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_SystemInit
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text4
  4037  0068A4                     __ptext4:
  4038                           	opt stack 0
  4039  0068A4                     _Mcu_StartSystemPll:
  4040                           	opt stack 18
  4041                           
  4042                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;incstack = 0
  4046  0068A4  0E03               	movlw	3
  4047  0068A6  0100               	movlb	0	; () banked
  4048  0068A8  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4049  0068AA  0EE8               	movlw	232
  4050  0068AC  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4054  0068AE  8C9B               	bsf	3995,6,c	;volatile
  4055  0068B0                     l12245:
  4056                           
  4057                           ; BSR set to: 0
  4058  0068B0  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4059  0068B2  A0D8               	btfss	status,0,c
  4060  0068B4  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4061  0068B6  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4062  0068B8  E1FB               	bnz	l12245
  4063  0068BA  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4064  0068BC  B4D8               	btfsc	status,2,c
  4065  0068BE  0012               	return	
  4066  0068C0  D7F7               	goto	l237
  4067  0068C2                     __end_of_Mcu_StartSystemPll:
  4068                           	opt stack 0
  4069                           tblptru	equ	0xFF8
  4070                           tblptrh	equ	0xFF7
  4071                           tblptrl	equ	0xFF6
  4072                           tablat	equ	0xFF5
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           postdec1	equ	0xFE5
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _Mcu_ConfigExtInt *****************
  4081 ;; Defined at:
  4082 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:   11
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_SystemInit
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text5
  4111  006936                     __ptext5:
  4112                           	opt stack 0
  4113  006936                     _Mcu_ConfigExtInt:
  4114                           	opt stack 18
  4115                           
  4116                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120  006936  8093               	bsf	3987,0,c	;volatile
  4121                           
  4122                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4123  006938  8695               	bsf	3989,3,c	;volatile
  4124                           
  4125                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4126  00693A  010F               	movlb	15	; () banked
  4127  00693C  8949               	bsf	73,4,b	;volatile
  4128                           
  4129                           ; BSR set to: 15
  4130                           ;mcu_drv.c: 108: RPINR1 = 20;
  4131  00693E  0E14               	movlw	20
  4132  006940  010E               	movlb	14	; () banked
  4133  006942  6FE7               	movwf	231,b	;volatile
  4134                           
  4135                           ; BSR set to: 14
  4136                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4137  006944  88F2               	bsf	intcon,4,c	;volatile
  4138                           
  4139                           ; BSR set to: 14
  4140                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4141  006946  86F0               	bsf	intcon3,3,c	;volatile
  4142                           
  4143                           ; BSR set to: 14
  4144                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4145  006948  8CF0               	bsf	intcon3,6,c	;volatile
  4146                           
  4147                           ; BSR set to: 14
  4148                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4149  00694A  9CF1               	bcf	intcon2,6,c	;volatile
  4150                           
  4151                           ; BSR set to: 14
  4152                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4153  00694C  9AF1               	bcf	intcon2,5,c	;volatile
  4154                           
  4155                           ; BSR set to: 14
  4156  00694E  0012               	return		;funcret
  4157  006950                     __end_of_Mcu_ConfigExtInt:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           intcon	equ	0xFF2
  4164                           intcon2	equ	0xFF1
  4165                           intcon3	equ	0xFF0
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _Irq_InitIntController *****************
  4174 ;; Defined at:
  4175 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  IntPriorityE    1    wreg     enum E7720
  4178 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4179 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;Total ram usage:        3 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:   11
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_SystemInit
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text6
  4206  006646                     __ptext6:
  4207                           	opt stack 0
  4208  006646                     _Irq_InitIntController:
  4209                           	opt stack 18
  4210                           
  4211                           ; BSR set to: 14
  4212                           ;incstack = 0
  4213                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4214  006646  0100               	movlb	0	; () banked
  4215  006648  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4216                           
  4217                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4218  00664A  0100               	movlb	0	; () banked
  4219  00664C  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4220  00664E  D002               	bra	u10785
  4221  006650  9ED0               	bcf	4048,7,c	;volatile
  4222  006652  D001               	bra	u10786
  4223  006654                     u10785:
  4224  006654  8ED0               	bsf	4048,7,c	;volatile
  4225  006656                     u10786:
  4226                           
  4227                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4228  006656  0100               	movlb	0	; () banked
  4229  006658  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4230  00665A  D002               	bra	u10795
  4231  00665C  9EF2               	bcf	intcon,7,c	;volatile
  4232  00665E  D001               	bra	u10796
  4233  006660                     u10795:
  4234  006660  8EF2               	bsf	intcon,7,c	;volatile
  4235  006662                     u10796:
  4236                           
  4237                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4238  006662  0100               	movlb	0	; () banked
  4239  006664  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4240  006666  D002               	bra	u10805
  4241  006668  9CF2               	bcf	intcon,6,c	;volatile
  4242  00666A  D001               	bra	u10806
  4243  00666C                     u10805:
  4244  00666C  8CF2               	bsf	intcon,6,c	;volatile
  4245  00666E                     u10806:
  4246  00666E  0012               	return		;funcret
  4247  006670                     __end_of_Irq_InitIntController:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           intcon	equ	0xFF2
  4254                           intcon2	equ	0xFF1
  4255                           intcon3	equ	0xFF0
  4256                           postinc0	equ	0xFEE
  4257                           wreg	equ	0xFE8
  4258                           postdec1	equ	0xFE5
  4259                           fsr1h	equ	0xFE2
  4260                           fsr1l	equ	0xFE1
  4261                           status	equ	0xFD8
  4262                           
  4263 ;; *************** function _InitSchedTimer *****************
  4264 ;; Defined at:
  4265 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;Total ram usage:        7 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:   14
  4286 ;; This function calls:
  4287 ;;		_Tmr_TmrBConfig
  4288 ;; This function is called by:
  4289 ;;		_SystemInit
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text7
  4294  0065BE                     __ptext7:
  4295                           	opt stack 0
  4296  0065BE                     _InitSchedTimer:
  4297                           	opt stack 15
  4298                           
  4299                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4300                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4301                           
  4302                           ;incstack = 0
  4303  0065BE  0E04               	movlw	4
  4304  0065C0  0100               	movlb	0	; () banked
  4305  0065C2  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4306                           
  4307                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4308  0065C4  0E0C               	movlw	12
  4309  0065C6  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4310                           
  4311                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4312  0065C8  0E00               	movlw	0
  4313  0065CA  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4314                           
  4315                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4316  0065CC  0E01               	movlw	1
  4317  0065CE  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4318                           
  4319                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4320  0065D0  0E03               	movlw	3
  4321  0065D2  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4322  0065D4  0EE8               	movlw	232
  4323  0065D6  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4324                           
  4325                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4326  0065D8  0E01               	movlw	1
  4327  0065DA  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4331  0065DC  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4332  0065DE  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4333  0065E0  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4334  0065E2  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4335  0065E4  0E02               	movlw	2
  4336  0065E6  EC0C  F01F         	call	_Tmr_TmrBConfig
  4337  0065EA  0012               	return		;funcret
  4338  0065EC                     __end_of_InitSchedTimer:
  4339                           	opt stack 0
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           intcon	equ	0xFF2
  4345                           intcon2	equ	0xFF1
  4346                           intcon3	equ	0xFF0
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           postdec1	equ	0xFE5
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           status	equ	0xFD8
  4353                           
  4354 ;; *************** function _Tmr_TmrBConfig *****************
  4355 ;; Defined at:
  4356 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  TmrNumb         1    wreg     unsigned char 
  4359 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4360 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;Total ram usage:        4 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:   13
  4379 ;; This function calls:
  4380 ;;		_TmrBInit
  4381 ;;		_Tmr_StartTmr
  4382 ;;		_Tmr_TmrBIrqSet
  4383 ;;		_Tmr_TmrBPrSet
  4384 ;; This function is called by:
  4385 ;;		_InitSchedTimer
  4386 ;;		_InitAuxTimer
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text8
  4391  003E18                     __ptext8:
  4392                           	opt stack 0
  4393  003E18                     _Tmr_TmrBConfig:
  4394                           	opt stack 15
  4395                           
  4396                           ;incstack = 0
  4397                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4398  003E18  0100               	movlb	0	; () banked
  4399  003E1A  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4400                           
  4401                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4402  003E1C  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4403  003E20  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4404  003E24  50DF               	movf	indf2,w,c
  4405  003E26  0100               	movlb	0	; () banked
  4406  003E28  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4407  003E2A  EE20 F001          	lfsr	2,1
  4408  003E2E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4409  003E30  26D9               	addwf	fsr2l,f,c
  4410  003E32  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4411  003E34  22DA               	addwfc	fsr2h,f,c
  4412  003E36  50DF               	movf	indf2,w,c
  4413  003E38  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4414  003E3A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4415  003E3C  ECF7  F025         	call	_TmrBInit
  4416                           
  4417                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4418  003E40  0100               	movlb	0	; () banked
  4419  003E42  EE20 F002          	lfsr	2,2
  4420  003E46  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4421  003E48  26D9               	addwf	fsr2l,f,c
  4422  003E4A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4423  003E4C  22DA               	addwfc	fsr2h,f,c
  4424  003E4E  04DE               	decf	postinc2,w,c
  4425  003E50  A4D8               	btfss	status,2,c
  4426  003E52  D00E               	goto	l546
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;tmr_drv.c: 277: {
  4430                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4431  003E54  EE20 F003          	lfsr	2,3
  4432  003E58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4433  003E5A  26D9               	addwf	fsr2l,f,c
  4434  003E5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4435  003E5E  22DA               	addwfc	fsr2h,f,c
  4436  003E60  50DF               	movf	indf2,w,c
  4437  003E62  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4438  003E64  0E01               	movlw	1
  4439  003E66  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4440  003E68  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4441  003E6A  EC92  F02F         	call	_Tmr_TmrBIrqSet
  4442                           
  4443                           ;tmr_drv.c: 280: }
  4444  003E6E  D00E               	goto	l547
  4445  003E70                     l546:
  4446                           
  4447                           ;tmr_drv.c: 281: else
  4448                           ;tmr_drv.c: 282: {
  4449                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4450  003E70  0100               	movlb	0	; () banked
  4451  003E72  EE20 F003          	lfsr	2,3
  4452  003E76  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4453  003E78  26D9               	addwf	fsr2l,f,c
  4454  003E7A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4455  003E7C  22DA               	addwfc	fsr2h,f,c
  4456  003E7E  50DF               	movf	indf2,w,c
  4457  003E80  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4458  003E82  0E00               	movlw	0
  4459  003E84  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4460  003E86  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4461  003E88  EC92  F02F         	call	_Tmr_TmrBIrqSet
  4462  003E8C                     l547:
  4463                           
  4464                           ;tmr_drv.c: 285: }
  4465                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4466  003E8C  0100               	movlb	0	; () banked
  4467  003E8E  EE20 F004          	lfsr	2,4
  4468  003E92  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4469  003E94  26D9               	addwf	fsr2l,f,c
  4470  003E96  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4471  003E98  22DA               	addwfc	fsr2h,f,c
  4472  003E9A  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4473  003E9E  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4474  003EA2  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4475  003EA6  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4476  003EAA  50DF               	movf	indf2,w,c
  4477  003EAC  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4478  003EAE  EE20 F001          	lfsr	2,1
  4479  003EB2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4480  003EB4  26D9               	addwf	fsr2l,f,c
  4481  003EB6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4482  003EB8  22DA               	addwfc	fsr2h,f,c
  4483  003EBA  50DF               	movf	indf2,w,c
  4484  003EBC  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4485  003EBE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4486  003EC0  ECAB  F018         	call	_Tmr_TmrBPrSet
  4487                           
  4488                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4489  003EC4  0100               	movlb	0	; () banked
  4490  003EC6  EE20 F006          	lfsr	2,6
  4491  003ECA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4492  003ECC  26D9               	addwf	fsr2l,f,c
  4493  003ECE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4494  003ED0  22DA               	addwfc	fsr2h,f,c
  4495  003ED2  04DE               	decf	postinc2,w,c
  4496  003ED4  A4D8               	btfss	status,2,c
  4497  003ED6  0012               	return	
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;tmr_drv.c: 290: {
  4501                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4502  003ED8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4503  003EDA  EC22  F034         	call	_Tmr_StartTmr
  4504                           
  4505                           ;tmr_drv.c: 293: }
  4506  003EDE  0012               	return	
  4507  003EE0                     __end_of_Tmr_TmrBConfig:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           intcon	equ	0xFF2
  4514                           intcon2	equ	0xFF1
  4515                           intcon3	equ	0xFF0
  4516                           postinc0	equ	0xFEE
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           indf2	equ	0xFDF
  4522                           postinc2	equ	0xFDE
  4523                           postdec2	equ	0xFDD
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function _Tmr_TmrBPrSet *****************
  4529 ;; Defined at:
  4530 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  TmrNumb         1    wreg     unsigned char 
  4533 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4534 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4535 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4538 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4539 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      enum E7736
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;Total ram usage:       10 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:   12
  4556 ;; This function calls:
  4557 ;;		___lldiv
  4558 ;;		___lmul
  4559 ;; This function is called by:
  4560 ;;		_Tmr_TmrBConfig
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text9
  4565  003156                     __ptext9:
  4566                           	opt stack 0
  4567  003156                     _Tmr_TmrBPrSet:
  4568                           	opt stack 15
  4569                           
  4570                           ;incstack = 0
  4571                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4572  003156  0100               	movlb	0	; () banked
  4573  003158  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4574                           
  4575                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4576                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4577  00315A  0E00               	movlw	0
  4578  00315C  0100               	movlb	0	; () banked
  4579  00315E  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4580  003160  0E00               	movlw	0
  4581  003162  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4582  003164  0E00               	movlw	0
  4583  003166  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4584  003168  0E00               	movlw	0
  4585  00316A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4589  00316C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4590  00316E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4591  003170  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4592  003174  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4593  003178  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4594  00317A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4595  00317C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4596  003180  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4597  003184  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4598  003186  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4599  003188  ECD2  F02C         	call	___lmul	;wreg free
  4600  00318C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4601  003190  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4602  003194  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4603  003198  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4604                           
  4605                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4606  00319C  0E00               	movlw	0
  4607  00319E  0100               	movlb	0	; () banked
  4608  0031A0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4609  0031A2  0E1B               	movlw	27
  4610  0031A4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4611  0031A6  0EB7               	movlw	183
  4612  0031A8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4613  0031AA  0E00               	movlw	0
  4614  0031AC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4615  0031AE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4616  0031B2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4617  0031B6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4618  0031BA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4619  0031BE  EC16  F029         	call	___lldiv	;wreg free
  4620  0031C2  0100               	movlb	0	; () banked
  4621  0031C4  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4622  0031C6  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4623  0031C8  E13A               	bnz	l15357
  4624  0031CA  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4625  0031CC  A0D8               	btfss	status,0,c
  4626  0031CE  D02D               	goto	l529
  4627  0031D0  D036               	goto	l528
  4628  0031D2                     
  4629                           ; BSR set to: 0
  4630                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4631                           
  4632                           ; BSR set to: 0
  4633  0031D2  0E00               	movlw	0
  4634  0031D4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4635  0031D6  0E1B               	movlw	27
  4636  0031D8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4637  0031DA  0EB7               	movlw	183
  4638  0031DC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4639  0031DE  0E00               	movlw	0
  4640  0031E0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4641  0031E2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4642  0031E6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4643  0031EA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4644  0031EE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4645  0031F2  EC16  F029         	call	___lldiv	;wreg free
  4646  0031F6  0100               	movlb	0	; () banked
  4647  0031F8  5189               	movf	?___lldiv& (0+255),w,b
  4648  0031FA  6ECB               	movwf	4043,c	;volatile
  4649                           
  4650                           ;tmr_drv.c: 210: break;
  4651  0031FC  D01D               	goto	l531
  4652  0031FE                     
  4653                           ; BSR set to: 0
  4654                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4655                           
  4656                           ; BSR set to: 0
  4657  0031FE  0E00               	movlw	0
  4658  003200  6F89               	movwf	___lldiv@dividend& (0+255),b
  4659  003202  0E1B               	movlw	27
  4660  003204  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4661  003206  0EB7               	movlw	183
  4662  003208  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4663  00320A  0E00               	movlw	0
  4664  00320C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4665  00320E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4666  003212  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4667  003216  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4668  00321A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4669  00321E  EC16  F029         	call	___lldiv	;wreg free
  4670  003222  0100               	movlb	0	; () banked
  4671  003224  5189               	movf	?___lldiv& (0+255),w,b
  4672  003226  6E77               	movwf	3959,c	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;tmr_drv.c: 219: }
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;tmr_drv.c: 218: break;
  4679                           
  4680                           ;tmr_drv.c: 217: default:
  4681                           
  4682                           ;tmr_drv.c: 215: break;
  4683  003228  D007               	goto	l531
  4684  00322A                     l529:
  4685                           
  4686                           ; BSR set to: 0
  4687                           
  4688                           ; BSR set to: 0
  4689  00322A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4690                           
  4691                           ; Switch size 1, requested type "space"
  4692                           ; Number of cases is 2, Range of values is 2 to 4
  4693                           ; switch strategies available:
  4694                           ; Name         Instructions Cycles
  4695                           ; simple_byte            7     4 (average)
  4696                           ;	Chosen strategy is simple_byte
  4697  00322C  0A02               	xorlw	2	; case 2
  4698  00322E  B4D8               	btfsc	status,2,c
  4699  003230  D7D0               	goto	l530
  4700  003232  0A06               	xorlw	6	; case 4
  4701  003234  B4D8               	btfsc	status,2,c
  4702  003236  D7E3               	goto	l532
  4703  003238                     l531:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4707                           
  4708                           ; BSR set to: 0
  4709  003238  0E00               	movlw	0
  4710  00323A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4711                           
  4712                           ;tmr_drv.c: 223: }
  4713  00323C  0012               	return	
  4714  00323E                     l528:
  4715  00323E                     l15357:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;tmr_drv.c: 224: else
  4719                           ;tmr_drv.c: 225: {
  4720                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4721  00323E  0E01               	movlw	1
  4722  003240  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4723                           
  4724                           ; BSR set to: 0
  4725  003242  0012               	return	
  4726  003244                     __end_of_Tmr_TmrBPrSet:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodh	equ	0xFF4
  4733                           prodl	equ	0xFF3
  4734                           intcon	equ	0xFF2
  4735                           intcon2	equ	0xFF1
  4736                           intcon3	equ	0xFF0
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1h	equ	0xFE2
  4741                           fsr1l	equ	0xFE1
  4742                           indf2	equ	0xFDF
  4743                           postinc2	equ	0xFDE
  4744                           postdec2	equ	0xFDD
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _Tmr_TmrBIrqSet *****************
  4750 ;; Defined at:
  4751 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  TmrNumb         1    wreg     unsigned char 
  4754 ;;  Priority        1   29[BANK0 ] enum E7716
  4755 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;Total ram usage:        3 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:   11
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_Tmr_TmrBConfig
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text10
  4782  005F24                     __ptext10:
  4783                           	opt stack 0
  4784  005F24                     _Tmr_TmrBIrqSet:
  4785                           	opt stack 16
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;incstack = 0
  4789                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4790  005F24  0100               	movlb	0	; () banked
  4791  005F26  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4792                           
  4793                           ;tmr_drv.c: 156: switch (TmrNumb)
  4794  005F28  D01A               	goto	l520
  4795  005F2A                     l521:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4799  005F2A  929E               	bcf	3998,1,c	;volatile
  4800                           
  4801                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4802  005F2C  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4803  005F2E  D002               	bra	u9155
  4804  005F30  929F               	bcf	3999,1,c	;volatile
  4805  005F32  D001               	bra	u9156
  4806  005F34                     u9155:
  4807  005F34  829F               	bsf	3999,1,c	;volatile
  4808  005F36                     u9156:
  4809                           
  4810                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4811  005F36  0100               	movlb	0	; () banked
  4812  005F38  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4813  005F3A  D002               	bra	u9165
  4814  005F3C  929D               	bcf	3997,1,c	;volatile
  4815  005F3E  D001               	bra	u9166
  4816  005F40                     u9165:
  4817  005F40  829D               	bsf	3997,1,c	;volatile
  4818  005F42                     u9166:
  4819                           
  4820                           ;tmr_drv.c: 165: break;
  4821  005F42  0012               	return	
  4822  005F44                     l523:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4826  005F44  96A4               	bcf	4004,3,c	;volatile
  4827                           
  4828                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4829  005F46  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4830  005F48  D002               	bra	u9175
  4831  005F4A  96A5               	bcf	4005,3,c	;volatile
  4832  005F4C  D001               	bra	u9176
  4833  005F4E                     u9175:
  4834  005F4E  86A5               	bsf	4005,3,c	;volatile
  4835  005F50                     u9176:
  4836                           
  4837                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4838  005F50  0100               	movlb	0	; () banked
  4839  005F52  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4840  005F54  D002               	bra	u9185
  4841  005F56  96A3               	bcf	4003,3,c	;volatile
  4842  005F58  D001               	bra	u9186
  4843  005F5A                     u9185:
  4844  005F5A  86A3               	bsf	4003,3,c	;volatile
  4845  005F5C                     u9186:
  4846                           
  4847                           ;tmr_drv.c: 178: }
  4848                           
  4849                           ;tmr_drv.c: 177: break;
  4850                           
  4851                           ;tmr_drv.c: 176: default:
  4852                           
  4853                           ;tmr_drv.c: 174: break;
  4854  005F5C  0012               	return	
  4855  005F5E                     l520:
  4856  005F5E  0100               	movlb	0	; () banked
  4857  005F60  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4858                           
  4859                           ; Switch size 1, requested type "space"
  4860                           ; Number of cases is 2, Range of values is 2 to 4
  4861                           ; switch strategies available:
  4862                           ; Name         Instructions Cycles
  4863                           ; simple_byte            7     4 (average)
  4864                           ;	Chosen strategy is simple_byte
  4865  005F62  0A02               	xorlw	2	; case 2
  4866  005F64  B4D8               	btfsc	status,2,c
  4867  005F66  D7E1               	goto	l521
  4868  005F68  0A06               	xorlw	6	; case 4
  4869  005F6A  A4D8               	btfss	status,2,c
  4870  005F6C  0012               	return	
  4871  005F6E  D7EA               	goto	l523
  4872  005F70                     __end_of_Tmr_TmrBIrqSet:
  4873                           	opt stack 0
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           prodh	equ	0xFF4
  4879                           prodl	equ	0xFF3
  4880                           intcon	equ	0xFF2
  4881                           intcon2	equ	0xFF1
  4882                           intcon3	equ	0xFF0
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           postdec1	equ	0xFE5
  4886                           fsr1h	equ	0xFE2
  4887                           fsr1l	equ	0xFE1
  4888                           indf2	equ	0xFDF
  4889                           postinc2	equ	0xFDE
  4890                           postdec2	equ	0xFDD
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _Tmr_StartTmr *****************
  4896 ;; Defined at:
  4897 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  TmrNumb         1    wreg     unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;Total ram usage:        1 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:   11
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_Tmr_TmrBConfig
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text11
  4926  006844                     __ptext11:
  4927                           	opt stack 0
  4928  006844                     _Tmr_StartTmr:
  4929                           	opt stack 16
  4930                           
  4931                           ;incstack = 0
  4932                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4933  006844  0100               	movlb	0	; () banked
  4934  006846  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4935                           
  4936                           ;tmr_drv.c: 245: switch (TmrNumb)
  4937  006848  D004               	goto	l538
  4938  00684A                     l539:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4942  00684A  84CA               	bsf	4042,2,c	;volatile
  4943                           
  4944                           ;tmr_drv.c: 250: break;
  4945  00684C  0012               	return	
  4946  00684E                     l541:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4950  00684E  8476               	bsf	3958,2,c	;volatile
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;tmr_drv.c: 259: }
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;tmr_drv.c: 258: break;
  4957                           
  4958                           ;tmr_drv.c: 257: default:
  4959                           
  4960                           ;tmr_drv.c: 255: break;
  4961  006850  0012               	return	
  4962  006852                     l538:
  4963                           
  4964                           ; BSR set to: 0
  4965  006852  0100               	movlb	0	; () banked
  4966  006854  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4967                           
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 2, Range of values is 2 to 4
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte            7     4 (average)
  4973                           ;	Chosen strategy is simple_byte
  4974  006856  0A02               	xorlw	2	; case 2
  4975  006858  B4D8               	btfsc	status,2,c
  4976  00685A  D7F7               	goto	l539
  4977  00685C  0A06               	xorlw	6	; case 4
  4978  00685E  A4D8               	btfss	status,2,c
  4979  006860  0012               	return	
  4980  006862  D7F5               	goto	l541
  4981  006864                     __end_of_Tmr_StartTmr:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           intcon2	equ	0xFF1
  4991                           intcon3	equ	0xFF0
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           postdec1	equ	0xFE5
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           postinc2	equ	0xFDE
  4999                           postdec2	equ	0xFDD
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _TmrBInit *****************
  5005 ;; Defined at:
  5006 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  TmrNumb         1    wreg     unsigned char 
  5009 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5010 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;Total ram usage:        4 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:   11
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_Tmr_TmrBConfig
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text12
  5037  004BEE                     __ptext12:
  5038                           	opt stack 0
  5039  004BEE                     _TmrBInit:
  5040                           	opt stack 16
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;incstack = 0
  5044                           ;TmrBInit@TmrNumb stored from wreg
  5045  004BEE  0100               	movlb	0	; () banked
  5046  004BF0  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5047                           
  5048                           ;tmr_drv.c: 75: switch (TmrNumb)
  5049  004BF2  D03F               	goto	l500
  5050  004BF4                     l503:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5054  004BF4  90CA               	bcf	4042,0,c	;volatile
  5055  004BF6  D001               	goto	L1
  5056  004BF8                     l505:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5060  004BF8  80CA               	bsf	4042,0,c	;volatile
  5061  004BFA                     L1:
  5062                           
  5063                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5064  004BFA  92CA               	bcf	4042,1,c	;volatile
  5065                           
  5066                           ;tmr_drv.c: 91: break;
  5067  004BFC  D00E               	goto	l504
  5068  004BFE                     l506:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5072  004BFE  80CA               	bsf	4042,0,c	;volatile
  5073                           
  5074                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5075  004C00  82CA               	bsf	4042,1,c	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;tmr_drv.c: 100: }
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;tmr_drv.c: 99: break;
  5082                           
  5083                           ;tmr_drv.c: 98: default:
  5084                           
  5085                           ;tmr_drv.c: 96: break;
  5086  004C02  D00B               	goto	l504
  5087  004C04                     
  5088                           ; BSR set to: 0
  5089  004C04  0100               	movlb	0	; () banked
  5090  004C06  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5091                           
  5092                           ; Switch size 1, requested type "space"
  5093                           ; Number of cases is 3, Range of values is 1 to 16
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte           10     6 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098  004C08  0A01               	xorlw	1	; case 1
  5099  004C0A  B4D8               	btfsc	status,2,c
  5100  004C0C  D7F3               	goto	l503
  5101  004C0E  0A05               	xorlw	5	; case 4
  5102  004C10  B4D8               	btfsc	status,2,c
  5103  004C12  D7F2               	goto	l505
  5104  004C14  0A14               	xorlw	20	; case 16
  5105  004C16  B4D8               	btfsc	status,2,c
  5106  004C18  D7F2               	goto	l506
  5107  004C1A                     l504:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5111                           
  5112                           ; BSR set to: 0
  5113  004C1A  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5114  004C1E  0EFF               	movlw	255
  5115  004C20  277F               	addwf	??_TmrBInit& (0+255),f,b
  5116  004C22  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5117  004C24  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5118  004C26  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5119  004C28  50CA               	movf	4042,w,c	;volatile
  5120  004C2A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5121  004C2C  0B87               	andlw	-121
  5122  004C2E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5123  004C30  6ECA               	movwf	4042,c	;volatile
  5124                           
  5125                           ;tmr_drv.c: 104: break;
  5126  004C32  0012               	return	
  5127  004C34                     l511:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5131  004C34  9076               	bcf	3958,0,c	;volatile
  5132  004C36  D001               	goto	L2
  5133  004C38                     l513:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5137  004C38  8076               	bsf	3958,0,c	;volatile
  5138  004C3A                     L2:
  5139                           
  5140                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5141  004C3A  9276               	bcf	3958,1,c	;volatile
  5142                           
  5143                           ;tmr_drv.c: 120: break;
  5144  004C3C  D00D               	goto	l512
  5145  004C3E                     l514:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5149  004C3E  8076               	bsf	3958,0,c	;volatile
  5150                           
  5151                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5152  004C40  8276               	bsf	3958,1,c	;volatile
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;tmr_drv.c: 129: }
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;tmr_drv.c: 128: break;
  5159                           
  5160                           ;tmr_drv.c: 127: default:
  5161                           
  5162                           ;tmr_drv.c: 125: break;
  5163  004C42  D00A               	goto	l512
  5164  004C44                     
  5165                           ; BSR set to: 0
  5166                           
  5167                           ; BSR set to: 0
  5168  004C44  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5169                           
  5170                           ; Switch size 1, requested type "space"
  5171                           ; Number of cases is 3, Range of values is 1 to 16
  5172                           ; switch strategies available:
  5173                           ; Name         Instructions Cycles
  5174                           ; simple_byte           10     6 (average)
  5175                           ;	Chosen strategy is simple_byte
  5176  004C46  0A01               	xorlw	1	; case 1
  5177  004C48  B4D8               	btfsc	status,2,c
  5178  004C4A  D7F4               	goto	l511
  5179  004C4C  0A05               	xorlw	5	; case 4
  5180  004C4E  B4D8               	btfsc	status,2,c
  5181  004C50  D7F3               	goto	l513
  5182  004C52  0A14               	xorlw	20	; case 16
  5183  004C54  B4D8               	btfsc	status,2,c
  5184  004C56  D7F3               	goto	l514
  5185  004C58                     l512:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5189                           
  5190                           ; BSR set to: 0
  5191  004C58  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5192  004C5C  0EFF               	movlw	255
  5193  004C5E  277F               	addwf	??_TmrBInit& (0+255),f,b
  5194  004C60  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5195  004C62  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5196  004C64  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5197  004C66  5076               	movf	3958,w,c	;volatile
  5198  004C68  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5199  004C6A  0B87               	andlw	-121
  5200  004C6C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5201  004C6E  6E76               	movwf	3958,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;tmr_drv.c: 137: }
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;tmr_drv.c: 136: break;
  5208                           
  5209                           ;tmr_drv.c: 135: default:
  5210                           
  5211                           ;tmr_drv.c: 133: break;
  5212  004C70  0012               	return	
  5213  004C72                     l500:
  5214                           
  5215                           ; BSR set to: 0
  5216  004C72  0100               	movlb	0	; () banked
  5217  004C74  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5218                           
  5219                           ; Switch size 1, requested type "space"
  5220                           ; Number of cases is 2, Range of values is 2 to 4
  5221                           ; switch strategies available:
  5222                           ; Name         Instructions Cycles
  5223                           ; simple_byte            7     4 (average)
  5224                           ;	Chosen strategy is simple_byte
  5225  004C76  0A02               	xorlw	2	; case 2
  5226  004C78  B4D8               	btfsc	status,2,c
  5227  004C7A  D7C4               	goto	l502
  5228  004C7C  0A06               	xorlw	6	; case 4
  5229  004C7E  A4D8               	btfss	status,2,c
  5230  004C80  0012               	return	
  5231  004C82  D7E0               	goto	l510
  5232  004C84                     __end_of_TmrBInit:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           intcon	equ	0xFF2
  5241                           intcon2	equ	0xFF1
  5242                           intcon3	equ	0xFF0
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _Sch_MainScheduler *****************
  5256 ;; Defined at:
  5257 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:   22
  5278 ;; This function calls:
  5279 ;;		_InitializeTasks
  5280 ;;		_ScheduleTasks
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text13
  5287  0068C2                     __ptext13:
  5288                           	opt stack 0
  5289  0068C2                     _Sch_MainScheduler:
  5290                           	opt stack 8
  5291                           
  5292                           ;os_sched.c: 178: InitializeTasks();
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;incstack = 0
  5296  0068C2  EC0B  F02A         	call	_InitializeTasks	;wreg free
  5297                           
  5298                           ;os_sched.c: 180: SystemState = RunningState;
  5299  0068C6  0E01               	movlw	1
  5300  0068C8  0100               	movlb	0	; () banked
  5301  0068CA  6FD4               	movwf	_SystemState& (0+255),b
  5302  0068CC                     
  5303                           ;os_sched.c: 188: {
  5304                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5305                           
  5306                           ; BSR set to: 0
  5307  0068CC  0102               	movlb	2	; () banked
  5308  0068CE  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5309  0068D0  A4D8               	btfss	status,2,c
  5310  0068D2  D7FC               	goto	l790
  5311                           
  5312                           ; BSR set to: 2
  5313                           ;os_sched.c: 191: {
  5314                           ;os_sched.c: 196: ScheduleTasks();
  5315  0068D4  EC13  F017         	call	_ScheduleTasks	;wreg free
  5316                           
  5317                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5318  0068D8  0E01               	movlw	1
  5319  0068DA  0102               	movlb	2	; () banked
  5320  0068DC  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5321                           
  5322                           ; BSR set to: 2
  5323                           
  5324                           ; BSR set to: 2
  5325  0068DE  D7F6               	goto	l790
  5326  0068E0                     __end_of_Sch_MainScheduler:
  5327                           	opt stack 0
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           intcon2	equ	0xFF1
  5336                           intcon3	equ	0xFF0
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1h	equ	0xFE2
  5341                           fsr1l	equ	0xFE1
  5342                           indf2	equ	0xFDF
  5343                           postinc2	equ	0xFDE
  5344                           postdec2	equ	0xFDD
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function _ScheduleTasks *****************
  5350 ;; Defined at:
  5351 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  ActiveTaskIn    1    4[BANK4 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Totals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;Total ram usage:        5 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:   21
  5372 ;; This function calls:
  5373 ;;		_I2cSlv_MainTask
  5374 ;;		_Led_MainTask
  5375 ;;		_MdmHttp_MainTask
  5376 ;;		_Mdm_DrvMainFn
  5377 ;;		_Mdm_MainTask
  5378 ;;		_MyApp_Task
  5379 ;;		_Rtcm_MainTask
  5380 ;;		_Term_MainTask
  5381 ;;		_UsbDevice_MainTask
  5382 ;;		_Wdg_MainTask
  5383 ;; This function is called by:
  5384 ;;		_Sch_MainScheduler
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text14
  5389  002E26                     __ptext14:
  5390                           	opt stack 0
  5391  002E26                     _ScheduleTasks:
  5392                           	opt stack 8
  5393                           
  5394                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5395                           
  5396                           ; BSR set to: 2
  5397                           ;incstack = 0
  5398  002E26  0E00               	movlw	0
  5399  002E28  0104               	movlb	4	; () banked
  5400  002E2A  6FFB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5401                           
  5402                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5403  002E2C  0E00               	movlw	0
  5404  002E2E  6FFB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5405  002E30                     l16609:
  5406                           
  5407                           ; BSR set to: 4
  5408  002E30  0E30               	movlw	low _TaskNumber
  5409  002E32  6EF6               	movwf	tblptrl,c
  5410  002E34                     	if	1	;There is more than 1 active tblptr byte
  5411  002E34  0EFC               	movlw	high _TaskNumber
  5412  002E36  6EF7               	movwf	tblptrh,c
  5413  002E38                     	endif
  5414  002E38                     	if	0	;There are less than 3 active tblptr bytes
  5415  002E38                     	endif
  5416  002E38  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5417  002E3A  6FF7               	movwf	??_ScheduleTasks& (0+255),b
  5418  002E3C  6BF8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5419  002E3E  0009               	tblrd		*+
  5420  002E40  50F5               	movf	tablat,w,c
  5421  002E42  5DF7               	subwf	??_ScheduleTasks& (0+255),w,b
  5422  002E44  0009               	tblrd		*+
  5423  002E46  50F5               	movf	tablat,w,c
  5424  002E48  59F8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5425  002E4A  B0D8               	btfsc	status,0,c
  5426  002E4C  0012               	return	
  5427                           
  5428                           ; BSR set to: 4
  5429                           ;os_sched.c: 106: {
  5430                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5431                           
  5432                           ; BSR set to: 4
  5433                           
  5434                           ; BSR set to: 4
  5435  002E4E  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5436  002E50  0D08               	mullw	8
  5437  002E52  0E03               	movlw	3
  5438  002E54  26F3               	addwf	prodl,f,c
  5439  002E56  0E00               	movlw	0
  5440  002E58  22F4               	addwfc	prodh,f,c
  5441  002E5A  0EA4               	movlw	low _TaskTable
  5442  002E5C  24F3               	addwf	prodl,w,c
  5443  002E5E  6ED9               	movwf	fsr2l,c
  5444  002E60  0E05               	movlw	high _TaskTable
  5445  002E62  20F4               	addwfc	prodh,w,c
  5446  002E64  6EDA               	movwf	fsr2h,c
  5447  002E66  2ADE               	incf	postinc2,f,c
  5448  002E68  0E00               	movlw	0
  5449  002E6A  22DD               	addwfc	postdec2,f,c
  5450                           
  5451                           ; BSR set to: 4
  5452                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5453  002E6C  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5454  002E6E  0D08               	mullw	8
  5455  002E70  0E05               	movlw	5
  5456  002E72  26F3               	addwf	prodl,f,c
  5457  002E74  0E00               	movlw	0
  5458  002E76  22F4               	addwfc	prodh,f,c
  5459  002E78  0EA4               	movlw	low _TaskTable
  5460  002E7A  24F3               	addwf	prodl,w,c
  5461  002E7C  6ED9               	movwf	fsr2l,c
  5462  002E7E  0E05               	movlw	high _TaskTable
  5463  002E80  20F4               	addwfc	prodh,w,c
  5464  002E82  6EDA               	movwf	fsr2h,c
  5465  002E84  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5466  002E86  0D08               	mullw	8
  5467  002E88  0E03               	movlw	3
  5468  002E8A  26F3               	addwf	prodl,f,c
  5469  002E8C  0E00               	movlw	0
  5470  002E8E  22F4               	addwfc	prodh,f,c
  5471  002E90  0EA4               	movlw	low _TaskTable
  5472  002E92  24F3               	addwf	prodl,w,c
  5473  002E94  6EE1               	movwf	fsr1l,c
  5474  002E96  0E05               	movlw	high _TaskTable
  5475  002E98  20F4               	addwfc	prodh,w,c
  5476  002E9A  6EE2               	movwf	fsr1h,c
  5477  002E9C  50DE               	movf	postinc2,w,c
  5478  002E9E  5CE6               	subwf	postinc1,w,c
  5479  002EA0  50DE               	movf	postinc2,w,c
  5480  002EA2  58E6               	subwfb	postinc1,w,c
  5481  002EA4  A0D8               	btfss	status,0,c
  5482  002EA6  D04E               	goto	l775
  5483                           
  5484                           ; BSR set to: 4
  5485                           ;os_sched.c: 111: {
  5486                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5487  002EA8  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5488  002EAA  0D08               	mullw	8
  5489  002EAC  0E03               	movlw	3
  5490  002EAE  26F3               	addwf	prodl,f,c
  5491  002EB0  0E00               	movlw	0
  5492  002EB2  22F4               	addwfc	prodh,f,c
  5493  002EB4  0EA4               	movlw	low _TaskTable
  5494  002EB6  24F3               	addwf	prodl,w,c
  5495  002EB8  6ED9               	movwf	fsr2l,c
  5496  002EBA  0E05               	movlw	high _TaskTable
  5497  002EBC  20F4               	addwfc	prodh,w,c
  5498  002EBE  6EDA               	movwf	fsr2h,c
  5499  002EC0  0E00               	movlw	0
  5500  002EC2  6EDE               	movwf	postinc2,c
  5501  002EC4  0E00               	movlw	0
  5502  002EC6  6EDD               	movwf	postdec2,c
  5503                           
  5504                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5505  002EC8  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5506  002ECA  0D08               	mullw	8
  5507  002ECC  0E02               	movlw	2
  5508  002ECE  26F3               	addwf	prodl,f,c
  5509  002ED0  0E00               	movlw	0
  5510  002ED2  22F4               	addwfc	prodh,f,c
  5511  002ED4  0EA4               	movlw	low _TaskTable
  5512  002ED6  24F3               	addwf	prodl,w,c
  5513  002ED8  6ED9               	movwf	fsr2l,c
  5514  002EDA  0E05               	movlw	high _TaskTable
  5515  002EDC  20F4               	addwfc	prodh,w,c
  5516  002EDE  6EDA               	movwf	fsr2h,c
  5517  002EE0  0E01               	movlw	1
  5518  002EE2  6EDF               	movwf	indf2,c
  5519                           
  5520                           ; BSR set to: 4
  5521                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5522  002EE4  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5523  002EE6  0D08               	mullw	8
  5524  002EE8  0EA4               	movlw	low _TaskTable
  5525  002EEA  24F3               	addwf	prodl,w,c
  5526  002EEC  6ED9               	movwf	fsr2l,c
  5527  002EEE  0E05               	movlw	high _TaskTable
  5528  002EF0  20F4               	addwfc	prodh,w,c
  5529  002EF2  6EDA               	movwf	fsr2h,c
  5530  002EF4  D801               	call	u16438
  5531  002EF6  D017               	goto	u16439
  5532  002EF8                     u16438:
  5533  002EF8  0005               	push	
  5534  002EFA  6EFA               	movwf	pclath,c
  5535  002EFC  50DE               	movf	postinc2,w,c
  5536  002EFE  6EFD               	movwf	tosl,c
  5537  002F00  50DE               	movf	postinc2,w,c
  5538  002F02  6EFE               	movwf	tosh,c
  5539  002F04  50F8               	movf	tblptru,w,c
  5540  002F06  6EFF               	movwf	tosu,c
  5541  002F08  50FA               	movf	pclath,w,c
  5542  002F0A  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5543  002F0C  0D08               	mullw	8
  5544  002F0E  0E07               	movlw	7
  5545  002F10  26F3               	addwf	prodl,f,c
  5546  002F12  0E00               	movlw	0
  5547  002F14  22F4               	addwfc	prodh,f,c
  5548  002F16  0EA4               	movlw	low _TaskTable
  5549  002F18  24F3               	addwf	prodl,w,c
  5550  002F1A  6ED9               	movwf	fsr2l,c
  5551  002F1C  0E05               	movlw	high _TaskTable
  5552  002F1E  20F4               	addwfc	prodh,w,c
  5553  002F20  6EDA               	movwf	fsr2h,c
  5554  002F22  50DF               	movf	indf2,w,c
  5555  002F24  0012               	return		;indir
  5556  002F26                     u16439:
  5557                           
  5558                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5559  002F26  0104               	movlb	4	; () banked
  5560  002F28  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5561  002F2A  0D08               	mullw	8
  5562  002F2C  0E02               	movlw	2
  5563  002F2E  26F3               	addwf	prodl,f,c
  5564  002F30  0E00               	movlw	0
  5565  002F32  22F4               	addwfc	prodh,f,c
  5566  002F34  0EA4               	movlw	low _TaskTable
  5567  002F36  24F3               	addwf	prodl,w,c
  5568  002F38  6ED9               	movwf	fsr2l,c
  5569  002F3A  0E05               	movlw	high _TaskTable
  5570  002F3C  20F4               	addwfc	prodh,w,c
  5571  002F3E  6EDA               	movwf	fsr2h,c
  5572  002F40  0E00               	movlw	0
  5573  002F42  6EDF               	movwf	indf2,c
  5574  002F44                     l775:
  5575                           
  5576                           ; BSR set to: 4
  5577                           
  5578                           ; BSR set to: 4
  5579                           
  5580                           ;os_sched.c: 117: else
  5581                           ;os_sched.c: 118: {
  5582                           
  5583                           ; BSR set to: 4
  5584  002F44  2BFB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5585  002F46  D774               	goto	l16609
  5586  002F48                     __end_of_ScheduleTasks:
  5587                           	opt stack 0
  5588                           tosu	equ	0xFFF
  5589                           tosh	equ	0xFFE
  5590                           tosl	equ	0xFFD
  5591                           pclath	equ	0xFFA
  5592                           tblptru	equ	0xFF8
  5593                           tblptrh	equ	0xFF7
  5594                           tblptrl	equ	0xFF6
  5595                           tablat	equ	0xFF5
  5596                           prodh	equ	0xFF4
  5597                           prodl	equ	0xFF3
  5598                           intcon	equ	0xFF2
  5599                           intcon2	equ	0xFF1
  5600                           intcon3	equ	0xFF0
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           postinc1	equ	0xFE6
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _InitializeTasks *****************
  5615 ;; Defined at:
  5616 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;		None
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  ActiveTaskIn    1    2[BANK4 ] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;Total ram usage:        3 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:   21
  5637 ;; This function calls:
  5638 ;;		_I2cSlv_MainTask
  5639 ;;		_Led_MainTask
  5640 ;;		_MdmHttp_MainTask
  5641 ;;		_Mdm_DrvMainFn
  5642 ;;		_Mdm_MainTask
  5643 ;;		_MyApp_Task
  5644 ;;		_Rtcm_MainTask
  5645 ;;		_Term_MainTask
  5646 ;;		_UsbDevice_MainTask
  5647 ;;		_Wdg_MainTask
  5648 ;; This function is called by:
  5649 ;;		_Sch_MainScheduler
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text15
  5654  005416                     __ptext15:
  5655                           	opt stack 0
  5656  005416                     _InitializeTasks:
  5657                           	opt stack 8
  5658                           
  5659                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5660                           
  5661                           ; BSR set to: 4
  5662                           ;incstack = 0
  5663  005416  0E00               	movlw	0
  5664  005418  0104               	movlb	4	; () banked
  5665  00541A  6FF9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5666                           
  5667                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5668  00541C  0E00               	movlw	0
  5669  00541E  6FF9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5670  005420                     l16597:
  5671                           
  5672                           ; BSR set to: 4
  5673  005420  0E30               	movlw	low _TaskNumber
  5674  005422  6EF6               	movwf	tblptrl,c
  5675  005424                     	if	1	;There is more than 1 active tblptr byte
  5676  005424  0EFC               	movlw	high _TaskNumber
  5677  005426  6EF7               	movwf	tblptrh,c
  5678  005428                     	endif
  5679  005428                     	if	0	;There are less than 3 active tblptr bytes
  5680  005428                     	endif
  5681  005428  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5682  00542A  6FF7               	movwf	??_InitializeTasks& (0+255),b
  5683  00542C  6BF8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5684  00542E  0009               	tblrd		*+
  5685  005430  50F5               	movf	tablat,w,c
  5686  005432  5DF7               	subwf	??_InitializeTasks& (0+255),w,b
  5687  005434  0009               	tblrd		*+
  5688  005436  50F5               	movf	tablat,w,c
  5689  005438  59F8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5690  00543A  B0D8               	btfsc	status,0,c
  5691  00543C  0012               	return	
  5692                           
  5693                           ; BSR set to: 4
  5694                           ;os_sched.c: 86: {
  5695                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5696                           
  5697                           ; BSR set to: 4
  5698                           
  5699                           ; BSR set to: 4
  5700  00543E  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5701  005440  0D08               	mullw	8
  5702  005442  0EA4               	movlw	low _TaskTable
  5703  005444  24F3               	addwf	prodl,w,c
  5704  005446  6ED9               	movwf	fsr2l,c
  5705  005448  0E05               	movlw	high _TaskTable
  5706  00544A  20F4               	addwfc	prodh,w,c
  5707  00544C  6EDA               	movwf	fsr2h,c
  5708  00544E  D801               	call	u16398
  5709  005450  D017               	goto	u16399
  5710  005452                     u16398:
  5711  005452  0005               	push	
  5712  005454  6EFA               	movwf	pclath,c
  5713  005456  50DE               	movf	postinc2,w,c
  5714  005458  6EFD               	movwf	tosl,c
  5715  00545A  50DE               	movf	postinc2,w,c
  5716  00545C  6EFE               	movwf	tosh,c
  5717  00545E  50F8               	movf	tblptru,w,c
  5718  005460  6EFF               	movwf	tosu,c
  5719  005462  50FA               	movf	pclath,w,c
  5720  005464  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5721  005466  0D08               	mullw	8
  5722  005468  0E07               	movlw	7
  5723  00546A  26F3               	addwf	prodl,f,c
  5724  00546C  0E00               	movlw	0
  5725  00546E  22F4               	addwfc	prodh,f,c
  5726  005470  0EA4               	movlw	low _TaskTable
  5727  005472  24F3               	addwf	prodl,w,c
  5728  005474  6ED9               	movwf	fsr2l,c
  5729  005476  0E05               	movlw	high _TaskTable
  5730  005478  20F4               	addwfc	prodh,w,c
  5731  00547A  6EDA               	movwf	fsr2h,c
  5732  00547C  50DF               	movf	indf2,w,c
  5733  00547E  0012               	return		;indir
  5734  005480                     u16399:
  5735  005480  0104               	movlb	4	; () banked
  5736  005482  2BF9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5737  005484  D7CD               	goto	l16597
  5738  005486                     __end_of_InitializeTasks:
  5739                           	opt stack 0
  5740                           tosu	equ	0xFFF
  5741                           tosh	equ	0xFFE
  5742                           tosl	equ	0xFFD
  5743                           pclath	equ	0xFFA
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           intcon2	equ	0xFF1
  5752                           intcon3	equ	0xFF0
  5753                           postinc0	equ	0xFEE
  5754                           wreg	equ	0xFE8
  5755                           postinc1	equ	0xFE6
  5756                           postdec1	equ	0xFE5
  5757                           fsr1h	equ	0xFE2
  5758                           fsr1l	equ	0xFE1
  5759                           indf2	equ	0xFDF
  5760                           postinc2	equ	0xFDE
  5761                           postdec2	equ	0xFDD
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _MyApp_Task *****************
  5767 ;; Defined at:
  5768 ;;		line 148 in file "../Source/c/04_App/app.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  Options         1    wreg     unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  Options         1    0[COMRAM] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:   19
  5789 ;; This function calls:
  5790 ;;		_Eeprom_Reset
  5791 ;;		_Led_SetLedBlinkTime
  5792 ;;		_addCmdFsm
  5793 ;;		_delCmdFsm
  5794 ;;		_detectCmd
  5795 ;;		_initFsm
  5796 ;;		_triggerCmdFsm
  5797 ;; This function is called by:
  5798 ;;		_InitializeTasks
  5799 ;;		_ScheduleTasks
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text16
  5804  00332C                     __ptext16:
  5805                           	opt stack 0
  5806  00332C                     _MyApp_Task:
  5807                           	opt stack 9
  5808                           
  5809                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5810                           ;app.c: 152: switch (SystemState)
  5811                           
  5812                           ; BSR set to: 4
  5813                           ;incstack = 0
  5814  00332C  D069               	goto	l2591
  5815  00332E                     
  5816                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5817  00332E  0E00               	movlw	0
  5818  003330  0100               	movlb	0	; () banked
  5819  003332  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5820  003334  0E64               	movlw	100
  5821  003336  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5822  003338  0E03               	movlw	3
  5823  00333A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5824  00333C  0E84               	movlw	132
  5825  00333E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5826  003340  0E01               	movlw	1
  5827  003342  ECFF  F02D         	call	_Led_SetLedBlinkTime
  5828                           
  5829                           ;app.c: 158: break;
  5830  003346  0012               	return	
  5831  003348                     
  5832                           ;app.c: 165: if (initFsm())
  5833  003348  EC71  F023         	call	_initFsm	;wreg free
  5834  00334C  0900               	iorlw	0
  5835  00334E  B4D8               	btfsc	status,2,c
  5836  003350  0012               	return	
  5837                           
  5838                           ;app.c: 166: {
  5839                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5840  003352  0E01               	movlw	1
  5841  003354  0101               	movlb	1	; () banked
  5842  003356  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;app.c: 168: }
  5846                           ;app.c: 169: break;
  5847  003358  0012               	return	
  5848  00335A                     
  5849                           ; BSR set to: 1
  5850                           ;app.c: 172: currentState = detectCmd();
  5851                           
  5852                           ; BSR set to: 1
  5853  00335A  EC5D  F025         	call	_detectCmd	;wreg free
  5854  00335E  0101               	movlb	1	; () banked
  5855  003360  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5856                           
  5857                           ;app.c: 173: break;
  5858  003362  0012               	return	
  5859  003364                     
  5860                           ; BSR set to: 1
  5861                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5862                           
  5863                           ; BSR set to: 1
  5864  003364  0ECA               	movlw	low _receivedNumber
  5865  003366  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5866  003368  0E04               	movlw	high _receivedNumber
  5867  00336A  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5868  00336C  0E93               	movlw	low _smsText
  5869  00336E  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5870  003370  0E04               	movlw	high _smsText
  5871  003372  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5872  003374  EC0C  F01D         	call	_addCmdFsm	;wreg free
  5873  003378  0900               	iorlw	0
  5874  00337A  B4D8               	btfsc	status,2,c
  5875  00337C  0012               	return	
  5876                           
  5877                           ;app.c: 177: {
  5878                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5879  00337E  0E01               	movlw	1
  5880  003380  0101               	movlb	1	; () banked
  5881  003382  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5882                           
  5883                           ; BSR set to: 1
  5884                           ;app.c: 179: }
  5885                           ;app.c: 180: break;
  5886  003384  0012               	return	
  5887  003386                     
  5888                           ; BSR set to: 1
  5889                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5890                           
  5891                           ; BSR set to: 1
  5892  003386  0ECA               	movlw	low _receivedNumber
  5893  003388  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5894  00338A  0E04               	movlw	high _receivedNumber
  5895  00338C  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5896  00338E  0E93               	movlw	low _smsText
  5897  003390  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  5898  003392  0E04               	movlw	high _smsText
  5899  003394  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5900  003396  EC5A  F021         	call	_delCmdFsm	;wreg free
  5901  00339A  0900               	iorlw	0
  5902  00339C  B4D8               	btfsc	status,2,c
  5903  00339E  0012               	return	
  5904                           
  5905                           ;app.c: 184: {
  5906                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5907  0033A0  0E01               	movlw	1
  5908  0033A2  0101               	movlb	1	; () banked
  5909  0033A4  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5910                           
  5911                           ; BSR set to: 1
  5912                           ;app.c: 186: }
  5913                           ;app.c: 187: break;
  5914  0033A6  0012               	return	
  5915  0033A8                     
  5916                           ; BSR set to: 1
  5917                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5918                           
  5919                           ; BSR set to: 1
  5920  0033A8  0ECA               	movlw	low _receivedNumber
  5921  0033AA  0100               	movlb	0	; () banked
  5922  0033AC  6F89               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5923  0033AE  0E04               	movlw	high _receivedNumber
  5924  0033B0  6F8A               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5925  0033B2  ECE6  F02A         	call	_triggerCmdFsm	;wreg free
  5926  0033B6  0900               	iorlw	0
  5927  0033B8  B4D8               	btfsc	status,2,c
  5928  0033BA  0012               	return	
  5929                           
  5930                           ;app.c: 191: {
  5931                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5932  0033BC  0E01               	movlw	1
  5933  0033BE  0101               	movlb	1	; () banked
  5934  0033C0  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;app.c: 193: }
  5938                           ;app.c: 194: break;
  5939  0033C2  0012               	return	
  5940  0033C4                     
  5941                           ; BSR set to: 1
  5942                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5943                           
  5944                           ; BSR set to: 1
  5945  0033C4  EC56  F02D         	call	_Eeprom_Reset	;wreg free
  5946  0033C8  0900               	iorlw	0
  5947  0033CA  A4D8               	btfss	status,2,c
  5948  0033CC  0012               	return	
  5949                           
  5950                           ;app.c: 198: {
  5951                           ;app.c: 199: currentState = GATE_INIT;
  5952  0033CE  0E00               	movlw	0
  5953  0033D0  0101               	movlb	1	; () banked
  5954  0033D2  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5955                           
  5956                           ; BSR set to: 1
  5957                           ;app.c: 205: }
  5958                           
  5959                           ; BSR set to: 1
  5960                           ;app.c: 204: break;
  5961                           
  5962                           ;app.c: 203: default:
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;app.c: 200: }
  5966                           ;app.c: 201: break;
  5967  0033D4  0012               	return	
  5968  0033D6                     
  5969                           ; BSR set to: 1
  5970  0033D6  0101               	movlb	1	; () banked
  5971  0033D8  51D9               	movf	MyApp_Task@currentState& (0+255),w,b
  5972                           
  5973                           ; Switch size 1, requested type "space"
  5974                           ; Number of cases is 6, Range of values is 0 to 5
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; simple_byte           19    10 (average)
  5978                           ;	Chosen strategy is simple_byte
  5979  0033DA  0A00               	xorlw	0	; case 0
  5980  0033DC  B4D8               	btfsc	status,2,c
  5981  0033DE  D7B4               	goto	l2596
  5982  0033E0  0A01               	xorlw	1	; case 1
  5983  0033E2  B4D8               	btfsc	status,2,c
  5984  0033E4  D7BA               	goto	l2599
  5985  0033E6  0A03               	xorlw	3	; case 2
  5986  0033E8  B4D8               	btfsc	status,2,c
  5987  0033EA  D7BC               	goto	l2600
  5988  0033EC  0A01               	xorlw	1	; case 3
  5989  0033EE  B4D8               	btfsc	status,2,c
  5990  0033F0  D7CA               	goto	l2602
  5991  0033F2  0A07               	xorlw	7	; case 4
  5992  0033F4  B4D8               	btfsc	status,2,c
  5993  0033F6  D7D8               	goto	l2604
  5994  0033F8  0A01               	xorlw	1	; case 5
  5995  0033FA  A4D8               	btfss	status,2,c
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;app.c: 211: }
  5999                           
  6000                           ; BSR set to: 1
  6001                           ;app.c: 210: break;
  6002                           
  6003                           ;app.c: 209: default:
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;app.c: 206: break;
  6007  0033FC  0012               	return	
  6008  0033FE  D7E2               	goto	l2606
  6009  003400                     l2591:
  6010                           
  6011                           ; BSR set to: 1
  6012  003400  0100               	movlb	0	; () banked
  6013  003402  51D4               	movf	_SystemState& (0+255),w,b
  6014                           
  6015                           ; Switch size 1, requested type "space"
  6016                           ; Number of cases is 2, Range of values is 0 to 1
  6017                           ; switch strategies available:
  6018                           ; Name         Instructions Cycles
  6019                           ; simple_byte            7     4 (average)
  6020                           ;	Chosen strategy is simple_byte
  6021  003404  0A00               	xorlw	0	; case 0
  6022  003406  B4D8               	btfsc	status,2,c
  6023  003408  D792               	goto	l2592
  6024  00340A  0A01               	xorlw	1	; case 1
  6025  00340C  A4D8               	btfss	status,2,c
  6026  00340E  0012               	return	
  6027  003410  D7E2               	goto	l2595
  6028  003412                     __end_of_MyApp_Task:
  6029                           	opt stack 0
  6030                           tosu	equ	0xFFF
  6031                           tosh	equ	0xFFE
  6032                           tosl	equ	0xFFD
  6033                           pclath	equ	0xFFA
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           intcon	equ	0xFF2
  6041                           intcon2	equ	0xFF1
  6042                           intcon3	equ	0xFF0
  6043                           postinc0	equ	0xFEE
  6044                           wreg	equ	0xFE8
  6045                           postinc1	equ	0xFE6
  6046                           postdec1	equ	0xFE5
  6047                           fsr1h	equ	0xFE2
  6048                           fsr1l	equ	0xFE1
  6049                           indf2	equ	0xFDF
  6050                           postinc2	equ	0xFDE
  6051                           postdec2	equ	0xFDD
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function _Term_MainTask *****************
  6057 ;; Defined at:
  6058 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  Options         1    wreg     unsigned char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  Options         1    0[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;Total ram usage:        0 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:   17
  6079 ;; This function calls:
  6080 ;;		_Term_MainSm
  6081 ;; This function is called by:
  6082 ;;		_InitializeTasks
  6083 ;;		_ScheduleTasks
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text17
  6088  006950                     __ptext17:
  6089                           	opt stack 0
  6090  006950                     _Term_MainTask:
  6091                           	opt stack 11
  6092                           
  6093                           ;term.c: 847: switch (SystemState)
  6094                           
  6095                           ;incstack = 0
  6096  006950  D003               	goto	l2490
  6097  006952                     
  6098                           ;term.c: 858: Term_MainSm();
  6099  006952  EC5B  F008         	call	_Term_MainSm	;wreg free
  6100                           
  6101                           ;term.c: 865: }
  6102                           
  6103                           ;term.c: 864: break;
  6104                           
  6105                           ;term.c: 863: default:
  6106                           
  6107                           ;term.c: 860: break;
  6108  006956  0012               	return	
  6109  006958                     l2490:
  6110  006958  0100               	movlb	0	; () banked
  6111  00695A  51D4               	movf	_SystemState& (0+255),w,b
  6112                           
  6113                           ; Switch size 1, requested type "space"
  6114                           ; Number of cases is 2, Range of values is 0 to 1
  6115                           ; switch strategies available:
  6116                           ; Name         Instructions Cycles
  6117                           ; simple_byte            7     4 (average)
  6118                           ;	Chosen strategy is simple_byte
  6119  00695C  0A00               	xorlw	0	; case 0
  6120  00695E  B4D8               	btfsc	status,2,c
  6121  006960  0012               	return	
  6122  006962  0A01               	xorlw	1	; case 1
  6123  006964  A4D8               	btfss	status,2,c
  6124  006966  0012               	return	
  6125  006968  D7F4               	goto	l2493
  6126  00696A                     __end_of_Term_MainTask:
  6127                           	opt stack 0
  6128                           tosu	equ	0xFFF
  6129                           tosh	equ	0xFFE
  6130                           tosl	equ	0xFFD
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           intcon2	equ	0xFF1
  6140                           intcon3	equ	0xFF0
  6141                           postinc0	equ	0xFEE
  6142                           wreg	equ	0xFE8
  6143                           postinc1	equ	0xFE6
  6144                           postdec1	equ	0xFE5
  6145                           fsr1h	equ	0xFE2
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function _Rtcm_MainTask *****************
  6155 ;; Defined at:
  6156 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  Options         1    wreg     unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  Options         1    0[COMRAM] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:   14
  6177 ;; This function calls:
  6178 ;;		_Rtcc_AlarmConfig
  6179 ;;		_Rtcc_LockRtc
  6180 ;;		_Rtcc_RtcConfig
  6181 ;;		_Rtcc_SetRtcStatus
  6182 ;;		_Rtcc_UnlockRtc
  6183 ;;		_Rtcm_GetRtccDate
  6184 ;;		_Rtcm_SetRtccDate
  6185 ;; This function is called by:
  6186 ;;		_InitializeTasks
  6187 ;;		_ScheduleTasks
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text18
  6192  00508C                     __ptext18:
  6193                           	opt stack 0
  6194  00508C                     _Rtcm_MainTask:
  6195                           	opt stack 14
  6196                           
  6197                           ;rtcm.c: 101: switch (SystemState)
  6198                           
  6199                           ;incstack = 0
  6200  00508C  D03D               	goto	l2220
  6201  00508E                     l2221:
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6205  00508E  86CD               	bsf	4045,3,c	;volatile
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6209  005090  0E00               	movlw	0
  6210  005092  0103               	movlb	3	; () banked
  6211  005094  6FBC               	movwf	_RtcConfig& (0+255),b
  6212                           
  6213                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6214  005096  0E00               	movlw	0
  6215  005098  6FBD               	movwf	(_RtcConfig+1)& (0+255),b
  6216                           
  6217                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6218  00509A  0E01               	movlw	1
  6219  00509C  6FBE               	movwf	(_RtcConfig+2)& (0+255),b
  6220                           
  6221                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6222  00509E  0E01               	movlw	1
  6223  0050A0  6FBF               	movwf	(_RtcConfig+3)& (0+255),b
  6224                           
  6225                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6226  0050A2  0E01               	movlw	1
  6227  0050A4  6FB8               	movwf	_AlCfg& (0+255),b
  6228                           
  6229                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6230  0050A6  0E01               	movlw	1
  6231  0050A8  6FB9               	movwf	(_AlCfg+1)& (0+255),b
  6232                           
  6233                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6234  0050AA  0E01               	movlw	1
  6235  0050AC  6FBA               	movwf	(_AlCfg+2)& (0+255),b
  6236                           
  6237                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6238  0050AE  0E00               	movlw	0
  6239  0050B0  6FBB               	movwf	(_AlCfg+3)& (0+255),b
  6240                           
  6241                           ; BSR set to: 3
  6242                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6243  0050B2  EC44  F035         	call	_Rtcc_UnlockRtc	;wreg free
  6244                           
  6245                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6246  0050B6  0EBC               	movlw	low _RtcConfig
  6247  0050B8  0100               	movlb	0	; () banked
  6248  0050BA  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6249  0050BC  0E03               	movlw	high _RtcConfig
  6250  0050BE  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6251  0050C0  ECBE  F024         	call	_Rtcc_RtcConfig	;wreg free
  6252                           
  6253                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6254  0050C4  0EB8               	movlw	low _AlCfg
  6255  0050C6  0100               	movlb	0	; () banked
  6256  0050C8  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6257  0050CA  0E03               	movlw	high _AlCfg
  6258  0050CC  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6259  0050CE  ECB0  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6260                           
  6261                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6262  0050D2  0E01               	movlw	1
  6263  0050D4  ECF3  F034         	call	_Rtcc_SetRtcStatus
  6264                           
  6265                           ;rtcm.c: 127: Rtcc_LockRtc();
  6266  0050D8  EC4C  F035         	call	_Rtcc_LockRtc	;wreg free
  6267                           
  6268                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6269  0050DC  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6270  0050E0  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6271  0050E4  0E07               	movlw	7
  6272  0050E6                     u16311:
  6273  0050E6  CFDB FFEB          	movff	plusw2,plusw0
  6274  0050EA  06E8               	decf	wreg,f,c
  6275  0050EC  E2FC               	bc	u16311
  6276  0050EE  ECAB  F02D         	call	_Rtcm_SetRtccDate	;wreg free
  6277                           
  6278                           ;rtcm.c: 154: break;
  6279  0050F2  0012               	return	
  6280  0050F4                     
  6281                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6282  0050F4  EC83  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6283  0050F8  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6284  0050FC  0E07               	movlw	7
  6285  0050FE                     u16321:
  6286  0050FE  CFEB FFDB          	movff	plusw0,plusw2
  6287  005102  06E8               	decf	wreg,f,c
  6288  005104  E2FC               	bc	u16321
  6289                           
  6290                           ;rtcm.c: 165: }
  6291                           
  6292                           ;rtcm.c: 164: break;
  6293                           
  6294                           ;rtcm.c: 163: default:
  6295                           
  6296                           ;rtcm.c: 160: break;
  6297  005106  0012               	return	
  6298  005108                     l2220:
  6299  005108  0100               	movlb	0	; () banked
  6300  00510A  51D4               	movf	_SystemState& (0+255),w,b
  6301                           
  6302                           ; Switch size 1, requested type "space"
  6303                           ; Number of cases is 2, Range of values is 0 to 1
  6304                           ; switch strategies available:
  6305                           ; Name         Instructions Cycles
  6306                           ; simple_byte            7     4 (average)
  6307                           ;	Chosen strategy is simple_byte
  6308  00510C  0A00               	xorlw	0	; case 0
  6309  00510E  B4D8               	btfsc	status,2,c
  6310  005110  D7BE               	goto	l2221
  6311  005112  0A01               	xorlw	1	; case 1
  6312  005114  A4D8               	btfss	status,2,c
  6313  005116  0012               	return	
  6314  005118  D7ED               	goto	l2223
  6315  00511A                     __end_of_Rtcm_MainTask:
  6316                           	opt stack 0
  6317                           tosu	equ	0xFFF
  6318                           tosh	equ	0xFFE
  6319                           tosl	equ	0xFFD
  6320                           pclath	equ	0xFFA
  6321                           tblptru	equ	0xFF8
  6322                           tblptrh	equ	0xFF7
  6323                           tblptrl	equ	0xFF6
  6324                           tablat	equ	0xFF5
  6325                           prodh	equ	0xFF4
  6326                           prodl	equ	0xFF3
  6327                           intcon	equ	0xFF2
  6328                           intcon2	equ	0xFF1
  6329                           intcon3	equ	0xFF0
  6330                           postinc0	equ	0xFEE
  6331                           plusw0	equ	0xFEB
  6332                           wreg	equ	0xFE8
  6333                           postinc1	equ	0xFE6
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           plusw2	equ	0xFDB
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _Led_MainTask *****************
  6346 ;; Defined at:
  6347 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  Options         1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  Options         1    0[COMRAM] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:   14
  6368 ;; This function calls:
  6369 ;;		_LedStateMachine
  6370 ;; This function is called by:
  6371 ;;		_InitializeTasks
  6372 ;;		_ScheduleTasks
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text19
  6377  003BB6                     __ptext19:
  6378                           	opt stack 0
  6379  003BB6                     _Led_MainTask:
  6380                           	opt stack 14
  6381                           
  6382                           ;led.c: 300: switch (SystemState)
  6383                           
  6384                           ;incstack = 0
  6385  003BB6  D05C               	goto	l2134
  6386  003BB8                     l2135:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6390  003BB8  9895               	bcf	3989,4,c	;volatile
  6391                           
  6392                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6393  003BBA  9A95               	bcf	3989,5,c	;volatile
  6394                           
  6395                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6396  003BBC  9C95               	bcf	3989,6,c	;volatile
  6397                           
  6398                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6399  003BBE  9883               	bcf	3971,4,c	;volatile
  6400                           
  6401                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6402  003BC0  9A83               	bcf	3971,5,c	;volatile
  6403                           
  6404                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6405  003BC2  9C83               	bcf	3971,6,c	;volatile
  6406                           
  6407                           ;led.c: 311: break;
  6408  003BC4  0012               	return	
  6409  003BC6                     
  6410                           ; BSR set to: 0
  6411                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6412                           
  6413                           ; BSR set to: 0
  6414  003BC6  0EFA               	movlw	low _Led1Sts
  6415  003BC8  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6416  003BCA  0E01               	movlw	high _Led1Sts
  6417  003BCC  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6418  003BCE  0EF9               	movlw	low _Led1OutSts
  6419  003BD0  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6420  003BD2  0E01               	movlw	high _Led1OutSts
  6421  003BD4  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6422  003BD6  0E72               	movlw	low _Led1Blink
  6423  003BD8  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6424  003BDA  0E03               	movlw	high _Led1Blink
  6425  003BDC  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6426  003BDE  0E96               	movlw	low _Led1Pulse
  6427  003BE0  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6428  003BE2  0E03               	movlw	high _Led1Pulse
  6429  003BE4  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6430  003BE6  0E01               	movlw	1
  6431  003BE8  EC19  F024         	call	_LedStateMachine
  6432  003BEC  0100               	movlb	0	; () banked
  6433  003BEE  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6434  003BF0  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6435  003BF2  5083               	movf	3971,w,c	;volatile
  6436  003BF4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6437  003BF6  0BEF               	andlw	-17
  6438  003BF8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6439  003BFA  6E83               	movwf	3971,c	;volatile
  6440                           
  6441                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6442  003BFC  0EF8               	movlw	low _Led2Sts
  6443  003BFE  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6444  003C00  0E01               	movlw	high _Led2Sts
  6445  003C02  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6446  003C04  0EF7               	movlw	low _Led2OutSts
  6447  003C06  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6448  003C08  0E01               	movlw	high _Led2OutSts
  6449  003C0A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6450  003C0C  0E69               	movlw	low _Led2Blink
  6451  003C0E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6452  003C10  0E03               	movlw	high _Led2Blink
  6453  003C12  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6454  003C14  0E90               	movlw	low _Led2Pulse
  6455  003C16  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6456  003C18  0E03               	movlw	high _Led2Pulse
  6457  003C1A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6458  003C1C  0E02               	movlw	2
  6459  003C1E  EC19  F024         	call	_LedStateMachine
  6460  003C22  0100               	movlb	0	; () banked
  6461  003C24  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6462  003C26  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6463  003C28  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6464  003C2A  5083               	movf	3971,w,c	;volatile
  6465  003C2C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6466  003C2E  0BDF               	andlw	-33
  6467  003C30  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6468  003C32  6E83               	movwf	3971,c	;volatile
  6469                           
  6470                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6471  003C34  0EF6               	movlw	low _Led3Sts
  6472  003C36  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6473  003C38  0E01               	movlw	high _Led3Sts
  6474  003C3A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6475  003C3C  0EF5               	movlw	low _Led3OutSts
  6476  003C3E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6477  003C40  0E01               	movlw	high _Led3OutSts
  6478  003C42  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6479  003C44  0E60               	movlw	low _Led3Blink
  6480  003C46  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6481  003C48  0E03               	movlw	high _Led3Blink
  6482  003C4A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6483  003C4C  0E8A               	movlw	low _Led3Pulse
  6484  003C4E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6485  003C50  0E03               	movlw	high _Led3Pulse
  6486  003C52  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6487  003C54  0E03               	movlw	3
  6488  003C56  EC19  F024         	call	_LedStateMachine
  6489  003C5A  0100               	movlb	0	; () banked
  6490  003C5C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6491  003C5E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6492  003C60  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6493  003C62  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6494  003C64  5083               	movf	3971,w,c	;volatile
  6495  003C66  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6496  003C68  0BBF               	andlw	-65
  6497  003C6A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6498  003C6C  6E83               	movwf	3971,c	;volatile
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;led.c: 326: }
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;led.c: 325: break;
  6505                           
  6506                           ;led.c: 324: default:
  6507                           
  6508                           ;led.c: 321: break;
  6509  003C6E  0012               	return	
  6510  003C70                     l2134:
  6511                           
  6512                           ; BSR set to: 0
  6513  003C70  0100               	movlb	0	; () banked
  6514  003C72  51D4               	movf	_SystemState& (0+255),w,b
  6515                           
  6516                           ; Switch size 1, requested type "space"
  6517                           ; Number of cases is 2, Range of values is 0 to 1
  6518                           ; switch strategies available:
  6519                           ; Name         Instructions Cycles
  6520                           ; simple_byte            7     4 (average)
  6521                           ;	Chosen strategy is simple_byte
  6522  003C74  0A00               	xorlw	0	; case 0
  6523  003C76  B4D8               	btfsc	status,2,c
  6524  003C78  D79F               	goto	l2135
  6525  003C7A  0A01               	xorlw	1	; case 1
  6526  003C7C  A4D8               	btfss	status,2,c
  6527  003C7E  0012               	return	
  6528  003C80  D7A2               	goto	l2137
  6529  003C82                     __end_of_Led_MainTask:
  6530                           	opt stack 0
  6531                           tosu	equ	0xFFF
  6532                           tosh	equ	0xFFE
  6533                           tosl	equ	0xFFD
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           intcon3	equ	0xFF0
  6544                           postinc0	equ	0xFEE
  6545                           plusw0	equ	0xFEB
  6546                           wreg	equ	0xFE8
  6547                           postinc1	equ	0xFE6
  6548                           postdec1	equ	0xFE5
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           indf2	equ	0xFDF
  6552                           postinc2	equ	0xFDE
  6553                           postdec2	equ	0xFDD
  6554                           plusw2	equ	0xFDB
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _UsbDevice_MainTask *****************
  6560 ;; Defined at:
  6561 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  Options         1    wreg     unsigned char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  Options         1    0[COMRAM] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   20
  6582 ;; This function calls:
  6583 ;;		_CDCTxService
  6584 ;;		_USBDeviceInit
  6585 ;;		_USBDeviceTasks
  6586 ;; This function is called by:
  6587 ;;		_InitializeTasks
  6588 ;;		_ScheduleTasks
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text20
  6593  0066E8                     __ptext20:
  6594                           	opt stack 0
  6595  0066E8                     _UsbDevice_MainTask:
  6596                           	opt stack 8
  6597                           
  6598                           ;usb_device_mgr.c: 74: switch (SystemState)
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;incstack = 0
  6602  0066E8  D008               	goto	l1992
  6603  0066EA                     
  6604                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6605  0066EA  ECC5  F012         	call	_USBDeviceInit	;wreg free
  6606                           
  6607                           ;usb_device_mgr.c: 80: ;
  6608                           ;usb_device_mgr.c: 81: break;
  6609  0066EE  0012               	return	
  6610  0066F0                     
  6611                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6612  0066F0  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6613                           
  6614                           ;usb_device_mgr.c: 90: CDCTxService();
  6615  0066F4  EC12  F014         	call	_CDCTxService	;wreg free
  6616                           
  6617                           ;usb_device_mgr.c: 101: }
  6618                           
  6619                           ;usb_device_mgr.c: 100: break;
  6620                           
  6621                           ;usb_device_mgr.c: 99: default:
  6622                           
  6623                           ;usb_device_mgr.c: 96: break;
  6624  0066F8  0012               	return	
  6625  0066FA                     l1992:
  6626  0066FA  0100               	movlb	0	; () banked
  6627  0066FC  51D4               	movf	_SystemState& (0+255),w,b
  6628                           
  6629                           ; Switch size 1, requested type "space"
  6630                           ; Number of cases is 2, Range of values is 0 to 1
  6631                           ; switch strategies available:
  6632                           ; Name         Instructions Cycles
  6633                           ; simple_byte            7     4 (average)
  6634                           ;	Chosen strategy is simple_byte
  6635  0066FE  0A00               	xorlw	0	; case 0
  6636  006700  B4D8               	btfsc	status,2,c
  6637  006702  D7F3               	goto	l1993
  6638  006704  0A01               	xorlw	1	; case 1
  6639  006706  A4D8               	btfss	status,2,c
  6640  006708  0012               	return	
  6641  00670A  D7F2               	goto	l1995
  6642  00670C                     __end_of_UsbDevice_MainTask:
  6643                           	opt stack 0
  6644                           tosu	equ	0xFFF
  6645                           tosh	equ	0xFFE
  6646                           tosl	equ	0xFFD
  6647                           pclath	equ	0xFFA
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           intcon2	equ	0xFF1
  6656                           intcon3	equ	0xFF0
  6657                           postinc0	equ	0xFEE
  6658                           plusw0	equ	0xFEB
  6659                           wreg	equ	0xFE8
  6660                           postinc1	equ	0xFE6
  6661                           postdec1	equ	0xFE5
  6662                           fsr1h	equ	0xFE2
  6663                           fsr1l	equ	0xFE1
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           plusw2	equ	0xFDB
  6668                           fsr2h	equ	0xFDA
  6669                           fsr2l	equ	0xFD9
  6670                           status	equ	0xFD8
  6671                           
  6672 ;; *************** function _MdmHttp_MainTask *****************
  6673 ;; Defined at:
  6674 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  Options         1    wreg     unsigned char 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  Options         1    0[COMRAM] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:   15
  6695 ;; This function calls:
  6696 ;;		_HttpGetMethod
  6697 ;;		_InitGprsNetwork
  6698 ;; This function is called by:
  6699 ;;		_InitializeTasks
  6700 ;;		_ScheduleTasks
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text21
  6705  006004                     __ptext21:
  6706                           	opt stack 0
  6707  006004                     _MdmHttp_MainTask:
  6708                           	opt stack 13
  6709                           
  6710                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6711                           
  6712                           ;incstack = 0
  6713  006004  D019               	goto	l1291
  6714  006006                     
  6715                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6716  006006  0E03               	movlw	3
  6717  006008  0100               	movlb	0	; () banked
  6718  00600A  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6719  00600C  A4D8               	btfss	status,2,c
  6720  00600E  0012               	return	
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;mdm_gsm_gprs_http.c: 570: {
  6724                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6725  006010  C31A  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6726  006014  C31B  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6727  006018  C1EC  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6728  00601C  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6729  006020  0101               	movlb	1	; () banked
  6730  006022  6FEB               	movwf	_GprsNetworkSts& (0+255),b
  6731                           
  6732                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6733  006024  0EA7               	movlw	low _HttpGetDataLocal
  6734  006026  0100               	movlb	0	; () banked
  6735  006028  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6736  00602A  0E03               	movlw	high _HttpGetDataLocal
  6737  00602C  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6738  00602E  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6739  006032  0101               	movlb	1	; () banked
  6740  006034  6FEA               	movwf	_HttpGetMethodSts& (0+255),b
  6741                           
  6742                           ; BSR set to: 1
  6743                           ;mdm_gsm_gprs_http.c: 581: }
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;mdm_gsm_gprs_http.c: 580: break;
  6747                           
  6748                           ;mdm_gsm_gprs_http.c: 579: default:
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;mdm_gsm_gprs_http.c: 575: }
  6752                           ;mdm_gsm_gprs_http.c: 576: break;
  6753  006036  0012               	return	
  6754  006038                     l1291:
  6755                           
  6756                           ; BSR set to: 1
  6757  006038  0100               	movlb	0	; () banked
  6758  00603A  51D4               	movf	_SystemState& (0+255),w,b
  6759                           
  6760                           ; Switch size 1, requested type "space"
  6761                           ; Number of cases is 2, Range of values is 0 to 1
  6762                           ; switch strategies available:
  6763                           ; Name         Instructions Cycles
  6764                           ; simple_byte            7     4 (average)
  6765                           ;	Chosen strategy is simple_byte
  6766  00603C  0A00               	xorlw	0	; case 0
  6767  00603E  B4D8               	btfsc	status,2,c
  6768  006040  0012               	return	
  6769  006042  0A01               	xorlw	1	; case 1
  6770  006044  A4D8               	btfss	status,2,c
  6771  006046  0012               	return	
  6772  006048  D7DE               	goto	l1294
  6773  00604A                     __end_of_MdmHttp_MainTask:
  6774                           	opt stack 0
  6775                           tosu	equ	0xFFF
  6776                           tosh	equ	0xFFE
  6777                           tosl	equ	0xFFD
  6778                           pclath	equ	0xFFA
  6779                           tblptru	equ	0xFF8
  6780                           tblptrh	equ	0xFF7
  6781                           tblptrl	equ	0xFF6
  6782                           tablat	equ	0xFF5
  6783                           prodh	equ	0xFF4
  6784                           prodl	equ	0xFF3
  6785                           intcon	equ	0xFF2
  6786                           intcon2	equ	0xFF1
  6787                           intcon3	equ	0xFF0
  6788                           postinc0	equ	0xFEE
  6789                           plusw0	equ	0xFEB
  6790                           wreg	equ	0xFE8
  6791                           postinc1	equ	0xFE6
  6792                           postdec1	equ	0xFE5
  6793                           fsr1h	equ	0xFE2
  6794                           fsr1l	equ	0xFE1
  6795                           indf2	equ	0xFDF
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           plusw2	equ	0xFDB
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _Mdm_MainTask *****************
  6804 ;; Defined at:
  6805 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  Options         1    wreg     unsigned char 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  Options         1    0[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   15
  6826 ;; This function calls:
  6827 ;;		_CheckModem
  6828 ;;		_ConfigureModem
  6829 ;;		_GetSmsSm
  6830 ;;		_ModemEvtParser
  6831 ;;		_SendSmsSm
  6832 ;;		_TurnOnModem
  6833 ;;		_UartSetConfig
  6834 ;;		_Uart_InitUartModule
  6835 ;; This function is called by:
  6836 ;;		_InitializeTasks
  6837 ;;		_ScheduleTasks
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text22
  6842  005D9A                     __ptext22:
  6843                           	opt stack 0
  6844  005D9A                     _Mdm_MainTask:
  6845                           	opt stack 13
  6846                           
  6847                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6848                           
  6849                           ;incstack = 0
  6850  005D9A  D01E               	goto	l1107
  6851  005D9C                     
  6852                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6853  005D9C  ECA6  F02C         	call	_UartSetConfig	;wreg free
  6854                           
  6855                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6856  005DA0  0E1C               	movlw	low _UartConfig
  6857  005DA2  0100               	movlb	0	; () banked
  6858  005DA4  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6859  005DA6  0E03               	movlw	high _UartConfig
  6860  005DA8  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6861  005DAA  0E01               	movlw	1
  6862  005DAC  EC5E  F005         	call	_Uart_InitUartModule
  6863                           
  6864                           ;mdm_gsm_gprs.c: 764: break;
  6865  005DB0  0012               	return	
  6866  005DB2                     
  6867                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6868  005DB2  EC10  F010         	call	_CheckModem	;wreg free
  6869                           
  6870                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6871  005DB6  042B               	decf	_ComChecCompleted,w,c
  6872  005DB8  A4D8               	btfss	status,2,c
  6873  005DBA  D005               	goto	l1111
  6874  005DBC  0100               	movlb	0	; () banked
  6875  005DBE  51D1               	movf	_MdmStatus& (0+255),w,b
  6876  005DC0  B4D8               	btfsc	status,2,c
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;mdm_gsm_gprs.c: 772: {
  6880                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6881  005DC2  ECB8  F02F         	call	_TurnOnModem	;wreg free
  6882  005DC6                     l1111:
  6883                           
  6884                           ;mdm_gsm_gprs.c: 775: }
  6885                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6886  005DC6  EC39  F01C         	call	_ConfigureModem	;wreg free
  6887                           
  6888                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6889  005DCA  EC98  F00E         	call	_ModemEvtParser	;wreg free
  6890                           
  6891                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6892  005DCE  EC51  F015         	call	_GetSmsSm	;wreg free
  6893                           
  6894                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6895  005DD2  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6896                           
  6897                           ;mdm_gsm_gprs.c: 789: }
  6898                           
  6899                           ;mdm_gsm_gprs.c: 788: break;
  6900                           
  6901                           ;mdm_gsm_gprs.c: 787: default:
  6902                           
  6903                           ;mdm_gsm_gprs.c: 784: break;
  6904  005DD6  0012               	return	
  6905  005DD8                     l1107:
  6906  005DD8  0100               	movlb	0	; () banked
  6907  005DDA  51D4               	movf	_SystemState& (0+255),w,b
  6908                           
  6909                           ; Switch size 1, requested type "space"
  6910                           ; Number of cases is 2, Range of values is 0 to 1
  6911                           ; switch strategies available:
  6912                           ; Name         Instructions Cycles
  6913                           ; simple_byte            7     4 (average)
  6914                           ;	Chosen strategy is simple_byte
  6915  005DDC  0A00               	xorlw	0	; case 0
  6916  005DDE  B4D8               	btfsc	status,2,c
  6917  005DE0  D7DD               	goto	l1108
  6918  005DE2  0A01               	xorlw	1	; case 1
  6919  005DE4  A4D8               	btfss	status,2,c
  6920  005DE6  0012               	return	
  6921  005DE8  D7E4               	goto	l1110
  6922  005DEA                     __end_of_Mdm_MainTask:
  6923                           	opt stack 0
  6924                           tosu	equ	0xFFF
  6925                           tosh	equ	0xFFE
  6926                           tosl	equ	0xFFD
  6927                           pclath	equ	0xFFA
  6928                           tblptru	equ	0xFF8
  6929                           tblptrh	equ	0xFF7
  6930                           tblptrl	equ	0xFF6
  6931                           tablat	equ	0xFF5
  6932                           prodh	equ	0xFF4
  6933                           prodl	equ	0xFF3
  6934                           intcon	equ	0xFF2
  6935                           intcon2	equ	0xFF1
  6936                           intcon3	equ	0xFF0
  6937                           postinc0	equ	0xFEE
  6938                           plusw0	equ	0xFEB
  6939                           wreg	equ	0xFE8
  6940                           postinc1	equ	0xFE6
  6941                           postdec1	equ	0xFE5
  6942                           fsr1h	equ	0xFE2
  6943                           fsr1l	equ	0xFE1
  6944                           indf2	equ	0xFDF
  6945                           postinc2	equ	0xFDE
  6946                           postdec2	equ	0xFDD
  6947                           plusw2	equ	0xFDB
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function _I2cSlv_MainTask *****************
  6953 ;; Defined at:
  6954 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  Options         1    wreg     unsigned char 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  Options         1    0[COMRAM] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;Total ram usage:        0 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:   14
  6975 ;; This function calls:
  6976 ;;		_I2cSendMsgSm
  6977 ;;		_I2cSetConfig
  6978 ;;		_I2c_InitI2cModule
  6979 ;;		_OsAlrm_SetOsAlarm
  6980 ;; This function is called by:
  6981 ;;		_InitializeTasks
  6982 ;;		_ScheduleTasks
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text23
  6987  005B02                     __ptext23:
  6988                           	opt stack 0
  6989  005B02                     _I2cSlv_MainTask:
  6990                           	opt stack 14
  6991                           
  6992                           ;i2c_slv.c: 217: switch (SystemState)
  6993                           
  6994                           ;incstack = 0
  6995  005B02  D020               	goto	l1404
  6996  005B04                     
  6997                           ;i2c_slv.c: 222: I2cSetConfig();
  6998  005B04  EC0D  F033         	call	_I2cSetConfig	;wreg free
  6999                           
  7000                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7001  005B08  0E56               	movlw	low _I2cConfig
  7002  005B0A  0100               	movlb	0	; () banked
  7003  005B0C  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7004  005B0E  0E03               	movlw	high _I2cConfig
  7005  005B10  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7006  005B12  ECD2  F029         	call	_I2c_InitI2cModule	;wreg free
  7007                           
  7008                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7009  005B16  0E00               	movlw	0
  7010  005B18  0100               	movlb	0	; () banked
  7011  005B1A  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7012  005B1C  0E00               	movlw	0
  7013  005B1E  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7014  005B20  0E32               	movlw	50
  7015  005B22  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7016  005B24  0E00               	movlw	0
  7017  005B26  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7018  005B28  0E00               	movlw	0
  7019  005B2A  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7020  005B2C  0E00               	movlw	0
  7021  005B2E  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7022  005B30  0E1A               	movlw	low _I2cDummyTx
  7023  005B32  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7024  005B34  0E69               	movlw	high _I2cDummyTx
  7025  005B36  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7026  005B38  ECD4  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7027                           
  7028                           ;i2c_slv.c: 227: break;
  7029  005B3C  0012               	return	
  7030  005B3E                     
  7031                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7032  005B3E  EC38  F020         	call	_I2cSendMsgSm	;wreg free
  7033                           
  7034                           ;i2c_slv.c: 238: }
  7035                           
  7036                           ;i2c_slv.c: 237: break;
  7037                           
  7038                           ;i2c_slv.c: 236: default:
  7039                           
  7040                           ;i2c_slv.c: 233: break;
  7041  005B42  0012               	return	
  7042  005B44                     l1404:
  7043  005B44  0100               	movlb	0	; () banked
  7044  005B46  51D4               	movf	_SystemState& (0+255),w,b
  7045                           
  7046                           ; Switch size 1, requested type "space"
  7047                           ; Number of cases is 2, Range of values is 0 to 1
  7048                           ; switch strategies available:
  7049                           ; Name         Instructions Cycles
  7050                           ; simple_byte            7     4 (average)
  7051                           ;	Chosen strategy is simple_byte
  7052  005B48  0A00               	xorlw	0	; case 0
  7053  005B4A  B4D8               	btfsc	status,2,c
  7054  005B4C  D7DB               	goto	l1405
  7055  005B4E  0A01               	xorlw	1	; case 1
  7056  005B50  A4D8               	btfss	status,2,c
  7057  005B52  0012               	return	
  7058  005B54  D7F4               	goto	l1407
  7059  005B56                     __end_of_I2cSlv_MainTask:
  7060                           	opt stack 0
  7061                           tosu	equ	0xFFF
  7062                           tosh	equ	0xFFE
  7063                           tosl	equ	0xFFD
  7064                           pclath	equ	0xFFA
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           intcon	equ	0xFF2
  7072                           intcon2	equ	0xFF1
  7073                           intcon3	equ	0xFF0
  7074                           postinc0	equ	0xFEE
  7075                           plusw0	equ	0xFEB
  7076                           wreg	equ	0xFE8
  7077                           postinc1	equ	0xFE6
  7078                           postdec1	equ	0xFE5
  7079                           fsr1h	equ	0xFE2
  7080                           fsr1l	equ	0xFE1
  7081                           indf2	equ	0xFDF
  7082                           postinc2	equ	0xFDE
  7083                           postdec2	equ	0xFDD
  7084                           plusw2	equ	0xFDB
  7085                           fsr2h	equ	0xFDA
  7086                           fsr2l	equ	0xFD9
  7087                           status	equ	0xFD8
  7088                           
  7089 ;; *************** function _Mdm_DrvMainFn *****************
  7090 ;; Defined at:
  7091 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  Options         1    wreg     unsigned char 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  Options         1    0[COMRAM] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   13
  7112 ;; This function calls:
  7113 ;;		_MdmCntSm
  7114 ;; This function is called by:
  7115 ;;		_InitializeTasks
  7116 ;;		_ScheduleTasks
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text24
  7121  006B56                     __ptext24:
  7122                           	opt stack 0
  7123  006B56                     _Mdm_DrvMainFn:
  7124                           	opt stack 15
  7125                           
  7126                           ;mdm_drv.c: 307: MdmCntSm();
  7127                           
  7128                           ;incstack = 0
  7129  006B56  ECC5  F023         	call	_MdmCntSm	;wreg free
  7130  006B5A  0012               	return		;funcret
  7131  006B5C                     __end_of_Mdm_DrvMainFn:
  7132                           	opt stack 0
  7133                           tosu	equ	0xFFF
  7134                           tosh	equ	0xFFE
  7135                           tosl	equ	0xFFD
  7136                           pclath	equ	0xFFA
  7137                           tblptru	equ	0xFF8
  7138                           tblptrh	equ	0xFF7
  7139                           tblptrl	equ	0xFF6
  7140                           tablat	equ	0xFF5
  7141                           prodh	equ	0xFF4
  7142                           prodl	equ	0xFF3
  7143                           intcon	equ	0xFF2
  7144                           intcon2	equ	0xFF1
  7145                           intcon3	equ	0xFF0
  7146                           postinc0	equ	0xFEE
  7147                           plusw0	equ	0xFEB
  7148                           wreg	equ	0xFE8
  7149                           postinc1	equ	0xFE6
  7150                           postdec1	equ	0xFE5
  7151                           fsr1h	equ	0xFE2
  7152                           fsr1l	equ	0xFE1
  7153                           indf2	equ	0xFDF
  7154                           postinc2	equ	0xFDE
  7155                           postdec2	equ	0xFDD
  7156                           plusw2	equ	0xFDB
  7157                           fsr2h	equ	0xFDA
  7158                           fsr2l	equ	0xFD9
  7159                           status	equ	0xFD8
  7160                           
  7161 ;; *************** function _Wdg_MainTask *****************
  7162 ;; Defined at:
  7163 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  Options         1    wreg     unsigned char 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  Options         1    0[COMRAM] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0, cstack
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;Total ram usage:        0 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:   12
  7184 ;; This function calls:
  7185 ;;		_Mcu_ClearWdg
  7186 ;;		_Mcu_SetWdgSts
  7187 ;; This function is called by:
  7188 ;;		_InitializeTasks
  7189 ;;		_ScheduleTasks
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text25
  7194  006778                     __ptext25:
  7195                           	opt stack 0
  7196  006778                     _Wdg_MainTask:
  7197                           	opt stack 16
  7198                           
  7199                           ;wdg.c: 75: switch (SystemState)
  7200                           
  7201                           ;incstack = 0
  7202  006778  D007               	goto	l2510
  7203  00677A                     
  7204                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7205  00677A  0E01               	movlw	1
  7206  00677C  EC29  F035         	call	_Mcu_SetWdgSts
  7207                           
  7208                           ;wdg.c: 81: break;
  7209  006780  0012               	return	
  7210  006782                     
  7211                           ;wdg.c: 86: Mcu_ClearWdg();
  7212  006782  ECAE  F035         	call	_Mcu_ClearWdg	;wreg free
  7213                           
  7214                           ;wdg.c: 92: }
  7215                           
  7216                           ;wdg.c: 91: break;
  7217                           
  7218                           ;wdg.c: 90: default:
  7219                           
  7220                           ;wdg.c: 87: break;
  7221  006786  0012               	return	
  7222  006788                     l2510:
  7223  006788  0100               	movlb	0	; () banked
  7224  00678A  51D4               	movf	_SystemState& (0+255),w,b
  7225                           
  7226                           ; Switch size 1, requested type "space"
  7227                           ; Number of cases is 2, Range of values is 0 to 1
  7228                           ; switch strategies available:
  7229                           ; Name         Instructions Cycles
  7230                           ; simple_byte            7     4 (average)
  7231                           ;	Chosen strategy is simple_byte
  7232  00678C  0A00               	xorlw	0	; case 0
  7233  00678E  B4D8               	btfsc	status,2,c
  7234  006790  D7F4               	goto	l2511
  7235  006792  0A01               	xorlw	1	; case 1
  7236  006794  A4D8               	btfss	status,2,c
  7237  006796  0012               	return	
  7238  006798  D7F4               	goto	l2513
  7239  00679A                     __end_of_Wdg_MainTask:
  7240                           	opt stack 0
  7241                           tosu	equ	0xFFF
  7242                           tosh	equ	0xFFE
  7243                           tosl	equ	0xFFD
  7244                           pclath	equ	0xFFA
  7245                           tblptru	equ	0xFF8
  7246                           tblptrh	equ	0xFF7
  7247                           tblptrl	equ	0xFF6
  7248                           tablat	equ	0xFF5
  7249                           prodh	equ	0xFF4
  7250                           prodl	equ	0xFF3
  7251                           intcon	equ	0xFF2
  7252                           intcon2	equ	0xFF1
  7253                           intcon3	equ	0xFF0
  7254                           postinc0	equ	0xFEE
  7255                           plusw0	equ	0xFEB
  7256                           wreg	equ	0xFE8
  7257                           postinc1	equ	0xFE6
  7258                           postdec1	equ	0xFE5
  7259                           fsr1h	equ	0xFE2
  7260                           fsr1l	equ	0xFE1
  7261                           indf2	equ	0xFDF
  7262                           postinc2	equ	0xFDE
  7263                           postdec2	equ	0xFDD
  7264                           plusw2	equ	0xFDB
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function _Mcu_SetWdgSts *****************
  7270 ;; Defined at:
  7271 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  WdgSts          1    wreg     unsigned char 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;Total ram usage:        1 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:   11
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_Wdg_MainTask
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text26
  7300  006A52                     __ptext26:
  7301                           	opt stack 0
  7302  006A52                     _Mcu_SetWdgSts:
  7303                           	opt stack 16
  7304                           
  7305                           ;incstack = 0
  7306                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7307  006A52  0100               	movlb	0	; () banked
  7308  006A54  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7309                           
  7310                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7311  006A56  0100               	movlb	0	; () banked
  7312  006A58  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7313  006A5A  D002               	bra	u14735
  7314  006A5C  90C0               	bcf	4032,0,c	;volatile
  7315  006A5E  D001               	bra	u14736
  7316  006A60                     u14735:
  7317  006A60  80C0               	bsf	4032,0,c	;volatile
  7318  006A62                     u14736:
  7319  006A62  0012               	return		;funcret
  7320  006A64                     __end_of_Mcu_SetWdgSts:
  7321                           	opt stack 0
  7322                           tosu	equ	0xFFF
  7323                           tosh	equ	0xFFE
  7324                           tosl	equ	0xFFD
  7325                           pclath	equ	0xFFA
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           intcon2	equ	0xFF1
  7334                           intcon3	equ	0xFF0
  7335                           postinc0	equ	0xFEE
  7336                           plusw0	equ	0xFEB
  7337                           wreg	equ	0xFE8
  7338                           postinc1	equ	0xFE6
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           postdec2	equ	0xFDD
  7345                           plusw2	equ	0xFDB
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function _Mcu_ClearWdg *****************
  7351 ;; Defined at:
  7352 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		None
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:   11
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_Wdg_MainTask
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text27
  7381  006B5C                     __ptext27:
  7382                           	opt stack 0
  7383  006B5C                     _Mcu_ClearWdg:
  7384                           	opt stack 16
  7385                           
  7386                           ;incstack = 0
  7387  006B5C  0004               	clrwdt		;# 
  7388  006B5E  0012               	return		;funcret
  7389  006B60                     __end_of_Mcu_ClearWdg:
  7390                           	opt stack 0
  7391                           tosu	equ	0xFFF
  7392                           tosh	equ	0xFFE
  7393                           tosl	equ	0xFFD
  7394                           pclath	equ	0xFFA
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           prodh	equ	0xFF4
  7400                           prodl	equ	0xFF3
  7401                           intcon	equ	0xFF2
  7402                           intcon2	equ	0xFF1
  7403                           intcon3	equ	0xFF0
  7404                           postinc0	equ	0xFEE
  7405                           plusw0	equ	0xFEB
  7406                           wreg	equ	0xFE8
  7407                           postinc1	equ	0xFE6
  7408                           postdec1	equ	0xFE5
  7409                           fsr1h	equ	0xFE2
  7410                           fsr1l	equ	0xFE1
  7411                           indf2	equ	0xFDF
  7412                           postinc2	equ	0xFDE
  7413                           postdec2	equ	0xFDD
  7414                           plusw2	equ	0xFDB
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function _USBDeviceTasks *****************
  7420 ;; Defined at:
  7421 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  i               1   56[BANK0 ] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;Total ram usage:        1 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:   19
  7442 ;; This function calls:
  7443 ;;		_USBCtrlEPAllowStatusStage
  7444 ;;		_USBCtrlEPService
  7445 ;;		_USBDeviceInit
  7446 ;;		_USBIncrement1msInternalTimers
  7447 ;;		_USBStallHandler
  7448 ;;		_USBSuspend
  7449 ;;		_USBWakeFromSuspend
  7450 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7451 ;; This function is called by:
  7452 ;;		_UsbDevice_MainTask
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text28
  7457  001BAA                     __ptext28:
  7458                           	opt stack 0
  7459  001BAA                     _USBDeviceTasks:
  7460                           	opt stack 8
  7461                           
  7462                           ;usb_device.c: 562: }
  7463                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7464                           
  7465                           ; BSR set to: 0
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;usb_device.c: 561: return;
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7472                           
  7473                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7474                           
  7475                           ;usb_device.c: 529: UIE = 0;
  7476                           
  7477                           ;usb_device.c: 524: {
  7478                           ;usb_device.c: 526: UCON = 0;
  7479                           
  7480                           ;usb_device.c: 497: uint8_t i;
  7481                           ;usb_device.c: 523: if (1 != 1)
  7482                           
  7483                           ;incstack = 0
  7484  001BAA  0100               	movlb	0	; () banked
  7485  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7486  001BAE  A4D8               	btfss	status,2,c
  7487  001BB0  D012               	goto	l1615
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;usb_device.c: 585: {
  7491                           ;usb_device.c: 587: UCON = 0;
  7492  001BB2  0E00               	movlw	0
  7493  001BB4  6E65               	movwf	3941,c	;volatile
  7494                           
  7495                           ;usb_device.c: 590: UIE = 0;
  7496  001BB6  0E00               	movlw	0
  7497  001BB8  010F               	movlb	15	; () banked
  7498  001BBA  6F36               	movwf	54,b	;volatile
  7499                           
  7500                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7501  001BBC  0E16               	movlw	22
  7502  001BBE  6F39               	movwf	57,b	;volatile
  7503  001BC0  0E9F               	movlw	159
  7504  001BC2  6F37               	movwf	55,b	;volatile
  7505  001BC4  0E7B               	movlw	123
  7506  001BC6  6F36               	movwf	54,b	;volatile
  7507                           
  7508                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7509  001BC8  D001               	goto	l1616
  7510  001BCA                     l1617:
  7511  001BCA  8665               	bsf	3941,3,c	;volatile
  7512  001BCC                     l1616:
  7513  001BCC  A665               	btfss	3941,3,c	;volatile
  7514  001BCE  D7FD               	goto	l1617
  7515                           
  7516                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7517  001BD0  0E01               	movlw	1
  7518  001BD2  0100               	movlb	0	; () banked
  7519  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7520  001BD6                     l1615:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;usb_device.c: 605: }
  7524                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7525                           
  7526                           ; BSR set to: 0
  7527  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7528  001BD8  B4D8               	btfsc	status,2,c
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;usb_device.c: 609: {
  7532                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7533  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7534  001BDC  D00A               	goto	l1620
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;usb_device.c: 620: {
  7538                           ;usb_device.c: 626: {UIR = 0;};
  7539  001BDE  0E00               	movlw	0
  7540  001BE0  6E62               	movwf	3938,c	;volatile
  7541                           
  7542                           ;usb_device.c: 630: UIE=0;
  7543  001BE2  0E00               	movlw	0
  7544  001BE4  010F               	movlb	15	; () banked
  7545  001BE6  6F36               	movwf	54,b	;volatile
  7546                           
  7547                           ; BSR set to: 15
  7548                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7549  001BE8  8136               	bsf	54,0,b	;volatile
  7550                           
  7551                           ; BSR set to: 15
  7552                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7553  001BEA  8936               	bsf	54,4,b	;volatile
  7554                           
  7555                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7556  001BEC  0E02               	movlw	2
  7557  001BEE  0100               	movlb	0	; () banked
  7558  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7559  001BF2                     l1620:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;usb_device.c: 635: }
  7563                           ;usb_device.c: 636: }
  7564                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7565                           
  7566                           ; BSR set to: 0
  7567                           
  7568                           ; BSR set to: 0
  7569  001BF2  A462               	btfss	3938,2,c	;volatile
  7570  001BF4  D006               	goto	l1621
  7571                           
  7572                           ; BSR set to: 0
  7573  001BF6  010F               	movlb	15	; () banked
  7574  001BF8  A536               	btfss	54,2,b	;volatile
  7575  001BFA  D003               	goto	l1621
  7576                           
  7577                           ; BSR set to: 15
  7578                           ;usb_device.c: 653: {
  7579                           ;usb_device.c: 654: (UIR &= 0xFB);
  7580  001BFC  9462               	bcf	3938,2,c	;volatile
  7581                           
  7582                           ; BSR set to: 15
  7583                           ;usb_device.c: 658: USBWakeFromSuspend();
  7584  001BFE  ECA8  F031         	call	_USBWakeFromSuspend	;wreg free
  7585  001C02                     l1621:
  7586                           
  7587                           ;usb_device.c: 660: }
  7588                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7589  001C02  A265               	btfss	3941,1,c	;volatile
  7590  001C04  D002               	goto	l1622
  7591                           
  7592                           ;usb_device.c: 666: {
  7593                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7594  001C06  98A1               	bcf	4001,4,c	;volatile
  7595                           
  7596                           ;usb_device.c: 668: return;
  7597  001C08  0012               	return	
  7598  001C0A                     l1622:
  7599                           
  7600                           ;usb_device.c: 669: }
  7601                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7602  001C0A  A062               	btfss	3938,0,c	;volatile
  7603  001C0C  D009               	goto	l1623
  7604  001C0E  010F               	movlb	15	; () banked
  7605  001C10  A136               	btfss	54,0,b	;volatile
  7606  001C12  D006               	goto	l1623
  7607                           
  7608                           ; BSR set to: 15
  7609                           ;usb_device.c: 682: {
  7610                           ;usb_device.c: 683: USBDeviceInit();
  7611  001C14  ECC5  F012         	call	_USBDeviceInit	;wreg free
  7612                           
  7613                           ;usb_device.c: 687: ;
  7614                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7615  001C18  0E04               	movlw	4
  7616  001C1A  0100               	movlb	0	; () banked
  7617  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;usb_device.c: 699: (UIR &= 0xFE);
  7621  001C1E  9062               	bcf	3938,0,c	;volatile
  7622  001C20                     l1623:
  7623                           
  7624                           ;usb_device.c: 700: }
  7625                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7626                           
  7627                           ; BSR set to: 0
  7628  001C20  A862               	btfss	3938,4,c	;volatile
  7629  001C22  D004               	goto	l1624
  7630  001C24  010F               	movlb	15	; () banked
  7631  001C26  B936               	btfsc	54,4,b	;volatile
  7632                           
  7633                           ; BSR set to: 15
  7634                           ;usb_device.c: 706: {
  7635                           ;usb_device.c: 712: USBSuspend();
  7636  001C28  EC4D  F032         	call	_USBSuspend	;wreg free
  7637  001C2C                     l1624:
  7638                           
  7639                           ;usb_device.c: 714: }
  7640                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7641  001C2C  AC62               	btfss	3938,6,c	;volatile
  7642  001C2E  D01C               	goto	l1628
  7643                           
  7644                           ;usb_device.c: 727: {
  7645                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7646  001C30  010F               	movlb	15	; () banked
  7647  001C32  AD36               	btfss	54,6,b	;volatile
  7648  001C34  D00F               	goto	l1626
  7649                           
  7650                           ; BSR set to: 15
  7651                           ;usb_device.c: 730: {
  7652                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7653  001C36  0E00               	movlw	0
  7654  001C38  0100               	movlb	0	; () banked
  7655  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7656  001C3C  0E73               	movlw	115
  7657  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7658  001C40  0E00               	movlw	0
  7659  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7660  001C44  0E00               	movlw	0
  7661  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7662  001C48  0E00               	movlw	0
  7663  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7664  001C4C  0E01               	movlw	1
  7665  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7666  001C50  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7667  001C54                     l1626:
  7668                           
  7669                           ;usb_device.c: 732: }
  7670                           ;usb_device.c: 733: (UIR &= 0xBF);
  7671  001C54  9C62               	bcf	3938,6,c	;volatile
  7672                           
  7673                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7674  001C56  ECCD  F033         	call	_USBIncrement1msInternalTimers	;wreg free
  7675                           
  7676                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7677  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7678  001C5C  A4D8               	btfss	status,2,c
  7679                           
  7680                           ;usb_device.c: 754: {
  7681                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7682  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7683                           
  7684                           ;usb_device.c: 756: }
  7685                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7686  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7687  001C62  B4D8               	btfsc	status,2,c
  7688                           
  7689                           ;usb_device.c: 763: {
  7690                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7691  001C64  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7692  001C68                     l1628:
  7693                           
  7694                           ;usb_device.c: 765: }
  7695                           ;usb_device.c: 767: }
  7696                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7697  001C68  AA62               	btfss	3938,5,c	;volatile
  7698  001C6A  D004               	goto	l1629
  7699  001C6C  010F               	movlb	15	; () banked
  7700  001C6E  BB36               	btfsc	54,5,b	;volatile
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;usb_device.c: 770: {
  7704                           ;usb_device.c: 771: USBStallHandler();
  7705  001C70  EC25  F030         	call	_USBStallHandler	;wreg free
  7706  001C74                     l1629:
  7707                           
  7708                           ;usb_device.c: 772: }
  7709                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7710  001C74  A262               	btfss	3938,1,c	;volatile
  7711  001C76  D013               	goto	l1630
  7712  001C78  010F               	movlb	15	; () banked
  7713  001C7A  A336               	btfss	54,1,b	;volatile
  7714  001C7C  D010               	goto	l1630
  7715                           
  7716                           ; BSR set to: 15
  7717                           ;usb_device.c: 775: {
  7718                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7719  001C7E  0E7F               	movlw	127
  7720  001C80  0100               	movlb	0	; () banked
  7721  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7722  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7723  001C86  0E00               	movlw	0
  7724  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7725  001C8A  0E00               	movlw	0
  7726  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7727  001C8E  0E00               	movlw	0
  7728  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7729  001C92  0E01               	movlw	1
  7730  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7731  001C96  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7732                           
  7733                           ;usb_device.c: 777: {UEIR = 0;};
  7734  001C9A  0E00               	movlw	0
  7735  001C9C  6E63               	movwf	3939,c	;volatile
  7736  001C9E                     l1630:
  7737                           
  7738                           ;usb_device.c: 785: }
  7739                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7740  001C9E  0E04               	movlw	4
  7741  001CA0  0100               	movlb	0	; () banked
  7742  001CA2  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7743  001CA4  D002               	goto	l1631
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;usb_device.c: 793: {
  7747                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7748  001CA6  98A1               	bcf	4001,4,c	;volatile
  7749                           
  7750                           ;usb_device.c: 795: return;
  7751  001CA8  0012               	return	
  7752  001CAA                     l1631:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;usb_device.c: 796: }
  7756                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7757  001CAA  010F               	movlb	15	; () banked
  7758  001CAC  A736               	btfss	54,3,b	;volatile
  7759  001CAE  D03E               	goto	u15690
  7760                           
  7761                           ; BSR set to: 15
  7762                           ;usb_device.c: 802: {
  7763                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7764  001CB0  0E00               	movlw	0
  7765  001CB2  0100               	movlb	0	; () banked
  7766  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7767  001CB6                     l15993:
  7768                           
  7769                           ; BSR set to: 0
  7770  001CB6  0E03               	movlw	3
  7771  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7772  001CBA  D001               	goto	l1633
  7773  001CBC  D037               	goto	u15690
  7774  001CBE                     l1633:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;usb_device.c: 804: {
  7778                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7779  001CBE  A662               	btfss	3938,3,c	;volatile
  7780  001CC0  D035               	goto	u15690
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;usb_device.c: 806: {
  7784                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7785  001CC2  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7789  001CC6  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7790  001CC8  32E8               	rrcf	wreg,f,c
  7791  001CCA  32E8               	rrcf	wreg,f,c
  7792  001CCC  0B0F               	andlw	15
  7793  001CCE  6FCB               	movwf	_endpoint_number& (0+255),b
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;usb_device.c: 811: (UIR &= 0xF7);
  7797  001CD0  9662               	bcf	3938,3,c	;volatile
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7801  001CD2  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7802  001CD4  D007               	goto	l1636
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;usb_device.c: 817: {
  7806                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7807  001CD6  51CB               	movf	_endpoint_number& (0+255),w,b
  7808  001CD8  0D01               	mullw	1
  7809  001CDA  0ECE               	movlw	low _ep_data_out
  7810  001CDC  24F3               	addwf	prodl,w,c
  7811  001CDE  6ED9               	movwf	fsr2l,c
  7812  001CE0  0E02               	movlw	high _ep_data_out
  7813  001CE2  D007               	goto	L3
  7814  001CE4                     l1636:
  7815                           
  7816                           ;usb_device.c: 820: else
  7817                           ;usb_device.c: 821: {
  7818                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7819                           
  7820                           ; BSR set to: 2
  7821  001CE4  0100               	movlb	0	; () banked
  7822  001CE6  51CB               	movf	_endpoint_number& (0+255),w,b
  7823  001CE8  0D01               	mullw	1
  7824  001CEA  0ED1               	movlw	low _ep_data_in
  7825  001CEC  24F3               	addwf	prodl,w,c
  7826  001CEE  6ED9               	movwf	fsr2l,c
  7827  001CF0  0E02               	movlw	high _ep_data_in
  7828  001CF2                     L3:
  7829  001CF2  20F4               	addwfc	prodh,w,c
  7830  001CF4  6EDA               	movwf	fsr2h,c
  7831  001CF6  0102               	movlb	2	; () banked
  7832  001CF8  70DF               	btg	indf2,0,c
  7833                           
  7834                           ; BSR set to: 2
  7835                           ;usb_device.c: 823: }
  7836                           ;usb_device.c: 828: if(endpoint_number == 0)
  7837                           
  7838                           ; BSR set to: 2
  7839  001CFA  0100               	movlb	0	; () banked
  7840  001CFC  51CB               	movf	_endpoint_number& (0+255),w,b
  7841  001CFE  A4D8               	btfss	status,2,c
  7842  001D00  D003               	goto	l1638
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;usb_device.c: 829: {
  7846                           ;usb_device.c: 830: USBCtrlEPService();
  7847  001D02  ECD8  F026         	call	_USBCtrlEPService	;wreg free
  7848                           
  7849                           ;usb_device.c: 831: }
  7850  001D06  D00F               	goto	l1640
  7851  001D08                     l1638:
  7852                           
  7853                           ;usb_device.c: 832: else
  7854                           ;usb_device.c: 833: {
  7855                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7856  001D08  0E00               	movlw	0
  7857  001D0A  0100               	movlb	0	; () banked
  7858  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7859  001D0E  0E72               	movlw	114
  7860  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7861  001D12  0ED5               	movlw	low _USTATcopy
  7862  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7863  001D16  0E00               	movlw	high _USTATcopy
  7864  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7865  001D1A  0E00               	movlw	0
  7866  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7867  001D1E  0E00               	movlw	0
  7868  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7869  001D22  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7870  001D26                     l1640:
  7871  001D26  0100               	movlb	0	; () banked
  7872  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7873  001D2A  D7C5               	goto	l15993
  7874  001D2C                     u15690:
  7875                           
  7876                           ;usb_device.c: 840: }
  7877                           ;usb_device.c: 841: }
  7878                           ;usb_device.c: 842: }
  7879                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7880                           
  7881                           ; BSR set to: 0
  7882  001D2C  98A1               	bcf	4001,4,c	;volatile
  7883  001D2E  0012               	return		;funcret
  7884  001D30                     __end_of_USBDeviceTasks:
  7885                           	opt stack 0
  7886                           tosu	equ	0xFFF
  7887                           tosh	equ	0xFFE
  7888                           tosl	equ	0xFFD
  7889                           pclath	equ	0xFFA
  7890                           tblptru	equ	0xFF8
  7891                           tblptrh	equ	0xFF7
  7892                           tblptrl	equ	0xFF6
  7893                           tablat	equ	0xFF5
  7894                           prodh	equ	0xFF4
  7895                           prodl	equ	0xFF3
  7896                           intcon	equ	0xFF2
  7897                           intcon2	equ	0xFF1
  7898                           intcon3	equ	0xFF0
  7899                           postinc0	equ	0xFEE
  7900                           plusw0	equ	0xFEB
  7901                           wreg	equ	0xFE8
  7902                           postinc1	equ	0xFE6
  7903                           postdec1	equ	0xFE5
  7904                           fsr1h	equ	0xFE2
  7905                           fsr1l	equ	0xFE1
  7906                           indf2	equ	0xFDF
  7907                           postinc2	equ	0xFDE
  7908                           postdec2	equ	0xFDD
  7909                           plusw2	equ	0xFDB
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function _USBWakeFromSuspend *****************
  7915 ;; Defined at:
  7916 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;		None
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;Total ram usage:        0 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:   15
  7937 ;; This function calls:
  7938 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7939 ;; This function is called by:
  7940 ;;		_USBDeviceTasks
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text29
  7945  006350                     __ptext29:
  7946                           	opt stack 0
  7947  006350                     _USBWakeFromSuspend:
  7948                           	opt stack 11
  7949                           
  7950                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7951                           
  7952                           ;incstack = 0
  7953  006350  0E00               	movlw	0
  7954  006352  0101               	movlb	1	; () banked
  7955  006354  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7959  006356  0E00               	movlw	0
  7960  006358  0100               	movlb	0	; () banked
  7961  00635A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7962  00635C  0E74               	movlw	116
  7963  00635E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7964  006360  0E00               	movlw	0
  7965  006362  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7966  006364  0E00               	movlw	0
  7967  006366  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7968  006368  0E00               	movlw	0
  7969  00636A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7970  00636C  0E00               	movlw	0
  7971  00636E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7972  006370  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7973                           
  7974                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7975  006374  9265               	bcf	3941,1,c	;volatile
  7976                           
  7977                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7978  006376  010F               	movlb	15	; () banked
  7979  006378  9536               	bcf	54,2,b	;volatile
  7980                           
  7981                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7982  00637A  D001               	goto	l1768
  7983  00637C                     
  7984                           ;usb_device.c: 2361: {
  7985                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7986                           
  7987                           ; BSR set to: 15
  7988  00637C  9462               	bcf	3938,2,c	;volatile
  7989  00637E                     l1768:
  7990  00637E  B462               	btfsc	3938,2,c	;volatile
  7991  006380  D7FD               	goto	l1769
  7992                           
  7993                           ;usb_device.c: 2363: }
  7994                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7995  006382  0E00               	movlw	0
  7996  006384  0101               	movlb	1	; () banked
  7997  006386  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7998                           
  7999                           ; BSR set to: 1
  8000  006388  0012               	return		;funcret
  8001  00638A                     __end_of_USBWakeFromSuspend:
  8002                           	opt stack 0
  8003                           tosu	equ	0xFFF
  8004                           tosh	equ	0xFFE
  8005                           tosl	equ	0xFFD
  8006                           pclath	equ	0xFFA
  8007                           tblptru	equ	0xFF8
  8008                           tblptrh	equ	0xFF7
  8009                           tblptrl	equ	0xFF6
  8010                           tablat	equ	0xFF5
  8011                           prodh	equ	0xFF4
  8012                           prodl	equ	0xFF3
  8013                           intcon	equ	0xFF2
  8014                           intcon2	equ	0xFF1
  8015                           intcon3	equ	0xFF0
  8016                           postinc0	equ	0xFEE
  8017                           plusw0	equ	0xFEB
  8018                           wreg	equ	0xFE8
  8019                           postinc1	equ	0xFE6
  8020                           postdec1	equ	0xFE5
  8021                           fsr1h	equ	0xFE2
  8022                           fsr1l	equ	0xFE1
  8023                           indf2	equ	0xFDF
  8024                           postinc2	equ	0xFDE
  8025                           postdec2	equ	0xFDD
  8026                           plusw2	equ	0xFDB
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _USBSuspend *****************
  8032 ;; Defined at:
  8033 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   15
  8054 ;; This function calls:
  8055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8056 ;; This function is called by:
  8057 ;;		_USBDeviceTasks
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text30
  8062  00649A                     __ptext30:
  8063                           	opt stack 0
  8064  00649A                     _USBSuspend:
  8065                           	opt stack 11
  8066                           
  8067                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8068                           
  8069                           ; BSR set to: 1
  8070                           ;incstack = 0
  8071  00649A  010F               	movlb	15	; () banked
  8072  00649C  8536               	bsf	54,2,b	;volatile
  8073                           
  8074                           ; BSR set to: 15
  8075                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8076  00649E  9862               	bcf	3938,4,c	;volatile
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8080  0064A0  8265               	bsf	3941,1,c	;volatile
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8084  0064A2  0E01               	movlw	1
  8085  0064A4  0101               	movlb	1	; () banked
  8086  0064A6  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8087                           
  8088                           ; BSR set to: 1
  8089                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8090  0064A8  0E00               	movlw	0
  8091  0064AA  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8092                           
  8093                           ; BSR set to: 1
  8094                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8095  0064AC  0E00               	movlw	0
  8096  0064AE  0100               	movlb	0	; () banked
  8097  0064B0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8098  0064B2  0E75               	movlw	117
  8099  0064B4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8100  0064B6  0E00               	movlw	0
  8101  0064B8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8102  0064BA  0E00               	movlw	0
  8103  0064BC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8104  0064BE  0E00               	movlw	0
  8105  0064C0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8106  0064C2  0E00               	movlw	0
  8107  0064C4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8108  0064C6  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8109  0064CA  0012               	return		;funcret
  8110  0064CC                     __end_of_USBSuspend:
  8111                           	opt stack 0
  8112                           tosu	equ	0xFFF
  8113                           tosh	equ	0xFFE
  8114                           tosl	equ	0xFFD
  8115                           pclath	equ	0xFFA
  8116                           tblptru	equ	0xFF8
  8117                           tblptrh	equ	0xFF7
  8118                           tblptrl	equ	0xFF6
  8119                           tablat	equ	0xFF5
  8120                           prodh	equ	0xFF4
  8121                           prodl	equ	0xFF3
  8122                           intcon	equ	0xFF2
  8123                           intcon2	equ	0xFF1
  8124                           intcon3	equ	0xFF0
  8125                           postinc0	equ	0xFEE
  8126                           plusw0	equ	0xFEB
  8127                           wreg	equ	0xFE8
  8128                           postinc1	equ	0xFE6
  8129                           postdec1	equ	0xFE5
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           indf2	equ	0xFDF
  8133                           postinc2	equ	0xFDE
  8134                           postdec2	equ	0xFDD
  8135                           plusw2	equ	0xFDB
  8136                           fsr2h	equ	0xFDA
  8137                           fsr2l	equ	0xFD9
  8138                           status	equ	0xFD8
  8139                           
  8140 ;; *************** function _USBStallHandler *****************
  8141 ;; Defined at:
  8142 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;Total ram usage:        1 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:   11
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_USBDeviceTasks
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text31
  8171  00604A                     __ptext31:
  8172                           	opt stack 0
  8173  00604A                     _USBStallHandler:
  8174                           	opt stack 15
  8175                           
  8176                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8177                           
  8178                           ;incstack = 0
  8179  00604A  010F               	movlb	15	; () banked
  8180  00604C  A126               	btfss	38,0,b	;volatile
  8181  00604E  D01D               	goto	l1760
  8182                           
  8183                           ; BSR set to: 15
  8184                           ;usb_device.c: 2233: {
  8185                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8186  006050  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8187  006054  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8188  006058  0E80               	movlw	128
  8189  00605A  18DE               	xorwf	postinc2,w,c
  8190  00605C  A4D8               	btfss	status,2,c
  8191  00605E  D014               	goto	l1761
  8192                           
  8193                           ; BSR set to: 15
  8194  006060  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8195  006064  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8196  006068  0E84               	movlw	132
  8197  00606A  18DE               	xorwf	postinc2,w,c
  8198  00606C  A4D8               	btfss	status,2,c
  8199  00606E  D00C               	goto	l1761
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;usb_device.c: 2236: {
  8203                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8204  006070  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8205  006074  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8206  006078  0E0C               	movlw	12
  8207  00607A  6EDF               	movwf	indf2,c
  8208                           
  8209                           ; BSR set to: 15
  8210                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8211  00607C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8212  006080  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8213  006084  0E00               	movlw	0
  8214  006086  8EDB               	bsf	plusw2,7,c
  8215  006088                     l1761:
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;usb_device.c: 2240: }
  8219                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8220                           
  8221                           ; BSR set to: 15
  8222  006088  9126               	bcf	38,0,b	;volatile
  8223  00608A                     l1760:
  8224                           
  8225                           ; BSR set to: 15
  8226                           ;usb_device.c: 2242: }
  8227                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8228  00608A  9A62               	bcf	3938,5,c	;volatile
  8229                           
  8230                           ; BSR set to: 15
  8231  00608C  0012               	return		;funcret
  8232  00608E                     __end_of_USBStallHandler:
  8233                           	opt stack 0
  8234                           tosu	equ	0xFFF
  8235                           tosh	equ	0xFFE
  8236                           tosl	equ	0xFFD
  8237                           pclath	equ	0xFFA
  8238                           tblptru	equ	0xFF8
  8239                           tblptrh	equ	0xFF7
  8240                           tblptrl	equ	0xFF6
  8241                           tablat	equ	0xFF5
  8242                           prodh	equ	0xFF4
  8243                           prodl	equ	0xFF3
  8244                           intcon	equ	0xFF2
  8245                           intcon2	equ	0xFF1
  8246                           intcon3	equ	0xFF0
  8247                           postinc0	equ	0xFEE
  8248                           plusw0	equ	0xFEB
  8249                           wreg	equ	0xFE8
  8250                           postinc1	equ	0xFE6
  8251                           postdec1	equ	0xFE5
  8252                           fsr1h	equ	0xFE2
  8253                           fsr1l	equ	0xFE1
  8254                           indf2	equ	0xFDF
  8255                           postinc2	equ	0xFDE
  8256                           postdec2	equ	0xFDD
  8257                           plusw2	equ	0xFDB
  8258                           fsr2h	equ	0xFDA
  8259                           fsr2l	equ	0xFD9
  8260                           status	equ	0xFD8
  8261                           
  8262 ;; *************** function _USBIncrement1msInternalTimers *****************
  8263 ;; Defined at:
  8264 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:   11
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_USBDeviceTasks
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text32
  8293  00679A                     __ptext32:
  8294                           	opt stack 0
  8295  00679A                     _USBIncrement1msInternalTimers:
  8296                           	opt stack 15
  8297                           
  8298                           ;usb_device.c: 3050: USB1msTickCount++;
  8299                           
  8300                           ; BSR set to: 15
  8301                           ;incstack = 0
  8302  00679A  0E01               	movlw	1
  8303  00679C  0103               	movlb	3	; () banked
  8304  00679E  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8305  0067A0  0E00               	movlw	0
  8306  0067A2  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8307  0067A4  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8308  0067A6  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8309                           
  8310                           ; BSR set to: 3
  8311                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8312  0067A8  0101               	movlb	1	; () banked
  8313  0067AA  51E0               	movf	_USBBusIsSuspended& (0+255),w,b
  8314  0067AC  A4D8               	btfss	status,2,c
  8315  0067AE  0012               	return	
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;usb_device.c: 3052: {
  8319                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8320  0067B0  2BDE               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8324  0067B2  51DE               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8325  0067B4  A4D8               	btfss	status,2,c
  8326  0067B6  0012               	return	
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;usb_device.c: 3056: {
  8330                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8331  0067B8  69DE               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8332                           
  8333                           ; BSR set to: 1
  8334  0067BA  0012               	return	
  8335  0067BC                     __end_of_USBIncrement1msInternalTimers:
  8336                           	opt stack 0
  8337                           tosu	equ	0xFFF
  8338                           tosh	equ	0xFFE
  8339                           tosl	equ	0xFFD
  8340                           pclath	equ	0xFFA
  8341                           tblptru	equ	0xFF8
  8342                           tblptrh	equ	0xFF7
  8343                           tblptrl	equ	0xFF6
  8344                           tablat	equ	0xFF5
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           intcon2	equ	0xFF1
  8349                           intcon3	equ	0xFF0
  8350                           postinc0	equ	0xFEE
  8351                           plusw0	equ	0xFEB
  8352                           wreg	equ	0xFE8
  8353                           postinc1	equ	0xFE6
  8354                           postdec1	equ	0xFE5
  8355                           fsr1h	equ	0xFE2
  8356                           fsr1l	equ	0xFE1
  8357                           indf2	equ	0xFDF
  8358                           postinc2	equ	0xFDE
  8359                           postdec2	equ	0xFDD
  8360                           plusw2	equ	0xFDB
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _USBDeviceInit *****************
  8366 ;; Defined at:
  8367 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  i               1   37[BANK0 ] unsigned char 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;Total ram usage:        1 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:   12
  8388 ;; This function calls:
  8389 ;;		_memset
  8390 ;; This function is called by:
  8391 ;;		_USBDeviceTasks
  8392 ;;		_UsbDevice_MainTask
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text33
  8397  00258A                     __ptext33:
  8398                           	opt stack 0
  8399  00258A                     _USBDeviceInit:
  8400                           	opt stack 14
  8401                           
  8402                           ;usb_device.c: 297: uint8_t i;
  8403                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;incstack = 0
  8407  00258A  98A0               	bcf	4000,4,c	;volatile
  8408                           
  8409                           ;usb_device.c: 303: ;
  8410                           ;usb_device.c: 306: {UEIR = 0;};
  8411  00258C  0E00               	movlw	0
  8412  00258E  6E63               	movwf	3939,c	;volatile
  8413                           
  8414                           ;usb_device.c: 309: {UIR = 0;};
  8415  002590  0E00               	movlw	0
  8416  002592  6E62               	movwf	3938,c	;volatile
  8417                           
  8418                           ;usb_device.c: 312: UEP0 = 0;
  8419  002594  0E00               	movlw	0
  8420  002596  010F               	movlb	15	; () banked
  8421  002598  6F26               	movwf	38,b	;volatile
  8422                           
  8423                           ; BSR set to: 15
  8424                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8425  00259A  0E27               	movlw	39
  8426  00259C  0100               	movlb	0	; () banked
  8427  00259E  6F7D               	movwf	memset@p1& (0+255),b
  8428  0025A0  0E0F               	movlw	15
  8429  0025A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8430  0025A4  0E00               	movlw	0
  8431  0025A6  6F80               	movwf	(memset@c+1)& (0+255),b
  8432  0025A8  0E00               	movlw	0
  8433  0025AA  6F7F               	movwf	memset@c& (0+255),b
  8434  0025AC  0E00               	movlw	0
  8435  0025AE  6F82               	movwf	(memset@n+1)& (0+255),b
  8436  0025B0  0E02               	movlw	2
  8437  0025B2  6F81               	movwf	memset@n& (0+255),b
  8438  0025B4  EC97  F032         	call	_memset	;wreg free
  8439                           
  8440                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8441  0025B8  0E16               	movlw	22
  8442  0025BA  010F               	movlb	15	; () banked
  8443  0025BC  6F39               	movwf	57,b	;volatile
  8444                           
  8445                           ; BSR set to: 15
  8446  0025BE  0E9F               	movlw	159
  8447  0025C0  6F37               	movwf	55,b	;volatile
  8448                           
  8449                           ; BSR set to: 15
  8450  0025C2  0E7B               	movlw	123
  8451  0025C4  6F36               	movwf	54,b	;volatile
  8452                           
  8453                           ; BSR set to: 15
  8454                           ;usb_device.c: 319: ;
  8455                           ;usb_device.c: 322: ;
  8456                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8457  0025C6  0E00               	movlw	0
  8458  0025C8  0100               	movlb	0	; () banked
  8459  0025CA  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8460  0025CC                     l14649:
  8461                           
  8462                           ; BSR set to: 0
  8463  0025CC  0E0B               	movlw	11
  8464  0025CE  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8465  0025D0  D001               	goto	l1604
  8466  0025D2  D00E               	goto	u13770
  8467  0025D4                     l1604:
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;usb_device.c: 326: {
  8471                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8472                           
  8473                           ; BSR set to: 0
  8474  0025D4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8475  0025D6  0D04               	mullw	4
  8476  0025D8  0E00               	movlw	0
  8477  0025DA  24F3               	addwf	prodl,w,c
  8478  0025DC  6ED9               	movwf	fsr2l,c
  8479  0025DE  0E04               	movlw	4
  8480  0025E0  20F4               	addwfc	prodh,w,c
  8481  0025E2  6EDA               	movwf	fsr2h,c
  8482  0025E4  6ADE               	clrf	postinc2,c
  8483  0025E6  6ADE               	clrf	postinc2,c
  8484  0025E8  6ADE               	clrf	postinc2,c
  8485  0025EA  6ADD               	clrf	postdec2,c
  8486                           
  8487                           ; BSR set to: 0
  8488  0025EC  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8489  0025EE  D7EE               	goto	l14649
  8490  0025F0                     u13770:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;usb_device.c: 328: }
  8494                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8495  0025F0  8C65               	bsf	3941,6,c	;volatile
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;usb_device.c: 334: UADDR = 0x00;
  8499  0025F2  0E00               	movlw	0
  8500  0025F4  010F               	movlb	15	; () banked
  8501  0025F6  6F38               	movwf	56,b	;volatile
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8505  0025F8  9865               	bcf	3941,4,c	;volatile
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8509  0025FA  9C65               	bcf	3941,6,c	;volatile
  8510  0025FC                     
  8511                           ;usb_device.c: 344: {
  8512                           ;usb_device.c: 345: (UIR &= 0xF7);
  8513                           
  8514                           ; BSR set to: 15
  8515  0025FC  9662               	bcf	3938,3,c	;volatile
  8516                           
  8517                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8518  0025FE  0E00               	movlw	0
  8519  002600  0100               	movlb	0	; () banked
  8520  002602  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8524  002604  0E00               	movlw	0
  8525  002606  0101               	movlb	1	; () banked
  8526  002608  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8527                           
  8528                           ; BSR set to: 1
  8529                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8530  00260A  0E00               	movlw	0
  8531  00260C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8532  00260E  0E00               	movlw	0
  8533  002610  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8534                           
  8535                           ; BSR set to: 1
  8536                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8537  002612  B662               	btfsc	3938,3,c	;volatile
  8538  002614  D7F3               	goto	l1606
  8539                           
  8540                           ; BSR set to: 1
  8541                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8542                           
  8543                           ; BSR set to: 1
  8544  002616  0E01               	movlw	1
  8545  002618  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8546                           
  8547                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8548  00261A  0E01               	movlw	1
  8549  00261C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8550                           
  8551                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8552  00261E  0E00               	movlw	0
  8553  002620  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8554                           
  8555                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8556  002622  0E00               	movlw	0
  8557  002624  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8558                           
  8559                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8560  002626  0E00               	movlw	0
  8561  002628  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8562                           
  8563                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8564  00262A  0E00               	movlw	0
  8565  00262C  0100               	movlb	0	; () banked
  8566  00262E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8567  002630                     l14677:
  8568                           
  8569                           ; BSR set to: 0
  8570  002630  0E02               	movlw	2
  8571  002632  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8572  002634  D001               	goto	l1608
  8573  002636  D02E               	goto	u13800
  8574  002638                     l1608:
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;usb_device.c: 364: {
  8578                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8579                           
  8580                           ; BSR set to: 0
  8581  002638  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8582  00263A  0D02               	mullw	2
  8583  00263C  0EB6               	movlw	low _pBDTEntryIn
  8584  00263E  24F3               	addwf	prodl,w,c
  8585  002640  6ED9               	movwf	fsr2l,c
  8586  002642  0E00               	movlw	high _pBDTEntryIn
  8587  002644  20F4               	addwfc	prodh,w,c
  8588  002646  6EDA               	movwf	fsr2h,c
  8589  002648  0E00               	movlw	0
  8590  00264A  6EDE               	movwf	postinc2,c
  8591  00264C  0E00               	movlw	0
  8592  00264E  6EDD               	movwf	postdec2,c
  8593                           
  8594                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8595  002650  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8596  002652  0D02               	mullw	2
  8597  002654  0E06               	movlw	low _pBDTEntryOut
  8598  002656  24F3               	addwf	prodl,w,c
  8599  002658  6ED9               	movwf	fsr2l,c
  8600  00265A  0E03               	movlw	high _pBDTEntryOut
  8601  00265C  20F4               	addwfc	prodh,w,c
  8602  00265E  6EDA               	movwf	fsr2h,c
  8603  002660  0E00               	movlw	0
  8604  002662  6EDE               	movwf	postinc2,c
  8605  002664  0E00               	movlw	0
  8606  002666  6EDD               	movwf	postdec2,c
  8607                           
  8608                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8609  002668  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8610  00266A  0D01               	mullw	1
  8611  00266C  0ED1               	movlw	low _ep_data_in
  8612  00266E  24F3               	addwf	prodl,w,c
  8613  002670  6ED9               	movwf	fsr2l,c
  8614  002672  0E02               	movlw	high _ep_data_in
  8615  002674  20F4               	addwfc	prodh,w,c
  8616  002676  6EDA               	movwf	fsr2h,c
  8617  002678  0E00               	movlw	0
  8618  00267A  6EDF               	movwf	indf2,c
  8619                           
  8620                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8621  00267C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8622  00267E  0D01               	mullw	1
  8623  002680  0ECE               	movlw	low _ep_data_out
  8624  002682  24F3               	addwf	prodl,w,c
  8625  002684  6ED9               	movwf	fsr2l,c
  8626  002686  0E02               	movlw	high _ep_data_out
  8627  002688  20F4               	addwfc	prodh,w,c
  8628  00268A  6EDA               	movwf	fsr2h,c
  8629  00268C  0E00               	movlw	0
  8630  00268E  6EDF               	movwf	indf2,c
  8631                           
  8632                           ; BSR set to: 0
  8633  002690  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8634  002692  D7CE               	goto	l14677
  8635  002694                     u13800:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;usb_device.c: 369: }
  8639                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8640                           
  8641                           ; BSR set to: 0
  8642  002694  0E08               	movlw	8
  8643  002696  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8644  002698  0E04               	movlw	4
  8645  00269A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8649  00269C  0E16               	movlw	22
  8650  00269E  010F               	movlb	15	; () banked
  8651  0026A0  6F26               	movwf	38,b	;volatile
  8652                           
  8653                           ; BSR set to: 15
  8654                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8655  0026A2  0E04               	movlw	4
  8656  0026A4  0104               	movlb	4	; () banked
  8657  0026A6  6F03               	movwf	3,b	;volatile
  8658  0026A8  0E30               	movlw	48
  8659  0026AA  6F02               	movwf	2,b	;volatile
  8660                           
  8661                           ; BSR set to: 4
  8662                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8663  0026AC  0E08               	movlw	8
  8664  0026AE  6F01               	movwf	1,b	;volatile
  8665                           
  8666                           ; BSR set to: 4
  8667                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8668  0026B0  0E04               	movlw	4
  8669  0026B2  6F00               	movwf	0,b	;volatile
  8670                           
  8671                           ; BSR set to: 4
  8672                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8673  0026B4  8F00               	bsf	0,7,b	;volatile
  8674                           
  8675                           ; BSR set to: 4
  8676                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8677  0026B6  0E00               	movlw	0
  8678  0026B8  0100               	movlb	0	; () banked
  8679  0026BA  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;usb_device.c: 384: USB1msTickCount = 0;
  8683  0026BC  0E00               	movlw	0
  8684  0026BE  0103               	movlb	3	; () banked
  8685  0026C0  6F10               	movwf	_USB1msTickCount& (0+255),b
  8686  0026C2  0E00               	movlw	0
  8687  0026C4  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8688  0026C6  0E00               	movlw	0
  8689  0026C8  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8690  0026CA  0E00               	movlw	0
  8691  0026CC  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8692                           
  8693                           ; BSR set to: 3
  8694                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8695  0026CE  0E00               	movlw	0
  8696  0026D0  0101               	movlb	1	; () banked
  8697  0026D2  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8698                           
  8699                           ; BSR set to: 1
  8700                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8701  0026D4  0E00               	movlw	0
  8702  0026D6  0100               	movlb	0	; () banked
  8703  0026D8  6FCE               	movwf	_USBDeviceState& (0+255),b
  8704                           
  8705                           ; BSR set to: 0
  8706  0026DA  0012               	return		;funcret
  8707  0026DC                     __end_of_USBDeviceInit:
  8708                           	opt stack 0
  8709                           tosu	equ	0xFFF
  8710                           tosh	equ	0xFFE
  8711                           tosl	equ	0xFFD
  8712                           pclath	equ	0xFFA
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           prodh	equ	0xFF4
  8718                           prodl	equ	0xFF3
  8719                           intcon	equ	0xFF2
  8720                           intcon2	equ	0xFF1
  8721                           intcon3	equ	0xFF0
  8722                           postinc0	equ	0xFEE
  8723                           plusw0	equ	0xFEB
  8724                           wreg	equ	0xFE8
  8725                           postinc1	equ	0xFE6
  8726                           postdec1	equ	0xFE5
  8727                           fsr1h	equ	0xFE2
  8728                           fsr1l	equ	0xFE1
  8729                           indf2	equ	0xFDF
  8730                           postinc2	equ	0xFDE
  8731                           postdec2	equ	0xFDD
  8732                           plusw2	equ	0xFDB
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8
  8736                           
  8737 ;; *************** function _USBCtrlEPService *****************
  8738 ;; Defined at:
  8739 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8757 ;;Total ram usage:        1 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:   18
  8760 ;; This function calls:
  8761 ;;		_USBCtrlTrfInHandler
  8762 ;;		_USBCtrlTrfOutHandler
  8763 ;;		_USBCtrlTrfSetupHandler
  8764 ;;		_memcpy
  8765 ;; This function is called by:
  8766 ;;		_USBDeviceTasks
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text34
  8771  004DB0                     __ptext34:
  8772                           	opt stack 0
  8773  004DB0                     _USBCtrlEPService:
  8774                           	opt stack 8
  8775                           
  8776                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;incstack = 0
  8780  004DB0  0E2D               	movlw	45
  8781  004DB2  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8782                           
  8783                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8784  004DB4  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8785  004DB8  0EFD               	movlw	253
  8786  004DBA  0100               	movlb	0	; () banked
  8787  004DBC  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8788  004DBE  A4D8               	btfss	status,2,c
  8789  004DC0  D038               	goto	l1774
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;usb_device.c: 2401: {
  8793                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8794  004DC2  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8795  004DC6  90D8               	bcf	status,0,c
  8796  004DC8  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8797  004DCA  0E3F               	movlw	63
  8798  004DCC  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8799  004DCE  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8800  004DD0  0D04               	mullw	4
  8801  004DD2  0E00               	movlw	0
  8802  004DD4  24F3               	addwf	prodl,w,c
  8803  004DD6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8804  004DD8  0E04               	movlw	4
  8805  004DDA  20F4               	addwfc	prodh,w,c
  8806  004DDC  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8810  004DDE  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8811  004DE2  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8815  004DE6  0E04               	movlw	4
  8816  004DE8  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8820  004DEA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8821  004DEE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8822  004DF2  30DF               	rrcf	223,w,c
  8823  004DF4  32E8               	rrcf	wreg,f,c
  8824  004DF6  0B0F               	andlw	15
  8825  004DF8  0A0D               	xorlw	13
  8826  004DFA  A4D8               	btfss	status,2,c
  8827  004DFC  D017               	goto	l1775
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;usb_device.c: 2418: {
  8831                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8832  004DFE  0E30               	movlw	48
  8833  004E00  6F7D               	movwf	memcpy@d1& (0+255),b
  8834  004E02  0E04               	movlw	4
  8835  004E04  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8836  004E06  EE20 F002          	lfsr	2,2
  8837  004E0A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8838  004E0C  26D9               	addwf	fsr2l,f,c
  8839  004E0E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8840  004E10  22DA               	addwfc	fsr2h,f,c
  8841  004E12  CFDE F07F          	movff	postinc2,memcpy@s1
  8842  004E16  CFDD F080          	movff	postdec2,memcpy@s1+1
  8843  004E1A  0E00               	movlw	0
  8844  004E1C  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8845  004E1E  0E08               	movlw	8
  8846  004E20  6F81               	movwf	memcpy@n& (0+255),b
  8847  004E22  ECDE  F02F         	call	_memcpy	;wreg free
  8848                           
  8849                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8850  004E26  EC8D  F028         	call	_USBCtrlTrfSetupHandler	;wreg free
  8851                           
  8852                           ;usb_device.c: 2427: }
  8853  004E2A  0012               	return	
  8854  004E2C                     l1775:
  8855                           
  8856                           ;usb_device.c: 2428: else
  8857                           ;usb_device.c: 2429: {
  8858                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8859  004E2C  EC50  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
  8860                           
  8861                           ;usb_device.c: 2432: }
  8862                           ;usb_device.c: 2433: }
  8863  004E30  0012               	return	
  8864  004E32                     l1774:
  8865                           
  8866                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8867  004E32  0100               	movlb	0	; () banked
  8868  004E34  51D5               	movf	_USTATcopy& (0+255),w,b
  8869  004E36  0BFD               	andlw	253
  8870  004E38  0A04               	xorlw	4
  8871  004E3A  A4D8               	btfss	status,2,c
  8872  004E3C  0012               	return	
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;usb_device.c: 2435: {
  8876                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8877  004E3E  EC9A  F020         	call	_USBCtrlTrfInHandler	;wreg free
  8878  004E42  0012               	return	
  8879  004E44                     __end_of_USBCtrlEPService:
  8880                           	opt stack 0
  8881                           tosu	equ	0xFFF
  8882                           tosh	equ	0xFFE
  8883                           tosl	equ	0xFFD
  8884                           pclath	equ	0xFFA
  8885                           tblptru	equ	0xFF8
  8886                           tblptrh	equ	0xFF7
  8887                           tblptrl	equ	0xFF6
  8888                           tablat	equ	0xFF5
  8889                           prodh	equ	0xFF4
  8890                           prodl	equ	0xFF3
  8891                           intcon	equ	0xFF2
  8892                           intcon2	equ	0xFF1
  8893                           intcon3	equ	0xFF0
  8894                           postinc0	equ	0xFEE
  8895                           plusw0	equ	0xFEB
  8896                           wreg	equ	0xFE8
  8897                           postinc1	equ	0xFE6
  8898                           postdec1	equ	0xFE5
  8899                           fsr1h	equ	0xFE2
  8900                           fsr1l	equ	0xFE1
  8901                           indf2	equ	0xFDF
  8902                           postinc2	equ	0xFDE
  8903                           postdec2	equ	0xFDD
  8904                           plusw2	equ	0xFDB
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function _memcpy *****************
  8910 ;; Defined at:
  8911 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  d1              2   29[BANK0 ] PTR void 
  8914 ;;		 -> SetupPkt(8), 
  8915 ;;  s1              2   31[BANK0 ] PTR const void 
  8916 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8917 ;;  n               2   33[BANK0 ] unsigned int 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8920 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8921 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8922 ;;		 -> SetupPkt(8), 
  8923 ;;  tmp             1   35[BANK0 ] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  2   29[BANK0 ] PTR void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;Total ram usage:       11 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   11
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_USBCtrlEPService
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text35
  8948  005FBC                     __ptext35:
  8949                           	opt stack 0
  8950  005FBC                     _memcpy:
  8951                           	opt stack 14
  8952                           
  8953                           ;incstack = 0
  8954  005FBC  C07F  F086         	movff	memcpy@s1,memcpy@s
  8955  005FC0  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8956  005FC4  C07D  F084         	movff	memcpy@d1,memcpy@d
  8957  005FC8  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8958  005FCC  D011               	goto	l3380
  8959  005FCE                     l13849:
  8960  005FCE  C086  FFD9         	movff	memcpy@s,fsr2l
  8961  005FD2  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8962  005FD6  50DF               	movf	indf2,w,c
  8963  005FD8  0100               	movlb	0	; () banked
  8964  005FDA  6F83               	movwf	memcpy@tmp& (0+255),b
  8965                           
  8966                           ; BSR set to: 0
  8967  005FDC  4B86               	infsnz	memcpy@s& (0+255),f,b
  8968  005FDE  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8969                           
  8970                           ; BSR set to: 0
  8971  005FE0  C084  FFD9         	movff	memcpy@d,fsr2l
  8972  005FE4  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8973  005FE8  C083  FFDF         	movff	memcpy@tmp,indf2
  8974                           
  8975                           ; BSR set to: 0
  8976  005FEC  4B84               	infsnz	memcpy@d& (0+255),f,b
  8977  005FEE  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8978  005FF0                     l3380:
  8979                           
  8980                           ; BSR set to: 0
  8981  005FF0  0100               	movlb	0	; () banked
  8982  005FF2  0781               	decf	memcpy@n& (0+255),f,b
  8983  005FF4  A0D8               	btfss	status,0,c
  8984  005FF6  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8985  005FF8  2981               	incf	memcpy@n& (0+255),w,b
  8986  005FFA  E1E9               	bnz	l13849
  8987  005FFC  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8988  005FFE  B4D8               	btfsc	status,2,c
  8989  006000  0012               	return	
  8990  006002  D7E5               	goto	l3381
  8991  006004                     __end_of_memcpy:
  8992                           	opt stack 0
  8993                           tosu	equ	0xFFF
  8994                           tosh	equ	0xFFE
  8995                           tosl	equ	0xFFD
  8996                           pclath	equ	0xFFA
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           prodh	equ	0xFF4
  9002                           prodl	equ	0xFF3
  9003                           intcon	equ	0xFF2
  9004                           intcon2	equ	0xFF1
  9005                           intcon3	equ	0xFF0
  9006                           postinc0	equ	0xFEE
  9007                           plusw0	equ	0xFEB
  9008                           wreg	equ	0xFE8
  9009                           postinc1	equ	0xFE6
  9010                           postdec1	equ	0xFE5
  9011                           fsr1h	equ	0xFE2
  9012                           fsr1l	equ	0xFE1
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           plusw2	equ	0xFDB
  9017                           fsr2h	equ	0xFDA
  9018                           fsr2l	equ	0xFD9
  9019                           status	equ	0xFD8
  9020                           
  9021 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9022 ;; Defined at:
  9023 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;Total ram usage:        0 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:   17
  9044 ;; This function calls:
  9045 ;;		_USBCheckStdRequest
  9046 ;;		_USBCtrlEPServiceComplete
  9047 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9048 ;; This function is called by:
  9049 ;;		_USBCtrlEPService
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text36
  9054  00511A                     __ptext36:
  9055                           	opt stack 0
  9056  00511A                     _USBCtrlTrfSetupHandler:
  9057                           	opt stack 8
  9058                           
  9059                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;incstack = 0
  9063  00511A  0E00               	movlw	0
  9064  00511C  0100               	movlb	0	; () banked
  9065  00511E  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9066                           
  9067                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9068  005120  0E00               	movlw	0
  9069  005122  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9070                           
  9071                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9072  005124  0E00               	movlw	0
  9073  005126  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9074                           
  9075                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9076  005128  0E00               	movlw	0
  9077  00512A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9078                           
  9079                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9080  00512C  0E00               	movlw	0
  9081  00512E  0101               	movlb	1	; () banked
  9082  005130  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9083                           
  9084                           ;usb_device.c: 2493: controlTransferState = 0;
  9085  005132  0E00               	movlw	0
  9086  005134  0100               	movlb	0	; () banked
  9087  005136  6FCC               	movwf	_controlTransferState& (0+255),b
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9091  005138  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9092  00513C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9093  005140  0E7F               	movlw	127
  9094  005142  16DF               	andwf	indf2,f,c
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9098  005144  0E04               	movlw	4
  9099  005146  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9103  005148  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9104  00514C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9105  005150  0E7F               	movlw	127
  9106  005152  16DF               	andwf	indf2,f,c
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9110  005154  0E04               	movlw	4
  9111  005156  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9115  005158  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9116  00515C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9117  005160  0E7F               	movlw	127
  9118  005162  16DF               	andwf	indf2,f,c
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9122  005164  0E00               	movlw	0
  9123  005166  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9127  005168  0E00               	movlw	0
  9128  00516A  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9129  00516C  0E00               	movlw	0
  9130  00516E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9134  005170  0E00               	movlw	0
  9135  005172  0101               	movlb	1	; () banked
  9136  005174  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9137                           
  9138                           ; BSR set to: 1
  9139                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9140  005176  0E00               	movlw	0
  9141  005178  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9142  00517A  0E00               	movlw	0
  9143  00517C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9144                           
  9145                           ; BSR set to: 1
  9146                           ;usb_device.c: 2517: USBCheckStdRequest();
  9147  00517E  ECEF  F01A         	call	_USBCheckStdRequest	;wreg free
  9148                           
  9149                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9150  005182  0E00               	movlw	0
  9151  005184  0100               	movlb	0	; () banked
  9152  005186  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9153  005188  0E03               	movlw	3
  9154  00518A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9155  00518C  0E00               	movlw	0
  9156  00518E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9157  005190  0E00               	movlw	0
  9158  005192  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9159  005194  0E00               	movlw	0
  9160  005196  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9161  005198  0E00               	movlw	0
  9162  00519A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9163  00519C  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9164                           
  9165                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9166  0051A0  EC2C  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9167  0051A4  0012               	return		;funcret
  9168  0051A6                     __end_of_USBCtrlTrfSetupHandler:
  9169                           	opt stack 0
  9170                           tosu	equ	0xFFF
  9171                           tosh	equ	0xFFE
  9172                           tosl	equ	0xFFD
  9173                           pclath	equ	0xFFA
  9174                           tblptru	equ	0xFF8
  9175                           tblptrh	equ	0xFF7
  9176                           tblptrl	equ	0xFF6
  9177                           tablat	equ	0xFF5
  9178                           prodh	equ	0xFF4
  9179                           prodl	equ	0xFF3
  9180                           intcon	equ	0xFF2
  9181                           intcon2	equ	0xFF1
  9182                           intcon3	equ	0xFF0
  9183                           postinc0	equ	0xFEE
  9184                           plusw0	equ	0xFEB
  9185                           wreg	equ	0xFE8
  9186                           postinc1	equ	0xFE6
  9187                           postdec1	equ	0xFE5
  9188                           fsr1h	equ	0xFE2
  9189                           fsr1l	equ	0xFE1
  9190                           indf2	equ	0xFDF
  9191                           postinc2	equ	0xFDE
  9192                           postdec2	equ	0xFDD
  9193                           plusw2	equ	0xFDB
  9194                           fsr2h	equ	0xFDA
  9195                           fsr2l	equ	0xFD9
  9196                           status	equ	0xFD8
  9197                           
  9198 ;; *************** function _USBCtrlEPServiceComplete *****************
  9199 ;; Defined at:
  9200 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:   13
  9221 ;; This function calls:
  9222 ;;		_USBCtrlEPAllowDataStage
  9223 ;;		_USBCtrlEPAllowStatusStage
  9224 ;; This function is called by:
  9225 ;;		_USBCtrlTrfSetupHandler
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text37
  9230  003058                     __ptext37:
  9231                           	opt stack 0
  9232  003058                     _USBCtrlEPServiceComplete:
  9233                           	opt stack 11
  9234                           
  9235                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9236                           
  9237                           ;incstack = 0
  9238  003058  9865               	bcf	3941,4,c	;volatile
  9239                           
  9240                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9241  00305A  0100               	movlb	0	; () banked
  9242  00305C  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9243  00305E  D03B               	goto	l1684
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;usb_device.c: 1647: {
  9247                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9248  003060  0101               	movlb	1	; () banked
  9249  003062  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9250  003064  D00C               	goto	l1685
  9251                           
  9252                           ; BSR set to: 1
  9253                           ;usb_device.c: 1649: {
  9254                           ;usb_device.c: 1650: controlTransferState = 2;
  9255  003066  0E02               	movlw	2
  9256  003068  0100               	movlb	0	; () banked
  9257  00306A  6FCC               	movwf	_controlTransferState& (0+255),b
  9258                           
  9259                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9260  00306C  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9261  00306E  B4D8               	btfsc	status,2,c
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;usb_device.c: 1662: {
  9265                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9266  003070  EC0E  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9267                           
  9268                           ;usb_device.c: 1664: }
  9269                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9270  003074  0E00               	movlw	0
  9271  003076  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9272                           
  9273                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9274  003078  0E00               	movlw	0
  9275  00307A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9276                           
  9277                           ;usb_device.c: 1670: }
  9278  00307C  0012               	return	
  9279  00307E                     l1685:
  9280                           
  9281                           ;usb_device.c: 1671: else
  9282                           ;usb_device.c: 1672: {
  9283                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9284  00307E  0100               	movlb	0	; () banked
  9285  003080  EE20 F001          	lfsr	2,1
  9286  003084  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9287  003086  26D9               	addwf	fsr2l,f,c
  9288  003088  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9289  00308A  22DA               	addwfc	fsr2h,f,c
  9290  00308C  0E08               	movlw	8
  9291  00308E  6EDF               	movwf	indf2,c
  9292                           
  9293                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9294  003090  EE20 F002          	lfsr	2,2
  9295  003094  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9296  003096  26D9               	addwf	fsr2l,f,c
  9297  003098  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9298  00309A  22DA               	addwfc	fsr2h,f,c
  9299  00309C  0E30               	movlw	48
  9300  00309E  6EDE               	movwf	postinc2,c
  9301  0030A0  0E04               	movlw	4
  9302  0030A2  6EDD               	movwf	postdec2,c
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9306  0030A4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9307  0030A8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9308  0030AC  0E0C               	movlw	12
  9309  0030AE  6EDF               	movwf	indf2,c
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9313  0030B0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9314  0030B4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9315  0030B8  0E00               	movlw	0
  9316  0030BA  8EDB               	bsf	plusw2,7,c
  9317                           
  9318                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9319  0030BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9320  0030C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9321  0030C4  0E04               	movlw	4
  9322  0030C6  6EDF               	movwf	indf2,c
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9326  0030C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9327  0030CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9328  0030D0  0E00               	movlw	0
  9329  0030D2  8EDB               	bsf	plusw2,7,c
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;usb_device.c: 1683: }
  9333                           ;usb_device.c: 1684: }
  9334  0030D4  0012               	return	
  9335  0030D6                     l1684:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device.c: 1685: else
  9339                           ;usb_device.c: 1686: {
  9340                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9341  0030D6  0104               	movlb	4	; () banked
  9342  0030D8  AF30               	btfss	48,7,b	;volatile
  9343  0030DA  D012               	goto	l1689
  9344                           
  9345                           ; BSR set to: 4
  9346                           ;usb_device.c: 1688: {
  9347                           ;usb_device.c: 1689: controlTransferState = 1;
  9348  0030DC  0E01               	movlw	1
  9349  0030DE  0100               	movlb	0	; () banked
  9350  0030E0  6FCC               	movwf	_controlTransferState& (0+255),b
  9351                           
  9352                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9353  0030E2  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9354  0030E4  B4D8               	btfsc	status,2,c
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;usb_device.c: 1704: {
  9358                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9359  0030E6  EC0E  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9360                           
  9361                           ;usb_device.c: 1706: }
  9362                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9363  0030EA  0E00               	movlw	0
  9364  0030EC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9365                           
  9366                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9367  0030EE  0E00               	movlw	0
  9368  0030F0  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9369                           
  9370                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9371  0030F2  0100               	movlb	0	; () banked
  9372  0030F4  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9373  0030F6  A4D8               	btfss	status,2,c
  9374  0030F8  0012               	return	
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;usb_device.c: 1731: {
  9378                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9379  0030FA  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9380                           
  9381                           ;usb_device.c: 1733: }
  9382                           ;usb_device.c: 1734: }
  9383  0030FE  0012               	return	
  9384  003100                     l1689:
  9385                           
  9386                           ;usb_device.c: 1735: else
  9387                           ;usb_device.c: 1736: {
  9388                           ;usb_device.c: 1747: controlTransferState = 2;
  9389  003100  0E02               	movlw	2
  9390  003102  0100               	movlb	0	; () banked
  9391  003104  6FCC               	movwf	_controlTransferState& (0+255),b
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9395  003106  EE20 F001          	lfsr	2,1
  9396  00310A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9397  00310C  26D9               	addwf	fsr2l,f,c
  9398  00310E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9399  003110  22DA               	addwfc	fsr2h,f,c
  9400  003112  0E08               	movlw	8
  9401  003114  6EDF               	movwf	indf2,c
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9405  003116  EE20 F002          	lfsr	2,2
  9406  00311A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9407  00311C  26D9               	addwf	fsr2l,f,c
  9408  00311E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9409  003120  22DA               	addwfc	fsr2h,f,c
  9410  003122  0E30               	movlw	48
  9411  003124  6EDE               	movwf	postinc2,c
  9412  003126  0E04               	movlw	4
  9413  003128  6EDD               	movwf	postdec2,c
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9417  00312A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9418  00312E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9419  003132  0E04               	movlw	4
  9420  003134  6EDF               	movwf	indf2,c
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9424  003136  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9425  00313A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9426  00313E  0E00               	movlw	0
  9427  003140  8EDB               	bsf	plusw2,7,c
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9431  003142  0E00               	movlw	0
  9432  003144  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9436  003146  0E00               	movlw	0
  9437  003148  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9441  00314A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9442  00314C  A4D8               	btfss	status,2,c
  9443  00314E  0012               	return	
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 1759: {
  9447                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9448  003150  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9449  003154  0012               	return	
  9450  003156                     __end_of_USBCtrlEPServiceComplete:
  9451                           	opt stack 0
  9452                           tosu	equ	0xFFF
  9453                           tosh	equ	0xFFE
  9454                           tosl	equ	0xFFD
  9455                           pclath	equ	0xFFA
  9456                           tblptru	equ	0xFF8
  9457                           tblptrh	equ	0xFF7
  9458                           tblptrl	equ	0xFF6
  9459                           tablat	equ	0xFF5
  9460                           prodh	equ	0xFF4
  9461                           prodl	equ	0xFF3
  9462                           intcon	equ	0xFF2
  9463                           intcon2	equ	0xFF1
  9464                           intcon3	equ	0xFF0
  9465                           postinc0	equ	0xFEE
  9466                           plusw0	equ	0xFEB
  9467                           wreg	equ	0xFE8
  9468                           postinc1	equ	0xFE6
  9469                           postdec1	equ	0xFE5
  9470                           fsr1h	equ	0xFE2
  9471                           fsr1l	equ	0xFE1
  9472                           indf2	equ	0xFDF
  9473                           postinc2	equ	0xFDE
  9474                           postdec2	equ	0xFDD
  9475                           plusw2	equ	0xFDB
  9476                           fsr2h	equ	0xFDA
  9477                           fsr2l	equ	0xFD9
  9478                           status	equ	0xFD8
  9479                           
  9480 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9481 ;; Defined at:
  9482 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;		None
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;Total ram usage:        0 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:   12
  9503 ;; This function calls:
  9504 ;;		_USBCtrlTrfTxService
  9505 ;; This function is called by:
  9506 ;;		_USBCtrlEPServiceComplete
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text38
  9511  004A1C                     __ptext38:
  9512                           	opt stack 0
  9513  004A1C                     _USBCtrlEPAllowDataStage:
  9514                           	opt stack 11
  9515                           
  9516                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9517                           
  9518                           ;incstack = 0
  9519  004A1C  0E00               	movlw	0
  9520  004A1E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9521                           
  9522                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9523  004A20  0E00               	movlw	0
  9524  004A22  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9525                           
  9526                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9527  004A24  0E02               	movlw	2
  9528  004A26  0100               	movlb	0	; () banked
  9529  004A28  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9530  004A2A  A4D8               	btfss	status,2,c
  9531  004A2C  D01F               	goto	l1673
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;usb_device.c: 1512: {
  9535                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9536  004A2E  EE20 F001          	lfsr	2,1
  9537  004A32  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9538  004A34  26D9               	addwf	fsr2l,f,c
  9539  004A36  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9540  004A38  22DA               	addwfc	fsr2h,f,c
  9541  004A3A  0E08               	movlw	8
  9542  004A3C  6EDF               	movwf	indf2,c
  9543                           
  9544                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9545  004A3E  EE20 F002          	lfsr	2,2
  9546  004A42  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9547  004A44  26D9               	addwf	fsr2l,f,c
  9548  004A46  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9549  004A48  22DA               	addwfc	fsr2h,f,c
  9550  004A4A  0E38               	movlw	56
  9551  004A4C  6EDE               	movwf	postinc2,c
  9552  004A4E  0E04               	movlw	4
  9553  004A50  6EDD               	movwf	postdec2,c
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9557  004A52  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9558  004A56  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9559  004A5A  0E48               	movlw	72
  9560  004A5C  6EDF               	movwf	indf2,c
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9564  004A5E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9565  004A62  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9566  004A66  0E00               	movlw	0
  9567  004A68  8EDB               	bsf	plusw2,7,c
  9568                           
  9569                           ;usb_device.c: 1518: }
  9570  004A6A  0012               	return	
  9571  004A6C                     l1673:
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;usb_device.c: 1519: else
  9575                           ;usb_device.c: 1520: {
  9576                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9577                           
  9578                           ; BSR set to: 0
  9579  004A6C  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9580  004A6E  0104               	movlb	4	; () banked
  9581  004A70  5D36               	subwf	54,w,b	;volatile
  9582  004A72  0100               	movlb	0	; () banked
  9583  004A74  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9584  004A76  0104               	movlb	4	; () banked
  9585  004A78  5937               	subwfb	55,w,b	;volatile
  9586  004A7A  B0D8               	btfsc	status,0,c
  9587  004A7C  D004               	goto	l1675
  9588                           
  9589                           ; BSR set to: 4
  9590                           ;usb_device.c: 1524: {
  9591                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9592  004A7E  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9593  004A82  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9594  004A86                     l1675:
  9595                           
  9596                           ; BSR set to: 4
  9597                           ;usb_device.c: 1526: }
  9598                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9599                           
  9600                           ; BSR set to: 4
  9601  004A86  EC61  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9602                           
  9603                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9604  004A8A  0100               	movlb	0	; () banked
  9605  004A8C  EE20 F002          	lfsr	2,2
  9606  004A90  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9607  004A92  26D9               	addwf	fsr2l,f,c
  9608  004A94  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9609  004A96  22DA               	addwfc	fsr2h,f,c
  9610  004A98  0E38               	movlw	56
  9611  004A9A  6EDE               	movwf	postinc2,c
  9612  004A9C  0E04               	movlw	4
  9613  004A9E  6EDD               	movwf	postdec2,c
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9617  004AA0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9618  004AA4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9619  004AA8  0E48               	movlw	72
  9620  004AAA  6EDF               	movwf	indf2,c
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9624  004AAC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9625  004AB0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9626  004AB4  0E00               	movlw	0
  9627  004AB6  8EDB               	bsf	plusw2,7,c
  9628  004AB8  0012               	return	
  9629  004ABA                     __end_of_USBCtrlEPAllowDataStage:
  9630                           	opt stack 0
  9631                           tosu	equ	0xFFF
  9632                           tosh	equ	0xFFE
  9633                           tosl	equ	0xFFD
  9634                           pclath	equ	0xFFA
  9635                           tblptru	equ	0xFF8
  9636                           tblptrh	equ	0xFF7
  9637                           tblptrl	equ	0xFF6
  9638                           tablat	equ	0xFF5
  9639                           prodh	equ	0xFF4
  9640                           prodl	equ	0xFF3
  9641                           intcon	equ	0xFF2
  9642                           intcon2	equ	0xFF1
  9643                           intcon3	equ	0xFF0
  9644                           postinc0	equ	0xFEE
  9645                           plusw0	equ	0xFEB
  9646                           wreg	equ	0xFE8
  9647                           postinc1	equ	0xFE6
  9648                           postdec1	equ	0xFE5
  9649                           fsr1h	equ	0xFE2
  9650                           fsr1l	equ	0xFE1
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           postdec2	equ	0xFDD
  9654                           plusw2	equ	0xFDB
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659 ;; *************** function _USBCheckStdRequest *****************
  9660 ;; Defined at:
  9661 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;		None
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;Total ram usage:        0 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:   16
  9682 ;; This function calls:
  9683 ;;		_USBStdFeatureReqHandler
  9684 ;;		_USBStdGetDscHandler
  9685 ;;		_USBStdGetStatusHandler
  9686 ;;		_USBStdSetCfgHandler
  9687 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9688 ;; This function is called by:
  9689 ;;		_USBCtrlTrfSetupHandler
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693                           	psect	text39
  9694  0035DE                     __ptext39:
  9695                           	opt stack 0
  9696  0035DE                     _USBCheckStdRequest:
  9697                           	opt stack 8
  9698                           
  9699                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;incstack = 0
  9703  0035DE  0104               	movlb	4	; () banked
  9704  0035E0  3930               	swapf	48,w,b	;volatile
  9705  0035E2  32E8               	rrcf	wreg,f,c
  9706  0035E4  0B03               	andlw	3
  9707  0035E6  0900               	iorlw	0
  9708  0035E8  A4D8               	btfss	status,2,c
  9709  0035EA  0012               	return	
  9710  0035EC  D048               	goto	l1808
  9711  0035EE                     l1809:
  9712                           
  9713                           ; BSR set to: 4
  9714                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9715  0035EE  0100               	movlb	0	; () banked
  9716  0035F0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9720  0035F2  0E08               	movlw	8
  9721  0035F4  6FCE               	movwf	_USBDeviceState& (0+255),b
  9722                           
  9723                           ;usb_device.c: 2713: break;
  9724  0035F6  0012               	return	
  9725  0035F8                     
  9726                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9727                           
  9728                           ; BSR set to: 0
  9729  0035F8  ECEA  F015         	call	_USBStdGetDscHandler	;wreg free
  9730                           
  9731                           ;usb_device.c: 2716: break;
  9732  0035FC  0012               	return	
  9733  0035FE                     
  9734                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9735  0035FE  EC09  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9736                           
  9737                           ;usb_device.c: 2719: break;
  9738  003602  0012               	return	
  9739  003604                     
  9740                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9741  003604  0ED6               	movlw	low _USBActiveConfiguration
  9742  003606  0100               	movlb	0	; () banked
  9743  003608  6FB0               	movwf	_inPipes& (0+255),b
  9744  00360A  0E00               	movlw	high _USBActiveConfiguration
  9745  00360C  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9749  00360E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9753  003610  0E01               	movlw	1
  9754  003612  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9758  003614  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9759                           
  9760                           ;usb_device.c: 2725: break;
  9761  003616  0012               	return	
  9762  003618                     
  9763                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9764                           
  9765                           ; BSR set to: 0
  9766  003618  EC15  F022         	call	_USBStdGetStatusHandler	;wreg free
  9767                           
  9768                           ;usb_device.c: 2728: break;
  9769  00361C  0012               	return	
  9770  00361E                     
  9771                           ;usb_device.c: 2730: case 3:
  9772                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9773  00361E  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9774                           
  9775                           ;usb_device.c: 2732: break;
  9776  003622  0012               	return	
  9777  003624                     
  9778                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9779  003624  0104               	movlb	4	; () banked
  9780  003626  5134               	movf	52,w,b	;volatile
  9781  003628  0D01               	mullw	1
  9782  00362A  0EF1               	movlw	low _USBAlternateInterface
  9783  00362C  24F3               	addwf	prodl,w,c
  9784  00362E  0100               	movlb	0	; () banked
  9785  003630  6FB0               	movwf	_inPipes& (0+255),b
  9786  003632  0E02               	movlw	high _USBAlternateInterface
  9787  003634  20F4               	addwfc	prodh,w,c
  9788  003636  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9792  003638  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9796  00363A  0E01               	movlw	1
  9797  00363C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9801  00363E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9802                           
  9803                           ;usb_device.c: 2738: break;
  9804  003640  0012               	return	
  9805  003642                     l1818:
  9806                           
  9807                           ; BSR set to: 4
  9808                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9809  003642  0100               	movlb	0	; () banked
  9810  003644  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9814  003646  0104               	movlb	4	; () banked
  9815  003648  5134               	movf	52,w,b	;volatile
  9816  00364A  0D01               	mullw	1
  9817  00364C  0EF1               	movlw	low _USBAlternateInterface
  9818  00364E  24F3               	addwf	prodl,w,c
  9819  003650  6ED9               	movwf	fsr2l,c
  9820  003652  0E02               	movlw	high _USBAlternateInterface
  9821  003654  20F4               	addwfc	prodh,w,c
  9822  003656  6EDA               	movwf	fsr2h,c
  9823  003658  C432 FFDF          	movff	1074,indf2	;volatile
  9824                           
  9825                           ;usb_device.c: 2742: break;
  9826  00365C  0012               	return	
  9827  00365E                     
  9828                           ; BSR set to: 4
  9829                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9830                           
  9831                           ; BSR set to: 4
  9832  00365E  0E00               	movlw	0
  9833  003660  0100               	movlb	0	; () banked
  9834  003662  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9835  003664  0E02               	movlw	2
  9836  003666  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9837  003668  0E00               	movlw	0
  9838  00366A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9839  00366C  0E00               	movlw	0
  9840  00366E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9841  003670  0E00               	movlw	0
  9842  003672  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9843  003674  0E00               	movlw	0
  9844  003676  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9845  003678  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9846                           
  9847                           ;usb_device.c: 2749: }
  9848                           
  9849                           ;usb_device.c: 2748: break;
  9850                           
  9851                           ;usb_device.c: 2747: default:
  9852                           
  9853                           ;usb_device.c: 2746: case 12:
  9854                           
  9855                           ;usb_device.c: 2745: break;
  9856  00367C  0012               	return	
  9857  00367E                     l1808:
  9858  00367E  0104               	movlb	4	; () banked
  9859  003680  5131               	movf	49,w,b	;volatile
  9860                           
  9861                           ; Switch size 1, requested type "space"
  9862                           ; Number of cases is 11, Range of values is 0 to 12
  9863                           ; switch strategies available:
  9864                           ; Name         Instructions Cycles
  9865                           ; simple_byte           34    18 (average)
  9866                           ;	Chosen strategy is simple_byte
  9867  003682  0A00               	xorlw	0	; case 0
  9868  003684  B4D8               	btfsc	status,2,c
  9869  003686  D7C8               	goto	l1814
  9870  003688  0A01               	xorlw	1	; case 1
  9871  00368A  B4D8               	btfsc	status,2,c
  9872  00368C  D7C8               	goto	l1815
  9873  00368E  0A02               	xorlw	2	; case 3
  9874  003690  B4D8               	btfsc	status,2,c
  9875  003692  D7C5               	goto	l1815
  9876  003694  0A06               	xorlw	6	; case 5
  9877  003696  B4D8               	btfsc	status,2,c
  9878  003698  D7AA               	goto	l1809
  9879  00369A  0A03               	xorlw	3	; case 6
  9880  00369C  B4D8               	btfsc	status,2,c
  9881  00369E  D7AC               	goto	l1811
  9882  0036A0  0A01               	xorlw	1	; case 7
  9883  0036A2  B4D8               	btfsc	status,2,c
  9884  0036A4  D7DC               	goto	l1819
  9885  0036A6  0A0F               	xorlw	15	; case 8
  9886  0036A8  B4D8               	btfsc	status,2,c
  9887  0036AA  D7AC               	goto	l1813
  9888  0036AC  0A01               	xorlw	1	; case 9
  9889  0036AE  B4D8               	btfsc	status,2,c
  9890  0036B0  D7A6               	goto	l1812
  9891  0036B2  0A03               	xorlw	3	; case 10
  9892  0036B4  B4D8               	btfsc	status,2,c
  9893  0036B6  D7B6               	goto	l1817
  9894  0036B8  0A01               	xorlw	1	; case 11
  9895  0036BA  B4D8               	btfsc	status,2,c
  9896  0036BC  D7C2               	goto	l1818
  9897  0036BE  0A07               	xorlw	7	; case 12
  9898  0036C0  0012               	return	
  9899  0036C2                     __end_of_USBCheckStdRequest:
  9900                           	opt stack 0
  9901                           tosu	equ	0xFFF
  9902                           tosh	equ	0xFFE
  9903                           tosl	equ	0xFFD
  9904                           pclath	equ	0xFFA
  9905                           tblptru	equ	0xFF8
  9906                           tblptrh	equ	0xFF7
  9907                           tblptrl	equ	0xFF6
  9908                           tablat	equ	0xFF5
  9909                           prodh	equ	0xFF4
  9910                           prodl	equ	0xFF3
  9911                           intcon	equ	0xFF2
  9912                           intcon2	equ	0xFF1
  9913                           intcon3	equ	0xFF0
  9914                           postinc0	equ	0xFEE
  9915                           plusw0	equ	0xFEB
  9916                           wreg	equ	0xFE8
  9917                           postinc1	equ	0xFE6
  9918                           postdec1	equ	0xFE5
  9919                           fsr1h	equ	0xFE2
  9920                           fsr1l	equ	0xFE1
  9921                           indf2	equ	0xFDF
  9922                           postinc2	equ	0xFDE
  9923                           postdec2	equ	0xFDD
  9924                           plusw2	equ	0xFDB
  9925                           fsr2h	equ	0xFDA
  9926                           fsr2l	equ	0xFD9
  9927                           status	equ	0xFD8
  9928                           
  9929 ;; *************** function _USBStdSetCfgHandler *****************
  9930 ;; Defined at:
  9931 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  i               1   49[BANK0 ] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;Total ram usage:        1 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:   15
  9952 ;; This function calls:
  9953 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9954 ;;		_memset
  9955 ;; This function is called by:
  9956 ;;		_USBCheckStdRequest
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text40
  9961  003412                     __ptext40:
  9962                           	opt stack 0
  9963  003412                     _USBStdSetCfgHandler:
  9964                           	opt stack 8
  9965                           
  9966                           ;usb_device.c: 1988: uint8_t i;
  9967                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9968                           
  9969                           ;incstack = 0
  9970  003412  0100               	movlb	0	; () banked
  9971  003414  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9975  003416  0E27               	movlw	39
  9976  003418  6F7D               	movwf	memset@p1& (0+255),b
  9977  00341A  0E0F               	movlw	15
  9978  00341C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9979  00341E  0E00               	movlw	0
  9980  003420  6F80               	movwf	(memset@c+1)& (0+255),b
  9981  003422  0E00               	movlw	0
  9982  003424  6F7F               	movwf	memset@c& (0+255),b
  9983  003426  0E00               	movlw	0
  9984  003428  6F82               	movwf	(memset@n+1)& (0+255),b
  9985  00342A  0E02               	movlw	2
  9986  00342C  6F81               	movwf	memset@n& (0+255),b
  9987  00342E  EC97  F032         	call	_memset	;wreg free
  9988                           
  9989                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9990  003432  0E00               	movlw	0
  9991  003434  0100               	movlb	0	; () banked
  9992  003436  6F7D               	movwf	memset@p1& (0+255),b
  9993  003438  0E04               	movlw	4
  9994  00343A  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9995  00343C  0E00               	movlw	0
  9996  00343E  6F80               	movwf	(memset@c+1)& (0+255),b
  9997  003440  0E00               	movlw	0
  9998  003442  6F7F               	movwf	memset@c& (0+255),b
  9999  003444  0E00               	movlw	0
 10000  003446  6F82               	movwf	(memset@n+1)& (0+255),b
 10001  003448  0E30               	movlw	48
 10002  00344A  6F81               	movwf	memset@n& (0+255),b
 10003  00344C  EC97  F032         	call	_memset	;wreg free
 10004                           
 10005                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10006  003450  8C65               	bsf	3941,6,c	;volatile
 10007                           
 10008                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10009  003452  0E00               	movlw	0
 10010  003454  0100               	movlb	0	; () banked
 10011  003456  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10012  003458                     l13185:
 10013                           
 10014                           ; BSR set to: 0
 10015  003458  0E02               	movlw	2
 10016  00345A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10017  00345C  D001               	goto	l1725
 10018  00345E  D016               	goto	u11800
 10019  003460                     l1725:
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;usb_device.c: 2006: {
 10023                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10024                           
 10025                           ; BSR set to: 0
 10026  003460  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10027  003462  0D01               	mullw	1
 10028  003464  0ED1               	movlw	low _ep_data_in
 10029  003466  24F3               	addwf	prodl,w,c
 10030  003468  6ED9               	movwf	fsr2l,c
 10031  00346A  0E02               	movlw	high _ep_data_in
 10032  00346C  20F4               	addwfc	prodh,w,c
 10033  00346E  6EDA               	movwf	fsr2h,c
 10034  003470  0E00               	movlw	0
 10035  003472  6EDF               	movwf	indf2,c
 10036                           
 10037                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10038  003474  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10039  003476  0D01               	mullw	1
 10040  003478  0ECE               	movlw	low _ep_data_out
 10041  00347A  24F3               	addwf	prodl,w,c
 10042  00347C  6ED9               	movwf	fsr2l,c
 10043  00347E  0E02               	movlw	high _ep_data_out
 10044  003480  20F4               	addwfc	prodh,w,c
 10045  003482  6EDA               	movwf	fsr2h,c
 10046  003484  0E00               	movlw	0
 10047  003486  6EDF               	movwf	indf2,c
 10048                           
 10049                           ; BSR set to: 0
 10050  003488  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10051  00348A  D7E6               	goto	l13185
 10052  00348C                     u11800:
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;usb_device.c: 2009: }
 10056                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10057                           
 10058                           ; BSR set to: 0
 10059  00348C  0EF1               	movlw	low _USBAlternateInterface
 10060  00348E  6F7D               	movwf	memset@p1& (0+255),b
 10061  003490  0E02               	movlw	high _USBAlternateInterface
 10062  003492  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10063  003494  0E00               	movlw	0
 10064  003496  6F80               	movwf	(memset@c+1)& (0+255),b
 10065  003498  0E00               	movlw	0
 10066  00349A  6F7F               	movwf	memset@c& (0+255),b
 10067  00349C  0E00               	movlw	0
 10068  00349E  6F82               	movwf	(memset@n+1)& (0+255),b
 10069  0034A0  0E02               	movlw	2
 10070  0034A2  6F81               	movwf	memset@n& (0+255),b
 10071  0034A4  EC97  F032         	call	_memset	;wreg free
 10072                           
 10073                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10074  0034A8  9C65               	bcf	3941,6,c	;volatile
 10075                           
 10076                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10077  0034AA  0E08               	movlw	8
 10078  0034AC  0100               	movlb	0	; () banked
 10079  0034AE  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10080  0034B0  0E04               	movlw	4
 10081  0034B2  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10085  0034B4  0E00               	movlw	0
 10086  0034B6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10087  0034B8  0E04               	movlw	4
 10088  0034BA  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10092  0034BC  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10093  0034C0  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10097  0034C4  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10101  0034C8  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10102  0034CA  A4D8               	btfss	status,2,c
 10103  0034CC  D003               	goto	l1727
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;usb_device.c: 2028: {
 10107                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10108  0034CE  0E10               	movlw	16
 10109  0034D0  6FCE               	movwf	_USBDeviceState& (0+255),b
 10110                           
 10111                           ;usb_device.c: 2031: }
 10112  0034D2  0012               	return	
 10113  0034D4                     l1727:
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;usb_device.c: 2032: else
 10117                           ;usb_device.c: 2033: {
 10118                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10119                           
 10120                           ; BSR set to: 0
 10121  0034D4  0E00               	movlw	0
 10122  0034D6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10123  0034D8  0E01               	movlw	1
 10124  0034DA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10125  0034DC  0ED6               	movlw	low _USBActiveConfiguration
 10126  0034DE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10127  0034E0  0E00               	movlw	high _USBActiveConfiguration
 10128  0034E2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10129  0034E4  0E00               	movlw	0
 10130  0034E6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10131  0034E8  0E01               	movlw	1
 10132  0034EA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10133  0034EC  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10134                           
 10135                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10136  0034F0  0E20               	movlw	32
 10137  0034F2  0100               	movlb	0	; () banked
 10138  0034F4  6FCE               	movwf	_USBDeviceState& (0+255),b
 10139  0034F6  0012               	return	
 10140  0034F8                     __end_of_USBStdSetCfgHandler:
 10141                           	opt stack 0
 10142                           tosu	equ	0xFFF
 10143                           tosh	equ	0xFFE
 10144                           tosl	equ	0xFFD
 10145                           pclath	equ	0xFFA
 10146                           tblptru	equ	0xFF8
 10147                           tblptrh	equ	0xFF7
 10148                           tblptrl	equ	0xFF6
 10149                           tablat	equ	0xFF5
 10150                           prodh	equ	0xFF4
 10151                           prodl	equ	0xFF3
 10152                           intcon	equ	0xFF2
 10153                           intcon2	equ	0xFF1
 10154                           intcon3	equ	0xFF0
 10155                           postinc0	equ	0xFEE
 10156                           plusw0	equ	0xFEB
 10157                           wreg	equ	0xFE8
 10158                           postinc1	equ	0xFE6
 10159                           postdec1	equ	0xFE5
 10160                           fsr1h	equ	0xFE2
 10161                           fsr1l	equ	0xFE1
 10162                           indf2	equ	0xFDF
 10163                           postinc2	equ	0xFDE
 10164                           postdec2	equ	0xFDD
 10165                           plusw2	equ	0xFDB
 10166                           fsr2h	equ	0xFDA
 10167                           fsr2l	equ	0xFD9
 10168                           status	equ	0xFD8
 10169                           
 10170 ;; *************** function _USBStdGetStatusHandler *****************
 10171 ;; Defined at:
 10172 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10177 ;;		 -> NULL(0), BDT(48), 
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;Total ram usage:        3 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:   11
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_USBCheckStdRequest
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text41
 10202  00442A                     __ptext41:
 10203                           	opt stack 0
 10204  00442A                     _USBStdGetStatusHandler:
 10205                           	opt stack 12
 10206                           
 10207                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;incstack = 0
 10211  00442A  0E00               	movlw	0
 10212  00442C  0104               	movlb	4	; () banked
 10213  00442E  6F38               	movwf	56,b	;volatile
 10214                           
 10215                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10216  004430  0E00               	movlw	0
 10217  004432  6F39               	movwf	57,b	;volatile
 10218                           
 10219                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10220  004434  D03D               	goto	l1746
 10221  004436                     l1747:
 10222                           
 10223                           ; BSR set to: 4
 10224                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10225  004436  0100               	movlb	0	; () banked
 10226  004438  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10227                           
 10228                           ;usb_device.c: 2163: }
 10229                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10230                           
 10231                           ; BSR set to: 4
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;usb_device.c: 2161: {
 10235                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10236                           
 10237                           ;usb_device.c: 2160: if(0 == 1)
 10238  00443A  0101               	movlb	1	; () banked
 10239  00443C  05E1               	decf	_RemoteWakeup& (0+255),w,b
 10240  00443E  A4D8               	btfss	status,2,c
 10241  004440  D042               	goto	l1750
 10242                           
 10243                           ; BSR set to: 1
 10244                           ;usb_device.c: 2166: {
 10245                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10246  004442  0104               	movlb	4	; () banked
 10247  004444  8338               	bsf	56,1,b	;volatile
 10248                           
 10249                           ; BSR set to: 4
 10250                           ;usb_device.c: 2168: }
 10251                           ;usb_device.c: 2169: break;
 10252  004446  D03F               	goto	l1750
 10253  004448                     l1751:
 10254                           
 10255                           ; BSR set to: 4
 10256                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10257  004448  0100               	movlb	0	; () banked
 10258  00444A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10259                           
 10260                           ;usb_device.c: 2172: break;
 10261  00444C  D03C               	goto	l1750
 10262  00444E                     l1752:
 10263                           
 10264                           ; BSR set to: 4
 10265                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10266  00444E  0100               	movlb	0	; () banked
 10267  004450  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10268                           
 10269                           ;usb_device.c: 2178: {
 10270                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10271                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10272  004452  0104               	movlb	4	; () banked
 10273  004454  BF34               	btfsc	52,7,b	;volatile
 10274  004456  D00B               	goto	l1753
 10275                           
 10276                           ; BSR set to: 4
 10277                           ;usb_device.c: 2182: {
 10278                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10279  004458  5134               	movf	52,w,b	;volatile
 10280  00445A  0B0F               	andlw	15
 10281  00445C  0100               	movlb	0	; () banked
 10282  00445E  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10283  004460  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10284  004462  0D02               	mullw	2
 10285  004464  0E06               	movlw	low _pBDTEntryOut
 10286  004466  24F3               	addwf	prodl,w,c
 10287  004468  6ED9               	movwf	fsr2l,c
 10288  00446A  0E03               	movlw	high _pBDTEntryOut
 10289  00446C  D00B               	goto	L4
 10290  00446E                     l1753:
 10291                           
 10292                           ;usb_device.c: 2185: else
 10293                           ;usb_device.c: 2186: {
 10294                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10295                           
 10296                           ; BSR set to: 0
 10297  00446E  0104               	movlb	4	; () banked
 10298  004470  5134               	movf	52,w,b	;volatile
 10299  004472  0B0F               	andlw	15
 10300  004474  0100               	movlb	0	; () banked
 10301  004476  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10302  004478  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10303  00447A  0D02               	mullw	2
 10304  00447C  0EB6               	movlw	low _pBDTEntryIn
 10305  00447E  24F3               	addwf	prodl,w,c
 10306  004480  6ED9               	movwf	fsr2l,c
 10307  004482  0E00               	movlw	high _pBDTEntryIn
 10308  004484                     L4:
 10309  004484  20F4               	addwfc	prodh,w,c
 10310  004486  6EDA               	movwf	fsr2h,c
 10311  004488  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10312  00448C  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;usb_device.c: 2188: }
 10316                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10317                           
 10318                           ; BSR set to: 0
 10319  004490  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10320  004494  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10321  004498  AEDF               	btfss	indf2,7,c
 10322  00449A  D015               	goto	l1750
 10323                           
 10324                           ; BSR set to: 0
 10325  00449C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10326  0044A0  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10327  0044A4  A4DF               	btfss	indf2,2,c
 10328  0044A6  D00F               	goto	l1750
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10332  0044A8  0E01               	movlw	1
 10333  0044AA  0104               	movlb	4	; () banked
 10334  0044AC  6F38               	movwf	56,b	;volatile
 10335                           
 10336                           ; BSR set to: 4
 10337                           ;usb_device.c: 2193: }
 10338                           ;usb_device.c: 2194: }
 10339                           
 10340                           ; BSR set to: 4
 10341                           ;usb_device.c: 2192: break;
 10342  0044AE  D00B               	goto	l1750
 10343  0044B0                     l1746:
 10344                           
 10345                           ; BSR set to: 4
 10346                           
 10347                           ; BSR set to: 4
 10348  0044B0  5130               	movf	48,w,b	;volatile
 10349  0044B2  0B1F               	andlw	31
 10350                           
 10351                           ; Switch size 1, requested type "space"
 10352                           ; Number of cases is 3, Range of values is 0 to 2
 10353                           ; switch strategies available:
 10354                           ; Name         Instructions Cycles
 10355                           ; simple_byte           10     6 (average)
 10356                           ;	Chosen strategy is simple_byte
 10357  0044B4  0A00               	xorlw	0	; case 0
 10358  0044B6  B4D8               	btfsc	status,2,c
 10359  0044B8  D7BE               	goto	l1747
 10360  0044BA  0A01               	xorlw	1	; case 1
 10361  0044BC  B4D8               	btfsc	status,2,c
 10362  0044BE  D7C4               	goto	l1751
 10363  0044C0  0A03               	xorlw	3	; case 2
 10364  0044C2  B4D8               	btfsc	status,2,c
 10365  0044C4  D7C4               	goto	l1752
 10366  0044C6                     l1750:
 10367                           
 10368                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10369  0044C6  0100               	movlb	0	; () banked
 10370  0044C8  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10371  0044CA  0012               	return	
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;usb_device.c: 2197: {
 10375                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10376  0044CC  0E38               	movlw	56
 10377  0044CE  6FB0               	movwf	_inPipes& (0+255),b
 10378  0044D0  0E04               	movlw	4
 10379  0044D2  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10383  0044D4  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10387  0044D6  0E02               	movlw	2
 10388  0044D8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10389  0044DA  0012               	return	
 10390  0044DC                     __end_of_USBStdGetStatusHandler:
 10391                           	opt stack 0
 10392                           tosu	equ	0xFFF
 10393                           tosh	equ	0xFFE
 10394                           tosl	equ	0xFFD
 10395                           pclath	equ	0xFFA
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           prodh	equ	0xFF4
 10401                           prodl	equ	0xFF3
 10402                           intcon	equ	0xFF2
 10403                           intcon2	equ	0xFF1
 10404                           intcon3	equ	0xFF0
 10405                           postinc0	equ	0xFEE
 10406                           plusw0	equ	0xFEB
 10407                           wreg	equ	0xFE8
 10408                           postinc1	equ	0xFE6
 10409                           postdec1	equ	0xFE5
 10410                           fsr1h	equ	0xFE2
 10411                           fsr1l	equ	0xFE1
 10412                           indf2	equ	0xFDF
 10413                           postinc2	equ	0xFDE
 10414                           postdec2	equ	0xFDD
 10415                           plusw2	equ	0xFDB
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function _USBStdGetDscHandler *****************
 10421 ;; Defined at:
 10422 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;Total ram usage:        2 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:   11
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_USBCheckStdRequest
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text42
 10451  002BD4                     __ptext42:
 10452                           	opt stack 0
 10453  002BD4                     _USBStdGetDscHandler:
 10454                           	opt stack 12
 10455                           
 10456                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;incstack = 0
 10460  002BD4  0E80               	movlw	128
 10461  002BD6  0104               	movlb	4	; () banked
 10462  002BD8  1930               	xorwf	48,w,b	;volatile
 10463  002BDA  A4D8               	btfss	status,2,c
 10464  002BDC  0012               	return	
 10465                           
 10466                           ; BSR set to: 4
 10467                           ;usb_device.c: 2064: {
 10468                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10469  002BDE  0EC0               	movlw	192
 10470  002BE0  0100               	movlb	0	; () banked
 10471  002BE2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10472                           
 10473                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10474  002BE4  D082               	goto	l1733
 10475  002BE6                     
 10476                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10477                           
 10478                           ; BSR set to: 0
 10479  002BE6  0E49               	movlw	low _device_dsc
 10480  002BE8  0100               	movlb	0	; () banked
 10481  002BEA  6FB0               	movwf	_inPipes& (0+255),b
 10482  002BEC  0EFE               	movlw	high _device_dsc
 10483  002BEE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10487  002BF0  0E00               	movlw	0
 10488  002BF2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10489  002BF4  0E12               	movlw	18
 10490  002BF6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10491                           
 10492                           ;usb_device.c: 2076: break;
 10493  002BF8  0012               	return	
 10494  002BFA                     
 10495                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10496                           
 10497                           ; BSR set to: 0
 10498  002BFA  0104               	movlb	4	; () banked
 10499  002BFC  5132               	movf	50,w,b	;volatile
 10500  002BFE  A4D8               	btfss	status,2,c
 10501  002C00  D040               	goto	l1737
 10502                           
 10503                           ; BSR set to: 4
 10504                           ;usb_device.c: 2082: {
 10505                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10506  002C02  5132               	movf	50,w,b	;volatile
 10507  002C04  0D02               	mullw	2
 10508  002C06  0E2E               	movlw	low _USB_CD_Ptr
 10509  002C08  24F3               	addwf	prodl,w,c
 10510  002C0A  6EF6               	movwf	tblptrl,c
 10511  002C0C  0EFC               	movlw	high _USB_CD_Ptr
 10512  002C0E  20F4               	addwfc	prodh,w,c
 10513  002C10  6EF7               	movwf	tblptrh,c
 10514  002C12                     	if	0	;There are less than 3 active tblptr bytes
 10515  002C12                     	endif
 10516  002C12  0009               	tblrd		*+
 10517  002C14  CFF5 F0B0          	movff	tablat,_inPipes
 10518  002C18  000A               	tblrd		*-
 10519  002C1A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10520                           
 10521                           ; BSR set to: 4
 10522                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10523  002C1E  0E02               	movlw	2
 10524  002C20  0100               	movlb	0	; () banked
 10525  002C22  25B0               	addwf	_inPipes& (0+255),w,b
 10526  002C24  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10527  002C26  0E00               	movlw	0
 10528  002C28  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10529  002C2A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10530  002C2C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10531  002C30  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10532  002C34  6AF8               	clrf	tblptru,c
 10533  002C36  0E0E               	movlw	(high __ramtop+-1)
 10534  002C38  64F7               	cpfsgt	tblptrh,c
 10535  002C3A  D003               	bra	u11847
 10536  002C3C  0008               	tblrd		*
 10537  002C3E  50F5               	movf	tablat,w,c
 10538  002C40  D005               	bra	u11840
 10539  002C42                     u11847:
 10540  002C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 10541  002C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 10542  002C4A  50EF               	movf	indf0,w,c
 10543  002C4C                     u11840:
 10544  002C4C  0100               	movlb	0	; () banked
 10545  002C4E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10549  002C50  0E03               	movlw	3
 10550  002C52  25B0               	addwf	_inPipes& (0+255),w,b
 10551  002C54  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10552  002C56  0E00               	movlw	0
 10553  002C58  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10554  002C5A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10555  002C5C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10556  002C60  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10557  002C64  6AF8               	clrf	tblptru,c
 10558  002C66  0E0E               	movlw	(high __ramtop+-1)
 10559  002C68  64F7               	cpfsgt	tblptrh,c
 10560  002C6A  D003               	bra	u11857
 10561  002C6C  0008               	tblrd		*
 10562  002C6E  50F5               	movf	tablat,w,c
 10563  002C70  D005               	bra	u11850
 10564  002C72                     u11857:
 10565  002C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 10566  002C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 10567  002C7A  50EF               	movf	indf0,w,c
 10568  002C7C                     u11850:
 10569  002C7C  0100               	movlb	0	; () banked
 10570  002C7E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10571                           
 10572                           ;usb_device.c: 2094: }
 10573  002C80  0012               	return	
 10574  002C82                     l1737:
 10575                           
 10576                           ;usb_device.c: 2095: else
 10577                           ;usb_device.c: 2096: {
 10578                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10579                           
 10580                           ; BSR set to: 0
 10581  002C82  0E00               	movlw	0
 10582  002C84  0100               	movlb	0	; () banked
 10583  002C86  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;usb_device.c: 2098: }
 10587                           ;usb_device.c: 2099: break;
 10588  002C88  0012               	return	
 10589  002C8A                     
 10590                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10591                           
 10592                           ; BSR set to: 0
 10593  002C8A  0E03               	movlw	3
 10594  002C8C  0104               	movlb	4	; () banked
 10595  002C8E  6132               	cpfslt	50,b	;volatile
 10596  002C90  D024               	goto	l1740
 10597                           
 10598                           ; BSR set to: 4
 10599                           ;usb_device.c: 2105: {
 10600                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10601  002C92  5132               	movf	50,w,b	;volatile
 10602  002C94  0D02               	mullw	2
 10603  002C96  0E1C               	movlw	low _USB_SD_Ptr
 10604  002C98  24F3               	addwf	prodl,w,c
 10605  002C9A  6EF6               	movwf	tblptrl,c
 10606  002C9C  0EFC               	movlw	high _USB_SD_Ptr
 10607  002C9E  20F4               	addwfc	prodh,w,c
 10608  002CA0  6EF7               	movwf	tblptrh,c
 10609  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 10610  002CA2                     	endif
 10611  002CA2  0009               	tblrd		*+
 10612  002CA4  CFF5 F0B0          	movff	tablat,_inPipes
 10613  002CA8  000A               	tblrd		*-
 10614  002CAA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10615                           
 10616                           ; BSR set to: 4
 10617                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10618  002CAE  C0B0  FFF6         	movff	_inPipes,tblptrl
 10619  002CB2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10620  002CB6  6AF8               	clrf	tblptru,c
 10621  002CB8  0E0E               	movlw	(high __ramtop+-1)
 10622  002CBA  64F7               	cpfsgt	tblptrh,c
 10623  002CBC  D003               	bra	u11877
 10624  002CBE  0008               	tblrd		*
 10625  002CC0  50F5               	movf	tablat,w,c
 10626  002CC2  D005               	bra	u11870
 10627  002CC4                     u11877:
 10628  002CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10629  002CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10630  002CCC  50EF               	movf	indf0,w,c
 10631  002CCE                     u11870:
 10632  002CCE  0100               	movlb	0	; () banked
 10633  002CD0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10634  002CD2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10635  002CD4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10636  002CD6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10637                           
 10638                           ;usb_device.c: 2110: }
 10639  002CD8  0012               	return	
 10640  002CDA                     l1740:
 10641                           
 10642                           ;usb_device.c: 2120: else
 10643                           ;usb_device.c: 2121: {
 10644                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10645                           
 10646                           ; BSR set to: 0
 10647  002CDA  0E00               	movlw	0
 10648  002CDC  0100               	movlb	0	; () banked
 10649  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10650                           
 10651                           ; BSR set to: 0
 10652                           ;usb_device.c: 2123: }
 10653                           ;usb_device.c: 2124: break;
 10654  002CE0  0012               	return	
 10655  002CE2                     
 10656                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10657                           
 10658                           ; BSR set to: 0
 10659  002CE2  0E00               	movlw	0
 10660  002CE4  0100               	movlb	0	; () banked
 10661  002CE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;usb_device.c: 2128: }
 10665                           
 10666                           ;usb_device.c: 2127: break;
 10667  002CE8  0012               	return	
 10668  002CEA                     l1733:
 10669                           
 10670                           ; BSR set to: 0
 10671                           
 10672                           ; BSR set to: 0
 10673  002CEA  0104               	movlb	4	; () banked
 10674  002CEC  5133               	movf	51,w,b	;volatile
 10675                           
 10676                           ; Switch size 1, requested type "space"
 10677                           ; Number of cases is 3, Range of values is 1 to 3
 10678                           ; switch strategies available:
 10679                           ; Name         Instructions Cycles
 10680                           ; simple_byte           10     6 (average)
 10681                           ;	Chosen strategy is simple_byte
 10682  002CEE  0A01               	xorlw	1	; case 1
 10683  002CF0  B4D8               	btfsc	status,2,c
 10684  002CF2  D779               	goto	l1734
 10685  002CF4  0A03               	xorlw	3	; case 2
 10686  002CF6  B4D8               	btfsc	status,2,c
 10687  002CF8  D780               	goto	l1736
 10688  002CFA  0A01               	xorlw	1	; case 3
 10689  002CFC  B4D8               	btfsc	status,2,c
 10690  002CFE  D7C5               	goto	l1739
 10691  002D00  D7F0               	goto	l1742
 10692  002D02                     __end_of_USBStdGetDscHandler:
 10693                           	opt stack 0
 10694                           tosu	equ	0xFFF
 10695                           tosh	equ	0xFFE
 10696                           tosl	equ	0xFFD
 10697                           pclath	equ	0xFFA
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           intcon2	equ	0xFF1
 10706                           intcon3	equ	0xFF0
 10707                           indf0	equ	0xFEF
 10708                           postinc0	equ	0xFEE
 10709                           plusw0	equ	0xFEB
 10710                           fsr0h	equ	0xFEA
 10711                           fsr0l	equ	0xFE9
 10712                           wreg	equ	0xFE8
 10713                           postinc1	equ	0xFE6
 10714                           postdec1	equ	0xFE5
 10715                           fsr1h	equ	0xFE2
 10716                           fsr1l	equ	0xFE1
 10717                           indf2	equ	0xFDF
 10718                           postinc2	equ	0xFDE
 10719                           postdec2	equ	0xFDD
 10720                           plusw2	equ	0xFDB
 10721                           fsr2h	equ	0xFDA
 10722                           fsr2l	equ	0xFD9
 10723                           status	equ	0xFD8
 10724                           
 10725 ;; *************** function _USBStdFeatureReqHandler *****************
 10726 ;; Defined at:
 10727 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;		None
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10732 ;;		 -> NULL(0), BDT(48), 
 10733 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10734 ;;		 -> UEP0(1), 
 10735 ;;  current_ep_d    1   52[BANK0 ] struct .
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10746 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10748 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10749 ;;Total ram usage:        6 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:   15
 10752 ;; This function calls:
 10753 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10754 ;; This function is called by:
 10755 ;;		_USBCheckStdRequest
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text43
 10760  00135A                     __ptext43:
 10761                           	opt stack 0
 10762  00135A                     _USBStdFeatureReqHandler:
 10763                           	opt stack 8
 10764                           
 10765                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10766                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10767                           ;usb_device.c: 2778: unsigned char* pUEP;
 10768                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10769                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10770                           
 10771                           ;incstack = 0
 10772  00135A  0104               	movlb	4	; () banked
 10773  00135C  0532               	decf	50,w,b	;volatile
 10774  00135E  A4D8               	btfss	status,2,c
 10775  001360  D011               	goto	l1826
 10776                           
 10777                           ; BSR set to: 4
 10778  001362  5130               	movf	48,w,b	;volatile
 10779  001364  0B1F               	andlw	31
 10780  001366  0900               	iorlw	0
 10781  001368  A4D8               	btfss	status,2,c
 10782  00136A  D00C               	goto	l1826
 10783                           
 10784                           ; BSR set to: 4
 10785                           ;usb_device.c: 2818: {
 10786                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10787  00136C  0100               	movlb	0	; () banked
 10788  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10792  001370  0E03               	movlw	3
 10793  001372  0104               	movlb	4	; () banked
 10794  001374  1931               	xorwf	49,w,b	;volatile
 10795  001376  A4D8               	btfss	status,2,c
 10796  001378  D002               	goto	l1825
 10797                           
 10798                           ; BSR set to: 4
 10799                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10800  00137A  0E01               	movlw	1
 10801  00137C  D001               	goto	L5
 10802  00137E                     l1825:
 10803                           
 10804                           ;usb_device.c: 2822: else
 10805                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10806                           
 10807                           ; BSR set to: 1
 10808  00137E  0E00               	movlw	0
 10809  001380                     L5:
 10810  001380  0101               	movlb	1	; () banked
 10811  001382  6FE1               	movwf	_RemoteWakeup& (0+255),b
 10812  001384                     l1826:
 10813                           
 10814                           ;usb_device.c: 2824: }
 10815                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10816                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10817                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10818                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10819                           
 10820                           ; BSR set to: 1
 10821  001384  0104               	movlb	4	; () banked
 10822  001386  5132               	movf	50,w,b	;volatile
 10823  001388  A4D8               	btfss	status,2,c
 10824  00138A  0012               	return	
 10825                           
 10826                           ; BSR set to: 4
 10827  00138C  5130               	movf	48,w,b	;volatile
 10828  00138E  0B1F               	andlw	31
 10829  001390  0A02               	xorlw	2
 10830  001392  A4D8               	btfss	status,2,c
 10831  001394  0012               	return	
 10832                           
 10833                           ; BSR set to: 4
 10834  001396  5134               	movf	52,w,b	;volatile
 10835  001398  0B0F               	andlw	15
 10836  00139A  0900               	iorlw	0
 10837  00139C  B4D8               	btfsc	status,2,c
 10838  00139E  0012               	return	
 10839                           
 10840                           ; BSR set to: 4
 10841  0013A0  5134               	movf	52,w,b	;volatile
 10842  0013A2  0B0F               	andlw	15
 10843  0013A4  0100               	movlb	0	; () banked
 10844  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10845  0013A8  0E03               	movlw	3
 10846  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10847  0013AC  0012               	return	
 10848                           
 10849                           ; BSR set to: 0
 10850  0013AE  0E20               	movlw	32
 10851  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10852  0013B2  A4D8               	btfss	status,2,c
 10853  0013B4  0012               	return	
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;usb_device.c: 2831: {
 10857                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10858  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10859                           
 10860                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10861  0013B8  0104               	movlb	4	; () banked
 10862  0013BA  BF34               	btfsc	52,7,b	;volatile
 10863  0013BC  D01C               	goto	l1828
 10864                           
 10865                           ; BSR set to: 4
 10866                           ;usb_device.c: 2838: {
 10867                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10868  0013BE  5134               	movf	52,w,b	;volatile
 10869  0013C0  0B0F               	andlw	15
 10870  0013C2  0100               	movlb	0	; () banked
 10871  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10872  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10873  0013C8  0D02               	mullw	2
 10874  0013CA  0E06               	movlw	low _pBDTEntryOut
 10875  0013CC  24F3               	addwf	prodl,w,c
 10876  0013CE  6ED9               	movwf	fsr2l,c
 10877  0013D0  0E03               	movlw	high _pBDTEntryOut
 10878  0013D2  20F4               	addwfc	prodh,w,c
 10879  0013D4  6EDA               	movwf	fsr2h,c
 10880  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10881  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10882                           
 10883                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10884  0013DE  0104               	movlb	4	; () banked
 10885  0013E0  5134               	movf	52,w,b	;volatile
 10886  0013E2  0B0F               	andlw	15
 10887  0013E4  0100               	movlb	0	; () banked
 10888  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10889  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10890  0013EA  0D01               	mullw	1
 10891  0013EC  0ECE               	movlw	low _ep_data_out
 10892  0013EE  24F3               	addwf	prodl,w,c
 10893  0013F0  6ED9               	movwf	fsr2l,c
 10894  0013F2  0E02               	movlw	high _ep_data_out
 10895  0013F4  D01C               	goto	L6
 10896  0013F6                     l1828:
 10897                           
 10898                           ;usb_device.c: 2842: else
 10899                           ;usb_device.c: 2843: {
 10900                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10901                           
 10902                           ; BSR set to: 0
 10903  0013F6  0104               	movlb	4	; () banked
 10904  0013F8  5134               	movf	52,w,b	;volatile
 10905  0013FA  0B0F               	andlw	15
 10906  0013FC  0100               	movlb	0	; () banked
 10907  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10908  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10909  001402  0D02               	mullw	2
 10910  001404  0EB6               	movlw	low _pBDTEntryIn
 10911  001406  24F3               	addwf	prodl,w,c
 10912  001408  6ED9               	movwf	fsr2l,c
 10913  00140A  0E00               	movlw	high _pBDTEntryIn
 10914  00140C  20F4               	addwfc	prodh,w,c
 10915  00140E  6EDA               	movwf	fsr2h,c
 10916  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10917  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10918                           
 10919                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10920  001418  0104               	movlb	4	; () banked
 10921  00141A  5134               	movf	52,w,b	;volatile
 10922  00141C  0B0F               	andlw	15
 10923  00141E  0100               	movlb	0	; () banked
 10924  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10925  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10926  001424  0D01               	mullw	1
 10927  001426  0ED1               	movlw	low _ep_data_in
 10928  001428  24F3               	addwf	prodl,w,c
 10929  00142A  6ED9               	movwf	fsr2l,c
 10930  00142C  0E02               	movlw	high _ep_data_in
 10931  00142E                     L6:
 10932  00142E  20F4               	addwfc	prodh,w,c
 10933  001430  6EDA               	movwf	fsr2h,c
 10934  001432  50DF               	movf	indf2,w,c
 10935  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;usb_device.c: 2846: }
 10939                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10940                           
 10941                           ; BSR set to: 0
 10942  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10943  001438  D002               	goto	l1830
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;usb_device.c: 2853: {
 10947                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10948  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10949                           
 10950                           ;usb_device.c: 2855: }
 10951  00143C  D001               	goto	l1831
 10952  00143E                     l1830:
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;usb_device.c: 2856: else
 10956                           ;usb_device.c: 2857: {
 10957                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10958                           
 10959                           ; BSR set to: 0
 10960  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10961  001440                     l1831:
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;usb_device.c: 2859: }
 10965                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10966                           
 10967                           ; BSR set to: 0
 10968  001440  0104               	movlb	4	; () banked
 10969  001442  BF34               	btfsc	52,7,b	;volatile
 10970  001444  D00B               	goto	l1832
 10971                           
 10972                           ; BSR set to: 4
 10973                           ;usb_device.c: 2865: {
 10974                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10975  001446  5134               	movf	52,w,b	;volatile
 10976  001448  0B0F               	andlw	15
 10977  00144A  0100               	movlb	0	; () banked
 10978  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10979  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10980  001450  0D02               	mullw	2
 10981  001452  0E06               	movlw	low _pBDTEntryOut
 10982  001454  24F3               	addwf	prodl,w,c
 10983  001456  6ED9               	movwf	fsr2l,c
 10984  001458  0E03               	movlw	high _pBDTEntryOut
 10985  00145A  D00B               	goto	L7
 10986  00145C                     l1832:
 10987                           
 10988                           ;usb_device.c: 2868: else
 10989                           ;usb_device.c: 2869: {
 10990                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10991                           
 10992                           ; BSR set to: 0
 10993  00145C  0104               	movlb	4	; () banked
 10994  00145E  5134               	movf	52,w,b	;volatile
 10995  001460  0B0F               	andlw	15
 10996  001462  0100               	movlb	0	; () banked
 10997  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10998  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10999  001468  0D02               	mullw	2
 11000  00146A  0EB6               	movlw	low _pBDTEntryIn
 11001  00146C  24F3               	addwf	prodl,w,c
 11002  00146E  6ED9               	movwf	fsr2l,c
 11003  001470  0E00               	movlw	high _pBDTEntryIn
 11004  001472                     L7:
 11005  001472  20F4               	addwfc	prodh,w,c
 11006  001474  6EDA               	movwf	fsr2h,c
 11007  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11008  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;usb_device.c: 2871: }
 11012                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11013                           
 11014                           ; BSR set to: 0
 11015  00147E  0E03               	movlw	3
 11016  001480  0104               	movlb	4	; () banked
 11017  001482  1931               	xorwf	49,w,b	;volatile
 11018  001484  A4D8               	btfss	status,2,c
 11019  001486  D031               	goto	l1834
 11020                           
 11021                           ; BSR set to: 4
 11022                           ;usb_device.c: 2875: {
 11023                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11024  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11025  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11026  001490  0100               	movlb	0	; () banked
 11027  001492  AEDF               	btfss	indf2,7,c
 11028  001494  D01D               	goto	l1837
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;usb_device.c: 2877: {
 11032                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11033  001496  0104               	movlb	4	; () banked
 11034  001498  BF34               	btfsc	52,7,b	;volatile
 11035  00149A  D00B               	goto	l1836
 11036                           
 11037                           ; BSR set to: 4
 11038                           ;usb_device.c: 2881: {
 11039                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11040  00149C  5134               	movf	52,w,b	;volatile
 11041  00149E  0B0F               	andlw	15
 11042  0014A0  0100               	movlb	0	; () banked
 11043  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11044  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11045  0014A6  0D01               	mullw	1
 11046  0014A8  0ECE               	movlw	low _ep_data_out
 11047  0014AA  24F3               	addwf	prodl,w,c
 11048  0014AC  6ED9               	movwf	fsr2l,c
 11049  0014AE  0E02               	movlw	high _ep_data_out
 11050  0014B0  D00B               	goto	L8
 11051  0014B2                     l1836:
 11052                           
 11053                           ;usb_device.c: 2884: else
 11054                           ;usb_device.c: 2885: {
 11055                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11056                           
 11057                           ; BSR set to: 2
 11058  0014B2  0104               	movlb	4	; () banked
 11059  0014B4  5134               	movf	52,w,b	;volatile
 11060  0014B6  0B0F               	andlw	15
 11061  0014B8  0100               	movlb	0	; () banked
 11062  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11063  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11064  0014BE  0D01               	mullw	1
 11065  0014C0  0ED1               	movlw	low _ep_data_in
 11066  0014C2  24F3               	addwf	prodl,w,c
 11067  0014C4  6ED9               	movwf	fsr2l,c
 11068  0014C6  0E02               	movlw	high _ep_data_in
 11069  0014C8                     L8:
 11070  0014C8  20F4               	addwfc	prodh,w,c
 11071  0014CA  6EDA               	movwf	fsr2h,c
 11072  0014CC  0102               	movlb	2	; () banked
 11073  0014CE  82DF               	bsf	indf2,1,c
 11074  0014D0                     l1837:
 11075                           
 11076                           ;usb_device.c: 2887: }
 11077                           ;usb_device.c: 2888: }
 11078                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11079                           
 11080                           ; BSR set to: 2
 11081                           
 11082                           ; BSR set to: 2
 11083  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11084  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11085  0014D8  0E00               	movlw	0
 11086  0014DA  84DB               	bsf	plusw2,2,c
 11087                           
 11088                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11089  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11090  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11091  0014E4  0E00               	movlw	0
 11092  0014E6  8EDB               	bsf	plusw2,7,c
 11093                           
 11094                           ;usb_device.c: 2893: }
 11095  0014E8  0012               	return	
 11096  0014EA                     l1834:
 11097                           
 11098                           ;usb_device.c: 2894: else
 11099                           ;usb_device.c: 2895: {
 11100                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11101  0014EA  0E04               	movlw	4
 11102  0014EC  0100               	movlb	0	; () banked
 11103  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11107  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11108  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11109  0014F8  AEDF               	btfss	indf2,7,c
 11110  0014FA  D01B               	goto	l1839
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;usb_device.c: 2902: {
 11114                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11115  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11116  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11117  001504  0E7F               	movlw	127
 11118  001506  16DF               	andwf	indf2,f,c
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11122  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11123  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11124  001510  0E00               	movlw	0
 11125  001512  8CDB               	bsf	plusw2,6,c
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11129  001514  0E00               	movlw	0
 11130  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11131  001518  0E05               	movlw	5
 11132  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11133  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11134  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11135  001524  0E00               	movlw	0
 11136  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11137  001528  0E02               	movlw	2
 11138  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11139  00152C  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11140                           
 11141                           ;usb_device.c: 2908: }
 11142  001530  D006               	goto	l1840
 11143  001532                     l1839:
 11144                           
 11145                           ;usb_device.c: 2909: else
 11146                           ;usb_device.c: 2910: {
 11147                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11148  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11149  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11150  00153A  0E00               	movlw	0
 11151  00153C  8CDB               	bsf	plusw2,6,c
 11152  00153E                     l1840:
 11153                           
 11154                           ;usb_device.c: 2913: }
 11155                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11156  00153E  0E04               	movlw	4
 11157  001540  0100               	movlb	0	; () banked
 11158  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11162  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11163  001546  D006               	goto	u12090
 11164                           
 11165                           ; BSR set to: 0
 11166  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11167  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11168  001550  AEDF               	btfss	indf2,7,c
 11169  001552  D033               	goto	l1841
 11170  001554                     u12090:
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;usb_device.c: 2924: {
 11174                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11175  001554  0104               	movlb	4	; () banked
 11176  001556  BF34               	btfsc	52,7,b	;volatile
 11177  001558  D00B               	goto	l1844
 11178                           
 11179                           ; BSR set to: 4
 11180                           ;usb_device.c: 2926: {
 11181                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11182  00155A  5134               	movf	52,w,b	;volatile
 11183  00155C  0B0F               	andlw	15
 11184  00155E  0100               	movlb	0	; () banked
 11185  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11186  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11187  001564  0D01               	mullw	1
 11188  001566  0ECE               	movlw	low _ep_data_out
 11189  001568  24F3               	addwf	prodl,w,c
 11190  00156A  6ED9               	movwf	fsr2l,c
 11191  00156C  0E02               	movlw	high _ep_data_out
 11192  00156E  D00B               	goto	L9
 11193  001570                     l1844:
 11194                           
 11195                           ;usb_device.c: 2929: else
 11196                           ;usb_device.c: 2930: {
 11197                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11198                           
 11199                           ; BSR set to: 2
 11200  001570  0104               	movlb	4	; () banked
 11201  001572  5134               	movf	52,w,b	;volatile
 11202  001574  0B0F               	andlw	15
 11203  001576  0100               	movlb	0	; () banked
 11204  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11205  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11206  00157C  0D01               	mullw	1
 11207  00157E  0ED1               	movlw	low _ep_data_in
 11208  001580  24F3               	addwf	prodl,w,c
 11209  001582  6ED9               	movwf	fsr2l,c
 11210  001584  0E02               	movlw	high _ep_data_in
 11211  001586                     L9:
 11212  001586  20F4               	addwfc	prodh,w,c
 11213  001588  6EDA               	movwf	fsr2h,c
 11214  00158A  0102               	movlb	2	; () banked
 11215  00158C  92DF               	bcf	indf2,1,c
 11216                           
 11217                           ; BSR set to: 2
 11218                           ;usb_device.c: 2932: }
 11219                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11220                           
 11221                           ; BSR set to: 2
 11222  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11223  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11224  001596  0E3B               	movlw	59
 11225  001598  16DF               	andwf	indf2,f,c
 11226                           
 11227                           ; BSR set to: 2
 11228                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11229  00159A  0E00               	movlw	0
 11230  00159C  0100               	movlb	0	; () banked
 11231  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11232  0015A0  0E05               	movlw	5
 11233  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11234  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11235  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11236  0015AC  0E00               	movlw	0
 11237  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11238  0015B0  0E02               	movlw	2
 11239  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11240  0015B4  EC1A  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11241                           
 11242                           ;usb_device.c: 2938: }
 11243  0015B8  D006               	goto	l1846
 11244  0015BA                     l1841:
 11245                           
 11246                           ;usb_device.c: 2939: else
 11247                           ;usb_device.c: 2940: {
 11248                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11249  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11250  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11251  0015C2  0E3B               	movlw	59
 11252  0015C4  16DF               	andwf	indf2,f,c
 11253  0015C6                     l1846:
 11254                           
 11255                           ;usb_device.c: 2943: }
 11256                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11257  0015C6  0104               	movlb	4	; () banked
 11258  0015C8  5134               	movf	52,w,b	;volatile
 11259  0015CA  0B0F               	andlw	15
 11260  0015CC  0100               	movlb	0	; () banked
 11261  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11262  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11263  0015D2  0D01               	mullw	1
 11264  0015D4  0E26               	movlw	38
 11265  0015D6  24F3               	addwf	prodl,w,c
 11266  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11267  0015DA  0E0F               	movlw	15
 11268  0015DC  20F4               	addwfc	prodh,w,c
 11269  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11273  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11274  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11275  0015E8  0EFE               	movlw	254
 11276  0015EA  16DF               	andwf	indf2,f,c
 11277                           
 11278                           ; BSR set to: 0
 11279  0015EC  0012               	return	
 11280  0015EE                     __end_of_USBStdFeatureReqHandler:
 11281                           	opt stack 0
 11282                           tosu	equ	0xFFF
 11283                           tosh	equ	0xFFE
 11284                           tosl	equ	0xFFD
 11285                           pclath	equ	0xFFA
 11286                           tblptru	equ	0xFF8
 11287                           tblptrh	equ	0xFF7
 11288                           tblptrl	equ	0xFF6
 11289                           tablat	equ	0xFF5
 11290                           prodh	equ	0xFF4
 11291                           prodl	equ	0xFF3
 11292                           intcon	equ	0xFF2
 11293                           intcon2	equ	0xFF1
 11294                           intcon3	equ	0xFF0
 11295                           indf0	equ	0xFEF
 11296                           postinc0	equ	0xFEE
 11297                           plusw0	equ	0xFEB
 11298                           fsr0h	equ	0xFEA
 11299                           fsr0l	equ	0xFE9
 11300                           wreg	equ	0xFE8
 11301                           postinc1	equ	0xFE6
 11302                           postdec1	equ	0xFE5
 11303                           fsr1h	equ	0xFE2
 11304                           fsr1l	equ	0xFE1
 11305                           indf2	equ	0xFDF
 11306                           postinc2	equ	0xFDE
 11307                           postdec2	equ	0xFDD
 11308                           plusw2	equ	0xFDB
 11309                           fsr2h	equ	0xFDA
 11310                           fsr2l	equ	0xFD9
 11311                           status	equ	0xFD8
 11312                           
 11313 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11314 ;; Defined at:
 11315 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  event           2   41[BANK0 ] enum E8366
 11318 ;;  pdata           2   43[BANK0 ] PTR void 
 11319 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11320 ;;  size            2   45[BANK0 ] unsigned int 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      unsigned char 
 11325 ;; Registers used:
 11326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11336 ;;Total ram usage:        8 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   14
 11339 ;; This function calls:
 11340 ;;		_CDCInitEP
 11341 ;;		_USBCheckCDCRequest
 11342 ;; This function is called by:
 11343 ;;		_USBDeviceTasks
 11344 ;;		_USBStdSetCfgHandler
 11345 ;;		_USBSuspend
 11346 ;;		_USBWakeFromSuspend
 11347 ;;		_USBCtrlTrfSetupHandler
 11348 ;;		_USBCheckStdRequest
 11349 ;;		_USBStdFeatureReqHandler
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text44
 11354  005834                     __ptext44:
 11355                           	opt stack 0
 11356  005834                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11357                           	opt stack 12
 11358                           
 11359                           ;usb_device_mgr.c: 106: switch( (int) event )
 11360                           
 11361                           ;incstack = 0
 11362  005834  D006               	goto	l2000
 11363  005836                     
 11364                           ;usb_device_mgr.c: 134: CDCInitEP();
 11365  005836  EC7A  F02A         	call	_CDCInitEP	;wreg free
 11366                           
 11367                           ;usb_device_mgr.c: 142: break;
 11368                           
 11369                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11370                           
 11371                           ;usb_device_mgr.c: 139: break;
 11372  00583A  0012               	return	
 11373  00583C                     
 11374                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11375  00583C  EC6E  F022         	call	_USBCheckCDCRequest	;wreg free
 11376                           
 11377                           ;usb_device_mgr.c: 163: }
 11378                           
 11379                           ;usb_device_mgr.c: 162: break;
 11380                           
 11381                           ;usb_device_mgr.c: 161: default:
 11382                           
 11383                           ;usb_device_mgr.c: 159: break;
 11384                           
 11385                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11386                           
 11387                           ;usb_device_mgr.c: 156: break;
 11388                           
 11389                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11390                           
 11391                           ;usb_device_mgr.c: 153: break;
 11392  005840  0012               	return	
 11393  005842                     l2000:
 11394  005842  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11395  005846  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11396                           
 11397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11398                           ; Switch size 1, requested type "space"
 11399                           ; Number of cases is 2, Range of values is 0 to 127
 11400                           ; switch strategies available:
 11401                           ; Name         Instructions Cycles
 11402                           ; simple_byte            7     4 (average)
 11403                           ;	Chosen strategy is simple_byte
 11404  00584A  0100               	movlb	0	; () banked
 11405  00584C  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11406  00584E  0A00               	xorlw	0	; case 0
 11407  005850  B4D8               	btfsc	status,2,c
 11408  005852  D004               	goto	l16927
 11409  005854  0A7F               	xorlw	127	; case 127
 11410  005856  A4D8               	btfss	status,2,c
 11411  005858  0012               	return	
 11412  00585A  D018               	goto	l16929
 11413  00585C                     l16927:
 11414                           
 11415                           ; BSR set to: 0
 11416                           ; Switch size 1, requested type "space"
 11417                           ; Number of cases is 8, Range of values is 1 to 117
 11418                           ; switch strategies available:
 11419                           ; Name         Instructions Cycles
 11420                           ; simple_byte           25    13 (average)
 11421                           ;	Chosen strategy is simple_byte
 11422  00585C  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11423  00585E  0A01               	xorlw	1	; case 1
 11424  005860  B4D8               	btfsc	status,2,c
 11425  005862  D7E9               	goto	l2006
 11426  005864  0A03               	xorlw	3	; case 2
 11427  005866  B4D8               	btfsc	status,2,c
 11428  005868  0012               	return	
 11429  00586A  0A01               	xorlw	1	; case 3
 11430  00586C  B4D8               	btfsc	status,2,c
 11431  00586E  D7E6               	goto	l2008
 11432  005870  0A06               	xorlw	6	; case 5
 11433  005872  B4D8               	btfsc	status,2,c
 11434  005874  0012               	return	
 11435  005876  0A77               	xorlw	119	; case 114
 11436  005878  B4D8               	btfsc	status,2,c
 11437  00587A  0012               	return	
 11438  00587C  0A01               	xorlw	1	; case 115
 11439  00587E  B4D8               	btfsc	status,2,c
 11440  005880  0012               	return	
 11441  005882  0A07               	xorlw	7	; case 116
 11442  005884  B4D8               	btfsc	status,2,c
 11443  005886  0012               	return	
 11444  005888  0A01               	xorlw	1	; case 117
 11445  00588A  0012               	return	
 11446  00588C                     l16929:
 11447                           
 11448                           ; BSR set to: 0
 11449                           ; Switch size 1, requested type "space"
 11450                           ; Number of cases is 1, Range of values is 255 to 255
 11451                           ; switch strategies available:
 11452                           ; Name         Instructions Cycles
 11453                           ; simple_byte            4     3 (average)
 11454                           ;	Chosen strategy is simple_byte
 11455  00588C  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11456  00588E  0AFF               	xorlw	255	; case 255
 11457  005890  0012               	return	
 11458  005892                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11459                           	opt stack 0
 11460                           tosu	equ	0xFFF
 11461                           tosh	equ	0xFFE
 11462                           tosl	equ	0xFFD
 11463                           pclath	equ	0xFFA
 11464                           tblptru	equ	0xFF8
 11465                           tblptrh	equ	0xFF7
 11466                           tblptrl	equ	0xFF6
 11467                           tablat	equ	0xFF5
 11468                           prodh	equ	0xFF4
 11469                           prodl	equ	0xFF3
 11470                           intcon	equ	0xFF2
 11471                           intcon2	equ	0xFF1
 11472                           intcon3	equ	0xFF0
 11473                           indf0	equ	0xFEF
 11474                           postinc0	equ	0xFEE
 11475                           plusw0	equ	0xFEB
 11476                           fsr0h	equ	0xFEA
 11477                           fsr0l	equ	0xFE9
 11478                           wreg	equ	0xFE8
 11479                           postinc1	equ	0xFE6
 11480                           postdec1	equ	0xFE5
 11481                           fsr1h	equ	0xFE2
 11482                           fsr1l	equ	0xFE1
 11483                           indf2	equ	0xFDF
 11484                           postinc2	equ	0xFDE
 11485                           postdec2	equ	0xFDD
 11486                           plusw2	equ	0xFDB
 11487                           fsr2h	equ	0xFDA
 11488                           fsr2l	equ	0xFD9
 11489                           status	equ	0xFD8
 11490                           
 11491 ;; *************** function _USBCheckCDCRequest *****************
 11492 ;; Defined at:
 11493 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;		None
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11511 ;;Total ram usage:        0 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:   11
 11514 ;; This function calls:
 11515 ;;		Nothing
 11516 ;; This function is called by:
 11517 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           	psect	text45
 11522  0044DC                     __ptext45:
 11523                           	opt stack 0
 11524  0044DC                     _USBCheckCDCRequest:
 11525                           	opt stack 14
 11526                           
 11527                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11528                           
 11529                           ;incstack = 0
 11530  0044DC  0104               	movlb	4	; () banked
 11531  0044DE  5130               	movf	48,w,b	;volatile
 11532  0044E0  0B1F               	andlw	31
 11533  0044E2  06E8               	decf	wreg,f,c
 11534  0044E4  A4D8               	btfss	status,2,c
 11535  0044E6  0012               	return	
 11536                           
 11537                           ; BSR set to: 4
 11538                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11539                           
 11540                           ; BSR set to: 4
 11541                           
 11542                           ; BSR set to: 4
 11543  0044E8  3930               	swapf	48,w,b	;volatile
 11544  0044EA  32E8               	rrcf	wreg,f,c
 11545  0044EC  0B03               	andlw	3
 11546  0044EE  06E8               	decf	wreg,f,c
 11547  0044F0  A4D8               	btfss	status,2,c
 11548  0044F2  0012               	return	
 11549                           
 11550                           ; BSR set to: 4
 11551                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11552                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11553                           
 11554                           ; BSR set to: 4
 11555                           
 11556                           ; BSR set to: 4
 11557  0044F4  5134               	movf	52,w,b	;volatile
 11558  0044F6  B4D8               	btfsc	status,2,c
 11559  0044F8  D037               	goto	l1902
 11560                           
 11561                           ; BSR set to: 4
 11562  0044FA  0534               	decf	52,w,b	;volatile
 11563  0044FC  A4D8               	btfss	status,2,c
 11564  0044FE  0012               	return	
 11565  004500  D033               	goto	l1902
 11566  004502                     
 11567                           ; BSR set to: 4
 11568                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11569                           
 11570                           ; BSR set to: 4
 11571  004502  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11572  004504  0100               	movlb	0	; () banked
 11573  004506  6FB0               	movwf	_inPipes& (0+255),b
 11574  004508  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11575  00450A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11579  00450C  0E00               	movlw	0
 11580  00450E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11581  004510  0E08               	movlw	8
 11582  004512  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11586  004514  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11590  004516  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11591                           
 11592                           ;usb_device_cdc.c: 178: break;
 11593  004518  0012               	return	
 11594  00451A                     
 11595                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11596                           
 11597                           ; BSR set to: 0
 11598  00451A  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11599  00451C  0100               	movlb	0	; () banked
 11600  00451E  6FB0               	movwf	_inPipes& (0+255),b
 11601  004520  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11602  004522  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11606  004524  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11607                           
 11608                           ;usb_device_cdc.c: 183: break;
 11609  004526  0012               	return	
 11610  004528                     l1906:
 11611                           
 11612                           ; BSR set to: 4
 11613                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11614  004528  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11615  00452C  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11616                           
 11617                           ; BSR set to: 4
 11618                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11619  004530  0E83               	movlw	low _line_coding
 11620  004532  0101               	movlb	1	; () banked
 11621  004534  6FC9               	movwf	_outPipes& (0+255),b
 11622  004536  0E03               	movlw	high _line_coding
 11623  004538  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11624                           
 11625                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11626  00453A  0E00               	movlw	0
 11627  00453C  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11628  00453E  0E00               	movlw	0
 11629  004540  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11630                           
 11631                           ; BSR set to: 1
 11632                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11633  004542  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11634                           
 11635                           ;usb_device_cdc.c: 192: break;
 11636  004544  0012               	return	
 11637  004546                     
 11638                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11639                           
 11640                           ; BSR set to: 1
 11641  004546  0E83               	movlw	low _line_coding
 11642  004548  0100               	movlb	0	; () banked
 11643  00454A  6FB0               	movwf	_inPipes& (0+255),b
 11644  00454C  0E03               	movlw	high _line_coding
 11645  00454E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11646                           
 11647                           ; BSR set to: 0
 11648  004550  0E00               	movlw	0
 11649  004552  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11650  004554  0E07               	movlw	7
 11651  004556  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11652                           
 11653                           ; BSR set to: 0
 11654  004558  0EC1               	movlw	193
 11655  00455A  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11656                           
 11657                           ;usb_device_cdc.c: 199: break;
 11658  00455C  0012               	return	
 11659  00455E                     l1908:
 11660                           
 11661                           ; BSR set to: 4
 11662                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11663  00455E  C432 F1DC          	movff	1074,_control_signal_bitmap	;volatile
 11664                           
 11665                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11666  004562  0100               	movlb	0	; () banked
 11667  004564  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;usb_device_cdc.c: 261: }
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;usb_device_cdc.c: 260: break;
 11674                           
 11675                           ;usb_device_cdc.c: 259: default:
 11676                           
 11677                           ;usb_device_cdc.c: 235: break;
 11678  004566  0012               	return	
 11679  004568                     l1902:
 11680                           
 11681                           ; BSR set to: 0
 11682  004568  0104               	movlb	4	; () banked
 11683  00456A  5131               	movf	49,w,b	;volatile
 11684                           
 11685                           ; Switch size 1, requested type "space"
 11686                           ; Number of cases is 5, Range of values is 0 to 34
 11687                           ; switch strategies available:
 11688                           ; Name         Instructions Cycles
 11689                           ; simple_byte           16     9 (average)
 11690                           ;	Chosen strategy is simple_byte
 11691  00456C  0A00               	xorlw	0	; case 0
 11692  00456E  B4D8               	btfsc	status,2,c
 11693  004570  D7C8               	goto	l1903
 11694  004572  0A01               	xorlw	1	; case 1
 11695  004574  B4D8               	btfsc	status,2,c
 11696  004576  D7D1               	goto	l1905
 11697  004578  0A21               	xorlw	33	; case 32
 11698  00457A  B4D8               	btfsc	status,2,c
 11699  00457C  D7D5               	goto	l1906
 11700  00457E  0A01               	xorlw	1	; case 33
 11701  004580  B4D8               	btfsc	status,2,c
 11702  004582  D7E1               	goto	l1907
 11703  004584  0A03               	xorlw	3	; case 34
 11704  004586  A4D8               	btfss	status,2,c
 11705  004588  0012               	return	
 11706  00458A  D7E9               	goto	l1908
 11707  00458C                     __end_of_USBCheckCDCRequest:
 11708                           	opt stack 0
 11709                           tosu	equ	0xFFF
 11710                           tosh	equ	0xFFE
 11711                           tosl	equ	0xFFD
 11712                           pclath	equ	0xFFA
 11713                           tblptru	equ	0xFF8
 11714                           tblptrh	equ	0xFF7
 11715                           tblptrl	equ	0xFF6
 11716                           tablat	equ	0xFF5
 11717                           prodh	equ	0xFF4
 11718                           prodl	equ	0xFF3
 11719                           intcon	equ	0xFF2
 11720                           intcon2	equ	0xFF1
 11721                           intcon3	equ	0xFF0
 11722                           indf0	equ	0xFEF
 11723                           postinc0	equ	0xFEE
 11724                           plusw0	equ	0xFEB
 11725                           fsr0h	equ	0xFEA
 11726                           fsr0l	equ	0xFE9
 11727                           wreg	equ	0xFE8
 11728                           postinc1	equ	0xFE6
 11729                           postdec1	equ	0xFE5
 11730                           fsr1h	equ	0xFE2
 11731                           fsr1l	equ	0xFE1
 11732                           indf2	equ	0xFDF
 11733                           postinc2	equ	0xFDE
 11734                           postdec2	equ	0xFDD
 11735                           plusw2	equ	0xFDB
 11736                           fsr2h	equ	0xFDA
 11737                           fsr2l	equ	0xFD9
 11738                           status	equ	0xFD8
 11739                           
 11740 ;; *************** function _CDCInitEP *****************
 11741 ;; Defined at:
 11742 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;		None
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;		None
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      void 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;Total ram usage:        0 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:   13
 11763 ;; This function calls:
 11764 ;;		_USBEnableEndpoint
 11765 ;;		_USBTransferOnePacket
 11766 ;; This function is called by:
 11767 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text46
 11772  0054F4                     __ptext46:
 11773                           	opt stack 0
 11774  0054F4                     _CDCInitEP:
 11775                           	opt stack 12
 11776                           
 11777                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11778                           
 11779                           ;incstack = 0
 11780  0054F4  0E80               	movlw	128
 11781  0054F6  0103               	movlb	3	; () banked
 11782  0054F8  6F83               	movwf	_line_coding& (0+255),b
 11783  0054FA  0E25               	movlw	37
 11784  0054FC  6F84               	movwf	(_line_coding+1)& (0+255),b
 11785  0054FE  0E00               	movlw	0
 11786  005500  6F85               	movwf	(_line_coding+2)& (0+255),b
 11787  005502  0E00               	movlw	0
 11788  005504  6F86               	movwf	(_line_coding+3)& (0+255),b
 11789                           
 11790                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11791  005506  0E00               	movlw	0
 11792  005508  6F87               	movwf	(_line_coding+4)& (0+255),b
 11793                           
 11794                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11795  00550A  0E00               	movlw	0
 11796  00550C  6F88               	movwf	(_line_coding+5)& (0+255),b
 11797                           
 11798                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11799  00550E  0E08               	movlw	8
 11800  005510  6F89               	movwf	(_line_coding+6)& (0+255),b
 11801                           
 11802                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11803  005512  0E00               	movlw	0
 11804  005514  0100               	movlb	0	; () banked
 11805  005516  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11809  005518  0E1A               	movlw	26
 11810  00551A  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11811  00551C  0E01               	movlw	1
 11812  00551E  EC47  F030         	call	_USBEnableEndpoint
 11813                           
 11814                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11815  005522  0E1E               	movlw	30
 11816  005524  0100               	movlb	0	; () banked
 11817  005526  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11818  005528  0E02               	movlw	2
 11819  00552A  EC47  F030         	call	_USBEnableEndpoint
 11820                           
 11821                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11822  00552E  0E00               	movlw	0
 11823  005530  0100               	movlb	0	; () banked
 11824  005532  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11825  005534  0E00               	movlw	low _cdc_data_rx
 11826  005536  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11827  005538  0E05               	movlw	high _cdc_data_rx
 11828  00553A  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11829  00553C  0E40               	movlw	64
 11830  00553E  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11831  005540  0E02               	movlw	2
 11832  005542  ECFB  F020         	call	_USBTransferOnePacket
 11833  005546  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11834  00554A  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11835                           
 11836                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11837  00554E  0E00               	movlw	0
 11838  005550  0101               	movlb	1	; () banked
 11839  005552  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11840  005554  0E00               	movlw	0
 11841  005556  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11845  005558  0E00               	movlw	0
 11846  00555A  0100               	movlb	0	; () banked
 11847  00555C  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11848                           
 11849                           ; BSR set to: 0
 11850  00555E  0012               	return		;funcret
 11851  005560                     __end_of_CDCInitEP:
 11852                           	opt stack 0
 11853                           tosu	equ	0xFFF
 11854                           tosh	equ	0xFFE
 11855                           tosl	equ	0xFFD
 11856                           pclath	equ	0xFFA
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           intcon	equ	0xFF2
 11864                           intcon2	equ	0xFF1
 11865                           intcon3	equ	0xFF0
 11866                           indf0	equ	0xFEF
 11867                           postinc0	equ	0xFEE
 11868                           plusw0	equ	0xFEB
 11869                           fsr0h	equ	0xFEA
 11870                           fsr0l	equ	0xFE9
 11871                           wreg	equ	0xFE8
 11872                           postinc1	equ	0xFE6
 11873                           postdec1	equ	0xFE5
 11874                           fsr1h	equ	0xFE2
 11875                           fsr1l	equ	0xFE1
 11876                           indf2	equ	0xFDF
 11877                           postinc2	equ	0xFDE
 11878                           postdec2	equ	0xFDD
 11879                           plusw2	equ	0xFDB
 11880                           fsr2h	equ	0xFDA
 11881                           fsr2l	equ	0xFD9
 11882                           status	equ	0xFD8
 11883                           
 11884 ;; *************** function _USBEnableEndpoint *****************
 11885 ;; Defined at:
 11886 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  ep              1    wreg     unsigned char 
 11889 ;;  options         1   37[BANK0 ] unsigned char 
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;  ep              1   40[BANK0 ] unsigned char 
 11892 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11893 ;;		 -> UEP0(1), 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      void 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11903 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11904 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11907 ;;Total ram usage:        4 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:   12
 11910 ;; This function calls:
 11911 ;;		_USBConfigureEndpoint
 11912 ;; This function is called by:
 11913 ;;		_CDCInitEP
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text47
 11918  00608E                     __ptext47:
 11919                           	opt stack 0
 11920  00608E                     _USBEnableEndpoint:
 11921                           	opt stack 12
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;incstack = 0
 11925                           ;USBEnableEndpoint@ep stored from wreg
 11926  00608E  0100               	movlb	0	; () banked
 11927  006090  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11928                           
 11929                           ;usb_device.c: 898: unsigned char* p;
 11930                           ;usb_device.c: 902: if(options & 0x04)
 11931  006092  0100               	movlb	0	; () banked
 11932  006094  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11933  006096  D005               	goto	l1643
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;usb_device.c: 903: {
 11937                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11938  006098  0E00               	movlw	0
 11939  00609A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11940  00609C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11941  00609E  ECAB  F025         	call	_USBConfigureEndpoint
 11942  0060A2                     l1643:
 11943                           
 11944                           ;usb_device.c: 905: }
 11945                           ;usb_device.c: 906: if(options & 0x02)
 11946  0060A2  0100               	movlb	0	; () banked
 11947  0060A4  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11948  0060A6  D005               	goto	l1644
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;usb_device.c: 907: {
 11952                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11953  0060A8  0E01               	movlw	1
 11954  0060AA  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11955  0060AC  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11956  0060AE  ECAB  F025         	call	_USBConfigureEndpoint
 11957  0060B2                     l1644:
 11958                           
 11959                           ;usb_device.c: 909: }
 11960                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11961  0060B2  0100               	movlb	0	; () banked
 11962  0060B4  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11963  0060B6  0D01               	mullw	1
 11964  0060B8  0E26               	movlw	38
 11965  0060BA  24F3               	addwf	prodl,w,c
 11966  0060BC  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11967  0060BE  0E0F               	movlw	15
 11968  0060C0  20F4               	addwfc	prodh,w,c
 11969  0060C2  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;usb_device.c: 919: *p = options;
 11973  0060C4  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11974  0060C8  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11975  0060CC  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11976                           
 11977                           ; BSR set to: 0
 11978  0060D0  0012               	return		;funcret
 11979  0060D2                     __end_of_USBEnableEndpoint:
 11980                           	opt stack 0
 11981                           tosu	equ	0xFFF
 11982                           tosh	equ	0xFFE
 11983                           tosl	equ	0xFFD
 11984                           pclath	equ	0xFFA
 11985                           tblptru	equ	0xFF8
 11986                           tblptrh	equ	0xFF7
 11987                           tblptrl	equ	0xFF6
 11988                           tablat	equ	0xFF5
 11989                           prodh	equ	0xFF4
 11990                           prodl	equ	0xFF3
 11991                           intcon	equ	0xFF2
 11992                           intcon2	equ	0xFF1
 11993                           intcon3	equ	0xFF0
 11994                           indf0	equ	0xFEF
 11995                           postinc0	equ	0xFEE
 11996                           plusw0	equ	0xFEB
 11997                           fsr0h	equ	0xFEA
 11998                           fsr0l	equ	0xFE9
 11999                           wreg	equ	0xFE8
 12000                           postinc1	equ	0xFE6
 12001                           postdec1	equ	0xFE5
 12002                           fsr1h	equ	0xFE2
 12003                           fsr1l	equ	0xFE1
 12004                           indf2	equ	0xFDF
 12005                           postinc2	equ	0xFDE
 12006                           postdec2	equ	0xFDD
 12007                           plusw2	equ	0xFDB
 12008                           fsr2h	equ	0xFDA
 12009                           fsr2l	equ	0xFD9
 12010                           status	equ	0xFD8
 12011                           
 12012 ;; *************** function _USBConfigureEndpoint *****************
 12013 ;; Defined at:
 12014 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  EPNum           1    wreg     unsigned char 
 12017 ;;  direction       1   29[BANK0 ] unsigned char 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12020 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12021 ;;		 -> BDT(48), 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  1    wreg      void 
 12024 ;; Registers used:
 12025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12031 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12034 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12035 ;;Total ram usage:        8 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; Hardware stack levels required when called:   11
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_USBEnableEndpoint
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text48
 12046  004B56                     __ptext48:
 12047                           	opt stack 0
 12048  004B56                     _USBConfigureEndpoint:
 12049                           	opt stack 12
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;incstack = 0
 12053                           ;USBConfigureEndpoint@EPNum stored from wreg
 12054  004B56  0100               	movlb	0	; () banked
 12055  004B58  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12056                           
 12057                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12058                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12059  004B5A  0E00               	movlw	0
 12060  004B5C  0100               	movlb	0	; () banked
 12061  004B5E  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12062  004B60  0E04               	movlw	4
 12063  004B62  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12067  004B64  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12068  004B66  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12069  004B68  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12070  004B6A  90D8               	bcf	status,0,c
 12071  004B6C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12072  004B6E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12073  004B70  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12074  004B72  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12075  004B74  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12076  004B76  90D8               	bcf	status,0,c
 12077  004B78  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12078  004B7A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12079  004B7C  90D8               	bcf	status,0,c
 12080  004B7E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12081  004B80  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12082  004B82  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12083  004B84  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12084  004B86  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12085  004B88  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12086  004B8A  90D8               	bcf	status,0,c
 12087  004B8C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12088  004B8E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12089  004B90  90D8               	bcf	status,0,c
 12090  004B92  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12091  004B94  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12092  004B96  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12093  004B98  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12094  004B9A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12095  004B9C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12099  004B9E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12100  004BA2  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12101  004BA6  9EDF               	bcf	indf2,7,c
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;usb_device.c: 1575: if(direction == 0)
 12105  004BA8  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12106  004BAA  A4D8               	btfss	status,2,c
 12107  004BAC  D007               	goto	l1679
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;usb_device.c: 1576: {
 12111                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12112  004BAE  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12113  004BB0  0D02               	mullw	2
 12114  004BB2  0E06               	movlw	low _pBDTEntryOut
 12115  004BB4  24F3               	addwf	prodl,w,c
 12116  004BB6  6ED9               	movwf	fsr2l,c
 12117  004BB8  0E03               	movlw	high _pBDTEntryOut
 12118  004BBA  D006               	goto	L10
 12119  004BBC                     l1679:
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;usb_device.c: 1579: else
 12123                           ;usb_device.c: 1580: {
 12124                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12125                           
 12126                           ; BSR set to: 0
 12127  004BBC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12128  004BBE  0D02               	mullw	2
 12129  004BC0  0EB6               	movlw	low _pBDTEntryIn
 12130  004BC2  24F3               	addwf	prodl,w,c
 12131  004BC4  6ED9               	movwf	fsr2l,c
 12132  004BC6  0E00               	movlw	high _pBDTEntryIn
 12133  004BC8                     L10:
 12134  004BC8  20F4               	addwfc	prodh,w,c
 12135  004BCA  6EDA               	movwf	fsr2h,c
 12136  004BCC  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12137  004BD0  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;usb_device.c: 1582: }
 12141                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12142                           
 12143                           ; BSR set to: 0
 12144  004BD4  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12145  004BD8  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12146  004BDC  9CDF               	bcf	indf2,6,c
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12150  004BDE  EE20 F004          	lfsr	2,4
 12151  004BE2  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12152  004BE4  26D9               	addwf	fsr2l,f,c
 12153  004BE6  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12154  004BE8  22DA               	addwfc	fsr2h,f,c
 12155  004BEA  8CDF               	bsf	indf2,6,c
 12156                           
 12157                           ; BSR set to: 0
 12158  004BEC  0012               	return		;funcret
 12159  004BEE                     __end_of_USBConfigureEndpoint:
 12160                           	opt stack 0
 12161                           tosu	equ	0xFFF
 12162                           tosh	equ	0xFFE
 12163                           tosl	equ	0xFFD
 12164                           pclath	equ	0xFFA
 12165                           tblptru	equ	0xFF8
 12166                           tblptrh	equ	0xFF7
 12167                           tblptrl	equ	0xFF6
 12168                           tablat	equ	0xFF5
 12169                           prodh	equ	0xFF4
 12170                           prodl	equ	0xFF3
 12171                           intcon	equ	0xFF2
 12172                           intcon2	equ	0xFF1
 12173                           intcon3	equ	0xFF0
 12174                           indf0	equ	0xFEF
 12175                           postinc0	equ	0xFEE
 12176                           plusw0	equ	0xFEB
 12177                           fsr0h	equ	0xFEA
 12178                           fsr0l	equ	0xFE9
 12179                           wreg	equ	0xFE8
 12180                           postinc1	equ	0xFE6
 12181                           postdec1	equ	0xFE5
 12182                           fsr1h	equ	0xFE2
 12183                           fsr1l	equ	0xFE1
 12184                           indf2	equ	0xFDF
 12185                           postinc2	equ	0xFDE
 12186                           postdec2	equ	0xFDD
 12187                           plusw2	equ	0xFDB
 12188                           fsr2h	equ	0xFDA
 12189                           fsr2l	equ	0xFD9
 12190                           status	equ	0xFD8
 12191                           
 12192 ;; *************** function _USBCtrlTrfOutHandler *****************
 12193 ;; Defined at:
 12194 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  1    wreg      void 
 12201 ;; Registers used:
 12202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/0
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12212 ;;Total ram usage:        0 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; Hardware stack levels required when called:   13
 12215 ;; This function calls:
 12216 ;;		_USBCtrlTrfRxService
 12217 ;; This function is called by:
 12218 ;;		_USBCtrlEPService
 12219 ;; This function uses a non-reentrant model
 12220 ;;
 12221                           
 12222                           	psect	text49
 12223  0056A0                     __ptext49:
 12224                           	opt stack 0
 12225  0056A0                     _USBCtrlTrfOutHandler:
 12226                           	opt stack 12
 12227                           
 12228                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;incstack = 0
 12232  0056A0  0E02               	movlw	2
 12233  0056A2  0100               	movlb	0	; () banked
 12234  0056A4  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12235  0056A6  A4D8               	btfss	status,2,c
 12236  0056A8  D003               	goto	l1785
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;usb_device.c: 2558: {
 12240                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12241  0056AA  EC81  F016         	call	_USBCtrlTrfRxService	;wreg free
 12242                           
 12243                           ;usb_device.c: 2560: }
 12244  0056AE  0012               	return	
 12245  0056B0                     l1785:
 12246                           
 12247                           ;usb_device.c: 2561: else
 12248                           ;usb_device.c: 2562: {
 12249                           ;usb_device.c: 2565: controlTransferState = 0;
 12250  0056B0  0E00               	movlw	0
 12251  0056B2  0100               	movlb	0	; () banked
 12252  0056B4  6FCC               	movwf	_controlTransferState& (0+255),b
 12253                           
 12254                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12255  0056B6  0101               	movlb	1	; () banked
 12256  0056B8  51DF               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12257  0056BA  A4D8               	btfss	status,2,c
 12258  0056BC  D020               	goto	l1787
 12259                           
 12260                           ; BSR set to: 1
 12261                           ;usb_device.c: 2573: {
 12262                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12263  0056BE  0100               	movlb	0	; () banked
 12264  0056C0  EE20 F001          	lfsr	2,1
 12265  0056C4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12266  0056C6  26D9               	addwf	fsr2l,f,c
 12267  0056C8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12268  0056CA  22DA               	addwfc	fsr2h,f,c
 12269  0056CC  0E08               	movlw	8
 12270  0056CE  6EDF               	movwf	indf2,c
 12271                           
 12272                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12273  0056D0  EE20 F002          	lfsr	2,2
 12274  0056D4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12275  0056D6  26D9               	addwf	fsr2l,f,c
 12276  0056D8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12277  0056DA  22DA               	addwfc	fsr2h,f,c
 12278  0056DC  0E30               	movlw	48
 12279  0056DE  6EDE               	movwf	postinc2,c
 12280  0056E0  0E04               	movlw	4
 12281  0056E2  6EDD               	movwf	postdec2,c
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12285  0056E4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12286  0056E8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12287  0056EC  0E0C               	movlw	12
 12288  0056EE  6EDF               	movwf	indf2,c
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12292  0056F0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12293  0056F4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12294  0056F8  0E00               	movlw	0
 12295  0056FA  8EDB               	bsf	plusw2,7,c
 12296                           
 12297                           ;usb_device.c: 2578: }
 12298  0056FC  0012               	return	
 12299  0056FE                     l1787:
 12300                           
 12301                           ;usb_device.c: 2579: else
 12302                           ;usb_device.c: 2580: {
 12303                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12304                           
 12305                           ; BSR set to: 0
 12306  0056FE  0E00               	movlw	0
 12307  005700  0101               	movlb	1	; () banked
 12308  005702  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12309                           
 12310                           ; BSR set to: 1
 12311  005704  0012               	return	
 12312  005706                     __end_of_USBCtrlTrfOutHandler:
 12313                           	opt stack 0
 12314                           tosu	equ	0xFFF
 12315                           tosh	equ	0xFFE
 12316                           tosl	equ	0xFFD
 12317                           pclath	equ	0xFFA
 12318                           tblptru	equ	0xFF8
 12319                           tblptrh	equ	0xFF7
 12320                           tblptrl	equ	0xFF6
 12321                           tablat	equ	0xFF5
 12322                           prodh	equ	0xFF4
 12323                           prodl	equ	0xFF3
 12324                           intcon	equ	0xFF2
 12325                           intcon2	equ	0xFF1
 12326                           intcon3	equ	0xFF0
 12327                           indf0	equ	0xFEF
 12328                           postinc0	equ	0xFEE
 12329                           plusw0	equ	0xFEB
 12330                           fsr0h	equ	0xFEA
 12331                           fsr0l	equ	0xFE9
 12332                           wreg	equ	0xFE8
 12333                           postinc1	equ	0xFE6
 12334                           postdec1	equ	0xFE5
 12335                           fsr1h	equ	0xFE2
 12336                           fsr1l	equ	0xFE1
 12337                           indf2	equ	0xFDF
 12338                           postinc2	equ	0xFDE
 12339                           postdec2	equ	0xFDD
 12340                           plusw2	equ	0xFDB
 12341                           fsr2h	equ	0xFDA
 12342                           fsr2l	equ	0xFD9
 12343                           status	equ	0xFD8
 12344                           
 12345 ;; *************** function _USBCtrlTrfRxService *****************
 12346 ;; Defined at:
 12347 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12352 ;;  i               1   29[BANK0 ] unsigned char 
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12366 ;;Total ram usage:        2 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:   12
 12369 ;; This function calls:
 12370 ;;		_USBCtrlEPAllowStatusStage
 12371 ;; This function is called by:
 12372 ;;		_USBCtrlTrfOutHandler
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text50
 12377  002D02                     __ptext50:
 12378                           	opt stack 0
 12379  002D02                     _USBCtrlTrfRxService:
 12380                           	opt stack 12
 12381                           
 12382                           ;usb_device.c: 1872: uint8_t byteToRead;
 12383                           ;usb_device.c: 1873: uint8_t i;
 12384                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12385                           
 12386                           ;incstack = 0
 12387  002D02  0100               	movlb	0	; () banked
 12388  002D04  EE20 F001          	lfsr	2,1
 12389  002D08  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12390  002D0A  26D9               	addwf	fsr2l,f,c
 12391  002D0C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12392  002D0E  22DA               	addwfc	fsr2h,f,c
 12393  002D10  50DF               	movf	indf2,w,c
 12394  002D12  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12398  002D14  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12399  002D16  0101               	movlb	1	; () banked
 12400  002D18  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12401  002D1A  0E00               	movlw	0
 12402  002D1C  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12403  002D1E  A0D8               	btfss	status,0,c
 12404                           
 12405                           ; BSR set to: 1
 12406                           ;usb_device.c: 1884: {
 12407                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12408  002D20  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12409                           
 12410                           ; BSR set to: 1
 12411                           ;usb_device.c: 1886: }
 12412                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12413                           
 12414                           ; BSR set to: 1
 12415  002D24  0100               	movlb	0	; () banked
 12416  002D26  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12417  002D28  0101               	movlb	1	; () banked
 12418  002D2A  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12419  002D2C  0E00               	movlw	0
 12420  002D2E  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12424  002D30  0E00               	movlw	0
 12425  002D32  0100               	movlb	0	; () banked
 12426  002D34  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12427  002D36  D013               	goto	l1713
 12428  002D38                     
 12429                           ; BSR set to: 0
 12430                           ;usb_device.c: 1893: {
 12431                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12432                           
 12433                           ; BSR set to: 0
 12434  002D38  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12435  002D3A  0D01               	mullw	1
 12436  002D3C  0E38               	movlw	56
 12437  002D3E  24F3               	addwf	prodl,w,c
 12438  002D40  6ED9               	movwf	fsr2l,c
 12439  002D42  0E04               	movlw	4
 12440  002D44  20F4               	addwfc	prodh,w,c
 12441  002D46  6EDA               	movwf	fsr2h,c
 12442  002D48  C1C9  FFE1         	movff	_outPipes,fsr1l
 12443  002D4C  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12444  002D50  CFDF FFE7          	movff	indf2,indf1
 12445                           
 12446                           ; BSR set to: 0
 12447  002D54  0101               	movlb	1	; () banked
 12448  002D56  4BC9               	infsnz	_outPipes& (0+255),f,b
 12449  002D58  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12450                           
 12451                           ; BSR set to: 1
 12452  002D5A  0100               	movlb	0	; () banked
 12453  002D5C  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12454  002D5E                     l1713:
 12455                           
 12456                           ; BSR set to: 0
 12457                           
 12458                           ; BSR set to: 0
 12459  002D5E  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12460  002D60  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12461  002D62  A0D8               	btfss	status,0,c
 12462  002D64  D7E9               	goto	l1714
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 1895: }
 12466                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12467                           
 12468                           ; BSR set to: 0
 12469  002D66  0101               	movlb	1	; () banked
 12470  002D68  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12471  002D6A  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12472  002D6C  B4D8               	btfsc	status,2,c
 12473  002D6E  D033               	goto	l1716
 12474                           
 12475                           ; BSR set to: 1
 12476                           ;usb_device.c: 1900: {
 12477                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12478  002D70  0100               	movlb	0	; () banked
 12479  002D72  EE20 F001          	lfsr	2,1
 12480  002D76  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12481  002D78  26D9               	addwf	fsr2l,f,c
 12482  002D7A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12483  002D7C  22DA               	addwfc	fsr2h,f,c
 12484  002D7E  0E08               	movlw	8
 12485  002D80  6EDF               	movwf	indf2,c
 12486                           
 12487                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12488  002D82  EE20 F002          	lfsr	2,2
 12489  002D86  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12490  002D88  26D9               	addwf	fsr2l,f,c
 12491  002D8A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12492  002D8C  22DA               	addwfc	fsr2h,f,c
 12493  002D8E  0E38               	movlw	56
 12494  002D90  6EDE               	movwf	postinc2,c
 12495  002D92  0E04               	movlw	4
 12496  002D94  6EDD               	movwf	postdec2,c
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12500  002D96  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12501  002D9A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12502  002D9E  BCDF               	btfsc	indf2,6,c
 12503  002DA0  D00D               	goto	l1717
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;usb_device.c: 1904: {
 12507                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12508  002DA2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12509  002DA6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12510  002DAA  0E48               	movlw	72
 12511  002DAC  6EDF               	movwf	indf2,c
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12515  002DAE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12516  002DB2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12517  002DB6  0E00               	movlw	0
 12518  002DB8  8EDB               	bsf	plusw2,7,c
 12519                           
 12520                           ;usb_device.c: 1907: }
 12521  002DBA  0012               	return	
 12522  002DBC                     l1717:
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;usb_device.c: 1908: else
 12526                           ;usb_device.c: 1909: {
 12527                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12528                           
 12529                           ; BSR set to: 0
 12530  002DBC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12531  002DC0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12532  002DC4  0E08               	movlw	8
 12533  002DC6  6EDF               	movwf	indf2,c
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12537  002DC8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12538  002DCC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12539  002DD0  0E00               	movlw	0
 12540  002DD2  8EDB               	bsf	plusw2,7,c
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;usb_device.c: 1912: }
 12544                           ;usb_device.c: 1913: }
 12545  002DD4  0012               	return	
 12546  002DD6                     l1716:
 12547                           
 12548                           ;usb_device.c: 1914: else
 12549                           ;usb_device.c: 1915: {
 12550                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12551                           
 12552                           ; BSR set to: 0
 12553  002DD6  0100               	movlb	0	; () banked
 12554  002DD8  EE20 F001          	lfsr	2,1
 12555  002DDC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12556  002DDE  26D9               	addwf	fsr2l,f,c
 12557  002DE0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12558  002DE2  22DA               	addwfc	fsr2h,f,c
 12559  002DE4  0E08               	movlw	8
 12560  002DE6  6EDF               	movwf	indf2,c
 12561                           
 12562                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12563  002DE8  EE20 F002          	lfsr	2,2
 12564  002DEC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12565  002DEE  26D9               	addwf	fsr2l,f,c
 12566  002DF0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12567  002DF2  22DA               	addwfc	fsr2h,f,c
 12568  002DF4  0E30               	movlw	48
 12569  002DF6  6EDE               	movwf	postinc2,c
 12570  002DF8  0E04               	movlw	4
 12571  002DFA  6EDD               	movwf	postdec2,c
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12575  002DFC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12576  002E00  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12577  002E04  0E04               	movlw	4
 12578  002E06  6EDF               	movwf	indf2,c
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12582  002E08  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12583  002E0C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12584  002E10  0E00               	movlw	0
 12585  002E12  8EDB               	bsf	plusw2,7,c
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;usb_device.c: 1944: }
 12589                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12590                           
 12591                           ; BSR set to: 0
 12592  002E14  0101               	movlb	1	; () banked
 12593  002E16  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12594                           
 12595                           ; BSR set to: 1
 12596                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12597  002E18  0100               	movlb	0	; () banked
 12598  002E1A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12599  002E1C  A4D8               	btfss	status,2,c
 12600  002E1E  0012               	return	
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;usb_device.c: 1960: {
 12604                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12605  002E20  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12606  002E24  0012               	return	
 12607  002E26                     __end_of_USBCtrlTrfRxService:
 12608                           	opt stack 0
 12609                           tosu	equ	0xFFF
 12610                           tosh	equ	0xFFE
 12611                           tosl	equ	0xFFD
 12612                           pclath	equ	0xFFA
 12613                           tblptru	equ	0xFF8
 12614                           tblptrh	equ	0xFF7
 12615                           tblptrl	equ	0xFF6
 12616                           tablat	equ	0xFF5
 12617                           prodh	equ	0xFF4
 12618                           prodl	equ	0xFF3
 12619                           intcon	equ	0xFF2
 12620                           intcon2	equ	0xFF1
 12621                           intcon3	equ	0xFF0
 12622                           indf0	equ	0xFEF
 12623                           postinc0	equ	0xFEE
 12624                           plusw0	equ	0xFEB
 12625                           fsr0h	equ	0xFEA
 12626                           fsr0l	equ	0xFE9
 12627                           wreg	equ	0xFE8
 12628                           indf1	equ	0xFE7
 12629                           postinc1	equ	0xFE6
 12630                           postdec1	equ	0xFE5
 12631                           fsr1h	equ	0xFE2
 12632                           fsr1l	equ	0xFE1
 12633                           indf2	equ	0xFDF
 12634                           postinc2	equ	0xFDE
 12635                           postdec2	equ	0xFDD
 12636                           plusw2	equ	0xFDB
 12637                           fsr2h	equ	0xFDA
 12638                           fsr2l	equ	0xFD9
 12639                           status	equ	0xFD8
 12640                           
 12641 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12642 ;; Defined at:
 12643 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;		None
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;		None
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1    wreg      void 
 12650 ;; Registers used:
 12651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12661 ;;Total ram usage:        0 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; Hardware stack levels required when called:   11
 12664 ;; This function calls:
 12665 ;;		Nothing
 12666 ;; This function is called by:
 12667 ;;		_USBDeviceTasks
 12668 ;;		_USBCtrlEPServiceComplete
 12669 ;;		_USBCtrlTrfRxService
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           	psect	text51
 12674  003C82                     __ptext51:
 12675                           	opt stack 0
 12676  003C82                     _USBCtrlEPAllowStatusStage:
 12677                           	opt stack 12
 12678                           
 12679                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12680                           
 12681                           ;incstack = 0
 12682  003C82  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12683  003C84  A4D8               	btfss	status,2,c
 12684  003C86  0012               	return	
 12685                           
 12686                           ;usb_device.c: 1442: {
 12687                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12688  003C88  0E01               	movlw	1
 12689  003C8A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12690                           
 12691                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12692  003C8C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12693  003C8E  A4D8               	btfss	status,2,c
 12694  003C90  0012               	return	
 12695                           
 12696                           ;usb_device.c: 1445: {
 12697                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12698  003C92  0E01               	movlw	1
 12699  003C94  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12700                           
 12701                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12702  003C96  0E02               	movlw	2
 12703  003C98  0100               	movlb	0	; () banked
 12704  003C9A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12705  003C9C  A4D8               	btfss	status,2,c
 12706  003C9E  D015               	goto	l1667
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 1451: {
 12710                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12711  003CA0  EE20 F001          	lfsr	2,1
 12712  003CA4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12713  003CA6  26D9               	addwf	fsr2l,f,c
 12714  003CA8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12715  003CAA  22DA               	addwfc	fsr2h,f,c
 12716  003CAC  0E00               	movlw	0
 12717  003CAE  6EDF               	movwf	indf2,c
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12721  003CB0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12722  003CB4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12723  003CB8  0E48               	movlw	72
 12724  003CBA  6EDF               	movwf	indf2,c
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12728  003CBC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12729  003CC0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12730  003CC4  0E00               	movlw	0
 12731  003CC6  8EDB               	bsf	plusw2,7,c
 12732                           
 12733                           ;usb_device.c: 1455: }
 12734  003CC8  0012               	return	
 12735  003CCA                     l1667:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12739                           
 12740                           ; BSR set to: 0
 12741  003CCA  05CC               	decf	_controlTransferState& (0+255),w,b
 12742  003CCC  A4D8               	btfss	status,2,c
 12743  003CCE  0012               	return	
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;usb_device.c: 1457: {
 12747                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12748  003CD0  0E00               	movlw	0
 12749  003CD2  0101               	movlb	1	; () banked
 12750  003CD4  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12751                           
 12752                           ; BSR set to: 1
 12753                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12754  003CD6  0100               	movlb	0	; () banked
 12755  003CD8  EE20 F001          	lfsr	2,1
 12756  003CDC  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12757  003CDE  26D9               	addwf	fsr2l,f,c
 12758  003CE0  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12759  003CE2  22DA               	addwfc	fsr2h,f,c
 12760  003CE4  0E08               	movlw	8
 12761  003CE6  6EDF               	movwf	indf2,c
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12765  003CE8  EE20 F002          	lfsr	2,2
 12766  003CEC  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12767  003CEE  26D9               	addwf	fsr2l,f,c
 12768  003CF0  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12769  003CF2  22DA               	addwfc	fsr2h,f,c
 12770  003CF4  0E30               	movlw	48
 12771  003CF6  6EDE               	movwf	postinc2,c
 12772  003CF8  0E04               	movlw	4
 12773  003CFA  6EDD               	movwf	postdec2,c
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12777  003CFC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12778  003D00  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12779  003D04  0E04               	movlw	4
 12780  003D06  6EDF               	movwf	indf2,c
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12784  003D08  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12785  003D0C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12786  003D10  0E00               	movlw	0
 12787  003D12  8EDB               	bsf	plusw2,7,c
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12791  003D14  0E01               	movlw	1
 12792  003D16  0101               	movlb	1	; () banked
 12793  003D18  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12794                           
 12795                           ; BSR set to: 1
 12796                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12797  003D1A  0100               	movlb	0	; () banked
 12798  003D1C  EE20 F001          	lfsr	2,1
 12799  003D20  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12800  003D22  26D9               	addwf	fsr2l,f,c
 12801  003D24  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12802  003D26  22DA               	addwfc	fsr2h,f,c
 12803  003D28  0E08               	movlw	8
 12804  003D2A  6EDF               	movwf	indf2,c
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12808  003D2C  EE20 F002          	lfsr	2,2
 12809  003D30  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12810  003D32  26D9               	addwf	fsr2l,f,c
 12811  003D34  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12812  003D36  22DA               	addwfc	fsr2h,f,c
 12813  003D38  0E30               	movlw	48
 12814  003D3A  6EDE               	movwf	postinc2,c
 12815  003D3C  0E04               	movlw	4
 12816  003D3E  6EDD               	movwf	postdec2,c
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12820  003D40  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12821  003D44  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12822  003D48  0E80               	movlw	128
 12823  003D4A  6EDF               	movwf	indf2,c
 12824                           
 12825                           ; BSR set to: 0
 12826                           
 12827                           ; BSR set to: 0
 12828                           
 12829                           ; BSR set to: 0
 12830  003D4C  0012               	return	
 12831  003D4E                     __end_of_USBCtrlEPAllowStatusStage:
 12832                           	opt stack 0
 12833                           tosu	equ	0xFFF
 12834                           tosh	equ	0xFFE
 12835                           tosl	equ	0xFFD
 12836                           pclath	equ	0xFFA
 12837                           tblptru	equ	0xFF8
 12838                           tblptrh	equ	0xFF7
 12839                           tblptrl	equ	0xFF6
 12840                           tablat	equ	0xFF5
 12841                           prodh	equ	0xFF4
 12842                           prodl	equ	0xFF3
 12843                           intcon	equ	0xFF2
 12844                           intcon2	equ	0xFF1
 12845                           intcon3	equ	0xFF0
 12846                           indf0	equ	0xFEF
 12847                           postinc0	equ	0xFEE
 12848                           plusw0	equ	0xFEB
 12849                           fsr0h	equ	0xFEA
 12850                           fsr0l	equ	0xFE9
 12851                           wreg	equ	0xFE8
 12852                           indf1	equ	0xFE7
 12853                           postinc1	equ	0xFE6
 12854                           postdec1	equ	0xFE5
 12855                           fsr1h	equ	0xFE2
 12856                           fsr1l	equ	0xFE1
 12857                           indf2	equ	0xFDF
 12858                           postinc2	equ	0xFDE
 12859                           postdec2	equ	0xFDD
 12860                           plusw2	equ	0xFDB
 12861                           fsr2h	equ	0xFDA
 12862                           fsr2l	equ	0xFD9
 12863                           status	equ	0xFD8
 12864                           
 12865 ;; *************** function _USBCtrlTrfInHandler *****************
 12866 ;; Defined at:
 12867 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;		None
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      void 
 12874 ;; Registers used:
 12875 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12884 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;Total ram usage:        1 bytes
 12886 ;; Hardware stack levels used:    1
 12887 ;; Hardware stack levels required when called:   12
 12888 ;; This function calls:
 12889 ;;		_USBCtrlTrfTxService
 12890 ;; This function is called by:
 12891 ;;		_USBCtrlEPService
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           	psect	text52
 12896  004134                     __ptext52:
 12897                           	opt stack 0
 12898  004134                     _USBCtrlTrfInHandler:
 12899                           	opt stack 13
 12900                           
 12901                           ;usb_device.c: 2611: uint8_t lastDTS;
 12902                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12903                           
 12904                           ;incstack = 0
 12905  004134  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12906  004138  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12907  00413C  0100               	movlb	0	; () banked
 12908  00413E  0E00               	movlw	0
 12909  004140  BCDF               	btfsc	indf2,6,c
 12910  004142  0E01               	movlw	1
 12911  004144  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12915  004146  0E04               	movlw	4
 12916  004148  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12920  00414A  0E08               	movlw	8
 12921  00414C  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12922  00414E  A4D8               	btfss	status,2,c
 12923  004150  D00D               	goto	l1794
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;usb_device.c: 2622: {
 12927                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12928  004152  0104               	movlb	4	; () banked
 12929  004154  5132               	movf	50,w,b	;volatile
 12930  004156  0B7F               	andlw	127
 12931  004158  010F               	movlb	15	; () banked
 12932  00415A  6F38               	movwf	56,b	;volatile
 12933                           
 12934                           ; BSR set to: 15
 12935                           ;usb_device.c: 2624: if(UADDR != 0u)
 12936  00415C  5138               	movf	56,w,b	;volatile
 12937  00415E  B4D8               	btfsc	status,2,c
 12938  004160  D002               	goto	l1793
 12939                           
 12940                           ; BSR set to: 15
 12941                           ;usb_device.c: 2625: {
 12942                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12943  004162  0E10               	movlw	16
 12944  004164  D001               	goto	L11
 12945  004166                     l1793:
 12946                           
 12947                           ;usb_device.c: 2628: else
 12948                           ;usb_device.c: 2629: {
 12949                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12950                           
 12951                           ; BSR set to: 0
 12952  004166  0E04               	movlw	4
 12953  004168                     L11:
 12954  004168  0100               	movlb	0	; () banked
 12955  00416A  6FCE               	movwf	_USBDeviceState& (0+255),b
 12956  00416C                     l1794:
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;usb_device.c: 2631: }
 12960                           ;usb_device.c: 2632: }
 12961                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12962                           
 12963                           ; BSR set to: 0
 12964                           
 12965                           ; BSR set to: 0
 12966  00416C  05CC               	decf	_controlTransferState& (0+255),w,b
 12967  00416E  A4D8               	btfss	status,2,c
 12968  004170  D03B               	goto	l1795
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;usb_device.c: 2636: {
 12972                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12973  004172  EE20 F002          	lfsr	2,2
 12974  004176  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12975  004178  26D9               	addwf	fsr2l,f,c
 12976  00417A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12977  00417C  22DA               	addwfc	fsr2h,f,c
 12978  00417E  0E38               	movlw	56
 12979  004180  6EDE               	movwf	postinc2,c
 12980  004182  0E04               	movlw	4
 12981  004184  6EDD               	movwf	postdec2,c
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12985  004186  EC61  F01B         	call	_USBCtrlTrfTxService	;wreg free
 12986                           
 12987                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12988  00418A  0E02               	movlw	2
 12989  00418C  0100               	movlb	0	; () banked
 12990  00418E  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12991  004190  A4D8               	btfss	status,2,c
 12992  004192  D00D               	goto	l1796
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;usb_device.c: 2645: {
 12996                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12997  004194  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12998  004198  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12999  00419C  0E04               	movlw	4
 13000  00419E  6EDF               	movwf	indf2,c
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13004  0041A0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13005  0041A4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13006  0041A8  0E00               	movlw	0
 13007  0041AA  8EDB               	bsf	plusw2,7,c
 13008                           
 13009                           ;usb_device.c: 2650: }
 13010  0041AC  0012               	return	
 13011  0041AE                     l1796:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 2651: else
 13015                           ;usb_device.c: 2652: {
 13016                           ;usb_device.c: 2653: if(lastDTS == 0)
 13017                           
 13018                           ; BSR set to: 0
 13019  0041AE  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13020  0041B0  A4D8               	btfss	status,2,c
 13021  0041B2  D00D               	goto	l1798
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;usb_device.c: 2654: {
 13025                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13026  0041B4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13027  0041B8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13028  0041BC  0E48               	movlw	72
 13029  0041BE  6EDF               	movwf	indf2,c
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13033  0041C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13034  0041C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13035  0041C8  0E00               	movlw	0
 13036  0041CA  8EDB               	bsf	plusw2,7,c
 13037                           
 13038                           ;usb_device.c: 2657: }
 13039  0041CC  0012               	return	
 13040  0041CE                     l1798:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;usb_device.c: 2658: else
 13044                           ;usb_device.c: 2659: {
 13045                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13046                           
 13047                           ; BSR set to: 0
 13048  0041CE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13049  0041D2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13050  0041D6  0E08               	movlw	8
 13051  0041D8  6EDF               	movwf	indf2,c
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13055  0041DA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13056  0041DE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13057  0041E2  0E00               	movlw	0
 13058  0041E4  8EDB               	bsf	plusw2,7,c
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;usb_device.c: 2662: }
 13062                           ;usb_device.c: 2663: }
 13063                           ;usb_device.c: 2664: }
 13064                           
 13065                           ; BSR set to: 0
 13066  0041E6  0012               	return	
 13067  0041E8                     l1795:
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;usb_device.c: 2665: else
 13071                           ;usb_device.c: 2666: {
 13072                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13073  0041E8  0101               	movlb	1	; () banked
 13074  0041EA  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13075                           
 13076                           ; BSR set to: 1
 13077                           ;usb_device.c: 2675: }
 13078                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13079                           
 13080                           ; BSR set to: 1
 13081  0041EC  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13082                           
 13083                           ; BSR set to: 1
 13084                           ;usb_device.c: 2677: }
 13085                           ;usb_device.c: 2679: controlTransferState = 0;
 13086                           
 13087                           ; BSR set to: 1
 13088  0041EE  0E00               	movlw	0
 13089  0041F0  0100               	movlb	0	; () banked
 13090  0041F2  6FCC               	movwf	_controlTransferState& (0+255),b
 13091  0041F4  0012               	return	
 13092  0041F6                     __end_of_USBCtrlTrfInHandler:
 13093                           	opt stack 0
 13094                           tosu	equ	0xFFF
 13095                           tosh	equ	0xFFE
 13096                           tosl	equ	0xFFD
 13097                           pclath	equ	0xFFA
 13098                           tblptru	equ	0xFF8
 13099                           tblptrh	equ	0xFF7
 13100                           tblptrl	equ	0xFF6
 13101                           tablat	equ	0xFF5
 13102                           prodh	equ	0xFF4
 13103                           prodl	equ	0xFF3
 13104                           intcon	equ	0xFF2
 13105                           intcon2	equ	0xFF1
 13106                           intcon3	equ	0xFF0
 13107                           indf0	equ	0xFEF
 13108                           postinc0	equ	0xFEE
 13109                           plusw0	equ	0xFEB
 13110                           fsr0h	equ	0xFEA
 13111                           fsr0l	equ	0xFE9
 13112                           wreg	equ	0xFE8
 13113                           indf1	equ	0xFE7
 13114                           postinc1	equ	0xFE6
 13115                           postdec1	equ	0xFE5
 13116                           fsr1h	equ	0xFE2
 13117                           fsr1l	equ	0xFE1
 13118                           indf2	equ	0xFDF
 13119                           postinc2	equ	0xFDE
 13120                           postdec2	equ	0xFDD
 13121                           plusw2	equ	0xFDB
 13122                           fsr2h	equ	0xFDA
 13123                           fsr2l	equ	0xFD9
 13124                           status	equ	0xFD8
 13125                           
 13126 ;; *************** function _USBCtrlTrfTxService *****************
 13127 ;; Defined at:
 13128 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;Total ram usage:        1 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:   11
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_USBCtrlEPAllowDataStage
 13153 ;;		_USBCtrlTrfInHandler
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text53
 13158  0036C2                     __ptext53:
 13159                           	opt stack 0
 13160  0036C2                     _USBCtrlTrfTxService:
 13161                           	opt stack 11
 13162                           
 13163                           ;usb_device.c: 1791: uint8_t byteToSend;
 13164                           ;usb_device.c: 1795: byteToSend = 8;
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;incstack = 0
 13168  0036C2  0E08               	movlw	8
 13169  0036C4  0100               	movlb	0	; () banked
 13170  0036C6  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13174  0036C8  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13175  0036CA  E110               	bnz	l13013
 13176  0036CC  0E08               	movlw	8
 13177  0036CE  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13178  0036D0  B0D8               	btfsc	status,0,c
 13179  0036D2  D00C               	goto	l1700
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;usb_device.c: 1797: {
 13183                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13184  0036D4  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13188  0036D8  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13189  0036DA  A4D8               	btfss	status,2,c
 13190  0036DC  D002               	goto	l1698
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;usb_device.c: 1806: {
 13194                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13195  0036DE  0E01               	movlw	1
 13196  0036E0  D004               	goto	L12
 13197  0036E2                     l1698:
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13201                           
 13202                           ; BSR set to: 0
 13203  0036E2  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13204  0036E4  A4D8               	btfss	status,2,c
 13205  0036E6  D002               	goto	l1700
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;usb_device.c: 1810: {
 13209                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13210  0036E8  0E02               	movlw	2
 13211  0036EA                     L12:
 13212  0036EA  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13213  0036EC                     l1700:
 13214  0036EC                     l13013:
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;usb_device.c: 1812: }
 13218                           ;usb_device.c: 1813: }
 13219                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13220  0036EC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13221  0036EE  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13222  0036F0  0E00               	movlw	0
 13223  0036F2  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13227  0036F4  EE20 F001          	lfsr	2,1
 13228  0036F8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13229  0036FA  26D9               	addwf	fsr2l,f,c
 13230  0036FC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13231  0036FE  22DA               	addwfc	fsr2h,f,c
 13232  003700  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13236  003704  0E38               	movlw	56
 13237  003706  0102               	movlb	2	; () banked
 13238  003708  6FD4               	movwf	_pDst& (0+255),b
 13239  00370A  0E04               	movlw	4
 13240  00370C  6FD5               	movwf	(_pDst+1)& (0+255),b
 13241                           
 13242                           ; BSR set to: 2
 13243                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13244  00370E  0100               	movlb	0	; () banked
 13245  003710  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13246  003712  D01E               	goto	l1702
 13247  003714  D03E               	goto	l1706
 13248  003716                     
 13249                           ; BSR set to: 0
 13250                           ;usb_device.c: 1830: {
 13251                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13252                           
 13253                           ; BSR set to: 0
 13254  003716  C0B0  FFF6         	movff	_inPipes,tblptrl
 13255  00371A  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13256  00371E  6AF8               	clrf	tblptru,c
 13257  003720  C2D4  FFD9         	movff	_pDst,fsr2l
 13258  003724  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13259  003728  0E0E               	movlw	(high __ramtop+-1)
 13260  00372A  64F7               	cpfsgt	tblptrh,c
 13261  00372C  D003               	bra	u11637
 13262  00372E  0008               	tblrd		*
 13263  003730  50F5               	movf	tablat,w,c
 13264  003732  D005               	bra	u11630
 13265  003734                     u11637:
 13266  003734  CFF6 FFE9          	movff	tblptrl,fsr0l
 13267  003738  CFF7 FFEA          	movff	tblptrh,fsr0h
 13268  00373C  50EF               	movf	indf0,w,c
 13269  00373E                     u11630:
 13270  00373E  6EDF               	movwf	indf2,c
 13271  003740  0100               	movlb	0	; () banked
 13272  003742  4BB0               	infsnz	_inPipes& (0+255),f,b
 13273  003744  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13274                           
 13275                           ; BSR set to: 0
 13276  003746  0102               	movlb	2	; () banked
 13277  003748  4BD4               	infsnz	_pDst& (0+255),f,b
 13278  00374A  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13279                           
 13280                           ; BSR set to: 2
 13281                           ;usb_device.c: 1832: byteToSend--;
 13282  00374C  0100               	movlb	0	; () banked
 13283  00374E  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13284  003750                     l1702:
 13285                           
 13286                           ; BSR set to: 0
 13287                           
 13288                           ; BSR set to: 0
 13289  003750  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13290  003752  B4D8               	btfsc	status,2,c
 13291  003754  0012               	return	
 13292  003756  D7DF               	goto	l1703
 13293  003758                     
 13294                           ; BSR set to: 0
 13295                           ;usb_device.c: 1838: {
 13296                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13297                           
 13298                           ; BSR set to: 0
 13299  003758  C0B0  FFF6         	movff	_inPipes,tblptrl
 13300  00375C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13301  003760  6AF8               	clrf	tblptru,c
 13302  003762  C2D4  FFD9         	movff	_pDst,fsr2l
 13303  003766  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13304  00376A  0E0E               	movlw	(high __ramtop+-1)
 13305  00376C  64F7               	cpfsgt	tblptrh,c
 13306  00376E  D003               	bra	u11657
 13307  003770  0008               	tblrd		*
 13308  003772  50F5               	movf	tablat,w,c
 13309  003774  D005               	bra	u11650
 13310  003776                     u11657:
 13311  003776  CFF6 FFE9          	movff	tblptrl,fsr0l
 13312  00377A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13313  00377E  50EF               	movf	indf0,w,c
 13314  003780                     u11650:
 13315  003780  6EDF               	movwf	indf2,c
 13316  003782  0100               	movlb	0	; () banked
 13317  003784  4BB0               	infsnz	_inPipes& (0+255),f,b
 13318  003786  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13319                           
 13320                           ; BSR set to: 0
 13321  003788  0102               	movlb	2	; () banked
 13322  00378A  4BD4               	infsnz	_pDst& (0+255),f,b
 13323  00378C  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13324                           
 13325                           ; BSR set to: 2
 13326                           ;usb_device.c: 1840: byteToSend--;
 13327  00378E  0100               	movlb	0	; () banked
 13328  003790  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13329  003792                     l1706:
 13330                           
 13331                           ; BSR set to: 0
 13332                           
 13333                           ; BSR set to: 0
 13334  003792  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13335  003794  B4D8               	btfsc	status,2,c
 13336  003796  0012               	return	
 13337  003798  D7DF               	goto	l1707
 13338  00379A                     __end_of_USBCtrlTrfTxService:
 13339                           	opt stack 0
 13340                           tosu	equ	0xFFF
 13341                           tosh	equ	0xFFE
 13342                           tosl	equ	0xFFD
 13343                           pclath	equ	0xFFA
 13344                           tblptru	equ	0xFF8
 13345                           tblptrh	equ	0xFF7
 13346                           tblptrl	equ	0xFF6
 13347                           tablat	equ	0xFF5
 13348                           prodh	equ	0xFF4
 13349                           prodl	equ	0xFF3
 13350                           intcon	equ	0xFF2
 13351                           intcon2	equ	0xFF1
 13352                           intcon3	equ	0xFF0
 13353                           indf0	equ	0xFEF
 13354                           postinc0	equ	0xFEE
 13355                           plusw0	equ	0xFEB
 13356                           fsr0h	equ	0xFEA
 13357                           fsr0l	equ	0xFE9
 13358                           wreg	equ	0xFE8
 13359                           indf1	equ	0xFE7
 13360                           postinc1	equ	0xFE6
 13361                           postdec1	equ	0xFE5
 13362                           fsr1h	equ	0xFE2
 13363                           fsr1l	equ	0xFE1
 13364                           indf2	equ	0xFDF
 13365                           postinc2	equ	0xFDE
 13366                           postdec2	equ	0xFDD
 13367                           plusw2	equ	0xFDB
 13368                           fsr2h	equ	0xFDA
 13369                           fsr2l	equ	0xFD9
 13370                           status	equ	0xFD8
 13371                           
 13372 ;; *************** function _CDCTxService *****************
 13373 ;; Defined at:
 13374 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;		None
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13379 ;;  i               1   36[BANK0 ] unsigned char 
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  1    wreg      void 
 13382 ;; Registers used:
 13383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13393 ;;Total ram usage:        2 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; Hardware stack levels required when called:   12
 13396 ;; This function calls:
 13397 ;;		_USBTransferOnePacket
 13398 ;; This function is called by:
 13399 ;;		_UsbDevice_MainTask
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403                           	psect	text54
 13404  002824                     __ptext54:
 13405                           	opt stack 0
 13406  002824                     _CDCTxService:
 13407                           	opt stack 15
 13408                           
 13409                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13410                           ;usb_device_cdc.c: 842: uint8_t i;
 13411                           ;usb_device_cdc.c: 844: ;
 13412                           ;usb_device_cdc.c: 846: {};
 13413                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;incstack = 0
 13417  002824  0101               	movlb	1	; () banked
 13418  002826  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13419  002828  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13420  00282A  B4D8               	btfsc	status,2,c
 13421  00282C  D006               	goto	l1952
 13422                           
 13423                           ; BSR set to: 1
 13424  00282E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13425  002832  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13426  002836  BEDF               	btfsc	indf2,7,c
 13427  002838  0012               	return	
 13428  00283A                     l1952:
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;usb_device_cdc.c: 852: }
 13432                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13433                           
 13434                           ; BSR set to: 1
 13435  00283A  0E03               	movlw	3
 13436  00283C  0100               	movlb	0	; () banked
 13437  00283E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13438  002840  A4D8               	btfss	status,2,c
 13439  002842  D002               	goto	l1954
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13443  002844  0E00               	movlw	0
 13444  002846  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13445  002848                     l1954:
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13449  002848  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13450  00284A  B4D8               	btfsc	status,2,c
 13451  00284C  0012               	return	
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;usb_device_cdc.c: 869: }
 13455                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13456                           
 13457                           ; BSR set to: 0
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;usb_device_cdc.c: 866: {
 13461                           ;usb_device_cdc.c: 867: ;
 13462                           ;usb_device_cdc.c: 868: return;
 13463  00284E  0E02               	movlw	2
 13464  002850  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13465  002852  A4D8               	btfss	status,2,c
 13466  002854  D013               	goto	l1956
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;usb_device_cdc.c: 875: {
 13470                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13471  002856  0E01               	movlw	1
 13472  002858  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13473  00285A  0E00               	movlw	0
 13474  00285C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13475  00285E  0E00               	movlw	0
 13476  002860  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13477  002862  0E00               	movlw	0
 13478  002864  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13479  002866  0E02               	movlw	2
 13480  002868  ECFB  F020         	call	_USBTransferOnePacket
 13481  00286C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13482  002870  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13483                           
 13484                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13485  002874  0E03               	movlw	3
 13486  002876  0100               	movlb	0	; () banked
 13487  002878  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13488                           
 13489                           ;usb_device_cdc.c: 879: }
 13490  00287A  0012               	return	
 13491  00287C                     l1956:
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13495                           
 13496                           ; BSR set to: 0
 13497  00287C  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13498  00287E  A4D8               	btfss	status,2,c
 13499  002880  0012               	return	
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;usb_device_cdc.c: 881: {
 13503                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13504  002882  0E40               	movlw	64
 13505  002884  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13506  002886  D003               	goto	l1959
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13510  002888  0E40               	movlw	64
 13511  00288A  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13512  00288C  D002               	goto	l1960
 13513  00288E                     l1959:
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;usb_device_cdc.c: 887: else
 13517                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13518  00288E  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13519  002892                     l1960:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13523                           
 13524                           ; BSR set to: 0
 13525  002892  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13526  002894  0800               	sublw	0
 13527  002896  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13528  002898  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13529                           
 13530                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13531  00289A  0EB6               	movlw	low _cdc_data_tx
 13532  00289C  0102               	movlb	2	; () banked
 13533  00289E  6FC8               	movwf	_pCDCDst& (0+255),b
 13534  0028A0  0E07               	movlw	high _cdc_data_tx
 13535  0028A2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13536                           
 13537                           ; BSR set to: 2
 13538                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13539  0028A4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13540                           
 13541                           ; BSR set to: 2
 13542                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13543  0028A8  0101               	movlb	1	; () banked
 13544  0028AA  51DD               	movf	_cdc_mem_type& (0+255),w,b
 13545  0028AC  B4D8               	btfsc	status,2,c
 13546  0028AE  D01D               	goto	l1962
 13547  0028B0  D03D               	goto	l1966
 13548  0028B2                     
 13549                           ;usb_device_cdc.c: 901: {
 13550                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13551                           
 13552                           ; BSR set to: 1
 13553  0028B2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13554  0028B6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13555  0028BA  6AF8               	clrf	tblptru,c
 13556  0028BC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13557  0028C0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13558  0028C4  0E0E               	movlw	(high __ramtop+-1)
 13559  0028C6  64F7               	cpfsgt	tblptrh,c
 13560  0028C8  D003               	bra	u15787
 13561  0028CA  0008               	tblrd		*
 13562  0028CC  50F5               	movf	tablat,w,c
 13563  0028CE  D005               	bra	u15780
 13564  0028D0                     u15787:
 13565  0028D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13566  0028D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13567  0028D8  50EF               	movf	indf0,w,c
 13568  0028DA                     u15780:
 13569  0028DA  6EDF               	movwf	indf2,c
 13570                           
 13571                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13572  0028DC  0102               	movlb	2	; () banked
 13573  0028DE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13574  0028E0  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13575                           
 13576                           ; BSR set to: 2
 13577                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13578  0028E2  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13579  0028E4  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13580                           
 13581                           ; BSR set to: 2
 13582                           ;usb_device_cdc.c: 905: i--;
 13583  0028E6  0100               	movlb	0	; () banked
 13584  0028E8  0784               	decf	CDCTxService@i& (0+255),f,b
 13585  0028EA                     l1962:
 13586                           
 13587                           ; BSR set to: 0
 13588  0028EA  0100               	movlb	0	; () banked
 13589  0028EC  5184               	movf	CDCTxService@i& (0+255),w,b
 13590  0028EE  B4D8               	btfsc	status,2,c
 13591  0028F0  D021               	goto	u15810
 13592  0028F2  D7DF               	goto	l1963
 13593  0028F4                     
 13594                           ; BSR set to: 0
 13595                           ;usb_device_cdc.c: 911: {
 13596                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13597                           
 13598                           ; BSR set to: 0
 13599  0028F4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13600  0028F8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13601  0028FC  6AF8               	clrf	tblptru,c
 13602  0028FE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13603  002902  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13604  002906  0E0E               	movlw	(high __ramtop+-1)
 13605  002908  64F7               	cpfsgt	tblptrh,c
 13606  00290A  D003               	bra	u15807
 13607  00290C  0008               	tblrd		*
 13608  00290E  50F5               	movf	tablat,w,c
 13609  002910  D005               	bra	u15800
 13610  002912                     u15807:
 13611  002912  CFF6 FFE9          	movff	tblptrl,fsr0l
 13612  002916  CFF7 FFEA          	movff	tblptrh,fsr0h
 13613  00291A  50EF               	movf	indf0,w,c
 13614  00291C                     u15800:
 13615  00291C  6EDF               	movwf	indf2,c
 13616                           
 13617                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13618  00291E  0102               	movlb	2	; () banked
 13619  002920  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13620  002922  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13621                           
 13622                           ; BSR set to: 2
 13623                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13624  002924  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13625  002926  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13626                           
 13627                           ; BSR set to: 2
 13628                           ;usb_device_cdc.c: 915: i--;
 13629  002928  0100               	movlb	0	; () banked
 13630  00292A  0784               	decf	CDCTxService@i& (0+255),f,b
 13631  00292C                     l1966:
 13632                           
 13633                           ; BSR set to: 0
 13634  00292C  0100               	movlb	0	; () banked
 13635  00292E  5184               	movf	CDCTxService@i& (0+255),w,b
 13636  002930  A4D8               	btfss	status,2,c
 13637  002932  D7E0               	goto	l1967
 13638  002934                     u15810:
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;usb_device_cdc.c: 916: }
 13642                           ;usb_device_cdc.c: 917: }
 13643                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13644                           
 13645                           ; BSR set to: 0
 13646                           
 13647                           ; BSR set to: 0
 13648  002934  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13649  002936  A4D8               	btfss	status,2,c
 13650  002938  D008               	goto	l1971
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;usb_device_cdc.c: 924: {
 13654                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13655  00293A  0E40               	movlw	64
 13656  00293C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13657  00293E  A4D8               	btfss	status,2,c
 13658  002940  D002               	goto	l1970
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13662  002942  0E02               	movlw	2
 13663  002944  D001               	goto	L13
 13664  002946                     l1970:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;usb_device_cdc.c: 927: else
 13668                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13669                           
 13670                           ; BSR set to: 0
 13671  002946  0E03               	movlw	3
 13672  002948                     L13:
 13673  002948  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13674  00294A                     l1971:
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;usb_device_cdc.c: 929: }
 13678                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13679                           
 13680                           ; BSR set to: 0
 13681                           
 13682                           ; BSR set to: 0
 13683  00294A  0E01               	movlw	1
 13684  00294C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13685  00294E  0EB6               	movlw	low _cdc_data_tx
 13686  002950  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13687  002952  0E07               	movlw	high _cdc_data_tx
 13688  002954  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13689  002956  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13690  00295A  0E02               	movlw	2
 13691  00295C  ECFB  F020         	call	_USBTransferOnePacket
 13692  002960  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13693  002964  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13694  002968  0012               	return	
 13695  00296A                     __end_of_CDCTxService:
 13696                           	opt stack 0
 13697                           tosu	equ	0xFFF
 13698                           tosh	equ	0xFFE
 13699                           tosl	equ	0xFFD
 13700                           pclath	equ	0xFFA
 13701                           tblptru	equ	0xFF8
 13702                           tblptrh	equ	0xFF7
 13703                           tblptrl	equ	0xFF6
 13704                           tablat	equ	0xFF5
 13705                           prodh	equ	0xFF4
 13706                           prodl	equ	0xFF3
 13707                           intcon	equ	0xFF2
 13708                           intcon2	equ	0xFF1
 13709                           intcon3	equ	0xFF0
 13710                           indf0	equ	0xFEF
 13711                           postinc0	equ	0xFEE
 13712                           plusw0	equ	0xFEB
 13713                           fsr0h	equ	0xFEA
 13714                           fsr0l	equ	0xFE9
 13715                           wreg	equ	0xFE8
 13716                           indf1	equ	0xFE7
 13717                           postinc1	equ	0xFE6
 13718                           postdec1	equ	0xFE5
 13719                           fsr1h	equ	0xFE2
 13720                           fsr1l	equ	0xFE1
 13721                           indf2	equ	0xFDF
 13722                           postinc2	equ	0xFDE
 13723                           postdec2	equ	0xFDD
 13724                           plusw2	equ	0xFDB
 13725                           fsr2h	equ	0xFDA
 13726                           fsr2l	equ	0xFD9
 13727                           status	equ	0xFD8
 13728                           
 13729 ;; *************** function _Term_MainSm *****************
 13730 ;; Defined at:
 13731 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;		None
 13734 ;; Auto vars:     Size  Location     Type
 13735 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13736 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13737 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13738 ;;  FwkBuildYear    4    0        unsigned char [4]
 13739 ;;  FwkBuildMont    4    0        unsigned char [4]
 13740 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  1    wreg      void 
 13743 ;; Registers used:
 13744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13745 ;; Tracked objects:
 13746 ;;		On entry : 0/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13751 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13753 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13754 ;;Total ram usage:       12 bytes
 13755 ;; Hardware stack levels used:    1
 13756 ;; Hardware stack levels required when called:   16
 13757 ;; This function calls:
 13758 ;;		_OsTmr_GetTimerStatus
 13759 ;;		_OsTmr_StartTimer
 13760 ;;		_Terminal
 13761 ;;		_memset
 13762 ;;		_putUSBUSART
 13763 ;;		_sprintf
 13764 ;;		_strcat
 13765 ;;		_strcpy
 13766 ;;		_strlen
 13767 ;;		_utoa
 13768 ;; This function is called by:
 13769 ;;		_Term_MainTask
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           	psect	text55
 13774  0010B6                     __ptext55:
 13775                           	opt stack 0
 13776  0010B6                     _Term_MainSm:
 13777                           	opt stack 11
 13778                           
 13779                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13780                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13781                           ;term.c: 711: static UINT8 Data[50];
 13782                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13783                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13784                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13785                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13786                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13787                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13788                           ;term.c: 719: switch (TermMainSmState)
 13789                           
 13790                           ;incstack = 0
 13791  0010B6  D133               	goto	l2465
 13792  0010B8                     
 13793                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13794  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 13795  0010BA  0100               	movlb	0	; () banked
 13796  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13797  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13798  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13799  0010C2  0ED0               	movlw	208
 13800  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13801  0010C6  0E07               	movlw	7
 13802  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13803  0010CA  0E00               	movlw	0
 13804  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13805  0010CE  0E00               	movlw	0
 13806  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13807  0010D2  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 13808                           
 13809                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13810  0010D6  0E01               	movlw	1
 13811  0010D8  0102               	movlb	2	; () banked
 13812  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13813                           
 13814                           ;term.c: 726: break;
 13815  0010DC  0012               	return	
 13816  0010DE                     
 13817                           ; BSR set to: 2
 13818                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13819                           
 13820                           ; BSR set to: 2
 13821  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 13822  0010E0  0100               	movlb	0	; () banked
 13823  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13824  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13825  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13826  0010E8  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 13827  0010EC  06E8               	decf	wreg,f,c
 13828  0010EE  A4D8               	btfss	status,2,c
 13829  0010F0  0012               	return	
 13830                           
 13831                           ;term.c: 731: {
 13832                           ;term.c: 733: TermMainSmState = Term_InitState;
 13833  0010F2  0E02               	movlw	2
 13834  0010F4  0102               	movlb	2	; () banked
 13835  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13836                           
 13837                           ; BSR set to: 2
 13838                           ;term.c: 734: }
 13839                           ;term.c: 735: break;
 13840  0010F8  0012               	return	
 13841  0010FA                     
 13842                           ; BSR set to: 2
 13843                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13844                           
 13845                           ; BSR set to: 2
 13846  0010FA  0E1F               	movlw	31
 13847  0010FC  0100               	movlb	0	; () banked
 13848  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13849  001100  0012               	return	
 13850                           
 13851                           ; BSR set to: 0
 13852  001102  B265               	btfsc	3941,1,c	;volatile
 13853  001104  0012               	return	
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;term.c: 743: else
 13857                           ;term.c: 744: {
 13858                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13859                           
 13860                           ; BSR set to: 0
 13861                           
 13862                           ; BSR set to: 0
 13863                           ;term.c: 740: {
 13864                           ;term.c: 742: }
 13865  001106  0E03               	movlw	3
 13866  001108  0102               	movlb	2	; () banked
 13867  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13868                           
 13869                           ; BSR set to: 2
 13870                           ;term.c: 747: }
 13871                           ;term.c: 748: break;
 13872  00110C  0012               	return	
 13873  00110E                     
 13874                           ; BSR set to: 2
 13875                           ;term.c: 752: if((cdc_trf_state == 0))
 13876                           
 13877                           ; BSR set to: 2
 13878  00110E  0100               	movlb	0	; () banked
 13879  001110  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13880  001112  A4D8               	btfss	status,2,c
 13881  001114  0012               	return	
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;term.c: 753: {
 13885                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13886  001116  0E22               	movlw	low _Welcome
 13887  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13888  00111A  0EFD               	movlw	high _Welcome
 13889  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13890  00111E  0E88               	movlw	136
 13891  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13892  001122  ECEF  F033         	call	_putUSBUSART	;wreg free
 13893                           
 13894                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13895  001126  0E04               	movlw	4
 13896  001128  0102               	movlb	2	; () banked
 13897  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13898                           
 13899                           ; BSR set to: 2
 13900                           ;term.c: 758: }
 13901                           ;term.c: 759: break;
 13902  00112C  0012               	return	
 13903  00112E                     
 13904                           ; BSR set to: 2
 13905                           ;term.c: 763: if((cdc_trf_state == 0))
 13906                           
 13907                           ; BSR set to: 2
 13908  00112E  0100               	movlb	0	; () banked
 13909  001130  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13910  001132  A4D8               	btfss	status,2,c
 13911  001134  0012               	return	
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;term.c: 764: {
 13915                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13916  001136  0E32               	movlw	low _MsgFormat
 13917  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13918  00113A  0EFC               	movlw	high _MsgFormat
 13919  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13920  00113E  0EEF               	movlw	239
 13921  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13922  001142  ECEF  F033         	call	_putUSBUSART	;wreg free
 13923                           
 13924                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13925  001146  0E05               	movlw	5
 13926  001148  0102               	movlb	2	; () banked
 13927  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13928                           
 13929                           ; BSR set to: 2
 13930                           ;term.c: 769: }
 13931                           ;term.c: 770: break;
 13932  00114C  0012               	return	
 13933  00114E                     
 13934                           ; BSR set to: 2
 13935                           ;term.c: 774: if((cdc_trf_state == 0))
 13936                           
 13937                           ; BSR set to: 2
 13938  00114E  0100               	movlb	0	; () banked
 13939  001150  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13940  001152  A4D8               	btfss	status,2,c
 13941  001154  0012               	return	
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;term.c: 775: {
 13945                           ;term.c: 777: memset(Data,0,50);
 13946  001156  0E61               	movlw	low Term_MainSm@Data
 13947  001158  6F7D               	movwf	memset@p1& (0+255),b
 13948  00115A  0E04               	movlw	high Term_MainSm@Data
 13949  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13950  00115E  0E00               	movlw	0
 13951  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13952  001162  0E00               	movlw	0
 13953  001164  6F7F               	movwf	memset@c& (0+255),b
 13954  001166  0E00               	movlw	0
 13955  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13956  00116A  0E32               	movlw	50
 13957  00116C  6F81               	movwf	memset@n& (0+255),b
 13958  00116E  EC97  F032         	call	_memset	;wreg free
 13959                           
 13960                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13961  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13962  001174  0100               	movlb	0	; () banked
 13963  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13964  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13965  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13966  00117C  0E00               	movlw	0
 13967  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13968  001180  0E01               	movlw	1
 13969  001182  6F8C               	movwf	utoa@val& (0+255),b
 13970  001184  0E00               	movlw	0
 13971  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13972  001188  0E0A               	movlw	10
 13973  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13974  00118C  EC1C  F023         	call	_utoa	;wreg free
 13975                           
 13976                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13977  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13978  001192  0100               	movlb	0	; () banked
 13979  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13980  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13981  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13982  00119A  0E00               	movlw	0
 13983  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13984  00119E  0E02               	movlw	2
 13985  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13986  0011A2  0E00               	movlw	0
 13987  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13988  0011A6  0E0A               	movlw	10
 13989  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13990  0011AA  EC1C  F023         	call	_utoa	;wreg free
 13991                           
 13992                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13993  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13994  0011B0  0100               	movlb	0	; () banked
 13995  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13996  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13997  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13998  0011B8  0E00               	movlw	0
 13999  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14000  0011BC  0E00               	movlw	0
 14001  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14002  0011C0  0E00               	movlw	0
 14003  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14004  0011C4  0E0A               	movlw	10
 14005  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14006  0011C8  EC1C  F023         	call	_utoa	;wreg free
 14007                           
 14008                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14009  0011CC  0E61               	movlw	low Term_MainSm@Data
 14010  0011CE  0100               	movlb	0	; () banked
 14011  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14012  0011D2  0E04               	movlw	high Term_MainSm@Data
 14013  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14014  0011D6  0ED2               	movlw	low STR_23
 14015  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14016  0011DA  0EFE               	movlw	high STR_23
 14017  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14018  0011DE  EC66  F032         	call	_strcpy	;wreg free
 14019                           
 14020                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14021  0011E2  0E61               	movlw	low Term_MainSm@Data
 14022  0011E4  0100               	movlb	0	; () banked
 14023  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14024  0011E8  0E04               	movlw	high Term_MainSm@Data
 14025  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14026  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14027  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14028  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14029  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14030  0011F4  EC78  F02C         	call	_strcat	;wreg free
 14031                           
 14032                           ;term.c: 784: strcat(Data,".");
 14033  0011F8  0E61               	movlw	low Term_MainSm@Data
 14034  0011FA  0100               	movlb	0	; () banked
 14035  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14036  0011FE  0E04               	movlw	high Term_MainSm@Data
 14037  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14038  001202  0EF5               	movlw	low STR_24
 14039  001204  6F7F               	movwf	strcat@from& (0+255),b
 14040  001206  0EFF               	movlw	high STR_24
 14041  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14042  00120A  EC78  F02C         	call	_strcat	;wreg free
 14043                           
 14044                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14045  00120E  0E61               	movlw	low Term_MainSm@Data
 14046  001210  0100               	movlb	0	; () banked
 14047  001212  6F7D               	movwf	strcat@to& (0+255),b
 14048  001214  0E04               	movlw	high Term_MainSm@Data
 14049  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14050  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14051  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14052  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14053  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14054  001220  EC78  F02C         	call	_strcat	;wreg free
 14055                           
 14056                           ;term.c: 786: strcat(Data,".");
 14057  001224  0E61               	movlw	low Term_MainSm@Data
 14058  001226  0100               	movlb	0	; () banked
 14059  001228  6F7D               	movwf	strcat@to& (0+255),b
 14060  00122A  0E04               	movlw	high Term_MainSm@Data
 14061  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14062  00122E  0EF5               	movlw	low STR_24
 14063  001230  6F7F               	movwf	strcat@from& (0+255),b
 14064  001232  0EFF               	movlw	high STR_24
 14065  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14066  001236  EC78  F02C         	call	_strcat	;wreg free
 14067                           
 14068                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14069  00123A  0E61               	movlw	low Term_MainSm@Data
 14070  00123C  0100               	movlb	0	; () banked
 14071  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14072  001240  0E04               	movlw	high Term_MainSm@Data
 14073  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14074  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14075  001246  6F7F               	movwf	strcat@from& (0+255),b
 14076  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14077  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14078  00124C  EC78  F02C         	call	_strcat	;wreg free
 14079                           
 14080                           ;term.c: 788: strcat(Data,"\r\n");
 14081  001250  0E61               	movlw	low Term_MainSm@Data
 14082  001252  0100               	movlb	0	; () banked
 14083  001254  6F7D               	movwf	strcat@to& (0+255),b
 14084  001256  0E04               	movlw	high Term_MainSm@Data
 14085  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14086  00125A  0E86               	movlw	low (STR_21+39)
 14087  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14088  00125E  0EFE               	movlw	high (STR_21+39)
 14089  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14090  001262  EC78  F02C         	call	_strcat	;wreg free
 14091                           
 14092                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14093  001266  0E61               	movlw	low Term_MainSm@Data
 14094  001268  0100               	movlb	0	; () banked
 14095  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14096  00126C  0E04               	movlw	high Term_MainSm@Data
 14097  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14098  001270  0E61               	movlw	low Term_MainSm@Data
 14099  001272  6F7D               	movwf	strlen@s& (0+255),b
 14100  001274  0E04               	movlw	high Term_MainSm@Data
 14101  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14102  001278  EC0F  F031         	call	_strlen	;wreg free
 14103  00127C  0100               	movlb	0	; () banked
 14104  00127E  517D               	movf	?_strlen& (0+255),w,b
 14105  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14106  001282  ECEF  F033         	call	_putUSBUSART	;wreg free
 14107                           
 14108                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14109  001286  0E06               	movlw	6
 14110  001288  0102               	movlb	2	; () banked
 14111  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14112                           
 14113                           ; BSR set to: 2
 14114                           ;term.c: 793: }
 14115                           ;term.c: 794: break;
 14116  00128C  0012               	return	
 14117  00128E                     
 14118                           ; BSR set to: 2
 14119                           ;term.c: 798: if((cdc_trf_state == 0))
 14120                           
 14121                           ; BSR set to: 2
 14122  00128E  0100               	movlb	0	; () banked
 14123  001290  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14124  001292  A4D8               	btfss	status,2,c
 14125  001294  0012               	return	
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;term.c: 799: {
 14129                           ;term.c: 801: memset(Data,0,50);
 14130  001296  0E61               	movlw	low Term_MainSm@Data
 14131  001298  6F7D               	movwf	memset@p1& (0+255),b
 14132  00129A  0E04               	movlw	high Term_MainSm@Data
 14133  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14134  00129E  0E00               	movlw	0
 14135  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14136  0012A2  0E00               	movlw	0
 14137  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14138  0012A6  0E00               	movlw	0
 14139  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14140  0012AA  0E32               	movlw	50
 14141  0012AC  6F81               	movwf	memset@n& (0+255),b
 14142  0012AE  EC97  F032         	call	_memset	;wreg free
 14143                           
 14144                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14145  0012B2  0E61               	movlw	low Term_MainSm@Data
 14146  0012B4  0100               	movlb	0	; () banked
 14147  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14148  0012B8  0E04               	movlw	high Term_MainSm@Data
 14149  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14150  0012BC  0E0D               	movlw	low STR_27
 14151  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14152  0012C0  0EFF               	movlw	high STR_27
 14153  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14154  0012C4  0EB6               	movlw	low STR_28
 14155  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14156  0012C8  0EFF               	movlw	high STR_28
 14157  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14158  0012CC  EC74  F01D         	call	_sprintf	;wreg free
 14159                           
 14160                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14161  0012D0  0E61               	movlw	low Term_MainSm@Data
 14162  0012D2  0100               	movlb	0	; () banked
 14163  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14164  0012D6  0E04               	movlw	high Term_MainSm@Data
 14165  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14166  0012DA  0E61               	movlw	low Term_MainSm@Data
 14167  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14168  0012DE  0E04               	movlw	high Term_MainSm@Data
 14169  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14170  0012E2  EC0F  F031         	call	_strlen	;wreg free
 14171  0012E6  0100               	movlb	0	; () banked
 14172  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14173  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14174  0012EC  ECEF  F033         	call	_putUSBUSART	;wreg free
 14175                           
 14176                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14177  0012F0  0E07               	movlw	7
 14178  0012F2  0102               	movlb	2	; () banked
 14179  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14180                           
 14181                           ; BSR set to: 2
 14182                           ;term.c: 808: }
 14183                           ;term.c: 809: break;
 14184  0012F6  0012               	return	
 14185  0012F8                     
 14186                           ; BSR set to: 2
 14187                           ;term.c: 813: if((cdc_trf_state == 0))
 14188                           
 14189                           ; BSR set to: 2
 14190  0012F8  0100               	movlb	0	; () banked
 14191  0012FA  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14192  0012FC  A4D8               	btfss	status,2,c
 14193  0012FE  0012               	return	
 14194                           
 14195                           ; BSR set to: 0
 14196                           ;term.c: 814: {
 14197                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14198  001300  0E32               	movlw	low _MsgReady
 14199  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14200  001304  0EFE               	movlw	high _MsgReady
 14201  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14202  001308  0E16               	movlw	22
 14203  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14204  00130C  ECEF  F033         	call	_putUSBUSART	;wreg free
 14205                           
 14206                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14207  001310  0E08               	movlw	8
 14208  001312  0102               	movlb	2	; () banked
 14209  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14210                           
 14211                           ; BSR set to: 2
 14212                           ;term.c: 819: }
 14213                           ;term.c: 820: break;
 14214  001316  0012               	return	
 14215  001318                     
 14216                           ; BSR set to: 2
 14217                           ;term.c: 824: Terminal();
 14218                           
 14219                           ; BSR set to: 2
 14220  001318  EC68  F000         	call	_Terminal	;wreg free
 14221                           
 14222                           ;term.c: 829: }
 14223                           
 14224                           ;term.c: 828: break;
 14225                           
 14226                           ;term.c: 827: default:
 14227                           
 14228                           ;term.c: 825: break;
 14229  00131C  0012               	return	
 14230  00131E                     l2465:
 14231  00131E  0102               	movlb	2	; () banked
 14232  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14233                           
 14234                           ; Switch size 1, requested type "space"
 14235                           ; Number of cases is 9, Range of values is 0 to 8
 14236                           ; switch strategies available:
 14237                           ; Name         Instructions Cycles
 14238                           ; simple_byte           28    15 (average)
 14239                           ;	Chosen strategy is simple_byte
 14240  001322  0A00               	xorlw	0	; case 0
 14241  001324  B4D8               	btfsc	status,2,c
 14242  001326  D6C8               	goto	l2466
 14243  001328  0A01               	xorlw	1	; case 1
 14244  00132A  B4D8               	btfsc	status,2,c
 14245  00132C  D6D8               	goto	l2468
 14246  00132E  0A03               	xorlw	3	; case 2
 14247  001330  B4D8               	btfsc	status,2,c
 14248  001332  D6E3               	goto	l2470
 14249  001334  0A01               	xorlw	1	; case 3
 14250  001336  B4D8               	btfsc	status,2,c
 14251  001338  D6EA               	goto	l2475
 14252  00133A  0A07               	xorlw	7	; case 4
 14253  00133C  B4D8               	btfsc	status,2,c
 14254  00133E  D6F7               	goto	l2477
 14255  001340  0A01               	xorlw	1	; case 5
 14256  001342  B4D8               	btfsc	status,2,c
 14257  001344  D704               	goto	l2479
 14258  001346  0A03               	xorlw	3	; case 6
 14259  001348  B4D8               	btfsc	status,2,c
 14260  00134A  D7A1               	goto	l2481
 14261  00134C  0A01               	xorlw	1	; case 7
 14262  00134E  B4D8               	btfsc	status,2,c
 14263  001350  D7D3               	goto	l2483
 14264  001352  0A0F               	xorlw	15	; case 8
 14265  001354  A4D8               	btfss	status,2,c
 14266  001356  0012               	return	
 14267  001358  D7DF               	goto	l2485
 14268  00135A                     __end_of_Term_MainSm:
 14269                           	opt stack 0
 14270                           tosu	equ	0xFFF
 14271                           tosh	equ	0xFFE
 14272                           tosl	equ	0xFFD
 14273                           pclath	equ	0xFFA
 14274                           tblptru	equ	0xFF8
 14275                           tblptrh	equ	0xFF7
 14276                           tblptrl	equ	0xFF6
 14277                           tablat	equ	0xFF5
 14278                           prodh	equ	0xFF4
 14279                           prodl	equ	0xFF3
 14280                           intcon	equ	0xFF2
 14281                           intcon2	equ	0xFF1
 14282                           intcon3	equ	0xFF0
 14283                           indf0	equ	0xFEF
 14284                           postinc0	equ	0xFEE
 14285                           plusw0	equ	0xFEB
 14286                           fsr0h	equ	0xFEA
 14287                           fsr0l	equ	0xFE9
 14288                           wreg	equ	0xFE8
 14289                           indf1	equ	0xFE7
 14290                           postinc1	equ	0xFE6
 14291                           postdec1	equ	0xFE5
 14292                           fsr1h	equ	0xFE2
 14293                           fsr1l	equ	0xFE1
 14294                           indf2	equ	0xFDF
 14295                           postinc2	equ	0xFDE
 14296                           postdec2	equ	0xFDD
 14297                           plusw2	equ	0xFDB
 14298                           fsr2h	equ	0xFDA
 14299                           fsr2l	equ	0xFD9
 14300                           status	equ	0xFD8
 14301                           
 14302 ;; *************** function _strlen *****************
 14303 ;; Defined at:
 14304 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14307 ;;		 -> Term_MainSm@Data(50), 
 14308 ;; Auto vars:     Size  Location     Type
 14309 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14310 ;;		 -> Term_MainSm@Data(50), 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  2   29[BANK0 ] unsigned int 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14323 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14324 ;;Total ram usage:        6 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:   11
 14327 ;; This function calls:
 14328 ;;		Nothing
 14329 ;; This function is called by:
 14330 ;;		_Term_MainSm
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           	psect	text56
 14335  00621E                     __ptext56:
 14336                           	opt stack 0
 14337  00621E                     _strlen:
 14338                           	opt stack 15
 14339                           
 14340                           ;incstack = 0
 14341  00621E  C07D  F081         	movff	strlen@s,strlen@cp
 14342  006222  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14343  006226  D003               	goto	l3527
 14344  006228  0100               	movlb	0	; () banked
 14345  00622A  4B81               	infsnz	strlen@cp& (0+255),f,b
 14346  00622C  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14347  00622E                     l3527:
 14348                           
 14349                           ; BSR set to: 0
 14350  00622E  C081  FFD9         	movff	strlen@cp,fsr2l
 14351  006232  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14352  006236  50DF               	movf	indf2,w,c
 14353  006238  A4D8               	btfss	status,2,c
 14354  00623A  D7F6               	goto	l3528
 14355  00623C  C07D  F07F         	movff	strlen@s,??_strlen
 14356  006240  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14357  006244  0100               	movlb	0	; () banked
 14358  006246  1F7F               	comf	??_strlen& (0+255),f,b
 14359  006248  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14360  00624A  4B7F               	infsnz	??_strlen& (0+255),f,b
 14361  00624C  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14362  00624E  5181               	movf	strlen@cp& (0+255),w,b
 14363  006250  257F               	addwf	??_strlen& (0+255),w,b
 14364  006252  6F7D               	movwf	?_strlen& (0+255),b
 14365  006254  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14366  006256  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14367  006258  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14368  00625A  0012               	return	
 14369  00625C                     __end_of_strlen:
 14370                           	opt stack 0
 14371                           tosu	equ	0xFFF
 14372                           tosh	equ	0xFFE
 14373                           tosl	equ	0xFFD
 14374                           pclath	equ	0xFFA
 14375                           tblptru	equ	0xFF8
 14376                           tblptrh	equ	0xFF7
 14377                           tblptrl	equ	0xFF6
 14378                           tablat	equ	0xFF5
 14379                           prodh	equ	0xFF4
 14380                           prodl	equ	0xFF3
 14381                           intcon	equ	0xFF2
 14382                           intcon2	equ	0xFF1
 14383                           intcon3	equ	0xFF0
 14384                           indf0	equ	0xFEF
 14385                           postinc0	equ	0xFEE
 14386                           plusw0	equ	0xFEB
 14387                           fsr0h	equ	0xFEA
 14388                           fsr0l	equ	0xFE9
 14389                           wreg	equ	0xFE8
 14390                           indf1	equ	0xFE7
 14391                           postinc1	equ	0xFE6
 14392                           postdec1	equ	0xFE5
 14393                           fsr1h	equ	0xFE2
 14394                           fsr1l	equ	0xFE1
 14395                           indf2	equ	0xFDF
 14396                           postinc2	equ	0xFDE
 14397                           postdec2	equ	0xFDD
 14398                           plusw2	equ	0xFDB
 14399                           fsr2h	equ	0xFDA
 14400                           fsr2l	equ	0xFD9
 14401                           status	equ	0xFD8
 14402                           
 14403 ;; *************** function _strcat *****************
 14404 ;; Defined at:
 14405 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14408 ;;		 -> Term_MainSm@Data(50), 
 14409 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14410 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14411 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14414 ;;		 -> Term_MainSm@Data(50), 
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  2   29[BANK0 ] PTR unsigned char 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;Total ram usage:        6 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:   11
 14431 ;; This function calls:
 14432 ;;		Nothing
 14433 ;; This function is called by:
 14434 ;;		_Term_MainSm
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text57
 14439  0058F0                     __ptext57:
 14440                           	opt stack 0
 14441  0058F0                     _strcat:
 14442                           	opt stack 15
 14443                           
 14444                           ; BSR set to: 0
 14445                           ;incstack = 0
 14446  0058F0  C07D  F081         	movff	strcat@to,strcat@cp
 14447  0058F4  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14448  0058F8  D003               	goto	l3512
 14449  0058FA  0100               	movlb	0	; () banked
 14450  0058FC  4B81               	infsnz	strcat@cp& (0+255),f,b
 14451  0058FE  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14452  005900                     l3512:
 14453                           
 14454                           ; BSR set to: 0
 14455  005900  C081  FFD9         	movff	strcat@cp,fsr2l
 14456  005904  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14457  005908  50DF               	movf	indf2,w,c
 14458  00590A  B4D8               	btfsc	status,2,c
 14459  00590C  D006               	goto	l3515
 14460  00590E  D7F5               	goto	l3513
 14461  005910  0100               	movlb	0	; () banked
 14462  005912  4B81               	infsnz	strcat@cp& (0+255),f,b
 14463  005914  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14464  005916  4B7F               	infsnz	strcat@from& (0+255),f,b
 14465  005918  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14466  00591A                     l3515:
 14467                           
 14468                           ; BSR set to: 0
 14469  00591A  C07F  FFF6         	movff	strcat@from,tblptrl
 14470  00591E  C080  FFF7         	movff	strcat@from+1,tblptrh
 14471  005922  6AF8               	clrf	tblptru,c
 14472  005924  C081  FFD9         	movff	strcat@cp,fsr2l
 14473  005928  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14474  00592C  0E0E               	movlw	(high __ramtop+-1)
 14475  00592E  64F7               	cpfsgt	tblptrh,c
 14476  005930  D003               	bra	u14357
 14477  005932  0008               	tblrd		*
 14478  005934  50F5               	movf	tablat,w,c
 14479  005936  D005               	bra	u14350
 14480  005938                     u14357:
 14481  005938  CFF6 FFE9          	movff	tblptrl,fsr0l
 14482  00593C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14483  005940  50EF               	movf	indf0,w,c
 14484  005942                     u14350:
 14485  005942  6EDF               	movwf	indf2,c
 14486  005944  50DF               	movf	indf2,w,c
 14487  005946  B4D8               	btfsc	status,2,c
 14488  005948  0012               	return	
 14489  00594A  D7E2               	goto	l3516
 14490  00594C                     __end_of_strcat:
 14491                           	opt stack 0
 14492                           tosu	equ	0xFFF
 14493                           tosh	equ	0xFFE
 14494                           tosl	equ	0xFFD
 14495                           pclath	equ	0xFFA
 14496                           tblptru	equ	0xFF8
 14497                           tblptrh	equ	0xFF7
 14498                           tblptrl	equ	0xFF6
 14499                           tablat	equ	0xFF5
 14500                           prodh	equ	0xFF4
 14501                           prodl	equ	0xFF3
 14502                           intcon	equ	0xFF2
 14503                           intcon2	equ	0xFF1
 14504                           intcon3	equ	0xFF0
 14505                           indf0	equ	0xFEF
 14506                           postinc0	equ	0xFEE
 14507                           plusw0	equ	0xFEB
 14508                           fsr0h	equ	0xFEA
 14509                           fsr0l	equ	0xFE9
 14510                           wreg	equ	0xFE8
 14511                           indf1	equ	0xFE7
 14512                           postinc1	equ	0xFE6
 14513                           postdec1	equ	0xFE5
 14514                           fsr1h	equ	0xFE2
 14515                           fsr1l	equ	0xFE1
 14516                           indf2	equ	0xFDF
 14517                           postinc2	equ	0xFDE
 14518                           postdec2	equ	0xFDD
 14519                           plusw2	equ	0xFDB
 14520                           fsr2h	equ	0xFDA
 14521                           fsr2l	equ	0xFD9
 14522                           status	equ	0xFD8
 14523                           
 14524 ;; *************** function _sprintf *****************
 14525 ;; Defined at:
 14526 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14529 ;;		 -> Term_MainSm@Data(50), 
 14530 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14531 ;;		 -> STR_27(17), 
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;  tmpval          4    0        struct .
 14534 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14535 ;;		 -> STR_32(7), STR_28(12), 
 14536 ;;  ap              2   36[BANK0 ] PTR void [1]
 14537 ;;		 -> ?_sprintf(2), 
 14538 ;;  len             2    0        unsigned int 
 14539 ;;  val             2    0        unsigned int 
 14540 ;;  c               1   38[BANK0 ] char 
 14541 ;;  flag            1   35[BANK0 ] unsigned char 
 14542 ;;  prec            1    0        char 
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  2   29[BANK0 ] int 
 14545 ;; Registers used:
 14546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14552 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14556 ;;Total ram usage:       12 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:   11
 14559 ;; This function calls:
 14560 ;;		Nothing
 14561 ;; This function is called by:
 14562 ;;		_Term_MainSm
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           	psect	text58
 14567  003AE8                     __ptext58:
 14568                           	opt stack 0
 14569  003AE8                     _sprintf:
 14570                           	opt stack 15
 14571                           
 14572                           ;doprnt.c: 494: va_list ap;
 14573                           ;doprnt.c: 499: signed char c;
 14574                           ;doprnt.c: 506: signed char prec;
 14575                           ;doprnt.c: 508: unsigned char flag;
 14576                           ;doprnt.c: 523: union {
 14577                           ;doprnt.c: 524: unsigned long vd;
 14578                           ;doprnt.c: 525: double integ;
 14579                           ;doprnt.c: 526: } tmpval;
 14580                           ;doprnt.c: 528: unsigned int val;
 14581                           ;doprnt.c: 529: unsigned len;
 14582                           ;doprnt.c: 530: const char * cp;
 14583                           ;doprnt.c: 533: *ap = __va_start();
 14584                           
 14585                           ;incstack = 0
 14586  003AE8  0E81               	movlw	low (?_sprintf+4)
 14587  003AEA  0100               	movlb	0	; () banked
 14588  003AEC  6F84               	movwf	sprintf@ap& (0+255),b
 14589  003AEE  0E00               	movlw	high (?_sprintf+4)
 14590  003AF0  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14591                           
 14592                           ;doprnt.c: 536: while(c = *f++) {
 14593  003AF2  D04E               	goto	l2916
 14594  003AF4                     
 14595                           ; BSR set to: 0
 14596                           ;doprnt.c: 538: if(c != '%')
 14597                           
 14598                           ; BSR set to: 0
 14599  003AF4  0E25               	movlw	37
 14600  003AF6  1986               	xorwf	sprintf@c& (0+255),w,b
 14601  003AF8  B4D8               	btfsc	status,2,c
 14602  003AFA  D009               	goto	l2906
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;doprnt.c: 540: {
 14606                           ;doprnt.c: 541: ((*sp++ = (c)));
 14607  003AFC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14608  003B00  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14609  003B04  C086  FFDF         	movff	sprintf@c,indf2
 14610                           
 14611                           ; BSR set to: 0
 14612  003B08  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14613  003B0A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14614                           
 14615                           ;doprnt.c: 542: continue;
 14616  003B0C  D041               	goto	l2916
 14617  003B0E                     l2906:
 14618                           
 14619                           ; BSR set to: 0
 14620                           ;doprnt.c: 543: }
 14621                           ;doprnt.c: 548: flag = 0;
 14622                           
 14623                           ; BSR set to: 0
 14624  003B0E  0E00               	movlw	0
 14625  003B10  6F83               	movwf	sprintf@flag& (0+255),b
 14626                           
 14627                           ;doprnt.c: 635: switch(c = *f++) {
 14628  003B12  D02E               	goto	l2907
 14629  003B14                     
 14630                           ; BSR set to: 0
 14631                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14632                           
 14633                           ; BSR set to: 0
 14634  003B14  C084  FFD9         	movff	sprintf@ap,fsr2l
 14635  003B18  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14636  003B1C  CFDE F087          	movff	postinc2,sprintf@cp
 14637  003B20  CFDD F088          	movff	postdec2,sprintf@cp+1
 14638                           
 14639                           ; BSR set to: 0
 14640  003B24  0E02               	movlw	2
 14641  003B26  2784               	addwf	sprintf@ap& (0+255),f,b
 14642  003B28  0E00               	movlw	0
 14643  003B2A  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;doprnt.c: 740: if(!cp)
 14647  003B2C  5187               	movf	sprintf@cp& (0+255),w,b
 14648  003B2E  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14649  003B30  A4D8               	btfss	status,2,c
 14650  003B32  D014               	goto	l2912
 14651                           
 14652                           ; BSR set to: 0
 14653                           ;doprnt.c: 741: cp = "(null)";
 14654  003B34  0ED8               	movlw	low STR_32
 14655  003B36  6F87               	movwf	sprintf@cp& (0+255),b
 14656  003B38  0EFF               	movlw	high STR_32
 14657  003B3A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;doprnt.c: 777: while(*cp)
 14661  003B3C  D00F               	goto	l2912
 14662  003B3E                     
 14663                           ; BSR set to: 0
 14664                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14665                           
 14666                           ; BSR set to: 0
 14667  003B3E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14668  003B42  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14669  003B46                     	if	0	;tblptru may be non-zero
 14670  003B46                     	endif
 14671  003B46                     	if	0	;tblptru may be non-zero
 14672  003B46                     	endif
 14673  003B46  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14674  003B4A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14675  003B4E  0008               	tblrd		*
 14676  003B50  CFF5 FFDF          	movff	tablat,indf2
 14677                           
 14678                           ; BSR set to: 0
 14679  003B54  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14680  003B56  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14681                           
 14682                           ; BSR set to: 0
 14683  003B58  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14684  003B5A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14685  003B5C                     l2912:
 14686                           
 14687                           ; BSR set to: 0
 14688                           
 14689                           ; BSR set to: 0
 14690  003B5C  C087  FFF6         	movff	sprintf@cp,tblptrl
 14691  003B60  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14692  003B64                     	if	0	;tblptru may be non-zero
 14693  003B64                     	endif
 14694  003B64                     	if	0	;tblptru may be non-zero
 14695  003B64                     	endif
 14696  003B64  0008               	tblrd		*
 14697  003B66  50F5               	movf	tablat,w,c
 14698  003B68  0900               	iorlw	0
 14699  003B6A  B4D8               	btfsc	status,2,c
 14700  003B6C  D011               	goto	l2916
 14701  003B6E  D7E7               	goto	l2913
 14702  003B70                     l2907:
 14703                           
 14704                           ; BSR set to: 0
 14705                           
 14706                           ; BSR set to: 0
 14707  003B70  C07F  FFF6         	movff	sprintf@f,tblptrl
 14708  003B74  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14709  003B78  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14710  003B7A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14711  003B7C                     	if	0	;tblptru may be non-zero
 14712  003B7C                     	endif
 14713  003B7C                     	if	0	;tblptru may be non-zero
 14714  003B7C                     	endif
 14715  003B7C  0008               	tblrd		*
 14716  003B7E  CFF5 F086          	movff	tablat,sprintf@c
 14717  003B82  5186               	movf	sprintf@c& (0+255),w,b
 14718                           
 14719                           ; Switch size 1, requested type "space"
 14720                           ; Number of cases is 2, Range of values is 0 to 115
 14721                           ; switch strategies available:
 14722                           ; Name         Instructions Cycles
 14723                           ; simple_byte            7     4 (average)
 14724                           ;	Chosen strategy is simple_byte
 14725  003B84  0A00               	xorlw	0	; case 0
 14726  003B86  B4D8               	btfsc	status,2,c
 14727  003B88  D00F               	goto	u14410
 14728  003B8A  0A73               	xorlw	115	; case 115
 14729  003B8C  B4D8               	btfsc	status,2,c
 14730  003B8E  D7C2               	goto	l2910
 14731  003B90                     l2916:
 14732                           
 14733                           ; BSR set to: 0
 14734                           
 14735                           ; BSR set to: 0
 14736                           
 14737                           ;doprnt.c: 1422: {
 14738                           
 14739                           ; BSR set to: 0
 14740  003B90  C07F  FFF6         	movff	sprintf@f,tblptrl
 14741  003B94  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14742  003B98  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14743  003B9A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14744  003B9C                     	if	0	;tblptru may be non-zero
 14745  003B9C                     	endif
 14746  003B9C                     	if	0	;tblptru may be non-zero
 14747  003B9C                     	endif
 14748  003B9C  0008               	tblrd		*
 14749  003B9E  CFF5 F086          	movff	tablat,sprintf@c
 14750  003BA2  5186               	movf	sprintf@c& (0+255),w,b
 14751  003BA4  A4D8               	btfss	status,2,c
 14752  003BA6  D7A6               	goto	l2905
 14753  003BA8                     u14410:
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;doprnt.c: 1538: *sp = 0;
 14757                           
 14758                           ; BSR set to: 0
 14759                           
 14760                           ;doprnt.c: 1469: }
 14761                           ;doprnt.c: 1533: }
 14762                           ;doprnt.c: 1535: alldone:
 14763                           
 14764                           ; BSR set to: 0
 14765  003BA8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14766  003BAC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14767  003BB0  0E00               	movlw	0
 14768  003BB2  6EDF               	movwf	indf2,c
 14769  003BB4  0012               	return	
 14770  003BB6                     __end_of_sprintf:
 14771                           	opt stack 0
 14772                           tosu	equ	0xFFF
 14773                           tosh	equ	0xFFE
 14774                           tosl	equ	0xFFD
 14775                           pclath	equ	0xFFA
 14776                           tblptru	equ	0xFF8
 14777                           tblptrh	equ	0xFF7
 14778                           tblptrl	equ	0xFF6
 14779                           tablat	equ	0xFF5
 14780                           prodh	equ	0xFF4
 14781                           prodl	equ	0xFF3
 14782                           intcon	equ	0xFF2
 14783                           intcon2	equ	0xFF1
 14784                           intcon3	equ	0xFF0
 14785                           indf0	equ	0xFEF
 14786                           postinc0	equ	0xFEE
 14787                           plusw0	equ	0xFEB
 14788                           fsr0h	equ	0xFEA
 14789                           fsr0l	equ	0xFE9
 14790                           wreg	equ	0xFE8
 14791                           indf1	equ	0xFE7
 14792                           postinc1	equ	0xFE6
 14793                           postdec1	equ	0xFE5
 14794                           fsr1h	equ	0xFE2
 14795                           fsr1l	equ	0xFE1
 14796                           indf2	equ	0xFDF
 14797                           postinc2	equ	0xFDE
 14798                           postdec2	equ	0xFDD
 14799                           plusw2	equ	0xFDB
 14800                           fsr2h	equ	0xFDA
 14801                           fsr2l	equ	0xFD9
 14802                           status	equ	0xFD8
 14803                           
 14804 ;; *************** function _memset *****************
 14805 ;; Defined at:
 14806 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  p1              2   29[BANK0 ] PTR void 
 14809 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14810 ;;  c               2   31[BANK0 ] int 
 14811 ;;  n               2   33[BANK0 ] unsigned int 
 14812 ;; Auto vars:     Size  Location     Type
 14813 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14814 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  2   29[BANK0 ] PTR void 
 14817 ;; Registers used:
 14818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14824 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;Total ram usage:        8 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; Hardware stack levels required when called:   11
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_USBDeviceInit
 14835 ;;		_USBStdSetCfgHandler
 14836 ;;		_Term_MainSm
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text59
 14841  00652E                     __ptext59:
 14842                           	opt stack 0
 14843  00652E                     _memset:
 14844                           	opt stack 14
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;incstack = 0
 14848  00652E  C07D  F083         	movff	memset@p1,memset@p
 14849  006532  C07E  F084         	movff	memset@p1+1,memset@p+1
 14850  006536  D009               	goto	l3386
 14851  006538                     l12975:
 14852  006538  C083  FFD9         	movff	memset@p,fsr2l
 14853  00653C  C084  FFDA         	movff	memset@p+1,fsr2h
 14854  006540  C07F  FFDF         	movff	memset@c,indf2
 14855  006544  0100               	movlb	0	; () banked
 14856  006546  4B83               	infsnz	memset@p& (0+255),f,b
 14857  006548  2B84               	incf	(memset@p+1)& (0+255),f,b
 14858  00654A                     l3386:
 14859                           
 14860                           ; BSR set to: 0
 14861  00654A  0100               	movlb	0	; () banked
 14862  00654C  0781               	decf	memset@n& (0+255),f,b
 14863  00654E  A0D8               	btfss	status,0,c
 14864  006550  0782               	decf	(memset@n+1)& (0+255),f,b
 14865  006552  2981               	incf	memset@n& (0+255),w,b
 14866  006554  E1F1               	bnz	l12975
 14867  006556  2982               	incf	(memset@n+1)& (0+255),w,b
 14868  006558  B4D8               	btfsc	status,2,c
 14869  00655A  0012               	return	
 14870  00655C  D7ED               	goto	l3387
 14871  00655E                     __end_of_memset:
 14872                           	opt stack 0
 14873                           tosu	equ	0xFFF
 14874                           tosh	equ	0xFFE
 14875                           tosl	equ	0xFFD
 14876                           pclath	equ	0xFFA
 14877                           tblptru	equ	0xFF8
 14878                           tblptrh	equ	0xFF7
 14879                           tblptrl	equ	0xFF6
 14880                           tablat	equ	0xFF5
 14881                           prodh	equ	0xFF4
 14882                           prodl	equ	0xFF3
 14883                           intcon	equ	0xFF2
 14884                           intcon2	equ	0xFF1
 14885                           intcon3	equ	0xFF0
 14886                           indf0	equ	0xFEF
 14887                           postinc0	equ	0xFEE
 14888                           plusw0	equ	0xFEB
 14889                           fsr0h	equ	0xFEA
 14890                           fsr0l	equ	0xFE9
 14891                           wreg	equ	0xFE8
 14892                           indf1	equ	0xFE7
 14893                           postinc1	equ	0xFE6
 14894                           postdec1	equ	0xFE5
 14895                           fsr1h	equ	0xFE2
 14896                           fsr1l	equ	0xFE1
 14897                           indf2	equ	0xFDF
 14898                           postinc2	equ	0xFDE
 14899                           postdec2	equ	0xFDD
 14900                           plusw2	equ	0xFDB
 14901                           fsr2h	equ	0xFDA
 14902                           fsr2l	equ	0xFD9
 14903                           status	equ	0xFD8
 14904                           
 14905 ;; *************** function _Terminal *****************
 14906 ;; Defined at:
 14907 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;		None
 14910 ;; Auto vars:     Size  Location     Type
 14911 ;;  i               1   68[BANK0 ] unsigned char 
 14912 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14913 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14914 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14915 ;;  Index           1   70[BANK0 ] unsigned char 
 14916 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  1    wreg      void 
 14919 ;; Registers used:
 14920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14930 ;;Total ram usage:      455 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:   15
 14933 ;; This function calls:
 14934 ;;		_I2cSlv_I2cReadMsgSts
 14935 ;;		_I2cSlv_ReceiveI2cMsg
 14936 ;;		_I2cSlv_SendI2cMsg
 14937 ;;		_OsTmr_Wait
 14938 ;;		_atoi
 14939 ;;		_getsUSBUSART
 14940 ;;		_itoa
 14941 ;;		_putUSBUSART
 14942 ;;		_strcpy
 14943 ;;		_strtol
 14944 ;;		_xtoi
 14945 ;; This function is called by:
 14946 ;;		_Term_MainSm
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text60
 14951  0000D0                     __ptext60:
 14952                           	opt stack 0
 14953  0000D0                     _Terminal:
 14954                           	opt stack 11
 14955                           
 14956                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14957                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14958                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14959                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14960                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14961                           ;term.c: 435: UINT8 Index;
 14962                           ;term.c: 436: static UINT8 Len[4];
 14963                           ;term.c: 437: static UINT8 PackageLen;
 14964                           ;term.c: 438: static UINT8 Addr[4];
 14965                           ;term.c: 439: static UINT8 SlaveAddr;
 14966                           ;term.c: 440: static PayloadType Payload[20u];
 14967                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;incstack = 0
 14971  0000D0  0E00               	movlw	0
 14972  0000D2  0100               	movlb	0	; () banked
 14973  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14977                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14978                           ;term.c: 445: static SwTimerType SwTimer;
 14979                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14980  0000D6  0E1F               	movlw	31
 14981  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14982  0000DA  0012               	return	
 14983                           
 14984                           ; BSR set to: 0
 14985  0000DC  B265               	btfsc	3941,1,c	;volatile
 14986  0000DE  0012               	return	
 14987  0000E0  D278               	goto	l2405
 14988  0000E2                     
 14989                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14990                           
 14991                           ; BSR set to: 0
 14992  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14993  0000E4  0100               	movlb	0	; () banked
 14994  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14995  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14996  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14997  0000EC  0EC8               	movlw	200
 14998  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14999  0000F0  EC42  F026         	call	_getsUSBUSART	;wreg free
 15000  0000F4  0100               	movlb	0	; () banked
 15001  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;term.c: 458: if (ReceivedBytes > 0)
 15005  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15006  0000FA  B4D8               	btfsc	status,2,c
 15007  0000FC  0012               	return	
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;term.c: 459: {
 15011                           ;term.c: 461: if (EchoOption == 1u)
 15012  0000FE  0102               	movlb	2	; () banked
 15013  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15014  000102  A4D8               	btfss	status,2,c
 15015  000104  D026               	goto	l2409
 15016                           
 15017                           ; BSR set to: 2
 15018                           ;term.c: 462: {
 15019                           ;term.c: 464: if((cdc_trf_state == 0))
 15020  000106  0100               	movlb	0	; () banked
 15021  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15022  00010A  A4D8               	btfss	status,2,c
 15023  00010C  D022               	goto	l2409
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;term.c: 465: {
 15027                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15028  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15029  000110  0D01               	mullw	1
 15030  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15031  000114  24F3               	addwf	prodl,w,c
 15032  000116  6ED9               	movwf	fsr2l,c
 15033  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15034  00011A  20F4               	addwfc	prodh,w,c
 15035  00011C  6EDA               	movwf	fsr2h,c
 15036  00011E  0E0D               	movlw	13
 15037  000120  6EDF               	movwf	indf2,c
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15041  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15042  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15043  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15044  000128  0E01               	movlw	1
 15045  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15046  00012C  0E00               	movlw	0
 15047  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15048  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15049  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15050  000134  6ED9               	movwf	fsr2l,c
 15051  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15052  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15053  00013A  6EDA               	movwf	fsr2h,c
 15054  00013C  0E0A               	movlw	10
 15055  00013E  6EDF               	movwf	indf2,c
 15056                           
 15057                           ; BSR set to: 0
 15058                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15059  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15060  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15061  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15062  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15063  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15064  00014A  0F02               	addlw	2
 15065  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15066  00014E  ECEF  F033         	call	_putUSBUSART	;wreg free
 15067  000152                     l2409:
 15068                           
 15069                           ;term.c: 469: }
 15070                           ;term.c: 470: }
 15071                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15072                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15073                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15074  000152  0E53               	movlw	83
 15075  000154  010A               	movlb	10	; () banked
 15076  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15077  000158  A4D8               	btfss	status,2,c
 15078  00015A  D043               	goto	l2410
 15079                           
 15080                           ; BSR set to: 10
 15081  00015C  0E4F               	movlw	79
 15082  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15083  000160  A4D8               	btfss	status,2,c
 15084  000162  D03F               	goto	l2410
 15085                           
 15086                           ; BSR set to: 10
 15087  000164  0E3A               	movlw	58
 15088  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15089  000168  A4D8               	btfss	status,2,c
 15090  00016A  D03B               	goto	l2410
 15091                           
 15092                           ; BSR set to: 10
 15093                           ;term.c: 476: {
 15094                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15095  00016C  0E47               	movlw	71
 15096  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15097  000170  A4D8               	btfss	status,2,c
 15098  000172  0012               	return	
 15099                           
 15100                           ; BSR set to: 10
 15101  000174  0E3A               	movlw	58
 15102  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15103  000178  A4D8               	btfss	status,2,c
 15104  00017A  0012               	return	
 15105                           
 15106                           ; BSR set to: 10
 15107                           ;term.c: 479: {
 15108                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15109  00017C  0E44               	movlw	68
 15110  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15111  000180  A4D8               	btfss	status,2,c
 15112  000182  D015               	goto	l2412
 15113                           
 15114                           ; BSR set to: 10
 15115  000184  0E46               	movlw	70
 15116  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15117  000188  A4D8               	btfss	status,2,c
 15118  00018A  D011               	goto	l2412
 15119                           
 15120                           ; BSR set to: 10
 15121                           ;term.c: 482: {
 15122                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15123  00018C  0E41               	movlw	65
 15124  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15125  000190  A4D8               	btfss	status,2,c
 15126  000192  D004               	goto	l2413
 15127                           
 15128                           ; BSR set to: 10
 15129                           ;term.c: 484: {
 15130                           ;term.c: 485: FormatOption = 1u;
 15131  000194  0E01               	movlw	1
 15132  000196  0102               	movlb	2	; () banked
 15133  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15134                           
 15135                           ;term.c: 486: }
 15136  00019A  0012               	return	
 15137  00019C                     l2413:
 15138                           
 15139                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15140                           
 15141                           ; BSR set to: 2
 15142  00019C  0E42               	movlw	66
 15143  00019E  010A               	movlb	10	; () banked
 15144  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15145  0001A2  A4D8               	btfss	status,2,c
 15146  0001A4  0012               	return	
 15147                           
 15148                           ; BSR set to: 10
 15149                           ;term.c: 488: {
 15150                           ;term.c: 489: FormatOption = 0u;
 15151  0001A6  0E00               	movlw	0
 15152  0001A8  0102               	movlb	2	; () banked
 15153  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15154                           
 15155                           ; BSR set to: 2
 15156                           ;term.c: 490: }
 15157                           ;term.c: 491: }
 15158                           
 15159                           ; BSR set to: 2
 15160  0001AC  0012               	return	
 15161  0001AE                     l2412:
 15162                           
 15163                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15164                           
 15165                           ; BSR set to: 2
 15166  0001AE  0E45               	movlw	69
 15167  0001B0  010A               	movlb	10	; () banked
 15168  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15169  0001B4  A4D8               	btfss	status,2,c
 15170  0001B6  0012               	return	
 15171                           
 15172                           ; BSR set to: 10
 15173  0001B8  0E4D               	movlw	77
 15174  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15175  0001BC  A4D8               	btfss	status,2,c
 15176  0001BE  0012               	return	
 15177                           
 15178                           ; BSR set to: 10
 15179                           ;term.c: 494: {
 15180                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15181  0001C0  0E31               	movlw	49
 15182  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15183  0001C4  A4D8               	btfss	status,2,c
 15184  0001C6  D004               	goto	l2418
 15185                           
 15186                           ; BSR set to: 10
 15187                           ;term.c: 496: {
 15188                           ;term.c: 497: EchoOption = 1u;
 15189  0001C8  0E01               	movlw	1
 15190  0001CA  0102               	movlb	2	; () banked
 15191  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15192                           
 15193                           ;term.c: 498: }
 15194  0001CE  0012               	return	
 15195  0001D0                     l2418:
 15196                           
 15197                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15198                           
 15199                           ; BSR set to: 2
 15200  0001D0  0E30               	movlw	48
 15201  0001D2  010A               	movlb	10	; () banked
 15202  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15203  0001D6  A4D8               	btfss	status,2,c
 15204  0001D8  0012               	return	
 15205                           
 15206                           ; BSR set to: 10
 15207                           ;term.c: 500: {
 15208                           ;term.c: 501: EchoOption = 0u;
 15209  0001DA  0E00               	movlw	0
 15210  0001DC  0102               	movlb	2	; () banked
 15211  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15212                           
 15213                           ; BSR set to: 2
 15214                           ;term.c: 507: }
 15215                           ;term.c: 508: }
 15216                           ;term.c: 509: }
 15217                           
 15218                           ; BSR set to: 2
 15219                           
 15220                           ; BSR set to: 2
 15221                           
 15222                           ;term.c: 504: else
 15223                           ;term.c: 505: {
 15224                           
 15225                           ; BSR set to: 2
 15226                           
 15227                           ; BSR set to: 2
 15228                           ;term.c: 502: }
 15229                           ;term.c: 503: }
 15230                           
 15231                           ; BSR set to: 2
 15232  0001E0  0012               	return	
 15233  0001E2                     l2410:
 15234                           
 15235                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15236                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15237                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15238                           
 15239                           ; BSR set to: 2
 15240  0001E2  0E53               	movlw	83
 15241  0001E4  010A               	movlb	10	; () banked
 15242  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15243  0001E8  A4D8               	btfss	status,2,c
 15244  0001EA  D0D3               	goto	l2423
 15245                           
 15246                           ; BSR set to: 10
 15247  0001EC  0E42               	movlw	66
 15248  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15249  0001F0  A4D8               	btfss	status,2,c
 15250  0001F2  D0CF               	goto	l2423
 15251                           
 15252                           ; BSR set to: 10
 15253  0001F4  0E3A               	movlw	58
 15254  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15255  0001F8  A4D8               	btfss	status,2,c
 15256  0001FA  D0CB               	goto	l2423
 15257                           
 15258                           ; BSR set to: 10
 15259                           ;term.c: 513: {
 15260                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15261  0001FC  0E57               	movlw	87
 15262  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15263  000200  A4D8               	btfss	status,2,c
 15264  000202  D091               	goto	l2424
 15265                           
 15266                           ; BSR set to: 10
 15267  000204  0E3A               	movlw	58
 15268  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15269  000208  A4D8               	btfss	status,2,c
 15270  00020A  D08D               	goto	l2424
 15271                           
 15272                           ; BSR set to: 10
 15273                           ;term.c: 515: {
 15274                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15275  00020C  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15276                           
 15277                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15278  000210  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15279                           
 15280                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15281  000214  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15282                           
 15283                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15284  000218  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15285                           
 15286                           ; BSR set to: 10
 15287                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15288  00021C  0EB4               	movlw	low Terminal@Len
 15289  00021E  0100               	movlb	0	; () banked
 15290  000220  6F83               	movwf	atoi@s& (0+255),b
 15291  000222  0E03               	movlw	high Terminal@Len
 15292  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15293  000226  ECCD  F01B         	call	_atoi	;wreg free
 15294  00022A  0100               	movlb	0	; () banked
 15295  00022C  5183               	movf	?_atoi& (0+255),w,b
 15296  00022E  0102               	movlb	2	; () banked
 15297  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15298                           
 15299                           ; BSR set to: 2
 15300                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15301  000232  0EB0               	movlw	low Terminal@Addr
 15302  000234  0100               	movlb	0	; () banked
 15303  000236  6F83               	movwf	xtoi@s& (0+255),b
 15304  000238  0E03               	movlw	high Terminal@Addr
 15305  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15306  00023C  EC7C  F01A         	call	_xtoi	;wreg free
 15307  000240  0100               	movlb	0	; () banked
 15308  000242  5183               	movf	?_xtoi& (0+255),w,b
 15309  000244  0102               	movlb	2	; () banked
 15310  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15311                           
 15312                           ; BSR set to: 2
 15313                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15314  000248  0E00               	movlw	0
 15315  00024A  0100               	movlb	0	; () banked
 15316  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15317  00024E  D032               	goto	l2425
 15318  000250                     
 15319                           ;term.c: 527: {
 15320                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15321                           
 15322                           ; BSR set to: 0
 15323  000250  0100               	movlb	0	; () banked
 15324  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15325  000254  0D02               	mullw	2
 15326  000256  0E0B               	movlw	11
 15327  000258  26F3               	addwf	prodl,f,c
 15328  00025A  0E00               	movlw	0
 15329  00025C  22F4               	addwfc	prodh,f,c
 15330  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15331  000260  24F3               	addwf	prodl,w,c
 15332  000262  6ED9               	movwf	fsr2l,c
 15333  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15334  000266  20F4               	addwfc	prodh,w,c
 15335  000268  6EDA               	movwf	fsr2h,c
 15336  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15337  00026C  0D04               	mullw	4
 15338  00026E  0E66               	movlw	low Terminal@Payload
 15339  000270  24F3               	addwf	prodl,w,c
 15340  000272  6EE1               	movwf	fsr1l,c
 15341  000274  0E07               	movlw	high Terminal@Payload
 15342  000276  20F4               	addwfc	prodh,w,c
 15343  000278  6EE2               	movwf	fsr1h,c
 15344  00027A  CFDF FFE7          	movff	indf2,indf1
 15345                           
 15346                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15347  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15348  000280  0D02               	mullw	2
 15349  000282  0E0C               	movlw	12
 15350  000284  26F3               	addwf	prodl,f,c
 15351  000286  0E00               	movlw	0
 15352  000288  22F4               	addwfc	prodh,f,c
 15353  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15354  00028C  24F3               	addwf	prodl,w,c
 15355  00028E  6ED9               	movwf	fsr2l,c
 15356  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15357  000292  20F4               	addwfc	prodh,w,c
 15358  000294  6EDA               	movwf	fsr2h,c
 15359  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15360  000298  0D04               	mullw	4
 15361  00029A  0E01               	movlw	1
 15362  00029C  26F3               	addwf	prodl,f,c
 15363  00029E  0E00               	movlw	0
 15364  0002A0  22F4               	addwfc	prodh,f,c
 15365  0002A2  0E66               	movlw	low Terminal@Payload
 15366  0002A4  24F3               	addwf	prodl,w,c
 15367  0002A6  6EE1               	movwf	fsr1l,c
 15368  0002A8  0E07               	movlw	high Terminal@Payload
 15369  0002AA  20F4               	addwfc	prodh,w,c
 15370  0002AC  6EE2               	movwf	fsr1h,c
 15371  0002AE  CFDF FFE7          	movff	indf2,indf1
 15372                           
 15373                           ; BSR set to: 0
 15374  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15375  0002B4                     l2425:
 15376                           
 15377                           ; BSR set to: 0
 15378                           
 15379                           ; BSR set to: 0
 15380  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15381  0002B6  0102               	movlb	2	; () banked
 15382  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15383  0002BA  B0D8               	btfsc	status,0,c
 15384  0002BC  D7C9               	goto	l2426
 15385                           
 15386                           ; BSR set to: 2
 15387                           ;term.c: 530: }
 15388                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15389                           
 15390                           ; BSR set to: 2
 15391  0002BE  0E00               	movlw	0
 15392  0002C0  0100               	movlb	0	; () banked
 15393  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15394  0002C4  D01F               	goto	l2428
 15395  0002C6                     
 15396                           ;term.c: 533: {
 15397                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15398                           
 15399                           ; BSR set to: 0
 15400  0002C6  0100               	movlb	0	; () banked
 15401  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15402  0002CA  0D04               	mullw	4
 15403  0002CC  0E66               	movlw	low Terminal@Payload
 15404  0002CE  24F3               	addwf	prodl,w,c
 15405  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15406  0002D2  0E07               	movlw	high Terminal@Payload
 15407  0002D4  20F4               	addwfc	prodh,w,c
 15408  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15409  0002D8  0E00               	movlw	0
 15410  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15411  0002DC  0E00               	movlw	0
 15412  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15413  0002E0  0E00               	movlw	0
 15414  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15415  0002E4  0E10               	movlw	16
 15416  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15417  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15418  0002EC  0100               	movlb	0	; () banked
 15419  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15420  0002F0  0D01               	mullw	1
 15421  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15422  0002F4  24F3               	addwf	prodl,w,c
 15423  0002F6  6ED9               	movwf	fsr2l,c
 15424  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15425  0002FA  20F4               	addwfc	prodh,w,c
 15426  0002FC  6EDA               	movwf	fsr2h,c
 15427  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15428                           
 15429                           ; BSR set to: 0
 15430  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15431  000304                     l2428:
 15432                           
 15433                           ; BSR set to: 0
 15434                           
 15435                           ; BSR set to: 0
 15436  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15437  000306  0102               	movlb	2	; () banked
 15438  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15439  00030A  B0D8               	btfsc	status,0,c
 15440  00030C  D7DC               	goto	l2429
 15441                           
 15442                           ; BSR set to: 2
 15443                           ;term.c: 539: }
 15444                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15445                           
 15446                           ; BSR set to: 2
 15447  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15448  000310  0100               	movlb	0	; () banked
 15449  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15450  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15451  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15452  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15453  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15454  000320  EC2E  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 15455                           
 15456                           ;term.c: 543: }
 15457  000324  0012               	return	
 15458  000326                     l2424:
 15459                           
 15460                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15461  000326  0E52               	movlw	82
 15462  000328  010A               	movlb	10	; () banked
 15463  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15464  00032C  A4D8               	btfss	status,2,c
 15465  00032E  0012               	return	
 15466                           
 15467                           ; BSR set to: 10
 15468  000330  0E3A               	movlw	58
 15469  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15470  000334  A4D8               	btfss	status,2,c
 15471  000336  0012               	return	
 15472                           
 15473                           ; BSR set to: 10
 15474                           ;term.c: 545: {
 15475                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15476  000338  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15477                           
 15478                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15479  00033C  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15480                           
 15481                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15482  000340  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15483                           
 15484                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15485  000344  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15486                           
 15487                           ; BSR set to: 10
 15488                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15489  000348  0EB4               	movlw	low Terminal@Len
 15490  00034A  0100               	movlb	0	; () banked
 15491  00034C  6F83               	movwf	atoi@s& (0+255),b
 15492  00034E  0E03               	movlw	high Terminal@Len
 15493  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15494  000352  ECCD  F01B         	call	_atoi	;wreg free
 15495  000356  0100               	movlb	0	; () banked
 15496  000358  5183               	movf	?_atoi& (0+255),w,b
 15497  00035A  0102               	movlb	2	; () banked
 15498  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15499                           
 15500                           ; BSR set to: 2
 15501                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15502  00035E  0EB0               	movlw	low Terminal@Addr
 15503  000360  0100               	movlb	0	; () banked
 15504  000362  6F83               	movwf	xtoi@s& (0+255),b
 15505  000364  0E03               	movlw	high Terminal@Addr
 15506  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15507  000368  EC7C  F01A         	call	_xtoi	;wreg free
 15508  00036C  0100               	movlb	0	; () banked
 15509  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15510  000370  0102               	movlb	2	; () banked
 15511  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15512                           
 15513                           ; BSR set to: 2
 15514                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15515  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15516  000376  0100               	movlb	0	; () banked
 15517  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15518  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15519  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15520  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15521  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15522  000386  ECCF  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15523                           
 15524                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15525  00038A  0E01               	movlw	1
 15526  00038C  0102               	movlb	2	; () banked
 15527  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15528                           
 15529                           ; BSR set to: 2
 15530                           ;term.c: 561: }
 15531                           ;term.c: 562: }
 15532                           
 15533                           ; BSR set to: 2
 15534  000390  0012               	return	
 15535  000392                     l2423:
 15536                           
 15537                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15538                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15539                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15540                           
 15541                           ; BSR set to: 2
 15542  000392  0E54               	movlw	84
 15543  000394  010A               	movlb	10	; () banked
 15544  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15545  000398  A4D8               	btfss	status,2,c
 15546  00039A  0012               	return	
 15547                           
 15548                           ; BSR set to: 10
 15549  00039C  0E45               	movlw	69
 15550  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15551  0003A0  A4D8               	btfss	status,2,c
 15552  0003A2  0012               	return	
 15553                           
 15554                           ; BSR set to: 10
 15555  0003A4  0E4C               	movlw	76
 15556  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15557  0003A8  A4D8               	btfss	status,2,c
 15558  0003AA  0012               	return	
 15559                           
 15560                           ; BSR set to: 10
 15561                           ;term.c: 566: {
 15562                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15563  0003AC  CA03  F3B4         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15564                           
 15565                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15566  0003B0  CA04  F3B5         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15567                           
 15568                           ; BSR set to: 10
 15569                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15570  0003B4  0EB4               	movlw	low Terminal@Len
 15571  0003B6  0100               	movlb	0	; () banked
 15572  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15573  0003BA  0E03               	movlw	high Terminal@Len
 15574  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15575  0003BE  ECCD  F01B         	call	_atoi	;wreg free
 15576  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15577  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15578                           
 15579                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15580  0003CA  0E00               	movlw	0
 15581  0003CC  0100               	movlb	0	; () banked
 15582  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15583  0003D0  D018               	goto	l2435
 15584  0003D2                     
 15585                           ; BSR set to: 0
 15586                           ;term.c: 573: {
 15587                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15588                           
 15589                           ; BSR set to: 0
 15590  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15591  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15592  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15593  0003D8  0E05               	movlw	5
 15594  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15595  0003DC  0E00               	movlw	0
 15596  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15597  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15598  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15599  0003E4  6ED9               	movwf	fsr2l,c
 15600  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15601  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15602  0003EA  6EDA               	movwf	fsr2h,c
 15603  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15604  0003EE  0D01               	mullw	1
 15605  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15606  0003F2  24F3               	addwf	prodl,w,c
 15607  0003F4  6EE1               	movwf	fsr1l,c
 15608  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15609  0003F8  20F4               	addwfc	prodh,w,c
 15610  0003FA  6EE2               	movwf	fsr1h,c
 15611  0003FC  CFDF FFE7          	movff	indf2,indf1
 15612                           
 15613                           ; BSR set to: 0
 15614  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15615  000402                     l2435:
 15616                           
 15617                           ; BSR set to: 0
 15618                           
 15619                           ; BSR set to: 0
 15620  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15621  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15622  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15623  000408  0103               	movlb	3	; () banked
 15624  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15625  00040C  0100               	movlb	0	; () banked
 15626  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15627  000410  0103               	movlb	3	; () banked
 15628  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15629  000414  0100               	movlb	0	; () banked
 15630  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15631  000418  B0D8               	btfsc	status,0,c
 15632  00041A  0012               	return	
 15633  00041C  D7DA               	goto	l2436
 15634  00041E                     
 15635                           ;term.c: 619: if((cdc_trf_state == 0))
 15636                           
 15637                           ; BSR set to: 0
 15638  00041E  0100               	movlb	0	; () banked
 15639  000420  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15640  000422  A4D8               	btfss	status,2,c
 15641  000424  0012               	return	
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;term.c: 620: {
 15645                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15646  000426  0E53               	movlw	83
 15647  000428  0102               	movlb	2	; () banked
 15648  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15649                           
 15650                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15651  00042C  0E42               	movlw	66
 15652  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15653                           
 15654                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15655  000430  0E5B               	movlw	91
 15656  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15657                           
 15658                           ; BSR set to: 2
 15659                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15660  000434  C3B0  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15661                           
 15662                           ; BSR set to: 2
 15663                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15664  000438  C3B1  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15665                           
 15666                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15667  00043C  0E5D               	movlw	93
 15668  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15669                           
 15670                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15671  000440  0E3A               	movlw	58
 15672  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15673                           
 15674                           ; BSR set to: 2
 15675                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15676  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15677  000446  0100               	movlb	0	; () banked
 15678  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15679  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15680  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15681  00044E  0E07               	movlw	7
 15682  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15683  000452  ECEF  F033         	call	_putUSBUSART	;wreg free
 15684                           
 15685                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15686  000456  0E02               	movlw	2
 15687  000458  0102               	movlb	2	; () banked
 15688  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15689                           
 15690                           ; BSR set to: 2
 15691                           ;term.c: 632: }
 15692                           ;term.c: 633: break;
 15693  00045C  0012               	return	
 15694  00045E                     
 15695                           ; BSR set to: 2
 15696                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15697                           
 15698                           ; BSR set to: 2
 15699  00045E  EC11  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15700  000462  06E8               	decf	wreg,f,c
 15701  000464  A4D8               	btfss	status,2,c
 15702  000466  D088               	goto	l2444
 15703                           
 15704                           ;term.c: 638: {
 15705                           ;term.c: 640: if (FormatOption == 1u)
 15706  000468  0102               	movlb	2	; () banked
 15707  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15708  00046C  A4D8               	btfss	status,2,c
 15709  00046E  D027               	goto	u14290
 15710                           
 15711                           ; BSR set to: 2
 15712                           ;term.c: 641: {
 15713                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15714  000470  0E00               	movlw	0
 15715  000472  0100               	movlb	0	; () banked
 15716  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15717  000476  D01E               	goto	l2446
 15718  000478                     
 15719                           ;term.c: 644: {
 15720                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15721                           
 15722                           ; BSR set to: 0
 15723  000478  0100               	movlb	0	; () banked
 15724  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15725  00047C  0D04               	mullw	4
 15726  00047E  0E66               	movlw	low Terminal@Payload
 15727  000480  24F3               	addwf	prodl,w,c
 15728  000482  6F93               	movwf	itoa@buf& (0+255),b
 15729  000484  0E07               	movlw	high Terminal@Payload
 15730  000486  20F4               	addwfc	prodh,w,c
 15731  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15732  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15733  00048C  0D01               	mullw	1
 15734  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15735  000490  24F3               	addwf	prodl,w,c
 15736  000492  6ED9               	movwf	fsr2l,c
 15737  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15738  000496  20F4               	addwfc	prodh,w,c
 15739  000498  6EDA               	movwf	fsr2h,c
 15740  00049A  50DF               	movf	indf2,w,c
 15741  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15742  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15743  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15744  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15745  0004A4  0E00               	movlw	0
 15746  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15747  0004A8  0E0A               	movlw	10
 15748  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15749  0004AC  EC69  F030         	call	_itoa	;wreg free
 15750  0004B0  0100               	movlb	0	; () banked
 15751  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15752  0004B4                     l2446:
 15753                           
 15754                           ; BSR set to: 0
 15755                           
 15756                           ; BSR set to: 0
 15757  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15758  0004B6  0102               	movlb	2	; () banked
 15759  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15760  0004BA  B0D8               	btfsc	status,0,c
 15761  0004BC  D7DD               	goto	l2447
 15762  0004BE                     u14290:
 15763                           
 15764                           ; BSR set to: 2
 15765                           ;term.c: 646: }
 15766                           ;term.c: 647: }
 15767                           ;term.c: 650: if((cdc_trf_state == 0))
 15768                           
 15769                           ; BSR set to: 2
 15770                           
 15771                           ; BSR set to: 2
 15772  0004BE  0100               	movlb	0	; () banked
 15773  0004C0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15774  0004C2  A4D8               	btfss	status,2,c
 15775  0004C4  0012               	return	
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;term.c: 651: {
 15779                           ;term.c: 653: if (FormatOption == 1u)
 15780  0004C6  0102               	movlb	2	; () banked
 15781  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15782  0004CA  A4D8               	btfss	status,2,c
 15783  0004CC  D02B               	goto	l2450
 15784                           
 15785                           ; BSR set to: 2
 15786                           ;term.c: 654: {
 15787                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15788  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15789  0004D0  0D08               	mullw	8
 15790  0004D2  0E03               	movlw	3
 15791  0004D4  26F3               	addwf	prodl,f,c
 15792  0004D6  0E00               	movlw	0
 15793  0004D8  22F4               	addwfc	prodh,f,c
 15794  0004DA  0E66               	movlw	low Terminal@Payload
 15795  0004DC  24F3               	addwf	prodl,w,c
 15796  0004DE  6ED9               	movwf	fsr2l,c
 15797  0004E0  0E07               	movlw	high Terminal@Payload
 15798  0004E2  20F4               	addwfc	prodh,w,c
 15799  0004E4  6EDA               	movwf	fsr2h,c
 15800  0004E6  0E0D               	movlw	13
 15801  0004E8  6EDF               	movwf	indf2,c
 15802                           
 15803                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15804  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15805  0004EC  0D08               	mullw	8
 15806  0004EE  0E02               	movlw	2
 15807  0004F0  26F3               	addwf	prodl,f,c
 15808  0004F2  0E00               	movlw	0
 15809  0004F4  22F4               	addwfc	prodh,f,c
 15810  0004F6  0E66               	movlw	low Terminal@Payload
 15811  0004F8  24F3               	addwf	prodl,w,c
 15812  0004FA  6ED9               	movwf	fsr2l,c
 15813  0004FC  0E07               	movlw	high Terminal@Payload
 15814  0004FE  20F4               	addwfc	prodh,w,c
 15815  000500  6EDA               	movwf	fsr2h,c
 15816  000502  0E0A               	movlw	10
 15817  000504  6EDF               	movwf	indf2,c
 15818                           
 15819                           ; BSR set to: 2
 15820                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15821  000506  0E66               	movlw	low Terminal@Payload
 15822  000508  0100               	movlb	0	; () banked
 15823  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15824  00050C  0E07               	movlw	high Terminal@Payload
 15825  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15826  000510  0102               	movlb	2	; () banked
 15827  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15828  000514  0D02               	mullw	2
 15829  000516  50F3               	movf	prodl,w,c
 15830  000518  0F04               	addlw	4
 15831  00051A  0100               	movlb	0	; () banked
 15832  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15833  00051E  ECEF  F033         	call	_putUSBUSART	;wreg free
 15834                           
 15835                           ;term.c: 659: }
 15836  000522  D026               	goto	l2451
 15837  000524                     l2450:
 15838                           
 15839                           ;term.c: 660: else
 15840                           ;term.c: 661: {
 15841                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15842  000524  0102               	movlb	2	; () banked
 15843  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15844  000528  0D01               	mullw	1
 15845  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15846  00052C  24F3               	addwf	prodl,w,c
 15847  00052E  6ED9               	movwf	fsr2l,c
 15848  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15849  000532  20F4               	addwfc	prodh,w,c
 15850  000534  6EDA               	movwf	fsr2h,c
 15851  000536  0E0D               	movlw	13
 15852  000538  6EDF               	movwf	indf2,c
 15853                           
 15854                           ; BSR set to: 2
 15855                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15856  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15857  00053C  0100               	movlb	0	; () banked
 15858  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15859  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15860  000542  0E01               	movlw	1
 15861  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15862  000546  0E00               	movlw	0
 15863  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15864  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15865  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15866  00054E  6ED9               	movwf	fsr2l,c
 15867  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15868  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15869  000554  6EDA               	movwf	fsr2h,c
 15870  000556  0E0A               	movlw	10
 15871  000558  6EDF               	movwf	indf2,c
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15875  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15876  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15877  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15878  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15879  000562  0102               	movlb	2	; () banked
 15880  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15881  000566  0F02               	addlw	2
 15882  000568  0100               	movlb	0	; () banked
 15883  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15884  00056C  ECEF  F033         	call	_putUSBUSART	;wreg free
 15885  000570                     l2451:
 15886                           
 15887                           ;term.c: 666: }
 15888                           ;term.c: 668: TermState = Term_GetData;
 15889  000570  0E00               	movlw	0
 15890  000572  0102               	movlb	2	; () banked
 15891  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15892                           
 15893                           ; BSR set to: 2
 15894                           ;term.c: 669: }
 15895                           ;term.c: 670: }
 15896  000576  0012               	return	
 15897  000578                     l2444:
 15898                           
 15899                           ;term.c: 671: else
 15900                           ;term.c: 672: {
 15901                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15902                           
 15903                           ; BSR set to: 2
 15904  000578  0ED7               	movlw	low Terminal@SwTimer
 15905  00057A  0100               	movlb	0	; () banked
 15906  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15907  00057E  0E04               	movlw	high Terminal@SwTimer
 15908  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15909  000582  0EB8               	movlw	184
 15910  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15911  000586  0E0B               	movlw	11
 15912  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15913  00058A  0E00               	movlw	0
 15914  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15915  00058E  0E00               	movlw	0
 15916  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15917  000592  EC58  F029         	call	_OsTmr_Wait	;wreg free
 15918  000596  06E8               	decf	wreg,f,c
 15919  000598  A4D8               	btfss	status,2,c
 15920  00059A  0012               	return	
 15921                           
 15922                           ;term.c: 675: {
 15923                           ;term.c: 677: if((cdc_trf_state == 0))
 15924  00059C  0100               	movlb	0	; () banked
 15925  00059E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15926  0005A0  A4D8               	btfss	status,2,c
 15927  0005A2  0012               	return	
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;term.c: 678: {
 15931                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15932  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15933  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15934  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15935  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15936  0005AC  0E5F               	movlw	low STR_21
 15937  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15938  0005B0  0EFE               	movlw	high STR_21
 15939  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15940  0005B4  EC66  F032         	call	_strcpy	;wreg free
 15941                           
 15942                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15943  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15944  0005BA  0100               	movlb	0	; () banked
 15945  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15946  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15947  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15948  0005C2  0E29               	movlw	41
 15949  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15950  0005C6  ECEF  F033         	call	_putUSBUSART	;wreg free
 15951                           
 15952                           ;term.c: 682: TermState = Term_GetData;
 15953  0005CA  0E00               	movlw	0
 15954  0005CC  0102               	movlb	2	; () banked
 15955  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15956                           
 15957                           ; BSR set to: 2
 15958                           ;term.c: 693: }
 15959                           
 15960                           ; BSR set to: 2
 15961                           ;term.c: 692: break;
 15962                           
 15963                           ;term.c: 691: default:
 15964                           
 15965                           ; BSR set to: 2
 15966                           ;term.c: 689: break;
 15967                           
 15968                           ;term.c: 688: case Term_ReadSlvUartData:
 15969                           
 15970                           ; BSR set to: 2
 15971                           ;term.c: 683: }
 15972                           ;term.c: 684: }
 15973                           ;term.c: 685: }
 15974                           ;term.c: 686: break;
 15975                           
 15976                           ; BSR set to: 2
 15977                           
 15978                           ; BSR set to: 2
 15979  0005D0  0012               	return	
 15980  0005D2                     l2405:
 15981                           
 15982                           ; BSR set to: 2
 15983  0005D2  0102               	movlb	2	; () banked
 15984  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15985                           
 15986                           ; Switch size 1, requested type "space"
 15987                           ; Number of cases is 4, Range of values is 0 to 3
 15988                           ; switch strategies available:
 15989                           ; Name         Instructions Cycles
 15990                           ; simple_byte           13     7 (average)
 15991                           ;	Chosen strategy is simple_byte
 15992  0005D6  0A00               	xorlw	0	; case 0
 15993  0005D8  B4D8               	btfsc	status,2,c
 15994  0005DA  D583               	goto	l2406
 15995  0005DC  0A01               	xorlw	1	; case 1
 15996  0005DE  B4D8               	btfsc	status,2,c
 15997  0005E0  D71E               	goto	l2441
 15998  0005E2  0A03               	xorlw	3	; case 2
 15999  0005E4  B4D8               	btfsc	status,2,c
 16000  0005E6  D73B               	goto	l2443
 16001  0005E8  0A01               	xorlw	1	; case 3
 16002  0005EA  0012               	return	
 16003  0005EC                     __end_of_Terminal:
 16004                           	opt stack 0
 16005                           tosu	equ	0xFFF
 16006                           tosh	equ	0xFFE
 16007                           tosl	equ	0xFFD
 16008                           pclath	equ	0xFFA
 16009                           tblptru	equ	0xFF8
 16010                           tblptrh	equ	0xFF7
 16011                           tblptrl	equ	0xFF6
 16012                           tablat	equ	0xFF5
 16013                           prodh	equ	0xFF4
 16014                           prodl	equ	0xFF3
 16015                           intcon	equ	0xFF2
 16016                           intcon2	equ	0xFF1
 16017                           intcon3	equ	0xFF0
 16018                           indf0	equ	0xFEF
 16019                           postinc0	equ	0xFEE
 16020                           plusw0	equ	0xFEB
 16021                           fsr0h	equ	0xFEA
 16022                           fsr0l	equ	0xFE9
 16023                           wreg	equ	0xFE8
 16024                           indf1	equ	0xFE7
 16025                           postinc1	equ	0xFE6
 16026                           postdec1	equ	0xFE5
 16027                           fsr1h	equ	0xFE2
 16028                           fsr1l	equ	0xFE1
 16029                           indf2	equ	0xFDF
 16030                           postinc2	equ	0xFDE
 16031                           postdec2	equ	0xFDD
 16032                           plusw2	equ	0xFDB
 16033                           fsr2h	equ	0xFDA
 16034                           fsr2l	equ	0xFD9
 16035                           status	equ	0xFD8
 16036                           
 16037 ;; *************** function _xtoi *****************
 16038 ;; Defined at:
 16039 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16042 ;;		 -> Terminal@Addr(4), 
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;  val             2   40[BANK0 ] unsigned int 
 16045 ;;  c               1   42[BANK0 ] unsigned char 
 16046 ;;  sign            1   39[BANK0 ] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  2   35[BANK0 ] unsigned int 
 16049 ;; Registers used:
 16050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/0
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16059 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;Total ram usage:        8 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:   13
 16063 ;; This function calls:
 16064 ;;		_isdigit
 16065 ;;		_isspace
 16066 ;;		_isupper
 16067 ;;		_isxdigit
 16068 ;;		_tolower
 16069 ;; This function is called by:
 16070 ;;		_Terminal
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text61
 16075  0034F8                     __ptext61:
 16076                           	opt stack 0
 16077  0034F8                     _xtoi:
 16078                           	opt stack 12
 16079                           
 16080                           ;incstack = 0
 16081  0034F8  0E00               	movlw	0
 16082  0034FA  0100               	movlb	0	; () banked
 16083  0034FC  6F87               	movwf	xtoi@sign& (0+255),b
 16084  0034FE  0E00               	movlw	0
 16085  003500  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16086  003502  0E00               	movlw	0
 16087  003504  6F88               	movwf	xtoi@val& (0+255),b
 16088  003506  D003               	goto	l3581
 16089  003508                     
 16090                           ; BSR set to: 0
 16091  003508  0100               	movlb	0	; () banked
 16092  00350A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16093  00350C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16094  00350E                     l3581:
 16095                           
 16096                           ; BSR set to: 0
 16097                           
 16098                           ; BSR set to: 0
 16099  00350E  C083  FFD9         	movff	xtoi@s,fsr2l
 16100  003512  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16101  003516  50DF               	movf	indf2,w,c
 16102  003518  EC38  F033         	call	_isspace
 16103  00351C  B0D8               	btfsc	status,0,c
 16104  00351E  D7F4               	goto	l3582
 16105  003520  C083  FFD9         	movff	xtoi@s,fsr2l
 16106  003524  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16107  003528  0E2D               	movlw	45
 16108  00352A  18DE               	xorwf	postinc2,w,c
 16109  00352C  A4D8               	btfss	status,2,c
 16110  00352E  D003               	goto	l3584
 16111  003530  0100               	movlb	0	; () banked
 16112  003532  2B87               	incf	xtoi@sign& (0+255),f,b
 16113  003534  D009               	goto	L15
 16114  003536                     l3584:
 16115                           
 16116                           ; BSR set to: 0
 16117  003536  C083  FFD9         	movff	xtoi@s,fsr2l
 16118  00353A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16119  00353E  0E2B               	movlw	43
 16120  003540  18DE               	xorwf	postinc2,w,c
 16121  003542  A4D8               	btfss	status,2,c
 16122  003544  D028               	goto	l3587
 16123  003546  0100               	movlb	0	; () banked
 16124  003548                     L15:
 16125  003548  4B83               	infsnz	xtoi@s& (0+255),f,b
 16126  00354A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16127                           
 16128                           ; BSR set to: 0
 16129                           
 16130                           ; BSR set to: 0
 16131  00354C  D024               	goto	l3587
 16132  00354E                     
 16133                           ; BSR set to: 0
 16134  00354E  0100               	movlb	0	; () banked
 16135  003550  518A               	movf	xtoi@c& (0+255),w,b
 16136  003552  ECDE  F033         	call	_isupper
 16137  003556  A0D8               	btfss	status,0,c
 16138  003558  D006               	goto	l3589
 16139  00355A  0100               	movlb	0	; () banked
 16140  00355C  518A               	movf	xtoi@c& (0+255),w,b
 16141  00355E  ECCF  F034         	call	_tolower
 16142  003562  0100               	movlb	0	; () banked
 16143  003564  6F8A               	movwf	xtoi@c& (0+255),b
 16144  003566                     l3589:
 16145  003566  0100               	movlb	0	; () banked
 16146  003568  518A               	movf	xtoi@c& (0+255),w,b
 16147  00356A  EC00  F034         	call	_isdigit
 16148  00356E  A0D8               	btfss	status,0,c
 16149  003570  D002               	goto	l3590
 16150  003572  0E30               	movlw	48
 16151  003574  D001               	goto	L14
 16152  003576                     l3590:
 16153                           
 16154                           ; BSR set to: 0
 16155  003576  0E57               	movlw	87
 16156  003578                     L14:
 16157  003578  0100               	movlb	0	; () banked
 16158  00357A  5F8A               	subwf	xtoi@c& (0+255),f,b
 16159                           
 16160                           ; BSR set to: 0
 16161  00357C  3B88               	swapf	xtoi@val& (0+255),f,b
 16162  00357E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16163  003580  0EF0               	movlw	240
 16164  003582  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16165  003584  5188               	movf	xtoi@val& (0+255),w,b
 16166  003586  0B0F               	andlw	15
 16167  003588  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16168  00358A  0EF0               	movlw	240
 16169  00358C  1788               	andwf	xtoi@val& (0+255),f,b
 16170  00358E  518A               	movf	xtoi@c& (0+255),w,b
 16171  003590  2788               	addwf	xtoi@val& (0+255),f,b
 16172  003592  0E00               	movlw	0
 16173  003594  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16174  003596                     l3587:
 16175                           
 16176                           ; BSR set to: 0
 16177  003596  C083  FFD9         	movff	xtoi@s,fsr2l
 16178  00359A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16179  00359E  0100               	movlb	0	; () banked
 16180  0035A0  4B83               	infsnz	xtoi@s& (0+255),f,b
 16181  0035A2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16182  0035A4  50DF               	movf	indf2,w,c
 16183  0035A6  6F8A               	movwf	xtoi@c& (0+255),b
 16184  0035A8  518A               	movf	xtoi@c& (0+255),w,b
 16185  0035AA  EC8A  F031         	call	_isxdigit
 16186  0035AE  B0D8               	btfsc	status,0,c
 16187  0035B0  D7CE               	goto	l3588
 16188  0035B2  0100               	movlb	0	; () banked
 16189  0035B4  5187               	movf	xtoi@sign& (0+255),w,b
 16190  0035B6  B4D8               	btfsc	status,2,c
 16191  0035B8  D00D               	goto	l3593
 16192                           
 16193                           ; BSR set to: 0
 16194  0035BA  C088  F085         	movff	xtoi@val,??_xtoi
 16195  0035BE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16196  0035C2  1F85               	comf	??_xtoi& (0+255),f,b
 16197  0035C4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16198  0035C6  4B85               	infsnz	??_xtoi& (0+255),f,b
 16199  0035C8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16200  0035CA  C085  F083         	movff	??_xtoi,?_xtoi
 16201  0035CE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16202  0035D2  0012               	return	
 16203  0035D4                     l3593:
 16204                           
 16205                           ; BSR set to: 0
 16206  0035D4  C088  F083         	movff	xtoi@val,?_xtoi
 16207  0035D8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16208                           
 16209                           ; BSR set to: 0
 16210  0035DC  0012               	return		;funcret
 16211  0035DE                     __end_of_xtoi:
 16212                           	opt stack 0
 16213                           tosu	equ	0xFFF
 16214                           tosh	equ	0xFFE
 16215                           tosl	equ	0xFFD
 16216                           pclath	equ	0xFFA
 16217                           tblptru	equ	0xFF8
 16218                           tblptrh	equ	0xFF7
 16219                           tblptrl	equ	0xFF6
 16220                           tablat	equ	0xFF5
 16221                           prodh	equ	0xFF4
 16222                           prodl	equ	0xFF3
 16223                           intcon	equ	0xFF2
 16224                           intcon2	equ	0xFF1
 16225                           intcon3	equ	0xFF0
 16226                           indf0	equ	0xFEF
 16227                           postinc0	equ	0xFEE
 16228                           plusw0	equ	0xFEB
 16229                           fsr0h	equ	0xFEA
 16230                           fsr0l	equ	0xFE9
 16231                           wreg	equ	0xFE8
 16232                           indf1	equ	0xFE7
 16233                           postinc1	equ	0xFE6
 16234                           postdec1	equ	0xFE5
 16235                           fsr1h	equ	0xFE2
 16236                           fsr1l	equ	0xFE1
 16237                           indf2	equ	0xFDF
 16238                           postinc2	equ	0xFDE
 16239                           postdec2	equ	0xFDD
 16240                           plusw2	equ	0xFDB
 16241                           fsr2h	equ	0xFDA
 16242                           fsr2l	equ	0xFD9
 16243                           status	equ	0xFD8
 16244                           
 16245 ;; *************** function _tolower *****************
 16246 ;; Defined at:
 16247 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;  c               1    wreg     unsigned char 
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;  c               1   29[BANK0 ] unsigned char 
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      unsigned char 
 16254 ;; Registers used:
 16255 ;;		wreg, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16265 ;;Total ram usage:        1 bytes
 16266 ;; Hardware stack levels used:    1
 16267 ;; Hardware stack levels required when called:   11
 16268 ;; This function calls:
 16269 ;;		Nothing
 16270 ;; This function is called by:
 16271 ;;		_xtoi
 16272 ;; This function uses a non-reentrant model
 16273 ;;
 16274                           
 16275                           	psect	text62
 16276  00699E                     __ptext62:
 16277                           	opt stack 0
 16278  00699E                     _tolower:
 16279                           	opt stack 13
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;incstack = 0
 16283                           ;tolower@c stored from wreg
 16284  00699E  0100               	movlb	0	; () banked
 16285  0069A0  6F7D               	movwf	tolower@c& (0+255),b
 16286  0069A2  0E5B               	movlw	91
 16287  0069A4  0100               	movlb	0	; () banked
 16288  0069A6  617D               	cpfslt	tolower@c& (0+255),b
 16289  0069A8  D004               	goto	l3640
 16290                           
 16291                           ; BSR set to: 0
 16292  0069AA  0E40               	movlw	64
 16293  0069AC  657D               	cpfsgt	tolower@c& (0+255),b
 16294  0069AE  D001               	goto	l3640
 16295                           
 16296                           ; BSR set to: 0
 16297  0069B0  8B7D               	bsf	tolower@c& (0+255),5,b
 16298  0069B2                     l3640:
 16299                           
 16300                           ; BSR set to: 0
 16301                           
 16302                           ; BSR set to: 0
 16303  0069B2  517D               	movf	tolower@c& (0+255),w,b
 16304  0069B4  0012               	return	
 16305  0069B6                     __end_of_tolower:
 16306                           	opt stack 0
 16307                           tosu	equ	0xFFF
 16308                           tosh	equ	0xFFE
 16309                           tosl	equ	0xFFD
 16310                           pclath	equ	0xFFA
 16311                           tblptru	equ	0xFF8
 16312                           tblptrh	equ	0xFF7
 16313                           tblptrl	equ	0xFF6
 16314                           tablat	equ	0xFF5
 16315                           prodh	equ	0xFF4
 16316                           prodl	equ	0xFF3
 16317                           intcon	equ	0xFF2
 16318                           intcon2	equ	0xFF1
 16319                           intcon3	equ	0xFF0
 16320                           indf0	equ	0xFEF
 16321                           postinc0	equ	0xFEE
 16322                           plusw0	equ	0xFEB
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           plusw2	equ	0xFDB
 16335                           fsr2h	equ	0xFDA
 16336                           fsr2l	equ	0xFD9
 16337                           status	equ	0xFD8
 16338                           
 16339 ;; *************** function _isxdigit *****************
 16340 ;; Defined at:
 16341 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  c               1    wreg     unsigned char 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  c               1   34[BANK0 ] unsigned char 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;		None               void
 16348 ;; Registers used:
 16349 ;;		wreg, status,2, status,0, cstack
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16356 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16359 ;;Total ram usage:        3 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:   12
 16362 ;; This function calls:
 16363 ;;		_isdigit
 16364 ;; This function is called by:
 16365 ;;		_xtoi
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           	psect	text63
 16370  006314                     __ptext63:
 16371                           	opt stack 0
 16372  006314                     _isxdigit:
 16373                           	opt stack 12
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;incstack = 0
 16377                           ;isxdigit@c stored from wreg
 16378  006314  0100               	movlb	0	; () banked
 16379  006316  6F82               	movwf	isxdigit@c& (0+255),b
 16380  006318  0E01               	movlw	1
 16381  00631A  0100               	movlb	0	; () banked
 16382  00631C  6F81               	movwf	_isxdigit$6701& (0+255),b
 16383                           
 16384                           ; BSR set to: 0
 16385  00631E  0E67               	movlw	103
 16386  006320  6182               	cpfslt	isxdigit@c& (0+255),b
 16387  006322  D003               	goto	u12610
 16388                           
 16389                           ; BSR set to: 0
 16390  006324  0E61               	movlw	97
 16391  006326  6182               	cpfslt	isxdigit@c& (0+255),b
 16392  006328  D00E               	goto	l3636
 16393  00632A                     u12610:
 16394                           
 16395                           ; BSR set to: 0
 16396                           
 16397                           ; BSR set to: 0
 16398  00632A  0E47               	movlw	71
 16399  00632C  6182               	cpfslt	isxdigit@c& (0+255),b
 16400  00632E  D003               	goto	u12630
 16401                           
 16402                           ; BSR set to: 0
 16403  006330  0E41               	movlw	65
 16404  006332  6182               	cpfslt	isxdigit@c& (0+255),b
 16405  006334  D008               	goto	l3636
 16406  006336                     u12630:
 16407                           
 16408                           ; BSR set to: 0
 16409                           
 16410                           ; BSR set to: 0
 16411  006336  5182               	movf	isxdigit@c& (0+255),w,b
 16412  006338  EC00  F034         	call	_isdigit
 16413  00633C  B0D8               	btfsc	status,0,c
 16414  00633E  D003               	goto	l3636
 16415  006340  0E00               	movlw	0
 16416  006342  0100               	movlb	0	; () banked
 16417  006344  6F81               	movwf	_isxdigit$6701& (0+255),b
 16418  006346                     l3636:
 16419                           
 16420                           ; BSR set to: 0
 16421  006346  C081  F080         	movff	_isxdigit$6701,??_isxdigit
 16422  00634A  0100               	movlb	0	; () banked
 16423  00634C  3180               	rrcf	??_isxdigit& (0+255),w,b
 16424  00634E  0012               	return	
 16425  006350                     __end_of_isxdigit:
 16426                           	opt stack 0
 16427                           tosu	equ	0xFFF
 16428                           tosh	equ	0xFFE
 16429                           tosl	equ	0xFFD
 16430                           pclath	equ	0xFFA
 16431                           tblptru	equ	0xFF8
 16432                           tblptrh	equ	0xFF7
 16433                           tblptrl	equ	0xFF6
 16434                           tablat	equ	0xFF5
 16435                           prodh	equ	0xFF4
 16436                           prodl	equ	0xFF3
 16437                           intcon	equ	0xFF2
 16438                           intcon2	equ	0xFF1
 16439                           intcon3	equ	0xFF0
 16440                           indf0	equ	0xFEF
 16441                           postinc0	equ	0xFEE
 16442                           plusw0	equ	0xFEB
 16443                           fsr0h	equ	0xFEA
 16444                           fsr0l	equ	0xFE9
 16445                           wreg	equ	0xFE8
 16446                           indf1	equ	0xFE7
 16447                           postinc1	equ	0xFE6
 16448                           postdec1	equ	0xFE5
 16449                           fsr1h	equ	0xFE2
 16450                           fsr1l	equ	0xFE1
 16451                           indf2	equ	0xFDF
 16452                           postinc2	equ	0xFDE
 16453                           postdec2	equ	0xFDD
 16454                           plusw2	equ	0xFDB
 16455                           fsr2h	equ	0xFDA
 16456                           fsr2l	equ	0xFD9
 16457                           status	equ	0xFD8
 16458                           
 16459 ;; *************** function _strtol *****************
 16460 ;; Defined at:
 16461 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16464 ;;		 -> Terminal@Payload(80), 
 16465 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16466 ;;		 -> NULL(0), 
 16467 ;;  base            2   45[BANK0 ] int 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  a               4   52[BANK0 ] long 
 16470 ;;  c               1   56[BANK0 ] unsigned char 
 16471 ;;  sign            1   51[BANK0 ] unsigned char 
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  4   41[BANK0 ] long 
 16474 ;; Registers used:
 16475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16482 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16484 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;Total ram usage:       16 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:   13
 16488 ;; This function calls:
 16489 ;;		___lmul
 16490 ;;		_isalpha
 16491 ;;		_isdigit
 16492 ;;		_isspace
 16493 ;;		_toupper
 16494 ;; This function is called by:
 16495 ;;		_Terminal
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text64
 16500  00181C                     __ptext64:
 16501                           	opt stack 0
 16502  00181C                     _strtol:
 16503                           	opt stack 12
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;incstack = 0
 16507  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16508  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16509  001824  50DF               	movf	indf2,w,c
 16510  001826  0100               	movlb	0	; () banked
 16511  001828  6F98               	movwf	strtol@c& (0+255),b
 16512                           
 16513                           ; BSR set to: 0
 16514  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16515  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16516                           
 16517                           ; BSR set to: 0
 16518  00182E  5198               	movf	strtol@c& (0+255),w,b
 16519  001830  EC38  F033         	call	_isspace
 16520  001834  B0D8               	btfsc	status,0,c
 16521  001836  D7F2               	goto	_strtol
 16522  001838  0E00               	movlw	0
 16523  00183A  0100               	movlb	0	; () banked
 16524  00183C  6F94               	movwf	strtol@a& (0+255),b
 16525  00183E  0E00               	movlw	0
 16526  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16527  001842  0E00               	movlw	0
 16528  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16529  001846  0E00               	movlw	0
 16530  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16531  00184A  0E00               	movlw	0
 16532  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16533                           
 16534                           ; BSR set to: 0
 16535  00184E  0E2D               	movlw	45
 16536  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16537  001852  A4D8               	btfss	status,2,c
 16538  001854  D003               	goto	l3543
 16539                           
 16540                           ; BSR set to: 0
 16541  001856  0E01               	movlw	1
 16542  001858  6F93               	movwf	strtol@sign& (0+255),b
 16543  00185A  D004               	goto	u13120
 16544  00185C                     l3543:
 16545                           
 16546                           ; BSR set to: 0
 16547                           
 16548                           ; BSR set to: 0
 16549  00185C  0E2B               	movlw	43
 16550  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16551  001860  A4D8               	btfss	status,2,c
 16552  001862  D008               	goto	l3545
 16553  001864                     u13120:
 16554                           
 16555                           ; BSR set to: 0
 16556  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16557  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16558  00186C  50DF               	movf	indf2,w,c
 16559  00186E  6F98               	movwf	strtol@c& (0+255),b
 16560                           
 16561                           ; BSR set to: 0
 16562  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16563  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16564  001874                     l3545:
 16565                           
 16566                           ; BSR set to: 0
 16567                           
 16568                           ; BSR set to: 0
 16569                           
 16570                           ; BSR set to: 0
 16571  001874  0E30               	movlw	48
 16572  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16573  001878  A4D8               	btfss	status,2,c
 16574  00187A  D02E               	goto	l3553
 16575                           
 16576                           ; BSR set to: 0
 16577  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16578  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16579  001884  50DF               	movf	indf2,w,c
 16580  001886  6F98               	movwf	strtol@c& (0+255),b
 16581                           
 16582                           ; BSR set to: 0
 16583  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16584  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16585                           
 16586                           ; BSR set to: 0
 16587  00188C  518D               	movf	strtol@base& (0+255),w,b
 16588  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16589  001890  B4D8               	btfsc	status,2,c
 16590  001892  D005               	goto	u13150
 16591                           
 16592                           ; BSR set to: 0
 16593  001894  0E10               	movlw	16
 16594  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16595  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16596  00189A  A4D8               	btfss	status,2,c
 16597  00189C  D015               	goto	l3547
 16598  00189E                     u13150:
 16599                           
 16600                           ; BSR set to: 0
 16601                           
 16602                           ; BSR set to: 0
 16603  00189E  0E78               	movlw	120
 16604  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16605  0018A2  B4D8               	btfsc	status,2,c
 16606  0018A4  D004               	goto	u13170
 16607                           
 16608                           ; BSR set to: 0
 16609  0018A6  0E58               	movlw	88
 16610  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16611  0018AA  A4D8               	btfss	status,2,c
 16612  0018AC  D00D               	goto	l3547
 16613  0018AE                     u13170:
 16614                           
 16615                           ; BSR set to: 0
 16616                           
 16617                           ; BSR set to: 0
 16618  0018AE  0E00               	movlw	0
 16619  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16620  0018B2  0E10               	movlw	16
 16621  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16622                           
 16623                           ; BSR set to: 0
 16624  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16625  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16626  0018BE  50DF               	movf	indf2,w,c
 16627  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16628                           
 16629                           ; BSR set to: 0
 16630  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16631  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16632  0018C6  D008               	goto	l3553
 16633  0018C8                     l3547:
 16634                           
 16635                           ; BSR set to: 0
 16636                           
 16637                           ; BSR set to: 0
 16638  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16639  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16640  0018CC  A4D8               	btfss	status,2,c
 16641  0018CE  D004               	goto	l3553
 16642                           
 16643                           ; BSR set to: 0
 16644  0018D0  0E00               	movlw	0
 16645  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16646  0018D4  0E08               	movlw	8
 16647  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16648  0018D8                     l3553:
 16649                           
 16650                           ; BSR set to: 0
 16651                           
 16652                           ; BSR set to: 0
 16653                           
 16654                           ; BSR set to: 0
 16655                           
 16656                           ; BSR set to: 0
 16657  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16658  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16659  0018DC  A4D8               	btfss	status,2,c
 16660  0018DE  D004               	goto	l3554
 16661                           
 16662                           ; BSR set to: 0
 16663  0018E0  0E00               	movlw	0
 16664  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16665  0018E4  0E0A               	movlw	10
 16666  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16667  0018E8                     l3554:
 16668                           
 16669                           ; BSR set to: 0
 16670                           
 16671                           ; BSR set to: 0
 16672                           
 16673                           ; BSR set to: 0
 16674  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16675  0018EA  ECAF  F032         	call	_isalpha
 16676  0018EE  A0D8               	btfss	status,0,c
 16677  0018F0  D008               	goto	l3556
 16678  0018F2  0100               	movlb	0	; () banked
 16679  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16680  0018F6  ECDB  F034         	call	_toupper
 16681  0018FA  0FC9               	addlw	201
 16682  0018FC  0100               	movlb	0	; () banked
 16683  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16684  001900  D009               	goto	l3559
 16685  001902                     l3556:
 16686                           
 16687                           ; BSR set to: 0
 16688  001902  0100               	movlb	0	; () banked
 16689  001904  5198               	movf	strtol@c& (0+255),w,b
 16690  001906  EC00  F034         	call	_isdigit
 16691  00190A  A0D8               	btfss	status,0,c
 16692  00190C  D039               	goto	l3560
 16693  00190E  0E30               	movlw	48
 16694  001910  0100               	movlb	0	; () banked
 16695  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16696  001914                     l3559:
 16697                           
 16698                           ; BSR set to: 0
 16699                           
 16700                           ; BSR set to: 0
 16701                           
 16702                           ; BSR set to: 0
 16703  001914  5198               	movf	strtol@c& (0+255),w,b
 16704  001916  6F8F               	movwf	??_strtol& (0+255),b
 16705  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16706  00191A  518D               	movf	strtol@base& (0+255),w,b
 16707  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16708  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16709  001920  0A80               	xorlw	128
 16710  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16711  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16712  001926  0A80               	xorlw	128
 16713  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16714  00192A  B0D8               	btfsc	status,0,c
 16715  00192C  D029               	goto	l3560
 16716                           
 16717                           ; BSR set to: 0
 16718                           
 16719                           ; BSR set to: 0
 16720                           
 16721                           ; BSR set to: 0
 16722  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16723  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16724  001936  0E00               	movlw	0
 16725  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16726  00193A  0EFF               	movlw	-1
 16727  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16728  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16729  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16730  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16731  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16732  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16733  001950  ECD2  F02C         	call	___lmul	;wreg free
 16734  001954  0100               	movlb	0	; () banked
 16735  001956  5198               	movf	strtol@c& (0+255),w,b
 16736  001958  257D               	addwf	?___lmul& (0+255),w,b
 16737  00195A  6F94               	movwf	strtol@a& (0+255),b
 16738  00195C  0E00               	movlw	0
 16739  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16740  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16741  001962  0E00               	movlw	0
 16742  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16743  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16744  001968  0E00               	movlw	0
 16745  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16746  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16747                           
 16748                           ; BSR set to: 0
 16749  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16750  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16751  001976  50DF               	movf	indf2,w,c
 16752  001978  6F98               	movwf	strtol@c& (0+255),b
 16753                           
 16754                           ; BSR set to: 0
 16755  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16756  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16757  00197E  D7B4               	goto	l3554
 16758  001980                     l3560:
 16759                           
 16760                           ; BSR set to: 0
 16761  001980  0100               	movlb	0	; () banked
 16762  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16763  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16764  001986  B4D8               	btfsc	status,2,c
 16765  001988  D00E               	goto	l3562
 16766                           
 16767                           ; BSR set to: 0
 16768  00198A  0EFF               	movlw	255
 16769  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16770  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16771  001990  0EFF               	movlw	255
 16772  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16773  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16774  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16775  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16776  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16777  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16778  0019A6                     l3562:
 16779                           
 16780                           ; BSR set to: 0
 16781                           
 16782                           ; BSR set to: 0
 16783  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16784  0019A8  B4D8               	btfsc	status,2,c
 16785  0019AA  D01A               	goto	l3563
 16786                           
 16787                           ; BSR set to: 0
 16788  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16789  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16790  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16791  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16792  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16793  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16794  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16795  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16796  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16797  0019C6  0E00               	movlw	0
 16798  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16799  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16800  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16801  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16802  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16803  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16804  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16805                           
 16806                           ; BSR set to: 0
 16807  0019DE  0012               	return	
 16808  0019E0                     l3563:
 16809                           
 16810                           ; BSR set to: 0
 16811  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16812  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16813  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16814  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16815                           
 16816                           ; BSR set to: 0
 16817  0019F0  0012               	return		;funcret
 16818  0019F2                     __end_of_strtol:
 16819                           	opt stack 0
 16820                           tosu	equ	0xFFF
 16821                           tosh	equ	0xFFE
 16822                           tosl	equ	0xFFD
 16823                           pclath	equ	0xFFA
 16824                           tblptru	equ	0xFF8
 16825                           tblptrh	equ	0xFF7
 16826                           tblptrl	equ	0xFF6
 16827                           tablat	equ	0xFF5
 16828                           prodh	equ	0xFF4
 16829                           prodl	equ	0xFF3
 16830                           intcon	equ	0xFF2
 16831                           intcon2	equ	0xFF1
 16832                           intcon3	equ	0xFF0
 16833                           indf0	equ	0xFEF
 16834                           postinc0	equ	0xFEE
 16835                           plusw0	equ	0xFEB
 16836                           fsr0h	equ	0xFEA
 16837                           fsr0l	equ	0xFE9
 16838                           wreg	equ	0xFE8
 16839                           indf1	equ	0xFE7
 16840                           postinc1	equ	0xFE6
 16841                           postdec1	equ	0xFE5
 16842                           fsr1h	equ	0xFE2
 16843                           fsr1l	equ	0xFE1
 16844                           indf2	equ	0xFDF
 16845                           postinc2	equ	0xFDE
 16846                           postdec2	equ	0xFDD
 16847                           plusw2	equ	0xFDB
 16848                           fsr2h	equ	0xFDA
 16849                           fsr2l	equ	0xFD9
 16850                           status	equ	0xFD8
 16851                           
 16852 ;; *************** function _toupper *****************
 16853 ;; Defined at:
 16854 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16855 ;; Parameters:    Size  Location     Type
 16856 ;;  c               1    wreg     unsigned char 
 16857 ;; Auto vars:     Size  Location     Type
 16858 ;;  c               1   29[BANK0 ] unsigned char 
 16859 ;; Return value:  Size  Location     Type
 16860 ;;                  1    wreg      unsigned char 
 16861 ;; Registers used:
 16862 ;;		wreg, status,2, status,0
 16863 ;; Tracked objects:
 16864 ;;		On entry : 0/0
 16865 ;;		On exit  : 0/0
 16866 ;;		Unchanged: 0/0
 16867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16872 ;;Total ram usage:        1 bytes
 16873 ;; Hardware stack levels used:    1
 16874 ;; Hardware stack levels required when called:   11
 16875 ;; This function calls:
 16876 ;;		Nothing
 16877 ;; This function is called by:
 16878 ;;		_strtol
 16879 ;; This function uses a non-reentrant model
 16880 ;;
 16881                           
 16882                           	psect	text65
 16883  0069B6                     __ptext65:
 16884                           	opt stack 0
 16885  0069B6                     _toupper:
 16886                           	opt stack 13
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;incstack = 0
 16890                           ;toupper@c stored from wreg
 16891  0069B6  0100               	movlb	0	; () banked
 16892  0069B8  6F7D               	movwf	toupper@c& (0+255),b
 16893  0069BA  0E7B               	movlw	123
 16894  0069BC  0100               	movlb	0	; () banked
 16895  0069BE  617D               	cpfslt	toupper@c& (0+255),b
 16896  0069C0  D004               	goto	l3567
 16897                           
 16898                           ; BSR set to: 0
 16899  0069C2  0E60               	movlw	96
 16900  0069C4  657D               	cpfsgt	toupper@c& (0+255),b
 16901  0069C6  D001               	goto	l3567
 16902                           
 16903                           ; BSR set to: 0
 16904  0069C8  9B7D               	bcf	toupper@c& (0+255),5,b
 16905  0069CA                     l3567:
 16906                           
 16907                           ; BSR set to: 0
 16908                           
 16909                           ; BSR set to: 0
 16910  0069CA  517D               	movf	toupper@c& (0+255),w,b
 16911  0069CC  0012               	return	
 16912  0069CE                     __end_of_toupper:
 16913                           	opt stack 0
 16914                           tosu	equ	0xFFF
 16915                           tosh	equ	0xFFE
 16916                           tosl	equ	0xFFD
 16917                           pclath	equ	0xFFA
 16918                           tblptru	equ	0xFF8
 16919                           tblptrh	equ	0xFF7
 16920                           tblptrl	equ	0xFF6
 16921                           tablat	equ	0xFF5
 16922                           prodh	equ	0xFF4
 16923                           prodl	equ	0xFF3
 16924                           intcon	equ	0xFF2
 16925                           intcon2	equ	0xFF1
 16926                           intcon3	equ	0xFF0
 16927                           indf0	equ	0xFEF
 16928                           postinc0	equ	0xFEE
 16929                           plusw0	equ	0xFEB
 16930                           fsr0h	equ	0xFEA
 16931                           fsr0l	equ	0xFE9
 16932                           wreg	equ	0xFE8
 16933                           indf1	equ	0xFE7
 16934                           postinc1	equ	0xFE6
 16935                           postdec1	equ	0xFE5
 16936                           fsr1h	equ	0xFE2
 16937                           fsr1l	equ	0xFE1
 16938                           indf2	equ	0xFDF
 16939                           postinc2	equ	0xFDE
 16940                           postdec2	equ	0xFDD
 16941                           plusw2	equ	0xFDB
 16942                           fsr2h	equ	0xFDA
 16943                           fsr2l	equ	0xFD9
 16944                           status	equ	0xFD8
 16945                           
 16946 ;; *************** function _isspace *****************
 16947 ;; Defined at:
 16948 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16949 ;; Parameters:    Size  Location     Type
 16950 ;;  c               1    wreg     unsigned char 
 16951 ;; Auto vars:     Size  Location     Type
 16952 ;;  c               1   31[BANK0 ] unsigned char 
 16953 ;; Return value:  Size  Location     Type
 16954 ;;		None               void
 16955 ;; Registers used:
 16956 ;;		wreg, status,2, status,0
 16957 ;; Tracked objects:
 16958 ;;		On entry : 0/0
 16959 ;;		On exit  : 0/0
 16960 ;;		Unchanged: 0/0
 16961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;Total ram usage:        3 bytes
 16967 ;; Hardware stack levels used:    1
 16968 ;; Hardware stack levels required when called:   11
 16969 ;; This function calls:
 16970 ;;		Nothing
 16971 ;; This function is called by:
 16972 ;;		_strtol
 16973 ;;		_xtoi
 16974 ;; This function uses a non-reentrant model
 16975 ;;
 16976                           
 16977                           	psect	text66
 16978  006670                     __ptext66:
 16979                           	opt stack 0
 16980  006670                     _isspace:
 16981                           	opt stack 13
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;incstack = 0
 16985                           ;isspace@c stored from wreg
 16986  006670  0100               	movlb	0	; () banked
 16987  006672  6F7F               	movwf	isspace@c& (0+255),b
 16988  006674  0E01               	movlw	1
 16989  006676  0100               	movlb	0	; () banked
 16990  006678  6F7E               	movwf	_isspace$6694& (0+255),b
 16991                           
 16992                           ; BSR set to: 0
 16993  00667A  0E20               	movlw	32
 16994  00667C  197F               	xorwf	isspace@c& (0+255),w,b
 16995  00667E  B4D8               	btfsc	status,2,c
 16996  006680  D008               	goto	l3624
 16997                           
 16998                           ; BSR set to: 0
 16999  006682  0E0E               	movlw	14
 17000  006684  617F               	cpfslt	isspace@c& (0+255),b
 17001  006686  D003               	goto	u12520
 17002                           
 17003                           ; BSR set to: 0
 17004  006688  0E09               	movlw	9
 17005  00668A  617F               	cpfslt	isspace@c& (0+255),b
 17006  00668C  D002               	goto	l3624
 17007  00668E                     u12520:
 17008                           
 17009                           ; BSR set to: 0
 17010                           
 17011                           ; BSR set to: 0
 17012  00668E  0E00               	movlw	0
 17013  006690  6F7E               	movwf	_isspace$6694& (0+255),b
 17014  006692                     l3624:
 17015                           
 17016                           ; BSR set to: 0
 17017                           
 17018                           ; BSR set to: 0
 17019  006692  C07E  F07D         	movff	_isspace$6694,??_isspace
 17020  006696  317D               	rrcf	??_isspace& (0+255),w,b
 17021  006698  0012               	return	
 17022  00669A                     __end_of_isspace:
 17023                           	opt stack 0
 17024                           tosu	equ	0xFFF
 17025                           tosh	equ	0xFFE
 17026                           tosl	equ	0xFFD
 17027                           pclath	equ	0xFFA
 17028                           tblptru	equ	0xFF8
 17029                           tblptrh	equ	0xFF7
 17030                           tblptrl	equ	0xFF6
 17031                           tablat	equ	0xFF5
 17032                           prodh	equ	0xFF4
 17033                           prodl	equ	0xFF3
 17034                           intcon	equ	0xFF2
 17035                           intcon2	equ	0xFF1
 17036                           intcon3	equ	0xFF0
 17037                           indf0	equ	0xFEF
 17038                           postinc0	equ	0xFEE
 17039                           plusw0	equ	0xFEB
 17040                           fsr0h	equ	0xFEA
 17041                           fsr0l	equ	0xFE9
 17042                           wreg	equ	0xFE8
 17043                           indf1	equ	0xFE7
 17044                           postinc1	equ	0xFE6
 17045                           postdec1	equ	0xFE5
 17046                           fsr1h	equ	0xFE2
 17047                           fsr1l	equ	0xFE1
 17048                           indf2	equ	0xFDF
 17049                           postinc2	equ	0xFDE
 17050                           postdec2	equ	0xFDD
 17051                           plusw2	equ	0xFDB
 17052                           fsr2h	equ	0xFDA
 17053                           fsr2l	equ	0xFD9
 17054                           status	equ	0xFD8
 17055                           
 17056 ;; *************** function _isalpha *****************
 17057 ;; Defined at:
 17058 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;  c               1    wreg     unsigned char 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  c               1   34[BANK0 ] unsigned char 
 17063 ;; Return value:  Size  Location     Type
 17064 ;;		None               void
 17065 ;; Registers used:
 17066 ;;		wreg, status,2, status,0, cstack
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;Total ram usage:        3 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; Hardware stack levels required when called:   12
 17079 ;; This function calls:
 17080 ;;		_isupper
 17081 ;; This function is called by:
 17082 ;;		_strtol
 17083 ;; This function uses a non-reentrant model
 17084 ;;
 17085                           
 17086                           	psect	text67
 17087  00655E                     __ptext67:
 17088                           	opt stack 0
 17089  00655E                     _isalpha:
 17090                           	opt stack 12
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;incstack = 0
 17094                           ;isalpha@c stored from wreg
 17095  00655E  0100               	movlb	0	; () banked
 17096  006560  6F82               	movwf	isalpha@c& (0+255),b
 17097  006562  0E01               	movlw	1
 17098  006564  0100               	movlb	0	; () banked
 17099  006566  6F81               	movwf	_isalpha$6691& (0+255),b
 17100                           
 17101                           ; BSR set to: 0
 17102  006568  0E7B               	movlw	123
 17103  00656A  6182               	cpfslt	isalpha@c& (0+255),b
 17104  00656C  D003               	goto	u12540
 17105                           
 17106                           ; BSR set to: 0
 17107  00656E  0E61               	movlw	97
 17108  006570  6182               	cpfslt	isalpha@c& (0+255),b
 17109  006572  D008               	goto	l3619
 17110  006574                     u12540:
 17111                           
 17112                           ; BSR set to: 0
 17113                           
 17114                           ; BSR set to: 0
 17115  006574  5182               	movf	isalpha@c& (0+255),w,b
 17116  006576  ECDE  F033         	call	_isupper
 17117  00657A  B0D8               	btfsc	status,0,c
 17118  00657C  D003               	goto	l3619
 17119  00657E  0E00               	movlw	0
 17120  006580  0100               	movlb	0	; () banked
 17121  006582  6F81               	movwf	_isalpha$6691& (0+255),b
 17122  006584                     l3619:
 17123                           
 17124                           ; BSR set to: 0
 17125  006584  C081  F080         	movff	_isalpha$6691,??_isalpha
 17126  006588  0100               	movlb	0	; () banked
 17127  00658A  3180               	rrcf	??_isalpha& (0+255),w,b
 17128  00658C  0012               	return	
 17129  00658E                     __end_of_isalpha:
 17130                           	opt stack 0
 17131                           tosu	equ	0xFFF
 17132                           tosh	equ	0xFFE
 17133                           tosl	equ	0xFFD
 17134                           pclath	equ	0xFFA
 17135                           tblptru	equ	0xFF8
 17136                           tblptrh	equ	0xFF7
 17137                           tblptrl	equ	0xFF6
 17138                           tablat	equ	0xFF5
 17139                           prodh	equ	0xFF4
 17140                           prodl	equ	0xFF3
 17141                           intcon	equ	0xFF2
 17142                           intcon2	equ	0xFF1
 17143                           intcon3	equ	0xFF0
 17144                           indf0	equ	0xFEF
 17145                           postinc0	equ	0xFEE
 17146                           plusw0	equ	0xFEB
 17147                           fsr0h	equ	0xFEA
 17148                           fsr0l	equ	0xFE9
 17149                           wreg	equ	0xFE8
 17150                           indf1	equ	0xFE7
 17151                           postinc1	equ	0xFE6
 17152                           postdec1	equ	0xFE5
 17153                           fsr1h	equ	0xFE2
 17154                           fsr1l	equ	0xFE1
 17155                           indf2	equ	0xFDF
 17156                           postinc2	equ	0xFDE
 17157                           postdec2	equ	0xFDD
 17158                           plusw2	equ	0xFDB
 17159                           fsr2h	equ	0xFDA
 17160                           fsr2l	equ	0xFD9
 17161                           status	equ	0xFD8
 17162                           
 17163 ;; *************** function _isupper *****************
 17164 ;; Defined at:
 17165 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17166 ;; Parameters:    Size  Location     Type
 17167 ;;  c               1    wreg     unsigned char 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;  c               1   31[BANK0 ] unsigned char 
 17170 ;; Return value:  Size  Location     Type
 17171 ;;		None               void
 17172 ;; Registers used:
 17173 ;;		wreg, status,2, status,0
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17182 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17183 ;;Total ram usage:        3 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; Hardware stack levels required when called:   11
 17186 ;; This function calls:
 17187 ;;		Nothing
 17188 ;; This function is called by:
 17189 ;;		_xtoi
 17190 ;;		_isalpha
 17191 ;; This function uses a non-reentrant model
 17192 ;;
 17193                           
 17194                           	psect	text68
 17195  0067BC                     __ptext68:
 17196                           	opt stack 0
 17197  0067BC                     _isupper:
 17198                           	opt stack 13
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;incstack = 0
 17202                           ;isupper@c stored from wreg
 17203  0067BC  0100               	movlb	0	; () banked
 17204  0067BE  6F7F               	movwf	isupper@c& (0+255),b
 17205  0067C0  0E00               	movlw	0
 17206  0067C2  0100               	movlb	0	; () banked
 17207  0067C4  6F7E               	movwf	_isupper$6697& (0+255),b
 17208                           
 17209                           ; BSR set to: 0
 17210  0067C6  0E5B               	movlw	91
 17211  0067C8  617F               	cpfslt	isupper@c& (0+255),b
 17212  0067CA  D005               	goto	l3629
 17213                           
 17214                           ; BSR set to: 0
 17215  0067CC  0E40               	movlw	64
 17216  0067CE  657F               	cpfsgt	isupper@c& (0+255),b
 17217  0067D0  D002               	goto	l3629
 17218                           
 17219                           ; BSR set to: 0
 17220  0067D2  0E01               	movlw	1
 17221  0067D4  6F7E               	movwf	_isupper$6697& (0+255),b
 17222  0067D6                     l3629:
 17223                           
 17224                           ; BSR set to: 0
 17225                           
 17226                           ; BSR set to: 0
 17227  0067D6  C07E  F07D         	movff	_isupper$6697,??_isupper
 17228  0067DA  317D               	rrcf	??_isupper& (0+255),w,b
 17229  0067DC  0012               	return	
 17230  0067DE                     __end_of_isupper:
 17231                           	opt stack 0
 17232                           tosu	equ	0xFFF
 17233                           tosh	equ	0xFFE
 17234                           tosl	equ	0xFFD
 17235                           pclath	equ	0xFFA
 17236                           tblptru	equ	0xFF8
 17237                           tblptrh	equ	0xFF7
 17238                           tblptrl	equ	0xFF6
 17239                           tablat	equ	0xFF5
 17240                           prodh	equ	0xFF4
 17241                           prodl	equ	0xFF3
 17242                           intcon	equ	0xFF2
 17243                           intcon2	equ	0xFF1
 17244                           intcon3	equ	0xFF0
 17245                           indf0	equ	0xFEF
 17246                           postinc0	equ	0xFEE
 17247                           plusw0	equ	0xFEB
 17248                           fsr0h	equ	0xFEA
 17249                           fsr0l	equ	0xFE9
 17250                           wreg	equ	0xFE8
 17251                           indf1	equ	0xFE7
 17252                           postinc1	equ	0xFE6
 17253                           postdec1	equ	0xFE5
 17254                           fsr1h	equ	0xFE2
 17255                           fsr1l	equ	0xFE1
 17256                           indf2	equ	0xFDF
 17257                           postinc2	equ	0xFDE
 17258                           postdec2	equ	0xFDD
 17259                           plusw2	equ	0xFDB
 17260                           fsr2h	equ	0xFDA
 17261                           fsr2l	equ	0xFD9
 17262                           status	equ	0xFD8
 17263                           
 17264 ;; *************** function _strcpy *****************
 17265 ;; Defined at:
 17266 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17269 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17270 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17271 ;;		 -> STR_23(20), STR_21(42), 
 17272 ;; Auto vars:     Size  Location     Type
 17273 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17274 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17275 ;; Return value:  Size  Location     Type
 17276 ;;                  2   29[BANK0 ] PTR unsigned char 
 17277 ;; Registers used:
 17278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17279 ;; Tracked objects:
 17280 ;;		On entry : 0/0
 17281 ;;		On exit  : 0/0
 17282 ;;		Unchanged: 0/0
 17283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17287 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17288 ;;Total ram usage:        6 bytes
 17289 ;; Hardware stack levels used:    1
 17290 ;; Hardware stack levels required when called:   11
 17291 ;; This function calls:
 17292 ;;		Nothing
 17293 ;; This function is called by:
 17294 ;;		_Terminal
 17295 ;;		_Term_MainSm
 17296 ;; This function uses a non-reentrant model
 17297 ;;
 17298                           
 17299                           	psect	text69
 17300  0064CC                     __ptext69:
 17301                           	opt stack 0
 17302  0064CC                     _strcpy:
 17303                           	opt stack 15
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;incstack = 0
 17307  0064CC  C07D  F081         	movff	strcpy@to,strcpy@cp
 17308  0064D0  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17309  0064D4  D005               	goto	l3521
 17310  0064D6  0100               	movlb	0	; () banked
 17311  0064D8  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17312  0064DA  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17313  0064DC  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17314  0064DE  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17315  0064E0                     l3521:
 17316                           
 17317                           ; BSR set to: 0
 17318  0064E0  C07F  FFF6         	movff	strcpy@from,tblptrl
 17319  0064E4  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17320  0064E8                     	if	0	;tblptru may be non-zero
 17321  0064E8                     	endif
 17322  0064E8                     	if	0	;tblptru may be non-zero
 17323  0064E8                     	endif
 17324  0064E8  C081  FFD9         	movff	strcpy@cp,fsr2l
 17325  0064EC  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17326  0064F0  0008               	tblrd		*
 17327  0064F2  CFF5 FFDF          	movff	tablat,indf2
 17328  0064F6  50DF               	movf	indf2,w,c
 17329  0064F8  B4D8               	btfsc	status,2,c
 17330  0064FA  0012               	return	
 17331  0064FC  D7EC               	goto	l3522
 17332  0064FE                     __end_of_strcpy:
 17333                           	opt stack 0
 17334                           tosu	equ	0xFFF
 17335                           tosh	equ	0xFFE
 17336                           tosl	equ	0xFFD
 17337                           pclath	equ	0xFFA
 17338                           tblptru	equ	0xFF8
 17339                           tblptrh	equ	0xFF7
 17340                           tblptrl	equ	0xFF6
 17341                           tablat	equ	0xFF5
 17342                           prodh	equ	0xFF4
 17343                           prodl	equ	0xFF3
 17344                           intcon	equ	0xFF2
 17345                           intcon2	equ	0xFF1
 17346                           intcon3	equ	0xFF0
 17347                           indf0	equ	0xFEF
 17348                           postinc0	equ	0xFEE
 17349                           plusw0	equ	0xFEB
 17350                           fsr0h	equ	0xFEA
 17351                           fsr0l	equ	0xFE9
 17352                           wreg	equ	0xFE8
 17353                           indf1	equ	0xFE7
 17354                           postinc1	equ	0xFE6
 17355                           postdec1	equ	0xFE5
 17356                           fsr1h	equ	0xFE2
 17357                           fsr1l	equ	0xFE1
 17358                           indf2	equ	0xFDF
 17359                           postinc2	equ	0xFDE
 17360                           postdec2	equ	0xFDD
 17361                           plusw2	equ	0xFDB
 17362                           fsr2h	equ	0xFDA
 17363                           fsr2l	equ	0xFD9
 17364                           status	equ	0xFD8
 17365                           
 17366 ;; *************** function _putUSBUSART *****************
 17367 ;; Defined at:
 17368 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17369 ;; Parameters:    Size  Location     Type
 17370 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17371 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17372 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17373 ;;		 -> RxBuffer(400), 
 17374 ;;  length          1   37[BANK0 ] unsigned char 
 17375 ;; Auto vars:     Size  Location     Type
 17376 ;;		None
 17377 ;; Return value:  Size  Location     Type
 17378 ;;                  1    wreg      void 
 17379 ;; Registers used:
 17380 ;;		wreg, status,2, status,0
 17381 ;; Tracked objects:
 17382 ;;		On entry : 0/0
 17383 ;;		On exit  : 0/0
 17384 ;;		Unchanged: 0/0
 17385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17386 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17389 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17390 ;;Total ram usage:        3 bytes
 17391 ;; Hardware stack levels used:    1
 17392 ;; Hardware stack levels required when called:   11
 17393 ;; This function calls:
 17394 ;;		Nothing
 17395 ;; This function is called by:
 17396 ;;		_Terminal
 17397 ;;		_Term_MainSm
 17398 ;;		_GsmGprsTerminal
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text70
 17403  0067DE                     __ptext70:
 17404                           	opt stack 0
 17405  0067DE                     _putUSBUSART:
 17406                           	opt stack 15
 17407                           
 17408                           ;usb_device_cdc.c: 584: ;
 17409                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17410                           
 17411                           ;incstack = 0
 17412  0067DE  0100               	movlb	0	; () banked
 17413  0067E0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17414  0067E2  A4D8               	btfss	status,2,c
 17415  0067E4  0012               	return	
 17416                           
 17417                           ; BSR set to: 0
 17418                           ;usb_device_cdc.c: 586: {
 17419                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17420  0067E6  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17421  0067EA  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17422                           
 17423                           ; BSR set to: 0
 17424  0067EE  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17425                           
 17426                           ; BSR set to: 0
 17427  0067F2  0E01               	movlw	1
 17428  0067F4  0101               	movlb	1	; () banked
 17429  0067F6  6FDD               	movwf	_cdc_mem_type& (0+255),b
 17430                           
 17431                           ; BSR set to: 1
 17432  0067F8  0E01               	movlw	1
 17433  0067FA  0100               	movlb	0	; () banked
 17434  0067FC  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17435  0067FE  0012               	return	
 17436  006800                     __end_of_putUSBUSART:
 17437                           	opt stack 0
 17438                           tosu	equ	0xFFF
 17439                           tosh	equ	0xFFE
 17440                           tosl	equ	0xFFD
 17441                           pclath	equ	0xFFA
 17442                           tblptru	equ	0xFF8
 17443                           tblptrh	equ	0xFF7
 17444                           tblptrl	equ	0xFF6
 17445                           tablat	equ	0xFF5
 17446                           prodh	equ	0xFF4
 17447                           prodl	equ	0xFF3
 17448                           intcon	equ	0xFF2
 17449                           intcon2	equ	0xFF1
 17450                           intcon3	equ	0xFF0
 17451                           indf0	equ	0xFEF
 17452                           postinc0	equ	0xFEE
 17453                           plusw0	equ	0xFEB
 17454                           fsr0h	equ	0xFEA
 17455                           fsr0l	equ	0xFE9
 17456                           wreg	equ	0xFE8
 17457                           indf1	equ	0xFE7
 17458                           postinc1	equ	0xFE6
 17459                           postdec1	equ	0xFE5
 17460                           fsr1h	equ	0xFE2
 17461                           fsr1l	equ	0xFE1
 17462                           indf2	equ	0xFDF
 17463                           postinc2	equ	0xFDE
 17464                           postdec2	equ	0xFDD
 17465                           plusw2	equ	0xFDB
 17466                           fsr2h	equ	0xFDA
 17467                           fsr2l	equ	0xFD9
 17468                           status	equ	0xFD8
 17469                           
 17470 ;; *************** function _itoa *****************
 17471 ;; Defined at:
 17472 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17475 ;;		 -> Terminal@Payload(80), 
 17476 ;;  val             2   53[BANK0 ] int 
 17477 ;;  base            2   55[BANK0 ] int 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17480 ;;		 -> Terminal@Payload(80), 
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  2   51[BANK0 ] PTR unsigned char 
 17483 ;; Registers used:
 17484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17494 ;;Total ram usage:        8 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; Hardware stack levels required when called:   13
 17497 ;; This function calls:
 17498 ;;		_utoa
 17499 ;; This function is called by:
 17500 ;;		_Terminal
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text71
 17505  0060D2                     __ptext71:
 17506                           	opt stack 0
 17507  0060D2                     _itoa:
 17508                           	opt stack 12
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;incstack = 0
 17512  0060D2  C093  F099         	movff	itoa@buf,itoa@cp
 17513  0060D6  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17514  0060DA  0100               	movlb	0	; () banked
 17515  0060DC  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17516  0060DE  D00C               	goto	l3269
 17517                           
 17518                           ; BSR set to: 0
 17519  0060E0  C093  FFD9         	movff	itoa@buf,fsr2l
 17520  0060E4  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17521  0060E8  0E2D               	movlw	45
 17522  0060EA  6EDF               	movwf	indf2,c
 17523                           
 17524                           ; BSR set to: 0
 17525  0060EC  4B93               	infsnz	itoa@buf& (0+255),f,b
 17526  0060EE  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17527                           
 17528                           ; BSR set to: 0
 17529  0060F0  6D95               	negf	itoa@val& (0+255),b
 17530  0060F2  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17531  0060F4  B0D8               	btfsc	status,0,c
 17532  0060F6  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17533  0060F8                     l3269:
 17534                           
 17535                           ; BSR set to: 0
 17536                           
 17537                           ; BSR set to: 0
 17538  0060F8  C093  F08A         	movff	itoa@buf,utoa@buf
 17539  0060FC  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17540  006100  C095  F08C         	movff	itoa@val,utoa@val
 17541  006104  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17542  006108  C097  F08E         	movff	itoa@base,utoa@base
 17543  00610C  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17544  006110  EC1C  F023         	call	_utoa	;wreg free
 17545  006114  0012               	return	
 17546  006116                     __end_of_itoa:
 17547                           	opt stack 0
 17548                           tosu	equ	0xFFF
 17549                           tosh	equ	0xFFE
 17550                           tosl	equ	0xFFD
 17551                           pclath	equ	0xFFA
 17552                           tblptru	equ	0xFF8
 17553                           tblptrh	equ	0xFF7
 17554                           tblptrl	equ	0xFF6
 17555                           tablat	equ	0xFF5
 17556                           prodh	equ	0xFF4
 17557                           prodl	equ	0xFF3
 17558                           intcon	equ	0xFF2
 17559                           intcon2	equ	0xFF1
 17560                           intcon3	equ	0xFF0
 17561                           indf0	equ	0xFEF
 17562                           postinc0	equ	0xFEE
 17563                           plusw0	equ	0xFEB
 17564                           fsr0h	equ	0xFEA
 17565                           fsr0l	equ	0xFE9
 17566                           wreg	equ	0xFE8
 17567                           indf1	equ	0xFE7
 17568                           postinc1	equ	0xFE6
 17569                           postdec1	equ	0xFE5
 17570                           fsr1h	equ	0xFE2
 17571                           fsr1l	equ	0xFE1
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           plusw2	equ	0xFDB
 17576                           fsr2h	equ	0xFDA
 17577                           fsr2l	equ	0xFD9
 17578                           status	equ	0xFD8
 17579                           
 17580 ;; *************** function _utoa *****************
 17581 ;; Defined at:
 17582 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17583 ;; Parameters:    Size  Location     Type
 17584 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17585 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17586 ;;  val             2   44[BANK0 ] unsigned int 
 17587 ;;  base            2   46[BANK0 ] int 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;  v               2   48[BANK0 ] unsigned int 
 17590 ;;  c               1   50[BANK0 ] unsigned char 
 17591 ;; Return value:  Size  Location     Type
 17592 ;;                  2   42[BANK0 ] PTR unsigned char 
 17593 ;; Registers used:
 17594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17595 ;; Tracked objects:
 17596 ;;		On entry : 0/0
 17597 ;;		On exit  : 0/0
 17598 ;;		Unchanged: 0/0
 17599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17600 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17601 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17603 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17604 ;;Total ram usage:        9 bytes
 17605 ;; Hardware stack levels used:    1
 17606 ;; Hardware stack levels required when called:   12
 17607 ;; This function calls:
 17608 ;;		___lwdiv
 17609 ;;		___lwmod
 17610 ;; This function is called by:
 17611 ;;		_Term_MainSm
 17612 ;;		_itoa
 17613 ;; This function uses a non-reentrant model
 17614 ;;
 17615                           
 17616                           	psect	text72
 17617  004638                     __ptext72:
 17618                           	opt stack 0
 17619  004638                     _utoa:
 17620                           	opt stack 14
 17621                           
 17622                           ;incstack = 0
 17623  004638  C08C  F090         	movff	utoa@val,utoa@v
 17624  00463C  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17625  004640  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17626  004644  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17627  004648  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17628  00464C  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17629  004650  EC29  F02E         	call	___lwdiv	;wreg free
 17630  004654  C083  F090         	movff	?___lwdiv,utoa@v
 17631  004658  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17632  00465C  0100               	movlb	0	; () banked
 17633  00465E  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17634  004660  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17635                           
 17636                           ; BSR set to: 0
 17637  004662  5190               	movf	utoa@v& (0+255),w,b
 17638  004664  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17639  004666  A4D8               	btfss	status,2,c
 17640  004668  D7EB               	goto	l3273
 17641                           
 17642                           ; BSR set to: 0
 17643                           
 17644                           ; BSR set to: 0
 17645  00466A  C08A  FFD9         	movff	utoa@buf,fsr2l
 17646  00466E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17647  004672  0E00               	movlw	0
 17648  004674  6EDF               	movwf	indf2,c
 17649                           
 17650                           ; BSR set to: 0
 17651  004676  078A               	decf	utoa@buf& (0+255),f,b
 17652  004678  A0D8               	btfss	status,0,c
 17653  00467A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17654  00467C                     
 17655                           ; BSR set to: 0
 17656                           
 17657                           ; BSR set to: 0
 17658  00467C  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17659  004680  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17660  004684  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17661  004688  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17662  00468C  EC8B  F030         	call	___lwmod	;wreg free
 17663  004690  0100               	movlb	0	; () banked
 17664  004692  517D               	movf	?___lwmod& (0+255),w,b
 17665  004694  6F92               	movwf	utoa@c& (0+255),b
 17666                           
 17667                           ; BSR set to: 0
 17668  004696  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17669  00469A  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17670  00469E  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17671  0046A2  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17672  0046A6  EC29  F02E         	call	___lwdiv	;wreg free
 17673  0046AA  C083  F08C         	movff	?___lwdiv,utoa@val
 17674  0046AE  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17675  0046B2  0E09               	movlw	9
 17676  0046B4  0100               	movlb	0	; () banked
 17677  0046B6  6592               	cpfsgt	utoa@c& (0+255),b
 17678  0046B8  D002               	goto	l3276
 17679                           
 17680                           ; BSR set to: 0
 17681  0046BA  0E07               	movlw	7
 17682  0046BC  2792               	addwf	utoa@c& (0+255),f,b
 17683  0046BE                     l3276:
 17684                           
 17685                           ; BSR set to: 0
 17686  0046BE  0E30               	movlw	48
 17687  0046C0  2792               	addwf	utoa@c& (0+255),f,b
 17688                           
 17689                           ; BSR set to: 0
 17690  0046C2  C08A  FFD9         	movff	utoa@buf,fsr2l
 17691  0046C6  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17692  0046CA  C092  FFDF         	movff	utoa@c,indf2
 17693                           
 17694                           ; BSR set to: 0
 17695  0046CE  078A               	decf	utoa@buf& (0+255),f,b
 17696  0046D0  A0D8               	btfss	status,0,c
 17697  0046D2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17698                           
 17699                           ; BSR set to: 0
 17700  0046D4  518C               	movf	utoa@val& (0+255),w,b
 17701  0046D6  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17702  0046D8  A4D8               	btfss	status,2,c
 17703  0046DA  D7D0               	goto	l3275
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;	Return value of _utoa is never used
 17707                           
 17708                           ; BSR set to: 0
 17709  0046DC  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17710  0046DE  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17711  0046E0  0012               	return	
 17712  0046E2                     __end_of_utoa:
 17713                           	opt stack 0
 17714                           tosu	equ	0xFFF
 17715                           tosh	equ	0xFFE
 17716                           tosl	equ	0xFFD
 17717                           pclath	equ	0xFFA
 17718                           tblptru	equ	0xFF8
 17719                           tblptrh	equ	0xFF7
 17720                           tblptrl	equ	0xFF6
 17721                           tablat	equ	0xFF5
 17722                           prodh	equ	0xFF4
 17723                           prodl	equ	0xFF3
 17724                           intcon	equ	0xFF2
 17725                           intcon2	equ	0xFF1
 17726                           intcon3	equ	0xFF0
 17727                           indf0	equ	0xFEF
 17728                           postinc0	equ	0xFEE
 17729                           plusw0	equ	0xFEB
 17730                           fsr0h	equ	0xFEA
 17731                           fsr0l	equ	0xFE9
 17732                           wreg	equ	0xFE8
 17733                           indf1	equ	0xFE7
 17734                           postinc1	equ	0xFE6
 17735                           postdec1	equ	0xFE5
 17736                           fsr1h	equ	0xFE2
 17737                           fsr1l	equ	0xFE1
 17738                           indf2	equ	0xFDF
 17739                           postinc2	equ	0xFDE
 17740                           postdec2	equ	0xFDD
 17741                           plusw2	equ	0xFDB
 17742                           fsr2h	equ	0xFDA
 17743                           fsr2l	equ	0xFD9
 17744                           status	equ	0xFD8
 17745                           
 17746 ;; *************** function ___lwmod *****************
 17747 ;; Defined at:
 17748 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;  dividend        2   29[BANK0 ] unsigned int 
 17751 ;;  divisor         2   31[BANK0 ] unsigned int 
 17752 ;; Auto vars:     Size  Location     Type
 17753 ;;  counter         1   33[BANK0 ] unsigned char 
 17754 ;; Return value:  Size  Location     Type
 17755 ;;                  2   29[BANK0 ] unsigned int 
 17756 ;; Registers used:
 17757 ;;		wreg, status,2, status,0
 17758 ;; Tracked objects:
 17759 ;;		On entry : 0/0
 17760 ;;		On exit  : 0/0
 17761 ;;		Unchanged: 0/0
 17762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17766 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17767 ;;Total ram usage:        5 bytes
 17768 ;; Hardware stack levels used:    1
 17769 ;; Hardware stack levels required when called:   11
 17770 ;; This function calls:
 17771 ;;		Nothing
 17772 ;; This function is called by:
 17773 ;;		_utoa
 17774 ;; This function uses a non-reentrant model
 17775 ;;
 17776                           
 17777                           	psect	text73
 17778  006116                     __ptext73:
 17779                           	opt stack 0
 17780  006116                     ___lwmod:
 17781                           	opt stack 14
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;incstack = 0
 17785  006116  0100               	movlb	0	; () banked
 17786  006118  517F               	movf	___lwmod@divisor& (0+255),w,b
 17787  00611A  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17788  00611C  B4D8               	btfsc	status,2,c
 17789  00611E  D018               	goto	l3371
 17790                           
 17791                           ; BSR set to: 0
 17792  006120  0E01               	movlw	1
 17793  006122  6F81               	movwf	___lwmod@counter& (0+255),b
 17794  006124  D004               	goto	l3366
 17795  006126                     
 17796                           ; BSR set to: 0
 17797                           
 17798                           ; BSR set to: 0
 17799  006126  90D8               	bcf	status,0,c
 17800  006128  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17801  00612A  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17802  00612C  2B81               	incf	___lwmod@counter& (0+255),f,b
 17803  00612E                     l3366:
 17804                           
 17805                           ; BSR set to: 0
 17806                           
 17807                           ; BSR set to: 0
 17808  00612E  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17809  006130  D7FA               	goto	l3367
 17810  006132                     u12170:
 17811                           
 17812                           ; BSR set to: 0
 17813                           
 17814                           ; BSR set to: 0
 17815                           
 17816                           ; BSR set to: 0
 17817  006132  517F               	movf	___lwmod@divisor& (0+255),w,b
 17818  006134  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17819  006136  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17820  006138  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17821  00613A  A0D8               	btfss	status,0,c
 17822  00613C  D004               	goto	l3370
 17823                           
 17824                           ; BSR set to: 0
 17825  00613E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17826  006140  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17827  006142  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17828  006144  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17829  006146                     l3370:
 17830                           
 17831                           ; BSR set to: 0
 17832                           
 17833                           ; BSR set to: 0
 17834  006146  90D8               	bcf	status,0,c
 17835  006148  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17836  00614A  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17837                           
 17838                           ; BSR set to: 0
 17839  00614C  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17840  00614E  D7F1               	goto	u12170
 17841  006150                     l3371:
 17842                           
 17843                           ; BSR set to: 0
 17844                           
 17845                           ; BSR set to: 0
 17846  006150  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17847  006154  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17848                           
 17849                           ; BSR set to: 0
 17850  006158  0012               	return		;funcret
 17851  00615A                     __end_of___lwmod:
 17852                           	opt stack 0
 17853                           tosu	equ	0xFFF
 17854                           tosh	equ	0xFFE
 17855                           tosl	equ	0xFFD
 17856                           pclath	equ	0xFFA
 17857                           tblptru	equ	0xFF8
 17858                           tblptrh	equ	0xFF7
 17859                           tblptrl	equ	0xFF6
 17860                           tablat	equ	0xFF5
 17861                           prodh	equ	0xFF4
 17862                           prodl	equ	0xFF3
 17863                           intcon	equ	0xFF2
 17864                           intcon2	equ	0xFF1
 17865                           intcon3	equ	0xFF0
 17866                           indf0	equ	0xFEF
 17867                           postinc0	equ	0xFEE
 17868                           plusw0	equ	0xFEB
 17869                           fsr0h	equ	0xFEA
 17870                           fsr0l	equ	0xFE9
 17871                           wreg	equ	0xFE8
 17872                           indf1	equ	0xFE7
 17873                           postinc1	equ	0xFE6
 17874                           postdec1	equ	0xFE5
 17875                           fsr1h	equ	0xFE2
 17876                           fsr1l	equ	0xFE1
 17877                           indf2	equ	0xFDF
 17878                           postinc2	equ	0xFDE
 17879                           postdec2	equ	0xFDD
 17880                           plusw2	equ	0xFDB
 17881                           fsr2h	equ	0xFDA
 17882                           fsr2l	equ	0xFD9
 17883                           status	equ	0xFD8
 17884                           
 17885 ;; *************** function _getsUSBUSART *****************
 17886 ;; Defined at:
 17887 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17890 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17891 ;;  len             1   38[BANK0 ] unsigned char 
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;		None
 17894 ;; Return value:  Size  Location     Type
 17895 ;;                  1    wreg      unsigned char 
 17896 ;; Registers used:
 17897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17903 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;Total ram usage:        4 bytes
 17908 ;; Hardware stack levels used:    1
 17909 ;; Hardware stack levels required when called:   12
 17910 ;; This function calls:
 17911 ;;		_USBTransferOnePacket
 17912 ;; This function is called by:
 17913 ;;		_Terminal
 17914 ;;		_GsmGprsTerminal
 17915 ;; This function uses a non-reentrant model
 17916 ;;
 17917                           
 17918                           	psect	text74
 17919  004C84                     __ptext74:
 17920                           	opt stack 0
 17921  004C84                     _getsUSBUSART:
 17922                           	opt stack 13
 17923                           
 17924                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;incstack = 0
 17928  004C84  0E00               	movlw	0
 17929  004C86  0100               	movlb	0	; () banked
 17930  004C88  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17934  004C8A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17935  004C8C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17936  004C8E  B4D8               	btfsc	status,2,c
 17937  004C90  D006               	goto	u12900
 17938                           
 17939                           ; BSR set to: 0
 17940  004C92  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17941  004C96  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17942  004C9A  BEDF               	btfsc	indf2,7,c
 17943  004C9C  D03B               	goto	l1924
 17944  004C9E                     u12900:
 17945                           
 17946                           ; BSR set to: 0
 17947                           ;usb_device_cdc.c: 493: {
 17948                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17949                           
 17950                           ; BSR set to: 0
 17951  004C9E  EE20 F001          	lfsr	2,1
 17952  004CA2  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17953  004CA4  26D9               	addwf	fsr2l,f,c
 17954  004CA6  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17955  004CA8  22DA               	addwfc	fsr2h,f,c
 17956  004CAA  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17957  004CAC  5CDE               	subwf	postinc2,w,c
 17958  004CAE  B0D8               	btfsc	status,0,c
 17959  004CB0  D008               	goto	l1927
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17963  004CB2  EE20 F001          	lfsr	2,1
 17964  004CB6  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17965  004CB8  26D9               	addwf	fsr2l,f,c
 17966  004CBA  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17967  004CBC  22DA               	addwfc	fsr2h,f,c
 17968  004CBE  50DF               	movf	indf2,w,c
 17969  004CC0  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17970  004CC2                     l1927:
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17974                           
 17975                           ; BSR set to: 0
 17976  004CC2  0E00               	movlw	0
 17977  004CC4  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17978  004CC6  D013               	goto	l1928
 17979  004CC8                     
 17980                           ; BSR set to: 0
 17981                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17982                           
 17983                           ; BSR set to: 0
 17984  004CC8  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17985  004CCA  0D01               	mullw	1
 17986  004CCC  0E00               	movlw	low _cdc_data_rx
 17987  004CCE  24F3               	addwf	prodl,w,c
 17988  004CD0  6ED9               	movwf	fsr2l,c
 17989  004CD2  0E05               	movlw	high _cdc_data_rx
 17990  004CD4  20F4               	addwfc	prodh,w,c
 17991  004CD6  6EDA               	movwf	fsr2h,c
 17992  004CD8  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17993  004CDA  0D01               	mullw	1
 17994  004CDC  50F3               	movf	prodl,w,c
 17995  004CDE  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17996  004CE0  6EE1               	movwf	fsr1l,c
 17997  004CE2  50F4               	movf	prodh,w,c
 17998  004CE4  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17999  004CE6  6EE2               	movwf	fsr1h,c
 18000  004CE8  CFDF FFE7          	movff	indf2,indf1
 18001                           
 18002                           ; BSR set to: 0
 18003  004CEC  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18004  004CEE                     l1928:
 18005                           
 18006                           ; BSR set to: 0
 18007                           
 18008                           ; BSR set to: 0
 18009  004CEE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18010  004CF0  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18011  004CF2  A0D8               	btfss	status,0,c
 18012  004CF4  D7E9               	goto	l1929
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18016                           
 18017                           ; BSR set to: 0
 18018  004CF6  0E00               	movlw	0
 18019  004CF8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18020  004CFA  0E00               	movlw	low _cdc_data_rx
 18021  004CFC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18022  004CFE  0E05               	movlw	high _cdc_data_rx
 18023  004D00  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18024  004D02  0E40               	movlw	64
 18025  004D04  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18026  004D06  0E02               	movlw	2
 18027  004D08  ECFB  F020         	call	_USBTransferOnePacket
 18028  004D0C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18029  004D10  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18030  004D14                     l1924:
 18031                           
 18032                           ;usb_device_cdc.c: 513: }
 18033                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18034  004D14  0100               	movlb	0	; () banked
 18035  004D16  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18036  004D18  0012               	return	
 18037  004D1A                     __end_of_getsUSBUSART:
 18038                           	opt stack 0
 18039                           tosu	equ	0xFFF
 18040                           tosh	equ	0xFFE
 18041                           tosl	equ	0xFFD
 18042                           pclath	equ	0xFFA
 18043                           tblptru	equ	0xFF8
 18044                           tblptrh	equ	0xFF7
 18045                           tblptrl	equ	0xFF6
 18046                           tablat	equ	0xFF5
 18047                           prodh	equ	0xFF4
 18048                           prodl	equ	0xFF3
 18049                           intcon	equ	0xFF2
 18050                           intcon2	equ	0xFF1
 18051                           intcon3	equ	0xFF0
 18052                           indf0	equ	0xFEF
 18053                           postinc0	equ	0xFEE
 18054                           plusw0	equ	0xFEB
 18055                           fsr0h	equ	0xFEA
 18056                           fsr0l	equ	0xFE9
 18057                           wreg	equ	0xFE8
 18058                           indf1	equ	0xFE7
 18059                           postinc1	equ	0xFE6
 18060                           postdec1	equ	0xFE5
 18061                           fsr1h	equ	0xFE2
 18062                           fsr1l	equ	0xFE1
 18063                           indf2	equ	0xFDF
 18064                           postinc2	equ	0xFDE
 18065                           postdec2	equ	0xFDD
 18066                           plusw2	equ	0xFDB
 18067                           fsr2h	equ	0xFDA
 18068                           fsr2l	equ	0xFD9
 18069                           status	equ	0xFD8
 18070                           
 18071 ;; *************** function _USBTransferOnePacket *****************
 18072 ;; Defined at:
 18073 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;  ep              1    wreg     unsigned char 
 18076 ;;  dir             1   29[BANK0 ] unsigned char 
 18077 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18078 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18079 ;;  len             1   32[BANK0 ] unsigned char 
 18080 ;; Auto vars:     Size  Location     Type
 18081 ;;  ep              1   33[BANK0 ] unsigned char 
 18082 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18083 ;;		 -> NULL(0), BDT(48), 
 18084 ;; Return value:  Size  Location     Type
 18085 ;;                  2   29[BANK0 ] PTR void 
 18086 ;; Registers used:
 18087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18088 ;; Tracked objects:
 18089 ;;		On entry : 0/0
 18090 ;;		On exit  : 0/0
 18091 ;;		Unchanged: 0/0
 18092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18094 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18096 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18097 ;;Total ram usage:        7 bytes
 18098 ;; Hardware stack levels used:    1
 18099 ;; Hardware stack levels required when called:   11
 18100 ;; This function calls:
 18101 ;;		Nothing
 18102 ;; This function is called by:
 18103 ;;		_CDCInitEP
 18104 ;;		_getsUSBUSART
 18105 ;;		_CDCTxService
 18106 ;;		_USBCDCEventHandler
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           	psect	text75
 18111  0041F6                     __ptext75:
 18112                           	opt stack 0
 18113  0041F6                     _USBTransferOnePacket:
 18114                           	opt stack 13
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;incstack = 0
 18118                           ;USBTransferOnePacket@ep stored from wreg
 18119  0041F6  0100               	movlb	0	; () banked
 18120  0041F8  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18121                           
 18122                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18123                           ;usb_device.c: 1018: if(dir != 0)
 18124  0041FA  0100               	movlb	0	; () banked
 18125  0041FC  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18126  0041FE  B4D8               	btfsc	status,2,c
 18127  004200  D007               	goto	l1648
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;usb_device.c: 1019: {
 18131                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18132  004202  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18133  004204  0D02               	mullw	2
 18134  004206  0EB6               	movlw	low _pBDTEntryIn
 18135  004208  24F3               	addwf	prodl,w,c
 18136  00420A  6ED9               	movwf	fsr2l,c
 18137  00420C  0E00               	movlw	high _pBDTEntryIn
 18138  00420E  D006               	goto	L16
 18139  004210                     l1648:
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;usb_device.c: 1023: else
 18143                           ;usb_device.c: 1024: {
 18144                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18145                           
 18146                           ; BSR set to: 0
 18147  004210  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18148  004212  0D02               	mullw	2
 18149  004214  0E06               	movlw	low _pBDTEntryOut
 18150  004216  24F3               	addwf	prodl,w,c
 18151  004218  6ED9               	movwf	fsr2l,c
 18152  00421A  0E03               	movlw	high _pBDTEntryOut
 18153  00421C                     L16:
 18154  00421C  20F4               	addwfc	prodh,w,c
 18155  00421E  6EDA               	movwf	fsr2h,c
 18156  004220  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18157  004224  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;usb_device.c: 1027: }
 18161                           ;usb_device.c: 1031: if(handle == 0)
 18162                           
 18163                           ; BSR set to: 0
 18164  004228  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18165  00422A  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18166  00422C  A4D8               	btfss	status,2,c
 18167  00422E  D005               	goto	l1650
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;usb_device.c: 1032: {
 18171                           ;usb_device.c: 1033: return 0;
 18172  004230  0E00               	movlw	0
 18173  004232  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18174  004234  0E00               	movlw	0
 18175  004236  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18176                           
 18177                           ; BSR set to: 0
 18178  004238  0012               	return	
 18179  00423A                     l1650:
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;usb_device.c: 1034: }
 18183                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18184                           
 18185                           ; BSR set to: 0
 18186  00423A  EE20 F002          	lfsr	2,2
 18187  00423E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18188  004240  26D9               	addwf	fsr2l,f,c
 18189  004242  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18190  004244  22DA               	addwfc	fsr2h,f,c
 18191  004246  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18192  00424A  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18193                           
 18194                           ;usb_device.c: 1048: handle->CNT = len;
 18195  00424E  EE20 F001          	lfsr	2,1
 18196  004252  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18197  004254  26D9               	addwf	fsr2l,f,c
 18198  004256  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18199  004258  22DA               	addwfc	fsr2h,f,c
 18200  00425A  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18204  00425E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18205  004262  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18206  004266  0E40               	movlw	64
 18207  004268  16DF               	andwf	indf2,f,c
 18208                           
 18209                           ; BSR set to: 0
 18210                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18211  00426A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18212  00426E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18213  004272  0E00               	movlw	0
 18214  004274  86DB               	bsf	plusw2,3,c
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18218  004276  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18219  00427A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18220  00427E  0E00               	movlw	0
 18221  004280  8EDB               	bsf	plusw2,7,c
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;usb_device.c: 1054: if(dir != 0)
 18225  004282  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18226  004284  B4D8               	btfsc	status,2,c
 18227  004286  D007               	goto	l1652
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;usb_device.c: 1055: {
 18231                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18232  004288  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18233  00428A  0D02               	mullw	2
 18234  00428C  0EB6               	movlw	low _pBDTEntryIn
 18235  00428E  24F3               	addwf	prodl,w,c
 18236  004290  6ED9               	movwf	fsr2l,c
 18237  004292  0E00               	movlw	high _pBDTEntryIn
 18238  004294  D006               	goto	L17
 18239  004296                     l1652:
 18240                           
 18241                           ; BSR set to: 0
 18242                           ;usb_device.c: 1059: else
 18243                           ;usb_device.c: 1060: {
 18244                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18245                           
 18246                           ; BSR set to: 0
 18247  004296  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18248  004298  0D02               	mullw	2
 18249  00429A  0E06               	movlw	low _pBDTEntryOut
 18250  00429C  24F3               	addwf	prodl,w,c
 18251  00429E  6ED9               	movwf	fsr2l,c
 18252  0042A0  0E03               	movlw	high _pBDTEntryOut
 18253  0042A2                     L17:
 18254  0042A2  20F4               	addwfc	prodh,w,c
 18255  0042A4  6EDA               	movwf	fsr2h,c
 18256  0042A6  0E04               	movlw	4
 18257  0042A8  1ADF               	xorwf	indf2,f,c
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;usb_device.c: 1063: }
 18261                           ;usb_device.c: 1064: return (void*)handle;
 18262                           
 18263                           ; BSR set to: 0
 18264  0042AA  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18265  0042AE  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18266  0042B2  0012               	return	
 18267  0042B4                     __end_of_USBTransferOnePacket:
 18268                           	opt stack 0
 18269                           tosu	equ	0xFFF
 18270                           tosh	equ	0xFFE
 18271                           tosl	equ	0xFFD
 18272                           pclath	equ	0xFFA
 18273                           tblptru	equ	0xFF8
 18274                           tblptrh	equ	0xFF7
 18275                           tblptrl	equ	0xFF6
 18276                           tablat	equ	0xFF5
 18277                           prodh	equ	0xFF4
 18278                           prodl	equ	0xFF3
 18279                           intcon	equ	0xFF2
 18280                           intcon2	equ	0xFF1
 18281                           intcon3	equ	0xFF0
 18282                           indf0	equ	0xFEF
 18283                           postinc0	equ	0xFEE
 18284                           plusw0	equ	0xFEB
 18285                           fsr0h	equ	0xFEA
 18286                           fsr0l	equ	0xFE9
 18287                           wreg	equ	0xFE8
 18288                           indf1	equ	0xFE7
 18289                           postinc1	equ	0xFE6
 18290                           postdec1	equ	0xFE5
 18291                           fsr1h	equ	0xFE2
 18292                           fsr1l	equ	0xFE1
 18293                           indf2	equ	0xFDF
 18294                           postinc2	equ	0xFDE
 18295                           postdec2	equ	0xFDD
 18296                           plusw2	equ	0xFDB
 18297                           fsr2h	equ	0xFDA
 18298                           fsr2l	equ	0xFD9
 18299                           status	equ	0xFD8
 18300                           
 18301 ;; *************** function _atoi *****************
 18302 ;; Defined at:
 18303 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18306 ;;		 -> Terminal@Len(4), 
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;  a               2   40[BANK0 ] int 
 18309 ;;  sign            1   39[BANK0 ] unsigned char 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  2   35[BANK0 ] int 
 18312 ;; Registers used:
 18313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        7 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:   12
 18326 ;; This function calls:
 18327 ;;		___wmul
 18328 ;;		_isdigit
 18329 ;; This function is called by:
 18330 ;;		_Terminal
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text76
 18335  00379A                     __ptext76:
 18336                           	opt stack 0
 18337  00379A                     _atoi:
 18338                           	opt stack 13
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;incstack = 0
 18342  00379A  D003               	goto	l3082
 18343  00379C  0100               	movlb	0	; () banked
 18344  00379E  4B83               	infsnz	atoi@s& (0+255),f,b
 18345  0037A0  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18346  0037A2                     l3082:
 18347                           
 18348                           ; BSR set to: 0
 18349  0037A2  C083  FFD9         	movff	atoi@s,fsr2l
 18350  0037A6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18351  0037AA  0E20               	movlw	32
 18352  0037AC  18DE               	xorwf	postinc2,w,c
 18353  0037AE  B4D8               	btfsc	status,2,c
 18354  0037B0  D7F5               	goto	l3083
 18355  0037B2  C083  FFD9         	movff	atoi@s,fsr2l
 18356  0037B6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18357  0037BA  0E09               	movlw	9
 18358  0037BC  18DE               	xorwf	postinc2,w,c
 18359  0037BE  B4D8               	btfsc	status,2,c
 18360  0037C0  D7ED               	goto	l3083
 18361  0037C2  0E00               	movlw	0
 18362  0037C4  0100               	movlb	0	; () banked
 18363  0037C6  6F89               	movwf	(atoi@a+1)& (0+255),b
 18364  0037C8  0E00               	movlw	0
 18365  0037CA  6F88               	movwf	atoi@a& (0+255),b
 18366  0037CC  0E00               	movlw	0
 18367  0037CE  6F87               	movwf	atoi@sign& (0+255),b
 18368                           
 18369                           ; BSR set to: 0
 18370  0037D0  C083  FFD9         	movff	atoi@s,fsr2l
 18371  0037D4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18372  0037D8  0E2D               	movlw	45
 18373  0037DA  18DE               	xorwf	postinc2,w,c
 18374  0037DC  A4D8               	btfss	status,2,c
 18375  0037DE  D002               	goto	l3085
 18376                           
 18377                           ; BSR set to: 0
 18378  0037E0  2B87               	incf	atoi@sign& (0+255),f,b
 18379  0037E2  D026               	goto	l14031
 18380  0037E4                     l3085:
 18381                           
 18382                           ; BSR set to: 0
 18383                           
 18384                           ; BSR set to: 0
 18385  0037E4  C083  FFD9         	movff	atoi@s,fsr2l
 18386  0037E8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18387  0037EC  0E2B               	movlw	43
 18388  0037EE  18DE               	xorwf	postinc2,w,c
 18389  0037F0  A4D8               	btfss	status,2,c
 18390  0037F2  D020               	goto	l3088
 18391  0037F4  D01D               	goto	l14031
 18392  0037F6                     
 18393                           ; BSR set to: 0
 18394  0037F6  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18395  0037FA  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18396  0037FE  0E00               	movlw	0
 18397  003800  0100               	movlb	0	; () banked
 18398  003802  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18399  003804  0E0A               	movlw	10
 18400  003806  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18401  003808  EC4D  F033         	call	___wmul	;wreg free
 18402  00380C  C083  FFD9         	movff	atoi@s,fsr2l
 18403  003810  C084  FFDA         	movff	atoi@s+1,fsr2h
 18404  003814  50DF               	movf	indf2,w,c
 18405  003816  0100               	movlb	0	; () banked
 18406  003818  6F85               	movwf	??_atoi& (0+255),b
 18407  00381A  6B86               	clrf	(??_atoi+1)& (0+255),b
 18408  00381C  517D               	movf	?___wmul& (0+255),w,b
 18409  00381E  2785               	addwf	??_atoi& (0+255),f,b
 18410  003820  517E               	movf	(?___wmul+1)& (0+255),w,b
 18411  003822  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18412  003824  0ED0               	movlw	208
 18413  003826  2585               	addwf	??_atoi& (0+255),w,b
 18414  003828  6F88               	movwf	atoi@a& (0+255),b
 18415  00382A  0EFF               	movlw	255
 18416  00382C  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18417  00382E  6F89               	movwf	(atoi@a+1)& (0+255),b
 18418  003830                     l14031:
 18419                           
 18420                           ; BSR set to: 0
 18421  003830  4B83               	infsnz	atoi@s& (0+255),f,b
 18422  003832  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18423  003834                     l3088:
 18424                           
 18425                           ; BSR set to: 0
 18426                           
 18427                           ; BSR set to: 0
 18428  003834  C083  FFD9         	movff	atoi@s,fsr2l
 18429  003838  C084  FFDA         	movff	atoi@s+1,fsr2h
 18430  00383C  50DF               	movf	indf2,w,c
 18431  00383E  EC00  F034         	call	_isdigit
 18432  003842  B0D8               	btfsc	status,0,c
 18433  003844  D7D8               	goto	l3089
 18434  003846  0100               	movlb	0	; () banked
 18435  003848  5187               	movf	atoi@sign& (0+255),w,b
 18436  00384A  B4D8               	btfsc	status,2,c
 18437  00384C  D00D               	goto	l3091
 18438                           
 18439                           ; BSR set to: 0
 18440  00384E  C088  F085         	movff	atoi@a,??_atoi
 18441  003852  C089  F086         	movff	atoi@a+1,??_atoi+1
 18442  003856  1F85               	comf	??_atoi& (0+255),f,b
 18443  003858  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18444  00385A  4B85               	infsnz	??_atoi& (0+255),f,b
 18445  00385C  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18446  00385E  C085  F083         	movff	??_atoi,?_atoi
 18447  003862  C086  F084         	movff	??_atoi+1,?_atoi+1
 18448  003866  0012               	return	
 18449  003868                     l3091:
 18450                           
 18451                           ; BSR set to: 0
 18452  003868  C088  F083         	movff	atoi@a,?_atoi
 18453  00386C  C089  F084         	movff	atoi@a+1,?_atoi+1
 18454                           
 18455                           ; BSR set to: 0
 18456  003870  0012               	return		;funcret
 18457  003872                     __end_of_atoi:
 18458                           	opt stack 0
 18459                           tosu	equ	0xFFF
 18460                           tosh	equ	0xFFE
 18461                           tosl	equ	0xFFD
 18462                           pclath	equ	0xFFA
 18463                           tblptru	equ	0xFF8
 18464                           tblptrh	equ	0xFF7
 18465                           tblptrl	equ	0xFF6
 18466                           tablat	equ	0xFF5
 18467                           prodh	equ	0xFF4
 18468                           prodl	equ	0xFF3
 18469                           intcon	equ	0xFF2
 18470                           intcon2	equ	0xFF1
 18471                           intcon3	equ	0xFF0
 18472                           indf0	equ	0xFEF
 18473                           postinc0	equ	0xFEE
 18474                           plusw0	equ	0xFEB
 18475                           fsr0h	equ	0xFEA
 18476                           fsr0l	equ	0xFE9
 18477                           wreg	equ	0xFE8
 18478                           indf1	equ	0xFE7
 18479                           postinc1	equ	0xFE6
 18480                           postdec1	equ	0xFE5
 18481                           fsr1h	equ	0xFE2
 18482                           fsr1l	equ	0xFE1
 18483                           indf2	equ	0xFDF
 18484                           postinc2	equ	0xFDE
 18485                           postdec2	equ	0xFDD
 18486                           plusw2	equ	0xFDB
 18487                           fsr2h	equ	0xFDA
 18488                           fsr2l	equ	0xFD9
 18489                           status	equ	0xFD8
 18490                           
 18491 ;; *************** function _isdigit *****************
 18492 ;; Defined at:
 18493 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;  c               1    wreg     unsigned char 
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;  c               1   31[BANK0 ] unsigned char 
 18498 ;; Return value:  Size  Location     Type
 18499 ;;		None               void
 18500 ;; Registers used:
 18501 ;;		wreg, status,2, status,0
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18511 ;;Total ram usage:        3 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; Hardware stack levels required when called:   11
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_atoi
 18518 ;;		_strtol
 18519 ;;		_xtoi
 18520 ;;		_isxdigit
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           	psect	text77
 18525  006800                     __ptext77:
 18526                           	opt stack 0
 18527  006800                     _isdigit:
 18528                           	opt stack 12
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;incstack = 0
 18532                           ;isdigit@c stored from wreg
 18533  006800  0100               	movlb	0	; () banked
 18534  006802  6F7F               	movwf	isdigit@c& (0+255),b
 18535  006804  0E00               	movlw	0
 18536  006806  0100               	movlb	0	; () banked
 18537  006808  6F7E               	movwf	_isdigit$6425& (0+255),b
 18538                           
 18539                           ; BSR set to: 0
 18540  00680A  0E3A               	movlw	58
 18541  00680C  617F               	cpfslt	isdigit@c& (0+255),b
 18542  00680E  D005               	goto	l3263
 18543                           
 18544                           ; BSR set to: 0
 18545  006810  0E2F               	movlw	47
 18546  006812  657F               	cpfsgt	isdigit@c& (0+255),b
 18547  006814  D002               	goto	l3263
 18548                           
 18549                           ; BSR set to: 0
 18550  006816  0E01               	movlw	1
 18551  006818  6F7E               	movwf	_isdigit$6425& (0+255),b
 18552  00681A                     l3263:
 18553                           
 18554                           ; BSR set to: 0
 18555                           
 18556                           ; BSR set to: 0
 18557  00681A  C07E  F07D         	movff	_isdigit$6425,??_isdigit
 18558  00681E  317D               	rrcf	??_isdigit& (0+255),w,b
 18559  006820  0012               	return	
 18560  006822                     __end_of_isdigit:
 18561                           	opt stack 0
 18562                           tosu	equ	0xFFF
 18563                           tosh	equ	0xFFE
 18564                           tosl	equ	0xFFD
 18565                           pclath	equ	0xFFA
 18566                           tblptru	equ	0xFF8
 18567                           tblptrh	equ	0xFF7
 18568                           tblptrl	equ	0xFF6
 18569                           tablat	equ	0xFF5
 18570                           prodh	equ	0xFF4
 18571                           prodl	equ	0xFF3
 18572                           intcon	equ	0xFF2
 18573                           intcon2	equ	0xFF1
 18574                           intcon3	equ	0xFF0
 18575                           indf0	equ	0xFEF
 18576                           postinc0	equ	0xFEE
 18577                           plusw0	equ	0xFEB
 18578                           fsr0h	equ	0xFEA
 18579                           fsr0l	equ	0xFE9
 18580                           wreg	equ	0xFE8
 18581                           indf1	equ	0xFE7
 18582                           postinc1	equ	0xFE6
 18583                           postdec1	equ	0xFE5
 18584                           fsr1h	equ	0xFE2
 18585                           fsr1l	equ	0xFE1
 18586                           indf2	equ	0xFDF
 18587                           postinc2	equ	0xFDE
 18588                           postdec2	equ	0xFDD
 18589                           plusw2	equ	0xFDB
 18590                           fsr2h	equ	0xFDA
 18591                           fsr2l	equ	0xFD9
 18592                           status	equ	0xFD8
 18593                           
 18594 ;; *************** function _Rtcm_SetRtccDate *****************
 18595 ;; Defined at:
 18596 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18597 ;; Parameters:    Size  Location     Type
 18598 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18599 ;; Auto vars:     Size  Location     Type
 18600 ;;		None
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  1    wreg      void 
 18603 ;; Registers used:
 18604 ;;		wreg, status,2, status,0, cstack
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;Total ram usage:        8 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; Hardware stack levels required when called:   13
 18617 ;; This function calls:
 18618 ;;		_Rtcc_LockRtc
 18619 ;;		_Rtcc_SetRtccValue
 18620 ;;		_Rtcc_UnlockRtc
 18621 ;; This function is called by:
 18622 ;;		_Rtcm_MainTask
 18623 ;; This function uses a non-reentrant model
 18624 ;;
 18625                           
 18626                           	psect	text78
 18627  005B56                     __ptext78:
 18628                           	opt stack 0
 18629  005B56                     _Rtcm_SetRtccDate:
 18630                           	opt stack 14
 18631                           
 18632                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;incstack = 0
 18636  005B56  EC44  F035         	call	_Rtcc_UnlockRtc	;wreg free
 18637                           
 18638                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18639  005B5A  0100               	movlb	0	; () banked
 18640  005B5C  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18641  005B5E  0F30               	addlw	48
 18642  005B60  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18643  005B62  0E00               	movlw	0
 18644  005B64  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18645                           
 18646                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18647  005B68  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18648  005B6C  0E01               	movlw	1
 18649  005B6E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18650                           
 18651                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18652  005B72  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18653  005B76  0E02               	movlw	2
 18654  005B78  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18655                           
 18656                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18657  005B7C  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18658  005B80  0E03               	movlw	3
 18659  005B82  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18660                           
 18661                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18662  005B86  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18663  005B8A  0E04               	movlw	4
 18664  005B8C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18665                           
 18666                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18667  005B90  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18668  005B94  0E05               	movlw	5
 18669  005B96  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18670                           
 18671                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18672  005B9A  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18673  005B9E  0E06               	movlw	6
 18674  005BA0  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18675                           
 18676                           ;rtcm.c: 191: Rtcc_LockRtc();
 18677  005BA4  EC4C  F035         	call	_Rtcc_LockRtc	;wreg free
 18678  005BA8  0012               	return		;funcret
 18679  005BAA                     __end_of_Rtcm_SetRtccDate:
 18680                           	opt stack 0
 18681                           tosu	equ	0xFFF
 18682                           tosh	equ	0xFFE
 18683                           tosl	equ	0xFFD
 18684                           pclath	equ	0xFFA
 18685                           tblptru	equ	0xFF8
 18686                           tblptrh	equ	0xFF7
 18687                           tblptrl	equ	0xFF6
 18688                           tablat	equ	0xFF5
 18689                           prodh	equ	0xFF4
 18690                           prodl	equ	0xFF3
 18691                           intcon	equ	0xFF2
 18692                           intcon2	equ	0xFF1
 18693                           intcon3	equ	0xFF0
 18694                           indf0	equ	0xFEF
 18695                           postinc0	equ	0xFEE
 18696                           plusw0	equ	0xFEB
 18697                           fsr0h	equ	0xFEA
 18698                           fsr0l	equ	0xFE9
 18699                           wreg	equ	0xFE8
 18700                           indf1	equ	0xFE7
 18701                           postinc1	equ	0xFE6
 18702                           postdec1	equ	0xFE5
 18703                           fsr1h	equ	0xFE2
 18704                           fsr1l	equ	0xFE1
 18705                           indf2	equ	0xFDF
 18706                           postinc2	equ	0xFDE
 18707                           postdec2	equ	0xFDD
 18708                           plusw2	equ	0xFDB
 18709                           fsr2h	equ	0xFDA
 18710                           fsr2l	equ	0xFD9
 18711                           status	equ	0xFD8
 18712                           
 18713 ;; *************** function _Rtcc_UnlockRtc *****************
 18714 ;; Defined at:
 18715 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18716 ;; Parameters:    Size  Location     Type
 18717 ;;		None
 18718 ;; Auto vars:     Size  Location     Type
 18719 ;;		None
 18720 ;; Return value:  Size  Location     Type
 18721 ;;                  1    wreg      void 
 18722 ;; Registers used:
 18723 ;;		None
 18724 ;; Tracked objects:
 18725 ;;		On entry : 0/0
 18726 ;;		On exit  : 0/0
 18727 ;;		Unchanged: 0/0
 18728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18733 ;;Total ram usage:        0 bytes
 18734 ;; Hardware stack levels used:    1
 18735 ;; Hardware stack levels required when called:   11
 18736 ;; This function calls:
 18737 ;;		Nothing
 18738 ;; This function is called by:
 18739 ;;		_Rtcm_MainTask
 18740 ;;		_Rtcm_SetRtccDate
 18741 ;;		_Rtcm_SetRtccAlarm
 18742 ;; This function uses a non-reentrant model
 18743 ;;
 18744                           
 18745                           	psect	text79
 18746  006A88                     __ptext79:
 18747                           	opt stack 0
 18748  006A88                     _Rtcc_UnlockRtc:
 18749                           	opt stack 15
 18750                           
 18751                           ;incstack = 0
 18752  006A88  010F               	movlb	15	;# 
 18753  006A8A  0E55               	movlw	85	;# 
 18754  006A8C  6EA7               	movwf	4007,c	;# 
 18755  006A8E  0EAA               	movlw	170	;# 
 18756  006A90  6EA7               	movwf	4007,c	;# 
 18757                           
 18758                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18759  006A92  010F               	movlb	15	; () banked
 18760  006A94  8B3F               	bsf	63,5,b	;volatile
 18761                           
 18762                           ; BSR set to: 15
 18763  006A96  0012               	return		;funcret
 18764  006A98                     __end_of_Rtcc_UnlockRtc:
 18765                           	opt stack 0
 18766                           tosu	equ	0xFFF
 18767                           tosh	equ	0xFFE
 18768                           tosl	equ	0xFFD
 18769                           pclath	equ	0xFFA
 18770                           tblptru	equ	0xFF8
 18771                           tblptrh	equ	0xFF7
 18772                           tblptrl	equ	0xFF6
 18773                           tablat	equ	0xFF5
 18774                           prodh	equ	0xFF4
 18775                           prodl	equ	0xFF3
 18776                           intcon	equ	0xFF2
 18777                           intcon2	equ	0xFF1
 18778                           intcon3	equ	0xFF0
 18779                           indf0	equ	0xFEF
 18780                           postinc0	equ	0xFEE
 18781                           plusw0	equ	0xFEB
 18782                           fsr0h	equ	0xFEA
 18783                           fsr0l	equ	0xFE9
 18784                           wreg	equ	0xFE8
 18785                           indf1	equ	0xFE7
 18786                           postinc1	equ	0xFE6
 18787                           postdec1	equ	0xFE5
 18788                           fsr1h	equ	0xFE2
 18789                           fsr1l	equ	0xFE1
 18790                           indf2	equ	0xFDF
 18791                           postinc2	equ	0xFDE
 18792                           postdec2	equ	0xFDD
 18793                           plusw2	equ	0xFDB
 18794                           fsr2h	equ	0xFDA
 18795                           fsr2l	equ	0xFD9
 18796                           status	equ	0xFD8
 18797                           
 18798 ;; *************** function _Rtcc_SetRtccValue *****************
 18799 ;; Defined at:
 18800 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18801 ;; Parameters:    Size  Location     Type
 18802 ;;  RtccPtrVal      1    wreg     enum E7757
 18803 ;;  Value           1   37[BANK0 ] unsigned char 
 18804 ;; Auto vars:     Size  Location     Type
 18805 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  1    wreg      void 
 18808 ;; Registers used:
 18809 ;;		wreg, status,2, status,0, cstack
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18815 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;Total ram usage:        4 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:   12
 18822 ;; This function calls:
 18823 ;;		___awdiv
 18824 ;;		___awmod
 18825 ;; This function is called by:
 18826 ;;		_Rtcm_SetRtccDate
 18827 ;; This function uses a non-reentrant model
 18828 ;;
 18829                           
 18830                           	psect	text80
 18831  0015EE                     __ptext80:
 18832                           	opt stack 0
 18833  0015EE                     _Rtcc_SetRtccValue:
 18834                           	opt stack 14
 18835                           
 18836                           ; BSR set to: 15
 18837                           ;incstack = 0
 18838                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18839  0015EE  0100               	movlb	0	; () banked
 18840  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18841                           
 18842                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18843  0015F2  D0FC               	goto	l441
 18844  0015F4                     l442:
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18848  0015F4  010F               	movlb	15	; () banked
 18849  0015F6  833F               	bsf	63,1,b	;volatile
 18850                           
 18851                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18852  0015F8  813F               	bsf	63,0,b	;volatile
 18853                           
 18854                           ; BSR set to: 15
 18855                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18856  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18857  0015FE  0100               	movlb	0	; () banked
 18858  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18859  001602  0E00               	movlw	0
 18860  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18861  001606  0E0A               	movlw	10
 18862  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18863  00160A  EC99  F029         	call	___awmod	;wreg free
 18864  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18865  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18866  001616  0E0F               	movlw	15
 18867  001618  0100               	movlb	0	; () banked
 18868  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18869  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18870  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18871  001622  0E00               	movlw	0
 18872  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18873  001626  0E0A               	movlw	10
 18874  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18875  00162A  ECD3  F028         	call	___awdiv	;wreg free
 18876  00162E  0100               	movlb	0	; () banked
 18877  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18878  001632  0BF0               	andlw	240
 18879  001634  0BF0               	andlw	240
 18880  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18881  001638  6E98               	movwf	3992,c	;volatile
 18882                           
 18883                           ;rtcc_drv.c: 393: break;
 18884  00163A  0012               	return	
 18885  00163C                     l444:
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18889  00163C  010F               	movlb	15	; () banked
 18890  00163E  833F               	bsf	63,1,b	;volatile
 18891                           
 18892                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18893  001640  913F               	bcf	63,0,b	;volatile
 18894                           
 18895                           ; BSR set to: 15
 18896                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18897  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18898  001646  0100               	movlb	0	; () banked
 18899  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18900  00164A  0E00               	movlw	0
 18901  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18902  00164E  0E0A               	movlw	10
 18903  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18904  001652  EC99  F029         	call	___awmod	;wreg free
 18905  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18906  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18907  00165E  0E0F               	movlw	15
 18908  001660  0100               	movlb	0	; () banked
 18909  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18910  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18911  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18912  00166A  0E00               	movlw	0
 18913  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18914  00166E  0E0A               	movlw	10
 18915  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18916  001672  ECD3  F028         	call	___awdiv	;wreg free
 18917  001676  0100               	movlb	0	; () banked
 18918  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18919  00167A  0BF0               	andlw	240
 18920  00167C  0BF0               	andlw	240
 18921  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18922  001680  6E99               	movwf	3993,c	;volatile
 18923                           
 18924                           ;rtcc_drv.c: 401: break;
 18925  001682  0012               	return	
 18926  001684                     l445:
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18930  001684  010F               	movlb	15	; () banked
 18931  001686  833F               	bsf	63,1,b	;volatile
 18932                           
 18933                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18934  001688  913F               	bcf	63,0,b	;volatile
 18935                           
 18936                           ; BSR set to: 15
 18937                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18938  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18939  00168E  0100               	movlb	0	; () banked
 18940  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18941  001692  0E00               	movlw	0
 18942  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18943  001696  0E0A               	movlw	10
 18944  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18945  00169A  EC99  F029         	call	___awmod	;wreg free
 18946  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18947  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18948  0016A6  0E0F               	movlw	15
 18949  0016A8  0100               	movlb	0	; () banked
 18950  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18951  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18952  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18953  0016B2  0E00               	movlw	0
 18954  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18955  0016B6  0E0A               	movlw	10
 18956  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18957  0016BA  ECD3  F028         	call	___awdiv	;wreg free
 18958  0016BE  0100               	movlb	0	; () banked
 18959  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18960  0016C2  0BF0               	andlw	240
 18961  0016C4  0BF0               	andlw	240
 18962  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18963  0016C8  6E98               	movwf	3992,c	;volatile
 18964                           
 18965                           ;rtcc_drv.c: 409: break;
 18966  0016CA  0012               	return	
 18967  0016CC                     l446:
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18971  0016CC  010F               	movlb	15	; () banked
 18972  0016CE  933F               	bcf	63,1,b	;volatile
 18973                           
 18974                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18975  0016D0  813F               	bsf	63,0,b	;volatile
 18976                           
 18977                           ; BSR set to: 15
 18978                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18979  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18980  0016D6  0100               	movlb	0	; () banked
 18981  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18982  0016DA  0E00               	movlw	0
 18983  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18984  0016DE  0E0A               	movlw	10
 18985  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18986  0016E2  EC99  F029         	call	___awmod	;wreg free
 18987  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18988  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18989  0016EE  0E0F               	movlw	15
 18990  0016F0  0100               	movlb	0	; () banked
 18991  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18992  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18993  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18994  0016FA  0E00               	movlw	0
 18995  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18996  0016FE  0E0A               	movlw	10
 18997  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18998  001702  ECD3  F028         	call	___awdiv	;wreg free
 18999  001706  0100               	movlb	0	; () banked
 19000  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19001  00170A  0BF0               	andlw	240
 19002  00170C  0BF0               	andlw	240
 19003  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19004  001710  6E99               	movwf	3993,c	;volatile
 19005                           
 19006                           ;rtcc_drv.c: 417: break;
 19007  001712  0012               	return	
 19008  001714                     l447:
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19012  001714  010F               	movlb	15	; () banked
 19013  001716  933F               	bcf	63,1,b	;volatile
 19014                           
 19015                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19016  001718  813F               	bsf	63,0,b	;volatile
 19017                           
 19018                           ; BSR set to: 15
 19019                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19020  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19021  00171E  0100               	movlb	0	; () banked
 19022  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19023  001722  0E00               	movlw	0
 19024  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19025  001726  0E0A               	movlw	10
 19026  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19027  00172A  EC99  F029         	call	___awmod	;wreg free
 19028  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19029  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19030  001736  0E0F               	movlw	15
 19031  001738  0100               	movlb	0	; () banked
 19032  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19033  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19034  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19035  001742  0E00               	movlw	0
 19036  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19037  001746  0E0A               	movlw	10
 19038  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19039  00174A  ECD3  F028         	call	___awdiv	;wreg free
 19040  00174E  0100               	movlb	0	; () banked
 19041  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19042  001752  0BF0               	andlw	240
 19043  001754  0BF0               	andlw	240
 19044  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19045  001758  6E98               	movwf	3992,c	;volatile
 19046                           
 19047                           ;rtcc_drv.c: 425: break;
 19048  00175A  0012               	return	
 19049  00175C                     l448:
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19053  00175C  010F               	movlb	15	; () banked
 19054  00175E  933F               	bcf	63,1,b	;volatile
 19055                           
 19056                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19057  001760  913F               	bcf	63,0,b	;volatile
 19058                           
 19059                           ; BSR set to: 15
 19060                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19061  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19062  001766  0100               	movlb	0	; () banked
 19063  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19064  00176A  0E00               	movlw	0
 19065  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19066  00176E  0E0A               	movlw	10
 19067  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19068  001772  EC99  F029         	call	___awmod	;wreg free
 19069  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19070  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19071  00177E  0E0F               	movlw	15
 19072  001780  0100               	movlb	0	; () banked
 19073  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19074  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19075  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19076  00178A  0E00               	movlw	0
 19077  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19078  00178E  0E0A               	movlw	10
 19079  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19080  001792  ECD3  F028         	call	___awdiv	;wreg free
 19081  001796  0100               	movlb	0	; () banked
 19082  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19083  00179A  0BF0               	andlw	240
 19084  00179C  0BF0               	andlw	240
 19085  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19086  0017A0  6E99               	movwf	3993,c	;volatile
 19087                           
 19088                           ;rtcc_drv.c: 433: break;
 19089  0017A2  0012               	return	
 19090  0017A4                     l449:
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19094  0017A4  010F               	movlb	15	; () banked
 19095  0017A6  933F               	bcf	63,1,b	;volatile
 19096                           
 19097                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19098  0017A8  913F               	bcf	63,0,b	;volatile
 19099                           
 19100                           ; BSR set to: 15
 19101                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19102  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19103  0017AE  0100               	movlb	0	; () banked
 19104  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19105  0017B2  0E00               	movlw	0
 19106  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19107  0017B6  0E0A               	movlw	10
 19108  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19109  0017BA  EC99  F029         	call	___awmod	;wreg free
 19110  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19111  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19112  0017C6  0E0F               	movlw	15
 19113  0017C8  0100               	movlb	0	; () banked
 19114  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19115  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19116  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19117  0017D2  0E00               	movlw	0
 19118  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19119  0017D6  0E0A               	movlw	10
 19120  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19121  0017DA  ECD3  F028         	call	___awdiv	;wreg free
 19122  0017DE  0100               	movlb	0	; () banked
 19123  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19124  0017E2  0BF0               	andlw	240
 19125  0017E4  0BF0               	andlw	240
 19126  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19127  0017E8  6E98               	movwf	3992,c	;volatile
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;rtcc_drv.c: 445: }
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;rtcc_drv.c: 444: break;
 19134                           
 19135                           ;rtcc_drv.c: 443: default:
 19136                           
 19137                           ;rtcc_drv.c: 441: break;
 19138  0017EA  0012               	return	
 19139  0017EC                     l441:
 19140                           
 19141                           ; BSR set to: 0
 19142  0017EC  0100               	movlb	0	; () banked
 19143  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19144                           
 19145                           ; Switch size 1, requested type "space"
 19146                           ; Number of cases is 7, Range of values is 0 to 6
 19147                           ; switch strategies available:
 19148                           ; Name         Instructions Cycles
 19149                           ; simple_byte           22    12 (average)
 19150                           ;	Chosen strategy is simple_byte
 19151  0017F0  0A00               	xorlw	0	; case 0
 19152  0017F2  B4D8               	btfsc	status,2,c
 19153  0017F4  D6FF               	goto	l442
 19154  0017F6  0A01               	xorlw	1	; case 1
 19155  0017F8  B4D8               	btfsc	status,2,c
 19156  0017FA  D720               	goto	l444
 19157  0017FC  0A03               	xorlw	3	; case 2
 19158  0017FE  B4D8               	btfsc	status,2,c
 19159  001800  D741               	goto	l445
 19160  001802  0A01               	xorlw	1	; case 3
 19161  001804  B4D8               	btfsc	status,2,c
 19162  001806  D762               	goto	l446
 19163  001808  0A07               	xorlw	7	; case 4
 19164  00180A  B4D8               	btfsc	status,2,c
 19165  00180C  D783               	goto	l447
 19166  00180E  0A01               	xorlw	1	; case 5
 19167  001810  B4D8               	btfsc	status,2,c
 19168  001812  D7A4               	goto	l448
 19169  001814  0A03               	xorlw	3	; case 6
 19170  001816  A4D8               	btfss	status,2,c
 19171  001818  0012               	return	
 19172  00181A  D7C4               	goto	l449
 19173  00181C                     __end_of_Rtcc_SetRtccValue:
 19174                           	opt stack 0
 19175                           tosu	equ	0xFFF
 19176                           tosh	equ	0xFFE
 19177                           tosl	equ	0xFFD
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           intcon2	equ	0xFF1
 19187                           intcon3	equ	0xFF0
 19188                           indf0	equ	0xFEF
 19189                           postinc0	equ	0xFEE
 19190                           plusw0	equ	0xFEB
 19191                           fsr0h	equ	0xFEA
 19192                           fsr0l	equ	0xFE9
 19193                           wreg	equ	0xFE8
 19194                           indf1	equ	0xFE7
 19195                           postinc1	equ	0xFE6
 19196                           postdec1	equ	0xFE5
 19197                           fsr1h	equ	0xFE2
 19198                           fsr1l	equ	0xFE1
 19199                           indf2	equ	0xFDF
 19200                           postinc2	equ	0xFDE
 19201                           postdec2	equ	0xFDD
 19202                           plusw2	equ	0xFDB
 19203                           fsr2h	equ	0xFDA
 19204                           fsr2l	equ	0xFD9
 19205                           status	equ	0xFD8
 19206                           
 19207 ;; *************** function ___awmod *****************
 19208 ;; Defined at:
 19209 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;  dividend        2   29[BANK0 ] int 
 19212 ;;  divisor         2   31[BANK0 ] int 
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;  sign            1   34[BANK0 ] unsigned char 
 19215 ;;  counter         1   33[BANK0 ] unsigned char 
 19216 ;; Return value:  Size  Location     Type
 19217 ;;                  2   29[BANK0 ] int 
 19218 ;; Registers used:
 19219 ;;		wreg, status,2, status,0
 19220 ;; Tracked objects:
 19221 ;;		On entry : 0/0
 19222 ;;		On exit  : 0/0
 19223 ;;		Unchanged: 0/0
 19224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19225 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19226 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19228 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19229 ;;Total ram usage:        6 bytes
 19230 ;; Hardware stack levels used:    1
 19231 ;; Hardware stack levels required when called:   11
 19232 ;; This function calls:
 19233 ;;		Nothing
 19234 ;; This function is called by:
 19235 ;;		_Rtcc_SetRtccValue
 19236 ;;		_Rtcc_SetRtccAlarm
 19237 ;; This function uses a non-reentrant model
 19238 ;;
 19239                           
 19240                           	psect	text81
 19241  005332                     __ptext81:
 19242                           	opt stack 0
 19243  005332                     ___awmod:
 19244                           	opt stack 14
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;incstack = 0
 19248  005332  0E00               	movlw	0
 19249  005334  0100               	movlb	0	; () banked
 19250  005336  6F82               	movwf	___awmod@sign& (0+255),b
 19251                           
 19252                           ; BSR set to: 0
 19253  005338  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19254  00533A  D006               	goto	l3114
 19255                           
 19256                           ; BSR set to: 0
 19257  00533C  6D7D               	negf	___awmod@dividend& (0+255),b
 19258  00533E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19259  005340  B0D8               	btfsc	status,0,c
 19260  005342  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19261                           
 19262                           ; BSR set to: 0
 19263  005344  0E01               	movlw	1
 19264  005346  6F82               	movwf	___awmod@sign& (0+255),b
 19265  005348                     l3114:
 19266                           
 19267                           ; BSR set to: 0
 19268                           
 19269                           ; BSR set to: 0
 19270  005348  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19271  00534A  D004               	goto	l3115
 19272                           
 19273                           ; BSR set to: 0
 19274  00534C  6D7F               	negf	___awmod@divisor& (0+255),b
 19275  00534E  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19276  005350  B0D8               	btfsc	status,0,c
 19277  005352  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19278  005354                     l3115:
 19279                           
 19280                           ; BSR set to: 0
 19281                           
 19282                           ; BSR set to: 0
 19283  005354  517F               	movf	___awmod@divisor& (0+255),w,b
 19284  005356  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19285  005358  B4D8               	btfsc	status,2,c
 19286  00535A  D018               	goto	l3122
 19287                           
 19288                           ; BSR set to: 0
 19289  00535C  0E01               	movlw	1
 19290  00535E  6F81               	movwf	___awmod@counter& (0+255),b
 19291  005360  D004               	goto	l3117
 19292  005362                     
 19293                           ; BSR set to: 0
 19294                           
 19295                           ; BSR set to: 0
 19296  005362  90D8               	bcf	status,0,c
 19297  005364  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19298  005366  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19299  005368  2B81               	incf	___awmod@counter& (0+255),f,b
 19300  00536A                     l3117:
 19301                           
 19302                           ; BSR set to: 0
 19303                           
 19304                           ; BSR set to: 0
 19305  00536A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19306  00536C  D7FA               	goto	l3118
 19307  00536E                     u13450:
 19308                           
 19309                           ; BSR set to: 0
 19310                           
 19311                           ; BSR set to: 0
 19312                           
 19313                           ; BSR set to: 0
 19314  00536E  517F               	movf	___awmod@divisor& (0+255),w,b
 19315  005370  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19316  005372  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19317  005374  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19318  005376  A0D8               	btfss	status,0,c
 19319  005378  D004               	goto	l3121
 19320                           
 19321                           ; BSR set to: 0
 19322  00537A  517F               	movf	___awmod@divisor& (0+255),w,b
 19323  00537C  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19324  00537E  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19325  005380  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19326  005382                     l3121:
 19327                           
 19328                           ; BSR set to: 0
 19329                           
 19330                           ; BSR set to: 0
 19331  005382  90D8               	bcf	status,0,c
 19332  005384  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19333  005386  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19334                           
 19335                           ; BSR set to: 0
 19336  005388  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19337  00538A  D7F1               	goto	u13450
 19338  00538C                     l3122:
 19339                           
 19340                           ; BSR set to: 0
 19341                           
 19342                           ; BSR set to: 0
 19343                           
 19344                           ; BSR set to: 0
 19345  00538C  5182               	movf	___awmod@sign& (0+255),w,b
 19346  00538E  B4D8               	btfsc	status,2,c
 19347  005390  D004               	goto	l3123
 19348                           
 19349                           ; BSR set to: 0
 19350  005392  6D7D               	negf	___awmod@dividend& (0+255),b
 19351  005394  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19352  005396  B0D8               	btfsc	status,0,c
 19353  005398  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19354  00539A                     l3123:
 19355                           
 19356                           ; BSR set to: 0
 19357                           
 19358                           ; BSR set to: 0
 19359  00539A  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19360  00539E  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19361  0053A2  0012               	return	
 19362  0053A4                     __end_of___awmod:
 19363                           	opt stack 0
 19364                           tosu	equ	0xFFF
 19365                           tosh	equ	0xFFE
 19366                           tosl	equ	0xFFD
 19367                           pclath	equ	0xFFA
 19368                           tblptru	equ	0xFF8
 19369                           tblptrh	equ	0xFF7
 19370                           tblptrl	equ	0xFF6
 19371                           tablat	equ	0xFF5
 19372                           prodh	equ	0xFF4
 19373                           prodl	equ	0xFF3
 19374                           intcon	equ	0xFF2
 19375                           intcon2	equ	0xFF1
 19376                           intcon3	equ	0xFF0
 19377                           indf0	equ	0xFEF
 19378                           postinc0	equ	0xFEE
 19379                           plusw0	equ	0xFEB
 19380                           fsr0h	equ	0xFEA
 19381                           fsr0l	equ	0xFE9
 19382                           wreg	equ	0xFE8
 19383                           indf1	equ	0xFE7
 19384                           postinc1	equ	0xFE6
 19385                           postdec1	equ	0xFE5
 19386                           fsr1h	equ	0xFE2
 19387                           fsr1l	equ	0xFE1
 19388                           indf2	equ	0xFDF
 19389                           postinc2	equ	0xFDE
 19390                           postdec2	equ	0xFDD
 19391                           plusw2	equ	0xFDB
 19392                           fsr2h	equ	0xFDA
 19393                           fsr2l	equ	0xFD9
 19394                           status	equ	0xFD8
 19395                           
 19396 ;; *************** function ___awdiv *****************
 19397 ;; Defined at:
 19398 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19399 ;; Parameters:    Size  Location     Type
 19400 ;;  dividend        2   29[BANK0 ] int 
 19401 ;;  divisor         2   31[BANK0 ] int 
 19402 ;; Auto vars:     Size  Location     Type
 19403 ;;  quotient        2   35[BANK0 ] int 
 19404 ;;  sign            1   34[BANK0 ] unsigned char 
 19405 ;;  counter         1   33[BANK0 ] unsigned char 
 19406 ;; Return value:  Size  Location     Type
 19407 ;;                  2   29[BANK0 ] int 
 19408 ;; Registers used:
 19409 ;;		wreg, status,2, status,0
 19410 ;; Tracked objects:
 19411 ;;		On entry : 0/0
 19412 ;;		On exit  : 0/0
 19413 ;;		Unchanged: 0/0
 19414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19419 ;;Total ram usage:        8 bytes
 19420 ;; Hardware stack levels used:    1
 19421 ;; Hardware stack levels required when called:   11
 19422 ;; This function calls:
 19423 ;;		Nothing
 19424 ;; This function is called by:
 19425 ;;		_Rtcc_SetRtccValue
 19426 ;;		_Rtcc_SetRtccAlarm
 19427 ;; This function uses a non-reentrant model
 19428 ;;
 19429                           
 19430                           	psect	text82
 19431  0051A6                     __ptext82:
 19432                           	opt stack 0
 19433  0051A6                     ___awdiv:
 19434                           	opt stack 14
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;incstack = 0
 19438  0051A6  0E00               	movlw	0
 19439  0051A8  0100               	movlb	0	; () banked
 19440  0051AA  6F82               	movwf	___awdiv@sign& (0+255),b
 19441                           
 19442                           ; BSR set to: 0
 19443  0051AC  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19444  0051AE  D006               	goto	l3101
 19445                           
 19446                           ; BSR set to: 0
 19447  0051B0  6D7F               	negf	___awdiv@divisor& (0+255),b
 19448  0051B2  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19449  0051B4  B0D8               	btfsc	status,0,c
 19450  0051B6  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19451                           
 19452                           ; BSR set to: 0
 19453  0051B8  0E01               	movlw	1
 19454  0051BA  6F82               	movwf	___awdiv@sign& (0+255),b
 19455  0051BC                     l3101:
 19456                           
 19457                           ; BSR set to: 0
 19458                           
 19459                           ; BSR set to: 0
 19460  0051BC  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19461  0051BE  D006               	goto	l3102
 19462                           
 19463                           ; BSR set to: 0
 19464  0051C0  6D7D               	negf	___awdiv@dividend& (0+255),b
 19465  0051C2  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19466  0051C4  B0D8               	btfsc	status,0,c
 19467  0051C6  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19468                           
 19469                           ; BSR set to: 0
 19470  0051C8  0E01               	movlw	1
 19471  0051CA  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19472  0051CC                     l3102:
 19473                           
 19474                           ; BSR set to: 0
 19475                           
 19476                           ; BSR set to: 0
 19477  0051CC  0E00               	movlw	0
 19478  0051CE  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19479  0051D0  0E00               	movlw	0
 19480  0051D2  6F83               	movwf	___awdiv@quotient& (0+255),b
 19481                           
 19482                           ; BSR set to: 0
 19483  0051D4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19484  0051D6  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19485  0051D8  B4D8               	btfsc	status,2,c
 19486  0051DA  D01C               	goto	l3109
 19487                           
 19488                           ; BSR set to: 0
 19489  0051DC  0E01               	movlw	1
 19490  0051DE  6F81               	movwf	___awdiv@counter& (0+255),b
 19491  0051E0  D004               	goto	l3104
 19492  0051E2                     
 19493                           ; BSR set to: 0
 19494                           
 19495                           ; BSR set to: 0
 19496  0051E2  90D8               	bcf	status,0,c
 19497  0051E4  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19498  0051E6  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19499  0051E8  2B81               	incf	___awdiv@counter& (0+255),f,b
 19500  0051EA                     l3104:
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505  0051EA  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19506  0051EC  D7FA               	goto	l3105
 19507  0051EE                     u13390:
 19508                           
 19509                           ; BSR set to: 0
 19510                           
 19511                           ; BSR set to: 0
 19512                           
 19513                           ; BSR set to: 0
 19514  0051EE  90D8               	bcf	status,0,c
 19515  0051F0  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19516  0051F2  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19517                           
 19518                           ; BSR set to: 0
 19519  0051F4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19520  0051F6  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19521  0051F8  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19522  0051FA  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19523  0051FC  A0D8               	btfss	status,0,c
 19524  0051FE  D005               	goto	l3108
 19525                           
 19526                           ; BSR set to: 0
 19527  005200  517F               	movf	___awdiv@divisor& (0+255),w,b
 19528  005202  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19529  005204  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19530  005206  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19531                           
 19532                           ; BSR set to: 0
 19533  005208  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19534  00520A                     l3108:
 19535                           
 19536                           ; BSR set to: 0
 19537                           
 19538                           ; BSR set to: 0
 19539  00520A  90D8               	bcf	status,0,c
 19540  00520C  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19541  00520E  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19542                           
 19543                           ; BSR set to: 0
 19544  005210  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19545  005212  D7ED               	goto	u13390
 19546  005214                     l3109:
 19547                           
 19548                           ; BSR set to: 0
 19549                           
 19550                           ; BSR set to: 0
 19551                           
 19552                           ; BSR set to: 0
 19553  005214  5182               	movf	___awdiv@sign& (0+255),w,b
 19554  005216  B4D8               	btfsc	status,2,c
 19555  005218  D004               	goto	l3110
 19556                           
 19557                           ; BSR set to: 0
 19558  00521A  6D83               	negf	___awdiv@quotient& (0+255),b
 19559  00521C  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19560  00521E  B0D8               	btfsc	status,0,c
 19561  005220  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19562  005222                     l3110:
 19563                           
 19564                           ; BSR set to: 0
 19565                           
 19566                           ; BSR set to: 0
 19567  005222  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19568  005226  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19569  00522A  0012               	return	
 19570  00522C                     __end_of___awdiv:
 19571                           	opt stack 0
 19572                           tosu	equ	0xFFF
 19573                           tosh	equ	0xFFE
 19574                           tosl	equ	0xFFD
 19575                           pclath	equ	0xFFA
 19576                           tblptru	equ	0xFF8
 19577                           tblptrh	equ	0xFF7
 19578                           tblptrl	equ	0xFF6
 19579                           tablat	equ	0xFF5
 19580                           prodh	equ	0xFF4
 19581                           prodl	equ	0xFF3
 19582                           intcon	equ	0xFF2
 19583                           intcon2	equ	0xFF1
 19584                           intcon3	equ	0xFF0
 19585                           indf0	equ	0xFEF
 19586                           postinc0	equ	0xFEE
 19587                           plusw0	equ	0xFEB
 19588                           fsr0h	equ	0xFEA
 19589                           fsr0l	equ	0xFE9
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postinc1	equ	0xFE6
 19593                           postdec1	equ	0xFE5
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           plusw2	equ	0xFDB
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _Rtcc_LockRtc *****************
 19605 ;; Defined at:
 19606 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		None
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;Total ram usage:        0 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:   11
 19627 ;; This function calls:
 19628 ;;		Nothing
 19629 ;; This function is called by:
 19630 ;;		_Rtcm_MainTask
 19631 ;;		_Rtcm_SetRtccDate
 19632 ;;		_Rtcm_SetRtccAlarm
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text83
 19637  006A98                     __ptext83:
 19638                           	opt stack 0
 19639  006A98                     _Rtcc_LockRtc:
 19640                           	opt stack 15
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;incstack = 0
 19644  006A98  010F               	movlb	15	;# 
 19645  006A9A  0E55               	movlw	85	;# 
 19646  006A9C  6EA7               	movwf	4007,c	;# 
 19647  006A9E  0EAA               	movlw	170	;# 
 19648  006AA0  6EA7               	movwf	4007,c	;# 
 19649                           
 19650                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19651  006AA2  010F               	movlb	15	; () banked
 19652  006AA4  9B3F               	bcf	63,5,b	;volatile
 19653                           
 19654                           ; BSR set to: 15
 19655  006AA6  0012               	return		;funcret
 19656  006AA8                     __end_of_Rtcc_LockRtc:
 19657                           	opt stack 0
 19658                           tosu	equ	0xFFF
 19659                           tosh	equ	0xFFE
 19660                           tosl	equ	0xFFD
 19661                           pclath	equ	0xFFA
 19662                           tblptru	equ	0xFF8
 19663                           tblptrh	equ	0xFF7
 19664                           tblptrl	equ	0xFF6
 19665                           tablat	equ	0xFF5
 19666                           prodh	equ	0xFF4
 19667                           prodl	equ	0xFF3
 19668                           intcon	equ	0xFF2
 19669                           intcon2	equ	0xFF1
 19670                           intcon3	equ	0xFF0
 19671                           indf0	equ	0xFEF
 19672                           postinc0	equ	0xFEE
 19673                           plusw0	equ	0xFEB
 19674                           fsr0h	equ	0xFEA
 19675                           fsr0l	equ	0xFE9
 19676                           wreg	equ	0xFE8
 19677                           indf1	equ	0xFE7
 19678                           postinc1	equ	0xFE6
 19679                           postdec1	equ	0xFE5
 19680                           fsr1h	equ	0xFE2
 19681                           fsr1l	equ	0xFE1
 19682                           indf2	equ	0xFDF
 19683                           postinc2	equ	0xFDE
 19684                           postdec2	equ	0xFDD
 19685                           plusw2	equ	0xFDB
 19686                           fsr2h	equ	0xFDA
 19687                           fsr2l	equ	0xFD9
 19688                           status	equ	0xFD8
 19689                           
 19690 ;; *************** function _Rtcm_GetRtccDate *****************
 19691 ;; Defined at:
 19692 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;		None
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19697 ;; Return value:  Size  Location     Type
 19698 ;;                  8   33[BANK0 ] struct _RtccDateType
 19699 ;; Registers used:
 19700 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19701 ;; Tracked objects:
 19702 ;;		On entry : 0/0
 19703 ;;		On exit  : 0/0
 19704 ;;		Unchanged: 0/0
 19705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19706 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19707 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19709 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19710 ;;Total ram usage:       17 bytes
 19711 ;; Hardware stack levels used:    1
 19712 ;; Hardware stack levels required when called:   12
 19713 ;; This function calls:
 19714 ;;		_Rtcc_GetRtccValue
 19715 ;; This function is called by:
 19716 ;;		_Rtcm_MainTask
 19717 ;; This function uses a non-reentrant model
 19718 ;;
 19719                           
 19720                           	psect	text84
 19721  005706                     __ptext84:
 19722                           	opt stack 0
 19723  005706                     _Rtcm_GetRtccDate:
 19724                           	opt stack 15
 19725                           
 19726                           ;rtcm.c: 204: RtccDateType LocalDate;
 19727                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19728                           
 19729                           ; BSR set to: 15
 19730                           ;incstack = 0
 19731  005706  0E00               	movlw	0
 19732  005708  EC22  F027         	call	_Rtcc_GetRtccValue
 19733  00570C  0100               	movlb	0	; () banked
 19734  00570E  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19735  005710  0ED0               	movlw	208
 19736  005712  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19737  005714  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19738  005716  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19739  005718  0E07               	movlw	7
 19740  00571A  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19741                           
 19742                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19743  00571C  0E01               	movlw	1
 19744  00571E  EC22  F027         	call	_Rtcc_GetRtccValue
 19745  005722  0100               	movlb	0	; () banked
 19746  005724  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19747                           
 19748                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19749  005726  0E02               	movlw	2
 19750  005728  EC22  F027         	call	_Rtcc_GetRtccValue
 19751  00572C  0100               	movlb	0	; () banked
 19752  00572E  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19753                           
 19754                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19755  005730  0E03               	movlw	3
 19756  005732  EC22  F027         	call	_Rtcc_GetRtccValue
 19757  005736  0100               	movlb	0	; () banked
 19758  005738  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19759                           
 19760                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19761  00573A  0E04               	movlw	4
 19762  00573C  EC22  F027         	call	_Rtcc_GetRtccValue
 19763  005740  0100               	movlb	0	; () banked
 19764  005742  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19765                           
 19766                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19767  005744  0E05               	movlw	5
 19768  005746  EC22  F027         	call	_Rtcc_GetRtccValue
 19769  00574A  0100               	movlb	0	; () banked
 19770  00574C  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19771                           
 19772                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19773  00574E  0E06               	movlw	6
 19774  005750  EC22  F027         	call	_Rtcc_GetRtccValue
 19775  005754  0100               	movlb	0	; () banked
 19776  005756  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;rtcm.c: 216: return LocalDate;
 19780  005758  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19781  00575C  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19782  005760  0E07               	movlw	7
 19783  005762                     u15871:
 19784  005762  CFDB FFEB          	movff	plusw2,plusw0
 19785  005766  06E8               	decf	wreg,f,c
 19786  005768  E2FC               	bc	u15871
 19787  00576A  0012               	return	
 19788  00576C                     __end_of_Rtcm_GetRtccDate:
 19789                           	opt stack 0
 19790                           tosu	equ	0xFFF
 19791                           tosh	equ	0xFFE
 19792                           tosl	equ	0xFFD
 19793                           pclath	equ	0xFFA
 19794                           tblptru	equ	0xFF8
 19795                           tblptrh	equ	0xFF7
 19796                           tblptrl	equ	0xFF6
 19797                           tablat	equ	0xFF5
 19798                           prodh	equ	0xFF4
 19799                           prodl	equ	0xFF3
 19800                           intcon	equ	0xFF2
 19801                           intcon2	equ	0xFF1
 19802                           intcon3	equ	0xFF0
 19803                           indf0	equ	0xFEF
 19804                           postinc0	equ	0xFEE
 19805                           plusw0	equ	0xFEB
 19806                           fsr0h	equ	0xFEA
 19807                           fsr0l	equ	0xFE9
 19808                           wreg	equ	0xFE8
 19809                           indf1	equ	0xFE7
 19810                           postinc1	equ	0xFE6
 19811                           postdec1	equ	0xFE5
 19812                           fsr1h	equ	0xFE2
 19813                           fsr1l	equ	0xFE1
 19814                           indf2	equ	0xFDF
 19815                           postinc2	equ	0xFDE
 19816                           postdec2	equ	0xFDD
 19817                           plusw2	equ	0xFDB
 19818                           fsr2h	equ	0xFDA
 19819                           fsr2l	equ	0xFD9
 19820                           status	equ	0xFD8
 19821                           
 19822 ;; *************** function _Rtcc_GetRtccValue *****************
 19823 ;; Defined at:
 19824 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19825 ;; Parameters:    Size  Location     Type
 19826 ;;  RtccPtrVal      1    wreg     enum E7757
 19827 ;; Auto vars:     Size  Location     Type
 19828 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19829 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19830 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1    wreg      unsigned char 
 19833 ;; Registers used:
 19834 ;;		wreg, status,2, status,0, prodl, prodh
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/0
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19843 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19844 ;;Total ram usage:        4 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:   11
 19847 ;; This function calls:
 19848 ;;		Nothing
 19849 ;; This function is called by:
 19850 ;;		_Rtcm_GetRtccDate
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           
 19854                           	psect	text85
 19855  004E44                     __ptext85:
 19856                           	opt stack 0
 19857  004E44                     _Rtcc_GetRtccValue:
 19858                           	opt stack 15
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;incstack = 0
 19862                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19863  004E44  0100               	movlb	0	; () banked
 19864  004E46  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19865                           
 19866                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19867                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19868                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19869  004E48  D02D               	goto	l416
 19870  004E4A                     l417:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19874  004E4A  010F               	movlb	15	; () banked
 19875  004E4C  833F               	bsf	63,1,b	;volatile
 19876  004E4E                     
 19877                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19878  004E4E  813F               	bsf	63,0,b	;volatile
 19879  004E50  D01C               	goto	L18
 19880  004E52                     l419:
 19881                           
 19882                           ; BSR set to: 0
 19883                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19884  004E52  010F               	movlb	15	; () banked
 19885  004E54  833F               	bsf	63,1,b	;volatile
 19886  004E56  D01E               	goto	L19
 19887  004E58                     l420:
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19891  004E58  010F               	movlb	15	; () banked
 19892  004E5A  833F               	bsf	63,1,b	;volatile
 19893  004E5C  D021               	goto	L22
 19894  004E5E                     l14463:
 19895                           
 19896                           ; BSR set to: 15
 19897                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19898  004E5E  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19899  004E62  0E0F               	movlw	15
 19900  004E64  0100               	movlb	0	; () banked
 19901  004E66  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19902  004E68  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19903  004E6A  0B0F               	andlw	15
 19904  004E6C  0B0F               	andlw	15
 19905  004E6E  0D0A               	mullw	10
 19906  004E70  50F3               	movf	prodl,w,c
 19907  004E72  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19908  004E74  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19909                           
 19910                           ;rtcc_drv.c: 241: break;
 19911  004E76  D02D               	goto	l418
 19912  004E78                     l421:
 19913                           
 19914                           ; BSR set to: 0
 19915                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19916  004E78  010F               	movlb	15	; () banked
 19917  004E7A  933F               	bcf	63,1,b	;volatile
 19918                           
 19919                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19920  004E7C  813F               	bsf	63,0,b	;volatile
 19921                           
 19922                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19923  004E7E  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19924                           
 19925                           ;rtcc_drv.c: 249: break;
 19926  004E82  D027               	goto	l418
 19927  004E84                     l422:
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19931  004E84  010F               	movlb	15	; () banked
 19932  004E86  933F               	bcf	63,1,b	;volatile
 19933  004E88  D7E2               	goto	L20
 19934  004E8A                     L18:
 19935                           
 19936                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19937  004E8A  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19938  004E8E  D7E7               	goto	l14463
 19939  004E90                     l423:
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19943  004E90  010F               	movlb	15	; () banked
 19944  004E92  933F               	bcf	63,1,b	;volatile
 19945  004E94                     L19:
 19946                           
 19947                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19948  004E94  913F               	bcf	63,0,b	;volatile
 19949                           
 19950                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19951  004E96  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19952  004E9A  D7E1               	goto	l14463
 19953  004E9C                     l424:
 19954                           
 19955                           ; BSR set to: 0
 19956                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19957  004E9C  010F               	movlb	15	; () banked
 19958  004E9E  933F               	bcf	63,1,b	;volatile
 19959  004EA0                     L22:
 19960                           
 19961                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19962  004EA0  913F               	bcf	63,0,b	;volatile
 19963  004EA2  D7F3               	goto	L18
 19964  004EA4                     l416:
 19965                           
 19966                           ; BSR set to: 0
 19967  004EA4  0100               	movlb	0	; () banked
 19968  004EA6  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19969                           
 19970                           ; Switch size 1, requested type "space"
 19971                           ; Number of cases is 7, Range of values is 0 to 6
 19972                           ; switch strategies available:
 19973                           ; Name         Instructions Cycles
 19974                           ; simple_byte           22    12 (average)
 19975                           ;	Chosen strategy is simple_byte
 19976  004EA8  0A00               	xorlw	0	; case 0
 19977  004EAA  B4D8               	btfsc	status,2,c
 19978  004EAC  D7CE               	goto	l417
 19979  004EAE  0A01               	xorlw	1	; case 1
 19980  004EB0  B4D8               	btfsc	status,2,c
 19981  004EB2  D7CF               	goto	l419
 19982  004EB4  0A03               	xorlw	3	; case 2
 19983  004EB6  B4D8               	btfsc	status,2,c
 19984  004EB8  D7CF               	goto	l420
 19985  004EBA  0A01               	xorlw	1	; case 3
 19986  004EBC  B4D8               	btfsc	status,2,c
 19987  004EBE  D7DC               	goto	l421
 19988  004EC0  0A07               	xorlw	7	; case 4
 19989  004EC2  B4D8               	btfsc	status,2,c
 19990  004EC4  D7DF               	goto	l422
 19991  004EC6  0A01               	xorlw	1	; case 5
 19992  004EC8  B4D8               	btfsc	status,2,c
 19993  004ECA  D7E2               	goto	l423
 19994  004ECC  0A03               	xorlw	3	; case 6
 19995  004ECE  B4D8               	btfsc	status,2,c
 19996  004ED0  D7E5               	goto	l424
 19997  004ED2                     l418:
 19998                           
 19999                           ;rtcc_drv.c: 286: return RetValue;
 20000                           
 20001                           ; BSR set to: 0
 20002  004ED2  0100               	movlb	0	; () banked
 20003  004ED4  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20004  004ED6  0012               	return	
 20005  004ED8                     __end_of_Rtcc_GetRtccValue:
 20006                           	opt stack 0
 20007                           tosu	equ	0xFFF
 20008                           tosh	equ	0xFFE
 20009                           tosl	equ	0xFFD
 20010                           pclath	equ	0xFFA
 20011                           tblptru	equ	0xFF8
 20012                           tblptrh	equ	0xFF7
 20013                           tblptrl	equ	0xFF6
 20014                           tablat	equ	0xFF5
 20015                           prodh	equ	0xFF4
 20016                           prodl	equ	0xFF3
 20017                           intcon	equ	0xFF2
 20018                           intcon2	equ	0xFF1
 20019                           intcon3	equ	0xFF0
 20020                           indf0	equ	0xFEF
 20021                           postinc0	equ	0xFEE
 20022                           plusw0	equ	0xFEB
 20023                           fsr0h	equ	0xFEA
 20024                           fsr0l	equ	0xFE9
 20025                           wreg	equ	0xFE8
 20026                           indf1	equ	0xFE7
 20027                           postinc1	equ	0xFE6
 20028                           postdec1	equ	0xFE5
 20029                           fsr1h	equ	0xFE2
 20030                           fsr1l	equ	0xFE1
 20031                           indf2	equ	0xFDF
 20032                           postinc2	equ	0xFDE
 20033                           postdec2	equ	0xFDD
 20034                           plusw2	equ	0xFDB
 20035                           fsr2h	equ	0xFDA
 20036                           fsr2l	equ	0xFD9
 20037                           status	equ	0xFD8
 20038                           
 20039 ;; *************** function _Rtcc_SetRtcStatus *****************
 20040 ;; Defined at:
 20041 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;  Status          1    wreg     unsigned char 
 20044 ;; Auto vars:     Size  Location     Type
 20045 ;;  Status          1   29[BANK0 ] unsigned char 
 20046 ;; Return value:  Size  Location     Type
 20047 ;;                  1    wreg      void 
 20048 ;; Registers used:
 20049 ;;		wreg
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20059 ;;Total ram usage:        1 bytes
 20060 ;; Hardware stack levels used:    1
 20061 ;; Hardware stack levels required when called:   11
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_Rtcm_MainTask
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text86
 20070  0069E6                     __ptext86:
 20071                           	opt stack 0
 20072  0069E6                     _Rtcc_SetRtcStatus:
 20073                           	opt stack 16
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;incstack = 0
 20077                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20078  0069E6  0100               	movlb	0	; () banked
 20079  0069E8  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20080                           
 20081                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20082  0069EA  0100               	movlb	0	; () banked
 20083  0069EC  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20084  0069EE  D003               	bra	u14795
 20085  0069F0  010F               	movlb	15	; () banked
 20086  0069F2  9F3F               	bcf	63,7,b	;volatile
 20087  0069F4  D002               	bra	u14796
 20088  0069F6                     u14795:
 20089  0069F6  010F               	movlb	15	; () banked
 20090  0069F8  8F3F               	bsf	63,7,b	;volatile
 20091  0069FA                     u14796:
 20092                           
 20093                           ; BSR set to: 15
 20094  0069FA  0012               	return		;funcret
 20095  0069FC                     __end_of_Rtcc_SetRtcStatus:
 20096                           	opt stack 0
 20097                           tosu	equ	0xFFF
 20098                           tosh	equ	0xFFE
 20099                           tosl	equ	0xFFD
 20100                           pclath	equ	0xFFA
 20101                           tblptru	equ	0xFF8
 20102                           tblptrh	equ	0xFF7
 20103                           tblptrl	equ	0xFF6
 20104                           tablat	equ	0xFF5
 20105                           prodh	equ	0xFF4
 20106                           prodl	equ	0xFF3
 20107                           intcon	equ	0xFF2
 20108                           intcon2	equ	0xFF1
 20109                           intcon3	equ	0xFF0
 20110                           indf0	equ	0xFEF
 20111                           postinc0	equ	0xFEE
 20112                           plusw0	equ	0xFEB
 20113                           fsr0h	equ	0xFEA
 20114                           fsr0l	equ	0xFE9
 20115                           wreg	equ	0xFE8
 20116                           indf1	equ	0xFE7
 20117                           postinc1	equ	0xFE6
 20118                           postdec1	equ	0xFE5
 20119                           fsr1h	equ	0xFE2
 20120                           fsr1l	equ	0xFE1
 20121                           indf2	equ	0xFDF
 20122                           postinc2	equ	0xFDE
 20123                           postdec2	equ	0xFDD
 20124                           plusw2	equ	0xFDB
 20125                           fsr2h	equ	0xFDA
 20126                           fsr2l	equ	0xFD9
 20127                           status	equ	0xFD8
 20128                           
 20129 ;; *************** function _Rtcc_RtcConfig *****************
 20130 ;; Defined at:
 20131 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20132 ;; Parameters:    Size  Location     Type
 20133 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20134 ;;		 -> RtcConfig(4), 
 20135 ;; Auto vars:     Size  Location     Type
 20136 ;;		None
 20137 ;; Return value:  Size  Location     Type
 20138 ;;                  1    wreg      void 
 20139 ;; Registers used:
 20140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20141 ;; Tracked objects:
 20142 ;;		On entry : 0/0
 20143 ;;		On exit  : 0/0
 20144 ;;		Unchanged: 0/0
 20145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20149 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20150 ;;Total ram usage:        3 bytes
 20151 ;; Hardware stack levels used:    1
 20152 ;; Hardware stack levels required when called:   12
 20153 ;; This function calls:
 20154 ;;		_RtccIrqInit
 20155 ;; This function is called by:
 20156 ;;		_Rtcm_MainTask
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           	psect	text87
 20161  00497C                     __ptext87:
 20162                           	opt stack 0
 20163  00497C                     _Rtcc_RtcConfig:
 20164                           	opt stack 15
 20165                           
 20166                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20167                           
 20168                           ; BSR set to: 15
 20169                           ;incstack = 0
 20170  00497C  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20171  004980  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20172  004984  50DF               	movf	indf2,w,c
 20173  004986  0100               	movlb	0	; () banked
 20174  004988  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20175  00498A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20176  00498C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20177  00498E  010F               	movlb	15	; () banked
 20178  004990  513F               	movf	63,w,b	;volatile
 20179  004992  0100               	movlb	0	; () banked
 20180  004994  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20181  004996  0BFB               	andlw	-5
 20182  004998  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20183  00499A  010F               	movlb	15	; () banked
 20184  00499C  6F3F               	movwf	63,b	;volatile
 20185                           
 20186                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20187  00499E  0100               	movlb	0	; () banked
 20188  0049A0  EE20 F001          	lfsr	2,1
 20189  0049A4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20190  0049A6  26D9               	addwf	fsr2l,f,c
 20191  0049A8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20192  0049AA  22DA               	addwfc	fsr2h,f,c
 20193  0049AC  50DF               	movf	indf2,w,c
 20194  0049AE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20195  0049B0  0E01               	movlw	1
 20196  0049B2  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20197  0049B4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20198  0049B6  010F               	movlb	15	; () banked
 20199  0049B8  513C               	movf	60,w,b	;volatile
 20200  0049BA  0100               	movlb	0	; () banked
 20201  0049BC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20202  0049BE  0BFD               	andlw	-3
 20203  0049C0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20204  0049C2  010F               	movlb	15	; () banked
 20205  0049C4  6F3C               	movwf	60,b	;volatile
 20206                           
 20207                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20208  0049C6  0100               	movlb	0	; () banked
 20209  0049C8  EE20 F001          	lfsr	2,1
 20210  0049CC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20211  0049CE  26D9               	addwf	fsr2l,f,c
 20212  0049D0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20213  0049D2  22DA               	addwfc	fsr2h,f,c
 20214  0049D4  50DF               	movf	indf2,w,c
 20215  0049D6  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20216  0049D8  90D8               	bcf	status,0,c
 20217  0049DA  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20218  0049DC  0E01               	movlw	1
 20219  0049DE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20220  0049E0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20221  0049E2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20222  0049E4  010F               	movlb	15	; () banked
 20223  0049E6  513C               	movf	60,w,b	;volatile
 20224  0049E8  0100               	movlb	0	; () banked
 20225  0049EA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20226  0049EC  0BFB               	andlw	-5
 20227  0049EE  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20228  0049F0  010F               	movlb	15	; () banked
 20229  0049F2  6F3C               	movwf	60,b	;volatile
 20230                           
 20231                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20232  0049F4  0100               	movlb	0	; () banked
 20233  0049F6  EE20 F002          	lfsr	2,2
 20234  0049FA  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20235  0049FC  26D9               	addwf	fsr2l,f,c
 20236  0049FE  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20237  004A00  22DA               	addwfc	fsr2h,f,c
 20238  004A02  04DE               	decf	postinc2,w,c
 20239  004A04  A4D8               	btfss	status,2,c
 20240  004A06  0012               	return	
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;rtcc_drv.c: 115: {
 20244                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20245  004A08  EE20 F003          	lfsr	2,3
 20246  004A0C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20247  004A0E  26D9               	addwf	fsr2l,f,c
 20248  004A10  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20249  004A12  22DA               	addwfc	fsr2h,f,c
 20250  004A14  50DF               	movf	indf2,w,c
 20251  004A16  ECFE  F034         	call	_RtccIrqInit
 20252  004A1A  0012               	return	
 20253  004A1C                     __end_of_Rtcc_RtcConfig:
 20254                           	opt stack 0
 20255                           tosu	equ	0xFFF
 20256                           tosh	equ	0xFFE
 20257                           tosl	equ	0xFFD
 20258                           pclath	equ	0xFFA
 20259                           tblptru	equ	0xFF8
 20260                           tblptrh	equ	0xFF7
 20261                           tblptrl	equ	0xFF6
 20262                           tablat	equ	0xFF5
 20263                           prodh	equ	0xFF4
 20264                           prodl	equ	0xFF3
 20265                           intcon	equ	0xFF2
 20266                           intcon2	equ	0xFF1
 20267                           intcon3	equ	0xFF0
 20268                           indf0	equ	0xFEF
 20269                           postinc0	equ	0xFEE
 20270                           plusw0	equ	0xFEB
 20271                           fsr0h	equ	0xFEA
 20272                           fsr0l	equ	0xFE9
 20273                           wreg	equ	0xFE8
 20274                           indf1	equ	0xFE7
 20275                           postinc1	equ	0xFE6
 20276                           postdec1	equ	0xFE5
 20277                           fsr1h	equ	0xFE2
 20278                           fsr1l	equ	0xFE1
 20279                           indf2	equ	0xFDF
 20280                           postinc2	equ	0xFDE
 20281                           postdec2	equ	0xFDD
 20282                           plusw2	equ	0xFDB
 20283                           fsr2h	equ	0xFDA
 20284                           fsr2l	equ	0xFD9
 20285                           status	equ	0xFD8
 20286                           
 20287 ;; *************** function _RtccIrqInit *****************
 20288 ;; Defined at:
 20289 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20290 ;; Parameters:    Size  Location     Type
 20291 ;;  Priority        1    wreg     enum E7716
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;  Priority        1   29[BANK0 ] enum E7716
 20294 ;; Return value:  Size  Location     Type
 20295 ;;                  1    wreg      void 
 20296 ;; Registers used:
 20297 ;;		wreg
 20298 ;; Tracked objects:
 20299 ;;		On entry : 0/0
 20300 ;;		On exit  : 0/0
 20301 ;;		Unchanged: 0/0
 20302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20307 ;;Total ram usage:        1 bytes
 20308 ;; Hardware stack levels used:    1
 20309 ;; Hardware stack levels required when called:   11
 20310 ;; This function calls:
 20311 ;;		Nothing
 20312 ;; This function is called by:
 20313 ;;		_Rtcc_RtcConfig
 20314 ;; This function uses a non-reentrant model
 20315 ;;
 20316                           
 20317                           	psect	text88
 20318  0069FC                     __ptext88:
 20319                           	opt stack 0
 20320  0069FC                     _RtccIrqInit:
 20321                           	opt stack 15
 20322                           
 20323                           ;incstack = 0
 20324                           ;RtccIrqInit@Priority stored from wreg
 20325  0069FC  0100               	movlb	0	; () banked
 20326  0069FE  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20327                           
 20328                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20329  006A00  90A4               	bcf	4004,0,c	;volatile
 20330                           
 20331                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20332  006A02  0100               	movlb	0	; () banked
 20333  006A04  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20334  006A06  D002               	bra	u13605
 20335  006A08  90A5               	bcf	4005,0,c	;volatile
 20336  006A0A  D001               	bra	u13606
 20337  006A0C                     u13605:
 20338  006A0C  80A5               	bsf	4005,0,c	;volatile
 20339  006A0E                     u13606:
 20340                           
 20341                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20342  006A0E  80A3               	bsf	4003,0,c	;volatile
 20343  006A10  0012               	return		;funcret
 20344  006A12                     __end_of_RtccIrqInit:
 20345                           	opt stack 0
 20346                           tosu	equ	0xFFF
 20347                           tosh	equ	0xFFE
 20348                           tosl	equ	0xFFD
 20349                           pclath	equ	0xFFA
 20350                           tblptru	equ	0xFF8
 20351                           tblptrh	equ	0xFF7
 20352                           tblptrl	equ	0xFF6
 20353                           tablat	equ	0xFF5
 20354                           prodh	equ	0xFF4
 20355                           prodl	equ	0xFF3
 20356                           intcon	equ	0xFF2
 20357                           intcon2	equ	0xFF1
 20358                           intcon3	equ	0xFF0
 20359                           indf0	equ	0xFEF
 20360                           postinc0	equ	0xFEE
 20361                           plusw0	equ	0xFEB
 20362                           fsr0h	equ	0xFEA
 20363                           fsr0l	equ	0xFE9
 20364                           wreg	equ	0xFE8
 20365                           indf1	equ	0xFE7
 20366                           postinc1	equ	0xFE6
 20367                           postdec1	equ	0xFE5
 20368                           fsr1h	equ	0xFE2
 20369                           fsr1l	equ	0xFE1
 20370                           indf2	equ	0xFDF
 20371                           postinc2	equ	0xFDE
 20372                           postdec2	equ	0xFDD
 20373                           plusw2	equ	0xFDB
 20374                           fsr2h	equ	0xFDA
 20375                           fsr2l	equ	0xFD9
 20376                           status	equ	0xFD8
 20377                           
 20378 ;; *************** function _Rtcc_AlarmConfig *****************
 20379 ;; Defined at:
 20380 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20383 ;;		 -> AlCfg(4), 
 20384 ;; Auto vars:     Size  Location     Type
 20385 ;;		None
 20386 ;; Return value:  Size  Location     Type
 20387 ;;                  1    wreg      void 
 20388 ;; Registers used:
 20389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20390 ;; Tracked objects:
 20391 ;;		On entry : 0/0
 20392 ;;		On exit  : 0/0
 20393 ;;		Unchanged: 0/0
 20394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20398 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20399 ;;Total ram usage:        3 bytes
 20400 ;; Hardware stack levels used:    1
 20401 ;; Hardware stack levels required when called:   11
 20402 ;; This function calls:
 20403 ;;		Nothing
 20404 ;; This function is called by:
 20405 ;;		_Rtcm_MainTask
 20406 ;; This function uses a non-reentrant model
 20407 ;;
 20408                           
 20409                           	psect	text89
 20410  005560                     __ptext89:
 20411                           	opt stack 0
 20412  005560                     _Rtcc_AlarmConfig:
 20413                           	opt stack 16
 20414                           
 20415                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20416                           
 20417                           ;incstack = 0
 20418  005560  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20419  005564  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20420  005568  50DF               	movf	indf2,w,c
 20421  00556A  0100               	movlb	0	; () banked
 20422  00556C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20423  00556E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20424  005570  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20425  005572  5091               	movf	3985,w,c	;volatile
 20426  005574  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20427  005576  0B7F               	andlw	-129
 20428  005578  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20429  00557A  6E91               	movwf	3985,c	;volatile
 20430                           
 20431                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20432  00557C  EE20 F001          	lfsr	2,1
 20433  005580  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20434  005582  26D9               	addwf	fsr2l,f,c
 20435  005584  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20436  005586  22DA               	addwfc	fsr2h,f,c
 20437  005588  50DF               	movf	indf2,w,c
 20438  00558A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20439  00558C  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20440  00558E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20441  005590  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20442  005592  5091               	movf	3985,w,c	;volatile
 20443  005594  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20444  005596  0BBF               	andlw	-65
 20445  005598  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20446  00559A  6E91               	movwf	3985,c	;volatile
 20447                           
 20448                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20449  00559C  EE20 F002          	lfsr	2,2
 20450  0055A0  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20451  0055A2  26D9               	addwf	fsr2l,f,c
 20452  0055A4  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20453  0055A6  22DA               	addwfc	fsr2h,f,c
 20454  0055A8  50DF               	movf	indf2,w,c
 20455  0055AA  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20456  0055AC  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20457  0055AE  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20458  0055B0  5091               	movf	3985,w,c	;volatile
 20459  0055B2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20460  0055B4  0BC3               	andlw	-61
 20461  0055B6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20462  0055B8  6E91               	movwf	3985,c	;volatile
 20463                           
 20464                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20465  0055BA  EE20 F003          	lfsr	2,3
 20466  0055BE  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20467  0055C0  26D9               	addwf	fsr2l,f,c
 20468  0055C2  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20469  0055C4  22DA               	addwfc	fsr2h,f,c
 20470  0055C6  50DF               	movf	indf2,w,c
 20471  0055C8  6E90               	movwf	3984,c	;volatile
 20472                           
 20473                           ; BSR set to: 0
 20474  0055CA  0012               	return		;funcret
 20475  0055CC                     __end_of_Rtcc_AlarmConfig:
 20476                           	opt stack 0
 20477                           tosu	equ	0xFFF
 20478                           tosh	equ	0xFFE
 20479                           tosl	equ	0xFFD
 20480                           pclath	equ	0xFFA
 20481                           tblptru	equ	0xFF8
 20482                           tblptrh	equ	0xFF7
 20483                           tblptrl	equ	0xFF6
 20484                           tablat	equ	0xFF5
 20485                           prodh	equ	0xFF4
 20486                           prodl	equ	0xFF3
 20487                           intcon	equ	0xFF2
 20488                           intcon2	equ	0xFF1
 20489                           intcon3	equ	0xFF0
 20490                           indf0	equ	0xFEF
 20491                           postinc0	equ	0xFEE
 20492                           plusw0	equ	0xFEB
 20493                           fsr0h	equ	0xFEA
 20494                           fsr0l	equ	0xFE9
 20495                           wreg	equ	0xFE8
 20496                           indf1	equ	0xFE7
 20497                           postinc1	equ	0xFE6
 20498                           postdec1	equ	0xFE5
 20499                           fsr1h	equ	0xFE2
 20500                           fsr1l	equ	0xFE1
 20501                           indf2	equ	0xFDF
 20502                           postinc2	equ	0xFDE
 20503                           postdec2	equ	0xFDD
 20504                           plusw2	equ	0xFDB
 20505                           fsr2h	equ	0xFDA
 20506                           fsr2l	equ	0xFD9
 20507                           status	equ	0xFD8
 20508                           
 20509 ;; *************** function _triggerCmdFsm *****************
 20510 ;; Defined at:
 20511 ;;		line 83 in file "../Source/c/04_App/app_triggerCmd.c"
 20512 ;; Parameters:    Size  Location     Type
 20513 ;;  receivedNumb    2   41[BANK0 ] PTR unsigned char 
 20514 ;;		 -> receivedNumber(13), 
 20515 ;; Auto vars:     Size  Location     Type
 20516 ;;  numberInMemo    1   44[BANK0 ] unsigned char 
 20517 ;;  isComplete      1   43[BANK0 ] unsigned char 
 20518 ;; Return value:  Size  Location     Type
 20519 ;;                  1    wreg      unsigned char 
 20520 ;; Registers used:
 20521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20522 ;; Tracked objects:
 20523 ;;		On entry : 0/0
 20524 ;;		On exit  : 0/0
 20525 ;;		Unchanged: 0/0
 20526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20531 ;;Total ram usage:        4 bytes
 20532 ;; Hardware stack levels used:    1
 20533 ;; Hardware stack levels required when called:   14
 20534 ;; This function calls:
 20535 ;;		_triggerRelay
 20536 ;; This function is called by:
 20537 ;;		_MyApp_Task
 20538 ;; This function uses a non-reentrant model
 20539 ;;
 20540                           
 20541                           	psect	text90
 20542  0055CC                     __ptext90:
 20543                           	opt stack 0
 20544  0055CC                     _triggerCmdFsm:
 20545                           	opt stack 13
 20546                           
 20547                           ;app_triggerCmd.c: 85: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_NUMBER;
 20548                           ;app_triggerCmd.c: 86: bool isComplete = 0;
 20549                           
 20550                           ; BSR set to: 0
 20551                           ;incstack = 0
 20552  0055CC  0E00               	movlw	0
 20553  0055CE  0100               	movlb	0	; () banked
 20554  0055D0  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20555                           
 20556                           ;app_triggerCmd.c: 87: uint8_t numberInMemory = 1;
 20557  0055D2  0E01               	movlw	1
 20558  0055D4  6F8C               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20559                           
 20560                           ;app_triggerCmd.c: 89: switch (currentState)
 20561  0055D6  D01F               	goto	l2887
 20562  0055D8                     
 20563                           ;app_triggerCmd.c: 94: if (numberInMemory == 1)
 20564                           
 20565                           ; BSR set to: 0
 20566  0055D8  0100               	movlb	0	; () banked
 20567  0055DA  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20568  0055DC  A4D8               	btfss	status,2,c
 20569  0055DE  D002               	goto	l2889
 20570  0055E0                     u16170:
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;app_triggerCmd.c: 95: {
 20574                           ;app_triggerCmd.c: 96: currentState = TRIGGER_FSM_COMPLETE;
 20575  0055E0  0E03               	movlw	3
 20576  0055E2  D016               	goto	L26
 20577  0055E4                     l2889:
 20578                           
 20579                           ;app_triggerCmd.c: 98: else if (numberInMemory != 0 && numberInMemory != 1)
 20580                           
 20581                           ; BSR set to: 1
 20582  0055E4  0100               	movlb	0	; () banked
 20583  0055E6  518C               	movf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20584  0055E8  B4D8               	btfsc	status,2,c
 20585  0055EA  D023               	goto	l2892
 20586                           
 20587                           ; BSR set to: 0
 20588  0055EC  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20589  0055EE  B4D8               	btfsc	status,2,c
 20590  0055F0  D020               	goto	l2892
 20591                           
 20592                           ; BSR set to: 0
 20593                           ;app_triggerCmd.c: 99: {
 20594                           ;app_triggerCmd.c: 100: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20595  0055F2  0E01               	movlw	1
 20596  0055F4  D00D               	goto	L26
 20597  0055F6                     
 20598                           ; BSR set to: 1
 20599                           ;app_triggerCmd.c: 105: triggerRelay(1);
 20600                           
 20601                           ; BSR set to: 1
 20602  0055F6  0E01               	movlw	1
 20603  0055F8  ECE2  F031         	call	_triggerRelay
 20604                           
 20605                           ;app_triggerCmd.c: 106: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20606  0055FC  0E02               	movlw	2
 20607  0055FE  D008               	goto	L26
 20608  005600                     
 20609                           ; BSR set to: 1
 20610                           ;app_triggerCmd.c: 111: triggerRelay(0);
 20611                           
 20612                           ; BSR set to: 1
 20613  005600  0E00               	movlw	0
 20614  005602  ECE2  F031         	call	_triggerRelay
 20615  005606  D7EC               	goto	u16170
 20616  005608                     
 20617                           ; BSR set to: 1
 20618                           ;app_triggerCmd.c: 116: isComplete = 1;
 20619                           
 20620                           ; BSR set to: 1
 20621  005608  0E01               	movlw	1
 20622  00560A  0100               	movlb	0	; () banked
 20623  00560C  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20624                           
 20625                           ;app_triggerCmd.c: 117: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20626  00560E  0E00               	movlw	0
 20627  005610                     L26:
 20628  005610  0101               	movlb	1	; () banked
 20629  005612  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20630                           
 20631                           ; BSR set to: 1
 20632                           ;app_triggerCmd.c: 122: }
 20633                           
 20634                           ; BSR set to: 1
 20635                           ;app_triggerCmd.c: 121: break;
 20636                           
 20637                           ;app_triggerCmd.c: 120: default:
 20638                           
 20639                           ;app_triggerCmd.c: 118: break;
 20640  005614  D00E               	goto	l2892
 20641  005616                     l2887:
 20642                           
 20643                           ; BSR set to: 1
 20644  005616  0101               	movlb	1	; () banked
 20645  005618  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20646                           
 20647                           ; Switch size 1, requested type "space"
 20648                           ; Number of cases is 4, Range of values is 0 to 3
 20649                           ; switch strategies available:
 20650                           ; Name         Instructions Cycles
 20651                           ; simple_byte           13     7 (average)
 20652                           ;	Chosen strategy is simple_byte
 20653  00561A  0A00               	xorlw	0	; case 0
 20654  00561C  B4D8               	btfsc	status,2,c
 20655  00561E  D7DC               	goto	l2888
 20656  005620  0A01               	xorlw	1	; case 1
 20657  005622  B4D8               	btfsc	status,2,c
 20658  005624  D7E8               	goto	l2893
 20659  005626  0A03               	xorlw	3	; case 2
 20660  005628  B4D8               	btfsc	status,2,c
 20661  00562A  D7EA               	goto	l2894
 20662  00562C  0A01               	xorlw	1	; case 3
 20663  00562E  B4D8               	btfsc	status,2,c
 20664  005630  D7EB               	goto	l2895
 20665  005632                     l2892:
 20666                           
 20667                           ;app_triggerCmd.c: 123: return isComplete;
 20668                           
 20669                           ; BSR set to: 1
 20670  005632  0100               	movlb	0	; () banked
 20671  005634  518B               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20672  005636  0012               	return	
 20673  005638                     __end_of_triggerCmdFsm:
 20674                           	opt stack 0
 20675                           tosu	equ	0xFFF
 20676                           tosh	equ	0xFFE
 20677                           tosl	equ	0xFFD
 20678                           pclath	equ	0xFFA
 20679                           tblptru	equ	0xFF8
 20680                           tblptrh	equ	0xFF7
 20681                           tblptrl	equ	0xFF6
 20682                           tablat	equ	0xFF5
 20683                           prodh	equ	0xFF4
 20684                           prodl	equ	0xFF3
 20685                           intcon	equ	0xFF2
 20686                           intcon2	equ	0xFF1
 20687                           intcon3	equ	0xFF0
 20688                           indf0	equ	0xFEF
 20689                           postinc0	equ	0xFEE
 20690                           plusw0	equ	0xFEB
 20691                           fsr0h	equ	0xFEA
 20692                           fsr0l	equ	0xFE9
 20693                           wreg	equ	0xFE8
 20694                           indf1	equ	0xFE7
 20695                           postinc1	equ	0xFE6
 20696                           postdec1	equ	0xFE5
 20697                           fsr1h	equ	0xFE2
 20698                           fsr1l	equ	0xFE1
 20699                           indf2	equ	0xFDF
 20700                           postinc2	equ	0xFDE
 20701                           postdec2	equ	0xFDD
 20702                           plusw2	equ	0xFDB
 20703                           fsr2h	equ	0xFDA
 20704                           fsr2l	equ	0xFD9
 20705                           status	equ	0xFD8
 20706                           
 20707 ;; *************** function _triggerRelay *****************
 20708 ;; Defined at:
 20709 ;;		line 64 in file "../Source/c/04_App/app_triggerCmd.c"
 20710 ;; Parameters:    Size  Location     Type
 20711 ;;  isRelayOn       1    wreg     unsigned char 
 20712 ;; Auto vars:     Size  Location     Type
 20713 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20714 ;;  txBuffer        2   39[BANK0 ] unsigned char [2]
 20715 ;;  res             1   37[BANK0 ] unsigned char 
 20716 ;; Return value:  Size  Location     Type
 20717 ;;                  1    wreg      unsigned char 
 20718 ;; Registers used:
 20719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20720 ;; Tracked objects:
 20721 ;;		On entry : 0/0
 20722 ;;		On exit  : 0/0
 20723 ;;		Unchanged: 0/0
 20724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20726 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20728 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20729 ;;Total ram usage:        4 bytes
 20730 ;; Hardware stack levels used:    1
 20731 ;; Hardware stack levels required when called:   13
 20732 ;; This function calls:
 20733 ;;		_I2cSlv_SendI2cMsg
 20734 ;; This function is called by:
 20735 ;;		_triggerCmdFsm
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           	psect	text91
 20740  0063C4                     __ptext91:
 20741                           	opt stack 0
 20742  0063C4                     _triggerRelay:
 20743                           	opt stack 13
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;incstack = 0
 20747                           ;triggerRelay@isRelayOn stored from wreg
 20748  0063C4  0100               	movlb	0	; () banked
 20749  0063C6  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20750                           
 20751                           ;app_triggerCmd.c: 66: uint8_t txBuffer[2] = {0x50, 0x00};
 20752  0063C8  C3D2  F087         	movff	triggerRelay@F9012,triggerRelay@txBuffer
 20753  0063CC  C3D3  F088         	movff	triggerRelay@F9012+1,triggerRelay@txBuffer+1
 20754                           
 20755                           ;app_triggerCmd.c: 67: uint8_t res = 0u;
 20756  0063D0  0E00               	movlw	0
 20757  0063D2  0100               	movlb	0	; () banked
 20758  0063D4  6F85               	movwf	triggerRelay@res& (0+255),b
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;app_triggerCmd.c: 68: if (isRelayOn)
 20762  0063D6  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20763  0063D8  B4D8               	btfsc	status,2,c
 20764  0063DA  D002               	goto	l2881
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;app_triggerCmd.c: 69: {
 20768                           ;app_triggerCmd.c: 70: txBuffer[1] = 0x01;
 20769  0063DC  0E01               	movlw	1
 20770  0063DE  6F88               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20771  0063E0                     l2881:
 20772                           
 20773                           ; BSR set to: 0
 20774                           ;app_triggerCmd.c: 71: }
 20775                           ;app_triggerCmd.c: 72: res = I2cSlv_SendI2cMsg(txBuffer, 1, 2);
 20776                           
 20777                           ; BSR set to: 0
 20778  0063E0  0E87               	movlw	low triggerRelay@txBuffer
 20779  0063E2  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20780  0063E4  0E00               	movlw	high triggerRelay@txBuffer
 20781  0063E6  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20782  0063E8  0E01               	movlw	1
 20783  0063EA  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20784  0063EC  0E02               	movlw	2
 20785  0063EE  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20786  0063F0  EC2E  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 20787  0063F4  0100               	movlb	0	; () banked
 20788  0063F6  6F85               	movwf	triggerRelay@res& (0+255),b
 20789  0063F8  0012               	return	
 20790  0063FA                     __end_of_triggerRelay:
 20791                           	opt stack 0
 20792                           tosu	equ	0xFFF
 20793                           tosh	equ	0xFFE
 20794                           tosl	equ	0xFFD
 20795                           pclath	equ	0xFFA
 20796                           tblptru	equ	0xFF8
 20797                           tblptrh	equ	0xFF7
 20798                           tblptrl	equ	0xFF6
 20799                           tablat	equ	0xFF5
 20800                           prodh	equ	0xFF4
 20801                           prodl	equ	0xFF3
 20802                           intcon	equ	0xFF2
 20803                           intcon2	equ	0xFF1
 20804                           intcon3	equ	0xFF0
 20805                           indf0	equ	0xFEF
 20806                           postinc0	equ	0xFEE
 20807                           plusw0	equ	0xFEB
 20808                           fsr0h	equ	0xFEA
 20809                           fsr0l	equ	0xFE9
 20810                           wreg	equ	0xFE8
 20811                           indf1	equ	0xFE7
 20812                           postinc1	equ	0xFE6
 20813                           postdec1	equ	0xFE5
 20814                           fsr1h	equ	0xFE2
 20815                           fsr1l	equ	0xFE1
 20816                           indf2	equ	0xFDF
 20817                           postinc2	equ	0xFDE
 20818                           postdec2	equ	0xFDD
 20819                           plusw2	equ	0xFDB
 20820                           fsr2h	equ	0xFDA
 20821                           fsr2l	equ	0xFD9
 20822                           status	equ	0xFD8
 20823                           
 20824 ;; *************** function _initFsm *****************
 20825 ;; Defined at:
 20826 ;;		line 225 in file "../Source/c/04_App/app_init.c"
 20827 ;; Parameters:    Size  Location     Type
 20828 ;;		None
 20829 ;; Auto vars:     Size  Location     Type
 20830 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20831 ;; Return value:  Size  Location     Type
 20832 ;;                  1    wreg      unsigned char 
 20833 ;; Registers used:
 20834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20835 ;; Tracked objects:
 20836 ;;		On entry : 0/0
 20837 ;;		On exit  : 0/0
 20838 ;;		Unchanged: 0/0
 20839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20841 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20843 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20844 ;;Total ram usage:        1 bytes
 20845 ;; Hardware stack levels used:    1
 20846 ;; Hardware stack levels required when called:   18
 20847 ;; This function calls:
 20848 ;;		_GetCallerNumber
 20849 ;;		_Led_SetLedStatus
 20850 ;;		_initEeprom
 20851 ;;		_initGprsModem
 20852 ;;		_saveNumberInMemory
 20853 ;;		_savePreamble
 20854 ;;		_waitSetupCall
 20855 ;; This function is called by:
 20856 ;;		_MyApp_Task
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text92
 20861  0046E2                     __ptext92:
 20862                           	opt stack 0
 20863  0046E2                     _initFsm:
 20864                           	opt stack 9
 20865                           
 20866                           ;app_init.c: 227: static initFsmStates currentState = INIT_FSM_MODEM;
 20867                           ;app_init.c: 228: bool isInitialized = 0;
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;incstack = 0
 20871  0046E2  0E00               	movlw	0
 20872  0046E4  0101               	movlb	1	; () banked
 20873  0046E6  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20874                           
 20875                           ;app_init.c: 230: switch (currentState)
 20876  0046E8  D03D               	goto	l2696
 20877  0046EA                     
 20878                           ; BSR set to: 1
 20879                           ;app_init.c: 233: if (initGprsModem())
 20880                           
 20881                           ; BSR set to: 1
 20882  0046EA  EC6C  F027         	call	_initGprsModem	;wreg free
 20883  0046EE  0900               	iorlw	0
 20884  0046F0  B4D8               	btfsc	status,2,c
 20885  0046F2  D048               	goto	l2699
 20886                           
 20887                           ;app_init.c: 234: {
 20888                           ;app_init.c: 235: currentState = INIT_FSM_EEPROM;
 20889  0046F4  0E01               	movlw	1
 20890  0046F6  D027               	goto	L30
 20891  0046F8                     
 20892                           ; BSR set to: 1
 20893                           ;app_init.c: 240: if (initEeprom())
 20894                           
 20895                           ; BSR set to: 1
 20896  0046F8  ECB6  F027         	call	_initEeprom	;wreg free
 20897  0046FC  0900               	iorlw	0
 20898  0046FE  B4D8               	btfsc	status,2,c
 20899  004700  D041               	goto	l2699
 20900                           
 20901                           ;app_init.c: 241: {
 20902                           ;app_init.c: 242: currentState = INIT_FSM_WAIT_CMD;
 20903  004702  0E02               	movlw	2
 20904  004704  0101               	movlb	1	; () banked
 20905  004706  6FD6               	movwf	initFsm@currentState& (0+255),b
 20906                           
 20907                           ;app_init.c: 243: setupCallTicks = 0;
 20908  004708  0E00               	movlw	0
 20909  00470A  0103               	movlb	3	; () banked
 20910  00470C  6FC3               	movwf	(_setupCallTicks+1)& (0+255),b
 20911  00470E  0E00               	movlw	0
 20912  004710  6FC2               	movwf	_setupCallTicks& (0+255),b
 20913                           
 20914                           ; BSR set to: 3
 20915                           ;app_init.c: 244: }
 20916                           ;app_init.c: 245: break;
 20917  004712  D038               	goto	l2699
 20918  004714                     
 20919                           ;app_init.c: 248: if (isMemoryEmpty)
 20920                           
 20921                           ; BSR set to: 3
 20922  004714  0101               	movlb	1	; () banked
 20923  004716  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 20924  004718  B4D8               	btfsc	status,2,c
 20925  00471A  D010               	goto	l2703
 20926                           
 20927                           ; BSR set to: 1
 20928                           ;app_init.c: 249: {
 20929                           ;app_init.c: 250: if (waitSetupCall())
 20930  00471C  EC1D  F02F         	call	_waitSetupCall	;wreg free
 20931  004720  0900               	iorlw	0
 20932  004722  B4D8               	btfsc	status,2,c
 20933  004724  D02F               	goto	l2699
 20934                           
 20935                           ;app_init.c: 251: {
 20936                           ;app_init.c: 252: saveNumberInMemory(16, GetCallerNumber());
 20937  004726  ECFD  F031         	call	_GetCallerNumber	;wreg free
 20938  00472A  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 20939  00472E  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 20940  004732  0E10               	movlw	16
 20941  004734  ECC2  F034         	call	_saveNumberInMemory
 20942                           
 20943                           ;app_init.c: 253: currentState = INIT_FSM_PREAMBLE;
 20944  004738  0E03               	movlw	3
 20945  00473A  D005               	goto	L30
 20946  00473C                     l2703:
 20947                           
 20948                           ; BSR set to: 1
 20949                           ;app_init.c: 257: else
 20950                           ;app_init.c: 258: {
 20951                           ;app_init.c: 259: currentState = INIT_FSM_COMPLETE;
 20952                           
 20953                           ; BSR set to: 1
 20954  00473C  0E04               	movlw	4
 20955  00473E  D004               	goto	L29
 20956  004740                     
 20957                           ; BSR set to: 1
 20958                           ;app_init.c: 264: savePreamble();
 20959                           
 20960                           ; BSR set to: 1
 20961  004740  ECB5  F034         	call	_savePreamble	;wreg free
 20962                           
 20963                           ;app_init.c: 265: currentState = INIT_FSM_COMPLETE;
 20964  004744  0E04               	movlw	4
 20965  004746                     L30:
 20966  004746  0101               	movlb	1	; () banked
 20967  004748                     L29:
 20968  004748  6FD6               	movwf	initFsm@currentState& (0+255),b
 20969                           
 20970                           ;app_init.c: 266: break;
 20971  00474A  D01C               	goto	l2699
 20972  00474C                     
 20973                           ; BSR set to: 1
 20974                           ;app_init.c: 269: Led_SetLedStatus(1u, LED_STS_ON);
 20975                           
 20976                           ; BSR set to: 1
 20977  00474C  0E01               	movlw	1
 20978  00474E  0100               	movlb	0	; () banked
 20979  004750  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20980  004752  0E01               	movlw	1
 20981  004754  ECC7  F032         	call	_Led_SetLedStatus
 20982                           
 20983                           ;app_init.c: 270: currentState = INIT_FSM_MODEM;
 20984  004758  0E00               	movlw	0
 20985  00475A  0101               	movlb	1	; () banked
 20986  00475C  6FD6               	movwf	initFsm@currentState& (0+255),b
 20987                           
 20988                           ; BSR set to: 1
 20989                           ;app_init.c: 271: isInitialized = 1;
 20990  00475E  0E01               	movlw	1
 20991  004760  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20992                           
 20993                           ; BSR set to: 1
 20994                           ;app_init.c: 276: }
 20995                           
 20996                           ; BSR set to: 1
 20997                           ;app_init.c: 275: break;
 20998                           
 20999                           ;app_init.c: 274: default:
 21000                           
 21001                           ;app_init.c: 272: break;
 21002  004762  D010               	goto	l2699
 21003  004764                     l2696:
 21004                           
 21005                           ; BSR set to: 1
 21006                           
 21007                           ; BSR set to: 1
 21008  004764  51D6               	movf	initFsm@currentState& (0+255),w,b
 21009                           
 21010                           ; Switch size 1, requested type "space"
 21011                           ; Number of cases is 5, Range of values is 0 to 4
 21012                           ; switch strategies available:
 21013                           ; Name         Instructions Cycles
 21014                           ; simple_byte           16     9 (average)
 21015                           ;	Chosen strategy is simple_byte
 21016  004766  0A00               	xorlw	0	; case 0
 21017  004768  B4D8               	btfsc	status,2,c
 21018  00476A  D7BF               	goto	l2697
 21019  00476C  0A01               	xorlw	1	; case 1
 21020  00476E  B4D8               	btfsc	status,2,c
 21021  004770  D7C3               	goto	l2700
 21022  004772  0A03               	xorlw	3	; case 2
 21023  004774  B4D8               	btfsc	status,2,c
 21024  004776  D7CE               	goto	l2702
 21025  004778  0A01               	xorlw	1	; case 3
 21026  00477A  B4D8               	btfsc	status,2,c
 21027  00477C  D7E1               	goto	l2706
 21028  00477E  0A07               	xorlw	7	; case 4
 21029  004780  B4D8               	btfsc	status,2,c
 21030  004782  D7E4               	goto	l2707
 21031  004784                     l2699:
 21032                           
 21033                           ;app_init.c: 277: return isInitialized;
 21034                           
 21035                           ; BSR set to: 1
 21036  004784  0101               	movlb	1	; () banked
 21037  004786  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21038  004788  0012               	return	
 21039  00478A                     __end_of_initFsm:
 21040                           	opt stack 0
 21041                           tosu	equ	0xFFF
 21042                           tosh	equ	0xFFE
 21043                           tosl	equ	0xFFD
 21044                           pclath	equ	0xFFA
 21045                           tblptru	equ	0xFF8
 21046                           tblptrh	equ	0xFF7
 21047                           tblptrl	equ	0xFF6
 21048                           tablat	equ	0xFF5
 21049                           prodh	equ	0xFF4
 21050                           prodl	equ	0xFF3
 21051                           intcon	equ	0xFF2
 21052                           intcon2	equ	0xFF1
 21053                           intcon3	equ	0xFF0
 21054                           indf0	equ	0xFEF
 21055                           postinc0	equ	0xFEE
 21056                           plusw0	equ	0xFEB
 21057                           fsr0h	equ	0xFEA
 21058                           fsr0l	equ	0xFE9
 21059                           wreg	equ	0xFE8
 21060                           indf1	equ	0xFE7
 21061                           postinc1	equ	0xFE6
 21062                           postdec1	equ	0xFE5
 21063                           fsr1h	equ	0xFE2
 21064                           fsr1l	equ	0xFE1
 21065                           indf2	equ	0xFDF
 21066                           postinc2	equ	0xFDE
 21067                           postdec2	equ	0xFDD
 21068                           plusw2	equ	0xFDB
 21069                           fsr2h	equ	0xFDA
 21070                           fsr2l	equ	0xFD9
 21071                           status	equ	0xFD8
 21072                           
 21073 ;; *************** function _waitSetupCall *****************
 21074 ;; Defined at:
 21075 ;;		line 195 in file "../Source/c/04_App/app_init.c"
 21076 ;; Parameters:    Size  Location     Type
 21077 ;;		None
 21078 ;; Auto vars:     Size  Location     Type
 21079 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      unsigned char 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21093 ;;Total ram usage:        1 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; Hardware stack levels required when called:   15
 21096 ;; This function calls:
 21097 ;;		_Led_SetLedStatus
 21098 ;;		_getSetupCall
 21099 ;;		_secondsAppTimer
 21100 ;; This function is called by:
 21101 ;;		_initFsm
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text93
 21106  005E3A                     __ptext93:
 21107                           	opt stack 0
 21108  005E3A                     _waitSetupCall:
 21109                           	opt stack 11
 21110                           
 21111                           ;app_init.c: 197: bool isCallArrived = 0;
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;incstack = 0
 21115  005E3A  0E00               	movlw	0
 21116  005E3C  0100               	movlb	0	; () banked
 21117  005E3E  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;app_init.c: 198: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21121  005E40  0EC2               	movlw	low _setupCallTicks
 21122  005E42  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21123  005E44  0E03               	movlw	high _setupCallTicks
 21124  005E46  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21125  005E48  0E00               	movlw	0
 21126  005E4A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21127  005E4C  0E1E               	movlw	30
 21128  005E4E  EC6D  F024         	call	_secondsAppTimer
 21129  005E52  0900               	iorlw	0
 21130  005E54  A4D8               	btfss	status,2,c
 21131  005E56  D00F               	goto	l2685
 21132                           
 21133                           ;app_init.c: 199: {
 21134                           ;app_init.c: 200: Led_SetLedStatus(1u, LED_STS_BLINK);
 21135  005E58  0E03               	movlw	3
 21136  005E5A  0100               	movlb	0	; () banked
 21137  005E5C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21138  005E5E  0E01               	movlw	1
 21139  005E60  ECC7  F032         	call	_Led_SetLedStatus
 21140                           
 21141                           ;app_init.c: 201: if (getSetupCall())
 21142  005E64  EC32  F034         	call	_getSetupCall	;wreg free
 21143  005E68  0900               	iorlw	0
 21144  005E6A  B4D8               	btfsc	status,2,c
 21145  005E6C  D00A               	goto	l2687
 21146                           
 21147                           ;app_init.c: 202: {
 21148                           ;app_init.c: 203: isCallArrived = 1;
 21149  005E6E  0E01               	movlw	1
 21150  005E70  0100               	movlb	0	; () banked
 21151  005E72  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;app_init.c: 204: }
 21155                           ;app_init.c: 205: }
 21156  005E74  D006               	goto	l2687
 21157  005E76                     l2685:
 21158                           
 21159                           ;app_init.c: 206: else
 21160                           ;app_init.c: 207: {
 21161                           ;app_init.c: 208: Led_SetLedStatus(1u, LED_STS_ON);
 21162                           
 21163                           ; BSR set to: 0
 21164  005E76  0E01               	movlw	1
 21165  005E78  0100               	movlb	0	; () banked
 21166  005E7A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21167  005E7C  0E01               	movlw	1
 21168  005E7E  ECC7  F032         	call	_Led_SetLedStatus
 21169  005E82                     l2687:
 21170                           
 21171                           ;app_init.c: 209: }
 21172                           ;app_init.c: 210: return isCallArrived;
 21173  005E82  0100               	movlb	0	; () banked
 21174  005E84  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21175  005E86  0012               	return	
 21176  005E88                     __end_of_waitSetupCall:
 21177                           	opt stack 0
 21178                           tosu	equ	0xFFF
 21179                           tosh	equ	0xFFE
 21180                           tosl	equ	0xFFD
 21181                           pclath	equ	0xFFA
 21182                           tblptru	equ	0xFF8
 21183                           tblptrh	equ	0xFF7
 21184                           tblptrl	equ	0xFF6
 21185                           tablat	equ	0xFF5
 21186                           prodh	equ	0xFF4
 21187                           prodl	equ	0xFF3
 21188                           intcon	equ	0xFF2
 21189                           intcon2	equ	0xFF1
 21190                           intcon3	equ	0xFF0
 21191                           indf0	equ	0xFEF
 21192                           postinc0	equ	0xFEE
 21193                           plusw0	equ	0xFEB
 21194                           fsr0h	equ	0xFEA
 21195                           fsr0l	equ	0xFE9
 21196                           wreg	equ	0xFE8
 21197                           indf1	equ	0xFE7
 21198                           postinc1	equ	0xFE6
 21199                           postdec1	equ	0xFE5
 21200                           fsr1h	equ	0xFE2
 21201                           fsr1l	equ	0xFE1
 21202                           indf2	equ	0xFDF
 21203                           postinc2	equ	0xFDE
 21204                           postdec2	equ	0xFDD
 21205                           plusw2	equ	0xFDB
 21206                           fsr2h	equ	0xFDA
 21207                           fsr2l	equ	0xFD9
 21208                           status	equ	0xFD8
 21209                           
 21210 ;; *************** function _getSetupCall *****************
 21211 ;; Defined at:
 21212 ;;		line 179 in file "../Source/c/04_App/app_init.c"
 21213 ;; Parameters:    Size  Location     Type
 21214 ;;		None
 21215 ;; Auto vars:     Size  Location     Type
 21216 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21217 ;; Return value:  Size  Location     Type
 21218 ;;                  1    wreg      unsigned char 
 21219 ;; Registers used:
 21220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21221 ;; Tracked objects:
 21222 ;;		On entry : 0/0
 21223 ;;		On exit  : 0/0
 21224 ;;		Unchanged: 0/0
 21225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21229 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21230 ;;Total ram usage:        1 bytes
 21231 ;; Hardware stack levels used:    1
 21232 ;; Hardware stack levels required when called:   14
 21233 ;; This function calls:
 21234 ;;		_Mdm_HangPhoneCall
 21235 ;;		_Mdm_IsRinging
 21236 ;; This function is called by:
 21237 ;;		_waitSetupCall
 21238 ;; This function uses a non-reentrant model
 21239 ;;
 21240                           
 21241                           	psect	text94
 21242  006864                     __ptext94:
 21243                           	opt stack 0
 21244  006864                     _getSetupCall:
 21245                           	opt stack 11
 21246                           
 21247                           ;app_init.c: 181: bool isCalledReceived = 0;
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;incstack = 0
 21251  006864  0E00               	movlw	0
 21252  006866  0100               	movlb	0	; () banked
 21253  006868  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21254                           
 21255                           ; BSR set to: 0
 21256                           ;app_init.c: 183: if (Mdm_IsRinging())
 21257  00686A  EC98  F033         	call	_Mdm_IsRinging	;wreg free
 21258  00686E  0900               	iorlw	0
 21259  006870  B4D8               	btfsc	status,2,c
 21260  006872  D005               	goto	l2681
 21261                           
 21262                           ;app_init.c: 184: {
 21263                           ;app_init.c: 185: Mdm_HangPhoneCall();
 21264  006874  EC32  F035         	call	_Mdm_HangPhoneCall	;wreg free
 21265                           
 21266                           ;app_init.c: 186: isCalledReceived = 1;
 21267  006878  0E01               	movlw	1
 21268  00687A  0100               	movlb	0	; () banked
 21269  00687C  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21270  00687E                     l2681:
 21271                           
 21272                           ;app_init.c: 187: }
 21273                           ;app_init.c: 188: return isCalledReceived;
 21274                           
 21275                           ; BSR set to: 0
 21276  00687E  0100               	movlb	0	; () banked
 21277  006880  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21278  006882  0012               	return	
 21279  006884                     __end_of_getSetupCall:
 21280                           	opt stack 0
 21281                           tosu	equ	0xFFF
 21282                           tosh	equ	0xFFE
 21283                           tosl	equ	0xFFD
 21284                           pclath	equ	0xFFA
 21285                           tblptru	equ	0xFF8
 21286                           tblptrh	equ	0xFF7
 21287                           tblptrl	equ	0xFF6
 21288                           tablat	equ	0xFF5
 21289                           prodh	equ	0xFF4
 21290                           prodl	equ	0xFF3
 21291                           intcon	equ	0xFF2
 21292                           intcon2	equ	0xFF1
 21293                           intcon3	equ	0xFF0
 21294                           indf0	equ	0xFEF
 21295                           postinc0	equ	0xFEE
 21296                           plusw0	equ	0xFEB
 21297                           fsr0h	equ	0xFEA
 21298                           fsr0l	equ	0xFE9
 21299                           wreg	equ	0xFE8
 21300                           indf1	equ	0xFE7
 21301                           postinc1	equ	0xFE6
 21302                           postdec1	equ	0xFE5
 21303                           fsr1h	equ	0xFE2
 21304                           fsr1l	equ	0xFE1
 21305                           indf2	equ	0xFDF
 21306                           postinc2	equ	0xFDE
 21307                           postdec2	equ	0xFDD
 21308                           plusw2	equ	0xFDB
 21309                           fsr2h	equ	0xFDA
 21310                           fsr2l	equ	0xFD9
 21311                           status	equ	0xFD8
 21312                           
 21313 ;; *************** function _savePreamble *****************
 21314 ;; Defined at:
 21315 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21316 ;; Parameters:    Size  Location     Type
 21317 ;;		None
 21318 ;; Auto vars:     Size  Location     Type
 21319 ;;		None
 21320 ;; Return value:  Size  Location     Type
 21321 ;;                  1    wreg      void 
 21322 ;; Registers used:
 21323 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21324 ;; Tracked objects:
 21325 ;;		On entry : 0/0
 21326 ;;		On exit  : 0/0
 21327 ;;		Unchanged: 0/0
 21328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21333 ;;Total ram usage:        0 bytes
 21334 ;; Hardware stack levels used:    1
 21335 ;; Hardware stack levels required when called:   14
 21336 ;; This function calls:
 21337 ;;		_Eeprom_Write
 21338 ;;		_initPreamble
 21339 ;; This function is called by:
 21340 ;;		_initFsm
 21341 ;; This function uses a non-reentrant model
 21342 ;;
 21343                           
 21344                           	psect	text95
 21345  00696A                     __ptext95:
 21346                           	opt stack 0
 21347  00696A                     _savePreamble:
 21348                           	opt stack 12
 21349                           
 21350                           ;app_init.c: 215: Eeprom_Write(0, initPreamble(), 4);
 21351                           
 21352                           ; BSR set to: 0
 21353                           ;incstack = 0
 21354  00696A  EC70  F034         	call	_initPreamble	;wreg free
 21355  00696E  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21356  006972  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21357  006976  0E04               	movlw	4
 21358  006978  0100               	movlb	0	; () banked
 21359  00697A  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21360  00697C  0E00               	movlw	0
 21361  00697E  EC53  F02E         	call	_Eeprom_Write
 21362  006982  0012               	return		;funcret
 21363  006984                     __end_of_savePreamble:
 21364                           	opt stack 0
 21365                           tosu	equ	0xFFF
 21366                           tosh	equ	0xFFE
 21367                           tosl	equ	0xFFD
 21368                           pclath	equ	0xFFA
 21369                           tblptru	equ	0xFF8
 21370                           tblptrh	equ	0xFF7
 21371                           tblptrl	equ	0xFF6
 21372                           tablat	equ	0xFF5
 21373                           prodh	equ	0xFF4
 21374                           prodl	equ	0xFF3
 21375                           intcon	equ	0xFF2
 21376                           intcon2	equ	0xFF1
 21377                           intcon3	equ	0xFF0
 21378                           indf0	equ	0xFEF
 21379                           postinc0	equ	0xFEE
 21380                           plusw0	equ	0xFEB
 21381                           fsr0h	equ	0xFEA
 21382                           fsr0l	equ	0xFE9
 21383                           wreg	equ	0xFE8
 21384                           indf1	equ	0xFE7
 21385                           postinc1	equ	0xFE6
 21386                           postdec1	equ	0xFE5
 21387                           fsr1h	equ	0xFE2
 21388                           fsr1l	equ	0xFE1
 21389                           indf2	equ	0xFDF
 21390                           postinc2	equ	0xFDE
 21391                           postdec2	equ	0xFDD
 21392                           plusw2	equ	0xFDB
 21393                           fsr2h	equ	0xFDA
 21394                           fsr2l	equ	0xFD9
 21395                           status	equ	0xFD8
 21396                           
 21397 ;; *************** function _initPreamble *****************
 21398 ;; Defined at:
 21399 ;;		line 285 in file "../Source/c/04_App/app_init.c"
 21400 ;; Parameters:    Size  Location     Type
 21401 ;;		None
 21402 ;; Auto vars:     Size  Location     Type
 21403 ;;		None
 21404 ;; Return value:  Size  Location     Type
 21405 ;;                  2   29[BANK0 ] PTR unsigned char 
 21406 ;; Registers used:
 21407 ;;		wreg, status,2, status,0
 21408 ;; Tracked objects:
 21409 ;;		On entry : 0/0
 21410 ;;		On exit  : 0/0
 21411 ;;		Unchanged: 0/0
 21412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21417 ;;Total ram usage:        2 bytes
 21418 ;; Hardware stack levels used:    1
 21419 ;; Hardware stack levels required when called:   11
 21420 ;; This function calls:
 21421 ;;		Nothing
 21422 ;; This function is called by:
 21423 ;;		_savePreamble
 21424 ;; This function uses a non-reentrant model
 21425 ;;
 21426                           
 21427                           	psect	text96
 21428  0068E0                     __ptext96:
 21429                           	opt stack 0
 21430  0068E0                     _initPreamble:
 21431                           	opt stack 14
 21432                           
 21433                           ;app_init.c: 287: memoryPreamble[0] = 'U';
 21434                           
 21435                           ;incstack = 0
 21436  0068E0  0E55               	movlw	85
 21437  0068E2  0103               	movlb	3	; () banked
 21438  0068E4  6FAC               	movwf	_memoryPreamble& (0+255),b
 21439                           
 21440                           ;app_init.c: 288: memoryPreamble[1] = 'S';
 21441  0068E6  0E53               	movlw	83
 21442  0068E8  6FAD               	movwf	(_memoryPreamble+1)& (0+255),b
 21443                           
 21444                           ;app_init.c: 289: memoryPreamble[2] = 'I';
 21445  0068EA  0E49               	movlw	73
 21446  0068EC  6FAE               	movwf	(_memoryPreamble+2)& (0+255),b
 21447                           
 21448                           ;app_init.c: 290: memoryPreamble[3] = 'M';
 21449  0068EE  0E4D               	movlw	77
 21450  0068F0  6FAF               	movwf	(_memoryPreamble+3)& (0+255),b
 21451                           
 21452                           ; BSR set to: 3
 21453                           ;app_init.c: 291: return memoryPreamble;
 21454  0068F2  0EAC               	movlw	low _memoryPreamble
 21455  0068F4  0100               	movlb	0	; () banked
 21456  0068F6  6F7D               	movwf	?_initPreamble& (0+255),b
 21457  0068F8  0E03               	movlw	high _memoryPreamble
 21458  0068FA  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21459  0068FC  0012               	return	
 21460  0068FE                     __end_of_initPreamble:
 21461                           	opt stack 0
 21462                           tosu	equ	0xFFF
 21463                           tosh	equ	0xFFE
 21464                           tosl	equ	0xFFD
 21465                           pclath	equ	0xFFA
 21466                           tblptru	equ	0xFF8
 21467                           tblptrh	equ	0xFF7
 21468                           tblptrl	equ	0xFF6
 21469                           tablat	equ	0xFF5
 21470                           prodh	equ	0xFF4
 21471                           prodl	equ	0xFF3
 21472                           intcon	equ	0xFF2
 21473                           intcon2	equ	0xFF1
 21474                           intcon3	equ	0xFF0
 21475                           indf0	equ	0xFEF
 21476                           postinc0	equ	0xFEE
 21477                           plusw0	equ	0xFEB
 21478                           fsr0h	equ	0xFEA
 21479                           fsr0l	equ	0xFE9
 21480                           wreg	equ	0xFE8
 21481                           indf1	equ	0xFE7
 21482                           postinc1	equ	0xFE6
 21483                           postdec1	equ	0xFE5
 21484                           fsr1h	equ	0xFE2
 21485                           fsr1l	equ	0xFE1
 21486                           indf2	equ	0xFDF
 21487                           postinc2	equ	0xFDE
 21488                           postdec2	equ	0xFDD
 21489                           plusw2	equ	0xFDB
 21490                           fsr2h	equ	0xFDA
 21491                           fsr2l	equ	0xFD9
 21492                           status	equ	0xFD8
 21493                           
 21494 ;; *************** function _initGprsModem *****************
 21495 ;; Defined at:
 21496 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21497 ;; Parameters:    Size  Location     Type
 21498 ;;		None
 21499 ;; Auto vars:     Size  Location     Type
 21500 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21501 ;; Return value:  Size  Location     Type
 21502 ;;                  1    wreg      unsigned char 
 21503 ;; Registers used:
 21504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21505 ;; Tracked objects:
 21506 ;;		On entry : 0/0
 21507 ;;		On exit  : 0/0
 21508 ;;		Unchanged: 0/0
 21509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21514 ;;Total ram usage:        1 bytes
 21515 ;; Hardware stack levels used:    1
 21516 ;; Hardware stack levels required when called:   14
 21517 ;; This function calls:
 21518 ;;		_Mdm_SetSmsFormat
 21519 ;;		_Uart_WriteConstString
 21520 ;;		_secondsAppTimer
 21521 ;; This function is called by:
 21522 ;;		_initFsm
 21523 ;; This function uses a non-reentrant model
 21524 ;;
 21525                           
 21526                           	psect	text97
 21527  004ED8                     __ptext97:
 21528                           	opt stack 0
 21529  004ED8                     _initGprsModem:
 21530                           	opt stack 12
 21531                           
 21532                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21533                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21534                           ;app_init.c: 90: bool isInitialized = 0;
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;incstack = 0
 21538  004ED8  0E00               	movlw	0
 21539  004EDA  0100               	movlb	0	; () banked
 21540  004EDC  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21541                           
 21542                           ;app_init.c: 92: switch(currentState)
 21543  004EDE  D035               	goto	l2653
 21544  004EE0                     
 21545                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21546                           
 21547                           ; BSR set to: 0
 21548  004EE0  0E03               	movlw	3
 21549  004EE2  0100               	movlb	0	; () banked
 21550  004EE4  19D1               	xorwf	_MdmStatus& (0+255),w,b
 21551  004EE6  B4D8               	btfsc	status,2,c
 21552  004EE8  D003               	goto	u14480
 21553                           
 21554                           ; BSR set to: 0
 21555  004EEA  05D1               	decf	_MdmStatus& (0+255),w,b
 21556  004EEC  A4D8               	btfss	status,2,c
 21557  004EEE  D03B               	goto	l2659
 21558  004EF0                     u14480:
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;app_init.c: 96: {
 21562                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21563                           
 21564                           ; BSR set to: 0
 21565  004EF0  0EC0               	movlw	low initGprsModem@modemCounter
 21566  004EF2  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21567  004EF4  0E03               	movlw	high initGprsModem@modemCounter
 21568  004EF6  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21569  004EF8  0E00               	movlw	0
 21570  004EFA  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21571  004EFC  0E05               	movlw	5
 21572  004EFE  EC6D  F024         	call	_secondsAppTimer
 21573  004F02  0900               	iorlw	0
 21574  004F04  B4D8               	btfsc	status,2,c
 21575  004F06  D02F               	goto	l2659
 21576                           
 21577                           ;app_init.c: 98: {
 21578                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21579  004F08  0E01               	movlw	1
 21580  004F0A  ECF5  F02E         	call	_Mdm_SetSmsFormat
 21581                           
 21582                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21583  004F0E  0E01               	movlw	1
 21584  004F10  D013               	goto	L32
 21585  004F12                     
 21586                           ; BSR set to: 1
 21587                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21588                           
 21589                           ; BSR set to: 1
 21590  004F12  0EFA               	movlw	low STR_30
 21591  004F14  0100               	movlb	0	; () banked
 21592  004F16  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21593  004F18  0EFE               	movlw	high STR_30
 21594  004F1A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21595  004F1C  0E01               	movlw	1
 21596  004F1E  ECAD  F030         	call	_Uart_WriteConstString
 21597                           
 21598                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21599  004F22  0E02               	movlw	2
 21600  004F24  D009               	goto	L32
 21601  004F26                     
 21602                           ; BSR set to: 1
 21603                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21604                           
 21605                           ; BSR set to: 1
 21606  004F26  0EAA               	movlw	low STR_31
 21607  004F28  0100               	movlb	0	; () banked
 21608  004F2A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21609  004F2C  0EFF               	movlw	high STR_31
 21610  004F2E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21611  004F30  0E01               	movlw	1
 21612  004F32  ECAD  F030         	call	_Uart_WriteConstString
 21613                           
 21614                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21615  004F36  0E03               	movlw	3
 21616  004F38                     L32:
 21617  004F38  0101               	movlb	1	; () banked
 21618  004F3A  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21619                           
 21620                           ;app_init.c: 113: break;
 21621  004F3C  D014               	goto	l2659
 21622  004F3E                     
 21623                           ; BSR set to: 1
 21624                           ;app_init.c: 116: currentState = MODEM_INIT;
 21625                           
 21626                           ; BSR set to: 1
 21627  004F3E  0E00               	movlw	0
 21628  004F40  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21629                           
 21630                           ;app_init.c: 117: isInitialized = 1;
 21631  004F42  0E01               	movlw	1
 21632  004F44  0100               	movlb	0	; () banked
 21633  004F46  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;app_init.c: 122: }
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;app_init.c: 121: break;
 21640                           
 21641                           ;app_init.c: 120: default:
 21642                           
 21643                           ;app_init.c: 118: break;
 21644  004F48  D00E               	goto	l2659
 21645  004F4A                     l2653:
 21646                           
 21647                           ; BSR set to: 0
 21648                           
 21649                           ; BSR set to: 0
 21650  004F4A  0101               	movlb	1	; () banked
 21651  004F4C  51D8               	movf	initGprsModem@currentState& (0+255),w,b
 21652                           
 21653                           ; Switch size 1, requested type "space"
 21654                           ; Number of cases is 4, Range of values is 0 to 3
 21655                           ; switch strategies available:
 21656                           ; Name         Instructions Cycles
 21657                           ; simple_byte           13     7 (average)
 21658                           ;	Chosen strategy is simple_byte
 21659  004F4E  0A00               	xorlw	0	; case 0
 21660  004F50  B4D8               	btfsc	status,2,c
 21661  004F52  D7C6               	goto	l2654
 21662  004F54  0A01               	xorlw	1	; case 1
 21663  004F56  B4D8               	btfsc	status,2,c
 21664  004F58  D7DC               	goto	l2660
 21665  004F5A  0A03               	xorlw	3	; case 2
 21666  004F5C  B4D8               	btfsc	status,2,c
 21667  004F5E  D7E3               	goto	l2661
 21668  004F60  0A01               	xorlw	1	; case 3
 21669  004F62  B4D8               	btfsc	status,2,c
 21670  004F64  D7EC               	goto	l2662
 21671  004F66                     l2659:
 21672                           
 21673                           ;app_init.c: 123: return isInitialized;
 21674                           
 21675                           ; BSR set to: 1
 21676  004F66  0100               	movlb	0	; () banked
 21677  004F68  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21678  004F6A  0012               	return	
 21679  004F6C                     __end_of_initGprsModem:
 21680                           	opt stack 0
 21681                           tosu	equ	0xFFF
 21682                           tosh	equ	0xFFE
 21683                           tosl	equ	0xFFD
 21684                           pclath	equ	0xFFA
 21685                           tblptru	equ	0xFF8
 21686                           tblptrh	equ	0xFF7
 21687                           tblptrl	equ	0xFF6
 21688                           tablat	equ	0xFF5
 21689                           prodh	equ	0xFF4
 21690                           prodl	equ	0xFF3
 21691                           intcon	equ	0xFF2
 21692                           intcon2	equ	0xFF1
 21693                           intcon3	equ	0xFF0
 21694                           indf0	equ	0xFEF
 21695                           postinc0	equ	0xFEE
 21696                           plusw0	equ	0xFEB
 21697                           fsr0h	equ	0xFEA
 21698                           fsr0l	equ	0xFE9
 21699                           wreg	equ	0xFE8
 21700                           indf1	equ	0xFE7
 21701                           postinc1	equ	0xFE6
 21702                           postdec1	equ	0xFE5
 21703                           fsr1h	equ	0xFE2
 21704                           fsr1l	equ	0xFE1
 21705                           indf2	equ	0xFDF
 21706                           postinc2	equ	0xFDE
 21707                           postdec2	equ	0xFDD
 21708                           plusw2	equ	0xFDB
 21709                           fsr2h	equ	0xFDA
 21710                           fsr2l	equ	0xFD9
 21711                           status	equ	0xFD8
 21712                           
 21713 ;; *************** function _secondsAppTimer *****************
 21714 ;; Defined at:
 21715 ;;		line 68 in file "../Source/c/04_App/app_utils.c"
 21716 ;; Parameters:    Size  Location     Type
 21717 ;;  seconds         1    wreg     unsigned char 
 21718 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21719 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21720 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21721 ;; Auto vars:     Size  Location     Type
 21722 ;;  seconds         1   47[BANK0 ] unsigned char 
 21723 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21724 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21725 ;; Return value:  Size  Location     Type
 21726 ;;                  1    wreg      unsigned char 
 21727 ;; Registers used:
 21728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21729 ;; Tracked objects:
 21730 ;;		On entry : 0/0
 21731 ;;		On exit  : 0/0
 21732 ;;		Unchanged: 0/0
 21733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21734 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21737 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21738 ;;Total ram usage:        9 bytes
 21739 ;; Hardware stack levels used:    1
 21740 ;; Hardware stack levels required when called:   12
 21741 ;; This function calls:
 21742 ;;		___lwdiv
 21743 ;;		___wmul
 21744 ;; This function is called by:
 21745 ;;		_initGprsModem
 21746 ;;		_waitSetupCall
 21747 ;;		_blinkForSeconds
 21748 ;; This function uses a non-reentrant model
 21749 ;;
 21750                           
 21751                           	psect	text98
 21752  0048DA                     __ptext98:
 21753                           	opt stack 0
 21754  0048DA                     _secondsAppTimer:
 21755                           	opt stack 13
 21756                           
 21757                           ; BSR set to: 0
 21758                           ;incstack = 0
 21759                           ;secondsAppTimer@seconds stored from wreg
 21760  0048DA  0100               	movlb	0	; () banked
 21761  0048DC  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21762                           
 21763                           ;app_utils.c: 70: bool isExpired = 1;
 21764  0048DE  0E01               	movlw	1
 21765  0048E0  0100               	movlb	0	; () banked
 21766  0048E2  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;app_utils.c: 71: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21770  0048E4  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21771  0048E8  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21772  0048EA  0E03               	movlw	3
 21773  0048EC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21774  0048EE  0EE8               	movlw	232
 21775  0048F0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21776  0048F2  EC4D  F033         	call	___wmul	;wreg free
 21777  0048F6  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21778  0048FA  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21779  0048FE  0E00               	movlw	0
 21780  004900  0100               	movlb	0	; () banked
 21781  004902  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21782  004904  0E64               	movlw	100
 21783  004906  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21784  004908  EC29  F02E         	call	___lwdiv	;wreg free
 21785  00490C  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21786  004910  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21787                           
 21788                           ;app_utils.c: 73: if (*counter < destinationTicks)
 21789  004914  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21790  004918  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21791  00491C  0100               	movlb	0	; () banked
 21792  00491E  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21793  004920  5CDE               	subwf	postinc2,w,c
 21794  004922  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21795  004924  58DE               	subwfb	postinc2,w,c
 21796  004926  B0D8               	btfsc	status,0,c
 21797  004928  D009               	goto	l2731
 21798                           
 21799                           ; BSR set to: 0
 21800                           ;app_utils.c: 74: {
 21801                           ;app_utils.c: 75: *counter += 1;
 21802  00492A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21803  00492E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21804  004932  2ADE               	incf	postinc2,f,c
 21805  004934  0E00               	movlw	0
 21806  004936  22DD               	addwfc	postdec2,f,c
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;app_utils.c: 76: isExpired = 0;
 21810  004938  0E00               	movlw	0
 21811  00493A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21812  00493C                     l2731:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;app_utils.c: 77: }
 21816                           ;app_utils.c: 78: if (*counter == destinationTicks)
 21817                           
 21818                           ; BSR set to: 0
 21819  00493C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21820  004940  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21821  004944  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21822  004946  18DE               	xorwf	postinc2,w,c
 21823  004948  E117               	bnz	l14207
 21824  00494A  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21825  00494C  18DE               	xorwf	postinc2,w,c
 21826  00494E  A4D8               	btfss	status,2,c
 21827  004950  D013               	goto	l2734
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;app_utils.c: 79: {
 21831                           ;app_utils.c: 80: if (isCyclic)
 21832  004952  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21833  004954  B4D8               	btfsc	status,2,c
 21834  004956  D008               	goto	l2733
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;app_utils.c: 81: {
 21838                           ;app_utils.c: 82: *counter = 0;
 21839  004958  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21840  00495C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21841  004960  0E00               	movlw	0
 21842  004962  6EDE               	movwf	postinc2,c
 21843  004964  0E00               	movlw	0
 21844  004966  D007               	goto	L33
 21845  004968                     l2733:
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;app_utils.c: 84: else
 21849                           ;app_utils.c: 85: {
 21850                           ;app_utils.c: 86: *counter = 0xFFFF;
 21851                           
 21852                           ; BSR set to: 0
 21853  004968  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21854  00496C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21855  004970  0EFF               	movlw	255
 21856  004972  6EDE               	movwf	postinc2,c
 21857  004974  0EFF               	movlw	255
 21858  004976                     L33:
 21859  004976  6EDD               	movwf	postdec2,c
 21860  004978                     l2734:
 21861  004978                     l14207:
 21862                           
 21863                           ; BSR set to: 0
 21864                           ;app_utils.c: 87: }
 21865                           ;app_utils.c: 88: }
 21866                           ;app_utils.c: 89: return isExpired;
 21867  004978  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21868  00497A  0012               	return	
 21869  00497C                     __end_of_secondsAppTimer:
 21870                           	opt stack 0
 21871                           tosu	equ	0xFFF
 21872                           tosh	equ	0xFFE
 21873                           tosl	equ	0xFFD
 21874                           pclath	equ	0xFFA
 21875                           tblptru	equ	0xFF8
 21876                           tblptrh	equ	0xFF7
 21877                           tblptrl	equ	0xFF6
 21878                           tablat	equ	0xFF5
 21879                           prodh	equ	0xFF4
 21880                           prodl	equ	0xFF3
 21881                           intcon	equ	0xFF2
 21882                           intcon2	equ	0xFF1
 21883                           intcon3	equ	0xFF0
 21884                           indf0	equ	0xFEF
 21885                           postinc0	equ	0xFEE
 21886                           plusw0	equ	0xFEB
 21887                           fsr0h	equ	0xFEA
 21888                           fsr0l	equ	0xFE9
 21889                           wreg	equ	0xFE8
 21890                           indf1	equ	0xFE7
 21891                           postinc1	equ	0xFE6
 21892                           postdec1	equ	0xFE5
 21893                           fsr1h	equ	0xFE2
 21894                           fsr1l	equ	0xFE1
 21895                           indf2	equ	0xFDF
 21896                           postinc2	equ	0xFDE
 21897                           postdec2	equ	0xFDD
 21898                           plusw2	equ	0xFDB
 21899                           fsr2h	equ	0xFDA
 21900                           fsr2l	equ	0xFD9
 21901                           status	equ	0xFD8
 21902                           
 21903 ;; *************** function _Mdm_SetSmsFormat *****************
 21904 ;; Defined at:
 21905 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21906 ;; Parameters:    Size  Location     Type
 21907 ;;  TextFormat      1    wreg     unsigned char 
 21908 ;; Auto vars:     Size  Location     Type
 21909 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21910 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21911 ;;  Index           1   35[BANK0 ] unsigned char 
 21912 ;; Return value:  Size  Location     Type
 21913 ;;                  1    wreg      void 
 21914 ;; Registers used:
 21915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21916 ;; Tracked objects:
 21917 ;;		On entry : 0/0
 21918 ;;		On exit  : 0/0
 21919 ;;		Unchanged: 0/0
 21920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21922 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21924 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21925 ;;Total ram usage:       22 bytes
 21926 ;; Hardware stack levels used:    1
 21927 ;; Hardware stack levels required when called:   13
 21928 ;; This function calls:
 21929 ;;		_Uart_WriteString
 21930 ;; This function is called by:
 21931 ;;		_initGprsModem
 21932 ;; This function uses a non-reentrant model
 21933 ;;
 21934                           
 21935                           	psect	text99
 21936  005DEA                     __ptext99:
 21937                           	opt stack 0
 21938  005DEA                     _Mdm_SetSmsFormat:
 21939                           	opt stack 12
 21940                           
 21941                           ; BSR set to: 0
 21942                           ;incstack = 0
 21943                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21944  005DEA  0100               	movlb	0	; () banked
 21945  005DEC  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21946                           
 21947                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21948                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21949  005DEE  0E00               	movlw	0
 21950  005DF0  0100               	movlb	0	; () banked
 21951  005DF2  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21952                           
 21953                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21954  005DF4  0E41               	movlw	65
 21955  005DF6  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21956                           
 21957                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21958  005DF8  0E54               	movlw	84
 21959  005DFA  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21960                           
 21961                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21962  005DFC  0E2B               	movlw	43
 21963  005DFE  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21964                           
 21965                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21966  005E00  0E43               	movlw	67
 21967  005E02  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21968                           
 21969                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21970  005E04  0E4D               	movlw	77
 21971  005E06  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21972                           
 21973                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21974  005E08  0E47               	movlw	71
 21975  005E0A  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21976                           
 21977                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21978  005E0C  0E46               	movlw	70
 21979  005E0E  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21980                           
 21981                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21982  005E10  0E3D               	movlw	61
 21983  005E12  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21984                           
 21985                           ; BSR set to: 0
 21986                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21987  005E14  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21988  005E16  A4D8               	btfss	status,2,c
 21989  005E18  D002               	goto	l1121
 21990                           
 21991                           ; BSR set to: 0
 21992                           ;mdm_gsm_gprs.c: 854: {
 21993                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21994  005E1A  0E31               	movlw	49
 21995  005E1C  D001               	goto	L34
 21996  005E1E                     l1121:
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;mdm_gsm_gprs.c: 857: else
 22000                           ;mdm_gsm_gprs.c: 858: {
 22001                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22002                           
 22003                           ; BSR set to: 0
 22004  005E1E  0E30               	movlw	48
 22005  005E20                     L34:
 22006  005E20  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;mdm_gsm_gprs.c: 860: }
 22010                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22011  005E22  0E0D               	movlw	13
 22012  005E24  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22013                           
 22014                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22015  005E26  0E00               	movlw	0
 22016  005E28  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22017                           
 22018                           ; BSR set to: 0
 22019                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22020  005E2A  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22021  005E2C  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22022  005E2E  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22023  005E30  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22024  005E32  0E01               	movlw	1
 22025  005E34  EC4D  F031         	call	_Uart_WriteString
 22026  005E38  0012               	return		;funcret
 22027  005E3A                     __end_of_Mdm_SetSmsFormat:
 22028                           	opt stack 0
 22029                           tosu	equ	0xFFF
 22030                           tosh	equ	0xFFE
 22031                           tosl	equ	0xFFD
 22032                           pclath	equ	0xFFA
 22033                           tblptru	equ	0xFF8
 22034                           tblptrh	equ	0xFF7
 22035                           tblptrl	equ	0xFF6
 22036                           tablat	equ	0xFF5
 22037                           prodh	equ	0xFF4
 22038                           prodl	equ	0xFF3
 22039                           intcon	equ	0xFF2
 22040                           intcon2	equ	0xFF1
 22041                           intcon3	equ	0xFF0
 22042                           indf0	equ	0xFEF
 22043                           postinc0	equ	0xFEE
 22044                           plusw0	equ	0xFEB
 22045                           fsr0h	equ	0xFEA
 22046                           fsr0l	equ	0xFE9
 22047                           wreg	equ	0xFE8
 22048                           indf1	equ	0xFE7
 22049                           postinc1	equ	0xFE6
 22050                           postdec1	equ	0xFE5
 22051                           fsr1h	equ	0xFE2
 22052                           fsr1l	equ	0xFE1
 22053                           indf2	equ	0xFDF
 22054                           postinc2	equ	0xFDE
 22055                           postdec2	equ	0xFDD
 22056                           plusw2	equ	0xFDB
 22057                           fsr2h	equ	0xFDA
 22058                           fsr2l	equ	0xFD9
 22059                           status	equ	0xFD8
 22060                           
 22061 ;; *************** function _initEeprom *****************
 22062 ;; Defined at:
 22063 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22064 ;; Parameters:    Size  Location     Type
 22065 ;;		None
 22066 ;; Auto vars:     Size  Location     Type
 22067 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22068 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22069 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22070 ;; Return value:  Size  Location     Type
 22071 ;;                  1    wreg      unsigned char 
 22072 ;; Registers used:
 22073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22074 ;; Tracked objects:
 22075 ;;		On entry : 0/0
 22076 ;;		On exit  : 0/0
 22077 ;;		Unchanged: 0/0
 22078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22080 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22082 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22083 ;;Total ram usage:        3 bytes
 22084 ;; Hardware stack levels used:    1
 22085 ;; Hardware stack levels required when called:   17
 22086 ;; This function calls:
 22087 ;;		_Eeprom_Read
 22088 ;; This function is called by:
 22089 ;;		_initFsm
 22090 ;; This function uses a non-reentrant model
 22091 ;;
 22092                           
 22093                           	psect	text100
 22094  004F6C                     __ptext100:
 22095                           	opt stack 0
 22096  004F6C                     _initEeprom:
 22097                           	opt stack 9
 22098                           
 22099                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22100                           
 22101                           ;incstack = 0
 22102  004F6C  0E00               	movlw	0
 22103  004F6E  0101               	movlb	1	; () banked
 22104  004F70  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22105                           
 22106                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22107                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22108  004F72  0E02               	movlw	2
 22109  004F74  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22110                           
 22111                           ;app_init.c: 135: bool isInitialized = 0;
 22112  004F76  0E00               	movlw	0
 22113  004F78  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22114                           
 22115                           ;app_init.c: 137: switch (currentState)
 22116  004F7A  D034               	goto	l2669
 22117  004F7C                     
 22118                           ; BSR set to: 1
 22119                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22120                           
 22121                           ; BSR set to: 1
 22122  004F7C  0EAC               	movlw	low _memoryPreamble
 22123  004F7E  0100               	movlb	0	; () banked
 22124  004F80  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22125  004F82  0E03               	movlw	high _memoryPreamble
 22126  004F84  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22127  004F86  0E04               	movlw	4
 22128  004F88  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22129  004F8A  0E00               	movlw	0
 22130  004F8C  ECD5  F02D         	call	_Eeprom_Read
 22131  004F90  0101               	movlb	1	; () banked
 22132  004F92  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22133                           
 22134                           ; BSR set to: 1
 22135                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22136  004F94  0E02               	movlw	2
 22137  004F96  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22138  004F98  B4D8               	btfsc	status,2,c
 22139  004F9A  D02E               	goto	l2674
 22140                           
 22141                           ; BSR set to: 1
 22142                           ;app_init.c: 142: {
 22143                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22144                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22145                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22146                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22147  004F9C  0E55               	movlw	85
 22148  004F9E  0103               	movlb	3	; () banked
 22149  004FA0  19AC               	xorwf	_memoryPreamble& (0+255),w,b
 22150  004FA2  A4D8               	btfss	status,2,c
 22151  004FA4  D00E               	goto	l2672
 22152                           
 22153                           ; BSR set to: 3
 22154  004FA6  0E53               	movlw	83
 22155  004FA8  19AD               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22156  004FAA  A4D8               	btfss	status,2,c
 22157  004FAC  D00A               	goto	l2672
 22158                           
 22159                           ; BSR set to: 3
 22160  004FAE  0E49               	movlw	73
 22161  004FB0  19AE               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22162  004FB2  A4D8               	btfss	status,2,c
 22163  004FB4  D006               	goto	l2672
 22164                           
 22165                           ; BSR set to: 3
 22166  004FB6  0E4D               	movlw	77
 22167  004FB8  19AF               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22168  004FBA  A4D8               	btfss	status,2,c
 22169  004FBC  D002               	goto	l2672
 22170                           
 22171                           ; BSR set to: 3
 22172                           ;app_init.c: 147: {
 22173                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22174  004FBE  0E02               	movlw	2
 22175  004FC0  D001               	goto	L35
 22176  004FC2                     l2672:
 22177                           
 22178                           ;app_init.c: 150: else
 22179                           ;app_init.c: 151: {
 22180                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22181                           
 22182                           ; BSR set to: 1
 22183  004FC2  0E01               	movlw	1
 22184  004FC4                     L35:
 22185  004FC4  0101               	movlb	1	; () banked
 22186  004FC6  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22187                           
 22188                           ; BSR set to: 1
 22189                           ;app_init.c: 153: }
 22190                           ;app_init.c: 154: }
 22191                           ;app_init.c: 155: break;
 22192                           
 22193                           ; BSR set to: 1
 22194  004FC8  D017               	goto	l2674
 22195  004FCA                     
 22196                           ; BSR set to: 1
 22197                           ;app_init.c: 158: currentState = EEPROM_INIT;
 22198                           
 22199                           ; BSR set to: 1
 22200  004FCA  0E00               	movlw	0
 22201  004FCC  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22202                           
 22203                           ;app_init.c: 159: isInitialized = 1;
 22204  004FCE  0E01               	movlw	1
 22205  004FD0  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22206                           
 22207                           ;app_init.c: 160: isMemoryEmpty = 1;
 22208  004FD2  0E01               	movlw	1
 22209  004FD4  D005               	goto	L36
 22210  004FD6                     
 22211                           ; BSR set to: 1
 22212                           ;app_init.c: 164: currentState = EEPROM_INIT;
 22213                           
 22214                           ; BSR set to: 1
 22215  004FD6  0E00               	movlw	0
 22216  004FD8  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22217                           
 22218                           ;app_init.c: 165: isInitialized = 1;
 22219  004FDA  0E01               	movlw	1
 22220  004FDC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22221                           
 22222                           ;app_init.c: 166: isMemoryEmpty = 0;
 22223  004FDE  0E00               	movlw	0
 22224  004FE0                     L36:
 22225  004FE0  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;app_init.c: 171: }
 22229                           
 22230                           ; BSR set to: 1
 22231                           ;app_init.c: 170: break;
 22232                           
 22233                           ;app_init.c: 169: default:
 22234                           
 22235                           ;app_init.c: 167: break;
 22236  004FE2  D00A               	goto	l2674
 22237  004FE4                     l2669:
 22238                           
 22239                           ; BSR set to: 1
 22240                           
 22241                           ; BSR set to: 1
 22242  004FE4  51D7               	movf	initEeprom@currentState& (0+255),w,b
 22243                           
 22244                           ; Switch size 1, requested type "space"
 22245                           ; Number of cases is 3, Range of values is 0 to 2
 22246                           ; switch strategies available:
 22247                           ; Name         Instructions Cycles
 22248                           ; simple_byte           10     6 (average)
 22249                           ;	Chosen strategy is simple_byte
 22250  004FE6  0A00               	xorlw	0	; case 0
 22251  004FE8  B4D8               	btfsc	status,2,c
 22252  004FEA  D7C8               	goto	l2670
 22253  004FEC  0A01               	xorlw	1	; case 1
 22254  004FEE  B4D8               	btfsc	status,2,c
 22255  004FF0  D7EC               	goto	l2675
 22256  004FF2  0A03               	xorlw	3	; case 2
 22257  004FF4  B4D8               	btfsc	status,2,c
 22258  004FF6  D7EF               	goto	l2676
 22259  004FF8                     l2674:
 22260                           
 22261                           ; BSR set to: 1
 22262                           ;app_init.c: 172: return isInitialized;
 22263                           
 22264                           ; BSR set to: 1
 22265  004FF8  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22266  004FFA  0012               	return	
 22267  004FFC                     __end_of_initEeprom:
 22268                           	opt stack 0
 22269                           tosu	equ	0xFFF
 22270                           tosh	equ	0xFFE
 22271                           tosl	equ	0xFFD
 22272                           pclath	equ	0xFFA
 22273                           tblptru	equ	0xFF8
 22274                           tblptrh	equ	0xFF7
 22275                           tblptrl	equ	0xFF6
 22276                           tablat	equ	0xFF5
 22277                           prodh	equ	0xFF4
 22278                           prodl	equ	0xFF3
 22279                           intcon	equ	0xFF2
 22280                           intcon2	equ	0xFF1
 22281                           intcon3	equ	0xFF0
 22282                           indf0	equ	0xFEF
 22283                           postinc0	equ	0xFEE
 22284                           plusw0	equ	0xFEB
 22285                           fsr0h	equ	0xFEA
 22286                           fsr0l	equ	0xFE9
 22287                           wreg	equ	0xFE8
 22288                           indf1	equ	0xFE7
 22289                           postinc1	equ	0xFE6
 22290                           postdec1	equ	0xFE5
 22291                           fsr1h	equ	0xFE2
 22292                           fsr1l	equ	0xFE1
 22293                           indf2	equ	0xFDF
 22294                           postinc2	equ	0xFDE
 22295                           postdec2	equ	0xFDD
 22296                           plusw2	equ	0xFDB
 22297                           fsr2h	equ	0xFDA
 22298                           fsr2l	equ	0xFD9
 22299                           status	equ	0xFD8
 22300                           
 22301 ;; *************** function _detectCmd *****************
 22302 ;; Defined at:
 22303 ;;		line 114 in file "../Source/c/04_App/app.c"
 22304 ;; Parameters:    Size  Location     Type
 22305 ;;		None
 22306 ;; Auto vars:     Size  Location     Type
 22307 ;;  currentState    1   53[BANK0 ] enum E9012
 22308 ;; Return value:  Size  Location     Type
 22309 ;;                  1    wreg      enum E9012
 22310 ;; Registers used:
 22311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22312 ;; Tracked objects:
 22313 ;;		On entry : 0/0
 22314 ;;		On exit  : 0/0
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22321 ;;Total ram usage:        1 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; Hardware stack levels required when called:   14
 22324 ;; This function calls:
 22325 ;;		_GetCallerNumber
 22326 ;;		_GetLastInteractionNumber
 22327 ;;		_Mdm_GetSmsData
 22328 ;;		_Mdm_HangPhoneCall
 22329 ;;		_Mdm_IsRinging
 22330 ;;		_Mdm_IsSmsReceived
 22331 ;;		_Mdm_RequestSmsData
 22332 ;;		_StringCopy
 22333 ;;		_Uart_WriteConstString
 22334 ;;		_parseCommand
 22335 ;; This function is called by:
 22336 ;;		_MyApp_Task
 22337 ;; This function uses a non-reentrant model
 22338 ;;
 22339                           
 22340                           	psect	text101
 22341  004ABA                     __ptext101:
 22342                           	opt stack 0
 22343  004ABA                     _detectCmd:
 22344                           	opt stack 13
 22345                           
 22346                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22347                           
 22348                           ; BSR set to: 1
 22349                           ;incstack = 0
 22350  004ABA  0E01               	movlw	1
 22351  004ABC  0100               	movlb	0	; () banked
 22352  004ABE  6F95               	movwf	detectCmd@currentState& (0+255),b
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22356  004AC0  EC86  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22357  004AC4  0900               	iorlw	0
 22358  004AC6  A4D8               	btfss	status,2,c
 22359                           
 22360                           ;app.c: 118: {
 22361                           ;app.c: 119: Mdm_RequestSmsData();
 22362  004AC8  EC54  F035         	call	_Mdm_RequestSmsData	;wreg free
 22363                           
 22364                           ;app.c: 120: }
 22365                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22366  004ACC  0E93               	movlw	low _smsText
 22367  004ACE  0100               	movlb	0	; () banked
 22368  004AD0  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22369  004AD2  0E04               	movlw	high _smsText
 22370  004AD4  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22371  004AD6  EC1C  F02B         	call	_Mdm_GetSmsData	;wreg free
 22372  004ADA  06E8               	decf	wreg,f,c
 22373  004ADC  A4D8               	btfss	status,2,c
 22374  004ADE  D01D               	goto	l2584
 22375                           
 22376                           ;app.c: 122: {
 22377                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22378  004AE0  0E2F               	movlw	low STR_29
 22379  004AE2  0100               	movlb	0	; () banked
 22380  004AE4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22381  004AE6  0EFF               	movlw	high STR_29
 22382  004AE8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22383  004AEA  0E01               	movlw	1
 22384  004AEC  ECAD  F030         	call	_Uart_WriteConstString
 22385                           
 22386                           ;app.c: 124: currentState = parseCommand();
 22387  004AF0  ECA4  F017         	call	_parseCommand	;wreg free
 22388  004AF4  0100               	movlb	0	; () banked
 22389  004AF6  6F95               	movwf	detectCmd@currentState& (0+255),b
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22393  004AF8  EC80  F035         	call	_GetLastInteractionNumber	;wreg free
 22394  004AFC  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22395  004B00  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22396  004B04  0ECA               	movlw	low _receivedNumber
 22397  004B06  0100               	movlb	0	; () banked
 22398  004B08  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22399  004B0A  0E04               	movlw	high _receivedNumber
 22400  004B0C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22401  004B0E  0E00               	movlw	0
 22402  004B10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22403  004B12  0E0D               	movlw	13
 22404  004B14  6F89               	movwf	StringCopy@Len& (0+255),b
 22405  004B16  ECE9  F02B         	call	_StringCopy	;wreg free
 22406  004B1A                     l2584:
 22407                           
 22408                           ;app.c: 126: }
 22409                           ;app.c: 127: if (Mdm_IsRinging())
 22410  004B1A  EC98  F033         	call	_Mdm_IsRinging	;wreg free
 22411  004B1E  0900               	iorlw	0
 22412  004B20  B4D8               	btfsc	status,2,c
 22413  004B22  D016               	goto	l2585
 22414                           
 22415                           ;app.c: 128: {
 22416                           ;app.c: 129: Mdm_HangPhoneCall();
 22417  004B24  EC32  F035         	call	_Mdm_HangPhoneCall	;wreg free
 22418                           
 22419                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22420  004B28  0E04               	movlw	4
 22421  004B2A  0100               	movlb	0	; () banked
 22422  004B2C  6F95               	movwf	detectCmd@currentState& (0+255),b
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22426  004B2E  ECFD  F031         	call	_GetCallerNumber	;wreg free
 22427  004B32  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22428  004B36  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22429  004B3A  0ECA               	movlw	low _receivedNumber
 22430  004B3C  0100               	movlb	0	; () banked
 22431  004B3E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22432  004B40  0E04               	movlw	high _receivedNumber
 22433  004B42  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22434  004B44  0E00               	movlw	0
 22435  004B46  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22436  004B48  0E0D               	movlw	13
 22437  004B4A  6F89               	movwf	StringCopy@Len& (0+255),b
 22438  004B4C  ECE9  F02B         	call	_StringCopy	;wreg free
 22439  004B50                     l2585:
 22440                           
 22441                           ;app.c: 132: }
 22442                           ;app.c: 133: return currentState;
 22443  004B50  0100               	movlb	0	; () banked
 22444  004B52  5195               	movf	detectCmd@currentState& (0+255),w,b
 22445  004B54  0012               	return	
 22446  004B56                     __end_of_detectCmd:
 22447                           	opt stack 0
 22448                           tosu	equ	0xFFF
 22449                           tosh	equ	0xFFE
 22450                           tosl	equ	0xFFD
 22451                           pclath	equ	0xFFA
 22452                           tblptru	equ	0xFF8
 22453                           tblptrh	equ	0xFF7
 22454                           tblptrl	equ	0xFF6
 22455                           tablat	equ	0xFF5
 22456                           prodh	equ	0xFF4
 22457                           prodl	equ	0xFF3
 22458                           intcon	equ	0xFF2
 22459                           intcon2	equ	0xFF1
 22460                           intcon3	equ	0xFF0
 22461                           indf0	equ	0xFEF
 22462                           postinc0	equ	0xFEE
 22463                           plusw0	equ	0xFEB
 22464                           fsr0h	equ	0xFEA
 22465                           fsr0l	equ	0xFE9
 22466                           wreg	equ	0xFE8
 22467                           indf1	equ	0xFE7
 22468                           postinc1	equ	0xFE6
 22469                           postdec1	equ	0xFE5
 22470                           fsr1h	equ	0xFE2
 22471                           fsr1l	equ	0xFE1
 22472                           indf2	equ	0xFDF
 22473                           postinc2	equ	0xFDE
 22474                           postdec2	equ	0xFDD
 22475                           plusw2	equ	0xFDB
 22476                           fsr2h	equ	0xFDA
 22477                           fsr2l	equ	0xFD9
 22478                           status	equ	0xFD8
 22479                           
 22480 ;; *************** function _parseCommand *****************
 22481 ;; Defined at:
 22482 ;;		line 74 in file "../Source/c/04_App/app.c"
 22483 ;; Parameters:    Size  Location     Type
 22484 ;;		None
 22485 ;; Auto vars:     Size  Location     Type
 22486 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22487 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22488 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22489 ;;  state           1   52[BANK0 ] enum E9012
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1    wreg      enum E9012
 22492 ;; Registers used:
 22493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/0
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22500 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22502 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22503 ;;Total ram usage:       13 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:   12
 22506 ;; This function calls:
 22507 ;;		_StringCompare
 22508 ;;		_isNumberValid
 22509 ;; This function is called by:
 22510 ;;		_detectCmd
 22511 ;; This function uses a non-reentrant model
 22512 ;;
 22513                           
 22514                           	psect	text102
 22515  002F48                     __ptext102:
 22516                           	opt stack 0
 22517  002F48                     _parseCommand:
 22518                           	opt stack 14
 22519                           
 22520                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22521                           
 22522                           ; BSR set to: 0
 22523                           ;incstack = 0
 22524  002F48  0E2A               	movlw	low parseCommand@F9026
 22525  002F4A  6EF6               	movwf	tblptrl,c
 22526  002F4C                     	if	1	;There is more than 1 active tblptr byte
 22527  002F4C  0EFC               	movlw	high parseCommand@F9026
 22528  002F4E  6EF7               	movwf	tblptrh,c
 22529  002F50                     	endif
 22530  002F50                     	if	0	;There are less than 3 active tblptr bytes
 22531  002F50                     	endif
 22532  002F50  0009               	tblrd		*+
 22533  002F52  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22534  002F56  0009               	tblrd		*+
 22535  002F58  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22536  002F5C  0009               	tblrd		*+
 22537  002F5E  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22538  002F62  000A               	tblrd		*-
 22539  002F64  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22540                           
 22541                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22542  002F68  0E26               	movlw	low parseCommand@F9028
 22543  002F6A  6EF6               	movwf	tblptrl,c
 22544  002F6C                     	if	1	;There is more than 1 active tblptr byte
 22545  002F6C  0EFC               	movlw	high parseCommand@F9028
 22546  002F6E  6EF7               	movwf	tblptrh,c
 22547  002F70                     	endif
 22548  002F70                     	if	0	;There are less than 3 active tblptr bytes
 22549  002F70                     	endif
 22550  002F70  0009               	tblrd		*+
 22551  002F72  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22552  002F76  0009               	tblrd		*+
 22553  002F78  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22554  002F7C  0009               	tblrd		*+
 22555  002F7E  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22556  002F82  000A               	tblrd		*-
 22557  002F84  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22558                           
 22559                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22560  002F88  0E22               	movlw	low parseCommand@F9030
 22561  002F8A  6EF6               	movwf	tblptrl,c
 22562  002F8C                     	if	1	;There is more than 1 active tblptr byte
 22563  002F8C  0EFC               	movlw	high parseCommand@F9030
 22564  002F8E  6EF7               	movwf	tblptrh,c
 22565  002F90                     	endif
 22566  002F90                     	if	0	;There are less than 3 active tblptr bytes
 22567  002F90                     	endif
 22568  002F90  0009               	tblrd		*+
 22569  002F92  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22570  002F96  0009               	tblrd		*+
 22571  002F98  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22572  002F9C  0009               	tblrd		*+
 22573  002F9E  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22574  002FA2  000A               	tblrd		*-
 22575  002FA4  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22576                           
 22577                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22578  002FA8  0E01               	movlw	1
 22579  002FAA  0100               	movlb	0	; () banked
 22580  002FAC  6F94               	movwf	parseCommand@state& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22584  002FAE  0E93               	movlw	low _smsText
 22585  002FB0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22586  002FB2  0E04               	movlw	high _smsText
 22587  002FB4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22588  002FB6  0E88               	movlw	low parseCommand@addNumberCmd
 22589  002FB8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22590  002FBA  0E00               	movlw	high parseCommand@addNumberCmd
 22591  002FBC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22592  002FBE  0E00               	movlw	0
 22593  002FC0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22594  002FC2  0E04               	movlw	4
 22595  002FC4  6F81               	movwf	StringCompare@Len& (0+255),b
 22596  002FC6  EC7C  F02E         	call	_StringCompare	;wreg free
 22597  002FCA  0900               	iorlw	0
 22598  002FCC  B4D8               	btfsc	status,2,c
 22599  002FCE  D00E               	goto	l2570
 22600                           
 22601                           ;app.c: 82: {
 22602                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22603  002FD0  0E97               	movlw	low (_smsText+4)
 22604  002FD2  0100               	movlb	0	; () banked
 22605  002FD4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22606  002FD6  0E04               	movlw	high (_smsText+4)
 22607  002FD8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22608  002FDA  ECB6  F02B         	call	_isNumberValid	;wreg free
 22609  002FDE  0900               	iorlw	0
 22610  002FE0  A4D8               	btfss	status,2,c
 22611  002FE2  D002               	goto	l2571
 22612  002FE4                     u14430:
 22613                           
 22614                           ;app.c: 84: {
 22615                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22616  002FE4  0E01               	movlw	1
 22617  002FE6  D033               	goto	L40
 22618  002FE8                     l2571:
 22619                           
 22620                           ;app.c: 87: else
 22621                           ;app.c: 88: {
 22622                           ;app.c: 89: state = GATE_ADD_CMD;
 22623                           
 22624                           ; BSR set to: 0
 22625  002FE8  0E02               	movlw	2
 22626  002FEA  D031               	goto	L40
 22627  002FEC                     l2570:
 22628                           
 22629                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22630                           
 22631                           ; BSR set to: 0
 22632  002FEC  0E93               	movlw	low _smsText
 22633  002FEE  0100               	movlb	0	; () banked
 22634  002FF0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22635  002FF2  0E04               	movlw	high _smsText
 22636  002FF4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22637  002FF6  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22638  002FF8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22639  002FFA  0E00               	movlw	high parseCommand@deleteNumberCmd
 22640  002FFC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22641  002FFE  0E00               	movlw	0
 22642  003000  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22643  003002  0E04               	movlw	4
 22644  003004  6F81               	movwf	StringCompare@Len& (0+255),b
 22645  003006  EC7C  F02E         	call	_StringCompare	;wreg free
 22646  00300A  0900               	iorlw	0
 22647  00300C  B4D8               	btfsc	status,2,c
 22648  00300E  D00C               	goto	l2574
 22649                           
 22650                           ;app.c: 93: {
 22651                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22652  003010  0E97               	movlw	low (_smsText+4)
 22653  003012  0100               	movlb	0	; () banked
 22654  003014  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22655  003016  0E04               	movlw	high (_smsText+4)
 22656  003018  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22657  00301A  ECB6  F02B         	call	_isNumberValid	;wreg free
 22658  00301E  0900               	iorlw	0
 22659  003020  B4D8               	btfsc	status,2,c
 22660  003022  D7E0               	goto	u14430
 22661                           
 22662                           ;app.c: 98: else
 22663                           ;app.c: 99: {
 22664                           ;app.c: 100: state = GATE_DEL_CMD;
 22665                           
 22666                           ; BSR set to: 0
 22667                           
 22668                           ;app.c: 97: }
 22669                           
 22670                           ;app.c: 95: {
 22671                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22672  003024  0E03               	movlw	3
 22673  003026  D013               	goto	L40
 22674  003028                     l2574:
 22675                           
 22676                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22677                           
 22678                           ; BSR set to: 0
 22679  003028  0E93               	movlw	low _smsText
 22680  00302A  0100               	movlb	0	; () banked
 22681  00302C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22682  00302E  0E04               	movlw	high _smsText
 22683  003030  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22684  003032  0E90               	movlw	low parseCommand@resetCmd
 22685  003034  6F7F               	movwf	StringCompare@String2& (0+255),b
 22686  003036  0E00               	movlw	high parseCommand@resetCmd
 22687  003038  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22688  00303A  0E00               	movlw	0
 22689  00303C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22690  00303E  0E04               	movlw	4
 22691  003040  6F81               	movwf	StringCompare@Len& (0+255),b
 22692  003042  EC7C  F02E         	call	_StringCompare	;wreg free
 22693  003046  0900               	iorlw	0
 22694  003048  B4D8               	btfsc	status,2,c
 22695  00304A  D003               	goto	l2578
 22696                           
 22697                           ;app.c: 104: {
 22698                           ;app.c: 105: state = GATE_RESET;
 22699  00304C  0E05               	movlw	5
 22700  00304E                     L40:
 22701  00304E  0100               	movlb	0	; () banked
 22702  003050  6F94               	movwf	parseCommand@state& (0+255),b
 22703  003052                     l2578:
 22704                           
 22705                           ;app.c: 110: }
 22706                           ;app.c: 111: return state;
 22707                           
 22708                           ; BSR set to: 0
 22709                           
 22710                           ; BSR set to: 0
 22711                           
 22712                           ; BSR set to: 0
 22713                           
 22714                           ;app.c: 107: else
 22715                           ;app.c: 108: {
 22716                           
 22717                           ; BSR set to: 0
 22718  003052  0100               	movlb	0	; () banked
 22719  003054  5194               	movf	parseCommand@state& (0+255),w,b
 22720  003056  0012               	return	
 22721  003058                     __end_of_parseCommand:
 22722                           	opt stack 0
 22723                           tosu	equ	0xFFF
 22724                           tosh	equ	0xFFE
 22725                           tosl	equ	0xFFD
 22726                           pclath	equ	0xFFA
 22727                           tblptru	equ	0xFF8
 22728                           tblptrh	equ	0xFF7
 22729                           tblptrl	equ	0xFF6
 22730                           tablat	equ	0xFF5
 22731                           prodh	equ	0xFF4
 22732                           prodl	equ	0xFF3
 22733                           intcon	equ	0xFF2
 22734                           intcon2	equ	0xFF1
 22735                           intcon3	equ	0xFF0
 22736                           indf0	equ	0xFEF
 22737                           postinc0	equ	0xFEE
 22738                           plusw0	equ	0xFEB
 22739                           fsr0h	equ	0xFEA
 22740                           fsr0l	equ	0xFE9
 22741                           wreg	equ	0xFE8
 22742                           indf1	equ	0xFE7
 22743                           postinc1	equ	0xFE6
 22744                           postdec1	equ	0xFE5
 22745                           fsr1h	equ	0xFE2
 22746                           fsr1l	equ	0xFE1
 22747                           indf2	equ	0xFDF
 22748                           postinc2	equ	0xFDE
 22749                           postdec2	equ	0xFDD
 22750                           plusw2	equ	0xFDB
 22751                           fsr2h	equ	0xFDA
 22752                           fsr2l	equ	0xFD9
 22753                           status	equ	0xFD8
 22754                           
 22755 ;; *************** function _Mdm_RequestSmsData *****************
 22756 ;; Defined at:
 22757 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22758 ;; Parameters:    Size  Location     Type
 22759 ;;		None
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      void 
 22764 ;; Registers used:
 22765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22775 ;;Total ram usage:        0 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:   12
 22778 ;; This function calls:
 22779 ;;		_GenerateEvt
 22780 ;; This function is called by:
 22781 ;;		_detectCmd
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785                           	psect	text103
 22786  006AA8                     __ptext103:
 22787                           	opt stack 0
 22788  006AA8                     _Mdm_RequestSmsData:
 22789                           	opt stack 14
 22790                           
 22791                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22792                           
 22793                           ; BSR set to: 0
 22794                           ;incstack = 0
 22795  006AA8  0EDB               	movlw	low _GetSmsText
 22796  006AAA  0100               	movlb	0	; () banked
 22797  006AAC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22798  006AAE  0E00               	movlw	high _GetSmsText
 22799  006AB0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22800  006AB2  ECE7  F034         	call	_GenerateEvt	;wreg free
 22801  006AB6  0012               	return		;funcret
 22802  006AB8                     __end_of_Mdm_RequestSmsData:
 22803                           	opt stack 0
 22804                           tosu	equ	0xFFF
 22805                           tosh	equ	0xFFE
 22806                           tosl	equ	0xFFD
 22807                           pclath	equ	0xFFA
 22808                           tblptru	equ	0xFF8
 22809                           tblptrh	equ	0xFF7
 22810                           tblptrl	equ	0xFF6
 22811                           tablat	equ	0xFF5
 22812                           prodh	equ	0xFF4
 22813                           prodl	equ	0xFF3
 22814                           intcon	equ	0xFF2
 22815                           intcon2	equ	0xFF1
 22816                           intcon3	equ	0xFF0
 22817                           indf0	equ	0xFEF
 22818                           postinc0	equ	0xFEE
 22819                           plusw0	equ	0xFEB
 22820                           fsr0h	equ	0xFEA
 22821                           fsr0l	equ	0xFE9
 22822                           wreg	equ	0xFE8
 22823                           indf1	equ	0xFE7
 22824                           postinc1	equ	0xFE6
 22825                           postdec1	equ	0xFE5
 22826                           fsr1h	equ	0xFE2
 22827                           fsr1l	equ	0xFE1
 22828                           indf2	equ	0xFDF
 22829                           postinc2	equ	0xFDE
 22830                           postdec2	equ	0xFDD
 22831                           plusw2	equ	0xFDB
 22832                           fsr2h	equ	0xFDA
 22833                           fsr2l	equ	0xFD9
 22834                           status	equ	0xFD8
 22835                           
 22836 ;; *************** function _Mdm_IsSmsReceived *****************
 22837 ;; Defined at:
 22838 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22839 ;; Parameters:    Size  Location     Type
 22840 ;;		None
 22841 ;; Auto vars:     Size  Location     Type
 22842 ;;  Ret             1   33[BANK0 ] enum E8930
 22843 ;; Return value:  Size  Location     Type
 22844 ;;                  1    wreg      enum E8930
 22845 ;; Registers used:
 22846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22847 ;; Tracked objects:
 22848 ;;		On entry : 0/0
 22849 ;;		On exit  : 0/0
 22850 ;;		Unchanged: 0/0
 22851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22856 ;;Total ram usage:        1 bytes
 22857 ;; Hardware stack levels used:    1
 22858 ;; Hardware stack levels required when called:   12
 22859 ;; This function calls:
 22860 ;;		_ReceiveEvt
 22861 ;; This function is called by:
 22862 ;;		_detectCmd
 22863 ;; This function uses a non-reentrant model
 22864 ;;
 22865                           
 22866                           	psect	text104
 22867  00670C                     __ptext104:
 22868                           	opt stack 0
 22869  00670C                     _Mdm_IsSmsReceived:
 22870                           	opt stack 14
 22871                           
 22872                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22873                           
 22874                           ;incstack = 0
 22875  00670C  0E00               	movlw	0
 22876  00670E  0100               	movlb	0	; () banked
 22877  006710  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22878                           
 22879                           ; BSR set to: 0
 22880                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22881  006712  0EDC               	movlw	low _SmsEvent
 22882  006714  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22883  006716  0E00               	movlw	high _SmsEvent
 22884  006718  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22885  00671A  ECF6  F032         	call	_ReceiveEvt	;wreg free
 22886  00671E  0900               	iorlw	0
 22887  006720  B4D8               	btfsc	status,2,c
 22888  006722  D003               	goto	l1136
 22889                           
 22890                           ;mdm_gsm_gprs.c: 947: {
 22891                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22892  006724  0E01               	movlw	1
 22893  006726  0100               	movlb	0	; () banked
 22894  006728  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22895  00672A                     l1136:
 22896                           
 22897                           ;mdm_gsm_gprs.c: 949: }
 22898                           ;mdm_gsm_gprs.c: 951: return Ret;
 22899  00672A  0100               	movlb	0	; () banked
 22900  00672C  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22901  00672E  0012               	return	
 22902  006730                     __end_of_Mdm_IsSmsReceived:
 22903                           	opt stack 0
 22904                           tosu	equ	0xFFF
 22905                           tosh	equ	0xFFE
 22906                           tosl	equ	0xFFD
 22907                           pclath	equ	0xFFA
 22908                           tblptru	equ	0xFF8
 22909                           tblptrh	equ	0xFF7
 22910                           tblptrl	equ	0xFF6
 22911                           tablat	equ	0xFF5
 22912                           prodh	equ	0xFF4
 22913                           prodl	equ	0xFF3
 22914                           intcon	equ	0xFF2
 22915                           intcon2	equ	0xFF1
 22916                           intcon3	equ	0xFF0
 22917                           indf0	equ	0xFEF
 22918                           postinc0	equ	0xFEE
 22919                           plusw0	equ	0xFEB
 22920                           fsr0h	equ	0xFEA
 22921                           fsr0l	equ	0xFE9
 22922                           wreg	equ	0xFE8
 22923                           indf1	equ	0xFE7
 22924                           postinc1	equ	0xFE6
 22925                           postdec1	equ	0xFE5
 22926                           fsr1h	equ	0xFE2
 22927                           fsr1l	equ	0xFE1
 22928                           indf2	equ	0xFDF
 22929                           postinc2	equ	0xFDE
 22930                           postdec2	equ	0xFDD
 22931                           plusw2	equ	0xFDB
 22932                           fsr2h	equ	0xFDA
 22933                           fsr2l	equ	0xFD9
 22934                           status	equ	0xFD8
 22935                           
 22936 ;; *************** function _Mdm_IsRinging *****************
 22937 ;; Defined at:
 22938 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22939 ;; Parameters:    Size  Location     Type
 22940 ;;		None
 22941 ;; Auto vars:     Size  Location     Type
 22942 ;;  Ret             1   33[BANK0 ] enum E8926
 22943 ;; Return value:  Size  Location     Type
 22944 ;;                  1    wreg      enum E8926
 22945 ;; Registers used:
 22946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22947 ;; Tracked objects:
 22948 ;;		On entry : 0/0
 22949 ;;		On exit  : 0/0
 22950 ;;		Unchanged: 0/0
 22951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22956 ;;Total ram usage:        1 bytes
 22957 ;; Hardware stack levels used:    1
 22958 ;; Hardware stack levels required when called:   12
 22959 ;; This function calls:
 22960 ;;		_ReceiveEvt
 22961 ;; This function is called by:
 22962 ;;		_detectCmd
 22963 ;;		_getSetupCall
 22964 ;; This function uses a non-reentrant model
 22965 ;;
 22966                           
 22967                           	psect	text105
 22968  006730                     __ptext105:
 22969                           	opt stack 0
 22970  006730                     _Mdm_IsRinging:
 22971                           	opt stack 12
 22972                           
 22973                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;incstack = 0
 22977  006730  0E00               	movlw	0
 22978  006732  0100               	movlb	0	; () banked
 22979  006734  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22983  006736  0EDE               	movlw	low _RingEvent
 22984  006738  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22985  00673A  0E00               	movlw	high _RingEvent
 22986  00673C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22987  00673E  ECF6  F032         	call	_ReceiveEvt	;wreg free
 22988  006742  0900               	iorlw	0
 22989  006744  B4D8               	btfsc	status,2,c
 22990  006746  D003               	goto	l1152
 22991                           
 22992                           ;mdm_gsm_gprs.c: 1030: {
 22993                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 22994  006748  0E01               	movlw	1
 22995  00674A  0100               	movlb	0	; () banked
 22996  00674C  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22997  00674E                     l1152:
 22998                           
 22999                           ;mdm_gsm_gprs.c: 1032: }
 23000                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23001  00674E  0100               	movlb	0	; () banked
 23002  006750  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23003  006752  0012               	return	
 23004  006754                     __end_of_Mdm_IsRinging:
 23005                           	opt stack 0
 23006                           tosu	equ	0xFFF
 23007                           tosh	equ	0xFFE
 23008                           tosl	equ	0xFFD
 23009                           pclath	equ	0xFFA
 23010                           tblptru	equ	0xFF8
 23011                           tblptrh	equ	0xFF7
 23012                           tblptrl	equ	0xFF6
 23013                           tablat	equ	0xFF5
 23014                           prodh	equ	0xFF4
 23015                           prodl	equ	0xFF3
 23016                           intcon	equ	0xFF2
 23017                           intcon2	equ	0xFF1
 23018                           intcon3	equ	0xFF0
 23019                           indf0	equ	0xFEF
 23020                           postinc0	equ	0xFEE
 23021                           plusw0	equ	0xFEB
 23022                           fsr0h	equ	0xFEA
 23023                           fsr0l	equ	0xFE9
 23024                           wreg	equ	0xFE8
 23025                           indf1	equ	0xFE7
 23026                           postinc1	equ	0xFE6
 23027                           postdec1	equ	0xFE5
 23028                           fsr1h	equ	0xFE2
 23029                           fsr1l	equ	0xFE1
 23030                           indf2	equ	0xFDF
 23031                           postinc2	equ	0xFDE
 23032                           postdec2	equ	0xFDD
 23033                           plusw2	equ	0xFDB
 23034                           fsr2h	equ	0xFDA
 23035                           fsr2l	equ	0xFD9
 23036                           status	equ	0xFD8
 23037                           
 23038 ;; *************** function _Mdm_HangPhoneCall *****************
 23039 ;; Defined at:
 23040 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23041 ;; Parameters:    Size  Location     Type
 23042 ;;		None
 23043 ;; Auto vars:     Size  Location     Type
 23044 ;;		None
 23045 ;; Return value:  Size  Location     Type
 23046 ;;                  1    wreg      void 
 23047 ;; Registers used:
 23048 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23049 ;; Tracked objects:
 23050 ;;		On entry : 0/0
 23051 ;;		On exit  : 0/0
 23052 ;;		Unchanged: 0/0
 23053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23058 ;;Total ram usage:        0 bytes
 23059 ;; Hardware stack levels used:    1
 23060 ;; Hardware stack levels required when called:   13
 23061 ;; This function calls:
 23062 ;;		_Uart_WriteConstString
 23063 ;; This function is called by:
 23064 ;;		_detectCmd
 23065 ;;		_getSetupCall
 23066 ;; This function uses a non-reentrant model
 23067 ;;
 23068                           
 23069                           	psect	text106
 23070  006A64                     __ptext106:
 23071                           	opt stack 0
 23072  006A64                     _Mdm_HangPhoneCall:
 23073                           	opt stack 11
 23074                           
 23075                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;incstack = 0
 23079  006A64  0EF0               	movlw	low STR_6
 23080  006A66  0100               	movlb	0	; () banked
 23081  006A68  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23082  006A6A  0EFF               	movlw	high STR_6
 23083  006A6C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23084  006A6E  0E01               	movlw	1
 23085  006A70  ECAD  F030         	call	_Uart_WriteConstString
 23086  006A74  0012               	return		;funcret
 23087  006A76                     __end_of_Mdm_HangPhoneCall:
 23088                           	opt stack 0
 23089                           tosu	equ	0xFFF
 23090                           tosh	equ	0xFFE
 23091                           tosl	equ	0xFFD
 23092                           pclath	equ	0xFFA
 23093                           tblptru	equ	0xFF8
 23094                           tblptrh	equ	0xFF7
 23095                           tblptrl	equ	0xFF6
 23096                           tablat	equ	0xFF5
 23097                           prodh	equ	0xFF4
 23098                           prodl	equ	0xFF3
 23099                           intcon	equ	0xFF2
 23100                           intcon2	equ	0xFF1
 23101                           intcon3	equ	0xFF0
 23102                           indf0	equ	0xFEF
 23103                           postinc0	equ	0xFEE
 23104                           plusw0	equ	0xFEB
 23105                           fsr0h	equ	0xFEA
 23106                           fsr0l	equ	0xFE9
 23107                           wreg	equ	0xFE8
 23108                           indf1	equ	0xFE7
 23109                           postinc1	equ	0xFE6
 23110                           postdec1	equ	0xFE5
 23111                           fsr1h	equ	0xFE2
 23112                           fsr1l	equ	0xFE1
 23113                           indf2	equ	0xFDF
 23114                           postinc2	equ	0xFDE
 23115                           postdec2	equ	0xFDD
 23116                           plusw2	equ	0xFDB
 23117                           fsr2h	equ	0xFDA
 23118                           fsr2l	equ	0xFD9
 23119                           status	equ	0xFD8
 23120                           
 23121 ;; *************** function _Mdm_GetSmsData *****************
 23122 ;; Defined at:
 23123 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23126 ;;		 -> smsText(20), 
 23127 ;; Auto vars:     Size  Location     Type
 23128 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23129 ;; Return value:  Size  Location     Type
 23130 ;;                  1    wreg      enum E8922
 23131 ;; Registers used:
 23132 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23133 ;; Tracked objects:
 23134 ;;		On entry : 0/0
 23135 ;;		On exit  : 0/0
 23136 ;;		Unchanged: 0/0
 23137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23142 ;;Total ram usage:        3 bytes
 23143 ;; Hardware stack levels used:    1
 23144 ;; Hardware stack levels required when called:   12
 23145 ;; This function calls:
 23146 ;;		_ReceiveEvt
 23147 ;;		_StringCopy
 23148 ;; This function is called by:
 23149 ;;		_detectCmd
 23150 ;; This function uses a non-reentrant model
 23151 ;;
 23152                           
 23153                           	psect	text107
 23154  005638                     __ptext107:
 23155                           	opt stack 0
 23156  005638                     _Mdm_GetSmsData:
 23157                           	opt stack 14
 23158                           
 23159                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23160                           
 23161                           ;incstack = 0
 23162  005638  0E00               	movlw	0
 23163  00563A  0100               	movlb	0	; () banked
 23164  00563C  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23168  00563E  0EDA               	movlw	low _SmsTxtReady
 23169  005640  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23170  005642  0E00               	movlw	high _SmsTxtReady
 23171  005644  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23172  005646  ECF6  F032         	call	_ReceiveEvt	;wreg free
 23173  00564A  0900               	iorlw	0
 23174  00564C  B4D8               	btfsc	status,2,c
 23175  00564E  D025               	goto	l1129
 23176                           
 23177                           ;mdm_gsm_gprs.c: 898: {
 23178                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23179  005650  0E50               	movlw	low (_Mdm_SmsRx+80)
 23180  005652  0100               	movlb	0	; () banked
 23181  005654  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23182  005656  0E07               	movlw	high (_Mdm_SmsRx+80)
 23183  005658  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23184  00565A  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23185  00565E  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23186  005662  0E01               	movlw	1
 23187  005664  0107               	movlb	7	; () banked
 23188  005666  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23189  005668  0100               	movlb	0	; () banked
 23190  00566A  6F89               	movwf	StringCopy@Len& (0+255),b
 23191  00566C  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23192  00566E  0E00               	movlw	0
 23193  005670  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23194  005672  ECE9  F02B         	call	_StringCopy	;wreg free
 23195                           
 23196                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23197  005676  0E15               	movlw	low (_Mdm_SmsRx+21)
 23198  005678  0100               	movlb	0	; () banked
 23199  00567A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23200  00567C  0E07               	movlw	high (_Mdm_SmsRx+21)
 23201  00567E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23202  005680  0E3E               	movlw	low _callerNumber
 23203  005682  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23204  005684  0E03               	movlw	high _callerNumber
 23205  005686  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23206  005688  0E00               	movlw	0
 23207  00568A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23208  00568C  0E0D               	movlw	13
 23209  00568E  6F89               	movwf	StringCopy@Len& (0+255),b
 23210  005690  ECE9  F02B         	call	_StringCopy	;wreg free
 23211                           
 23212                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23213  005694  0E01               	movlw	1
 23214  005696  0100               	movlb	0	; () banked
 23215  005698  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23216  00569A                     l1129:
 23217                           
 23218                           ;mdm_gsm_gprs.c: 904: }
 23219                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23220                           
 23221                           ; BSR set to: 0
 23222  00569A  0100               	movlb	0	; () banked
 23223  00569C  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23224  00569E  0012               	return	
 23225  0056A0                     __end_of_Mdm_GetSmsData:
 23226                           	opt stack 0
 23227                           tosu	equ	0xFFF
 23228                           tosh	equ	0xFFE
 23229                           tosl	equ	0xFFD
 23230                           pclath	equ	0xFFA
 23231                           tblptru	equ	0xFF8
 23232                           tblptrh	equ	0xFF7
 23233                           tblptrl	equ	0xFF6
 23234                           tablat	equ	0xFF5
 23235                           prodh	equ	0xFF4
 23236                           prodl	equ	0xFF3
 23237                           intcon	equ	0xFF2
 23238                           intcon2	equ	0xFF1
 23239                           intcon3	equ	0xFF0
 23240                           indf0	equ	0xFEF
 23241                           postinc0	equ	0xFEE
 23242                           plusw0	equ	0xFEB
 23243                           fsr0h	equ	0xFEA
 23244                           fsr0l	equ	0xFE9
 23245                           wreg	equ	0xFE8
 23246                           indf1	equ	0xFE7
 23247                           postinc1	equ	0xFE6
 23248                           postdec1	equ	0xFE5
 23249                           fsr1h	equ	0xFE2
 23250                           fsr1l	equ	0xFE1
 23251                           indf2	equ	0xFDF
 23252                           postinc2	equ	0xFDE
 23253                           postdec2	equ	0xFDD
 23254                           plusw2	equ	0xFDB
 23255                           fsr2h	equ	0xFDA
 23256                           fsr2l	equ	0xFD9
 23257                           status	equ	0xFD8
 23258                           
 23259 ;; *************** function _GetLastInteractionNumber *****************
 23260 ;; Defined at:
 23261 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23262 ;; Parameters:    Size  Location     Type
 23263 ;;		None
 23264 ;; Auto vars:     Size  Location     Type
 23265 ;;		None
 23266 ;; Return value:  Size  Location     Type
 23267 ;;                  2   29[BANK0 ] PTR unsigned char 
 23268 ;; Registers used:
 23269 ;;		wreg, status,2, status,0
 23270 ;; Tracked objects:
 23271 ;;		On entry : 0/0
 23272 ;;		On exit  : 0/0
 23273 ;;		Unchanged: 0/0
 23274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23279 ;;Total ram usage:        2 bytes
 23280 ;; Hardware stack levels used:    1
 23281 ;; Hardware stack levels required when called:   11
 23282 ;; This function calls:
 23283 ;;		Nothing
 23284 ;; This function is called by:
 23285 ;;		_detectCmd
 23286 ;; This function uses a non-reentrant model
 23287 ;;
 23288                           
 23289                           	psect	text108
 23290  006B00                     __ptext108:
 23291                           	opt stack 0
 23292  006B00                     _GetLastInteractionNumber:
 23293                           	opt stack 15
 23294                           
 23295                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;incstack = 0
 23299  006B00  0E3E               	movlw	low _callerNumber
 23300  006B02  0100               	movlb	0	; () banked
 23301  006B04  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23302  006B06  0E03               	movlw	high _callerNumber
 23303  006B08  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23304  006B0A  0012               	return	
 23305  006B0C                     __end_of_GetLastInteractionNumber:
 23306                           	opt stack 0
 23307                           tosu	equ	0xFFF
 23308                           tosh	equ	0xFFE
 23309                           tosl	equ	0xFFD
 23310                           pclath	equ	0xFFA
 23311                           tblptru	equ	0xFF8
 23312                           tblptrh	equ	0xFF7
 23313                           tblptrl	equ	0xFF6
 23314                           tablat	equ	0xFF5
 23315                           prodh	equ	0xFF4
 23316                           prodl	equ	0xFF3
 23317                           intcon	equ	0xFF2
 23318                           intcon2	equ	0xFF1
 23319                           intcon3	equ	0xFF0
 23320                           indf0	equ	0xFEF
 23321                           postinc0	equ	0xFEE
 23322                           plusw0	equ	0xFEB
 23323                           fsr0h	equ	0xFEA
 23324                           fsr0l	equ	0xFE9
 23325                           wreg	equ	0xFE8
 23326                           indf1	equ	0xFE7
 23327                           postinc1	equ	0xFE6
 23328                           postdec1	equ	0xFE5
 23329                           fsr1h	equ	0xFE2
 23330                           fsr1l	equ	0xFE1
 23331                           indf2	equ	0xFDF
 23332                           postinc2	equ	0xFDE
 23333                           postdec2	equ	0xFDD
 23334                           plusw2	equ	0xFDB
 23335                           fsr2h	equ	0xFDA
 23336                           fsr2l	equ	0xFD9
 23337                           status	equ	0xFD8
 23338                           
 23339 ;; *************** function _GetCallerNumber *****************
 23340 ;; Defined at:
 23341 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23342 ;; Parameters:    Size  Location     Type
 23343 ;;		None
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;		None
 23346 ;; Return value:  Size  Location     Type
 23347 ;;                  2   35[BANK0 ] PTR unsigned char 
 23348 ;; Registers used:
 23349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23350 ;; Tracked objects:
 23351 ;;		On entry : 0/0
 23352 ;;		On exit  : 0/0
 23353 ;;		Unchanged: 0/0
 23354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23359 ;;Total ram usage:        2 bytes
 23360 ;; Hardware stack levels used:    1
 23361 ;; Hardware stack levels required when called:   12
 23362 ;; This function calls:
 23363 ;;		_ClearBuffer
 23364 ;;		_ReceiveEvt
 23365 ;; This function is called by:
 23366 ;;		_detectCmd
 23367 ;;		_initFsm
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text109
 23372  0063FA                     __ptext109:
 23373                           	opt stack 0
 23374  0063FA                     _GetCallerNumber:
 23375                           	opt stack 14
 23376                           
 23377                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23378                           
 23379                           ; BSR set to: 0
 23380                           ;incstack = 0
 23381  0063FA  0EDD               	movlw	low _ClipEvent
 23382  0063FC  0100               	movlb	0	; () banked
 23383  0063FE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23384  006400  0E00               	movlw	high _ClipEvent
 23385  006402  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23386  006404  ECF6  F032         	call	_ReceiveEvt	;wreg free
 23387  006408  0900               	iorlw	0
 23388  00640A  A4D8               	btfss	status,2,c
 23389  00640C  D00B               	goto	l1156
 23390                           
 23391                           ;mdm_gsm_gprs.c: 1040: {
 23392                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23393  00640E  0E3E               	movlw	low _callerNumber
 23394  006410  0100               	movlb	0	; () banked
 23395  006412  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23396  006414  0E03               	movlw	high _callerNumber
 23397  006416  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23398  006418  0E00               	movlw	0
 23399  00641A  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23400  00641C  0E0D               	movlw	13
 23401  00641E  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23402  006420  EC18  F032         	call	_ClearBuffer	;wreg free
 23403  006424                     l1156:
 23404                           
 23405                           ;mdm_gsm_gprs.c: 1042: }
 23406                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23407  006424  0E3E               	movlw	low _callerNumber
 23408  006426  0100               	movlb	0	; () banked
 23409  006428  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23410  00642A  0E03               	movlw	high _callerNumber
 23411  00642C  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23412  00642E  0012               	return	
 23413  006430                     __end_of_GetCallerNumber:
 23414                           	opt stack 0
 23415                           tosu	equ	0xFFF
 23416                           tosh	equ	0xFFE
 23417                           tosl	equ	0xFFD
 23418                           pclath	equ	0xFFA
 23419                           tblptru	equ	0xFF8
 23420                           tblptrh	equ	0xFF7
 23421                           tblptrl	equ	0xFF6
 23422                           tablat	equ	0xFF5
 23423                           prodh	equ	0xFF4
 23424                           prodl	equ	0xFF3
 23425                           intcon	equ	0xFF2
 23426                           intcon2	equ	0xFF1
 23427                           intcon3	equ	0xFF0
 23428                           indf0	equ	0xFEF
 23429                           postinc0	equ	0xFEE
 23430                           plusw0	equ	0xFEB
 23431                           fsr0h	equ	0xFEA
 23432                           fsr0l	equ	0xFE9
 23433                           wreg	equ	0xFE8
 23434                           indf1	equ	0xFE7
 23435                           postinc1	equ	0xFE6
 23436                           postdec1	equ	0xFE5
 23437                           fsr1h	equ	0xFE2
 23438                           fsr1l	equ	0xFE1
 23439                           indf2	equ	0xFDF
 23440                           postinc2	equ	0xFDE
 23441                           postdec2	equ	0xFDD
 23442                           plusw2	equ	0xFDB
 23443                           fsr2h	equ	0xFDA
 23444                           fsr2l	equ	0xFD9
 23445                           status	equ	0xFD8
 23446                           
 23447 ;; *************** function _delCmdFsm *****************
 23448 ;; Defined at:
 23449 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23450 ;; Parameters:    Size  Location     Type
 23451 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23452 ;;		 -> receivedNumber(13), 
 23453 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23454 ;;		 -> smsText(20), 
 23455 ;; Auto vars:     Size  Location     Type
 23456 ;;  emptyNumber    13    9[BANK1 ] const unsigned char [13]
 23457 ;;  searchNumber    1   25[BANK1 ] unsigned char 
 23458 ;;  numberInMemo    1   24[BANK1 ] unsigned char 
 23459 ;;  masterOpResu    1   23[BANK1 ] unsigned char 
 23460 ;;  isComplete      1   22[BANK1 ] unsigned char 
 23461 ;; Return value:  Size  Location     Type
 23462 ;;                  1    wreg      unsigned char 
 23463 ;; Registers used:
 23464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23465 ;; Tracked objects:
 23466 ;;		On entry : 0/0
 23467 ;;		On exit  : 0/0
 23468 ;;		Unchanged: 0/0
 23469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23470 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23471 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23473 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23474 ;;Total ram usage:       21 bytes
 23475 ;; Hardware stack levels used:    1
 23476 ;; Hardware stack levels required when called:   18
 23477 ;; This function calls:
 23478 ;;		_isMasterNumber
 23479 ;;		_isNumberInMemory
 23480 ;;		_saveNumberInMemory
 23481 ;; This function is called by:
 23482 ;;		_MyApp_Task
 23483 ;; This function uses a non-reentrant model
 23484 ;;
 23485                           
 23486                           	psect	text110
 23487  0042B4                     __ptext110:
 23488                           	opt stack 0
 23489  0042B4                     _delCmdFsm:
 23490                           	opt stack 9
 23491                           
 23492                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;incstack = 0
 23496  0042B4  0E0F               	movlw	low delCmdFsm@F9013
 23497  0042B6  6EF6               	movwf	tblptrl,c
 23498  0042B8                     	if	1	;There is more than 1 active tblptr byte
 23499  0042B8  0EFC               	movlw	high delCmdFsm@F9013
 23500  0042BA  6EF7               	movwf	tblptrh,c
 23501  0042BC                     	endif
 23502  0042BC                     	if	0	;There are less than 3 active tblptr bytes
 23503  0042BC                     	endif
 23504  0042BC  EE21  F009         	lfsr	2,delCmdFsm@emptyNumber
 23505  0042C0  0E0C               	movlw	12
 23506  0042C2                     u16110:
 23507  0042C2  0009               	tblrd		*+
 23508  0042C4  CFF5 FFDE          	movff	tablat,postinc2
 23509  0042C8  06E8               	decf	wreg,f,c
 23510  0042CA  E2FB               	bc	u16110
 23511                           
 23512                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23513                           ;app_delCmd.c: 75: bool isComplete = 0;
 23514  0042CC  0E00               	movlw	0
 23515  0042CE  0101               	movlb	1	; () banked
 23516  0042D0  6F16               	movwf	delCmdFsm@isComplete& (0+255),b
 23517                           
 23518                           ; BSR set to: 1
 23519                           ;app_delCmd.c: 76: uint8_t numberInMemory = 0;
 23520  0042D2  0E00               	movlw	0
 23521  0042D4  6F18               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23522                           
 23523                           ; BSR set to: 1
 23524                           ;app_delCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23525  0042D6  0E01               	movlw	1
 23526  0042D8  6F17               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23527                           
 23528                           ; BSR set to: 1
 23529                           ;app_delCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23530  0042DA  0E01               	movlw	1
 23531  0042DC  6F19               	movwf	delCmdFsm@searchNumber& (0+255),b
 23532                           
 23533                           ;app_delCmd.c: 80: switch (currentState)
 23534  0042DE  D03C               	goto	l2854
 23535  0042E0                     
 23536                           ; BSR set to: 1
 23537                           ;app_delCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23538                           
 23539                           ; BSR set to: 1
 23540  0042E0  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23541  0042E4  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23542  0042E8  EC43  F02A         	call	_isMasterNumber	;wreg free
 23543  0042EC  0101               	movlb	1	; () banked
 23544  0042EE  6F17               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23545                           
 23546                           ; BSR set to: 1
 23547                           ;app_delCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23548  0042F0  5117               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 23549  0042F2  A4D8               	btfss	status,2,c
 23550  0042F4  D002               	goto	l2856
 23551                           
 23552                           ; BSR set to: 1
 23553                           ;app_delCmd.c: 85: {
 23554                           ;app_delCmd.c: 86: currentState = DEL_FSM_REMOVE_NUMBER;
 23555  0042F6  0E01               	movlw	1
 23556  0042F8  D02D               	goto	L44
 23557  0042FA                     l2856:
 23558                           
 23559                           ; BSR set to: 1
 23560                           ;app_delCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23561                           
 23562                           ; BSR set to: 1
 23563  0042FA  0517               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 23564  0042FC  D024               	goto	L45
 23565  0042FE                     
 23566                           ; BSR set to: 1
 23567                           ;app_delCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23568                           
 23569                           ; BSR set to: 1
 23570  0042FE  0E04               	movlw	4
 23571  004300  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 23572  004302  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23573  004304  0E00               	movlw	0
 23574  004306  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 23575  004308  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23576  00430A  0E18               	movlw	low delCmdFsm@numberInMemory
 23577  00430C  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23578  00430E  0E01               	movlw	high delCmdFsm@numberInMemory
 23579  004310  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23580  004312  ECB8  F021         	call	_isNumberInMemory	;wreg free
 23581  004316  0101               	movlb	1	; () banked
 23582  004318  6F19               	movwf	delCmdFsm@searchNumber& (0+255),b
 23583                           
 23584                           ; BSR set to: 1
 23585                           ;app_delCmd.c: 96: if (searchNumber == SEARCH_FSM_FOUND)
 23586  00431A  0E03               	movlw	3
 23587  00431C  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23588  00431E  A4D8               	btfss	status,2,c
 23589  004320  D00C               	goto	l2861
 23590                           
 23591                           ; BSR set to: 1
 23592                           ;app_delCmd.c: 97: {
 23593                           ;app_delCmd.c: 98: saveNumberInMemory(numberInMemory, emptyNumber);
 23594  004322  0E09               	movlw	low delCmdFsm@emptyNumber
 23595  004324  0100               	movlb	0	; () banked
 23596  004326  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23597  004328  0E01               	movlw	high delCmdFsm@emptyNumber
 23598  00432A  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23599  00432C  0101               	movlb	1	; () banked
 23600  00432E  5118               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23601  004330  ECC2  F034         	call	_saveNumberInMemory
 23602                           
 23603                           ;app_delCmd.c: 99: currentState = DEL_FSM_COMPLETE;
 23604  004334  0E02               	movlw	2
 23605  004336  0101               	movlb	1	; () banked
 23606  004338  D00D               	goto	L44
 23607  00433A                     l2861:
 23608                           
 23609                           ; BSR set to: 1
 23610                           ;app_delCmd.c: 101: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEA
      +                          RCH_FSM_ERROR)
 23611                           
 23612                           ; BSR set to: 1
 23613  00433A  0E04               	movlw	4
 23614  00433C  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23615  00433E  B4D8               	btfsc	status,2,c
 23616  004340  D004               	goto	u16160
 23617                           
 23618                           ; BSR set to: 1
 23619  004342  0E02               	movlw	2
 23620  004344  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23621  004346                     L45:
 23622  004346  A4D8               	btfss	status,2,c
 23623  004348  D011               	goto	l2859
 23624  00434A                     u16160:
 23625                           
 23626                           ; BSR set to: 1
 23627                           ;app_delCmd.c: 102: {
 23628                           ;app_delCmd.c: 103: currentState = DEL_FSM_COMPLETE;
 23629                           
 23630                           ; BSR set to: 1
 23631  00434A  0E02               	movlw	2
 23632  00434C  D003               	goto	L44
 23633  00434E                     
 23634                           ; BSR set to: 1
 23635                           ;app_delCmd.c: 108: isComplete = 1;
 23636                           
 23637                           ; BSR set to: 1
 23638  00434E  0E01               	movlw	1
 23639  004350  6F16               	movwf	delCmdFsm@isComplete& (0+255),b
 23640                           
 23641                           ;app_delCmd.c: 109: currentState = DEL_FSM_CHECK_MASTER;
 23642  004352  0E00               	movlw	0
 23643  004354                     L44:
 23644  004354  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23645                           
 23646                           ; BSR set to: 1
 23647                           ;app_delCmd.c: 114: }
 23648                           
 23649                           ; BSR set to: 1
 23650                           ;app_delCmd.c: 113: break;
 23651                           
 23652                           ;app_delCmd.c: 112: default:
 23653                           
 23654                           ;app_delCmd.c: 110: break;
 23655  004356  D00A               	goto	l2859
 23656  004358                     l2854:
 23657                           
 23658                           ; BSR set to: 1
 23659                           
 23660                           ; BSR set to: 1
 23661  004358  51D4               	movf	delCmdFsm@currentState& (0+255),w,b
 23662                           
 23663                           ; Switch size 1, requested type "space"
 23664                           ; Number of cases is 3, Range of values is 0 to 2
 23665                           ; switch strategies available:
 23666                           ; Name         Instructions Cycles
 23667                           ; simple_byte           10     6 (average)
 23668                           ;	Chosen strategy is simple_byte
 23669  00435A  0A00               	xorlw	0	; case 0
 23670  00435C  B4D8               	btfsc	status,2,c
 23671  00435E  D7C0               	goto	l2855
 23672  004360  0A01               	xorlw	1	; case 1
 23673  004362  B4D8               	btfsc	status,2,c
 23674  004364  D7CC               	goto	l2860
 23675  004366  0A03               	xorlw	3	; case 2
 23676  004368  B4D8               	btfsc	status,2,c
 23677  00436A  D7F1               	goto	l2866
 23678  00436C                     l2859:
 23679                           
 23680                           ; BSR set to: 1
 23681                           ;app_delCmd.c: 115: return isComplete;
 23682                           
 23683                           ; BSR set to: 1
 23684  00436C  5116               	movf	delCmdFsm@isComplete& (0+255),w,b
 23685  00436E  0012               	return	
 23686  004370                     __end_of_delCmdFsm:
 23687                           	opt stack 0
 23688                           tosu	equ	0xFFF
 23689                           tosh	equ	0xFFE
 23690                           tosl	equ	0xFFD
 23691                           pclath	equ	0xFFA
 23692                           tblptru	equ	0xFF8
 23693                           tblptrh	equ	0xFF7
 23694                           tblptrl	equ	0xFF6
 23695                           tablat	equ	0xFF5
 23696                           prodh	equ	0xFF4
 23697                           prodl	equ	0xFF3
 23698                           intcon	equ	0xFF2
 23699                           intcon2	equ	0xFF1
 23700                           intcon3	equ	0xFF0
 23701                           indf0	equ	0xFEF
 23702                           postinc0	equ	0xFEE
 23703                           plusw0	equ	0xFEB
 23704                           fsr0h	equ	0xFEA
 23705                           fsr0l	equ	0xFE9
 23706                           wreg	equ	0xFE8
 23707                           indf1	equ	0xFE7
 23708                           postinc1	equ	0xFE6
 23709                           postdec1	equ	0xFE5
 23710                           fsr1h	equ	0xFE2
 23711                           fsr1l	equ	0xFE1
 23712                           indf2	equ	0xFDF
 23713                           postinc2	equ	0xFDE
 23714                           postdec2	equ	0xFDD
 23715                           plusw2	equ	0xFDB
 23716                           fsr2h	equ	0xFDA
 23717                           fsr2l	equ	0xFD9
 23718                           status	equ	0xFD8
 23719                           
 23720 ;; *************** function _addCmdFsm *****************
 23721 ;; Defined at:
 23722 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23723 ;; Parameters:    Size  Location     Type
 23724 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23725 ;;		 -> receivedNumber(13), 
 23726 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23727 ;;		 -> smsText(20), 
 23728 ;; Auto vars:     Size  Location     Type
 23729 ;;  searchNumber    1   12[BANK1 ] unsigned char 
 23730 ;;  numberInMemo    1   11[BANK1 ] unsigned char 
 23731 ;;  masterOpResu    1   10[BANK1 ] unsigned char 
 23732 ;;  isComplete      1    9[BANK1 ] unsigned char 
 23733 ;; Return value:  Size  Location     Type
 23734 ;;                  1    wreg      unsigned char 
 23735 ;; Registers used:
 23736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23737 ;; Tracked objects:
 23738 ;;		On entry : 0/0
 23739 ;;		On exit  : 0/0
 23740 ;;		Unchanged: 0/0
 23741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23742 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23743 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23745 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23746 ;;Total ram usage:        8 bytes
 23747 ;; Hardware stack levels used:    1
 23748 ;; Hardware stack levels required when called:   18
 23749 ;; This function calls:
 23750 ;;		_findEmptySpot
 23751 ;;		_isMasterNumber
 23752 ;;		_isNumberInMemory
 23753 ;;		_saveNumberInMemory
 23754 ;; This function is called by:
 23755 ;;		_MyApp_Task
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           
 23759                           	psect	text111
 23760  003A18                     __ptext111:
 23761                           	opt stack 0
 23762  003A18                     _addCmdFsm:
 23763                           	opt stack 9
 23764                           
 23765                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23766                           ;app_addCmd.c: 75: bool isComplete = 0;
 23767                           
 23768                           ; BSR set to: 1
 23769                           ;incstack = 0
 23770  003A18  0E00               	movlw	0
 23771  003A1A  0101               	movlb	1	; () banked
 23772  003A1C  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 23773                           
 23774                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 23775  003A1E  0E00               	movlw	0
 23776  003A20  6F0B               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23777                           
 23778                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23779  003A22  0E01               	movlw	1
 23780  003A24  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23781                           
 23782                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23783  003A26  0E01               	movlw	1
 23784  003A28  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23785                           
 23786                           ;app_addCmd.c: 80: switch (currentState)
 23787  003A2A  D04F               	goto	l2815
 23788  003A2C                     
 23789                           ; BSR set to: 1
 23790                           ;app_addCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23791                           
 23792                           ; BSR set to: 1
 23793  003A2C  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23794  003A30  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23795  003A34  EC43  F02A         	call	_isMasterNumber	;wreg free
 23796  003A38  0101               	movlb	1	; () banked
 23797  003A3A  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;app_addCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23801  003A3C  510A               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 23802  003A3E  A4D8               	btfss	status,2,c
 23803  003A40  D002               	goto	l2817
 23804                           
 23805                           ; BSR set to: 1
 23806                           ;app_addCmd.c: 85: {
 23807                           ;app_addCmd.c: 86: currentState = ADD_FSM_CHECK_DUPLICATED;
 23808  003A42  0E01               	movlw	1
 23809  003A44  D03B               	goto	L50
 23810  003A46                     l2817:
 23811                           
 23812                           ; BSR set to: 1
 23813                           ;app_addCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23814                           
 23815                           ; BSR set to: 1
 23816  003A46  050A               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 23817  003A48  D036               	goto	L107
 23818  003A4A                     
 23819                           ; BSR set to: 1
 23820                           ;app_addCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23821                           
 23822                           ; BSR set to: 1
 23823  003A4A  0E04               	movlw	4
 23824  003A4C  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23825  003A4E  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23826  003A50  0E00               	movlw	0
 23827  003A52  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23828  003A54  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23829  003A56  0E0B               	movlw	low addCmdFsm@numberInMemory
 23830  003A58  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23831  003A5A  0E01               	movlw	high addCmdFsm@numberInMemory
 23832  003A5C  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23833  003A5E  ECB8  F021         	call	_isNumberInMemory	;wreg free
 23834  003A62  0101               	movlb	1	; () banked
 23835  003A64  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23836                           
 23837                           ; BSR set to: 1
 23838                           ;app_addCmd.c: 96: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23839  003A66  0E04               	movlw	4
 23840  003A68  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23841  003A6A  A4D8               	btfss	status,2,c
 23842  003A6C  D01E               	goto	l2828
 23843                           
 23844                           ; BSR set to: 1
 23845                           ;app_addCmd.c: 97: {
 23846                           ;app_addCmd.c: 98: currentState = ADD_FSM_SAVE_NEW;
 23847  003A6E  0E02               	movlw	2
 23848  003A70  D025               	goto	L50
 23849  003A72                     
 23850                           ; BSR set to: 1
 23851                           ;app_addCmd.c: 107: searchNumber = findEmptySpot(&numberInMemory);
 23852                           
 23853                           ; BSR set to: 1
 23854  003A72  0E0B               	movlw	low addCmdFsm@numberInMemory
 23855  003A74  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 23856  003A76  0E01               	movlw	high addCmdFsm@numberInMemory
 23857  003A78  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 23858  003A7A  EC8D  F026         	call	_findEmptySpot	;wreg free
 23859  003A7E  0101               	movlb	1	; () banked
 23860  003A80  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23861                           
 23862                           ; BSR set to: 1
 23863                           ;app_addCmd.c: 108: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23864  003A82  0E04               	movlw	4
 23865  003A84  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23866  003A86  A4D8               	btfss	status,2,c
 23867  003A88  D010               	goto	l2828
 23868                           
 23869                           ; BSR set to: 1
 23870                           ;app_addCmd.c: 109: {
 23871                           ;app_addCmd.c: 110: saveNumberInMemory(numberInMemory, smsText + 4);
 23872  003A8A  0E04               	movlw	4
 23873  003A8C  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23874  003A8E  0100               	movlb	0	; () banked
 23875  003A90  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23876  003A92  0E00               	movlw	0
 23877  003A94  0101               	movlb	1	; () banked
 23878  003A96  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23879  003A98  0100               	movlb	0	; () banked
 23880  003A9A  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23881  003A9C  0101               	movlb	1	; () banked
 23882  003A9E  510B               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23883  003AA0  ECC2  F034         	call	_saveNumberInMemory
 23884                           
 23885                           ;app_addCmd.c: 111: currentState = ADD_FSM_COMPLETE;
 23886  003AA4  0E03               	movlw	3
 23887  003AA6  0101               	movlb	1	; () banked
 23888  003AA8  D009               	goto	L50
 23889  003AAA                     l2828:
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;app_addCmd.c: 113: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 23893                           
 23894                           ; BSR set to: 1
 23895  003AAA  0E03               	movlw	3
 23896  003AAC  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23897  003AAE  B4D8               	btfsc	status,2,c
 23898  003AB0  D004               	goto	u16100
 23899                           
 23900                           ; BSR set to: 1
 23901  003AB2  0E02               	movlw	2
 23902  003AB4  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23903  003AB6                     L107:
 23904  003AB6  A4D8               	btfss	status,2,c
 23905  003AB8  D015               	goto	l2820
 23906  003ABA                     u16100:
 23907                           
 23908                           ; BSR set to: 1
 23909                           ;app_addCmd.c: 114: {
 23910                           ;app_addCmd.c: 115: currentState = ADD_FSM_COMPLETE;
 23911                           
 23912                           ; BSR set to: 1
 23913  003ABA  0E03               	movlw	3
 23914  003ABC                     L50:
 23915  003ABC  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23916                           
 23917                           ; BSR set to: 1
 23918                           ;app_addCmd.c: 116: }
 23919                           ;app_addCmd.c: 117: break;
 23920                           
 23921                           ; BSR set to: 1
 23922  003ABE  D012               	goto	l2820
 23923  003AC0                     
 23924                           ; BSR set to: 1
 23925                           ;app_addCmd.c: 120: currentState = ADD_FSM_CHECK_MASTER;
 23926                           
 23927                           ; BSR set to: 1
 23928  003AC0  0E00               	movlw	0
 23929  003AC2  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23930                           
 23931                           ;app_addCmd.c: 121: isComplete = 1;
 23932  003AC4  0E01               	movlw	1
 23933  003AC6  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 23934                           
 23935                           ; BSR set to: 1
 23936                           ;app_addCmd.c: 126: }
 23937                           
 23938                           ; BSR set to: 1
 23939                           ;app_addCmd.c: 125: break;
 23940                           
 23941                           ;app_addCmd.c: 124: default:
 23942                           
 23943                           ;app_addCmd.c: 122: break;
 23944  003AC8  D00D               	goto	l2820
 23945  003ACA                     l2815:
 23946                           
 23947                           ; BSR set to: 1
 23948                           
 23949                           ; BSR set to: 1
 23950  003ACA  51D5               	movf	addCmdFsm@currentState& (0+255),w,b
 23951                           
 23952                           ; Switch size 1, requested type "space"
 23953                           ; Number of cases is 4, Range of values is 0 to 3
 23954                           ; switch strategies available:
 23955                           ; Name         Instructions Cycles
 23956                           ; simple_byte           13     7 (average)
 23957                           ;	Chosen strategy is simple_byte
 23958  003ACC  0A00               	xorlw	0	; case 0
 23959  003ACE  B4D8               	btfsc	status,2,c
 23960  003AD0  D7AD               	goto	l2816
 23961  003AD2  0A01               	xorlw	1	; case 1
 23962  003AD4  B4D8               	btfsc	status,2,c
 23963  003AD6  D7B9               	goto	l2821
 23964  003AD8  0A03               	xorlw	3	; case 2
 23965  003ADA  B4D8               	btfsc	status,2,c
 23966  003ADC  D7CA               	goto	l2827
 23967  003ADE  0A01               	xorlw	1	; case 3
 23968  003AE0  B4D8               	btfsc	status,2,c
 23969  003AE2  D7EE               	goto	l2833
 23970  003AE4                     l2820:
 23971                           
 23972                           ; BSR set to: 1
 23973                           ;app_addCmd.c: 127: return isComplete;
 23974                           
 23975                           ; BSR set to: 1
 23976  003AE4  5109               	movf	addCmdFsm@isComplete& (0+255),w,b
 23977  003AE6  0012               	return	
 23978  003AE8                     __end_of_addCmdFsm:
 23979                           	opt stack 0
 23980                           tosu	equ	0xFFF
 23981                           tosh	equ	0xFFE
 23982                           tosl	equ	0xFFD
 23983                           pclath	equ	0xFFA
 23984                           tblptru	equ	0xFF8
 23985                           tblptrh	equ	0xFF7
 23986                           tblptrl	equ	0xFF6
 23987                           tablat	equ	0xFF5
 23988                           prodh	equ	0xFF4
 23989                           prodl	equ	0xFF3
 23990                           intcon	equ	0xFF2
 23991                           intcon2	equ	0xFF1
 23992                           intcon3	equ	0xFF0
 23993                           indf0	equ	0xFEF
 23994                           postinc0	equ	0xFEE
 23995                           plusw0	equ	0xFEB
 23996                           fsr0h	equ	0xFEA
 23997                           fsr0l	equ	0xFE9
 23998                           wreg	equ	0xFE8
 23999                           indf1	equ	0xFE7
 24000                           postinc1	equ	0xFE6
 24001                           postdec1	equ	0xFE5
 24002                           fsr1h	equ	0xFE2
 24003                           fsr1l	equ	0xFE1
 24004                           indf2	equ	0xFDF
 24005                           postinc2	equ	0xFDE
 24006                           postdec2	equ	0xFDD
 24007                           plusw2	equ	0xFDB
 24008                           fsr2h	equ	0xFDA
 24009                           fsr2l	equ	0xFD9
 24010                           status	equ	0xFD8
 24011                           
 24012 ;; *************** function _saveNumberInMemory *****************
 24013 ;; Defined at:
 24014 ;;		line 117 in file "../Source/c/04_App/app_utils.c"
 24015 ;; Parameters:    Size  Location     Type
 24016 ;;  address         1    wreg     unsigned char 
 24017 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 24018 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 24019 ;; Auto vars:     Size  Location     Type
 24020 ;;  address         1   56[BANK0 ] unsigned char 
 24021 ;; Return value:  Size  Location     Type
 24022 ;;                  1    wreg      void 
 24023 ;; Registers used:
 24024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24025 ;; Tracked objects:
 24026 ;;		On entry : 0/0
 24027 ;;		On exit  : 0/0
 24028 ;;		Unchanged: 0/0
 24029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24033 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24034 ;;Total ram usage:        3 bytes
 24035 ;; Hardware stack levels used:    1
 24036 ;; Hardware stack levels required when called:   14
 24037 ;; This function calls:
 24038 ;;		_Eeprom_Write
 24039 ;; This function is called by:
 24040 ;;		_initFsm
 24041 ;;		_addCmdFsm
 24042 ;;		_delCmdFsm
 24043 ;; This function uses a non-reentrant model
 24044 ;;
 24045                           
 24046                           	psect	text112
 24047  006984                     __ptext112:
 24048                           	opt stack 0
 24049  006984                     _saveNumberInMemory:
 24050                           	opt stack 12
 24051                           
 24052                           ; BSR set to: 1
 24053                           ;incstack = 0
 24054                           ;saveNumberInMemory@address stored from wreg
 24055  006984  0100               	movlb	0	; () banked
 24056  006986  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24057                           
 24058                           ;app_utils.c: 119: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24059  006988  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24060  00698C  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24061  006990  0E0D               	movlw	13
 24062  006992  0100               	movlb	0	; () banked
 24063  006994  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24064  006996  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24065  006998  EC53  F02E         	call	_Eeprom_Write
 24066  00699C  0012               	return		;funcret
 24067  00699E                     __end_of_saveNumberInMemory:
 24068                           	opt stack 0
 24069                           tosu	equ	0xFFF
 24070                           tosh	equ	0xFFE
 24071                           tosl	equ	0xFFD
 24072                           pclath	equ	0xFFA
 24073                           tblptru	equ	0xFF8
 24074                           tblptrh	equ	0xFF7
 24075                           tblptrl	equ	0xFF6
 24076                           tablat	equ	0xFF5
 24077                           prodh	equ	0xFF4
 24078                           prodl	equ	0xFF3
 24079                           intcon	equ	0xFF2
 24080                           intcon2	equ	0xFF1
 24081                           intcon3	equ	0xFF0
 24082                           indf0	equ	0xFEF
 24083                           postinc0	equ	0xFEE
 24084                           plusw0	equ	0xFEB
 24085                           fsr0h	equ	0xFEA
 24086                           fsr0l	equ	0xFE9
 24087                           wreg	equ	0xFE8
 24088                           indf1	equ	0xFE7
 24089                           postinc1	equ	0xFE6
 24090                           postdec1	equ	0xFE5
 24091                           fsr1h	equ	0xFE2
 24092                           fsr1l	equ	0xFE1
 24093                           indf2	equ	0xFDF
 24094                           postinc2	equ	0xFDE
 24095                           postdec2	equ	0xFDD
 24096                           plusw2	equ	0xFDB
 24097                           fsr2h	equ	0xFDA
 24098                           fsr2l	equ	0xFD9
 24099                           status	equ	0xFD8
 24100                           
 24101 ;; *************** function _Eeprom_Write *****************
 24102 ;; Defined at:
 24103 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24104 ;; Parameters:    Size  Location     Type
 24105 ;;  MemoryAddres    1    wreg     unsigned char 
 24106 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24107 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24108 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24109 ;; Auto vars:     Size  Location     Type
 24110 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24111 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24112 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24113 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24114 ;; Return value:  Size  Location     Type
 24115 ;;                  1    wreg      unsigned char 
 24116 ;; Registers used:
 24117 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24118 ;; Tracked objects:
 24119 ;;		On entry : 0/0
 24120 ;;		On exit  : 0/0
 24121 ;;		Unchanged: 0/0
 24122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24123 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24124 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;Total ram usage:        7 bytes
 24128 ;; Hardware stack levels used:    1
 24129 ;; Hardware stack levels required when called:   13
 24130 ;; This function calls:
 24131 ;;		_I2cSlv_SendI2cMsg
 24132 ;;		_StringCopy
 24133 ;; This function is called by:
 24134 ;;		_savePreamble
 24135 ;;		_saveNumberInMemory
 24136 ;; This function uses a non-reentrant model
 24137 ;;
 24138                           
 24139                           	psect	text113
 24140  005CA6                     __ptext113:
 24141                           	opt stack 0
 24142  005CA6                     _Eeprom_Write:
 24143                           	opt stack 12
 24144                           
 24145                           ;incstack = 0
 24146                           ;Eeprom_Write@MemoryAddress stored from wreg
 24147  005CA6  0100               	movlb	0	; () banked
 24148  005CA8  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24149                           
 24150                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24151  005CAA  0E50               	movlw	80
 24152  005CAC  0100               	movlb	0	; () banked
 24153  005CAE  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24154                           
 24155                           ; BSR set to: 0
 24156                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24157  005CB0  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24158  005CB2  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24159                           
 24160                           ; BSR set to: 0
 24161                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24162  005CB4  0E00               	movlw	0
 24163  005CB6  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24164                           
 24165                           ; BSR set to: 0
 24166                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24167  005CB8  0E10               	movlw	16
 24168  005CBA  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24169  005CBC  0012               	return	
 24170                           
 24171                           ; BSR set to: 0
 24172                           ;eeprom_if.c: 85: {
 24173                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24174  005CBE  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24175                           
 24176                           ; BSR set to: 0
 24177                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24178  005CC2  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24179  005CC6  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24180  005CCA  0EBC               	movlw	low (_EepromBuffer+1)
 24181  005CCC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24182  005CCE  0E04               	movlw	high (_EepromBuffer+1)
 24183  005CD0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24184  005CD2  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24185  005CD6  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24186  005CD8  ECE9  F02B         	call	_StringCopy	;wreg free
 24187                           
 24188                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24189  005CDC  0EBB               	movlw	low _EepromBuffer
 24190  005CDE  0100               	movlb	0	; () banked
 24191  005CE0  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24192  005CE2  0E04               	movlw	high _EepromBuffer
 24193  005CE4  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24194  005CE6  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24195  005CEA  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24196  005CEE  EC2E  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 24197  005CF2  0100               	movlb	0	; () banked
 24198  005CF4  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24199                           
 24200                           ; BSR set to: 0
 24201  005CF6  0012               	return	
 24202  005CF8                     __end_of_Eeprom_Write:
 24203                           	opt stack 0
 24204                           tosu	equ	0xFFF
 24205                           tosh	equ	0xFFE
 24206                           tosl	equ	0xFFD
 24207                           pclath	equ	0xFFA
 24208                           tblptru	equ	0xFF8
 24209                           tblptrh	equ	0xFF7
 24210                           tblptrl	equ	0xFF6
 24211                           tablat	equ	0xFF5
 24212                           prodh	equ	0xFF4
 24213                           prodl	equ	0xFF3
 24214                           intcon	equ	0xFF2
 24215                           intcon2	equ	0xFF1
 24216                           intcon3	equ	0xFF0
 24217                           indf0	equ	0xFEF
 24218                           postinc0	equ	0xFEE
 24219                           plusw0	equ	0xFEB
 24220                           fsr0h	equ	0xFEA
 24221                           fsr0l	equ	0xFE9
 24222                           wreg	equ	0xFE8
 24223                           indf1	equ	0xFE7
 24224                           postinc1	equ	0xFE6
 24225                           postdec1	equ	0xFE5
 24226                           fsr1h	equ	0xFE2
 24227                           fsr1l	equ	0xFE1
 24228                           indf2	equ	0xFDF
 24229                           postinc2	equ	0xFDE
 24230                           postdec2	equ	0xFDD
 24231                           plusw2	equ	0xFDB
 24232                           fsr2h	equ	0xFDA
 24233                           fsr2l	equ	0xFD9
 24234                           status	equ	0xFD8
 24235                           
 24236 ;; *************** function _isNumberInMemory *****************
 24237 ;; Defined at:
 24238 ;;		line 144 in file "../Source/c/04_App/app_utils.c"
 24239 ;; Parameters:    Size  Location     Type
 24240 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24241 ;;		 -> smsText(20), 
 24242 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 24243 ;;		 -> delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 24244 ;; Auto vars:     Size  Location     Type
 24245 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 24246 ;; Return value:  Size  Location     Type
 24247 ;;                  1    wreg      enum E8973
 24248 ;; Registers used:
 24249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24250 ;; Tracked objects:
 24251 ;;		On entry : 0/0
 24252 ;;		On exit  : 0/0
 24253 ;;		Unchanged: 0/0
 24254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24255 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24256 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24258 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24259 ;;Total ram usage:        5 bytes
 24260 ;; Hardware stack levels used:    1
 24261 ;; Hardware stack levels required when called:   17
 24262 ;; This function calls:
 24263 ;;		_Eeprom_Read
 24264 ;;		_StringCompare
 24265 ;;		_isNumberValid
 24266 ;; This function is called by:
 24267 ;;		_addCmdFsm
 24268 ;;		_delCmdFsm
 24269 ;; This function uses a non-reentrant model
 24270 ;;
 24271                           
 24272                           	psect	text114
 24273  004370                     __ptext114:
 24274                           	opt stack 0
 24275  004370                     _isNumberInMemory:
 24276                           	opt stack 9
 24277                           
 24278                           ;app_utils.c: 146: static searchFsmStates currentState = SEARCH_FSM_START;
 24279                           ;app_utils.c: 147: static uint8_t currentPosition = 32;
 24280                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;incstack = 0
 24284  004370  0E02               	movlw	2
 24285  004372  0101               	movlb	1	; () banked
 24286  004374  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24287                           
 24288                           ; BSR set to: 1
 24289                           ;app_utils.c: 150: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24290  004376  0E01               	movlw	1
 24291  004378  0100               	movlb	0	; () banked
 24292  00437A  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 24293  00437C  D004               	goto	l2758
 24294                           
 24295                           ; BSR set to: 0
 24296                           ;app_utils.c: 151: {
 24297                           ;app_utils.c: 152: currentState = SEARCH_FSM_START;
 24298  00437E  0E00               	movlw	0
 24299  004380  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24300                           
 24301                           ;app_utils.c: 153: currentPosition = 32;
 24302  004382  0E20               	movlw	32
 24303  004384  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 24304  004386                     l2758:
 24305                           
 24306                           ; BSR set to: 0
 24307                           ;app_utils.c: 154: }
 24308                           ;app_utils.c: 155: if (currentPosition >= (32 + (16 * 10)))
 24309                           
 24310                           ; BSR set to: 0
 24311  004386  0EBF               	movlw	191
 24312  004388  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 24313  00438A  D045               	goto	l2760
 24314                           
 24315                           ; BSR set to: 0
 24316                           ;app_utils.c: 156: {
 24317                           ;app_utils.c: 157: currentState = SEARCH_FSM_NOT_FOUND;
 24318  00438C  0E04               	movlw	4
 24319  00438E  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24320                           
 24321                           ; BSR set to: 0
 24322                           ;app_utils.c: 158: }
 24323                           ;app_utils.c: 160: switch (currentState)
 24324  004390  D042               	goto	l2760
 24325  004392                     
 24326                           ; BSR set to: 0
 24327                           ;app_utils.c: 163: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24328                           
 24329                           ; BSR set to: 0
 24330  004392  0E31               	movlw	low _readBuffer
 24331  004394  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24332  004396  0E03               	movlw	high _readBuffer
 24333  004398  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24334  00439A  0E0D               	movlw	13
 24335  00439C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24336  00439E  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 24337  0043A0  ECD5  F02D         	call	_Eeprom_Read
 24338  0043A4  0101               	movlb	1	; () banked
 24339  0043A6  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24340                           
 24341                           ; BSR set to: 1
 24342                           ;app_utils.c: 164: if (memoryOpResult == OP_FAILED)
 24343  0043A8  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24344  0043AA  A4D8               	btfss	status,2,c
 24345  0043AC  D002               	goto	l2762
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;app_utils.c: 165: {
 24349                           ;app_utils.c: 166: currentState = SEARCH_FSM_ERROR;
 24350  0043AE  0E02               	movlw	2
 24351  0043B0  D005               	goto	L52
 24352  0043B2                     l2762:
 24353                           
 24354                           ;app_utils.c: 168: else if (memoryOpResult == OP_SUCCESS)
 24355                           
 24356                           ; BSR set to: 0
 24357  0043B2  0101               	movlb	1	; () banked
 24358  0043B4  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24359  0043B6  A4D8               	btfss	status,2,c
 24360  0043B8  D035               	goto	l2765
 24361                           
 24362                           ; BSR set to: 1
 24363                           ;app_utils.c: 169: {
 24364                           ;app_utils.c: 170: currentState = SEARCH_FSM_CHECK_NUMBER;
 24365  0043BA  0E01               	movlw	1
 24366  0043BC                     L52:
 24367  0043BC  0100               	movlb	0	; () banked
 24368  0043BE  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24369                           
 24370                           ; BSR set to: 0
 24371                           ;app_utils.c: 171: }
 24372                           ;app_utils.c: 172: break;
 24373                           
 24374                           ; BSR set to: 0
 24375  0043C0  D031               	goto	l2765
 24376  0043C2                     
 24377                           ; BSR set to: 0
 24378                           ;app_utils.c: 175: currentState = SEARCH_FSM_START;
 24379                           
 24380                           ; BSR set to: 0
 24381  0043C2  0E00               	movlw	0
 24382  0043C4  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24383                           
 24384                           ; BSR set to: 0
 24385                           ;app_utils.c: 176: if (isNumberValid(readBuffer))
 24386  0043C6  0E31               	movlw	low _readBuffer
 24387  0043C8  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24388  0043CA  0E03               	movlw	high _readBuffer
 24389  0043CC  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24390  0043CE  ECB6  F02B         	call	_isNumberValid	;wreg free
 24391  0043D2  0900               	iorlw	0
 24392  0043D4  B4D8               	btfsc	status,2,c
 24393  0043D6  D01B               	goto	l2768
 24394                           
 24395                           ;app_utils.c: 177: {
 24396                           ;app_utils.c: 178: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24397  0043D8  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24398  0043DC  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24399  0043E0  0E31               	movlw	low _readBuffer
 24400  0043E2  0100               	movlb	0	; () banked
 24401  0043E4  6F7F               	movwf	StringCompare@String2& (0+255),b
 24402  0043E6  0E03               	movlw	high _readBuffer
 24403  0043E8  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24404  0043EA  0E00               	movlw	0
 24405  0043EC  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24406  0043EE  0E0D               	movlw	13
 24407  0043F0  6F81               	movwf	StringCompare@Len& (0+255),b
 24408  0043F2  EC7C  F02E         	call	_StringCompare	;wreg free
 24409  0043F6  0900               	iorlw	0
 24410  0043F8  B4D8               	btfsc	status,2,c
 24411  0043FA  D009               	goto	l2768
 24412                           
 24413                           ;app_utils.c: 179: {
 24414                           ;app_utils.c: 180: *positionInMemory = currentPosition;
 24415  0043FC  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 24416  004400  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 24417  004404  C0E2  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 24418                           
 24419                           ;app_utils.c: 181: currentState = SEARCH_FSM_FOUND;
 24420  004408  0E03               	movlw	3
 24421  00440A  0100               	movlb	0	; () banked
 24422  00440C  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24423  00440E                     l2768:
 24424                           
 24425                           ;app_utils.c: 186: }
 24426                           ;app_utils.c: 187: }
 24427                           ;app_utils.c: 188: currentPosition += 16;
 24428                           
 24429                           ; BSR set to: 0
 24430                           
 24431                           ; BSR set to: 0
 24432                           
 24433                           ;app_utils.c: 183: else
 24434                           ;app_utils.c: 184: {
 24435                           
 24436                           ; BSR set to: 0
 24437  00440E  0E10               	movlw	16
 24438  004410  0100               	movlb	0	; () banked
 24439  004412  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 24440                           
 24441                           ; BSR set to: 0
 24442                           ;app_utils.c: 193: }
 24443                           
 24444                           ; BSR set to: 0
 24445                           ;app_utils.c: 192: break;
 24446                           
 24447                           ;app_utils.c: 191: default:
 24448                           
 24449                           ;app_utils.c: 189: break;
 24450  004414  D007               	goto	l2765
 24451  004416                     l2760:
 24452                           
 24453                           ; BSR set to: 0
 24454                           
 24455                           ; BSR set to: 0
 24456  004416  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24457                           
 24458                           ; Switch size 1, requested type "space"
 24459                           ; Number of cases is 2, Range of values is 0 to 1
 24460                           ; switch strategies available:
 24461                           ; Name         Instructions Cycles
 24462                           ; simple_byte            7     4 (average)
 24463                           ;	Chosen strategy is simple_byte
 24464  004418  0A00               	xorlw	0	; case 0
 24465  00441A  B4D8               	btfsc	status,2,c
 24466  00441C  D7BA               	goto	l2761
 24467  00441E  0A01               	xorlw	1	; case 1
 24468  004420  B4D8               	btfsc	status,2,c
 24469  004422  D7CF               	goto	l2766
 24470  004424                     l2765:
 24471                           
 24472                           ;app_utils.c: 194: return currentState;
 24473                           
 24474                           ; BSR set to: 0
 24475  004424  0100               	movlb	0	; () banked
 24476  004426  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24477  004428  0012               	return	
 24478  00442A                     __end_of_isNumberInMemory:
 24479                           	opt stack 0
 24480                           tosu	equ	0xFFF
 24481                           tosh	equ	0xFFE
 24482                           tosl	equ	0xFFD
 24483                           pclath	equ	0xFFA
 24484                           tblptru	equ	0xFF8
 24485                           tblptrh	equ	0xFF7
 24486                           tblptrl	equ	0xFF6
 24487                           tablat	equ	0xFF5
 24488                           prodh	equ	0xFF4
 24489                           prodl	equ	0xFF3
 24490                           intcon	equ	0xFF2
 24491                           intcon2	equ	0xFF1
 24492                           intcon3	equ	0xFF0
 24493                           indf0	equ	0xFEF
 24494                           postinc0	equ	0xFEE
 24495                           plusw0	equ	0xFEB
 24496                           fsr0h	equ	0xFEA
 24497                           fsr0l	equ	0xFE9
 24498                           wreg	equ	0xFE8
 24499                           indf1	equ	0xFE7
 24500                           postinc1	equ	0xFE6
 24501                           postdec1	equ	0xFE5
 24502                           fsr1h	equ	0xFE2
 24503                           fsr1l	equ	0xFE1
 24504                           indf2	equ	0xFDF
 24505                           postinc2	equ	0xFDE
 24506                           postdec2	equ	0xFDD
 24507                           plusw2	equ	0xFDB
 24508                           fsr2h	equ	0xFDA
 24509                           fsr2l	equ	0xFD9
 24510                           status	equ	0xFD8
 24511                           
 24512 ;; *************** function _isMasterNumber *****************
 24513 ;; Defined at:
 24514 ;;		line 232 in file "../Source/c/04_App/app_utils.c"
 24515 ;; Parameters:    Size  Location     Type
 24516 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24517 ;;		 -> receivedNumber(13), 
 24518 ;; Auto vars:     Size  Location     Type
 24519 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24520 ;; Return value:  Size  Location     Type
 24521 ;;                  1    wreg      unsigned char 
 24522 ;; Registers used:
 24523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24524 ;; Tracked objects:
 24525 ;;		On entry : 0/0
 24526 ;;		On exit  : 0/0
 24527 ;;		Unchanged: 0/0
 24528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24529 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24530 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24532 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24533 ;;Total ram usage:        3 bytes
 24534 ;; Hardware stack levels used:    1
 24535 ;; Hardware stack levels required when called:   17
 24536 ;; This function calls:
 24537 ;;		_Eeprom_Read
 24538 ;;		_StringCompare
 24539 ;;		_isNumberValid
 24540 ;; This function is called by:
 24541 ;;		_addCmdFsm
 24542 ;;		_delCmdFsm
 24543 ;; This function uses a non-reentrant model
 24544 ;;
 24545                           
 24546                           	psect	text115
 24547  005486                     __ptext115:
 24548                           	opt stack 0
 24549  005486                     _isMasterNumber:
 24550                           	opt stack 9
 24551                           
 24552                           ;app_utils.c: 234: EepromStsType memoryOpResult = OP_PENDING;
 24553                           
 24554                           ; BSR set to: 0
 24555                           ;incstack = 0
 24556  005486  0E02               	movlw	2
 24557  005488  0101               	movlb	1	; () banked
 24558  00548A  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24559                           
 24560                           ; BSR set to: 1
 24561                           ;app_utils.c: 236: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24562  00548C  0E31               	movlw	low _readBuffer
 24563  00548E  0100               	movlb	0	; () banked
 24564  005490  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24565  005492  0E03               	movlw	high _readBuffer
 24566  005494  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24567  005496  0E0D               	movlw	13
 24568  005498  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24569  00549A  0E10               	movlw	16
 24570  00549C  ECD5  F02D         	call	_Eeprom_Read
 24571  0054A0  0101               	movlb	1	; () banked
 24572  0054A2  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24573                           
 24574                           ; BSR set to: 1
 24575                           ;app_utils.c: 237: if (memoryOpResult != OP_PENDING)
 24576  0054A4  0E02               	movlw	2
 24577  0054A6  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24578  0054A8  B4D8               	btfsc	status,2,c
 24579  0054AA  D021               	goto	l2776
 24580                           
 24581                           ; BSR set to: 1
 24582                           ;app_utils.c: 238: {
 24583                           ;app_utils.c: 239: memoryOpResult = OP_FAILED;
 24584  0054AC  0E01               	movlw	1
 24585  0054AE  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24586                           
 24587                           ; BSR set to: 1
 24588                           ;app_utils.c: 240: if (isNumberValid(readBuffer))
 24589  0054B0  0E31               	movlw	low _readBuffer
 24590  0054B2  0100               	movlb	0	; () banked
 24591  0054B4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24592  0054B6  0E03               	movlw	high _readBuffer
 24593  0054B8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24594  0054BA  ECB6  F02B         	call	_isNumberValid	;wreg free
 24595  0054BE  0900               	iorlw	0
 24596  0054C0  B4D8               	btfsc	status,2,c
 24597  0054C2  D015               	goto	l2776
 24598                           
 24599                           ;app_utils.c: 241: {
 24600                           ;app_utils.c: 242: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24601  0054C4  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24602  0054C8  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24603  0054CC  0E31               	movlw	low _readBuffer
 24604  0054CE  0100               	movlb	0	; () banked
 24605  0054D0  6F7F               	movwf	StringCompare@String2& (0+255),b
 24606  0054D2  0E03               	movlw	high _readBuffer
 24607  0054D4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24608  0054D6  0E00               	movlw	0
 24609  0054D8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24610  0054DA  0E0D               	movlw	13
 24611  0054DC  6F81               	movwf	StringCompare@Len& (0+255),b
 24612  0054DE  EC7C  F02E         	call	_StringCompare	;wreg free
 24613  0054E2  0900               	iorlw	0
 24614  0054E4  B4D8               	btfsc	status,2,c
 24615  0054E6  D003               	goto	l2776
 24616                           
 24617                           ;app_utils.c: 243: {
 24618                           ;app_utils.c: 244: memoryOpResult = OP_SUCCESS;
 24619  0054E8  0E00               	movlw	0
 24620  0054EA  0101               	movlb	1	; () banked
 24621  0054EC  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24622  0054EE                     l2776:
 24623                           
 24624                           ;app_utils.c: 245: }
 24625                           ;app_utils.c: 246: }
 24626                           ;app_utils.c: 247: }
 24627                           ;app_utils.c: 248: return memoryOpResult;
 24628                           
 24629                           ; BSR set to: 1
 24630                           
 24631                           ; BSR set to: 1
 24632  0054EE  0101               	movlb	1	; () banked
 24633  0054F0  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24634  0054F2  0012               	return	
 24635  0054F4                     __end_of_isMasterNumber:
 24636                           	opt stack 0
 24637                           tosu	equ	0xFFF
 24638                           tosh	equ	0xFFE
 24639                           tosl	equ	0xFFD
 24640                           pclath	equ	0xFFA
 24641                           tblptru	equ	0xFF8
 24642                           tblptrh	equ	0xFF7
 24643                           tblptrl	equ	0xFF6
 24644                           tablat	equ	0xFF5
 24645                           prodh	equ	0xFF4
 24646                           prodl	equ	0xFF3
 24647                           intcon	equ	0xFF2
 24648                           intcon2	equ	0xFF1
 24649                           intcon3	equ	0xFF0
 24650                           indf0	equ	0xFEF
 24651                           postinc0	equ	0xFEE
 24652                           plusw0	equ	0xFEB
 24653                           fsr0h	equ	0xFEA
 24654                           fsr0l	equ	0xFE9
 24655                           wreg	equ	0xFE8
 24656                           indf1	equ	0xFE7
 24657                           postinc1	equ	0xFE6
 24658                           postdec1	equ	0xFE5
 24659                           fsr1h	equ	0xFE2
 24660                           fsr1l	equ	0xFE1
 24661                           indf2	equ	0xFDF
 24662                           postinc2	equ	0xFDE
 24663                           postdec2	equ	0xFDD
 24664                           plusw2	equ	0xFDB
 24665                           fsr2h	equ	0xFDA
 24666                           fsr2l	equ	0xFD9
 24667                           status	equ	0xFD8
 24668                           
 24669 ;; *************** function _findEmptySpot *****************
 24670 ;; Defined at:
 24671 ;;		line 282 in file "../Source/c/04_App/app_utils.c"
 24672 ;; Parameters:    Size  Location     Type
 24673 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 24674 ;;		 -> addCmdFsm@numberInMemory(1), 
 24675 ;; Auto vars:     Size  Location     Type
 24676 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24677 ;; Return value:  Size  Location     Type
 24678 ;;                  1    wreg      enum E8973
 24679 ;; Registers used:
 24680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24681 ;; Tracked objects:
 24682 ;;		On entry : 0/0
 24683 ;;		On exit  : 0/0
 24684 ;;		Unchanged: 0/0
 24685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24686 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24687 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24689 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24690 ;;Total ram usage:        3 bytes
 24691 ;; Hardware stack levels used:    1
 24692 ;; Hardware stack levels required when called:   17
 24693 ;; This function calls:
 24694 ;;		_Eeprom_Read
 24695 ;;		_isNumberValid
 24696 ;; This function is called by:
 24697 ;;		_addCmdFsm
 24698 ;; This function uses a non-reentrant model
 24699 ;;
 24700                           
 24701                           	psect	text116
 24702  004D1A                     __ptext116:
 24703                           	opt stack 0
 24704  004D1A                     _findEmptySpot:
 24705                           	opt stack 9
 24706                           
 24707                           ;app_utils.c: 284: static searchFsmStates currentState = SEARCH_FSM_START;
 24708                           ;app_utils.c: 285: static uint8_t currentPosition = 32;
 24709                           ;app_utils.c: 286: EepromStsType memoryOpResult = OP_PENDING;
 24710                           
 24711                           ; BSR set to: 1
 24712                           ;incstack = 0
 24713  004D1A  0E02               	movlw	2
 24714  004D1C  0101               	movlb	1	; () banked
 24715  004D1E  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24716                           
 24717                           ; BSR set to: 1
 24718                           ;app_utils.c: 288: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24719  004D20  0E01               	movlw	1
 24720  004D22  0100               	movlb	0	; () banked
 24721  004D24  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 24722  004D26  D004               	goto	l2784
 24723                           
 24724                           ; BSR set to: 0
 24725                           ;app_utils.c: 289: {
 24726                           ;app_utils.c: 290: currentState = SEARCH_FSM_START;
 24727  004D28  0E00               	movlw	0
 24728  004D2A  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24729                           
 24730                           ;app_utils.c: 291: currentPosition = 32;
 24731  004D2C  0E20               	movlw	32
 24732  004D2E  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 24733  004D30                     l2784:
 24734                           
 24735                           ; BSR set to: 0
 24736                           ;app_utils.c: 292: }
 24737                           ;app_utils.c: 293: if (currentPosition >= (32 + (16 * 10)))
 24738                           
 24739                           ; BSR set to: 0
 24740  004D30  0EBF               	movlw	191
 24741  004D32  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 24742  004D34  D033               	goto	l2786
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;app_utils.c: 294: {
 24746                           ;app_utils.c: 295: currentState = SEARCH_FSM_NOT_FOUND;
 24747  004D36  0E04               	movlw	4
 24748  004D38  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24749                           
 24750                           ; BSR set to: 0
 24751                           ;app_utils.c: 296: }
 24752                           ;app_utils.c: 298: switch (currentState)
 24753  004D3A  D030               	goto	l2786
 24754  004D3C                     
 24755                           ; BSR set to: 0
 24756                           ;app_utils.c: 301: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24757                           
 24758                           ; BSR set to: 0
 24759  004D3C  0E31               	movlw	low _readBuffer
 24760  004D3E  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24761  004D40  0E03               	movlw	high _readBuffer
 24762  004D42  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24763  004D44  0E0D               	movlw	13
 24764  004D46  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24765  004D48  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 24766  004D4A  ECD5  F02D         	call	_Eeprom_Read
 24767  004D4E  0101               	movlb	1	; () banked
 24768  004D50  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24769                           
 24770                           ; BSR set to: 1
 24771                           ;app_utils.c: 302: if (memoryOpResult == OP_FAILED)
 24772  004D52  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 24773  004D54  A4D8               	btfss	status,2,c
 24774  004D56  D002               	goto	l2788
 24775                           
 24776                           ; BSR set to: 1
 24777                           ;app_utils.c: 303: {
 24778                           ;app_utils.c: 304: currentState = SEARCH_FSM_ERROR;
 24779  004D58  0E02               	movlw	2
 24780  004D5A  D005               	goto	L53
 24781  004D5C                     l2788:
 24782                           
 24783                           ;app_utils.c: 306: else if (memoryOpResult == OP_SUCCESS)
 24784                           
 24785                           ; BSR set to: 0
 24786  004D5C  0101               	movlb	1	; () banked
 24787  004D5E  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 24788  004D60  A4D8               	btfss	status,2,c
 24789  004D62  D023               	goto	l2791
 24790                           
 24791                           ; BSR set to: 1
 24792                           ;app_utils.c: 307: {
 24793                           ;app_utils.c: 308: currentState = SEARCH_FSM_CHECK_NUMBER;
 24794  004D64  0E01               	movlw	1
 24795  004D66                     L53:
 24796  004D66  0100               	movlb	0	; () banked
 24797  004D68  D00D               	goto	L54
 24798  004D6A                     
 24799                           ; BSR set to: 0
 24800                           ;app_utils.c: 313: if (isNumberValid(readBuffer))
 24801                           
 24802                           ; BSR set to: 0
 24803  004D6A  0E31               	movlw	low _readBuffer
 24804  004D6C  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24805  004D6E  0E03               	movlw	high _readBuffer
 24806  004D70  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24807  004D72  ECB6  F02B         	call	_isNumberValid	;wreg free
 24808  004D76  0900               	iorlw	0
 24809  004D78  B4D8               	btfsc	status,2,c
 24810  004D7A  D006               	goto	l2793
 24811                           
 24812                           ;app_utils.c: 314: {
 24813                           ;app_utils.c: 315: currentPosition += 16;
 24814  004D7C  0E10               	movlw	16
 24815  004D7E  0100               	movlb	0	; () banked
 24816  004D80  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;app_utils.c: 316: currentState = SEARCH_FSM_START;
 24820  004D82  0E00               	movlw	0
 24821  004D84                     L54:
 24822  004D84  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24823                           
 24824                           ;app_utils.c: 317: }
 24825  004D86  D011               	goto	l2791
 24826  004D88                     l2793:
 24827                           
 24828                           ;app_utils.c: 318: else
 24829                           ;app_utils.c: 319: {
 24830                           ;app_utils.c: 320: currentState = SEARCH_FSM_NOT_FOUND;
 24831                           
 24832                           ; BSR set to: 0
 24833  004D88  0E04               	movlw	4
 24834  004D8A  0100               	movlb	0	; () banked
 24835  004D8C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24836                           
 24837                           ; BSR set to: 0
 24838                           ;app_utils.c: 321: *positionInMemory = currentPosition;
 24839  004D8E  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 24840  004D92  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 24841  004D96  C0E1  FFDF         	movff	findEmptySpot@currentPosition,indf2
 24842                           
 24843                           ; BSR set to: 0
 24844                           ;app_utils.c: 327: }
 24845                           
 24846                           ; BSR set to: 0
 24847                           ;app_utils.c: 326: break;
 24848                           
 24849                           ;app_utils.c: 325: default:
 24850                           
 24851                           ; BSR set to: 0
 24852                           ;app_utils.c: 322: }
 24853                           ;app_utils.c: 323: break;
 24854  004D9A  D007               	goto	l2791
 24855  004D9C                     l2786:
 24856                           
 24857                           ; BSR set to: 0
 24858                           
 24859                           ; BSR set to: 0
 24860  004D9C  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24861                           
 24862                           ; Switch size 1, requested type "space"
 24863                           ; Number of cases is 2, Range of values is 0 to 1
 24864                           ; switch strategies available:
 24865                           ; Name         Instructions Cycles
 24866                           ; simple_byte            7     4 (average)
 24867                           ;	Chosen strategy is simple_byte
 24868  004D9E  0A00               	xorlw	0	; case 0
 24869  004DA0  B4D8               	btfsc	status,2,c
 24870  004DA2  D7CC               	goto	l2787
 24871  004DA4  0A01               	xorlw	1	; case 1
 24872  004DA6  B4D8               	btfsc	status,2,c
 24873  004DA8  D7E0               	goto	l2792
 24874  004DAA                     l2791:
 24875                           
 24876                           ;app_utils.c: 328: return currentState;
 24877                           
 24878                           ; BSR set to: 0
 24879  004DAA  0100               	movlb	0	; () banked
 24880  004DAC  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24881  004DAE  0012               	return	
 24882  004DB0                     __end_of_findEmptySpot:
 24883                           	opt stack 0
 24884                           tosu	equ	0xFFF
 24885                           tosh	equ	0xFFE
 24886                           tosl	equ	0xFFD
 24887                           pclath	equ	0xFFA
 24888                           tblptru	equ	0xFF8
 24889                           tblptrh	equ	0xFF7
 24890                           tblptrl	equ	0xFF6
 24891                           tablat	equ	0xFF5
 24892                           prodh	equ	0xFF4
 24893                           prodl	equ	0xFF3
 24894                           intcon	equ	0xFF2
 24895                           intcon2	equ	0xFF1
 24896                           intcon3	equ	0xFF0
 24897                           indf0	equ	0xFEF
 24898                           postinc0	equ	0xFEE
 24899                           plusw0	equ	0xFEB
 24900                           fsr0h	equ	0xFEA
 24901                           fsr0l	equ	0xFE9
 24902                           wreg	equ	0xFE8
 24903                           indf1	equ	0xFE7
 24904                           postinc1	equ	0xFE6
 24905                           postdec1	equ	0xFE5
 24906                           fsr1h	equ	0xFE2
 24907                           fsr1l	equ	0xFE1
 24908                           indf2	equ	0xFDF
 24909                           postinc2	equ	0xFDE
 24910                           postdec2	equ	0xFDD
 24911                           plusw2	equ	0xFDB
 24912                           fsr2h	equ	0xFDA
 24913                           fsr2l	equ	0xFD9
 24914                           status	equ	0xFD8
 24915                           
 24916 ;; *************** function _isNumberValid *****************
 24917 ;; Defined at:
 24918 ;;		line 122 in file "../Source/c/04_App/app_utils.c"
 24919 ;; Parameters:    Size  Location     Type
 24920 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 24921 ;;		 -> readBuffer(13), smsText(20), 
 24922 ;; Auto vars:     Size  Location     Type
 24923 ;;  i               1   33[BANK0 ] unsigned char 
 24924 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 24925 ;; Return value:  Size  Location     Type
 24926 ;;                  1    wreg      unsigned char 
 24927 ;; Registers used:
 24928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24929 ;; Tracked objects:
 24930 ;;		On entry : 0/0
 24931 ;;		On exit  : 0/0
 24932 ;;		Unchanged: 0/0
 24933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24938 ;;Total ram usage:        5 bytes
 24939 ;; Hardware stack levels used:    1
 24940 ;; Hardware stack levels required when called:   11
 24941 ;; This function calls:
 24942 ;;		Nothing
 24943 ;; This function is called by:
 24944 ;;		_parseCommand
 24945 ;;		_isNumberInMemory
 24946 ;;		_isMasterNumber
 24947 ;;		_findEmptySpot
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text117
 24952  00576C                     __ptext117:
 24953                           	opt stack 0
 24954  00576C                     _isNumberValid:
 24955                           	opt stack 14
 24956                           
 24957                           ;app_utils.c: 124: bool isNumberOk = 0;
 24958                           
 24959                           ; BSR set to: 0
 24960                           ;incstack = 0
 24961  00576C  0E00               	movlw	0
 24962  00576E  0100               	movlb	0	; () banked
 24963  005770  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24964                           
 24965                           ;app_utils.c: 125: uint8_t i = 0;
 24966  005772  0E00               	movlw	0
 24967  005774  6F81               	movwf	isNumberValid@i& (0+255),b
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;app_utils.c: 126: if (phoneNumber[0] == '+')
 24971  005776  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 24972  00577A  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 24973  00577E  0E2B               	movlw	43
 24974  005780  18DE               	xorwf	postinc2,w,c
 24975  005782  A4D8               	btfss	status,2,c
 24976  005784  D024               	goto	u13310
 24977                           
 24978                           ; BSR set to: 0
 24979                           ;app_utils.c: 127: {
 24980                           ;app_utils.c: 128: for (i = 1; i < ((UINT8)(13)); i++)
 24981  005786  0E01               	movlw	1
 24982  005788  6F81               	movwf	isNumberValid@i& (0+255),b
 24983  00578A                     l14169:
 24984                           
 24985                           ; BSR set to: 0
 24986  00578A  0E0C               	movlw	12
 24987  00578C  6581               	cpfsgt	isNumberValid@i& (0+255),b
 24988  00578E  D001               	goto	l2747
 24989  005790  D01E               	goto	u13310
 24990  005792                     l2747:
 24991                           
 24992                           ; BSR set to: 0
 24993                           ;app_utils.c: 129: {
 24994                           ;app_utils.c: 130: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 24995                           
 24996                           ; BSR set to: 0
 24997  005792  5181               	movf	isNumberValid@i& (0+255),w,b
 24998  005794  0D01               	mullw	1
 24999  005796  50F3               	movf	prodl,w,c
 25000  005798  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25001  00579A  6ED9               	movwf	fsr2l,c
 25002  00579C  50F4               	movf	prodh,w,c
 25003  00579E  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25004  0057A0  6EDA               	movwf	fsr2h,c
 25005  0057A2  0E2F               	movlw	47
 25006  0057A4  64DF               	cpfsgt	indf2,c
 25007  0057A6  D00E               	goto	l2749
 25008                           
 25009                           ; BSR set to: 0
 25010  0057A8  5181               	movf	isNumberValid@i& (0+255),w,b
 25011  0057AA  0D01               	mullw	1
 25012  0057AC  50F3               	movf	prodl,w,c
 25013  0057AE  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25014  0057B0  6ED9               	movwf	fsr2l,c
 25015  0057B2  50F4               	movf	prodh,w,c
 25016  0057B4  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25017  0057B6  6EDA               	movwf	fsr2h,c
 25018  0057B8  0E3A               	movlw	58
 25019  0057BA  60DF               	cpfslt	indf2,c
 25020  0057BC  D003               	goto	l2749
 25021                           
 25022                           ; BSR set to: 0
 25023                           ;app_utils.c: 131: {
 25024                           ;app_utils.c: 132: isNumberOk = 1;
 25025  0057BE  0E01               	movlw	1
 25026  0057C0  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25027                           
 25028                           ;app_utils.c: 133: }
 25029  0057C2  D003               	goto	l2750
 25030  0057C4                     l2749:
 25031                           
 25032                           ; BSR set to: 0
 25033                           ;app_utils.c: 134: else
 25034                           ;app_utils.c: 135: {
 25035                           ;app_utils.c: 136: isNumberOk = 0;
 25036                           
 25037                           ; BSR set to: 0
 25038  0057C4  0E00               	movlw	0
 25039  0057C6  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25040                           
 25041                           ;app_utils.c: 137: break;
 25042  0057C8  D002               	goto	u13310
 25043  0057CA                     l2750:
 25044                           
 25045                           ; BSR set to: 0
 25046                           
 25047                           ; BSR set to: 0
 25048  0057CA  2B81               	incf	isNumberValid@i& (0+255),f,b
 25049  0057CC  D7DE               	goto	l14169
 25050  0057CE                     u13310:
 25051                           
 25052                           ; BSR set to: 0
 25053                           ;app_utils.c: 138: }
 25054                           ;app_utils.c: 139: }
 25055                           ;app_utils.c: 140: }
 25056                           ;app_utils.c: 141: return isNumberOk;
 25057                           
 25058                           ; BSR set to: 0
 25059                           
 25060                           ; BSR set to: 0
 25061  0057CE  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 25062  0057D0  0012               	return	
 25063  0057D2                     __end_of_isNumberValid:
 25064                           	opt stack 0
 25065                           tosu	equ	0xFFF
 25066                           tosh	equ	0xFFE
 25067                           tosl	equ	0xFFD
 25068                           pclath	equ	0xFFA
 25069                           tblptru	equ	0xFF8
 25070                           tblptrh	equ	0xFF7
 25071                           tblptrl	equ	0xFF6
 25072                           tablat	equ	0xFF5
 25073                           prodh	equ	0xFF4
 25074                           prodl	equ	0xFF3
 25075                           intcon	equ	0xFF2
 25076                           intcon2	equ	0xFF1
 25077                           intcon3	equ	0xFF0
 25078                           indf0	equ	0xFEF
 25079                           postinc0	equ	0xFEE
 25080                           plusw0	equ	0xFEB
 25081                           fsr0h	equ	0xFEA
 25082                           fsr0l	equ	0xFE9
 25083                           wreg	equ	0xFE8
 25084                           indf1	equ	0xFE7
 25085                           postinc1	equ	0xFE6
 25086                           postdec1	equ	0xFE5
 25087                           fsr1h	equ	0xFE2
 25088                           fsr1l	equ	0xFE1
 25089                           indf2	equ	0xFDF
 25090                           postinc2	equ	0xFDE
 25091                           postdec2	equ	0xFDD
 25092                           plusw2	equ	0xFDB
 25093                           fsr2h	equ	0xFDA
 25094                           fsr2l	equ	0xFD9
 25095                           status	equ	0xFD8
 25096                           
 25097 ;; *************** function _Eeprom_Read *****************
 25098 ;; Defined at:
 25099 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25100 ;; Parameters:    Size  Location     Type
 25101 ;;  MemoryAddres    1    wreg     unsigned char 
 25102 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 25103 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25104 ;;  DataLength      1   75[BANK0 ] unsigned char 
 25105 ;; Auto vars:     Size  Location     Type
 25106 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 25107 ;;  QuerySts        1   79[BANK0 ] enum E8932
 25108 ;;  ReadSts         1   78[BANK0 ] enum E8958
 25109 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 25110 ;; Return value:  Size  Location     Type
 25111 ;;                  1    wreg      enum E8958
 25112 ;; Registers used:
 25113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25114 ;; Tracked objects:
 25115 ;;		On entry : 0/0
 25116 ;;		On exit  : 0/0
 25117 ;;		Unchanged: 0/0
 25118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25119 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25120 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25122 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25123 ;;Total ram usage:        7 bytes
 25124 ;; Hardware stack levels used:    1
 25125 ;; Hardware stack levels required when called:   16
 25126 ;; This function calls:
 25127 ;;		_I2cSlv_QueryI2cData
 25128 ;; This function is called by:
 25129 ;;		_initEeprom
 25130 ;;		_isNumberInMemory
 25131 ;;		_isMasterNumber
 25132 ;;		_findEmptySpot
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           	psect	text118
 25137  005BAA                     __ptext118:
 25138                           	opt stack 0
 25139  005BAA                     _Eeprom_Read:
 25140                           	opt stack 9
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;incstack = 0
 25144                           ;Eeprom_Read@MemoryAddress stored from wreg
 25145  005BAA  0100               	movlb	0	; () banked
 25146  005BAC  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 25147                           
 25148                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 25149  005BAE  0E50               	movlw	80
 25150  005BB0  0100               	movlb	0	; () banked
 25151  005BB2  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 25152                           
 25153                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 25154  005BB4  0E00               	movlw	0
 25155  005BB6  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25156                           
 25157                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 25158  005BB8  0E02               	movlw	2
 25159  005BBA  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 25163  005BBC  C0AC  F1FB         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 25164                           
 25165                           ; BSR set to: 0
 25166                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 25167  005BC0  0EFB               	movlw	low _ReadAddress
 25168  005BC2  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 25169  005BC4  0E01               	movlw	high _ReadAddress
 25170  005BC6  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 25171  005BC8  0E01               	movlw	1
 25172  005BCA  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 25173  005BCC  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 25174  005BD0  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 25175  005BD4  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 25176  005BD8  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 25177  005BDC  ECA3  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 25178  005BE0  0100               	movlb	0	; () banked
 25179  005BE2  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25180                           
 25181                           ; BSR set to: 0
 25182                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 25183  005BE4  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 25184  005BE6  A4D8               	btfss	status,2,c
 25185  005BE8  D002               	goto	l2037
 25186                           
 25187                           ; BSR set to: 0
 25188                           ;eeprom_if.c: 114: {
 25189                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 25190  005BEA  0E00               	movlw	0
 25191  005BEC  D005               	goto	L55
 25192  005BEE                     l2037:
 25193                           
 25194                           ; BSR set to: 0
 25195                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 25196                           
 25197                           ; BSR set to: 0
 25198  005BEE  0E02               	movlw	2
 25199  005BF0  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 25200  005BF2  A4D8               	btfss	status,2,c
 25201  005BF4  D002               	goto	l2039
 25202                           
 25203                           ; BSR set to: 0
 25204                           ;eeprom_if.c: 118: {
 25205                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25206  005BF6  0E01               	movlw	1
 25207  005BF8                     L55:
 25208  005BF8  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25209  005BFA                     l2039:
 25210                           
 25211                           ; BSR set to: 0
 25212                           ;eeprom_if.c: 120: }
 25213                           ;eeprom_if.c: 121: return ReadSts;
 25214                           
 25215                           ; BSR set to: 0
 25216  005BFA  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25217  005BFC  0012               	return	
 25218  005BFE                     __end_of_Eeprom_Read:
 25219                           	opt stack 0
 25220                           tosu	equ	0xFFF
 25221                           tosh	equ	0xFFE
 25222                           tosl	equ	0xFFD
 25223                           pclath	equ	0xFFA
 25224                           tblptru	equ	0xFF8
 25225                           tblptrh	equ	0xFF7
 25226                           tblptrl	equ	0xFF6
 25227                           tablat	equ	0xFF5
 25228                           prodh	equ	0xFF4
 25229                           prodl	equ	0xFF3
 25230                           intcon	equ	0xFF2
 25231                           intcon2	equ	0xFF1
 25232                           intcon3	equ	0xFF0
 25233                           indf0	equ	0xFEF
 25234                           postinc0	equ	0xFEE
 25235                           plusw0	equ	0xFEB
 25236                           fsr0h	equ	0xFEA
 25237                           fsr0l	equ	0xFE9
 25238                           wreg	equ	0xFE8
 25239                           indf1	equ	0xFE7
 25240                           postinc1	equ	0xFE6
 25241                           postdec1	equ	0xFE5
 25242                           fsr1h	equ	0xFE2
 25243                           fsr1l	equ	0xFE1
 25244                           indf2	equ	0xFDF
 25245                           postinc2	equ	0xFDE
 25246                           postdec2	equ	0xFDD
 25247                           plusw2	equ	0xFDB
 25248                           fsr2h	equ	0xFDA
 25249                           fsr2l	equ	0xFD9
 25250                           status	equ	0xFD8
 25251                           
 25252 ;; *************** function _I2cSlv_QueryI2cData *****************
 25253 ;; Defined at:
 25254 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25255 ;; Parameters:    Size  Location     Type
 25256 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25257 ;;		 -> ReadAddress(1), 
 25258 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25259 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25260 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25261 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25262 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25263 ;; Auto vars:     Size  Location     Type
 25264 ;;		None
 25265 ;; Return value:  Size  Location     Type
 25266 ;;                  1    wreg      enum E8947
 25267 ;; Registers used:
 25268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25269 ;; Tracked objects:
 25270 ;;		On entry : 0/0
 25271 ;;		On exit  : 0/0
 25272 ;;		Unchanged: 0/0
 25273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25274 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25277 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25278 ;;Total ram usage:        7 bytes
 25279 ;; Hardware stack levels used:    1
 25280 ;; Hardware stack levels required when called:   15
 25281 ;; This function calls:
 25282 ;;		_I2cSlv_I2cReadMsgSts
 25283 ;;		_I2cSlv_ReceiveI2cMsg
 25284 ;;		_I2cSlv_SendI2cMsg
 25285 ;;		_OsTmr_GetTimerStatus
 25286 ;;		_OsTmr_StartTimer
 25287 ;;		_OsTmr_Wait
 25288 ;; This function is called by:
 25289 ;;		_Eeprom_Read
 25290 ;; This function uses a non-reentrant model
 25291 ;;
 25292                           
 25293                           	psect	text119
 25294  003946                     __ptext119:
 25295                           	opt stack 0
 25296  003946                     _I2cSlv_QueryI2cData:
 25297                           	opt stack 9
 25298                           
 25299                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25300                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25301                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25302                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25303                           ;i2c_slv.c: 388: switch(I2cOpState)
 25304                           
 25305                           ; BSR set to: 0
 25306                           ;incstack = 0
 25307  003946  D05B               	goto	l1440
 25308  003948                     
 25309                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25310  003948  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25311  00394C  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25312  003950  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25313  003954  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25314  003958  EC2E  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 25315                           
 25316                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25317  00395C  0E01               	movlw	1
 25318  00395E  0101               	movlb	1	; () banked
 25319  003960  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25320                           
 25321                           ; BSR set to: 1
 25322                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25323  003962  0E00               	movlw	0
 25324  003964  D04A               	goto	L59
 25325  003966                     
 25326                           ; BSR set to: 1
 25327                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25328                           
 25329                           ; BSR set to: 1
 25330  003966  0EE2               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25331  003968  0100               	movlb	0	; () banked
 25332  00396A  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25333  00396C  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25334  00396E  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25335  003970  0EF4               	movlw	244
 25336  003972  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25337  003974  0E01               	movlw	1
 25338  003976  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25339  003978  0E00               	movlw	0
 25340  00397A  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25341  00397C  0E00               	movlw	0
 25342  00397E  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25343  003980  EC58  F029         	call	_OsTmr_Wait	;wreg free
 25344  003984  06E8               	decf	wreg,f,c
 25345  003986  A4D8               	btfss	status,2,c
 25346  003988  D036               	goto	l1448
 25347                           
 25348                           ;i2c_slv.c: 402: {
 25349                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25350  00398A  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25351  00398C  0100               	movlb	0	; () banked
 25352  00398E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25353  003990  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25354  003992  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25355  003994  0EC4               	movlw	196
 25356  003996  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25357  003998  0E09               	movlw	9
 25358  00399A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25359  00399C  0E00               	movlw	0
 25360  00399E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25361  0039A0  0E00               	movlw	0
 25362  0039A2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25363  0039A4  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 25364                           
 25365                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25366  0039A8  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25367  0039AC  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25368  0039B0  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25369  0039B4  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25370  0039B8  ECCF  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25371                           
 25372                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25373  0039BC  0E02               	movlw	2
 25374  0039BE  0101               	movlb	1	; () banked
 25375  0039C0  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25376  0039C2  D019               	goto	l1448
 25377  0039C4                     
 25378                           ; BSR set to: 1
 25379                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25380                           
 25381                           ; BSR set to: 1
 25382  0039C4  EC11  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25383  0039C8  06E8               	decf	wreg,f,c
 25384  0039CA  A4D8               	btfss	status,2,c
 25385  0039CC  D005               	goto	l1446
 25386                           
 25387                           ;i2c_slv.c: 414: {
 25388                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25389  0039CE  0E00               	movlw	0
 25390  0039D0  0101               	movlb	1	; () banked
 25391  0039D2  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25392                           
 25393                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25394  0039D4  0E01               	movlw	1
 25395  0039D6  D011               	goto	L59
 25396  0039D8                     l1446:
 25397                           
 25398                           ;i2c_slv.c: 420: else
 25399                           ;i2c_slv.c: 421: {
 25400                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25401                           
 25402                           ; BSR set to: 1
 25403  0039D8  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25404  0039DA  0100               	movlb	0	; () banked
 25405  0039DC  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25406  0039DE  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25407  0039E0  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25408  0039E2  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25409  0039E6  06E8               	decf	wreg,f,c
 25410  0039E8  A4D8               	btfss	status,2,c
 25411  0039EA  D005               	goto	l1448
 25412                           
 25413                           ;i2c_slv.c: 423: {
 25414                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25415  0039EC  0E00               	movlw	0
 25416  0039EE  0101               	movlb	1	; () banked
 25417  0039F0  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25418                           
 25419                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25420  0039F2  0E02               	movlw	2
 25421  0039F4  D002               	goto	L59
 25422  0039F6                     l1448:
 25423                           
 25424                           ;i2c_slv.c: 429: else
 25425                           ;i2c_slv.c: 430: {
 25426                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25427                           
 25428                           ; BSR set to: 1
 25429  0039F6  0E00               	movlw	0
 25430  0039F8  0101               	movlb	1	; () banked
 25431  0039FA                     L59:
 25432  0039FA  6FE2               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25433                           
 25434                           ; BSR set to: 1
 25435                           ;i2c_slv.c: 439: }
 25436                           
 25437                           ; BSR set to: 1
 25438                           ;i2c_slv.c: 438: break;
 25439                           
 25440                           ;i2c_slv.c: 437: default:
 25441                           
 25442                           ; BSR set to: 1
 25443                           ;i2c_slv.c: 433: }
 25444                           ;i2c_slv.c: 434: }
 25445                           ;i2c_slv.c: 435: break;
 25446                           
 25447                           ; BSR set to: 1
 25448  0039FC  D00B               	goto	l1442
 25449  0039FE                     l1440:
 25450                           
 25451                           ; BSR set to: 1
 25452  0039FE  0101               	movlb	1	; () banked
 25453  003A00  51E3               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25454                           
 25455                           ; Switch size 1, requested type "space"
 25456                           ; Number of cases is 3, Range of values is 0 to 2
 25457                           ; switch strategies available:
 25458                           ; Name         Instructions Cycles
 25459                           ; simple_byte           10     6 (average)
 25460                           ;	Chosen strategy is simple_byte
 25461  003A02  0A00               	xorlw	0	; case 0
 25462  003A04  B4D8               	btfsc	status,2,c
 25463  003A06  D7A0               	goto	l1441
 25464  003A08  0A01               	xorlw	1	; case 1
 25465  003A0A  B4D8               	btfsc	status,2,c
 25466  003A0C  D7AC               	goto	l1443
 25467  003A0E  0A03               	xorlw	3	; case 2
 25468  003A10  B4D8               	btfsc	status,2,c
 25469  003A12  D7D8               	goto	l1445
 25470  003A14                     l1442:
 25471                           
 25472                           ; BSR set to: 1
 25473                           ;i2c_slv.c: 441: return Ret;
 25474                           
 25475                           ; BSR set to: 1
 25476  003A14  51E2               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25477  003A16  0012               	return	
 25478  003A18                     __end_of_I2cSlv_QueryI2cData:
 25479                           	opt stack 0
 25480                           tosu	equ	0xFFF
 25481                           tosh	equ	0xFFE
 25482                           tosl	equ	0xFFD
 25483                           pclath	equ	0xFFA
 25484                           tblptru	equ	0xFF8
 25485                           tblptrh	equ	0xFF7
 25486                           tblptrl	equ	0xFF6
 25487                           tablat	equ	0xFF5
 25488                           prodh	equ	0xFF4
 25489                           prodl	equ	0xFF3
 25490                           intcon	equ	0xFF2
 25491                           intcon2	equ	0xFF1
 25492                           intcon3	equ	0xFF0
 25493                           indf0	equ	0xFEF
 25494                           postinc0	equ	0xFEE
 25495                           plusw0	equ	0xFEB
 25496                           fsr0h	equ	0xFEA
 25497                           fsr0l	equ	0xFE9
 25498                           wreg	equ	0xFE8
 25499                           indf1	equ	0xFE7
 25500                           postinc1	equ	0xFE6
 25501                           postdec1	equ	0xFE5
 25502                           fsr1h	equ	0xFE2
 25503                           fsr1l	equ	0xFE1
 25504                           indf2	equ	0xFDF
 25505                           postinc2	equ	0xFDE
 25506                           postdec2	equ	0xFDD
 25507                           plusw2	equ	0xFDB
 25508                           fsr2h	equ	0xFDA
 25509                           fsr2l	equ	0xFD9
 25510                           status	equ	0xFD8
 25511                           
 25512 ;; *************** function _OsTmr_Wait *****************
 25513 ;; Defined at:
 25514 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25515 ;; Parameters:    Size  Location     Type
 25516 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25517 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25518 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;  Ret             1   65[BANK0 ] enum E7749
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  1    wreg      enum E7749
 25523 ;; Registers used:
 25524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25525 ;; Tracked objects:
 25526 ;;		On entry : 0/0
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25530 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25533 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25534 ;;Total ram usage:        7 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; Hardware stack levels required when called:   14
 25537 ;; This function calls:
 25538 ;;		_OsTmr_GetTimerStatus
 25539 ;;		_OsTmr_StartTimer
 25540 ;; This function is called by:
 25541 ;;		_I2cSlv_QueryI2cData
 25542 ;;		_Terminal
 25543 ;; This function uses a non-reentrant model
 25544 ;;
 25545                           
 25546                           	psect	text120
 25547  0052B0                     __ptext120:
 25548                           	opt stack 0
 25549  0052B0                     _OsTmr_Wait:
 25550                           	opt stack 11
 25551                           
 25552                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;incstack = 0
 25556  0052B0  0E00               	movlw	0
 25557  0052B2  0100               	movlb	0	; () banked
 25558  0052B4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25559                           
 25560                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25561  0052B6  D02D               	goto	l855
 25562  0052B8                     
 25563                           ; BSR set to: 0
 25564                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25565                           
 25566                           ; BSR set to: 0
 25567  0052B8  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25568  0052BC  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25569  0052C0  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25570  0052C4  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25571  0052C8  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25572  0052CC  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25573  0052D0  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 25574                           
 25575                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25576  0052D4  0100               	movlb	0	; () banked
 25577  0052D6  EE20 F00A          	lfsr	2,10
 25578  0052DA  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25579  0052DC  26D9               	addwf	fsr2l,f,c
 25580  0052DE  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25581  0052E0  22DA               	addwfc	fsr2h,f,c
 25582  0052E2  0E01               	movlw	1
 25583  0052E4  6EDF               	movwf	indf2,c
 25584                           
 25585                           ;os_timers.c: 165: break;
 25586  0052E6  D022               	goto	l857
 25587  0052E8                     
 25588                           ; BSR set to: 0
 25589                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25590                           
 25591                           ; BSR set to: 0
 25592  0052E8  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25593  0052EC  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25594  0052F0  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25595  0052F4  06E8               	decf	wreg,f,c
 25596  0052F6  A4D8               	btfss	status,2,c
 25597  0052F8  D019               	goto	l857
 25598                           
 25599                           ;os_timers.c: 170: {
 25600                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25601  0052FA  0100               	movlb	0	; () banked
 25602  0052FC  EE20 F00A          	lfsr	2,10
 25603  005300  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25604  005302  26D9               	addwf	fsr2l,f,c
 25605  005304  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25606  005306  22DA               	addwfc	fsr2h,f,c
 25607  005308  0E00               	movlw	0
 25608  00530A  6EDF               	movwf	indf2,c
 25609                           
 25610                           ; BSR set to: 0
 25611                           ;os_timers.c: 174: Ret = DelayExpired;
 25612  00530C  0E01               	movlw	1
 25613  00530E  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25614                           
 25615                           ; BSR set to: 0
 25616                           ;os_timers.c: 180: }
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;os_timers.c: 179: break;
 25620                           
 25621                           ;os_timers.c: 178: default:
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;os_timers.c: 175: }
 25625                           ;os_timers.c: 176: break;
 25626  005310  D00D               	goto	l857
 25627  005312                     l855:
 25628                           
 25629                           ; BSR set to: 0
 25630                           
 25631                           ; BSR set to: 0
 25632  005312  EE20 F00A          	lfsr	2,10
 25633  005316  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25634  005318  26D9               	addwf	fsr2l,f,c
 25635  00531A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25636  00531C  22DA               	addwfc	fsr2h,f,c
 25637  00531E  50DF               	movf	indf2,w,c
 25638                           
 25639                           ; Switch size 1, requested type "space"
 25640                           ; Number of cases is 2, Range of values is 0 to 1
 25641                           ; switch strategies available:
 25642                           ; Name         Instructions Cycles
 25643                           ; simple_byte            7     4 (average)
 25644                           ;	Chosen strategy is simple_byte
 25645  005320  0A00               	xorlw	0	; case 0
 25646  005322  B4D8               	btfsc	status,2,c
 25647  005324  D7C9               	goto	l856
 25648  005326  0A01               	xorlw	1	; case 1
 25649  005328  B4D8               	btfsc	status,2,c
 25650  00532A  D7DE               	goto	l858
 25651  00532C                     l857:
 25652                           
 25653                           ;os_timers.c: 182: return Ret;
 25654                           
 25655                           ; BSR set to: 0
 25656  00532C  0100               	movlb	0	; () banked
 25657  00532E  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25658  005330  0012               	return	
 25659  005332                     __end_of_OsTmr_Wait:
 25660                           	opt stack 0
 25661                           tosu	equ	0xFFF
 25662                           tosh	equ	0xFFE
 25663                           tosl	equ	0xFFD
 25664                           pclath	equ	0xFFA
 25665                           tblptru	equ	0xFF8
 25666                           tblptrh	equ	0xFF7
 25667                           tblptrl	equ	0xFF6
 25668                           tablat	equ	0xFF5
 25669                           prodh	equ	0xFF4
 25670                           prodl	equ	0xFF3
 25671                           intcon	equ	0xFF2
 25672                           intcon2	equ	0xFF1
 25673                           intcon3	equ	0xFF0
 25674                           indf0	equ	0xFEF
 25675                           postinc0	equ	0xFEE
 25676                           plusw0	equ	0xFEB
 25677                           fsr0h	equ	0xFEA
 25678                           fsr0l	equ	0xFE9
 25679                           wreg	equ	0xFE8
 25680                           indf1	equ	0xFE7
 25681                           postinc1	equ	0xFE6
 25682                           postdec1	equ	0xFE5
 25683                           fsr1h	equ	0xFE2
 25684                           fsr1l	equ	0xFE1
 25685                           indf2	equ	0xFDF
 25686                           postinc2	equ	0xFDE
 25687                           postdec2	equ	0xFDD
 25688                           plusw2	equ	0xFDB
 25689                           fsr2h	equ	0xFDA
 25690                           fsr2l	equ	0xFD9
 25691                           status	equ	0xFD8
 25692                           
 25693 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25694 ;; Defined at:
 25695 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25696 ;; Parameters:    Size  Location     Type
 25697 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25698 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 25699 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25700 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25701 ;; Auto vars:     Size  Location     Type
 25702 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25703 ;; Return value:  Size  Location     Type
 25704 ;;                  1    wreg      unsigned char 
 25705 ;; Registers used:
 25706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25707 ;; Tracked objects:
 25708 ;;		On entry : 0/0
 25709 ;;		On exit  : 0/0
 25710 ;;		Unchanged: 0/0
 25711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25715 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25716 ;;Total ram usage:        5 bytes
 25717 ;; Hardware stack levels used:    1
 25718 ;; Hardware stack levels required when called:   12
 25719 ;; This function calls:
 25720 ;;		_GenerateEvt
 25721 ;; This function is called by:
 25722 ;;		_I2cSlv_QueryI2cData
 25723 ;;		_Terminal
 25724 ;; This function uses a non-reentrant model
 25725 ;;
 25726                           
 25727                           	psect	text121
 25728  00619E                     __ptext121:
 25729                           	opt stack 0
 25730  00619E                     _I2cSlv_ReceiveI2cMsg:
 25731                           	opt stack 13
 25732                           
 25733                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;incstack = 0
 25737  00619E  0E00               	movlw	0
 25738  0061A0  0100               	movlb	0	; () banked
 25739  0061A2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25740                           
 25741                           ; BSR set to: 0
 25742                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25743  0061A4  0E02               	movlw	2
 25744  0061A6  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25745  0061A8  B4D8               	btfsc	status,2,c
 25746  0061AA  D016               	goto	l1417
 25747                           
 25748                           ; BSR set to: 0
 25749                           ;i2c_slv.c: 294: {
 25750                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25751  0061AC  C082  F39C         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25755  0061B0  0E01               	movlw	1
 25756  0061B2  0103               	movlb	3	; () banked
 25757  0061B4  6F9D               	movwf	(_I2cRxPacket+1)& (0+255),b
 25758                           
 25759                           ; BSR set to: 3
 25760                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25761  0061B6  C083  F3A0         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25762                           
 25763                           ; BSR set to: 3
 25764                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25765  0061BA  C080  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25766  0061BE  C081  F39F         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25767                           
 25768                           ; BSR set to: 3
 25769                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25770  0061C2  0E39               	movlw	low _I2cReadDataEvt
 25771  0061C4  0100               	movlb	0	; () banked
 25772  0061C6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25773  0061C8  0E00               	movlw	high _I2cReadDataEvt
 25774  0061CA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25775  0061CC  ECE7  F034         	call	_GenerateEvt	;wreg free
 25776                           
 25777                           ;i2c_slv.c: 304: RxSts = 1u;
 25778  0061D0  0E01               	movlw	1
 25779  0061D2  0100               	movlb	0	; () banked
 25780  0061D4  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25781                           
 25782                           ;i2c_slv.c: 305: }
 25783  0061D6  0012               	return	
 25784  0061D8                     l1417:
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;i2c_slv.c: 306: else
 25788                           ;i2c_slv.c: 307: {
 25789                           ;i2c_slv.c: 309: RxSts = 0u;
 25790                           
 25791                           ; BSR set to: 0
 25792  0061D8  0E00               	movlw	0
 25793  0061DA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25794                           
 25795                           ; BSR set to: 0
 25796  0061DC  0012               	return	
 25797  0061DE                     __end_of_I2cSlv_ReceiveI2cMsg:
 25798                           	opt stack 0
 25799                           tosu	equ	0xFFF
 25800                           tosh	equ	0xFFE
 25801                           tosl	equ	0xFFD
 25802                           pclath	equ	0xFFA
 25803                           tblptru	equ	0xFF8
 25804                           tblptrh	equ	0xFF7
 25805                           tblptrl	equ	0xFF6
 25806                           tablat	equ	0xFF5
 25807                           prodh	equ	0xFF4
 25808                           prodl	equ	0xFF3
 25809                           intcon	equ	0xFF2
 25810                           intcon2	equ	0xFF1
 25811                           intcon3	equ	0xFF0
 25812                           indf0	equ	0xFEF
 25813                           postinc0	equ	0xFEE
 25814                           plusw0	equ	0xFEB
 25815                           fsr0h	equ	0xFEA
 25816                           fsr0l	equ	0xFE9
 25817                           wreg	equ	0xFE8
 25818                           indf1	equ	0xFE7
 25819                           postinc1	equ	0xFE6
 25820                           postdec1	equ	0xFE5
 25821                           fsr1h	equ	0xFE2
 25822                           fsr1l	equ	0xFE1
 25823                           indf2	equ	0xFDF
 25824                           postinc2	equ	0xFDE
 25825                           postdec2	equ	0xFDD
 25826                           plusw2	equ	0xFDB
 25827                           fsr2h	equ	0xFDA
 25828                           fsr2l	equ	0xFD9
 25829                           status	equ	0xFD8
 25830                           
 25831 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25832 ;; Defined at:
 25833 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25834 ;; Parameters:    Size  Location     Type
 25835 ;;		None
 25836 ;; Auto vars:     Size  Location     Type
 25837 ;;  Result          1   33[BANK0 ] enum E8935
 25838 ;; Return value:  Size  Location     Type
 25839 ;;                  1    wreg      enum E8935
 25840 ;; Registers used:
 25841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25842 ;; Tracked objects:
 25843 ;;		On entry : 0/0
 25844 ;;		On exit  : 0/0
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25851 ;;Total ram usage:        1 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:   12
 25854 ;; This function calls:
 25855 ;;		_ReceiveEvt
 25856 ;; This function is called by:
 25857 ;;		_I2cSlv_QueryI2cData
 25858 ;;		_Terminal
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           
 25862                           	psect	text122
 25863  006822                     __ptext122:
 25864                           	opt stack 0
 25865  006822                     _I2cSlv_I2cReadMsgSts:
 25866                           	opt stack 13
 25867                           
 25868                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25869                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;incstack = 0
 25873  006822  0EA1               	movlw	low (_I2cRxPacket+5)
 25874  006824  0100               	movlb	0	; () banked
 25875  006826  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25876  006828  0E03               	movlw	high (_I2cRxPacket+5)
 25877  00682A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25878  00682C  ECF6  F032         	call	_ReceiveEvt	;wreg free
 25879  006830  0900               	iorlw	0
 25880  006832  B4D8               	btfsc	status,2,c
 25881  006834  D002               	goto	l1422
 25882                           
 25883                           ;i2c_slv.c: 331: {
 25884                           ;i2c_slv.c: 332: Result = MessageReceived;
 25885  006836  0E01               	movlw	1
 25886  006838  D001               	goto	L60
 25887  00683A                     l1422:
 25888                           
 25889                           ;i2c_slv.c: 334: else
 25890                           ;i2c_slv.c: 335: {
 25891                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 25892                           
 25893                           ; BSR set to: 0
 25894  00683A  0E00               	movlw	0
 25895  00683C                     L60:
 25896  00683C  0100               	movlb	0	; () banked
 25897  00683E  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;i2c_slv.c: 337: }
 25901                           ;i2c_slv.c: 339: return Result;
 25902  006840  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 25903  006842  0012               	return	
 25904  006844                     __end_of_I2cSlv_I2cReadMsgSts:
 25905                           	opt stack 0
 25906                           tosu	equ	0xFFF
 25907                           tosh	equ	0xFFE
 25908                           tosl	equ	0xFFD
 25909                           pclath	equ	0xFFA
 25910                           tblptru	equ	0xFF8
 25911                           tblptrh	equ	0xFF7
 25912                           tblptrl	equ	0xFF6
 25913                           tablat	equ	0xFF5
 25914                           prodh	equ	0xFF4
 25915                           prodl	equ	0xFF3
 25916                           intcon	equ	0xFF2
 25917                           intcon2	equ	0xFF1
 25918                           intcon3	equ	0xFF0
 25919                           indf0	equ	0xFEF
 25920                           postinc0	equ	0xFEE
 25921                           plusw0	equ	0xFEB
 25922                           fsr0h	equ	0xFEA
 25923                           fsr0l	equ	0xFE9
 25924                           wreg	equ	0xFE8
 25925                           indf1	equ	0xFE7
 25926                           postinc1	equ	0xFE6
 25927                           postdec1	equ	0xFE5
 25928                           fsr1h	equ	0xFE2
 25929                           fsr1l	equ	0xFE1
 25930                           indf2	equ	0xFDF
 25931                           postinc2	equ	0xFDE
 25932                           postdec2	equ	0xFDD
 25933                           plusw2	equ	0xFDB
 25934                           fsr2h	equ	0xFDA
 25935                           fsr2l	equ	0xFD9
 25936                           status	equ	0xFD8
 25937                           
 25938 ;; *************** function _Led_SetLedBlinkTime *****************
 25939 ;; Defined at:
 25940 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 25941 ;; Parameters:    Size  Location     Type
 25942 ;;  Led             1    wreg     unsigned char 
 25943 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 25944 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 25945 ;; Auto vars:     Size  Location     Type
 25946 ;;  Led             1   33[BANK0 ] unsigned char 
 25947 ;; Return value:  Size  Location     Type
 25948 ;;                  1    wreg      void 
 25949 ;; Registers used:
 25950 ;;		wreg, status,2, status,0
 25951 ;; Tracked objects:
 25952 ;;		On entry : 0/0
 25953 ;;		On exit  : 0/0
 25954 ;;		Unchanged: 0/0
 25955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25959 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25960 ;;Total ram usage:        5 bytes
 25961 ;; Hardware stack levels used:    1
 25962 ;; Hardware stack levels required when called:   11
 25963 ;; This function calls:
 25964 ;;		Nothing
 25965 ;; This function is called by:
 25966 ;;		_MyApp_Task
 25967 ;; This function uses a non-reentrant model
 25968 ;;
 25969                           
 25970                           	psect	text123
 25971  005BFE                     __ptext123:
 25972                           	opt stack 0
 25973  005BFE                     _Led_SetLedBlinkTime:
 25974                           	opt stack 16
 25975                           
 25976                           ; BSR set to: 0
 25977                           ;incstack = 0
 25978                           ;Led_SetLedBlinkTime@Led stored from wreg
 25979  005BFE  0100               	movlb	0	; () banked
 25980  005C00  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25981                           
 25982                           ;led.c: 374: switch (Led)
 25983  005C02  D01B               	goto	l2151
 25984  005C04                     l2152:
 25985                           
 25986                           ; BSR set to: 0
 25987                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25988  005C04  C07D  F376         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25989  005C08  C07E  F377         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25990                           
 25991                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25992  005C0C  C07F  F378         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25993  005C10  C080  F379         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25994                           
 25995                           ;led.c: 379: break;
 25996  005C14  0012               	return	
 25997  005C16                     l2154:
 25998                           
 25999                           ; BSR set to: 0
 26000                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 26001  005C16  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26002  005C1A  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26003                           
 26004                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 26005  005C1E  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26006  005C22  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26007                           
 26008                           ;led.c: 384: break;
 26009  005C26  0012               	return	
 26010  005C28                     l2155:
 26011                           
 26012                           ; BSR set to: 0
 26013                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 26014  005C28  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26015  005C2C  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26016                           
 26017                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 26018  005C30  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26019  005C34  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26020                           
 26021                           ; BSR set to: 0
 26022                           ;led.c: 393: }
 26023                           
 26024                           ; BSR set to: 0
 26025                           ;led.c: 392: break;
 26026                           
 26027                           ;led.c: 391: default:
 26028                           
 26029                           ;led.c: 389: break;
 26030  005C38  0012               	return	
 26031  005C3A                     l2151:
 26032                           
 26033                           ; BSR set to: 0
 26034  005C3A  0100               	movlb	0	; () banked
 26035  005C3C  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 26036                           
 26037                           ; Switch size 1, requested type "space"
 26038                           ; Number of cases is 3, Range of values is 1 to 3
 26039                           ; switch strategies available:
 26040                           ; Name         Instructions Cycles
 26041                           ; simple_byte           10     6 (average)
 26042                           ;	Chosen strategy is simple_byte
 26043  005C3E  0A01               	xorlw	1	; case 1
 26044  005C40  B4D8               	btfsc	status,2,c
 26045  005C42  D7E0               	goto	l2152
 26046  005C44  0A03               	xorlw	3	; case 2
 26047  005C46  B4D8               	btfsc	status,2,c
 26048  005C48  D7E6               	goto	l2154
 26049  005C4A  0A01               	xorlw	1	; case 3
 26050  005C4C  A4D8               	btfss	status,2,c
 26051  005C4E  0012               	return	
 26052  005C50  D7EB               	goto	l2155
 26053  005C52                     __end_of_Led_SetLedBlinkTime:
 26054                           	opt stack 0
 26055                           tosu	equ	0xFFF
 26056                           tosh	equ	0xFFE
 26057                           tosl	equ	0xFFD
 26058                           pclath	equ	0xFFA
 26059                           tblptru	equ	0xFF8
 26060                           tblptrh	equ	0xFF7
 26061                           tblptrl	equ	0xFF6
 26062                           tablat	equ	0xFF5
 26063                           prodh	equ	0xFF4
 26064                           prodl	equ	0xFF3
 26065                           intcon	equ	0xFF2
 26066                           intcon2	equ	0xFF1
 26067                           intcon3	equ	0xFF0
 26068                           indf0	equ	0xFEF
 26069                           postinc0	equ	0xFEE
 26070                           plusw0	equ	0xFEB
 26071                           fsr0h	equ	0xFEA
 26072                           fsr0l	equ	0xFE9
 26073                           wreg	equ	0xFE8
 26074                           indf1	equ	0xFE7
 26075                           postinc1	equ	0xFE6
 26076                           postdec1	equ	0xFE5
 26077                           fsr1h	equ	0xFE2
 26078                           fsr1l	equ	0xFE1
 26079                           indf2	equ	0xFDF
 26080                           postinc2	equ	0xFDE
 26081                           postdec2	equ	0xFDD
 26082                           plusw2	equ	0xFDB
 26083                           fsr2h	equ	0xFDA
 26084                           fsr2l	equ	0xFD9
 26085                           status	equ	0xFD8
 26086                           
 26087 ;; *************** function _Eeprom_Reset *****************
 26088 ;; Defined at:
 26089 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26090 ;; Parameters:    Size  Location     Type
 26091 ;;		None
 26092 ;; Auto vars:     Size  Location     Type
 26093 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 26094 ;; Return value:  Size  Location     Type
 26095 ;;                  1    wreg      unsigned char 
 26096 ;; Registers used:
 26097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26098 ;; Tracked objects:
 26099 ;;		On entry : 0/0
 26100 ;;		On exit  : 0/0
 26101 ;;		Unchanged: 0/0
 26102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26106 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26107 ;;Total ram usage:        1 bytes
 26108 ;; Hardware stack levels used:    1
 26109 ;; Hardware stack levels required when called:   13
 26110 ;; This function calls:
 26111 ;;		_ClearBuffer
 26112 ;;		_I2cSlv_SendI2cMsg
 26113 ;; This function is called by:
 26114 ;;		_MyApp_Task
 26115 ;; This function uses a non-reentrant model
 26116 ;;
 26117                           
 26118                           	psect	text124
 26119  005AAC                     __ptext124:
 26120                           	opt stack 0
 26121  005AAC                     _Eeprom_Reset:
 26122                           	opt stack 14
 26123                           
 26124                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 26125                           
 26126                           ; BSR set to: 0
 26127                           ;incstack = 0
 26128  005AAC  0E50               	movlw	80
 26129  005AAE  0100               	movlb	0	; () banked
 26130  005AB0  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 26131                           
 26132                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 26133                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 26134  005AB2  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26135  005AB4  A4D8               	btfss	status,2,c
 26136  005AB6  D00A               	goto	l2045
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;eeprom_if.c: 137: {
 26140                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 26141  005AB8  0EBB               	movlw	low _EepromBuffer
 26142  005ABA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26143  005ABC  0E04               	movlw	high _EepromBuffer
 26144  005ABE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26145  005AC0  0E00               	movlw	0
 26146  005AC2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26147  005AC4  0E0F               	movlw	15
 26148  005AC6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26149  005AC8  EC18  F032         	call	_ClearBuffer	;wreg free
 26150  005ACC                     l2045:
 26151                           
 26152                           ;eeprom_if.c: 139: }
 26153                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 26154  005ACC  C0C6  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 26155                           
 26156                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 26157  005AD0  0EBB               	movlw	low _EepromBuffer
 26158  005AD2  0100               	movlb	0	; () banked
 26159  005AD4  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 26160  005AD6  0E04               	movlw	high _EepromBuffer
 26161  005AD8  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 26162  005ADA  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 26163  005ADE  0E0F               	movlw	15
 26164  005AE0  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 26165  005AE2  EC2E  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 26166                           
 26167                           ;eeprom_if.c: 144: memoryAddress += 16;
 26168  005AE6  0E10               	movlw	16
 26169  005AE8  0100               	movlb	0	; () banked
 26170  005AEA  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 26174  005AEC  0EDF               	movlw	223
 26175  005AEE  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 26176  005AF0  D006               	goto	l2046
 26177                           
 26178                           ; BSR set to: 0
 26179                           ;eeprom_if.c: 146: {
 26180                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 26181  005AF2  0E00               	movlw	0
 26182  005AF4  0104               	movlb	4	; () banked
 26183  005AF6  6FBB               	movwf	_EepromBuffer& (0+255),b
 26184                           
 26185                           ;eeprom_if.c: 148: memoryAddress = 0;
 26186  005AF8  0E00               	movlw	0
 26187  005AFA  0100               	movlb	0	; () banked
 26188  005AFC  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 26189  005AFE                     l2046:
 26190                           
 26191                           ; BSR set to: 0
 26192                           ;eeprom_if.c: 149: }
 26193                           ;eeprom_if.c: 150: return memoryAddress;
 26194  005AFE  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26195  005B00  0012               	return	
 26196  005B02                     __end_of_Eeprom_Reset:
 26197                           	opt stack 0
 26198                           tosu	equ	0xFFF
 26199                           tosh	equ	0xFFE
 26200                           tosl	equ	0xFFD
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           intcon2	equ	0xFF1
 26210                           intcon3	equ	0xFF0
 26211                           indf0	equ	0xFEF
 26212                           postinc0	equ	0xFEE
 26213                           plusw0	equ	0xFEB
 26214                           fsr0h	equ	0xFEA
 26215                           fsr0l	equ	0xFE9
 26216                           wreg	equ	0xFE8
 26217                           indf1	equ	0xFE7
 26218                           postinc1	equ	0xFE6
 26219                           postdec1	equ	0xFE5
 26220                           fsr1h	equ	0xFE2
 26221                           fsr1l	equ	0xFE1
 26222                           indf2	equ	0xFDF
 26223                           postinc2	equ	0xFDE
 26224                           postdec2	equ	0xFDD
 26225                           plusw2	equ	0xFDB
 26226                           fsr2h	equ	0xFDA
 26227                           fsr2l	equ	0xFD9
 26228                           status	equ	0xFD8
 26229                           
 26230 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26231 ;; Defined at:
 26232 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26233 ;; Parameters:    Size  Location     Type
 26234 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26235 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26236 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26237 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26238 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  1    wreg      unsigned char 
 26243 ;; Registers used:
 26244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26245 ;; Tracked objects:
 26246 ;;		On entry : 0/0
 26247 ;;		On exit  : 0/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26253 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26254 ;;Total ram usage:        5 bytes
 26255 ;; Hardware stack levels used:    1
 26256 ;; Hardware stack levels required when called:   12
 26257 ;; This function calls:
 26258 ;;		_GenerateEvt
 26259 ;; This function is called by:
 26260 ;;		_I2cSlv_QueryI2cData
 26261 ;;		_Eeprom_Write
 26262 ;;		_Eeprom_Reset
 26263 ;;		_Terminal
 26264 ;;		_triggerRelay
 26265 ;; This function uses a non-reentrant model
 26266 ;;
 26267                           
 26268                           	psect	text125
 26269  00625C                     __ptext125:
 26270                           	opt stack 0
 26271  00625C                     _I2cSlv_SendI2cMsg:
 26272                           	opt stack 13
 26273                           
 26274                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26275                           
 26276                           ; BSR set to: 0
 26277                           ;incstack = 0
 26278  00625C  0E00               	movlw	0
 26279  00625E  0100               	movlb	0	; () banked
 26280  006260  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26281                           
 26282                           ; BSR set to: 0
 26283                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26284  006262  05CF               	decf	_I2cComSts& (0+255),w,b
 26285  006264  B4D8               	btfsc	status,2,c
 26286  006266  D015               	goto	l1412
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;i2c_slv.c: 257: {
 26290                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26291  006268  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26295  00626C  0E00               	movlw	0
 26296  00626E  0103               	movlb	3	; () banked
 26297  006270  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 26298                           
 26299                           ; BSR set to: 3
 26300                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26301  006272  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26302                           
 26303                           ; BSR set to: 3
 26304                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26305  006276  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26306  00627A  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26307                           
 26308                           ; BSR set to: 3
 26309                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26310  00627E  0ED7               	movlw	low _I2cWriteDataEvt
 26311  006280  0100               	movlb	0	; () banked
 26312  006282  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26313  006284  0E00               	movlw	high _I2cWriteDataEvt
 26314  006286  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26315  006288  ECE7  F034         	call	_GenerateEvt	;wreg free
 26316                           
 26317                           ;i2c_slv.c: 267: TxSts = 1u;
 26318  00628C  0E01               	movlw	1
 26319  00628E  0100               	movlb	0	; () banked
 26320  006290  D001               	goto	L61
 26321  006292                     l1412:
 26322                           
 26323                           ; BSR set to: 0
 26324                           ;i2c_slv.c: 269: else
 26325                           ;i2c_slv.c: 270: {
 26326                           ;i2c_slv.c: 272: TxSts = 0u;
 26327                           
 26328                           ; BSR set to: 0
 26329  006292  0E00               	movlw	0
 26330  006294                     L61:
 26331  006294  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26332                           
 26333                           ; BSR set to: 0
 26334                           ;i2c_slv.c: 273: }
 26335                           ;i2c_slv.c: 275: return TxSts;
 26336  006296  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26337  006298  0012               	return	
 26338  00629A                     __end_of_I2cSlv_SendI2cMsg:
 26339                           	opt stack 0
 26340                           tosu	equ	0xFFF
 26341                           tosh	equ	0xFFE
 26342                           tosl	equ	0xFFD
 26343                           pclath	equ	0xFFA
 26344                           tblptru	equ	0xFF8
 26345                           tblptrh	equ	0xFF7
 26346                           tblptrl	equ	0xFF6
 26347                           tablat	equ	0xFF5
 26348                           prodh	equ	0xFF4
 26349                           prodl	equ	0xFF3
 26350                           intcon	equ	0xFF2
 26351                           intcon2	equ	0xFF1
 26352                           intcon3	equ	0xFF0
 26353                           indf0	equ	0xFEF
 26354                           postinc0	equ	0xFEE
 26355                           plusw0	equ	0xFEB
 26356                           fsr0h	equ	0xFEA
 26357                           fsr0l	equ	0xFE9
 26358                           wreg	equ	0xFE8
 26359                           indf1	equ	0xFE7
 26360                           postinc1	equ	0xFE6
 26361                           postdec1	equ	0xFE5
 26362                           fsr1h	equ	0xFE2
 26363                           fsr1l	equ	0xFE1
 26364                           indf2	equ	0xFDF
 26365                           postinc2	equ	0xFDE
 26366                           postdec2	equ	0xFDD
 26367                           plusw2	equ	0xFDB
 26368                           fsr2h	equ	0xFDA
 26369                           fsr2l	equ	0xFD9
 26370                           status	equ	0xFD8
 26371                           
 26372 ;; *************** function _UartSetConfig *****************
 26373 ;; Defined at:
 26374 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26375 ;; Parameters:    Size  Location     Type
 26376 ;;		None
 26377 ;; Auto vars:     Size  Location     Type
 26378 ;;		None
 26379 ;; Return value:  Size  Location     Type
 26380 ;;                  1    wreg      void 
 26381 ;; Registers used:
 26382 ;;		wreg, status,2
 26383 ;; Tracked objects:
 26384 ;;		On entry : 0/0
 26385 ;;		On exit  : 0/0
 26386 ;;		Unchanged: 0/0
 26387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;Total ram usage:        0 bytes
 26393 ;; Hardware stack levels used:    1
 26394 ;; Hardware stack levels required when called:   11
 26395 ;; This function calls:
 26396 ;;		Nothing
 26397 ;; This function is called by:
 26398 ;;		_Mdm_MainTask
 26399 ;; This function uses a non-reentrant model
 26400 ;;
 26401                           
 26402                           	psect	text126
 26403  00594C                     __ptext126:
 26404                           	opt stack 0
 26405  00594C                     _UartSetConfig:
 26406                           	opt stack 16
 26407                           
 26408                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26409                           
 26410                           ; BSR set to: 0
 26411                           ;incstack = 0
 26412  00594C  0E01               	movlw	1
 26413  00594E  0103               	movlb	3	; () banked
 26414  005950  6F1C               	movwf	_UartConfig& (0+255),b
 26415                           
 26416                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26417  005952  0E00               	movlw	0
 26418  005954  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 26419                           
 26420                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26421  005956  0E00               	movlw	0
 26422  005958  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 26423                           
 26424                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26425  00595A  0E00               	movlw	0
 26426  00595C  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 26427                           
 26428                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26429  00595E  0E00               	movlw	0
 26430  005960  6F20               	movwf	(_UartConfig+4)& (0+255),b
 26431                           
 26432                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26433  005962  0E00               	movlw	0
 26434  005964  6F21               	movwf	(_UartConfig+5)& (0+255),b
 26435                           
 26436                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26437  005966  0E01               	movlw	1
 26438  005968  6F22               	movwf	(_UartConfig+6)& (0+255),b
 26439                           
 26440                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26441  00596A  0E01               	movlw	1
 26442  00596C  6F23               	movwf	(_UartConfig+7)& (0+255),b
 26443                           
 26444                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26445  00596E  0E00               	movlw	0
 26446  005970  6F24               	movwf	(_UartConfig+8)& (0+255),b
 26447                           
 26448                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26449  005972  0E00               	movlw	0
 26450  005974  6F25               	movwf	(_UartConfig+9)& (0+255),b
 26451                           
 26452                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26453  005976  0E00               	movlw	0
 26454  005978  6F26               	movwf	(_UartConfig+10)& (0+255),b
 26455                           
 26456                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26457  00597A  0E00               	movlw	0
 26458  00597C  6F27               	movwf	(_UartConfig+11)& (0+255),b
 26459                           
 26460                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26461  00597E  0E01               	movlw	1
 26462  005980  6F28               	movwf	(_UartConfig+12)& (0+255),b
 26463                           
 26464                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26465  005982  0E00               	movlw	0
 26466  005984  6F29               	movwf	(_UartConfig+13)& (0+255),b
 26467  005986  0E6C               	movlw	108
 26468  005988  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 26469  00598A  0EDC               	movlw	220
 26470  00598C  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 26471  00598E  0E02               	movlw	2
 26472  005990  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 26473                           
 26474                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26475  005992  0E80               	movlw	128
 26476  005994  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 26477  005996  0E25               	movlw	37
 26478  005998  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 26479  00599A  0E00               	movlw	0
 26480  00599C  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 26481  00599E  0E00               	movlw	0
 26482  0059A0  6F30               	movwf	(_UartConfig+20)& (0+255),b
 26483                           
 26484                           ; BSR set to: 3
 26485  0059A2  0012               	return		;funcret
 26486  0059A4                     __end_of_UartSetConfig:
 26487                           	opt stack 0
 26488                           tosu	equ	0xFFF
 26489                           tosh	equ	0xFFE
 26490                           tosl	equ	0xFFD
 26491                           pclath	equ	0xFFA
 26492                           tblptru	equ	0xFF8
 26493                           tblptrh	equ	0xFF7
 26494                           tblptrl	equ	0xFF6
 26495                           tablat	equ	0xFF5
 26496                           prodh	equ	0xFF4
 26497                           prodl	equ	0xFF3
 26498                           intcon	equ	0xFF2
 26499                           intcon2	equ	0xFF1
 26500                           intcon3	equ	0xFF0
 26501                           indf0	equ	0xFEF
 26502                           postinc0	equ	0xFEE
 26503                           plusw0	equ	0xFEB
 26504                           fsr0h	equ	0xFEA
 26505                           fsr0l	equ	0xFE9
 26506                           wreg	equ	0xFE8
 26507                           indf1	equ	0xFE7
 26508                           postinc1	equ	0xFE6
 26509                           postdec1	equ	0xFE5
 26510                           fsr1h	equ	0xFE2
 26511                           fsr1l	equ	0xFE1
 26512                           indf2	equ	0xFDF
 26513                           postinc2	equ	0xFDE
 26514                           postdec2	equ	0xFDD
 26515                           plusw2	equ	0xFDB
 26516                           fsr2h	equ	0xFDA
 26517                           fsr2l	equ	0xFD9
 26518                           status	equ	0xFD8
 26519                           
 26520 ;; *************** function _TurnOnModem *****************
 26521 ;; Defined at:
 26522 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26523 ;; Parameters:    Size  Location     Type
 26524 ;;		None
 26525 ;; Auto vars:     Size  Location     Type
 26526 ;;		None
 26527 ;; Return value:  Size  Location     Type
 26528 ;;                  1    wreg      void 
 26529 ;; Registers used:
 26530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26531 ;; Tracked objects:
 26532 ;;		On entry : 0/0
 26533 ;;		On exit  : 0/0
 26534 ;;		Unchanged: 0/0
 26535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26540 ;;Total ram usage:        0 bytes
 26541 ;; Hardware stack levels used:    1
 26542 ;; Hardware stack levels required when called:   12
 26543 ;; This function calls:
 26544 ;;		_GenerateEvt
 26545 ;; This function is called by:
 26546 ;;		_Mdm_MainTask
 26547 ;; This function uses a non-reentrant model
 26548 ;;
 26549                           
 26550                           	psect	text127
 26551  005F70                     __ptext127:
 26552                           	opt stack 0
 26553  005F70                     _TurnOnModem:
 26554                           	opt stack 15
 26555                           
 26556                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26557                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26558                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26559                           
 26560                           ; BSR set to: 3
 26561                           ;incstack = 0
 26562  005F70  D01B               	goto	l1009
 26563  005F72                     
 26564                           ;mdm_gsm_gprs.c: 385: Counter++;
 26565  005F72  0102               	movlb	2	; () banked
 26566  005F74  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26567  005F76  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26568                           
 26569                           ; BSR set to: 2
 26570                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26571  005F78  0EB8               	movlw	184
 26572  005F7A  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 26573  005F7C  0E0B               	movlw	11
 26574  005F7E  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26575  005F80  A0D8               	btfss	status,0,c
 26576  005F82  0012               	return	
 26577                           
 26578                           ; BSR set to: 2
 26579                           ;mdm_gsm_gprs.c: 388: {
 26580                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26581  005F84  0E01               	movlw	1
 26582  005F86  0101               	movlb	1	; () banked
 26583  005F88  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26584                           
 26585                           ; BSR set to: 1
 26586                           ;mdm_gsm_gprs.c: 391: }
 26587                           ;mdm_gsm_gprs.c: 392: break;
 26588  005F8A  0012               	return	
 26589  005F8C                     
 26590                           ; BSR set to: 1
 26591                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26592                           
 26593                           ; BSR set to: 1
 26594  005F8C  0EE0               	movlw	low _MdmOnOffPulseRequest
 26595  005F8E  0100               	movlb	0	; () banked
 26596  005F90  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26597  005F92  0E00               	movlw	high _MdmOnOffPulseRequest
 26598  005F94  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26599  005F96  ECE7  F034         	call	_GenerateEvt	;wreg free
 26600                           
 26601                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26602  005F9A  0E01               	movlw	1
 26603  005F9C  0100               	movlb	0	; () banked
 26604  005F9E  6FD1               	movwf	_MdmStatus& (0+255),b
 26605                           
 26606                           ; BSR set to: 0
 26607                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26608  005FA0  0E02               	movlw	2
 26609  005FA2  0101               	movlb	1	; () banked
 26610  005FA4  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26611                           
 26612                           ; BSR set to: 1
 26613                           ;mdm_gsm_gprs.c: 408: }
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;mdm_gsm_gprs.c: 407: break;
 26617                           
 26618                           ;mdm_gsm_gprs.c: 406: default:
 26619                           
 26620                           ; BSR set to: 1
 26621                           ;mdm_gsm_gprs.c: 404: break;
 26622                           
 26623                           ;mdm_gsm_gprs.c: 403: case Stop:
 26624                           
 26625                           ;mdm_gsm_gprs.c: 401: break;
 26626  005FA6  0012               	return	
 26627  005FA8                     l1009:
 26628                           
 26629                           ; BSR set to: 1
 26630  005FA8  0101               	movlb	1	; () banked
 26631  005FAA  51F2               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26632                           
 26633                           ; Switch size 1, requested type "space"
 26634                           ; Number of cases is 3, Range of values is 0 to 2
 26635                           ; switch strategies available:
 26636                           ; Name         Instructions Cycles
 26637                           ; simple_byte           10     6 (average)
 26638                           ;	Chosen strategy is simple_byte
 26639  005FAC  0A00               	xorlw	0	; case 0
 26640  005FAE  B4D8               	btfsc	status,2,c
 26641  005FB0  D7E0               	goto	l1010
 26642  005FB2  0A01               	xorlw	1	; case 1
 26643  005FB4  B4D8               	btfsc	status,2,c
 26644  005FB6  D7EA               	goto	l1013
 26645  005FB8  0A03               	xorlw	3	; case 2
 26646  005FBA  0012               	return	
 26647  005FBC                     __end_of_TurnOnModem:
 26648                           	opt stack 0
 26649                           tosu	equ	0xFFF
 26650                           tosh	equ	0xFFE
 26651                           tosl	equ	0xFFD
 26652                           pclath	equ	0xFFA
 26653                           tblptru	equ	0xFF8
 26654                           tblptrh	equ	0xFF7
 26655                           tblptrl	equ	0xFF6
 26656                           tablat	equ	0xFF5
 26657                           prodh	equ	0xFF4
 26658                           prodl	equ	0xFF3
 26659                           intcon	equ	0xFF2
 26660                           intcon2	equ	0xFF1
 26661                           intcon3	equ	0xFF0
 26662                           indf0	equ	0xFEF
 26663                           postinc0	equ	0xFEE
 26664                           plusw0	equ	0xFEB
 26665                           fsr0h	equ	0xFEA
 26666                           fsr0l	equ	0xFE9
 26667                           wreg	equ	0xFE8
 26668                           indf1	equ	0xFE7
 26669                           postinc1	equ	0xFE6
 26670                           postdec1	equ	0xFE5
 26671                           fsr1h	equ	0xFE2
 26672                           fsr1l	equ	0xFE1
 26673                           indf2	equ	0xFDF
 26674                           postinc2	equ	0xFDE
 26675                           postdec2	equ	0xFDD
 26676                           plusw2	equ	0xFDB
 26677                           fsr2h	equ	0xFDA
 26678                           fsr2l	equ	0xFD9
 26679                           status	equ	0xFD8
 26680                           
 26681 ;; *************** function _SendSmsSm *****************
 26682 ;; Defined at:
 26683 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26684 ;; Parameters:    Size  Location     Type
 26685 ;;		None
 26686 ;; Auto vars:     Size  Location     Type
 26687 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26688 ;; Return value:  Size  Location     Type
 26689 ;;                  1    wreg      void 
 26690 ;; Registers used:
 26691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26692 ;; Tracked objects:
 26693 ;;		On entry : 0/0
 26694 ;;		On exit  : 0/0
 26695 ;;		Unchanged: 0/0
 26696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26698 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26700 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26701 ;;Total ram usage:       52 bytes
 26702 ;; Hardware stack levels used:    1
 26703 ;; Hardware stack levels required when called:   14
 26704 ;; This function calls:
 26705 ;;		_OsTmr_GetTimerStatus
 26706 ;;		_OsTmr_StartTimer
 26707 ;;		_ReceiveEvt
 26708 ;;		_StringCopy
 26709 ;;		_Uart_WriteStringLen
 26710 ;; This function is called by:
 26711 ;;		_Mdm_MainTask
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text128
 26716  0019F2                     __ptext128:
 26717                           	opt stack 0
 26718  0019F2                     _SendSmsSm:
 26719                           	opt stack 13
 26720                           
 26721                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26722                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26723                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26724                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26725                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26726                           
 26727                           ;incstack = 0
 26728  0019F2  0E03               	movlw	3
 26729  0019F4  0100               	movlb	0	; () banked
 26730  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26731  0019F8  A4D8               	btfss	status,2,c
 26732  0019FA  0012               	return	
 26733  0019FC  D0C1               	goto	l1091
 26734  0019FE                     
 26735                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26736                           
 26737                           ; BSR set to: 0
 26738  0019FE  0EDF               	movlw	low _SendSmsEvent
 26739  001A00  0100               	movlb	0	; () banked
 26740  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26741  001A04  0E00               	movlw	high _SendSmsEvent
 26742  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26743  001A08  ECF6  F032         	call	_ReceiveEvt	;wreg free
 26744  001A0C  0900               	iorlw	0
 26745  001A0E  B4D8               	btfsc	status,2,c
 26746  001A10  0012               	return	
 26747                           
 26748                           ;mdm_gsm_gprs.c: 671: {
 26749                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26750  001A12  0E01               	movlw	1
 26751  001A14  0101               	movlb	1	; () banked
 26752  001A16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26753                           
 26754                           ; BSR set to: 1
 26755                           ;mdm_gsm_gprs.c: 674: }
 26756                           ;mdm_gsm_gprs.c: 675: break;
 26757  001A18  0012               	return	
 26758  001A1A                     
 26759                           ; BSR set to: 1
 26760                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26761                           
 26762                           ; BSR set to: 1
 26763  001A1A  0ECE               	movlw	low STR_5
 26764  001A1C  0100               	movlb	0	; () banked
 26765  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26766  001A20  0EFF               	movlw	high STR_5
 26767  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26768  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26769  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26770  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26771  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26772  001A2C  0E00               	movlw	0
 26773  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26774  001A30  0E09               	movlw	9
 26775  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26776  001A34  ECE9  F02B         	call	_StringCopy	;wreg free
 26777                           
 26778                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26779  001A38  0EA7               	movlw	low _PhoneNumber
 26780  001A3A  0100               	movlb	0	; () banked
 26781  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26782  001A3E  0E04               	movlw	high _PhoneNumber
 26783  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26784  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26785  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26786  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26787  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26788  001A4A  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26789  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26790  001A50  ECE9  F02B         	call	_StringCopy	;wreg free
 26791                           
 26792                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26793  001A54  0100               	movlb	0	; () banked
 26794  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26795  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26796  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26797  001A5C  0E09               	movlw	9
 26798  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26799  001A60  0E00               	movlw	0
 26800  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26801  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26802  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26803  001A68  6ED9               	movwf	fsr2l,c
 26804  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26805  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26806  001A6E  6EDA               	movwf	fsr2h,c
 26807  001A70  0E22               	movlw	34
 26808  001A72  6EDF               	movwf	indf2,c
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26812  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26813  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26814  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26815  001A7A  0E0A               	movlw	10
 26816  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26817  001A7E  0E00               	movlw	0
 26818  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26819  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26820  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26821  001A86  6ED9               	movwf	fsr2l,c
 26822  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26823  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26824  001A8C  6EDA               	movwf	fsr2h,c
 26825  001A8E  0E0D               	movlw	13
 26826  001A90  6EDF               	movwf	indf2,c
 26827                           
 26828                           ; BSR set to: 0
 26829                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26830  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26831  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26832  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26833  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26834  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26835  001A9C  0F0B               	addlw	11
 26836  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26837  001AA0  0E01               	movlw	1
 26838  001AA2  ECEF  F030         	call	_Uart_WriteStringLen
 26839                           
 26840                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26841  001AA6  0EEA               	movlw	low SendSmsSm@SwTimer
 26842  001AA8  0100               	movlb	0	; () banked
 26843  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26844  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26845  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26846  001AB0  0EC4               	movlw	196
 26847  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26848  001AB4  0E09               	movlw	9
 26849  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26850  001AB8  0E00               	movlw	0
 26851  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26852  001ABC  0E00               	movlw	0
 26853  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26854  001AC0  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 26855                           
 26856                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26857  001AC4  0E05               	movlw	5
 26858  001AC6  0101               	movlb	1	; () banked
 26859  001AC8  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26860                           
 26861                           ; BSR set to: 1
 26862                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26863  001ACA  0E02               	movlw	2
 26864  001ACC  6FED               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26865                           
 26866                           ;mdm_gsm_gprs.c: 691: break;
 26867  001ACE  0012               	return	
 26868  001AD0                     
 26869                           ; BSR set to: 1
 26870                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26871                           
 26872                           ; BSR set to: 1
 26873  001AD0  0E0A               	movlw	10
 26874  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26875                           
 26876                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26877  001AD4  0E0D               	movlw	13
 26878  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26879                           
 26880                           ; BSR set to: 1
 26881                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 26882  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 26883  001ADA  0100               	movlb	0	; () banked
 26884  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26885  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 26886  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26887  001AE2  0E02               	movlw	2
 26888  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26889  001AE6  0E01               	movlw	1
 26890  001AE8  ECEF  F030         	call	_Uart_WriteStringLen
 26891                           
 26892                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 26893  001AEC  0E03               	movlw	3
 26894  001AEE  0101               	movlb	1	; () banked
 26895  001AF0  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26896                           
 26897                           ;mdm_gsm_gprs.c: 701: break;
 26898  001AF2  0012               	return	
 26899  001AF4                     
 26900                           ; BSR set to: 1
 26901                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 26902                           
 26903                           ; BSR set to: 1
 26904  001AF4  0E3C               	movlw	low _NewStringReceived
 26905  001AF6  0100               	movlb	0	; () banked
 26906  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26907  001AFA  0E00               	movlw	high _NewStringReceived
 26908  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26909  001AFE  ECF6  F032         	call	_ReceiveEvt	;wreg free
 26910  001B02  0900               	iorlw	0
 26911  001B04  B4D8               	btfsc	status,2,c
 26912  001B06  0012               	return	
 26913                           
 26914                           ;mdm_gsm_gprs.c: 706: {
 26915                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 26916  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 26917  001B0C  0A3E               	xorlw	62
 26918  001B0E  A4D8               	btfss	status,2,c
 26919  001B10  0012               	return	
 26920                           
 26921                           ;mdm_gsm_gprs.c: 709: {
 26922                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 26923  001B12  0E04               	movlw	4
 26924  001B14  0101               	movlb	1	; () banked
 26925  001B16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26926                           
 26927                           ; BSR set to: 1
 26928                           ;mdm_gsm_gprs.c: 712: }
 26929                           ;mdm_gsm_gprs.c: 713: }
 26930                           ;mdm_gsm_gprs.c: 714: break;
 26931                           
 26932                           ; BSR set to: 1
 26933  001B18  0012               	return	
 26934  001B1A                     
 26935                           ; BSR set to: 1
 26936                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 26937                           
 26938                           ; BSR set to: 1
 26939  001B1A  0E72               	movlw	low _MessageText
 26940  001B1C  0100               	movlb	0	; () banked
 26941  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26942  001B20  0E05               	movlw	high _MessageText
 26943  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26944  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 26945  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26946  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 26947  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26948  001B2C  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 26949  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26950  001B32  ECE9  F02B         	call	_StringCopy	;wreg free
 26951                           
 26952                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 26953  001B36  0100               	movlb	0	; () banked
 26954  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 26955  001B3A  0D01               	mullw	1
 26956  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 26957  001B3E  24F3               	addwf	prodl,w,c
 26958  001B40  6ED9               	movwf	fsr2l,c
 26959  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 26960  001B44  20F4               	addwfc	prodh,w,c
 26961  001B46  6EDA               	movwf	fsr2h,c
 26962  001B48  0E1A               	movlw	26
 26963  001B4A  6EDF               	movwf	indf2,c
 26964                           
 26965                           ; BSR set to: 0
 26966                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 26967  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 26968  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26969  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 26970  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26971  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 26972  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26973  001B58  0E01               	movlw	1
 26974  001B5A  ECEF  F030         	call	_Uart_WriteStringLen
 26975                           
 26976                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 26977  001B5E  0E00               	movlw	0
 26978  001B60  0101               	movlb	1	; () banked
 26979  001B62  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26980                           
 26981                           ;mdm_gsm_gprs.c: 725: break;
 26982  001B64  0012               	return	
 26983  001B66                     
 26984                           ; BSR set to: 1
 26985                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 26986                           
 26987                           ; BSR set to: 1
 26988  001B66  0EEA               	movlw	low SendSmsSm@SwTimer
 26989  001B68  0100               	movlb	0	; () banked
 26990  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26991  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 26992  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26993  001B70  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 26994  001B74  06E8               	decf	wreg,f,c
 26995  001B76  A4D8               	btfss	status,2,c
 26996  001B78  0012               	return	
 26997                           
 26998                           ;mdm_gsm_gprs.c: 730: {
 26999                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27000  001B7A  C1ED  F1EE         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27001                           
 27002                           ;mdm_gsm_gprs.c: 738: }
 27003                           
 27004                           ;mdm_gsm_gprs.c: 737: break;
 27005                           
 27006                           ;mdm_gsm_gprs.c: 736: default:
 27007                           
 27008                           ;mdm_gsm_gprs.c: 733: }
 27009                           ;mdm_gsm_gprs.c: 734: break;
 27010  001B7E  0012               	return	
 27011  001B80                     l1091:
 27012  001B80  0101               	movlb	1	; () banked
 27013  001B82  51EE               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27014                           
 27015                           ; Switch size 1, requested type "space"
 27016                           ; Number of cases is 6, Range of values is 0 to 5
 27017                           ; switch strategies available:
 27018                           ; Name         Instructions Cycles
 27019                           ; simple_byte           19    10 (average)
 27020                           ;	Chosen strategy is simple_byte
 27021  001B84  0A00               	xorlw	0	; case 0
 27022  001B86  B4D8               	btfsc	status,2,c
 27023  001B88  D73A               	goto	l1092
 27024  001B8A  0A01               	xorlw	1	; case 1
 27025  001B8C  B4D8               	btfsc	status,2,c
 27026  001B8E  D745               	goto	l1095
 27027  001B90  0A03               	xorlw	3	; case 2
 27028  001B92  B4D8               	btfsc	status,2,c
 27029  001B94  D79D               	goto	l1096
 27030  001B96  0A01               	xorlw	1	; case 3
 27031  001B98  B4D8               	btfsc	status,2,c
 27032  001B9A  D7AC               	goto	l1097
 27033  001B9C  0A07               	xorlw	7	; case 4
 27034  001B9E  B4D8               	btfsc	status,2,c
 27035  001BA0  D7BC               	goto	l1100
 27036  001BA2  0A01               	xorlw	1	; case 5
 27037  001BA4  A4D8               	btfss	status,2,c
 27038                           
 27039                           ; BSR set to: 1
 27040  001BA6  0012               	return	
 27041  001BA8  D7DE               	goto	l1101
 27042  001BAA                     __end_of_SendSmsSm:
 27043                           	opt stack 0
 27044                           tosu	equ	0xFFF
 27045                           tosh	equ	0xFFE
 27046                           tosl	equ	0xFFD
 27047                           pclath	equ	0xFFA
 27048                           tblptru	equ	0xFF8
 27049                           tblptrh	equ	0xFF7
 27050                           tblptrl	equ	0xFF6
 27051                           tablat	equ	0xFF5
 27052                           prodh	equ	0xFF4
 27053                           prodl	equ	0xFF3
 27054                           intcon	equ	0xFF2
 27055                           intcon2	equ	0xFF1
 27056                           intcon3	equ	0xFF0
 27057                           indf0	equ	0xFEF
 27058                           postinc0	equ	0xFEE
 27059                           plusw0	equ	0xFEB
 27060                           fsr0h	equ	0xFEA
 27061                           fsr0l	equ	0xFE9
 27062                           wreg	equ	0xFE8
 27063                           indf1	equ	0xFE7
 27064                           postinc1	equ	0xFE6
 27065                           postdec1	equ	0xFE5
 27066                           fsr1h	equ	0xFE2
 27067                           fsr1l	equ	0xFE1
 27068                           indf2	equ	0xFDF
 27069                           postinc2	equ	0xFDE
 27070                           postdec2	equ	0xFDD
 27071                           plusw2	equ	0xFDB
 27072                           fsr2h	equ	0xFDA
 27073                           fsr2l	equ	0xFD9
 27074                           status	equ	0xFD8
 27075                           
 27076 ;; *************** function _Uart_WriteStringLen *****************
 27077 ;; Defined at:
 27078 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27079 ;; Parameters:    Size  Location     Type
 27080 ;;  Module          1    wreg     unsigned char 
 27081 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27082 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27083 ;;  Len             1   34[BANK0 ] unsigned char 
 27084 ;; Auto vars:     Size  Location     Type
 27085 ;;  Module          1   36[BANK0 ] unsigned char 
 27086 ;;  Index           1   35[BANK0 ] unsigned char 
 27087 ;; Return value:  Size  Location     Type
 27088 ;;                  1    wreg      void 
 27089 ;; Registers used:
 27090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27091 ;; Tracked objects:
 27092 ;;		On entry : 0/0
 27093 ;;		On exit  : 0/0
 27094 ;;		Unchanged: 0/0
 27095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27099 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27100 ;;Total ram usage:        5 bytes
 27101 ;; Hardware stack levels used:    1
 27102 ;; Hardware stack levels required when called:   12
 27103 ;; This function calls:
 27104 ;;		_UartTxBufferStatus
 27105 ;;		_UartWriteByte
 27106 ;; This function is called by:
 27107 ;;		_SendSmsSm
 27108 ;;		_GsmGprsTerminal
 27109 ;; This function uses a non-reentrant model
 27110 ;;
 27111                           
 27112                           	psect	text129
 27113  0061DE                     __ptext129:
 27114                           	opt stack 0
 27115  0061DE                     _Uart_WriteStringLen:
 27116                           	opt stack 14
 27117                           
 27118                           ;incstack = 0
 27119                           ;Uart_WriteStringLen@Module stored from wreg
 27120  0061DE  0100               	movlb	0	; () banked
 27121  0061E0  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27122                           
 27123                           ;uart_drv.c: 544: UINT8 Index;
 27124                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27125  0061E2  0E00               	movlw	0
 27126  0061E4  0100               	movlb	0	; () banked
 27127  0061E6  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27128  0061E8  D015               	goto	l715
 27129  0061EA                     
 27130                           ; BSR set to: 0
 27131                           ;uart_drv.c: 547: {
 27132                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27133                           
 27134                           ; BSR set to: 0
 27135  0061EA  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27136  0061EE  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27137  0061F2  50DF               	movf	indf2,w,c
 27138  0061F4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27139  0061F6  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27140  0061F8  EC42  F034         	call	_UartWriteByte
 27141                           
 27142                           ;uart_drv.c: 551: StringToWrite++;
 27143  0061FC  0100               	movlb	0	; () banked
 27144  0061FE  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 27145  006200  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 27146  006202                     
 27147                           ; BSR set to: 0
 27148                           
 27149                           ; BSR set to: 0
 27150  006202  0100               	movlb	0	; () banked
 27151  006204  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27152  006206  EC44  F02F         	call	_UartTxBufferStatus
 27153  00620A  06E8               	decf	wreg,f,c
 27154  00620C  B4D8               	btfsc	status,2,c
 27155  00620E  D7F9               	goto	l718
 27156  006210  0100               	movlb	0	; () banked
 27157  006212  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 27158  006214                     l715:
 27159                           
 27160                           ; BSR set to: 0
 27161                           
 27162                           ; BSR set to: 0
 27163  006214  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 27164  006216  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 27165  006218  B0D8               	btfsc	status,0,c
 27166  00621A  0012               	return	
 27167  00621C  D7E6               	goto	l716
 27168  00621E                     __end_of_Uart_WriteStringLen:
 27169                           	opt stack 0
 27170                           tosu	equ	0xFFF
 27171                           tosh	equ	0xFFE
 27172                           tosl	equ	0xFFD
 27173                           pclath	equ	0xFFA
 27174                           tblptru	equ	0xFF8
 27175                           tblptrh	equ	0xFF7
 27176                           tblptrl	equ	0xFF6
 27177                           tablat	equ	0xFF5
 27178                           prodh	equ	0xFF4
 27179                           prodl	equ	0xFF3
 27180                           intcon	equ	0xFF2
 27181                           intcon2	equ	0xFF1
 27182                           intcon3	equ	0xFF0
 27183                           indf0	equ	0xFEF
 27184                           postinc0	equ	0xFEE
 27185                           plusw0	equ	0xFEB
 27186                           fsr0h	equ	0xFEA
 27187                           fsr0l	equ	0xFE9
 27188                           wreg	equ	0xFE8
 27189                           indf1	equ	0xFE7
 27190                           postinc1	equ	0xFE6
 27191                           postdec1	equ	0xFE5
 27192                           fsr1h	equ	0xFE2
 27193                           fsr1l	equ	0xFE1
 27194                           indf2	equ	0xFDF
 27195                           postinc2	equ	0xFDE
 27196                           postdec2	equ	0xFDD
 27197                           plusw2	equ	0xFDB
 27198                           fsr2h	equ	0xFDA
 27199                           fsr2l	equ	0xFD9
 27200                           status	equ	0xFD8
 27201                           
 27202 ;; *************** function _ModemEvtParser *****************
 27203 ;; Defined at:
 27204 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27205 ;; Parameters:    Size  Location     Type
 27206 ;;		None
 27207 ;; Auto vars:     Size  Location     Type
 27208 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 27209 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 27210 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27211 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27212 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27213 ;;  Match           1   71[BANK0 ] unsigned char 
 27214 ;; Return value:  Size  Location     Type
 27215 ;;                  1    wreg      void 
 27216 ;; Registers used:
 27217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27218 ;; Tracked objects:
 27219 ;;		On entry : 0/0
 27220 ;;		On exit  : 0/0
 27221 ;;		Unchanged: 0/0
 27222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27224 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27226 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27227 ;;Total ram usage:       26 bytes
 27228 ;; Hardware stack levels used:    1
 27229 ;; Hardware stack levels required when called:   12
 27230 ;; This function calls:
 27231 ;;		_GenerateEvt
 27232 ;;		_ReceiveEvt
 27233 ;;		_StringCompare
 27234 ;;		_StringCopy
 27235 ;;		_Uart_ClearRxBuffer
 27236 ;; This function is called by:
 27237 ;;		_Mdm_MainTask
 27238 ;; This function uses a non-reentrant model
 27239 ;;
 27240                           
 27241                           	psect	text130
 27242  001D30                     __ptext130:
 27243                           	opt stack 0
 27244  001D30                     _ModemEvtParser:
 27245                           	opt stack 15
 27246                           
 27247                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27248                           
 27249                           ; BSR set to: 0
 27250                           ;incstack = 0
 27251  001D30  C3CE  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27252  001D34  C3CF  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27253  001D38  C3D0  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27254  001D3C  C3D1  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27255                           
 27256                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27257  001D40  EE23  F0C9         	lfsr	2,ModemEvtParser@F9112
 27258  001D44  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27259  001D48  0E04               	movlw	4
 27260  001D4A                     u14921:
 27261  001D4A  CFDB FFE3          	movff	plusw2,plusw1
 27262  001D4E  06E8               	decf	wreg,f,c
 27263  001D50  E2FC               	bc	u14921
 27264                           
 27265                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27266  001D52  EE23  F0C4         	lfsr	2,ModemEvtParser@F9114
 27267  001D56  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27268  001D5A  0E04               	movlw	4
 27269  001D5C                     u14931:
 27270  001D5C  CFDB FFE3          	movff	plusw2,plusw1
 27271  001D60  06E8               	decf	wreg,f,c
 27272  001D62  E2FC               	bc	u14931
 27273                           
 27274                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27275  001D64  EE24  F0ED         	lfsr	2,ModemEvtParser@F9116
 27276  001D68  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27277  001D6C  0E09               	movlw	9
 27278  001D6E                     u14941:
 27279  001D6E  CFDB FFE3          	movff	plusw2,plusw1
 27280  001D72  06E8               	decf	wreg,f,c
 27281  001D74  E2FC               	bc	u14941
 27282                           
 27283                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27284  001D76  0E00               	movlw	0
 27285  001D78  0100               	movlb	0	; () banked
 27286  001D7A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27290  001D7C  0E00               	movlw	0
 27291  001D7E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27292                           
 27293                           ; BSR set to: 0
 27294                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27295  001D80  0E3B               	movlw	low _NewMdmEvtParserRequest
 27296  001D82  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27297  001D84  0E00               	movlw	high _NewMdmEvtParserRequest
 27298  001D86  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27299  001D88  ECF6  F032         	call	_ReceiveEvt	;wreg free
 27300  001D8C  0900               	iorlw	0
 27301  001D8E  B4D8               	btfsc	status,2,c
 27302  001D90  0012               	return	
 27303                           
 27304                           ;mdm_gsm_gprs.c: 510: {
 27305                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27306  001D92  0E00               	movlw	0
 27307  001D94  0100               	movlb	0	; () banked
 27308  001D96  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27309  001D98                     l15483:
 27310                           
 27311                           ; BSR set to: 0
 27312  001D98  0E03               	movlw	3
 27313  001D9A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27314  001D9C  D074               	goto	l1052
 27315  001D9E  D083               	goto	u15010
 27316  001DA0                     
 27317                           ; BSR set to: 0
 27318                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27319                           
 27320                           ; BSR set to: 0
 27321  001DA0  0EA3               	movlw	low ModemEvtParser@RingString
 27322  001DA2  6F7D               	movwf	StringCompare@String1& (0+255),b
 27323  001DA4  0E00               	movlw	high ModemEvtParser@RingString
 27324  001DA6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27325  001DA8  0E58               	movlw	low _RxBuffer
 27326  001DAA  6F7F               	movwf	StringCompare@String2& (0+255),b
 27327  001DAC  0E0C               	movlw	high _RxBuffer
 27328  001DAE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27329  001DB0  0E00               	movlw	0
 27330  001DB2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27331  001DB4  0E04               	movlw	4
 27332  001DB6  6F81               	movwf	StringCompare@Len& (0+255),b
 27333  001DB8  EC7C  F02E         	call	_StringCompare	;wreg free
 27334  001DBC  0900               	iorlw	0
 27335  001DBE  B4D8               	btfsc	status,2,c
 27336  001DC0  D06F               	goto	l1055
 27337                           
 27338                           ;mdm_gsm_gprs.c: 518: {
 27339                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27340  001DC2  0EDE               	movlw	low _RingEvent
 27341  001DC4  0100               	movlb	0	; () banked
 27342  001DC6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27343  001DC8  0E00               	movlw	high _RingEvent
 27344  001DCA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27345  001DCC  ECE7  F034         	call	_GenerateEvt	;wreg free
 27346  001DD0  D040               	goto	l15505
 27347  001DD2                     
 27348                           ; BSR set to: 0
 27349                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27350                           
 27351                           ; BSR set to: 0
 27352  001DD2  0E99               	movlw	low ModemEvtParser@ClipString
 27353  001DD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27354  001DD6  0E00               	movlw	high ModemEvtParser@ClipString
 27355  001DD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27356  001DDA  0E58               	movlw	low _RxBuffer
 27357  001DDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27358  001DDE  0E0C               	movlw	high _RxBuffer
 27359  001DE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27360  001DE2  0E00               	movlw	0
 27361  001DE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27362  001DE6  0E05               	movlw	5
 27363  001DE8  6F81               	movwf	StringCompare@Len& (0+255),b
 27364  001DEA  EC7C  F02E         	call	_StringCompare	;wreg free
 27365  001DEE  0900               	iorlw	0
 27366  001DF0  B4D8               	btfsc	status,2,c
 27367  001DF2  D056               	goto	l1055
 27368                           
 27369                           ;mdm_gsm_gprs.c: 529: {
 27370                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27371  001DF4  0E60               	movlw	low (_RxBuffer+8)
 27372  001DF6  0100               	movlb	0	; () banked
 27373  001DF8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27374  001DFA  0E0C               	movlw	high (_RxBuffer+8)
 27375  001DFC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27376  001DFE  0E3E               	movlw	low _callerNumber
 27377  001E00  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27378  001E02  0E03               	movlw	high _callerNumber
 27379  001E04  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27380  001E06  0E00               	movlw	0
 27381  001E08  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27382  001E0A  0E0D               	movlw	13
 27383  001E0C  6F89               	movwf	StringCopy@Len& (0+255),b
 27384  001E0E  ECE9  F02B         	call	_StringCopy	;wreg free
 27385                           
 27386                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27387  001E12  0EDD               	movlw	low _ClipEvent
 27388  001E14  0100               	movlb	0	; () banked
 27389  001E16  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27390  001E18  0E00               	movlw	high _ClipEvent
 27391  001E1A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27392  001E1C  ECE7  F034         	call	_GenerateEvt	;wreg free
 27393  001E20  D018               	goto	l15505
 27394  001E22                     
 27395                           ; BSR set to: 0
 27396                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27397                           
 27398                           ; BSR set to: 0
 27399  001E22  0E9E               	movlw	low ModemEvtParser@SmsString
 27400  001E24  6F7D               	movwf	StringCompare@String1& (0+255),b
 27401  001E26  0E00               	movlw	high ModemEvtParser@SmsString
 27402  001E28  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27403  001E2A  0E58               	movlw	low _RxBuffer
 27404  001E2C  6F7F               	movwf	StringCompare@String2& (0+255),b
 27405  001E2E  0E0C               	movlw	high _RxBuffer
 27406  001E30  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27407  001E32  0E00               	movlw	0
 27408  001E34  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27409  001E36  0E05               	movlw	5
 27410  001E38  6F81               	movwf	StringCompare@Len& (0+255),b
 27411  001E3A  EC7C  F02E         	call	_StringCompare	;wreg free
 27412  001E3E  0900               	iorlw	0
 27413  001E40  B4D8               	btfsc	status,2,c
 27414  001E42  D02E               	goto	l1055
 27415                           
 27416                           ;mdm_gsm_gprs.c: 541: {
 27417                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27418  001E44  0EDC               	movlw	low _SmsEvent
 27419  001E46  0100               	movlb	0	; () banked
 27420  001E48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27421  001E4A  0E00               	movlw	high _SmsEvent
 27422  001E4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27423  001E4E  ECE7  F034         	call	_GenerateEvt	;wreg free
 27424  001E52                     l15505:
 27425                           
 27426                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27427  001E52  0E01               	movlw	1
 27428  001E54  0100               	movlb	0	; () banked
 27429  001E56  D015               	goto	L62
 27430  001E58                     
 27431                           ; BSR set to: 0
 27432                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27433                           
 27434                           ; BSR set to: 0
 27435  001E58  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27436  001E5A  6F7D               	movwf	StringCompare@String1& (0+255),b
 27437  001E5C  0E00               	movlw	high ModemEvtParser@CallReadyString
 27438  001E5E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27439  001E60  0E58               	movlw	low _RxBuffer
 27440  001E62  6F7F               	movwf	StringCompare@String2& (0+255),b
 27441  001E64  0E0C               	movlw	high _RxBuffer
 27442  001E66  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27443  001E68  0E00               	movlw	0
 27444  001E6A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27445  001E6C  0E0A               	movlw	10
 27446  001E6E  6F81               	movwf	StringCompare@Len& (0+255),b
 27447  001E70  EC7C  F02E         	call	_StringCompare	;wreg free
 27448  001E74  0900               	iorlw	0
 27449  001E76  B4D8               	btfsc	status,2,c
 27450  001E78  D013               	goto	l1055
 27451                           
 27452                           ;mdm_gsm_gprs.c: 552: {
 27453                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27454  001E7A  0E02               	movlw	2
 27455  001E7C  0100               	movlb	0	; () banked
 27456  001E7E  6FD1               	movwf	_MdmStatus& (0+255),b
 27457                           
 27458                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27459  001E80  0E01               	movlw	1
 27460  001E82                     L62:
 27461  001E82  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27462                           
 27463                           ; BSR set to: 0
 27464                           ;mdm_gsm_gprs.c: 562: }
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;mdm_gsm_gprs.c: 561: break;
 27468                           
 27469                           ;mdm_gsm_gprs.c: 560: default:
 27470                           
 27471                           ; BSR set to: 0
 27472                           ;mdm_gsm_gprs.c: 557: }
 27473                           ;mdm_gsm_gprs.c: 558: break;
 27474  001E84  D00D               	goto	l1055
 27475  001E86                     l1052:
 27476                           
 27477                           ; BSR set to: 0
 27478                           
 27479                           ; BSR set to: 0
 27480  001E86  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27481                           
 27482                           ; Switch size 1, requested type "space"
 27483                           ; Number of cases is 4, Range of values is 0 to 3
 27484                           ; switch strategies available:
 27485                           ; Name         Instructions Cycles
 27486                           ; simple_byte           13     7 (average)
 27487                           ;	Chosen strategy is simple_byte
 27488  001E88  0A00               	xorlw	0	; case 0
 27489  001E8A  B4D8               	btfsc	status,2,c
 27490  001E8C  D789               	goto	l1053
 27491  001E8E  0A01               	xorlw	1	; case 1
 27492  001E90  B4D8               	btfsc	status,2,c
 27493  001E92  D7C7               	goto	l1058
 27494  001E94  0A03               	xorlw	3	; case 2
 27495  001E96  B4D8               	btfsc	status,2,c
 27496  001E98  D7DF               	goto	l1060
 27497  001E9A  0A01               	xorlw	1	; case 3
 27498  001E9C  B4D8               	btfsc	status,2,c
 27499  001E9E  D799               	goto	l1056
 27500  001EA0                     l1055:
 27501                           
 27502                           ; BSR set to: 0
 27503  001EA0  0100               	movlb	0	; () banked
 27504  001EA2  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27505  001EA4  D779               	goto	l15483
 27506  001EA6                     u15010:
 27507                           
 27508                           ; BSR set to: 0
 27509                           ;mdm_gsm_gprs.c: 563: }
 27510                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27511                           
 27512                           ; BSR set to: 0
 27513  001EA6  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27514  001EA8  A4D8               	btfss	status,2,c
 27515  001EAA  0012               	return	
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;mdm_gsm_gprs.c: 567: {
 27519                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27520  001EAC  EC33  F032         	call	_Uart_ClearRxBuffer	;wreg free
 27521  001EB0  0012               	return	
 27522  001EB2                     __end_of_ModemEvtParser:
 27523                           	opt stack 0
 27524                           tosu	equ	0xFFF
 27525                           tosh	equ	0xFFE
 27526                           tosl	equ	0xFFD
 27527                           pclath	equ	0xFFA
 27528                           tblptru	equ	0xFF8
 27529                           tblptrh	equ	0xFF7
 27530                           tblptrl	equ	0xFF6
 27531                           tablat	equ	0xFF5
 27532                           prodh	equ	0xFF4
 27533                           prodl	equ	0xFF3
 27534                           intcon	equ	0xFF2
 27535                           intcon2	equ	0xFF1
 27536                           intcon3	equ	0xFF0
 27537                           indf0	equ	0xFEF
 27538                           postinc0	equ	0xFEE
 27539                           plusw0	equ	0xFEB
 27540                           fsr0h	equ	0xFEA
 27541                           fsr0l	equ	0xFE9
 27542                           wreg	equ	0xFE8
 27543                           indf1	equ	0xFE7
 27544                           postinc1	equ	0xFE6
 27545                           postdec1	equ	0xFE5
 27546                           plusw1	equ	0xFE3
 27547                           fsr1h	equ	0xFE2
 27548                           fsr1l	equ	0xFE1
 27549                           indf2	equ	0xFDF
 27550                           postinc2	equ	0xFDE
 27551                           postdec2	equ	0xFDD
 27552                           plusw2	equ	0xFDB
 27553                           fsr2h	equ	0xFDA
 27554                           fsr2l	equ	0xFD9
 27555                           status	equ	0xFD8
 27556                           
 27557 ;; *************** function _Uart_ClearRxBuffer *****************
 27558 ;; Defined at:
 27559 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27560 ;; Parameters:    Size  Location     Type
 27561 ;;		None
 27562 ;; Auto vars:     Size  Location     Type
 27563 ;;  Index           2   29[BANK0 ] unsigned short 
 27564 ;; Return value:  Size  Location     Type
 27565 ;;                  1    wreg      void 
 27566 ;; Registers used:
 27567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27568 ;; Tracked objects:
 27569 ;;		On entry : 0/0
 27570 ;;		On exit  : 0/0
 27571 ;;		Unchanged: 0/0
 27572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27577 ;;Total ram usage:        2 bytes
 27578 ;; Hardware stack levels used:    1
 27579 ;; Hardware stack levels required when called:   11
 27580 ;; This function calls:
 27581 ;;		Nothing
 27582 ;; This function is called by:
 27583 ;;		_ModemEvtParser
 27584 ;; This function uses a non-reentrant model
 27585 ;;
 27586                           
 27587                           	psect	text131
 27588  006466                     __ptext131:
 27589                           	opt stack 0
 27590  006466                     _Uart_ClearRxBuffer:
 27591                           	opt stack 15
 27592                           
 27593                           ;uart_drv.c: 567: UINT16 Index = 0;
 27594                           
 27595                           ;incstack = 0
 27596  006466  0E00               	movlw	0
 27597  006468  0100               	movlb	0	; () banked
 27598  00646A  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27599  00646C  0E00               	movlw	0
 27600  00646E  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27601                           
 27602                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27603  006470  0E00               	movlw	0
 27604  006472  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27605  006474  0E00               	movlw	0
 27606  006476  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27607  006478                     l14589:
 27608                           
 27609                           ; BSR set to: 0
 27610  006478  0E90               	movlw	144
 27611  00647A  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27612  00647C  0E01               	movlw	1
 27613  00647E  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27614  006480  B0D8               	btfsc	status,0,c
 27615  006482  0012               	return	
 27616                           
 27617                           ; BSR set to: 0
 27618                           ;uart_drv.c: 571: {
 27619                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27620                           
 27621                           ; BSR set to: 0
 27622                           
 27623                           ; BSR set to: 0
 27624  006484  0E58               	movlw	low _RxBuffer
 27625  006486  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27626  006488  6ED9               	movwf	fsr2l,c
 27627  00648A  0E0C               	movlw	high _RxBuffer
 27628  00648C  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27629  00648E  6EDA               	movwf	fsr2h,c
 27630  006490  0E00               	movlw	0
 27631  006492  6EDF               	movwf	indf2,c
 27632                           
 27633                           ; BSR set to: 0
 27634  006494  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27635  006496  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27636  006498  D7EF               	goto	l14589
 27637  00649A                     __end_of_Uart_ClearRxBuffer:
 27638                           	opt stack 0
 27639                           tosu	equ	0xFFF
 27640                           tosh	equ	0xFFE
 27641                           tosl	equ	0xFFD
 27642                           pclath	equ	0xFFA
 27643                           tblptru	equ	0xFF8
 27644                           tblptrh	equ	0xFF7
 27645                           tblptrl	equ	0xFF6
 27646                           tablat	equ	0xFF5
 27647                           prodh	equ	0xFF4
 27648                           prodl	equ	0xFF3
 27649                           intcon	equ	0xFF2
 27650                           intcon2	equ	0xFF1
 27651                           intcon3	equ	0xFF0
 27652                           indf0	equ	0xFEF
 27653                           postinc0	equ	0xFEE
 27654                           plusw0	equ	0xFEB
 27655                           fsr0h	equ	0xFEA
 27656                           fsr0l	equ	0xFE9
 27657                           wreg	equ	0xFE8
 27658                           indf1	equ	0xFE7
 27659                           postinc1	equ	0xFE6
 27660                           postdec1	equ	0xFE5
 27661                           plusw1	equ	0xFE3
 27662                           fsr1h	equ	0xFE2
 27663                           fsr1l	equ	0xFE1
 27664                           indf2	equ	0xFDF
 27665                           postinc2	equ	0xFDE
 27666                           postdec2	equ	0xFDD
 27667                           plusw2	equ	0xFDB
 27668                           fsr2h	equ	0xFDA
 27669                           fsr2l	equ	0xFD9
 27670                           status	equ	0xFD8
 27671                           
 27672 ;; *************** function _StringCompare *****************
 27673 ;; Defined at:
 27674 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27675 ;; Parameters:    Size  Location     Type
 27676 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27677 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27678 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27679 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27680 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 27681 ;;		 -> RxBuffer(400), 
 27682 ;;  Len             2   33[BANK0 ] unsigned short 
 27683 ;; Auto vars:     Size  Location     Type
 27684 ;;  Index           2   38[BANK0 ] unsigned short 
 27685 ;;  Result          1   37[BANK0 ] unsigned char 
 27686 ;; Return value:  Size  Location     Type
 27687 ;;                  1    wreg      unsigned char 
 27688 ;; Registers used:
 27689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27690 ;; Tracked objects:
 27691 ;;		On entry : 0/0
 27692 ;;		On exit  : 0/0
 27693 ;;		Unchanged: 0/0
 27694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27695 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27698 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27699 ;;Total ram usage:       11 bytes
 27700 ;; Hardware stack levels used:    1
 27701 ;; Hardware stack levels required when called:   11
 27702 ;; This function calls:
 27703 ;;		Nothing
 27704 ;; This function is called by:
 27705 ;;		_ModemEvtParser
 27706 ;;		_parseCommand
 27707 ;;		_isNumberInMemory
 27708 ;;		_isMasterNumber
 27709 ;; This function uses a non-reentrant model
 27710 ;;
 27711                           
 27712                           	psect	text132
 27713  005CF8                     __ptext132:
 27714                           	opt stack 0
 27715  005CF8                     _StringCompare:
 27716                           	opt stack 14
 27717                           
 27718                           ;sf.c: 77: UINT16 Index = 0;
 27719                           
 27720                           ; BSR set to: 0
 27721                           ;incstack = 0
 27722  005CF8  0E00               	movlw	0
 27723  005CFA  0100               	movlb	0	; () banked
 27724  005CFC  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27725  005CFE  0E00               	movlw	0
 27726  005D00  6F86               	movwf	StringCompare@Index& (0+255),b
 27727                           
 27728                           ;sf.c: 78: UINT8 Result = 1;
 27729  005D02  0E01               	movlw	1
 27730  005D04  6F85               	movwf	StringCompare@Result& (0+255),b
 27731                           
 27732                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27733  005D06  0E00               	movlw	0
 27734  005D08  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27735  005D0A  0E00               	movlw	0
 27736  005D0C  6F86               	movwf	StringCompare@Index& (0+255),b
 27737  005D0E  D015               	goto	l2249
 27738  005D10                     
 27739                           ; BSR set to: 0
 27740                           ;sf.c: 82: {
 27741                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27742                           
 27743                           ; BSR set to: 0
 27744  005D10  5186               	movf	StringCompare@Index& (0+255),w,b
 27745  005D12  257F               	addwf	StringCompare@String2& (0+255),w,b
 27746  005D14  6ED9               	movwf	fsr2l,c
 27747  005D16  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27748  005D18  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27749  005D1A  6EDA               	movwf	fsr2h,c
 27750  005D1C  5186               	movf	StringCompare@Index& (0+255),w,b
 27751  005D1E  257D               	addwf	StringCompare@String1& (0+255),w,b
 27752  005D20  6EE1               	movwf	fsr1l,c
 27753  005D22  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27754  005D24  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27755  005D26  6EE2               	movwf	fsr1h,c
 27756  005D28  50DE               	movf	postinc2,w,c
 27757  005D2A  18E6               	xorwf	postinc1,w,c
 27758  005D2C  B4D8               	btfsc	status,2,c
 27759  005D2E  D003               	goto	l2251
 27760                           
 27761                           ; BSR set to: 0
 27762                           ;sf.c: 84: {
 27763                           ;sf.c: 85: Result = 0;
 27764  005D30  0E00               	movlw	0
 27765  005D32  6F85               	movwf	StringCompare@Result& (0+255),b
 27766                           
 27767                           ;sf.c: 86: break;
 27768  005D34  D008               	goto	u12770
 27769  005D36                     l2251:
 27770                           
 27771                           ; BSR set to: 0
 27772                           
 27773                           ; BSR set to: 0
 27774  005D36  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27775  005D38  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27776  005D3A                     l2249:
 27777                           
 27778                           ; BSR set to: 0
 27779                           
 27780                           ; BSR set to: 0
 27781  005D3A  5181               	movf	StringCompare@Len& (0+255),w,b
 27782  005D3C  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27783  005D3E  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27784  005D40  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27785  005D42  A0D8               	btfss	status,0,c
 27786  005D44  D7E5               	goto	l2250
 27787  005D46                     u12770:
 27788                           
 27789                           ; BSR set to: 0
 27790                           ;sf.c: 87: }
 27791                           ;sf.c: 88: }
 27792                           ;sf.c: 91: return Result;
 27793                           
 27794                           ; BSR set to: 0
 27795  005D46  5185               	movf	StringCompare@Result& (0+255),w,b
 27796  005D48  0012               	return	
 27797  005D4A                     __end_of_StringCompare:
 27798                           	opt stack 0
 27799                           tosu	equ	0xFFF
 27800                           tosh	equ	0xFFE
 27801                           tosl	equ	0xFFD
 27802                           pclath	equ	0xFFA
 27803                           tblptru	equ	0xFF8
 27804                           tblptrh	equ	0xFF7
 27805                           tblptrl	equ	0xFF6
 27806                           tablat	equ	0xFF5
 27807                           prodh	equ	0xFF4
 27808                           prodl	equ	0xFF3
 27809                           intcon	equ	0xFF2
 27810                           intcon2	equ	0xFF1
 27811                           intcon3	equ	0xFF0
 27812                           indf0	equ	0xFEF
 27813                           postinc0	equ	0xFEE
 27814                           plusw0	equ	0xFEB
 27815                           fsr0h	equ	0xFEA
 27816                           fsr0l	equ	0xFE9
 27817                           wreg	equ	0xFE8
 27818                           indf1	equ	0xFE7
 27819                           postinc1	equ	0xFE6
 27820                           postdec1	equ	0xFE5
 27821                           plusw1	equ	0xFE3
 27822                           fsr1h	equ	0xFE2
 27823                           fsr1l	equ	0xFE1
 27824                           indf2	equ	0xFDF
 27825                           postinc2	equ	0xFDE
 27826                           postdec2	equ	0xFDD
 27827                           plusw2	equ	0xFDB
 27828                           fsr2h	equ	0xFDA
 27829                           fsr2l	equ	0xFD9
 27830                           status	equ	0xFD8
 27831                           
 27832 ;; *************** function _GetSmsSm *****************
 27833 ;; Defined at:
 27834 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27835 ;; Parameters:    Size  Location     Type
 27836 ;;		None
 27837 ;; Auto vars:     Size  Location     Type
 27838 ;;		None
 27839 ;; Return value:  Size  Location     Type
 27840 ;;                  1    wreg      void 
 27841 ;; Registers used:
 27842 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27843 ;; Tracked objects:
 27844 ;;		On entry : 0/0
 27845 ;;		On exit  : 0/0
 27846 ;;		Unchanged: 0/0
 27847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27852 ;;Total ram usage:        0 bytes
 27853 ;; Hardware stack levels used:    1
 27854 ;; Hardware stack levels required when called:   13
 27855 ;; This function calls:
 27856 ;;		_ClearBuffer
 27857 ;;		_GenerateEvt
 27858 ;;		_ReceiveEvt
 27859 ;;		_StringCopy
 27860 ;;		_Uart_WriteConstString
 27861 ;; This function is called by:
 27862 ;;		_Mdm_MainTask
 27863 ;; This function uses a non-reentrant model
 27864 ;;
 27865                           
 27866                           	psect	text133
 27867  002AA2                     __ptext133:
 27868                           	opt stack 0
 27869  002AA2                     _GetSmsSm:
 27870                           	opt stack 14
 27871                           
 27872                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27873                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27874                           
 27875                           ; BSR set to: 0
 27876                           ;incstack = 0
 27877  002AA2  0E03               	movlw	3
 27878  002AA4  0100               	movlb	0	; () banked
 27879  002AA6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27880  002AA8  A4D8               	btfss	status,2,c
 27881  002AAA  0012               	return	
 27882  002AAC  D084               	goto	l1070
 27883  002AAE                     
 27884                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 27885                           
 27886                           ; BSR set to: 0
 27887  002AAE  0EDB               	movlw	low _GetSmsText
 27888  002AB0  0100               	movlb	0	; () banked
 27889  002AB2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27890  002AB4  0E00               	movlw	high _GetSmsText
 27891  002AB6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27892  002AB8  ECF6  F032         	call	_ReceiveEvt	;wreg free
 27893  002ABC  0900               	iorlw	0
 27894  002ABE  B4D8               	btfsc	status,2,c
 27895  002AC0  0012               	return	
 27896                           
 27897                           ;mdm_gsm_gprs.c: 596: {
 27898                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 27899  002AC2  0E01               	movlw	1
 27900  002AC4  0101               	movlb	1	; () banked
 27901  002AC6  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27902                           
 27903                           ; BSR set to: 1
 27904                           ;mdm_gsm_gprs.c: 599: }
 27905                           ;mdm_gsm_gprs.c: 600: break;
 27906  002AC8  0012               	return	
 27907  002ACA                     
 27908                           ; BSR set to: 1
 27909                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 27910                           
 27911                           ; BSR set to: 1
 27912  002ACA  0EC2               	movlw	low STR_4
 27913  002ACC  0100               	movlb	0	; () banked
 27914  002ACE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27915  002AD0  0EFF               	movlw	high STR_4
 27916  002AD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27917  002AD4  0E01               	movlw	1
 27918  002AD6  ECAD  F030         	call	_Uart_WriteConstString
 27919                           
 27920                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 27921  002ADA  0E02               	movlw	2
 27922  002ADC  0101               	movlb	1	; () banked
 27923  002ADE  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27924                           
 27925                           ;mdm_gsm_gprs.c: 607: break;
 27926  002AE0  0012               	return	
 27927  002AE2                     
 27928                           ; BSR set to: 1
 27929                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 27930                           
 27931                           ; BSR set to: 1
 27932  002AE2  0E3C               	movlw	low _NewStringReceived
 27933  002AE4  0100               	movlb	0	; () banked
 27934  002AE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27935  002AE8  0E00               	movlw	high _NewStringReceived
 27936  002AEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27937  002AEC  ECF6  F032         	call	_ReceiveEvt	;wreg free
 27938  002AF0  0900               	iorlw	0
 27939  002AF2  B4D8               	btfsc	status,2,c
 27940  002AF4  0012               	return	
 27941                           
 27942                           ;mdm_gsm_gprs.c: 612: {
 27943                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 27944  002AF6  CC58  FFE8         	movff	_RxBuffer,wreg
 27945  002AFA  0A2B               	xorlw	43
 27946  002AFC  A4D8               	btfss	status,2,c
 27947  002AFE  0012               	return	
 27948  002B00  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27949  002B04  0A43               	xorlw	67
 27950  002B06  A4D8               	btfss	status,2,c
 27951  002B08  0012               	return	
 27952  002B0A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27953  002B0E  0A4D               	xorlw	77
 27954  002B10  A4D8               	btfss	status,2,c
 27955  002B12  0012               	return	
 27956                           
 27957                           ;mdm_gsm_gprs.c: 614: {
 27958                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 27959  002B14  0E00               	movlw	low _Mdm_SmsRx
 27960  002B16  0100               	movlb	0	; () banked
 27961  002B18  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27962  002B1A  0E07               	movlw	high _Mdm_SmsRx
 27963  002B1C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27964  002B1E  0E00               	movlw	0
 27965  002B20  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27966  002B22  0E50               	movlw	80
 27967  002B24  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27968  002B26  EC18  F032         	call	_ClearBuffer	;wreg free
 27969                           
 27970                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 27971  002B2A  0E58               	movlw	low _RxBuffer
 27972  002B2C  0100               	movlb	0	; () banked
 27973  002B2E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27974  002B30  0E0C               	movlw	high _RxBuffer
 27975  002B32  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27976  002B34  0E00               	movlw	low _Mdm_SmsRx
 27977  002B36  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27978  002B38  0E07               	movlw	high _Mdm_SmsRx
 27979  002B3A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27980  002B3C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27981  002B40  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27982  002B44  ECE9  F02B         	call	_StringCopy	;wreg free
 27983                           
 27984                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 27985  002B48  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 27986                           
 27987                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 27988  002B4C  0E03               	movlw	3
 27989  002B4E  0101               	movlb	1	; () banked
 27990  002B50  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27991                           
 27992                           ; BSR set to: 1
 27993                           ;mdm_gsm_gprs.c: 622: }
 27994                           ;mdm_gsm_gprs.c: 623: }
 27995                           ;mdm_gsm_gprs.c: 624: break;
 27996                           
 27997                           ; BSR set to: 1
 27998  002B52  0012               	return	
 27999  002B54                     
 28000                           ; BSR set to: 1
 28001                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28002                           
 28003                           ; BSR set to: 1
 28004  002B54  0E3C               	movlw	low _NewStringReceived
 28005  002B56  0100               	movlb	0	; () banked
 28006  002B58  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28007  002B5A  0E00               	movlw	high _NewStringReceived
 28008  002B5C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28009  002B5E  ECF6  F032         	call	_ReceiveEvt	;wreg free
 28010  002B62  0900               	iorlw	0
 28011  002B64  B4D8               	btfsc	status,2,c
 28012  002B66  0012               	return	
 28013                           
 28014                           ;mdm_gsm_gprs.c: 629: {
 28015                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28016  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 28017  002B6A  0100               	movlb	0	; () banked
 28018  002B6C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28019  002B6E  0E07               	movlw	high (_Mdm_SmsRx+80)
 28020  002B70  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28021  002B72  0E00               	movlw	0
 28022  002B74  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28023  002B76  0E14               	movlw	20
 28024  002B78  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28025  002B7A  EC18  F032         	call	_ClearBuffer	;wreg free
 28026                           
 28027                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 28028  002B7E  0E58               	movlw	low _RxBuffer
 28029  002B80  0100               	movlb	0	; () banked
 28030  002B82  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28031  002B84  0E0C               	movlw	high _RxBuffer
 28032  002B86  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28033  002B88  0E50               	movlw	low (_Mdm_SmsRx+80)
 28034  002B8A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28035  002B8C  0E07               	movlw	high (_Mdm_SmsRx+80)
 28036  002B8E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28037  002B90  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28038  002B94  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28039  002B98  ECE9  F02B         	call	_StringCopy	;wreg free
 28040                           
 28041                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 28042  002B9C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 28043                           
 28044                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 28045  002BA0  0E00               	movlw	0
 28046  002BA2  0101               	movlb	1	; () banked
 28047  002BA4  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28048                           
 28049                           ; BSR set to: 1
 28050                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 28051  002BA6  0EDA               	movlw	low _SmsTxtReady
 28052  002BA8  0100               	movlb	0	; () banked
 28053  002BAA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28054  002BAC  0E00               	movlw	high _SmsTxtReady
 28055  002BAE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28056  002BB0  ECE7  F034         	call	_GenerateEvt	;wreg free
 28057                           
 28058                           ;mdm_gsm_gprs.c: 644: }
 28059                           
 28060                           ;mdm_gsm_gprs.c: 643: break;
 28061                           
 28062                           ;mdm_gsm_gprs.c: 642: default:
 28063                           
 28064                           ;mdm_gsm_gprs.c: 639: }
 28065                           ;mdm_gsm_gprs.c: 640: break;
 28066  002BB4  0012               	return	
 28067  002BB6                     l1070:
 28068  002BB6  0101               	movlb	1	; () banked
 28069  002BB8  51EF               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28070                           
 28071                           ; Switch size 1, requested type "space"
 28072                           ; Number of cases is 4, Range of values is 0 to 3
 28073                           ; switch strategies available:
 28074                           ; Name         Instructions Cycles
 28075                           ; simple_byte           13     7 (average)
 28076                           ;	Chosen strategy is simple_byte
 28077  002BBA  0A00               	xorlw	0	; case 0
 28078  002BBC  B4D8               	btfsc	status,2,c
 28079  002BBE  D777               	goto	l1071
 28080  002BC0  0A01               	xorlw	1	; case 1
 28081  002BC2  B4D8               	btfsc	status,2,c
 28082  002BC4  D782               	goto	l1074
 28083  002BC6  0A03               	xorlw	3	; case 2
 28084  002BC8  B4D8               	btfsc	status,2,c
 28085  002BCA  D78B               	goto	l1075
 28086  002BCC  0A01               	xorlw	1	; case 3
 28087  002BCE  A4D8               	btfss	status,2,c
 28088                           
 28089                           ; BSR set to: 1
 28090  002BD0  0012               	return	
 28091  002BD2  D7C0               	goto	l1078
 28092  002BD4                     __end_of_GetSmsSm:
 28093                           	opt stack 0
 28094                           tosu	equ	0xFFF
 28095                           tosh	equ	0xFFE
 28096                           tosl	equ	0xFFD
 28097                           pclath	equ	0xFFA
 28098                           tblptru	equ	0xFF8
 28099                           tblptrh	equ	0xFF7
 28100                           tblptrl	equ	0xFF6
 28101                           tablat	equ	0xFF5
 28102                           prodh	equ	0xFF4
 28103                           prodl	equ	0xFF3
 28104                           intcon	equ	0xFF2
 28105                           intcon2	equ	0xFF1
 28106                           intcon3	equ	0xFF0
 28107                           indf0	equ	0xFEF
 28108                           postinc0	equ	0xFEE
 28109                           plusw0	equ	0xFEB
 28110                           fsr0h	equ	0xFEA
 28111                           fsr0l	equ	0xFE9
 28112                           wreg	equ	0xFE8
 28113                           indf1	equ	0xFE7
 28114                           postinc1	equ	0xFE6
 28115                           postdec1	equ	0xFE5
 28116                           plusw1	equ	0xFE3
 28117                           fsr1h	equ	0xFE2
 28118                           fsr1l	equ	0xFE1
 28119                           indf2	equ	0xFDF
 28120                           postinc2	equ	0xFDE
 28121                           postdec2	equ	0xFDD
 28122                           plusw2	equ	0xFDB
 28123                           fsr2h	equ	0xFDA
 28124                           fsr2l	equ	0xFD9
 28125                           status	equ	0xFD8
 28126                           
 28127 ;; *************** function _ConfigureModem *****************
 28128 ;; Defined at:
 28129 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28130 ;; Parameters:    Size  Location     Type
 28131 ;;		None
 28132 ;; Auto vars:     Size  Location     Type
 28133 ;;		None
 28134 ;; Return value:  Size  Location     Type
 28135 ;;                  1    wreg      void 
 28136 ;; Registers used:
 28137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28138 ;; Tracked objects:
 28139 ;;		On entry : 0/0
 28140 ;;		On exit  : 0/0
 28141 ;;		Unchanged: 0/0
 28142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28147 ;;Total ram usage:        0 bytes
 28148 ;; Hardware stack levels used:    1
 28149 ;; Hardware stack levels required when called:   14
 28150 ;; This function calls:
 28151 ;;		_GenerateEvt
 28152 ;;		_UartSetConfigLow
 28153 ;;		_Uart_InitUartModule
 28154 ;;		_Uart_WriteConstString
 28155 ;; This function is called by:
 28156 ;;		_Mdm_MainTask
 28157 ;; This function uses a non-reentrant model
 28158 ;;
 28159                           
 28160                           	psect	text134
 28161  003872                     __ptext134:
 28162                           	opt stack 0
 28163  003872                     _ConfigureModem:
 28164                           	opt stack 13
 28165                           
 28166                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 28167                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 28168                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 28169                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 28170                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 28171                           
 28172                           ;incstack = 0
 28173  003872  D056               	goto	l1027
 28174  003874                     
 28175                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 28176  003874  0E02               	movlw	2
 28177  003876  0100               	movlb	0	; () banked
 28178  003878  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28179  00387A  A4D8               	btfss	status,2,c
 28180  00387C  0012               	return	
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;mdm_gsm_gprs.c: 431: {
 28184                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 28185  00387E  0E01               	movlw	1
 28186  003880  0101               	movlb	1	; () banked
 28187  003882  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28188                           
 28189                           ; BSR set to: 1
 28190                           ;mdm_gsm_gprs.c: 434: }
 28191                           ;mdm_gsm_gprs.c: 435: break;
 28192  003884  0012               	return	
 28193  003886                     
 28194                           ; BSR set to: 1
 28195                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 28196                           
 28197                           ; BSR set to: 1
 28198  003886  0E75               	movlw	low STR_2
 28199  003888  0100               	movlb	0	; () banked
 28200  00388A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28201  00388C  0EFF               	movlw	high STR_2
 28202  00388E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28203  003890  0E01               	movlw	1
 28204  003892  ECAD  F030         	call	_Uart_WriteConstString
 28205                           
 28206                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 28207  003896  ECFE  F02C         	call	_UartSetConfigLow	;wreg free
 28208                           
 28209                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 28210  00389A  0E1C               	movlw	low _UartConfig
 28211  00389C  0100               	movlb	0	; () banked
 28212  00389E  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28213  0038A0  0E03               	movlw	high _UartConfig
 28214  0038A2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28215  0038A4  0E01               	movlw	1
 28216  0038A6  EC5E  F005         	call	_Uart_InitUartModule
 28217                           
 28218                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28219  0038AA  0E03               	movlw	3
 28220  0038AC  0102               	movlb	2	; () banked
 28221  0038AE  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28222  0038B0  0EE8               	movlw	232
 28223  0038B2  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28224                           
 28225                           ; BSR set to: 2
 28226                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28227  0038B4  0E02               	movlw	2
 28228  0038B6  0101               	movlb	1	; () banked
 28229  0038B8  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28230                           
 28231                           ; BSR set to: 1
 28232                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28233  0038BA  0E04               	movlw	4
 28234  0038BC  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28235                           
 28236                           ;mdm_gsm_gprs.c: 449: break;
 28237  0038BE  0012               	return	
 28238  0038C0                     
 28239                           ; BSR set to: 1
 28240                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28241                           
 28242                           ; BSR set to: 1
 28243  0038C0  0EDF               	movlw	low STR_3
 28244  0038C2  0100               	movlb	0	; () banked
 28245  0038C4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28246  0038C6  0EFF               	movlw	high STR_3
 28247  0038C8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28248  0038CA  0E01               	movlw	1
 28249  0038CC  ECAD  F030         	call	_Uart_WriteConstString
 28250                           
 28251                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28252  0038D0  0E03               	movlw	3
 28253  0038D2  0102               	movlb	2	; () banked
 28254  0038D4  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28255  0038D6  0EE8               	movlw	232
 28256  0038D8  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28257                           
 28258                           ; BSR set to: 2
 28259                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28260  0038DA  0E05               	movlw	5
 28261  0038DC  0101               	movlb	1	; () banked
 28262  0038DE  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28263                           
 28264                           ; BSR set to: 1
 28265                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28266  0038E0  0E04               	movlw	4
 28267  0038E2  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28268                           
 28269                           ;mdm_gsm_gprs.c: 459: break;
 28270  0038E4  0012               	return	
 28271  0038E6                     
 28272                           ; BSR set to: 1
 28273                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28274                           
 28275                           ; BSR set to: 1
 28276  0038E6  0102               	movlb	2	; () banked
 28277  0038E8  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28278  0038EA  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28279                           
 28280                           ; BSR set to: 2
 28281                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28282  0038EC  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28283  0038EE  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28284  0038F0  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28285  0038F2  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28286  0038F4  A0D8               	btfss	status,0,c
 28287  0038F6  0012               	return	
 28288                           
 28289                           ; BSR set to: 2
 28290                           ;mdm_gsm_gprs.c: 466: {
 28291                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28292  0038F8  0E00               	movlw	0
 28293  0038FA  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28294  0038FC  0E00               	movlw	0
 28295  0038FE  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28296                           
 28297                           ; BSR set to: 2
 28298                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28299  003900  C1F0  F1F1         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28300                           
 28301                           ; BSR set to: 2
 28302                           ;mdm_gsm_gprs.c: 471: }
 28303                           ;mdm_gsm_gprs.c: 472: break;
 28304  003904  0012               	return	
 28305  003906                     
 28306                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28307                           
 28308                           ; BSR set to: 2
 28309  003906  0E03               	movlw	3
 28310  003908  0100               	movlb	0	; () banked
 28311  00390A  6FD1               	movwf	_MdmStatus& (0+255),b
 28312                           
 28313                           ; BSR set to: 0
 28314                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28315  00390C  0EFD               	movlw	low _MdmStsReady
 28316  00390E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28317  003910  0E01               	movlw	high _MdmStsReady
 28318  003912  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28319  003914  ECE7  F034         	call	_GenerateEvt	;wreg free
 28320                           
 28321                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28322  003918  0E06               	movlw	6
 28323  00391A  0101               	movlb	1	; () banked
 28324  00391C  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28325                           
 28326                           ; BSR set to: 1
 28327                           ;mdm_gsm_gprs.c: 488: }
 28328                           
 28329                           ; BSR set to: 1
 28330                           ;mdm_gsm_gprs.c: 487: break;
 28331                           
 28332                           ;mdm_gsm_gprs.c: 486: default:
 28333                           
 28334                           ; BSR set to: 1
 28335                           ;mdm_gsm_gprs.c: 484: break;
 28336                           
 28337                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28338                           
 28339                           ;mdm_gsm_gprs.c: 481: break;
 28340  00391E  0012               	return	
 28341  003920                     l1027:
 28342                           
 28343                           ; BSR set to: 1
 28344  003920  0101               	movlb	1	; () banked
 28345  003922  51F1               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28346                           
 28347                           ; Switch size 1, requested type "space"
 28348                           ; Number of cases is 6, Range of values is 0 to 6
 28349                           ; switch strategies available:
 28350                           ; Name         Instructions Cycles
 28351                           ; simple_byte           19    10 (average)
 28352                           ;	Chosen strategy is simple_byte
 28353  003924  0A00               	xorlw	0	; case 0
 28354  003926  B4D8               	btfsc	status,2,c
 28355  003928  D7A5               	goto	l1028
 28356  00392A  0A01               	xorlw	1	; case 1
 28357  00392C  B4D8               	btfsc	status,2,c
 28358  00392E  D7AB               	goto	l1031
 28359  003930  0A03               	xorlw	3	; case 2
 28360  003932  B4D8               	btfsc	status,2,c
 28361  003934  D7C5               	goto	l1032
 28362  003936  0A06               	xorlw	6	; case 4
 28363  003938  B4D8               	btfsc	status,2,c
 28364  00393A  D7D5               	goto	l1033
 28365  00393C  0A01               	xorlw	1	; case 5
 28366  00393E  B4D8               	btfsc	status,2,c
 28367  003940  D7E2               	goto	l1035
 28368  003942  0A03               	xorlw	3	; case 6
 28369  003944  0012               	return	
 28370  003946                     __end_of_ConfigureModem:
 28371                           	opt stack 0
 28372                           tosu	equ	0xFFF
 28373                           tosh	equ	0xFFE
 28374                           tosl	equ	0xFFD
 28375                           pclath	equ	0xFFA
 28376                           tblptru	equ	0xFF8
 28377                           tblptrh	equ	0xFF7
 28378                           tblptrl	equ	0xFF6
 28379                           tablat	equ	0xFF5
 28380                           prodh	equ	0xFF4
 28381                           prodl	equ	0xFF3
 28382                           intcon	equ	0xFF2
 28383                           intcon2	equ	0xFF1
 28384                           intcon3	equ	0xFF0
 28385                           indf0	equ	0xFEF
 28386                           postinc0	equ	0xFEE
 28387                           plusw0	equ	0xFEB
 28388                           fsr0h	equ	0xFEA
 28389                           fsr0l	equ	0xFE9
 28390                           wreg	equ	0xFE8
 28391                           indf1	equ	0xFE7
 28392                           postinc1	equ	0xFE6
 28393                           postdec1	equ	0xFE5
 28394                           plusw1	equ	0xFE3
 28395                           fsr1h	equ	0xFE2
 28396                           fsr1l	equ	0xFE1
 28397                           indf2	equ	0xFDF
 28398                           postinc2	equ	0xFDE
 28399                           postdec2	equ	0xFDD
 28400                           plusw2	equ	0xFDB
 28401                           fsr2h	equ	0xFDA
 28402                           fsr2l	equ	0xFD9
 28403                           status	equ	0xFD8
 28404                           
 28405 ;; *************** function _Uart_InitUartModule *****************
 28406 ;; Defined at:
 28407 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28408 ;; Parameters:    Size  Location     Type
 28409 ;;  Module          1    wreg     unsigned char 
 28410 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28411 ;;		 -> UartConfig(21), 
 28412 ;; Auto vars:     Size  Location     Type
 28413 ;;  Module          1   65[BANK0 ] unsigned char 
 28414 ;; Return value:  Size  Location     Type
 28415 ;;                  1    wreg      void 
 28416 ;; Registers used:
 28417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28418 ;; Tracked objects:
 28419 ;;		On entry : 0/0
 28420 ;;		On exit  : 0/0
 28421 ;;		Unchanged: 0/0
 28422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28425 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28427 ;;Total ram usage:        5 bytes
 28428 ;; Hardware stack levels used:    1
 28429 ;; Hardware stack levels required when called:   13
 28430 ;; This function calls:
 28431 ;;		_SetUartBaudRate
 28432 ;; This function is called by:
 28433 ;;		_ConfigureModem
 28434 ;;		_Mdm_MainTask
 28435 ;; This function uses a non-reentrant model
 28436 ;;
 28437                           
 28438                           	psect	text135
 28439  000ABC                     __ptext135:
 28440                           	opt stack 0
 28441  000ABC                     _Uart_InitUartModule:
 28442                           	opt stack 14
 28443                           
 28444                           ;incstack = 0
 28445                           ;Uart_InitUartModule@Module stored from wreg
 28446  000ABC  0100               	movlb	0	; () banked
 28447  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28448                           
 28449                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28450  000AC0  0100               	movlb	0	; () banked
 28451  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28452  000AC4  A4D8               	btfss	status,2,c
 28453  000AC6  D0BE               	goto	l668
 28454                           
 28455                           ; BSR set to: 0
 28456                           ;uart_drv.c: 291: {
 28457                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28458  000AC8  9C94               	bcf	3988,6,c	;volatile
 28459                           
 28460                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28461  000ACA  8E94               	bsf	3988,7,c	;volatile
 28462                           
 28463                           ; BSR set to: 0
 28464                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28465  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28466  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28467  000AD4  0E01               	movlw	1
 28468  000AD6  ECB5  F014         	call	_SetUartBaudRate
 28469                           
 28470                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28471  000ADA  0E00               	movlw	0
 28472  000ADC  6EAD               	movwf	4013,c	;volatile
 28473                           
 28474                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28475  000ADE  0100               	movlb	0	; () banked
 28476  000AE0  EE20 F004          	lfsr	2,4
 28477  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28478  000AE6  26D9               	addwf	fsr2l,f,c
 28479  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28480  000AEA  22DA               	addwfc	fsr2h,f,c
 28481  000AEC  50DF               	movf	indf2,w,c
 28482  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28483  000AF0  0E06               	movlw	6
 28484  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28485  000AF4                     u13625:
 28486  000AF4  90D8               	bcf	status,0,c
 28487  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28488  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28489  000AFA  D7FC               	goto	u13625
 28490  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28491  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28492                           
 28493                           ; BSR set to: 0
 28494                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28495  000B00  EE20 F006          	lfsr	2,6
 28496  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28497  000B06  26D9               	addwf	fsr2l,f,c
 28498  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28499  000B0A  22DA               	addwfc	fsr2h,f,c
 28500  000B0C  50DF               	movf	indf2,w,c
 28501  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28502  000B10  0E05               	movlw	5
 28503  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28504  000B14                     u13635:
 28505  000B14  90D8               	bcf	status,0,c
 28506  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28507  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28508  000B1A  D7FC               	goto	u13635
 28509  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28510  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28511                           
 28512                           ; BSR set to: 0
 28513                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28514  000B20  EE20 F001          	lfsr	2,1
 28515  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28516  000B26  26D9               	addwf	fsr2l,f,c
 28517  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28518  000B2A  22DA               	addwfc	fsr2h,f,c
 28519  000B2C  50DF               	movf	indf2,w,c
 28520  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28521  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28522  000B32  0BF0               	andlw	240
 28523  000B34  12AD               	iorwf	4013,f,c	;volatile
 28524                           
 28525                           ; BSR set to: 0
 28526                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28527  000B36  EE20 F008          	lfsr	2,8
 28528  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28529  000B3C  26D9               	addwf	fsr2l,f,c
 28530  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28531  000B40  22DA               	addwfc	fsr2h,f,c
 28532  000B42  50DF               	movf	indf2,w,c
 28533  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28534  000B46  90D8               	bcf	status,0,c
 28535  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28536  000B4A  90D8               	bcf	status,0,c
 28537  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28538  000B4E  90D8               	bcf	status,0,c
 28539  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28540  000B52  12AD               	iorwf	4013,f,c	;volatile
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28544  000B54  EE20 F003          	lfsr	2,3
 28545  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28546  000B5A  26D9               	addwf	fsr2l,f,c
 28547  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28548  000B5E  22DA               	addwfc	fsr2h,f,c
 28549  000B60  50DF               	movf	indf2,w,c
 28550  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28551  000B64  90D8               	bcf	status,0,c
 28552  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28553  000B68  90D8               	bcf	status,0,c
 28554  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28555  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28556                           
 28557                           ; BSR set to: 0
 28558                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28559  000B6E  0E00               	movlw	0
 28560  000B70  6EAC               	movwf	4012,c	;volatile
 28561                           
 28562                           ; BSR set to: 0
 28563                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28564  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28565  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28566  000B7A  50DF               	movf	indf2,w,c
 28567  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28568  000B7E  0E00               	movlw	0
 28569  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28570  000B82  0E80               	movlw	128
 28571  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28572  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28573  000B88  12AC               	iorwf	4012,f,c	;volatile
 28574                           
 28575                           ; BSR set to: 0
 28576                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28577  000B8A  EE20 F005          	lfsr	2,5
 28578  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28579  000B90  26D9               	addwf	fsr2l,f,c
 28580  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28581  000B94  22DA               	addwfc	fsr2h,f,c
 28582  000B96  50DF               	movf	indf2,w,c
 28583  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28584  000B9A  0E06               	movlw	6
 28585  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28586  000B9E                     u13645:
 28587  000B9E  90D8               	bcf	status,0,c
 28588  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28589  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28590  000BA4  D7FC               	goto	u13645
 28591  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28592  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28593                           
 28594                           ; BSR set to: 0
 28595                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28596  000BAA  EE20 F007          	lfsr	2,7
 28597  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28598  000BB0  26D9               	addwf	fsr2l,f,c
 28599  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28600  000BB4  22DA               	addwfc	fsr2h,f,c
 28601  000BB6  50DF               	movf	indf2,w,c
 28602  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28603  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28604  000BBC  0BF0               	andlw	240
 28605  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28609  000BC0  0E00               	movlw	0
 28610  000BC2  6E7E               	movwf	3966,c	;volatile
 28611                           
 28612                           ; BSR set to: 0
 28613                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28614  000BC4  EE20 F002          	lfsr	2,2
 28615  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28616  000BCA  26D9               	addwf	fsr2l,f,c
 28617  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28618  000BCE  22DA               	addwfc	fsr2h,f,c
 28619  000BD0  50DF               	movf	indf2,w,c
 28620  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28621  000BD4  90D8               	bcf	status,0,c
 28622  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28623  000BD8  90D8               	bcf	status,0,c
 28624  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28625  000BDC  90D8               	bcf	status,0,c
 28626  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28627  000BE0  127E               	iorwf	3966,f,c	;volatile
 28628                           
 28629                           ; BSR set to: 0
 28630                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28631  000BE2  EE20 F00A          	lfsr	2,10
 28632  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28633  000BE8  26D9               	addwf	fsr2l,f,c
 28634  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28635  000BEC  22DA               	addwfc	fsr2h,f,c
 28636  000BEE  50DF               	movf	indf2,w,c
 28637  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28638  000BF2  90D8               	bcf	status,0,c
 28639  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28640  000BF6  127E               	iorwf	3966,f,c	;volatile
 28641                           
 28642                           ; BSR set to: 0
 28643                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28644  000BF8  EE20 F009          	lfsr	2,9
 28645  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28646  000BFE  26D9               	addwf	fsr2l,f,c
 28647  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28648  000C02  22DA               	addwfc	fsr2h,f,c
 28649  000C04  50DF               	movf	indf2,w,c
 28650  000C06  127E               	iorwf	3966,f,c	;volatile
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28654  000C08  EE20 F00B          	lfsr	2,11
 28655  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28656  000C0E  26D9               	addwf	fsr2l,f,c
 28657  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28658  000C12  22DA               	addwfc	fsr2h,f,c
 28659  000C14  50DF               	movf	indf2,w,c
 28660  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28661  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28662  000C1A  509D               	movf	3997,w,c	;volatile
 28663  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28664  000C1E  0BEF               	andlw	-17
 28665  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28666  000C22  6E9D               	movwf	3997,c	;volatile
 28667                           
 28668                           ; BSR set to: 0
 28669                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28670  000C24  EE20 F00C          	lfsr	2,12
 28671  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28672  000C2A  26D9               	addwf	fsr2l,f,c
 28673  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28674  000C2E  22DA               	addwfc	fsr2h,f,c
 28675  000C30  50DF               	movf	indf2,w,c
 28676  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28677  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28678  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28679  000C38  509D               	movf	3997,w,c	;volatile
 28680  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28681  000C3C  0BDF               	andlw	-33
 28682  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28683  000C40  6E9D               	movwf	3997,c	;volatile
 28684                           
 28685                           ;uart_drv.c: 326: }
 28686  000C42  0012               	return	
 28687  000C44                     l668:
 28688                           
 28689                           ; BSR set to: 0
 28690                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28691                           
 28692                           ; BSR set to: 0
 28693  000C44  0E02               	movlw	2
 28694  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28695  000C48  A4D8               	btfss	status,2,c
 28696  000C4A  0012               	return	
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;uart_drv.c: 328: {
 28700                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28701  000C4C  9094               	bcf	3988,0,c	;volatile
 28702                           
 28703                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28704  000C4E  8294               	bsf	3988,1,c	;volatile
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28708  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28709  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28710  000C58  0E02               	movlw	2
 28711  000C5A  ECB5  F014         	call	_SetUartBaudRate
 28712                           
 28713                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28714  000C5E  0E00               	movlw	0
 28715  000C60  6EA8               	movwf	4008,c	;volatile
 28716                           
 28717                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28718  000C62  0100               	movlb	0	; () banked
 28719  000C64  EE20 F004          	lfsr	2,4
 28720  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28721  000C6A  26D9               	addwf	fsr2l,f,c
 28722  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28723  000C6E  22DA               	addwfc	fsr2h,f,c
 28724  000C70  50DF               	movf	indf2,w,c
 28725  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28726  000C74  0E06               	movlw	6
 28727  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28728  000C78                     u13665:
 28729  000C78  90D8               	bcf	status,0,c
 28730  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28731  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28732  000C7E  D7FC               	goto	u13665
 28733  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28734  000C82  12A8               	iorwf	4008,f,c	;volatile
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28738  000C84  EE20 F006          	lfsr	2,6
 28739  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28740  000C8A  26D9               	addwf	fsr2l,f,c
 28741  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28742  000C8E  22DA               	addwfc	fsr2h,f,c
 28743  000C90  50DF               	movf	indf2,w,c
 28744  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28745  000C94  0E05               	movlw	5
 28746  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28747  000C98                     u13675:
 28748  000C98  90D8               	bcf	status,0,c
 28749  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28750  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28751  000C9E  D7FC               	goto	u13675
 28752  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28753  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28754                           
 28755                           ; BSR set to: 0
 28756                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28757  000CA4  EE20 F001          	lfsr	2,1
 28758  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28759  000CAA  26D9               	addwf	fsr2l,f,c
 28760  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28761  000CAE  22DA               	addwfc	fsr2h,f,c
 28762  000CB0  50DF               	movf	indf2,w,c
 28763  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28764  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28765  000CB6  0BF0               	andlw	240
 28766  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28767                           
 28768                           ; BSR set to: 0
 28769                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28770  000CBA  EE20 F008          	lfsr	2,8
 28771  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28772  000CC0  26D9               	addwf	fsr2l,f,c
 28773  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28774  000CC4  22DA               	addwfc	fsr2h,f,c
 28775  000CC6  50DF               	movf	indf2,w,c
 28776  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28777  000CCA  90D8               	bcf	status,0,c
 28778  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28779  000CCE  90D8               	bcf	status,0,c
 28780  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28781  000CD2  90D8               	bcf	status,0,c
 28782  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28783  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28784                           
 28785                           ; BSR set to: 0
 28786                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28787  000CD8  EE20 F003          	lfsr	2,3
 28788  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28789  000CDE  26D9               	addwf	fsr2l,f,c
 28790  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28791  000CE2  22DA               	addwfc	fsr2h,f,c
 28792  000CE4  50DF               	movf	indf2,w,c
 28793  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28794  000CE8  90D8               	bcf	status,0,c
 28795  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28796  000CEC  90D8               	bcf	status,0,c
 28797  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28798  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28799                           
 28800                           ; BSR set to: 0
 28801                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28802  000CF2  0E00               	movlw	0
 28803  000CF4  6E9C               	movwf	3996,c	;volatile
 28804                           
 28805                           ; BSR set to: 0
 28806                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28807  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28808  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28809  000CFE  50DF               	movf	indf2,w,c
 28810  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28811  000D02  0E00               	movlw	0
 28812  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28813  000D06  0E80               	movlw	128
 28814  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28815  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28816  000D0C  129C               	iorwf	3996,f,c	;volatile
 28817                           
 28818                           ; BSR set to: 0
 28819                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28820  000D0E  EE20 F005          	lfsr	2,5
 28821  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28822  000D14  26D9               	addwf	fsr2l,f,c
 28823  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28824  000D18  22DA               	addwfc	fsr2h,f,c
 28825  000D1A  50DF               	movf	indf2,w,c
 28826  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28827  000D1E  0E06               	movlw	6
 28828  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28829  000D22                     u13685:
 28830  000D22  90D8               	bcf	status,0,c
 28831  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28832  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28833  000D28  D7FC               	goto	u13685
 28834  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28835  000D2C  129C               	iorwf	3996,f,c	;volatile
 28836                           
 28837                           ; BSR set to: 0
 28838                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28839  000D2E  EE20 F007          	lfsr	2,7
 28840  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28841  000D34  26D9               	addwf	fsr2l,f,c
 28842  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28843  000D38  22DA               	addwfc	fsr2h,f,c
 28844  000D3A  50DF               	movf	indf2,w,c
 28845  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28846  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28847  000D40  0BF0               	andlw	240
 28848  000D42  129C               	iorwf	3996,f,c	;volatile
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28852  000D44  0E00               	movlw	0
 28853  000D46  6E7C               	movwf	3964,c	;volatile
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28857  000D48  EE20 F002          	lfsr	2,2
 28858  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28859  000D4E  26D9               	addwf	fsr2l,f,c
 28860  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28861  000D52  22DA               	addwfc	fsr2h,f,c
 28862  000D54  50DF               	movf	indf2,w,c
 28863  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28864  000D58  90D8               	bcf	status,0,c
 28865  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28866  000D5C  90D8               	bcf	status,0,c
 28867  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28868  000D60  90D8               	bcf	status,0,c
 28869  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28870  000D64  127C               	iorwf	3964,f,c	;volatile
 28871                           
 28872                           ; BSR set to: 0
 28873                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28874  000D66  EE20 F00A          	lfsr	2,10
 28875  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28876  000D6C  26D9               	addwf	fsr2l,f,c
 28877  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28878  000D70  22DA               	addwfc	fsr2h,f,c
 28879  000D72  50DF               	movf	indf2,w,c
 28880  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28881  000D76  90D8               	bcf	status,0,c
 28882  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28883  000D7A  127C               	iorwf	3964,f,c	;volatile
 28884                           
 28885                           ; BSR set to: 0
 28886                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28887  000D7C  EE20 F009          	lfsr	2,9
 28888  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28889  000D82  26D9               	addwf	fsr2l,f,c
 28890  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28891  000D86  22DA               	addwfc	fsr2h,f,c
 28892  000D88  50DF               	movf	indf2,w,c
 28893  000D8A  127C               	iorwf	3964,f,c	;volatile
 28894                           
 28895                           ; BSR set to: 0
 28896                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 28897  000D8C  EE20 F00B          	lfsr	2,11
 28898  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28899  000D92  26D9               	addwf	fsr2l,f,c
 28900  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28901  000D96  22DA               	addwfc	fsr2h,f,c
 28902  000D98  50DF               	movf	indf2,w,c
 28903  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28904  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28905  000D9E  50A3               	movf	4003,w,c	;volatile
 28906  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28907  000DA2  0BEF               	andlw	-17
 28908  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28909  000DA6  6EA3               	movwf	4003,c	;volatile
 28910                           
 28911                           ; BSR set to: 0
 28912                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 28913  000DA8  EE20 F00C          	lfsr	2,12
 28914  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28915  000DAE  26D9               	addwf	fsr2l,f,c
 28916  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28917  000DB2  22DA               	addwfc	fsr2h,f,c
 28918  000DB4  50DF               	movf	indf2,w,c
 28919  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28920  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28921  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28922  000DBC  50A3               	movf	4003,w,c	;volatile
 28923  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28924  000DC0  0BDF               	andlw	-33
 28925  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28926  000DC4  6EA3               	movwf	4003,c	;volatile
 28927                           
 28928                           ; BSR set to: 0
 28929  000DC6  0012               	return	
 28930  000DC8                     __end_of_Uart_InitUartModule:
 28931                           	opt stack 0
 28932                           tosu	equ	0xFFF
 28933                           tosh	equ	0xFFE
 28934                           tosl	equ	0xFFD
 28935                           pclath	equ	0xFFA
 28936                           tblptru	equ	0xFF8
 28937                           tblptrh	equ	0xFF7
 28938                           tblptrl	equ	0xFF6
 28939                           tablat	equ	0xFF5
 28940                           prodh	equ	0xFF4
 28941                           prodl	equ	0xFF3
 28942                           intcon	equ	0xFF2
 28943                           intcon2	equ	0xFF1
 28944                           intcon3	equ	0xFF0
 28945                           indf0	equ	0xFEF
 28946                           postinc0	equ	0xFEE
 28947                           plusw0	equ	0xFEB
 28948                           fsr0h	equ	0xFEA
 28949                           fsr0l	equ	0xFE9
 28950                           wreg	equ	0xFE8
 28951                           indf1	equ	0xFE7
 28952                           postinc1	equ	0xFE6
 28953                           postdec1	equ	0xFE5
 28954                           plusw1	equ	0xFE3
 28955                           fsr1h	equ	0xFE2
 28956                           fsr1l	equ	0xFE1
 28957                           indf2	equ	0xFDF
 28958                           postinc2	equ	0xFDE
 28959                           postdec2	equ	0xFDD
 28960                           plusw2	equ	0xFDB
 28961                           fsr2h	equ	0xFDA
 28962                           fsr2l	equ	0xFD9
 28963                           status	equ	0xFD8
 28964                           
 28965 ;; *************** function _SetUartBaudRate *****************
 28966 ;; Defined at:
 28967 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28968 ;; Parameters:    Size  Location     Type
 28969 ;;  Module          1    wreg     unsigned char 
 28970 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 28971 ;;		 -> UartConfig(21), 
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;  Module          1   57[BANK0 ] unsigned char 
 28974 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 28975 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 28976 ;; Return value:  Size  Location     Type
 28977 ;;                  1    wreg      void 
 28978 ;; Registers used:
 28979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28980 ;; Tracked objects:
 28981 ;;		On entry : 0/0
 28982 ;;		On exit  : 0/0
 28983 ;;		Unchanged: 0/0
 28984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28988 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28989 ;;Total ram usage:        7 bytes
 28990 ;; Hardware stack levels used:    1
 28991 ;; Hardware stack levels required when called:   12
 28992 ;; This function calls:
 28993 ;;		___lldiv
 28994 ;;		___lmul
 28995 ;; This function is called by:
 28996 ;;		_Uart_InitUartModule
 28997 ;; This function uses a non-reentrant model
 28998 ;;
 28999                           
 29000                           	psect	text136
 29001  00296A                     __ptext136:
 29002                           	opt stack 0
 29003  00296A                     _SetUartBaudRate:
 29004                           	opt stack 14
 29005                           
 29006                           ; BSR set to: 0
 29007                           ;incstack = 0
 29008                           ;SetUartBaudRate@Module stored from wreg
 29009  00296A  0100               	movlb	0	; () banked
 29010  00296C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29011                           
 29012                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29013  00296E  0E00               	movlw	0
 29014  002970  0100               	movlb	0	; () banked
 29015  002972  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29016  002974  0E00               	movlw	0
 29017  002976  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29018                           
 29019                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 29020  002978  0E00               	movlw	0
 29021  00297A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29022                           
 29023                           ; BSR set to: 0
 29024                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 29025  00297C  EE20 F002          	lfsr	2,2
 29026  002980  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29027  002982  26D9               	addwf	fsr2l,f,c
 29028  002984  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29029  002986  22DA               	addwfc	fsr2h,f,c
 29030  002988  50DF               	movf	indf2,w,c
 29031  00298A  A4D8               	btfss	status,2,c
 29032  00298C  D00B               	goto	l625
 29033                           
 29034                           ; BSR set to: 0
 29035  00298E  EE20 F002          	lfsr	2,2
 29036  002992  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29037  002994  26D9               	addwf	fsr2l,f,c
 29038  002996  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29039  002998  22DA               	addwfc	fsr2h,f,c
 29040  00299A  50DF               	movf	indf2,w,c
 29041  00299C  A4D8               	btfss	status,2,c
 29042  00299E  D002               	goto	l625
 29043                           
 29044                           ; BSR set to: 0
 29045                           ;uart_drv.c: 128: {
 29046                           ;uart_drv.c: 129: DivisionFactor = 64;
 29047  0029A0  0E40               	movlw	64
 29048  0029A2  D039               	goto	L64
 29049  0029A4                     l625:
 29050                           
 29051                           ; BSR set to: 0
 29052                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29053                           
 29054                           ; BSR set to: 0
 29055  0029A4  EE20 F002          	lfsr	2,2
 29056  0029A8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29057  0029AA  26D9               	addwf	fsr2l,f,c
 29058  0029AC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29059  0029AE  22DA               	addwfc	fsr2h,f,c
 29060  0029B0  04DE               	decf	postinc2,w,c
 29061  0029B2  A4D8               	btfss	status,2,c
 29062  0029B4  D009               	goto	l627
 29063                           
 29064                           ; BSR set to: 0
 29065  0029B6  EE20 F002          	lfsr	2,2
 29066  0029BA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29067  0029BC  26D9               	addwf	fsr2l,f,c
 29068  0029BE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29069  0029C0  22DA               	addwfc	fsr2h,f,c
 29070  0029C2  50DF               	movf	indf2,w,c
 29071  0029C4  B4D8               	btfsc	status,2,c
 29072  0029C6  D012               	goto	u12710
 29073  0029C8                     l627:
 29074                           
 29075                           ; BSR set to: 0
 29076                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29077                           
 29078                           ; BSR set to: 0
 29079  0029C8  EE20 F002          	lfsr	2,2
 29080  0029CC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29081  0029CE  26D9               	addwf	fsr2l,f,c
 29082  0029D0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29083  0029D2  22DA               	addwfc	fsr2h,f,c
 29084  0029D4  50DF               	movf	indf2,w,c
 29085  0029D6  A4D8               	btfss	status,2,c
 29086  0029D8  D00B               	goto	l629
 29087                           
 29088                           ; BSR set to: 0
 29089  0029DA  EE20 F002          	lfsr	2,2
 29090  0029DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29091  0029E0  26D9               	addwf	fsr2l,f,c
 29092  0029E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29093  0029E4  22DA               	addwfc	fsr2h,f,c
 29094  0029E6  04DE               	decf	postinc2,w,c
 29095  0029E8  A4D8               	btfss	status,2,c
 29096  0029EA  D002               	goto	l629
 29097  0029EC                     u12710:
 29098                           
 29099                           ; BSR set to: 0
 29100                           ;uart_drv.c: 136: {
 29101                           ;uart_drv.c: 137: DivisionFactor = 16;
 29102  0029EC  0E10               	movlw	16
 29103  0029EE  D013               	goto	L64
 29104  0029F0                     l629:
 29105                           
 29106                           ; BSR set to: 0
 29107                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29108                           
 29109                           ; BSR set to: 0
 29110  0029F0  EE20 F002          	lfsr	2,2
 29111  0029F4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29112  0029F6  26D9               	addwf	fsr2l,f,c
 29113  0029F8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29114  0029FA  22DA               	addwfc	fsr2h,f,c
 29115  0029FC  04DE               	decf	postinc2,w,c
 29116  0029FE  A4D8               	btfss	status,2,c
 29117  002A00  D00B               	goto	l631
 29118                           
 29119                           ; BSR set to: 0
 29120  002A02  EE20 F002          	lfsr	2,2
 29121  002A06  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29122  002A08  26D9               	addwf	fsr2l,f,c
 29123  002A0A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29124  002A0C  22DA               	addwfc	fsr2h,f,c
 29125  002A0E  04DE               	decf	postinc2,w,c
 29126  002A10  A4D8               	btfss	status,2,c
 29127  002A12  D002               	goto	l631
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;uart_drv.c: 140: {
 29131                           ;uart_drv.c: 141: DivisionFactor = 4;
 29132  002A14  0E04               	movlw	4
 29133  002A16                     L64:
 29134  002A16  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29135  002A18                     l631:
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;uart_drv.c: 146: }
 29139                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 29140                           
 29141                           ; BSR set to: 0
 29142                           
 29143                           ; BSR set to: 0
 29144                           
 29145                           ; BSR set to: 0
 29146                           
 29147                           ; BSR set to: 0
 29148                           
 29149                           ;uart_drv.c: 143: else
 29150                           ;uart_drv.c: 144: {
 29151                           
 29152                           ; BSR set to: 0
 29153  002A18  EE20 F00D          	lfsr	2,13
 29154  002A1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29155  002A1E  26D9               	addwf	fsr2l,f,c
 29156  002A20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29157  002A22  22DA               	addwfc	fsr2h,f,c
 29158  002A24  CFDE F089          	movff	postinc2,___lldiv@dividend
 29159  002A28  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 29160  002A2C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 29161  002A30  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 29162  002A34  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 29163  002A36  6F7D               	movwf	___lmul@multiplier& (0+255),b
 29164  002A38  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 29165  002A3A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 29166  002A3C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 29167  002A3E  EE20 F011          	lfsr	2,17
 29168  002A42  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29169  002A44  26D9               	addwf	fsr2l,f,c
 29170  002A46  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29171  002A48  22DA               	addwfc	fsr2h,f,c
 29172  002A4A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 29173  002A4E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 29174  002A52  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 29175  002A56  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 29176  002A5A  ECD2  F02C         	call	___lmul	;wreg free
 29177  002A5E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 29178  002A62  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 29179  002A66  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 29180  002A6A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 29181  002A6E  EC16  F029         	call	___lldiv	;wreg free
 29182  002A72  0EFF               	movlw	255
 29183  002A74  0100               	movlb	0	; () banked
 29184  002A76  2589               	addwf	?___lldiv& (0+255),w,b
 29185  002A78  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29186  002A7A  0EFF               	movlw	255
 29187  002A7C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 29188  002A7E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29189                           
 29190                           ; BSR set to: 0
 29191                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 29192  002A80  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 29193  002A82  A4D8               	btfss	status,2,c
 29194  002A84  D005               	goto	l633
 29195                           
 29196                           ; BSR set to: 0
 29197                           ;uart_drv.c: 152: {
 29198                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29199  002A86  0E00               	movlw	0
 29200  002A88  6E7F               	movwf	3967,c	;volatile
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29204  002A8A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 29205                           
 29206                           ;uart_drv.c: 156: }
 29207  002A8E  0012               	return	
 29208  002A90                     l633:
 29209                           
 29210                           ; BSR set to: 0
 29211                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29212                           
 29213                           ; BSR set to: 0
 29214  002A90  0E02               	movlw	2
 29215  002A92  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29216  002A94  A4D8               	btfss	status,2,c
 29217  002A96  0012               	return	
 29218                           
 29219                           ; BSR set to: 0
 29220                           ;uart_drv.c: 158: {
 29221                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29222  002A98  0E00               	movlw	0
 29223  002A9A  6E7D               	movwf	3965,c	;volatile
 29224                           
 29225                           ; BSR set to: 0
 29226                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29227  002A9C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29228                           
 29229                           ; BSR set to: 0
 29230  002AA0  0012               	return	
 29231  002AA2                     __end_of_SetUartBaudRate:
 29232                           	opt stack 0
 29233                           tosu	equ	0xFFF
 29234                           tosh	equ	0xFFE
 29235                           tosl	equ	0xFFD
 29236                           pclath	equ	0xFFA
 29237                           tblptru	equ	0xFF8
 29238                           tblptrh	equ	0xFF7
 29239                           tblptrl	equ	0xFF6
 29240                           tablat	equ	0xFF5
 29241                           prodh	equ	0xFF4
 29242                           prodl	equ	0xFF3
 29243                           intcon	equ	0xFF2
 29244                           intcon2	equ	0xFF1
 29245                           intcon3	equ	0xFF0
 29246                           indf0	equ	0xFEF
 29247                           postinc0	equ	0xFEE
 29248                           plusw0	equ	0xFEB
 29249                           fsr0h	equ	0xFEA
 29250                           fsr0l	equ	0xFE9
 29251                           wreg	equ	0xFE8
 29252                           indf1	equ	0xFE7
 29253                           postinc1	equ	0xFE6
 29254                           postdec1	equ	0xFE5
 29255                           plusw1	equ	0xFE3
 29256                           fsr1h	equ	0xFE2
 29257                           fsr1l	equ	0xFE1
 29258                           indf2	equ	0xFDF
 29259                           postinc2	equ	0xFDE
 29260                           postdec2	equ	0xFDD
 29261                           plusw2	equ	0xFDB
 29262                           fsr2h	equ	0xFDA
 29263                           fsr2l	equ	0xFD9
 29264                           status	equ	0xFD8
 29265                           
 29266 ;; *************** function ___lmul *****************
 29267 ;; Defined at:
 29268 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29271 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;  product         4   37[BANK0 ] unsigned long 
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  4   29[BANK0 ] unsigned long 
 29276 ;; Registers used:
 29277 ;;		wreg, status,2, status,0
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29286 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;Total ram usage:       12 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; Hardware stack levels required when called:   11
 29290 ;; This function calls:
 29291 ;;		Nothing
 29292 ;; This function is called by:
 29293 ;;		_Tmr_TmrBPrSet
 29294 ;;		_SetUartBaudRate
 29295 ;;		_strtol
 29296 ;; This function uses a non-reentrant model
 29297 ;;
 29298                           
 29299                           	psect	text137
 29300  0059A4                     __ptext137:
 29301                           	opt stack 0
 29302  0059A4                     ___lmul:
 29303                           	opt stack 15
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;incstack = 0
 29307  0059A4  0E00               	movlw	0
 29308  0059A6  0100               	movlb	0	; () banked
 29309  0059A8  6F85               	movwf	___lmul@product& (0+255),b
 29310  0059AA  0E00               	movlw	0
 29311  0059AC  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29312  0059AE  0E00               	movlw	0
 29313  0059B0  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29314  0059B2  0E00               	movlw	0
 29315  0059B4  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29316  0059B6                     
 29317                           ; BSR set to: 0
 29318                           
 29319                           ; BSR set to: 0
 29320  0059B6  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29321  0059B8  D008               	goto	l2931
 29322                           
 29323                           ; BSR set to: 0
 29324  0059BA  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29325  0059BC  2785               	addwf	___lmul@product& (0+255),f,b
 29326  0059BE  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29327  0059C0  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29328  0059C2  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29329  0059C4  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29330  0059C6  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29331  0059C8  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29332  0059CA                     l2931:
 29333                           
 29334                           ; BSR set to: 0
 29335                           
 29336                           ; BSR set to: 0
 29337  0059CA  90D8               	bcf	status,0,c
 29338  0059CC  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29339  0059CE  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29340  0059D0  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29341  0059D2  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29342                           
 29343                           ; BSR set to: 0
 29344  0059D4  90D8               	bcf	status,0,c
 29345  0059D6  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29346  0059D8  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29347  0059DA  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29348  0059DC  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29349  0059DE  517D               	movf	___lmul@multiplier& (0+255),w,b
 29350  0059E0  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29351  0059E2  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29352  0059E4  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29353  0059E6  A4D8               	btfss	status,2,c
 29354  0059E8  D7E6               	goto	l2930
 29355                           
 29356                           ; BSR set to: 0
 29357  0059EA  C085  F07D         	movff	___lmul@product,?___lmul
 29358  0059EE  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29359  0059F2  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29360  0059F6  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29361                           
 29362                           ; BSR set to: 0
 29363  0059FA  0012               	return		;funcret
 29364  0059FC                     __end_of___lmul:
 29365                           	opt stack 0
 29366                           tosu	equ	0xFFF
 29367                           tosh	equ	0xFFE
 29368                           tosl	equ	0xFFD
 29369                           pclath	equ	0xFFA
 29370                           tblptru	equ	0xFF8
 29371                           tblptrh	equ	0xFF7
 29372                           tblptrl	equ	0xFF6
 29373                           tablat	equ	0xFF5
 29374                           prodh	equ	0xFF4
 29375                           prodl	equ	0xFF3
 29376                           intcon	equ	0xFF2
 29377                           intcon2	equ	0xFF1
 29378                           intcon3	equ	0xFF0
 29379                           indf0	equ	0xFEF
 29380                           postinc0	equ	0xFEE
 29381                           plusw0	equ	0xFEB
 29382                           fsr0h	equ	0xFEA
 29383                           fsr0l	equ	0xFE9
 29384                           wreg	equ	0xFE8
 29385                           indf1	equ	0xFE7
 29386                           postinc1	equ	0xFE6
 29387                           postdec1	equ	0xFE5
 29388                           plusw1	equ	0xFE3
 29389                           fsr1h	equ	0xFE2
 29390                           fsr1l	equ	0xFE1
 29391                           indf2	equ	0xFDF
 29392                           postinc2	equ	0xFDE
 29393                           postdec2	equ	0xFDD
 29394                           plusw2	equ	0xFDB
 29395                           fsr2h	equ	0xFDA
 29396                           fsr2l	equ	0xFD9
 29397                           status	equ	0xFD8
 29398                           
 29399 ;; *************** function _UartSetConfigLow *****************
 29400 ;; Defined at:
 29401 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29402 ;; Parameters:    Size  Location     Type
 29403 ;;		None
 29404 ;; Auto vars:     Size  Location     Type
 29405 ;;		None
 29406 ;; Return value:  Size  Location     Type
 29407 ;;                  1    wreg      void 
 29408 ;; Registers used:
 29409 ;;		wreg, status,2
 29410 ;; Tracked objects:
 29411 ;;		On entry : 0/0
 29412 ;;		On exit  : 0/0
 29413 ;;		Unchanged: 0/0
 29414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29419 ;;Total ram usage:        0 bytes
 29420 ;; Hardware stack levels used:    1
 29421 ;; Hardware stack levels required when called:   11
 29422 ;; This function calls:
 29423 ;;		Nothing
 29424 ;; This function is called by:
 29425 ;;		_ConfigureModem
 29426 ;; This function uses a non-reentrant model
 29427 ;;
 29428                           
 29429                           	psect	text138
 29430  0059FC                     __ptext138:
 29431                           	opt stack 0
 29432  0059FC                     _UartSetConfigLow:
 29433                           	opt stack 15
 29434                           
 29435                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29436                           
 29437                           ; BSR set to: 0
 29438                           ;incstack = 0
 29439  0059FC  0E01               	movlw	1
 29440  0059FE  0103               	movlb	3	; () banked
 29441  005A00  6F1C               	movwf	_UartConfig& (0+255),b
 29442                           
 29443                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29444  005A02  0E00               	movlw	0
 29445  005A04  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 29446                           
 29447                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29448  005A06  0E00               	movlw	0
 29449  005A08  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 29450                           
 29451                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29452  005A0A  0E00               	movlw	0
 29453  005A0C  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 29454                           
 29455                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29456  005A0E  0E00               	movlw	0
 29457  005A10  6F20               	movwf	(_UartConfig+4)& (0+255),b
 29458                           
 29459                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29460  005A12  0E00               	movlw	0
 29461  005A14  6F21               	movwf	(_UartConfig+5)& (0+255),b
 29462                           
 29463                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29464  005A16  0E01               	movlw	1
 29465  005A18  6F22               	movwf	(_UartConfig+6)& (0+255),b
 29466                           
 29467                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29468  005A1A  0E01               	movlw	1
 29469  005A1C  6F23               	movwf	(_UartConfig+7)& (0+255),b
 29470                           
 29471                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29472  005A1E  0E00               	movlw	0
 29473  005A20  6F24               	movwf	(_UartConfig+8)& (0+255),b
 29474                           
 29475                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29476  005A22  0E00               	movlw	0
 29477  005A24  6F25               	movwf	(_UartConfig+9)& (0+255),b
 29478                           
 29479                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29480  005A26  0E00               	movlw	0
 29481  005A28  6F26               	movwf	(_UartConfig+10)& (0+255),b
 29482                           
 29483                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29484  005A2A  0E00               	movlw	0
 29485  005A2C  6F27               	movwf	(_UartConfig+11)& (0+255),b
 29486                           
 29487                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29488  005A2E  0E01               	movlw	1
 29489  005A30  6F28               	movwf	(_UartConfig+12)& (0+255),b
 29490                           
 29491                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29492  005A32  0E00               	movlw	0
 29493  005A34  6F29               	movwf	(_UartConfig+13)& (0+255),b
 29494  005A36  0E6C               	movlw	108
 29495  005A38  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 29496  005A3A  0EDC               	movlw	220
 29497  005A3C  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 29498  005A3E  0E02               	movlw	2
 29499  005A40  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 29500                           
 29501                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29502  005A42  0E80               	movlw	128
 29503  005A44  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 29504  005A46  0E25               	movlw	37
 29505  005A48  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 29506  005A4A  0E00               	movlw	0
 29507  005A4C  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 29508  005A4E  0E00               	movlw	0
 29509  005A50  6F30               	movwf	(_UartConfig+20)& (0+255),b
 29510                           
 29511                           ; BSR set to: 3
 29512  005A52  0012               	return		;funcret
 29513  005A54                     __end_of_UartSetConfigLow:
 29514                           	opt stack 0
 29515                           tosu	equ	0xFFF
 29516                           tosh	equ	0xFFE
 29517                           tosl	equ	0xFFD
 29518                           pclath	equ	0xFFA
 29519                           tblptru	equ	0xFF8
 29520                           tblptrh	equ	0xFF7
 29521                           tblptrl	equ	0xFF6
 29522                           tablat	equ	0xFF5
 29523                           prodh	equ	0xFF4
 29524                           prodl	equ	0xFF3
 29525                           intcon	equ	0xFF2
 29526                           intcon2	equ	0xFF1
 29527                           intcon3	equ	0xFF0
 29528                           indf0	equ	0xFEF
 29529                           postinc0	equ	0xFEE
 29530                           plusw0	equ	0xFEB
 29531                           fsr0h	equ	0xFEA
 29532                           fsr0l	equ	0xFE9
 29533                           wreg	equ	0xFE8
 29534                           indf1	equ	0xFE7
 29535                           postinc1	equ	0xFE6
 29536                           postdec1	equ	0xFE5
 29537                           plusw1	equ	0xFE3
 29538                           fsr1h	equ	0xFE2
 29539                           fsr1l	equ	0xFE1
 29540                           indf2	equ	0xFDF
 29541                           postinc2	equ	0xFDE
 29542                           postdec2	equ	0xFDD
 29543                           plusw2	equ	0xFDB
 29544                           fsr2h	equ	0xFDA
 29545                           fsr2l	equ	0xFD9
 29546                           status	equ	0xFD8
 29547                           
 29548 ;; *************** function _CheckModem *****************
 29549 ;; Defined at:
 29550 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29551 ;; Parameters:    Size  Location     Type
 29552 ;;		None
 29553 ;; Auto vars:     Size  Location     Type
 29554 ;;		None
 29555 ;; Return value:  Size  Location     Type
 29556 ;;                  1    wreg      void 
 29557 ;; Registers used:
 29558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29559 ;; Tracked objects:
 29560 ;;		On entry : 0/0
 29561 ;;		On exit  : 0/0
 29562 ;;		Unchanged: 0/0
 29563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29568 ;;Total ram usage:        0 bytes
 29569 ;; Hardware stack levels used:    1
 29570 ;; Hardware stack levels required when called:   14
 29571 ;; This function calls:
 29572 ;;		_GenerateEvt
 29573 ;;		_OsTmr_GetTimerStatus
 29574 ;;		_OsTmr_StartTimer
 29575 ;;		_ReceiveEvt
 29576 ;;		_Uart_WriteConstString
 29577 ;; This function is called by:
 29578 ;;		_Mdm_MainTask
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text139
 29583  002020                     __ptext139:
 29584                           	opt stack 0
 29585  002020                     _CheckModem:
 29586                           	opt stack 13
 29587                           
 29588                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29589                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29590                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29591                           
 29592                           ; BSR set to: 3
 29593                           ;incstack = 0
 29594  002020  D09C               	goto	l982
 29595  002022                     
 29596                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29597  002022  0EF5               	movlw	low CheckModem@Timeout
 29598  002024  0100               	movlb	0	; () banked
 29599  002026  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29600  002028  0E03               	movlw	high CheckModem@Timeout
 29601  00202A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29602  00202C  0ED0               	movlw	208
 29603  00202E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29604  002030  0E07               	movlw	7
 29605  002032  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29606  002034  0E00               	movlw	0
 29607  002036  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29608  002038  0E00               	movlw	0
 29609  00203A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29610  00203C  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 29611                           
 29612                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29613  002040  0E01               	movlw	1
 29614  002042  0101               	movlb	1	; () banked
 29615  002044  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29616                           
 29617                           ;mdm_gsm_gprs.c: 295: break;
 29618  002046  0012               	return	
 29619  002048                     
 29620                           ; BSR set to: 1
 29621                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29622                           
 29623                           ; BSR set to: 1
 29624  002048  0EF5               	movlw	low CheckModem@Timeout
 29625  00204A  0100               	movlb	0	; () banked
 29626  00204C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29627  00204E  0E03               	movlw	high CheckModem@Timeout
 29628  002050  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29629  002052  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29630  002056  06E8               	decf	wreg,f,c
 29631  002058  A4D8               	btfss	status,2,c
 29632  00205A  0012               	return	
 29633                           
 29634                           ;mdm_gsm_gprs.c: 300: {
 29635                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29636  00205C  0E02               	movlw	2
 29637  00205E  0101               	movlb	1	; () banked
 29638  002060  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29639                           
 29640                           ; BSR set to: 1
 29641                           ;mdm_gsm_gprs.c: 303: }
 29642                           ;mdm_gsm_gprs.c: 304: break;
 29643  002062  0012               	return	
 29644  002064                     
 29645                           ; BSR set to: 1
 29646                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29647                           
 29648                           ; BSR set to: 1
 29649  002064  0EE6               	movlw	low STR_1
 29650  002066  0100               	movlb	0	; () banked
 29651  002068  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29652  00206A  0EFF               	movlw	high STR_1
 29653  00206C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29654  00206E  0E01               	movlw	1
 29655  002070  ECAD  F030         	call	_Uart_WriteConstString
 29656                           
 29657                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29658  002074  0EF5               	movlw	low CheckModem@Timeout
 29659  002076  0100               	movlb	0	; () banked
 29660  002078  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29661  00207A  0E03               	movlw	high CheckModem@Timeout
 29662  00207C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29663  00207E  0ED0               	movlw	208
 29664  002080  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29665  002082  0E07               	movlw	7
 29666  002084  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29667  002086  0E00               	movlw	0
 29668  002088  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29669  00208A  0E00               	movlw	0
 29670  00208C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29671  00208E  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 29672                           
 29673                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29674  002092  0E03               	movlw	3
 29675  002094  0101               	movlb	1	; () banked
 29676  002096  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29677                           
 29678                           ;mdm_gsm_gprs.c: 313: break;
 29679  002098  0012               	return	
 29680  00209A                     
 29681                           ; BSR set to: 1
 29682                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29683                           
 29684                           ; BSR set to: 1
 29685  00209A  0E3C               	movlw	low _NewStringReceived
 29686  00209C  0100               	movlb	0	; () banked
 29687  00209E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29688  0020A0  0E00               	movlw	high _NewStringReceived
 29689  0020A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29690  0020A4  ECF6  F032         	call	_ReceiveEvt	;wreg free
 29691  0020A8  0900               	iorlw	0
 29692  0020AA  B4D8               	btfsc	status,2,c
 29693  0020AC  D030               	goto	l989
 29694                           
 29695                           ;mdm_gsm_gprs.c: 318: {
 29696                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29697  0020AE  CC58  FFE8         	movff	_RxBuffer,wreg
 29698  0020B2  0A4F               	xorlw	79
 29699  0020B4  A4D8               	btfss	status,2,c
 29700  0020B6  D005               	goto	u14840
 29701  0020B8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29702  0020BC  0A4B               	xorlw	75
 29703  0020BE  B4D8               	btfsc	status,2,c
 29704  0020C0  D00A               	goto	u14860
 29705  0020C2                     u14840:
 29706  0020C2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29707  0020C6  0A4F               	xorlw	79
 29708  0020C8  A4D8               	btfss	status,2,c
 29709  0020CA  0012               	return	
 29710  0020CC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29711  0020D0  0A4B               	xorlw	75
 29712  0020D2  A4D8               	btfss	status,2,c
 29713  0020D4  0012               	return	
 29714  0020D6                     u14860:
 29715                           
 29716                           ;mdm_gsm_gprs.c: 321: {
 29717                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29718  0020D6  0E02               	movlw	2
 29719  0020D8  0100               	movlb	0	; () banked
 29720  0020DA  6FD1               	movwf	_MdmStatus& (0+255),b
 29721                           
 29722                           ; BSR set to: 0
 29723                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29724  0020DC  0EE0               	movlw	low _MdmOnOffPulseRequest
 29725  0020DE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29726  0020E0  0E00               	movlw	high _MdmOnOffPulseRequest
 29727  0020E2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29728  0020E4  ECE7  F034         	call	_GenerateEvt	;wreg free
 29729                           
 29730                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29731  0020E8  0EF5               	movlw	low CheckModem@Timeout
 29732  0020EA  0100               	movlb	0	; () banked
 29733  0020EC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29734  0020EE  0E03               	movlw	high CheckModem@Timeout
 29735  0020F0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29736  0020F2  0EE8               	movlw	232
 29737  0020F4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29738  0020F6  0E03               	movlw	3
 29739  0020F8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29740  0020FA  0E00               	movlw	0
 29741  0020FC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29742  0020FE  0E00               	movlw	0
 29743  002100  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29744  002102  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 29745                           
 29746                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29747  002106  0E04               	movlw	4
 29748  002108  0101               	movlb	1	; () banked
 29749  00210A  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29750                           
 29751                           ; BSR set to: 1
 29752                           ;mdm_gsm_gprs.c: 329: }
 29753                           ;mdm_gsm_gprs.c: 330: }
 29754  00210C  0012               	return	
 29755  00210E                     l989:
 29756                           
 29757                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29758                           
 29759                           ; BSR set to: 1
 29760  00210E  0EF5               	movlw	low CheckModem@Timeout
 29761  002110  0100               	movlb	0	; () banked
 29762  002112  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29763  002114  0E03               	movlw	high CheckModem@Timeout
 29764  002116  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29765  002118  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29766  00211C  06E8               	decf	wreg,f,c
 29767  00211E  A4D8               	btfss	status,2,c
 29768  002120  0012               	return	
 29769                           
 29770                           ;mdm_gsm_gprs.c: 332: {
 29771                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29772  002122  0E00               	movlw	0
 29773  002124  0100               	movlb	0	; () banked
 29774  002126  6FD1               	movwf	_MdmStatus& (0+255),b
 29775                           
 29776                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29777  002128  0E01               	movlw	1
 29778  00212A  6E2B               	movwf	_ComChecCompleted,c
 29779                           
 29780                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29781  00212C  0E05               	movlw	5
 29782  00212E  0101               	movlb	1	; () banked
 29783  002130  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29784                           
 29785                           ; BSR set to: 1
 29786                           ;mdm_gsm_gprs.c: 343: }
 29787                           ;mdm_gsm_gprs.c: 344: break;
 29788                           
 29789                           ; BSR set to: 1
 29790                           
 29791                           ;mdm_gsm_gprs.c: 340: else
 29792                           ;mdm_gsm_gprs.c: 341: {
 29793                           
 29794                           ; BSR set to: 1
 29795                           
 29796                           ;mdm_gsm_gprs.c: 339: }
 29797  002132  0012               	return	
 29798  002134                     
 29799                           ; BSR set to: 1
 29800                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29801                           
 29802                           ; BSR set to: 1
 29803  002134  0EF5               	movlw	low CheckModem@Timeout
 29804  002136  0100               	movlb	0	; () banked
 29805  002138  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29806  00213A  0E03               	movlw	high CheckModem@Timeout
 29807  00213C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29808  00213E  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29809  002142  06E8               	decf	wreg,f,c
 29810  002144  A4D8               	btfss	status,2,c
 29811  002146  0012               	return	
 29812                           
 29813                           ;mdm_gsm_gprs.c: 349: {
 29814                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29815  002148  0E00               	movlw	0
 29816  00214A  0100               	movlb	0	; () banked
 29817  00214C  6FD1               	movwf	_MdmStatus& (0+255),b
 29818                           
 29819                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29820  00214E  0E01               	movlw	1
 29821  002150  6E2B               	movwf	_ComChecCompleted,c
 29822                           
 29823                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29824  002152  0E05               	movlw	5
 29825  002154  0101               	movlb	1	; () banked
 29826  002156  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29827                           
 29828                           ; BSR set to: 1
 29829                           ;mdm_gsm_gprs.c: 365: }
 29830                           
 29831                           ; BSR set to: 1
 29832                           ;mdm_gsm_gprs.c: 364: break;
 29833                           
 29834                           ;mdm_gsm_gprs.c: 363: default:
 29835                           
 29836                           ; BSR set to: 1
 29837                           ;mdm_gsm_gprs.c: 361: break;
 29838                           
 29839                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29840                           
 29841                           ; BSR set to: 1
 29842                           ;mdm_gsm_gprs.c: 356: }
 29843                           ;mdm_gsm_gprs.c: 357: break;
 29844  002158  0012               	return	
 29845  00215A                     l982:
 29846                           
 29847                           ; BSR set to: 1
 29848  00215A  0101               	movlb	1	; () banked
 29849  00215C  51F3               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 29850                           
 29851                           ; Switch size 1, requested type "space"
 29852                           ; Number of cases is 6, Range of values is 0 to 5
 29853                           ; switch strategies available:
 29854                           ; Name         Instructions Cycles
 29855                           ; simple_byte           19    10 (average)
 29856                           ;	Chosen strategy is simple_byte
 29857  00215E  0A00               	xorlw	0	; case 0
 29858  002160  B4D8               	btfsc	status,2,c
 29859  002162  D75F               	goto	l983
 29860  002164  0A01               	xorlw	1	; case 1
 29861  002166  B4D8               	btfsc	status,2,c
 29862  002168  D76F               	goto	l985
 29863  00216A  0A03               	xorlw	3	; case 2
 29864  00216C  B4D8               	btfsc	status,2,c
 29865  00216E  D77A               	goto	l987
 29866  002170  0A01               	xorlw	1	; case 3
 29867  002172  B4D8               	btfsc	status,2,c
 29868  002174  D792               	goto	l988
 29869  002176  0A07               	xorlw	7	; case 4
 29870  002178  B4D8               	btfsc	status,2,c
 29871  00217A  D7DC               	goto	l998
 29872  00217C  0A01               	xorlw	1	; case 5
 29873  00217E  0012               	return	
 29874  002180                     __end_of_CheckModem:
 29875                           	opt stack 0
 29876                           tosu	equ	0xFFF
 29877                           tosh	equ	0xFFE
 29878                           tosl	equ	0xFFD
 29879                           pclath	equ	0xFFA
 29880                           tblptru	equ	0xFF8
 29881                           tblptrh	equ	0xFF7
 29882                           tblptrl	equ	0xFF6
 29883                           tablat	equ	0xFF5
 29884                           prodh	equ	0xFF4
 29885                           prodl	equ	0xFF3
 29886                           intcon	equ	0xFF2
 29887                           intcon2	equ	0xFF1
 29888                           intcon3	equ	0xFF0
 29889                           indf0	equ	0xFEF
 29890                           postinc0	equ	0xFEE
 29891                           plusw0	equ	0xFEB
 29892                           fsr0h	equ	0xFEA
 29893                           fsr0l	equ	0xFE9
 29894                           wreg	equ	0xFE8
 29895                           indf1	equ	0xFE7
 29896                           postinc1	equ	0xFE6
 29897                           postdec1	equ	0xFE5
 29898                           plusw1	equ	0xFE3
 29899                           fsr1h	equ	0xFE2
 29900                           fsr1l	equ	0xFE1
 29901                           indf2	equ	0xFDF
 29902                           postinc2	equ	0xFDE
 29903                           postdec2	equ	0xFDD
 29904                           plusw2	equ	0xFDB
 29905                           fsr2h	equ	0xFDA
 29906                           fsr2l	equ	0xFD9
 29907                           status	equ	0xFD8
 29908                           
 29909 ;; *************** function _MdmCntSm *****************
 29910 ;; Defined at:
 29911 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29912 ;; Parameters:    Size  Location     Type
 29913 ;;		None
 29914 ;; Auto vars:     Size  Location     Type
 29915 ;;		None
 29916 ;; Return value:  Size  Location     Type
 29917 ;;                  1    wreg      void 
 29918 ;; Registers used:
 29919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29920 ;; Tracked objects:
 29921 ;;		On entry : 0/0
 29922 ;;		On exit  : 0/0
 29923 ;;		Unchanged: 0/0
 29924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29929 ;;Total ram usage:        0 bytes
 29930 ;; Hardware stack levels used:    1
 29931 ;; Hardware stack levels required when called:   12
 29932 ;; This function calls:
 29933 ;;		_InitModemInterface
 29934 ;;		_ReceiveEvt
 29935 ;; This function is called by:
 29936 ;;		_Mdm_DrvMainFn
 29937 ;; This function uses a non-reentrant model
 29938 ;;
 29939                           
 29940                           	psect	text140
 29941  00478A                     __ptext140:
 29942                           	opt stack 0
 29943  00478A                     _MdmCntSm:
 29944                           	opt stack 15
 29945                           
 29946                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 29947                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 29948                           ;mdm_drv.c: 204: switch (MdmCntState)
 29949                           
 29950                           ;incstack = 0
 29951  00478A  D045               	goto	l315
 29952  00478C                     
 29953                           ;mdm_drv.c: 208: InitModemInterface();
 29954  00478C  ECA4  F035         	call	_InitModemInterface	;wreg free
 29955                           
 29956                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 29957  004790  0E01               	movlw	1
 29958  004792  6E2E               	movwf	MdmCntSm@MdmCntState,c
 29959                           
 29960                           ;mdm_drv.c: 211: break;
 29961  004794  0012               	return	
 29962  004796                     
 29963                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 29964  004796  0EE0               	movlw	low _MdmOnOffPulseRequest
 29965  004798  0100               	movlb	0	; () banked
 29966  00479A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29967  00479C  0E00               	movlw	high _MdmOnOffPulseRequest
 29968  00479E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29969  0047A0  ECF6  F032         	call	_ReceiveEvt	;wreg free
 29970  0047A4  0900               	iorlw	0
 29971  0047A6  B4D8               	btfsc	status,2,c
 29972  0047A8  D009               	goto	l319
 29973                           
 29974                           ;mdm_drv.c: 216: {
 29975                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 29976  0047AA  0E02               	movlw	2
 29977  0047AC  6E2E               	movwf	MdmCntSm@MdmCntState,c
 29978                           
 29979                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 29980  0047AE  8284               	bsf	3972,1,c	;volatile
 29981                           
 29982                           ;mdm_drv.c: 222: Counter = 0;
 29983  0047B0  0E00               	movlw	0
 29984  0047B2  0102               	movlb	2	; () banked
 29985  0047B4  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29986  0047B6  0E00               	movlw	0
 29987  0047B8  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 29988                           
 29989                           ;mdm_drv.c: 223: }
 29990  0047BA  0012               	return	
 29991  0047BC                     l319:
 29992                           
 29993                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 29994                           
 29995                           ; BSR set to: 2
 29996  0047BC  0E3D               	movlw	low _MdmResetRequest
 29997  0047BE  0100               	movlb	0	; () banked
 29998  0047C0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29999  0047C2  0E00               	movlw	high _MdmResetRequest
 30000  0047C4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30001  0047C6  ECF6  F032         	call	_ReceiveEvt	;wreg free
 30002  0047CA  0900               	iorlw	0
 30003  0047CC  B4D8               	btfsc	status,2,c
 30004  0047CE  0012               	return	
 30005                           
 30006                           ;mdm_drv.c: 225: {
 30007                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30008  0047D0  0E03               	movlw	3
 30009  0047D2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30010                           
 30011                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30012  0047D4  8084               	bsf	3972,0,c	;volatile
 30013                           
 30014                           ;mdm_drv.c: 231: Counter = 0;
 30015  0047D6  0E00               	movlw	0
 30016  0047D8  0102               	movlb	2	; () banked
 30017  0047DA  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30018  0047DC  0E00               	movlw	0
 30019  0047DE  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 30020                           
 30021                           ; BSR set to: 2
 30022                           ;mdm_drv.c: 236: }
 30023                           ;mdm_drv.c: 237: break;
 30024                           
 30025                           ; BSR set to: 2
 30026                           
 30027                           ;mdm_drv.c: 233: else
 30028                           ;mdm_drv.c: 234: {
 30029                           
 30030                           ; BSR set to: 2
 30031                           
 30032                           ;mdm_drv.c: 232: }
 30033  0047E0  0012               	return	
 30034  0047E2                     
 30035                           ;mdm_drv.c: 241: Counter++;
 30036                           
 30037                           ; BSR set to: 2
 30038  0047E2  0102               	movlb	2	; () banked
 30039  0047E4  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30040  0047E6  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30041                           
 30042                           ; BSR set to: 2
 30043                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 30044  0047E8  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30045  0047EA  E104               	bnz	u14760
 30046  0047EC  0E96               	movlw	150
 30047  0047EE  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 30048  0047F0  A0D8               	btfss	status,0,c
 30049  0047F2  0012               	return	
 30050  0047F4                     u14760:
 30051                           
 30052                           ; BSR set to: 2
 30053                           ;mdm_drv.c: 244: {
 30054                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30055  0047F4  9284               	bcf	3972,1,c	;volatile
 30056                           
 30057                           ; BSR set to: 2
 30058                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30059  0047F6  0E01               	movlw	1
 30060  0047F8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30061                           
 30062                           ; BSR set to: 2
 30063                           ;mdm_drv.c: 249: }
 30064                           ;mdm_drv.c: 250: break;
 30065  0047FA  0012               	return	
 30066  0047FC                     
 30067                           ;mdm_drv.c: 254: Counter++;
 30068                           
 30069                           ; BSR set to: 2
 30070  0047FC  0102               	movlb	2	; () banked
 30071  0047FE  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30072  004800  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30073                           
 30074                           ; BSR set to: 2
 30075                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30076  004802  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30077  004804  E104               	bnz	u14770
 30078  004806  0E0A               	movlw	10
 30079  004808  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 30080  00480A  A0D8               	btfss	status,0,c
 30081  00480C  0012               	return	
 30082  00480E                     u14770:
 30083                           
 30084                           ; BSR set to: 2
 30085                           ;mdm_drv.c: 257: {
 30086                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30087  00480E  9084               	bcf	3972,0,c	;volatile
 30088                           
 30089                           ; BSR set to: 2
 30090                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30091  004810  0E01               	movlw	1
 30092  004812  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30093                           
 30094                           ; BSR set to: 2
 30095                           ;mdm_drv.c: 267: }
 30096                           
 30097                           ; BSR set to: 2
 30098                           ;mdm_drv.c: 266: break;
 30099                           
 30100                           ;mdm_drv.c: 265: default:
 30101                           
 30102                           ; BSR set to: 2
 30103                           ;mdm_drv.c: 262: }
 30104                           ;mdm_drv.c: 263: break;
 30105  004814  0012               	return	
 30106  004816                     l315:
 30107                           
 30108                           ; BSR set to: 2
 30109  004816  502E               	movf	MdmCntSm@MdmCntState,w,c
 30110                           
 30111                           ; Switch size 1, requested type "space"
 30112                           ; Number of cases is 4, Range of values is 0 to 3
 30113                           ; switch strategies available:
 30114                           ; Name         Instructions Cycles
 30115                           ; simple_byte           13     7 (average)
 30116                           ;	Chosen strategy is simple_byte
 30117  004818  0A00               	xorlw	0	; case 0
 30118  00481A  B4D8               	btfsc	status,2,c
 30119  00481C  D7B7               	goto	l316
 30120  00481E  0A01               	xorlw	1	; case 1
 30121  004820  B4D8               	btfsc	status,2,c
 30122  004822  D7B9               	goto	l318
 30123  004824  0A03               	xorlw	3	; case 2
 30124  004826  B4D8               	btfsc	status,2,c
 30125  004828  D7DC               	goto	l323
 30126  00482A  0A01               	xorlw	1	; case 3
 30127  00482C  A4D8               	btfss	status,2,c
 30128  00482E  0012               	return	
 30129  004830  D7E5               	goto	l325
 30130  004832                     __end_of_MdmCntSm:
 30131                           	opt stack 0
 30132                           tosu	equ	0xFFF
 30133                           tosh	equ	0xFFE
 30134                           tosl	equ	0xFFD
 30135                           pclath	equ	0xFFA
 30136                           tblptru	equ	0xFF8
 30137                           tblptrh	equ	0xFF7
 30138                           tblptrl	equ	0xFF6
 30139                           tablat	equ	0xFF5
 30140                           prodh	equ	0xFF4
 30141                           prodl	equ	0xFF3
 30142                           intcon	equ	0xFF2
 30143                           intcon2	equ	0xFF1
 30144                           intcon3	equ	0xFF0
 30145                           indf0	equ	0xFEF
 30146                           postinc0	equ	0xFEE
 30147                           plusw0	equ	0xFEB
 30148                           fsr0h	equ	0xFEA
 30149                           fsr0l	equ	0xFE9
 30150                           wreg	equ	0xFE8
 30151                           indf1	equ	0xFE7
 30152                           postinc1	equ	0xFE6
 30153                           postdec1	equ	0xFE5
 30154                           plusw1	equ	0xFE3
 30155                           fsr1h	equ	0xFE2
 30156                           fsr1l	equ	0xFE1
 30157                           indf2	equ	0xFDF
 30158                           postinc2	equ	0xFDE
 30159                           postdec2	equ	0xFDD
 30160                           plusw2	equ	0xFDB
 30161                           fsr2h	equ	0xFDA
 30162                           fsr2l	equ	0xFD9
 30163                           status	equ	0xFD8
 30164                           
 30165 ;; *************** function _InitModemInterface *****************
 30166 ;; Defined at:
 30167 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30168 ;; Parameters:    Size  Location     Type
 30169 ;;		None
 30170 ;; Auto vars:     Size  Location     Type
 30171 ;;		None
 30172 ;; Return value:  Size  Location     Type
 30173 ;;                  1    wreg      void 
 30174 ;; Registers used:
 30175 ;;		None
 30176 ;; Tracked objects:
 30177 ;;		On entry : 0/0
 30178 ;;		On exit  : 0/0
 30179 ;;		Unchanged: 0/0
 30180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30185 ;;Total ram usage:        0 bytes
 30186 ;; Hardware stack levels used:    1
 30187 ;; Hardware stack levels required when called:   11
 30188 ;; This function calls:
 30189 ;;		Nothing
 30190 ;; This function is called by:
 30191 ;;		_MdmCntSm
 30192 ;; This function uses a non-reentrant model
 30193 ;;
 30194                           
 30195                           	psect	text141
 30196  006B48                     __ptext141:
 30197                           	opt stack 0
 30198  006B48                     _InitModemInterface:
 30199                           	opt stack 15
 30200                           
 30201                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 30202                           
 30203                           ;incstack = 0
 30204  006B48  9096               	bcf	3990,0,c	;volatile
 30205                           
 30206                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 30207  006B4A  9296               	bcf	3990,1,c	;volatile
 30208                           
 30209                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 30210  006B4C  8496               	bsf	3990,2,c	;volatile
 30211  006B4E  0012               	return		;funcret
 30212  006B50                     __end_of_InitModemInterface:
 30213                           	opt stack 0
 30214                           tosu	equ	0xFFF
 30215                           tosh	equ	0xFFE
 30216                           tosl	equ	0xFFD
 30217                           pclath	equ	0xFFA
 30218                           tblptru	equ	0xFF8
 30219                           tblptrh	equ	0xFF7
 30220                           tblptrl	equ	0xFF6
 30221                           tablat	equ	0xFF5
 30222                           prodh	equ	0xFF4
 30223                           prodl	equ	0xFF3
 30224                           intcon	equ	0xFF2
 30225                           intcon2	equ	0xFF1
 30226                           intcon3	equ	0xFF0
 30227                           indf0	equ	0xFEF
 30228                           postinc0	equ	0xFEE
 30229                           plusw0	equ	0xFEB
 30230                           fsr0h	equ	0xFEA
 30231                           fsr0l	equ	0xFE9
 30232                           wreg	equ	0xFE8
 30233                           indf1	equ	0xFE7
 30234                           postinc1	equ	0xFE6
 30235                           postdec1	equ	0xFE5
 30236                           plusw1	equ	0xFE3
 30237                           fsr1h	equ	0xFE2
 30238                           fsr1l	equ	0xFE1
 30239                           indf2	equ	0xFDF
 30240                           postinc2	equ	0xFDE
 30241                           postdec2	equ	0xFDD
 30242                           plusw2	equ	0xFDB
 30243                           fsr2h	equ	0xFDA
 30244                           fsr2l	equ	0xFD9
 30245                           status	equ	0xFD8
 30246                           
 30247 ;; *************** function _InitGprsNetwork *****************
 30248 ;; Defined at:
 30249 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30250 ;; Parameters:    Size  Location     Type
 30251 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30252 ;;		 -> NULL(0), 
 30253 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30254 ;; Auto vars:     Size  Location     Type
 30255 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30256 ;;  Index           1   50[BANK1 ] unsigned char 
 30257 ;; Return value:  Size  Location     Type
 30258 ;;                  1    wreg      enum E8925
 30259 ;; Registers used:
 30260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30261 ;; Tracked objects:
 30262 ;;		On entry : 0/0
 30263 ;;		On exit  : 0/0
 30264 ;;		Unchanged: 0/0
 30265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30266 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30267 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30268 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30269 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30270 ;;Total ram usage:       56 bytes
 30271 ;; Hardware stack levels used:    1
 30272 ;; Hardware stack levels required when called:   14
 30273 ;; This function calls:
 30274 ;;		_ClearBuffer
 30275 ;;		_OsTmr_GetTimerStatus
 30276 ;;		_OsTmr_StartTimer
 30277 ;;		_ReceiveEvt
 30278 ;;		_StringCopy
 30279 ;;		_Uart_WriteConstString
 30280 ;;		_Uart_WriteString
 30281 ;; This function is called by:
 30282 ;;		_MdmHttp_MainTask
 30283 ;; This function uses a non-reentrant model
 30284 ;;
 30285                           
 30286                           	psect	text142
 30287  000DC8                     __ptext142:
 30288                           	opt stack 0
 30289  000DC8                     _InitGprsNetwork:
 30290                           	opt stack 13
 30291                           
 30292                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30293                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30294                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30295                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30296                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30297                           
 30298                           ;incstack = 0
 30299  000DC8  0E00               	movlw	0
 30300  000DCA  0101               	movlb	1	; () banked
 30301  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30302                           
 30303                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30304  000DCE  D154               	goto	l1219
 30305  000DD0                     
 30306                           ; BSR set to: 1
 30307                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30308                           
 30309                           ; BSR set to: 1
 30310  000DD0  0ED9               	movlw	low _InitNetwork
 30311  000DD2  0100               	movlb	0	; () banked
 30312  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30313  000DD6  0E00               	movlw	high _InitNetwork
 30314  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30315  000DDA  ECF6  F032         	call	_ReceiveEvt	;wreg free
 30316  000DDE  0900               	iorlw	0
 30317  000DE0  B4D8               	btfsc	status,2,c
 30318  000DE2  D166               	goto	l1222
 30319                           
 30320                           ;mdm_gsm_gprs_http.c: 137: {
 30321                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30322  000DE4  0E01               	movlw	1
 30323  000DE6  D141               	goto	L104
 30324  000DE8                     
 30325                           ; BSR set to: 1
 30326                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30327                           
 30328                           ; BSR set to: 1
 30329  000DE8  0E89               	movlw	low STR_8
 30330  000DEA  0100               	movlb	0	; () banked
 30331  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30332  000DEE  0EFE               	movlw	high STR_8
 30333  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30334  000DF2  0E01               	movlw	1
 30335  000DF4  ECAD  F030         	call	_Uart_WriteConstString
 30336                           
 30337                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30338  000DF8  0E07               	movlw	7
 30339  000DFA  0101               	movlb	1	; () banked
 30340  000DFC  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30341                           
 30342                           ; BSR set to: 1
 30343                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30344  000DFE  0E02               	movlw	2
 30345  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30346                           
 30347                           ; BSR set to: 1
 30348                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30349  000E02  0EF5               	movlw	low _ConnTimeout
 30350  000E04  0100               	movlb	0	; () banked
 30351  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30352  000E08  0E02               	movlw	high _ConnTimeout
 30353  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30354  000E0C  0E20               	movlw	32
 30355  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30356  000E10  0E4E               	movlw	78
 30357  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30358  000E14  0E00               	movlw	0
 30359  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30360  000E18  0E00               	movlw	0
 30361  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30362  000E1C  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 30363  000E20  D0C7               	goto	l15675
 30364  000E22                     
 30365                           ; BSR set to: 1
 30366                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30367                           
 30368                           ; BSR set to: 1
 30369  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30370  000E24  0100               	movlb	0	; () banked
 30371  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30372  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30373  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30374  000E2C  0E00               	movlw	0
 30375  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30376  000E30  0E32               	movlw	50
 30377  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30378  000E34  EC18  F032         	call	_ClearBuffer	;wreg free
 30379                           
 30380                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30381  000E38  0EBD               	movlw	low STR_9
 30382  000E3A  0100               	movlb	0	; () banked
 30383  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30384  000E3E  0EFE               	movlw	high STR_9
 30385  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30386  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30387  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30388  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30389  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30390  000E4A  0E00               	movlw	0
 30391  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30392  000E4E  0E14               	movlw	20
 30393  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30394  000E52  ECE9  F02B         	call	_StringCopy	;wreg free
 30395                           
 30396                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30397  000E56  0E00               	movlw	0
 30398  000E58  0101               	movlb	1	; () banked
 30399  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30400  000E5C  D01C               	goto	l1225
 30401  000E5E                     
 30402                           ; BSR set to: 1
 30403                           ;mdm_gsm_gprs_http.c: 161: {
 30404                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30405                           
 30406                           ; BSR set to: 1
 30407  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30408  000E60  0D01               	mullw	1
 30409  000E62  50F3               	movf	prodl,w,c
 30410  000E64  0100               	movlb	0	; () banked
 30411  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30412  000E68  6ED9               	movwf	fsr2l,c
 30413  000E6A  50F4               	movf	prodh,w,c
 30414  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30415  000E6E  6EDA               	movwf	fsr2h,c
 30416  000E70  0101               	movlb	1	; () banked
 30417  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30418  000E74  0100               	movlb	0	; () banked
 30419  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30420  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30421  000E7A  0E14               	movlw	20
 30422  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30423  000E7E  0E00               	movlw	0
 30424  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30425  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30426  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30427  000E86  6EE1               	movwf	fsr1l,c
 30428  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30429  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30430  000E8C  6EE2               	movwf	fsr1h,c
 30431  000E8E  CFDF FFE7          	movff	indf2,indf1
 30432                           
 30433                           ; BSR set to: 0
 30434  000E92  0101               	movlb	1	; () banked
 30435  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30436  000E96                     l1225:
 30437                           
 30438                           ; BSR set to: 1
 30439                           
 30440                           ; BSR set to: 1
 30441  000E96  0100               	movlb	0	; () banked
 30442  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30443  000E9A  0101               	movlb	1	; () banked
 30444  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30445  000E9E  A0D8               	btfss	status,0,c
 30446  000EA0  D7DE               	goto	l1226
 30447                           
 30448                           ; BSR set to: 1
 30449                           ;mdm_gsm_gprs_http.c: 163: }
 30450                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30451                           
 30452                           ; BSR set to: 1
 30453  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30454  000EA4  0100               	movlb	0	; () banked
 30455  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30456  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30457  000EAA  0E14               	movlw	20
 30458  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30459  000EAE  0E00               	movlw	0
 30460  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30461  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30462  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30463  000EB6  6ED9               	movwf	fsr2l,c
 30464  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30465  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30466  000EBC  6EDA               	movwf	fsr2h,c
 30467  000EBE  0E22               	movlw	34
 30468  000EC0  6EDF               	movwf	indf2,c
 30469                           
 30470                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30471  000EC2  0101               	movlb	1	; () banked
 30472  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30473  000EC6  0100               	movlb	0	; () banked
 30474  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30475  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30476  000ECC  0E15               	movlw	21
 30477  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30478  000ED0  0E00               	movlw	0
 30479  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30480  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30481  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30482  000ED8  6ED9               	movwf	fsr2l,c
 30483  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30484  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30485  000EDE  6EDA               	movwf	fsr2h,c
 30486  000EE0  0E0D               	movlw	13
 30487  000EE2  6EDF               	movwf	indf2,c
 30488                           
 30489                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30490  000EE4  0101               	movlb	1	; () banked
 30491  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30492  000EE8  0100               	movlb	0	; () banked
 30493  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30494  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30495  000EEE  0E16               	movlw	22
 30496  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30497  000EF2  0E00               	movlw	0
 30498  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30499  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30500  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30501  000EFA  6ED9               	movwf	fsr2l,c
 30502  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30503  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30504  000F00  6EDA               	movwf	fsr2h,c
 30505  000F02  0E00               	movlw	0
 30506  000F04  6EDF               	movwf	indf2,c
 30507                           
 30508                           ; BSR set to: 0
 30509                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30510  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30511  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30512  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30513  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30514  000F0E  0E01               	movlw	1
 30515  000F10  EC4D  F031         	call	_Uart_WriteString
 30516                           
 30517                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30518  000F14  0E07               	movlw	7
 30519  000F16  0101               	movlb	1	; () banked
 30520  000F18  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30521                           
 30522                           ; BSR set to: 1
 30523                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30524  000F1A  0E03               	movlw	3
 30525  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30526                           
 30527                           ; BSR set to: 1
 30528                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30529  000F1E  0EF5               	movlw	low _ConnTimeout
 30530  000F20  0100               	movlb	0	; () banked
 30531  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30532  000F24  0E02               	movlw	high _ConnTimeout
 30533  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30534  000F28  0E20               	movlw	32
 30535  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30536  000F2C  0E4E               	movlw	78
 30537  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30538  000F30  0E00               	movlw	0
 30539  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30540  000F34  0E00               	movlw	0
 30541  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30542  000F38  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 30543  000F3C  D039               	goto	l15675
 30544  000F3E                     
 30545                           ; BSR set to: 1
 30546                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30547                           
 30548                           ; BSR set to: 1
 30549  000F3E  0E4B               	movlw	low STR_10
 30550  000F40  0100               	movlb	0	; () banked
 30551  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30552  000F44  0EFF               	movlw	high STR_10
 30553  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30554  000F48  0E01               	movlw	1
 30555  000F4A  ECAD  F030         	call	_Uart_WriteConstString
 30556                           
 30557                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30558  000F4E  0E07               	movlw	7
 30559  000F50  0101               	movlb	1	; () banked
 30560  000F52  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30561                           
 30562                           ; BSR set to: 1
 30563                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30564  000F54  0E05               	movlw	5
 30565  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30566                           
 30567                           ; BSR set to: 1
 30568                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30569  000F58  0EF5               	movlw	low _ConnTimeout
 30570  000F5A  0100               	movlb	0	; () banked
 30571  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30572  000F5E  0E02               	movlw	high _ConnTimeout
 30573  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30574  000F62  0E20               	movlw	32
 30575  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30576  000F66  0E4E               	movlw	78
 30577  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30578  000F6A  0E00               	movlw	0
 30579  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30580  000F6E  0E00               	movlw	0
 30581  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30582  000F72  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 30583  000F76  D01C               	goto	l15675
 30584  000F78                     
 30585                           ; BSR set to: 1
 30586                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30587                           
 30588                           ; BSR set to: 1
 30589  000F78  0E59               	movlw	low STR_11
 30590  000F7A  0100               	movlb	0	; () banked
 30591  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30592  000F7E  0EFF               	movlw	high STR_11
 30593  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30594  000F82  0E01               	movlw	1
 30595  000F84  ECAD  F030         	call	_Uart_WriteConstString
 30596                           
 30597                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30598  000F88  0E08               	movlw	8
 30599  000F8A  0101               	movlb	1	; () banked
 30600  000F8C  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30601                           
 30602                           ; BSR set to: 1
 30603                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30604  000F8E  0E05               	movlw	5
 30605  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30606                           
 30607                           ; BSR set to: 1
 30608                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30609  000F92  0EF5               	movlw	low _ConnTimeout
 30610  000F94  0100               	movlb	0	; () banked
 30611  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30612  000F98  0E02               	movlw	high _ConnTimeout
 30613  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30614  000F9C  0E20               	movlw	32
 30615  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30616  000FA0  0E4E               	movlw	78
 30617  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30618  000FA4  0E00               	movlw	0
 30619  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30620  000FA8  0E00               	movlw	0
 30621  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30622  000FAC  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 30623  000FB0                     l15675:
 30624                           
 30625                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30626  000FB0  0E01               	movlw	1
 30627  000FB2  0101               	movlb	1	; () banked
 30628  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30629                           
 30630                           ;mdm_gsm_gprs_http.c: 201: break;
 30631  000FB6  D07C               	goto	l1222
 30632  000FB8                     
 30633                           ; BSR set to: 1
 30634                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30635                           
 30636                           ; BSR set to: 1
 30637  000FB8  0E02               	movlw	2
 30638  000FBA  D05A               	goto	L103
 30639  000FBC                     
 30640                           ; BSR set to: 1
 30641                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30642                           
 30643                           ; BSR set to: 1
 30644  000FBC  0E3C               	movlw	low _NewStringReceived
 30645  000FBE  0100               	movlb	0	; () banked
 30646  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30647  000FC2  0E00               	movlw	high _NewStringReceived
 30648  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30649  000FC6  ECF6  F032         	call	_ReceiveEvt	;wreg free
 30650  000FCA  0900               	iorlw	0
 30651  000FCC  B4D8               	btfsc	status,2,c
 30652  000FCE  D018               	goto	l1232
 30653                           
 30654                           ;mdm_gsm_gprs_http.c: 212: {
 30655                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30656  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30657  000FD4  0A4F               	xorlw	79
 30658  000FD6  A4D8               	btfss	status,2,c
 30659  000FD8  D06B               	goto	l1222
 30660  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30661  000FDE  0A4B               	xorlw	75
 30662  000FE0  A4D8               	btfss	status,2,c
 30663  000FE2  D066               	goto	l1222
 30664                           
 30665                           ;mdm_gsm_gprs_http.c: 215: {
 30666                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30667  000FE4  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30668                           
 30669                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30670  000FE8  0E58               	movlw	low _RxBuffer
 30671  000FEA  0100               	movlb	0	; () banked
 30672  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30673  000FEE  0E0C               	movlw	high _RxBuffer
 30674  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30675  000FF2  0E01               	movlw	1
 30676  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30677  000FF6  0E90               	movlw	144
 30678  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30679  000FFA  EC18  F032         	call	_ClearBuffer	;wreg free
 30680                           
 30681                           ;mdm_gsm_gprs_http.c: 220: }
 30682                           ;mdm_gsm_gprs_http.c: 221: }
 30683  000FFE  D058               	goto	l1222
 30684  001000                     l1232:
 30685                           
 30686                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30687  001000  0EF5               	movlw	low _ConnTimeout
 30688  001002  0100               	movlb	0	; () banked
 30689  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30690  001006  0E02               	movlw	high _ConnTimeout
 30691  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30692  00100A  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30693  00100E  D029               	goto	L68
 30694  001010                     
 30695                           ; BSR set to: 1
 30696                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30697                           
 30698                           ; BSR set to: 1
 30699  001010  0E3C               	movlw	low _NewStringReceived
 30700  001012  0100               	movlb	0	; () banked
 30701  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30702  001016  0E00               	movlw	high _NewStringReceived
 30703  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30704  00101A  ECF6  F032         	call	_ReceiveEvt	;wreg free
 30705  00101E  0900               	iorlw	0
 30706  001020  B4D8               	btfsc	status,2,c
 30707  001022  D018               	goto	l1237
 30708                           
 30709                           ;mdm_gsm_gprs_http.c: 232: {
 30710                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30711  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30712  001028  0A2B               	xorlw	43
 30713  00102A  A4D8               	btfss	status,2,c
 30714  00102C  D041               	goto	l1222
 30715  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30716  001032  0A53               	xorlw	83
 30717  001034  A4D8               	btfss	status,2,c
 30718  001036  D03C               	goto	l1222
 30719                           
 30720                           ;mdm_gsm_gprs_http.c: 235: {
 30721                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30722  001038  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30723                           
 30724                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30725  00103C  0E58               	movlw	low _RxBuffer
 30726  00103E  0100               	movlb	0	; () banked
 30727  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30728  001042  0E0C               	movlw	high _RxBuffer
 30729  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30730  001046  0E01               	movlw	1
 30731  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30732  00104A  0E90               	movlw	144
 30733  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30734  00104E  EC18  F032         	call	_ClearBuffer	;wreg free
 30735                           
 30736                           ;mdm_gsm_gprs_http.c: 240: }
 30737                           ;mdm_gsm_gprs_http.c: 241: }
 30738  001052  D02E               	goto	l1222
 30739  001054                     l1237:
 30740                           
 30741                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30742  001054  0EF5               	movlw	low _ConnTimeout
 30743  001056  0100               	movlb	0	; () banked
 30744  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30745  00105A  0E02               	movlw	high _ConnTimeout
 30746  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30747  00105E  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30748  001062                     L68:
 30749  001062  06E8               	decf	wreg,f,c
 30750  001064  A4D8               	btfss	status,2,c
 30751  001066  D024               	goto	l1222
 30752                           
 30753                           ;mdm_gsm_gprs_http.c: 243: {
 30754                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30755  001068  0E06               	movlw	6
 30756  00106A                     L104:
 30757  00106A  0101               	movlb	1	; () banked
 30758  00106C  D003               	goto	L67
 30759  00106E                     
 30760                           ; BSR set to: 1
 30761                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30762                           
 30763                           ; BSR set to: 1
 30764  00106E  0E03               	movlw	3
 30765  001070                     L103:
 30766  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30767                           
 30768                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30769  001072  0E00               	movlw	0
 30770  001074                     L67:
 30771  001074  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30772                           
 30773                           ; BSR set to: 1
 30774                           ;mdm_gsm_gprs_http.c: 257: }
 30775                           
 30776                           ; BSR set to: 1
 30777                           ;mdm_gsm_gprs_http.c: 256: break;
 30778                           
 30779                           ;mdm_gsm_gprs_http.c: 255: default:
 30780                           
 30781                           ;mdm_gsm_gprs_http.c: 253: break;
 30782  001076  D01C               	goto	l1222
 30783  001078                     l1219:
 30784                           
 30785                           ; BSR set to: 1
 30786                           
 30787                           ; BSR set to: 1
 30788  001078  51E8               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30789                           
 30790                           ; Switch size 1, requested type "space"
 30791                           ; Number of cases is 9, Range of values is 0 to 8
 30792                           ; switch strategies available:
 30793                           ; Name         Instructions Cycles
 30794                           ; simple_byte           28    15 (average)
 30795                           ;	Chosen strategy is simple_byte
 30796  00107A  0A00               	xorlw	0	; case 0
 30797  00107C  B4D8               	btfsc	status,2,c
 30798  00107E  D6A8               	goto	l1220
 30799  001080  0A01               	xorlw	1	; case 1
 30800  001082  B4D8               	btfsc	status,2,c
 30801  001084  D6B1               	goto	l1223
 30802  001086  0A03               	xorlw	3	; case 2
 30803  001088  B4D8               	btfsc	status,2,c
 30804  00108A  D6CB               	goto	l1224
 30805  00108C  0A01               	xorlw	1	; case 3
 30806  00108E  B4D8               	btfsc	status,2,c
 30807  001090  D756               	goto	l1228
 30808  001092  0A07               	xorlw	7	; case 4
 30809  001094  B4D8               	btfsc	status,2,c
 30810  001096  D770               	goto	l1229
 30811  001098  0A01               	xorlw	1	; case 5
 30812  00109A  B4D8               	btfsc	status,2,c
 30813  00109C  D78D               	goto	l1230
 30814  00109E  0A03               	xorlw	3	; case 6
 30815  0010A0  B4D8               	btfsc	status,2,c
 30816  0010A2  D7E5               	goto	l1241
 30817  0010A4  0A01               	xorlw	1	; case 7
 30818  0010A6  B4D8               	btfsc	status,2,c
 30819  0010A8  D789               	goto	l1231
 30820  0010AA  0A0F               	xorlw	15	; case 8
 30821  0010AC  B4D8               	btfsc	status,2,c
 30822  0010AE  D7B0               	goto	l1236
 30823  0010B0                     l1222:
 30824                           
 30825                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30826                           
 30827                           ; BSR set to: 1
 30828  0010B0  0101               	movlb	1	; () banked
 30829  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30830  0010B4  0012               	return	
 30831  0010B6                     __end_of_InitGprsNetwork:
 30832                           	opt stack 0
 30833                           tosu	equ	0xFFF
 30834                           tosh	equ	0xFFE
 30835                           tosl	equ	0xFFD
 30836                           pclath	equ	0xFFA
 30837                           tblptru	equ	0xFF8
 30838                           tblptrh	equ	0xFF7
 30839                           tblptrl	equ	0xFF6
 30840                           tablat	equ	0xFF5
 30841                           prodh	equ	0xFF4
 30842                           prodl	equ	0xFF3
 30843                           intcon	equ	0xFF2
 30844                           intcon2	equ	0xFF1
 30845                           intcon3	equ	0xFF0
 30846                           indf0	equ	0xFEF
 30847                           postinc0	equ	0xFEE
 30848                           plusw0	equ	0xFEB
 30849                           fsr0h	equ	0xFEA
 30850                           fsr0l	equ	0xFE9
 30851                           wreg	equ	0xFE8
 30852                           indf1	equ	0xFE7
 30853                           postinc1	equ	0xFE6
 30854                           postdec1	equ	0xFE5
 30855                           plusw1	equ	0xFE3
 30856                           fsr1h	equ	0xFE2
 30857                           fsr1l	equ	0xFE1
 30858                           indf2	equ	0xFDF
 30859                           postinc2	equ	0xFDE
 30860                           postdec2	equ	0xFDD
 30861                           plusw2	equ	0xFDB
 30862                           fsr2h	equ	0xFDA
 30863                           fsr2l	equ	0xFD9
 30864                           status	equ	0xFD8
 30865                           
 30866 ;; *************** function _HttpGetMethod *****************
 30867 ;; Defined at:
 30868 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30869 ;; Parameters:    Size  Location     Type
 30870 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30871 ;;		 -> HttpGetDataLocal(5), 
 30872 ;; Auto vars:     Size  Location     Type
 30873 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30874 ;;  Index           1  200[BANK1 ] unsigned char 
 30875 ;; Return value:  Size  Location     Type
 30876 ;;                  1    wreg      enum E8925
 30877 ;; Registers used:
 30878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30879 ;; Tracked objects:
 30880 ;;		On entry : 0/0
 30881 ;;		On exit  : 0/0
 30882 ;;		Unchanged: 0/0
 30883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30885 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30887 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30888 ;;Total ram usage:      207 bytes
 30889 ;; Hardware stack levels used:    1
 30890 ;; Hardware stack levels required when called:   14
 30891 ;; This function calls:
 30892 ;;		_ClearBuffer
 30893 ;;		_OsTmr_GetTimerStatus
 30894 ;;		_OsTmr_StartTimer
 30895 ;;		_ReceiveEvt
 30896 ;;		_StringCopy
 30897 ;;		_Uart_WriteConstString
 30898 ;;		_Uart_WriteString
 30899 ;; This function is called by:
 30900 ;;		_MdmHttp_MainTask
 30901 ;; This function uses a non-reentrant model
 30902 ;;
 30903                           
 30904                           	psect	text143
 30905  0005EC                     __ptext143:
 30906                           	opt stack 0
 30907  0005EC                     _HttpGetMethod:
 30908                           	opt stack 13
 30909                           
 30910                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 30911                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 30912                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 30913                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 30914                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 30915                           
 30916                           ; BSR set to: 1
 30917                           ;incstack = 0
 30918  0005EC  0E00               	movlw	0
 30919  0005EE  0101               	movlb	1	; () banked
 30920  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30921                           
 30922                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 30923  0005F2  D230               	goto	l1252
 30924  0005F4                     
 30925                           ; BSR set to: 1
 30926                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 30927                           
 30928                           ; BSR set to: 1
 30929  0005F4  0ED8               	movlw	low _GetMethod
 30930  0005F6  0100               	movlb	0	; () banked
 30931  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30932  0005FA  0E00               	movlw	high _GetMethod
 30933  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30934  0005FE  ECF6  F032         	call	_ReceiveEvt	;wreg free
 30935  000602  0900               	iorlw	0
 30936  000604  B4D8               	btfsc	status,2,c
 30937  000606  D257               	goto	l1255
 30938                           
 30939                           ;mdm_gsm_gprs_http.c: 284: {
 30940                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 30941  000608  0E01               	movlw	1
 30942  00060A  D18C               	goto	L70
 30943  00060C                     
 30944                           ; BSR set to: 1
 30945                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 30946                           
 30947                           ; BSR set to: 1
 30948  00060C  0E9D               	movlw	low STR_12
 30949  00060E  0100               	movlb	0	; () banked
 30950  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30951  000612  0EFF               	movlw	high STR_12
 30952  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30953  000616  0E01               	movlw	1
 30954  000618  ECAD  F030         	call	_Uart_WriteConstString
 30955                           
 30956                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 30957  00061C  0E0A               	movlw	10
 30958  00061E  0101               	movlb	1	; () banked
 30959  000620  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30960                           
 30961                           ; BSR set to: 1
 30962                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 30963  000622  0E02               	movlw	2
 30964  000624  0100               	movlb	0	; () banked
 30965  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30966                           
 30967                           ; BSR set to: 0
 30968                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 30969  000628  0EF5               	movlw	low _ConnTimeout
 30970  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30971  00062C  0E02               	movlw	high _ConnTimeout
 30972  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30973  000630  0E20               	movlw	32
 30974  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30975  000634  0E4E               	movlw	78
 30976  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30977  000638  0E00               	movlw	0
 30978  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30979  00063C  0E00               	movlw	0
 30980  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30981  000640  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 30982  000644  D1AF               	goto	l15841
 30983  000646                     
 30984                           ; BSR set to: 1
 30985                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 30986                           
 30987                           ; BSR set to: 1
 30988  000646  0E67               	movlw	low STR_13
 30989  000648  0100               	movlb	0	; () banked
 30990  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30991  00064C  0EFF               	movlw	high STR_13
 30992  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30993  000650  0E01               	movlw	1
 30994  000652  ECAD  F030         	call	_Uart_WriteConstString
 30995                           
 30996                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 30997  000656  0E0A               	movlw	10
 30998  000658  0101               	movlb	1	; () banked
 30999  00065A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31000                           
 31001                           ; BSR set to: 1
 31002                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31003  00065C  0E03               	movlw	3
 31004  00065E  0100               	movlb	0	; () banked
 31005  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31006                           
 31007                           ; BSR set to: 0
 31008                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31009  000662  0EF5               	movlw	low _ConnTimeout
 31010  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31011  000666  0E02               	movlw	high _ConnTimeout
 31012  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31013  00066A  0E20               	movlw	32
 31014  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31015  00066E  0E4E               	movlw	78
 31016  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31017  000672  0E00               	movlw	0
 31018  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31019  000676  0E00               	movlw	0
 31020  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31021  00067A  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31022  00067E  D192               	goto	l15841
 31023  000680                     
 31024                           ; BSR set to: 1
 31025                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 31026                           
 31027                           ; BSR set to: 1
 31028  000680  0EA8               	movlw	low STR_14
 31029  000682  0100               	movlb	0	; () banked
 31030  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31031  000686  0EFE               	movlw	high STR_14
 31032  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31033  00068A  0E01               	movlw	1
 31034  00068C  ECAD  F030         	call	_Uart_WriteConstString
 31035                           
 31036                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 31037  000690  0E0A               	movlw	10
 31038  000692  0101               	movlb	1	; () banked
 31039  000694  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31040                           
 31041                           ; BSR set to: 1
 31042                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 31043  000696  0E04               	movlw	4
 31044  000698  0100               	movlb	0	; () banked
 31045  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31046                           
 31047                           ; BSR set to: 0
 31048                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 31049  00069C  0EF5               	movlw	low _ConnTimeout
 31050  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31051  0006A0  0E02               	movlw	high _ConnTimeout
 31052  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31053  0006A4  0E20               	movlw	32
 31054  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31055  0006A8  0E4E               	movlw	78
 31056  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31057  0006AC  0E00               	movlw	0
 31058  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31059  0006B0  0E00               	movlw	0
 31060  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31061  0006B4  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31062  0006B8  D175               	goto	l15841
 31063  0006BA                     
 31064                           ; BSR set to: 1
 31065                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31066                           
 31067                           ; BSR set to: 1
 31068  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31069  0006BC  0100               	movlb	0	; () banked
 31070  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31071  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 31072  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31073  0006C4  0E00               	movlw	0
 31074  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31075  0006C8  0EC8               	movlw	200
 31076  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31077  0006CC  EC18  F032         	call	_ClearBuffer	;wreg free
 31078                           
 31079                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31080  0006D0  0EE6               	movlw	low STR_15
 31081  0006D2  0100               	movlb	0	; () banked
 31082  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31083  0006D6  0EFE               	movlw	high STR_15
 31084  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31085  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 31086  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31087  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 31088  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31089  0006E2  0E00               	movlw	0
 31090  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31091  0006E6  0E13               	movlw	19
 31092  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 31093  0006EA  ECE9  F02B         	call	_StringCopy	;wreg free
 31094                           
 31095                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31096  0006EE  0E00               	movlw	0
 31097  0006F0  0101               	movlb	1	; () banked
 31098  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31099  0006F4  D024               	goto	l1260
 31100  0006F6                     
 31101                           ; BSR set to: 1
 31102                           ;mdm_gsm_gprs_http.c: 332: {
 31103                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31104                           
 31105                           ; BSR set to: 1
 31106  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31107  0006F8  0D01               	mullw	1
 31108  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31109  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31110  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31111  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31112  00070A  50F3               	movf	prodl,w,c
 31113  00070C  0100               	movlb	0	; () banked
 31114  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31115  000710  6ED9               	movwf	fsr2l,c
 31116  000712  50F4               	movf	prodh,w,c
 31117  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31118  000716  6EDA               	movwf	fsr2h,c
 31119  000718  0101               	movlb	1	; () banked
 31120  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31121  00071C  0100               	movlb	0	; () banked
 31122  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31123  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31124  000722  0E13               	movlw	19
 31125  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31126  000726  0E00               	movlw	0
 31127  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31128  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 31129  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31130  00072E  6EE1               	movwf	fsr1l,c
 31131  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 31132  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31133  000734  6EE2               	movwf	fsr1h,c
 31134  000736  CFDF FFE7          	movff	indf2,indf1
 31135                           
 31136                           ; BSR set to: 0
 31137  00073A  0101               	movlb	1	; () banked
 31138  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 31139  00073E                     l1260:
 31140                           
 31141                           ; BSR set to: 1
 31142                           
 31143                           ; BSR set to: 1
 31144  00073E  0100               	movlb	0	; () banked
 31145  000740  EE20 F002          	lfsr	2,2
 31146  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31147  000746  26D9               	addwf	fsr2l,f,c
 31148  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31149  00074A  22DA               	addwfc	fsr2h,f,c
 31150  00074C  50DE               	movf	postinc2,w,c
 31151  00074E  0101               	movlb	1	; () banked
 31152  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 31153  000752  A0D8               	btfss	status,0,c
 31154  000754  D7D0               	goto	l1261
 31155                           
 31156                           ; BSR set to: 1
 31157                           ;mdm_gsm_gprs_http.c: 334: }
 31158                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 31159                           
 31160                           ; BSR set to: 1
 31161  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31162  000758  0100               	movlb	0	; () banked
 31163  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31164  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31165  00075E  0E13               	movlw	19
 31166  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31167  000762  0E00               	movlw	0
 31168  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31169  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 31170  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31171  00076A  6ED9               	movwf	fsr2l,c
 31172  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 31173  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31174  000770  6EDA               	movwf	fsr2h,c
 31175  000772  0E22               	movlw	34
 31176  000774  6EDF               	movwf	indf2,c
 31177                           
 31178                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 31179  000776  0101               	movlb	1	; () banked
 31180  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31181  00077A  0100               	movlb	0	; () banked
 31182  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31183  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31184  000780  0E14               	movlw	20
 31185  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31186  000784  0E00               	movlw	0
 31187  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31188  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 31189  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31190  00078C  6ED9               	movwf	fsr2l,c
 31191  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 31192  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31193  000792  6EDA               	movwf	fsr2h,c
 31194  000794  0E0D               	movlw	13
 31195  000796  6EDF               	movwf	indf2,c
 31196                           
 31197                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 31198  000798  0101               	movlb	1	; () banked
 31199  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31200  00079C  0100               	movlb	0	; () banked
 31201  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31202  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31203  0007A2  0E15               	movlw	21
 31204  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31205  0007A6  0E00               	movlw	0
 31206  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31207  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 31208  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31209  0007AE  6ED9               	movwf	fsr2l,c
 31210  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 31211  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31212  0007B4  6EDA               	movwf	fsr2h,c
 31213  0007B6  0E00               	movlw	0
 31214  0007B8  6EDF               	movwf	indf2,c
 31215                           
 31216                           ; BSR set to: 0
 31217                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 31218  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31219  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31220  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 31221  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31222  0007C2  0E01               	movlw	1
 31223  0007C4  EC4D  F031         	call	_Uart_WriteString
 31224                           
 31225                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 31226  0007C8  0E0A               	movlw	10
 31227  0007CA  0101               	movlb	1	; () banked
 31228  0007CC  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31229                           
 31230                           ; BSR set to: 1
 31231                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31232  0007CE  0E05               	movlw	5
 31233  0007D0  0100               	movlb	0	; () banked
 31234  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31235                           
 31236                           ; BSR set to: 0
 31237                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31238  0007D4  0EF5               	movlw	low _ConnTimeout
 31239  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31240  0007D8  0E02               	movlw	high _ConnTimeout
 31241  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31242  0007DC  0E20               	movlw	32
 31243  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31244  0007E0  0E4E               	movlw	78
 31245  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31246  0007E4  0E00               	movlw	0
 31247  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31248  0007E8  0E00               	movlw	0
 31249  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31250  0007EC  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31251  0007F0  D0D9               	goto	l15841
 31252  0007F2                     
 31253                           ; BSR set to: 1
 31254                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31255                           
 31256                           ; BSR set to: 1
 31257  0007F2  0E1E               	movlw	low STR_16
 31258  0007F4  0100               	movlb	0	; () banked
 31259  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31260  0007F8  0EFF               	movlw	high STR_16
 31261  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31262  0007FC  0E01               	movlw	1
 31263  0007FE  ECAD  F030         	call	_Uart_WriteConstString
 31264                           
 31265                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31266  000802  0E0A               	movlw	10
 31267  000804  0101               	movlb	1	; () banked
 31268  000806  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31269                           
 31270                           ; BSR set to: 1
 31271                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31272  000808  0E06               	movlw	6
 31273  00080A  0100               	movlb	0	; () banked
 31274  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31275                           
 31276                           ; BSR set to: 0
 31277                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31278  00080E  0EF5               	movlw	low _ConnTimeout
 31279  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31280  000812  0E02               	movlw	high _ConnTimeout
 31281  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31282  000816  0E20               	movlw	32
 31283  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31284  00081A  0E4E               	movlw	78
 31285  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31286  00081E  0E00               	movlw	0
 31287  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31288  000822  0E00               	movlw	0
 31289  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31290  000826  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31291                           
 31292                           ;mdm_gsm_gprs_http.c: 358: break;
 31293  00082A  D145               	goto	l1255
 31294  00082C                     
 31295                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31296  00082C  0E07               	movlw	7
 31297  00082E  0101               	movlb	1	; () banked
 31298  000830  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31299                           
 31300                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31301  000832  0E09               	movlw	9
 31302  000834  0100               	movlb	0	; () banked
 31303  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31307  000838  0EF5               	movlw	low _ConnTimeout
 31308  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31309  00083C  0E02               	movlw	high _ConnTimeout
 31310  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31311  000840  0E20               	movlw	32
 31312  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31313  000844  0E4E               	movlw	78
 31314  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31315  000848  0E00               	movlw	0
 31316  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31317  00084C  0E00               	movlw	0
 31318  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31319  000850  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31320                           
 31321                           ;mdm_gsm_gprs_http.c: 371: break;
 31322  000854  D130               	goto	l1255
 31323  000856                     
 31324                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31325  000856  0E83               	movlw	low STR_17
 31326  000858  0100               	movlb	0	; () banked
 31327  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31328  00085C  0EFF               	movlw	high STR_17
 31329  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31330  000860  0E01               	movlw	1
 31331  000862  ECAD  F030         	call	_Uart_WriteConstString
 31332                           
 31333                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31334  000866  0E0D               	movlw	13
 31335  000868  0101               	movlb	1	; () banked
 31336  00086A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31337                           
 31338                           ; BSR set to: 1
 31339                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31340  00086C  0E09               	movlw	9
 31341  00086E  0100               	movlb	0	; () banked
 31342  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31343                           
 31344                           ; BSR set to: 0
 31345                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31346  000872  0EF5               	movlw	low _ConnTimeout
 31347  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31348  000876  0E02               	movlw	high _ConnTimeout
 31349  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31350  00087A  0E20               	movlw	32
 31351  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31352  00087E  0E4E               	movlw	78
 31353  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31354  000882  0E00               	movlw	0
 31355  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31356  000886  0E00               	movlw	0
 31357  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31358  00088A  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31359  00088E  D08A               	goto	l15841
 31360  000890                     
 31361                           ; BSR set to: 1
 31362                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31363                           
 31364                           ; BSR set to: 1
 31365  000890  0E90               	movlw	low STR_18
 31366  000892  0100               	movlb	0	; () banked
 31367  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31368  000896  0EFF               	movlw	high STR_18
 31369  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31370  00089A  0E01               	movlw	1
 31371  00089C  ECAD  F030         	call	_Uart_WriteConstString
 31372                           
 31373                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31374  0008A0  0E0A               	movlw	10
 31375  0008A2  0101               	movlb	1	; () banked
 31376  0008A4  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31377                           
 31378                           ; BSR set to: 1
 31379                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31380  0008A6  0E0E               	movlw	14
 31381  0008A8  0100               	movlb	0	; () banked
 31382  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31383                           
 31384                           ; BSR set to: 0
 31385                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31386  0008AC  0EF5               	movlw	low _ConnTimeout
 31387  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31388  0008B0  0E02               	movlw	high _ConnTimeout
 31389  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31390  0008B4  0E20               	movlw	32
 31391  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31392  0008B8  0E4E               	movlw	78
 31393  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31394  0008BC  0E00               	movlw	0
 31395  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31396  0008C0  0E00               	movlw	0
 31397  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31398  0008C4  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31399  0008C8  D06D               	goto	l15841
 31400  0008CA                     
 31401                           ; BSR set to: 1
 31402                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31403                           
 31404                           ; BSR set to: 1
 31405  0008CA  0E3C               	movlw	low _NewStringReceived
 31406  0008CC  0100               	movlb	0	; () banked
 31407  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31408  0008D0  0E00               	movlw	high _NewStringReceived
 31409  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31410  0008D4  ECF6  F032         	call	_ReceiveEvt	;wreg free
 31411  0008D8  0900               	iorlw	0
 31412  0008DA  B4D8               	btfsc	status,2,c
 31413  0008DC  D018               	goto	l1268
 31414                           
 31415                           ;mdm_gsm_gprs_http.c: 400: {
 31416                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31417  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31418  0008E2  0A4F               	xorlw	79
 31419  0008E4  A4D8               	btfss	status,2,c
 31420  0008E6  D0E7               	goto	l1255
 31421  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31422  0008EC  0A4B               	xorlw	75
 31423  0008EE  A4D8               	btfss	status,2,c
 31424  0008F0  D0E2               	goto	l1255
 31425                           
 31426                           ;mdm_gsm_gprs_http.c: 403: {
 31427                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31428  0008F2  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31429                           
 31430                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31431  0008F6  0E58               	movlw	low _RxBuffer
 31432  0008F8  0100               	movlb	0	; () banked
 31433  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31434  0008FC  0E0C               	movlw	high _RxBuffer
 31435  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31436  000900  0E01               	movlw	1
 31437  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31438  000904  0E90               	movlw	144
 31439  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31440  000908  EC18  F032         	call	_ClearBuffer	;wreg free
 31441                           
 31442                           ;mdm_gsm_gprs_http.c: 408: }
 31443                           ;mdm_gsm_gprs_http.c: 409: }
 31444  00090C  D0D4               	goto	l1255
 31445  00090E                     l1268:
 31446                           
 31447                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31448  00090E  0EF5               	movlw	low _ConnTimeout
 31449  000910  0100               	movlb	0	; () banked
 31450  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31451  000914  0E02               	movlw	high _ConnTimeout
 31452  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31453  000918  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31454  00091C                     L71:
 31455  00091C  06E8               	decf	wreg,f,c
 31456  00091E  A4D8               	btfss	status,2,c
 31457  000920  D0CA               	goto	l1255
 31458                           
 31459                           ;mdm_gsm_gprs_http.c: 411: {
 31460                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31461  000922  0E0F               	movlw	15
 31462  000924                     L70:
 31463  000924  0101               	movlb	1	; () banked
 31464  000926  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31465                           
 31466                           ; BSR set to: 1
 31467                           ;mdm_gsm_gprs_http.c: 414: }
 31468                           ;mdm_gsm_gprs_http.c: 415: break;
 31469                           
 31470                           ; BSR set to: 1
 31471  000928  D0C6               	goto	l1255
 31472  00092A                     
 31473                           ; BSR set to: 1
 31474                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31475                           
 31476                           ; BSR set to: 1
 31477  00092A  0E3C               	movlw	low _NewStringReceived
 31478  00092C  0100               	movlb	0	; () banked
 31479  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31480  000930  0E00               	movlw	high _NewStringReceived
 31481  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31482  000934  ECF6  F032         	call	_ReceiveEvt	;wreg free
 31483  000938  0900               	iorlw	0
 31484  00093A  B4D8               	btfsc	status,2,c
 31485  00093C  D018               	goto	l1273
 31486                           
 31487                           ;mdm_gsm_gprs_http.c: 420: {
 31488                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31489  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31490  000942  0A2B               	xorlw	43
 31491  000944  A4D8               	btfss	status,2,c
 31492  000946  D0B7               	goto	l1255
 31493  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31494  00094C  0A48               	xorlw	72
 31495  00094E  A4D8               	btfss	status,2,c
 31496  000950  D0B2               	goto	l1255
 31497                           
 31498                           ;mdm_gsm_gprs_http.c: 423: {
 31499                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31500  000952  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31501                           
 31502                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31503  000956  0E58               	movlw	low _RxBuffer
 31504  000958  0100               	movlb	0	; () banked
 31505  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31506  00095C  0E0C               	movlw	high _RxBuffer
 31507  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31508  000960  0E01               	movlw	1
 31509  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31510  000964  0E90               	movlw	144
 31511  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31512  000968  EC18  F032         	call	_ClearBuffer	;wreg free
 31513                           
 31514                           ;mdm_gsm_gprs_http.c: 428: }
 31515                           ;mdm_gsm_gprs_http.c: 429: }
 31516  00096C  D0A4               	goto	l1255
 31517  00096E                     l1273:
 31518                           
 31519                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31520  00096E  0EF5               	movlw	low _ConnTimeout
 31521  000970  0100               	movlb	0	; () banked
 31522  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31523  000974  0E02               	movlw	high _ConnTimeout
 31524  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31525  000978  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31526  00097C  D7CF               	goto	L71
 31527  00097E                     
 31528                           ; BSR set to: 1
 31529                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31530                           
 31531                           ; BSR set to: 1
 31532  00097E  0E0C               	movlw	12
 31533  000980  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31534                           
 31535                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31536  000982  0E05               	movlw	5
 31537  000984  0100               	movlb	0	; () banked
 31538  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31539                           
 31540                           ; BSR set to: 0
 31541                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31542  000988  0EDF               	movlw	low _ConnWait
 31543  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31544  00098C  0E03               	movlw	high _ConnWait
 31545  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31546  000990  0EE8               	movlw	232
 31547  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31548  000994  0E03               	movlw	3
 31549  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31550  000998  0E00               	movlw	0
 31551  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31552  00099C  0E00               	movlw	0
 31553  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31554  0009A0  EC49  F02C         	call	_OsTmr_StartTimer	;wreg free
 31555  0009A4                     l15841:
 31556                           
 31557                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31558  0009A4  0E01               	movlw	1
 31559  0009A6  0101               	movlb	1	; () banked
 31560  0009A8  D053               	goto	L73
 31561  0009AA                     
 31562                           ; BSR set to: 1
 31563                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31564                           
 31565                           ; BSR set to: 1
 31566  0009AA  0EDF               	movlw	low _ConnWait
 31567  0009AC  0100               	movlb	0	; () banked
 31568  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31569  0009B0  0E03               	movlw	high _ConnWait
 31570  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31571  0009B4  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31572  0009B8  06E8               	decf	wreg,f,c
 31573  0009BA  A4D8               	btfss	status,2,c
 31574  0009BC  D07C               	goto	l1255
 31575                           
 31576                           ;mdm_gsm_gprs_http.c: 450: {
 31577                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31578  0009BE  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31579                           
 31580                           ;mdm_gsm_gprs_http.c: 453: }
 31581                           ;mdm_gsm_gprs_http.c: 454: break;
 31582  0009C2  D079               	goto	l1255
 31583  0009C4                     
 31584                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31585  0009C4  0E3C               	movlw	low _NewStringReceived
 31586  0009C6  0100               	movlb	0	; () banked
 31587  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31588  0009CA  0E00               	movlw	high _NewStringReceived
 31589  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31590  0009CE  ECF6  F032         	call	_ReceiveEvt	;wreg free
 31591  0009D2  0900               	iorlw	0
 31592  0009D4  B4D8               	btfsc	status,2,c
 31593  0009D6  D02D               	goto	l1281
 31594                           
 31595                           ;mdm_gsm_gprs_http.c: 459: {
 31596                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31597  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31598  0009DC  0A2B               	xorlw	43
 31599  0009DE  A4D8               	btfss	status,2,c
 31600  0009E0  D06A               	goto	l1255
 31601  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31602  0009E6  0A48               	xorlw	72
 31603  0009E8  A4D8               	btfss	status,2,c
 31604  0009EA  D065               	goto	l1255
 31605                           
 31606                           ;mdm_gsm_gprs_http.c: 462: {
 31607                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31608  0009EC  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31609                           
 31610                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31611  0009F0  0E58               	movlw	low _RxBuffer
 31612  0009F2  0100               	movlb	0	; () banked
 31613  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31614  0009F6  0E0C               	movlw	high _RxBuffer
 31615  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31616  0009FA  EE20 F003          	lfsr	2,3
 31617  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31618  000A00  26D9               	addwf	fsr2l,f,c
 31619  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31620  000A04  22DA               	addwfc	fsr2h,f,c
 31621  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31622  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31623  000A0E  0E01               	movlw	1
 31624  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31625  000A12  0E90               	movlw	144
 31626  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31627  000A16  ECE9  F02B         	call	_StringCopy	;wreg free
 31628                           
 31629                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31630  000A1A  0E58               	movlw	low _RxBuffer
 31631  000A1C  0100               	movlb	0	; () banked
 31632  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31633  000A20  0E0C               	movlw	high _RxBuffer
 31634  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31635  000A24  0E01               	movlw	1
 31636  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31637  000A28  0E90               	movlw	144
 31638  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31639  000A2C  EC18  F032         	call	_ClearBuffer	;wreg free
 31640                           
 31641                           ;mdm_gsm_gprs_http.c: 469: }
 31642                           ;mdm_gsm_gprs_http.c: 470: }
 31643  000A30  D042               	goto	l1255
 31644  000A32                     l1281:
 31645                           
 31646                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31647  000A32  0EF5               	movlw	low _ConnTimeout
 31648  000A34  0100               	movlb	0	; () banked
 31649  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31650  000A38  0E02               	movlw	high _ConnTimeout
 31651  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31652  000A3C  ECFE  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31653  000A40  D76D               	goto	L71
 31654  000A42                     
 31655                           ; BSR set to: 1
 31656                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31657                           
 31658                           ; BSR set to: 1
 31659  000A42  0E00               	movlw	0
 31660  000A44  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31661                           
 31662                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31663  000A46  0E02               	movlw	2
 31664  000A48  D003               	goto	L73
 31665  000A4A                     
 31666                           ; BSR set to: 1
 31667                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31668                           
 31669                           ; BSR set to: 1
 31670  000A4A  0E00               	movlw	0
 31671  000A4C  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31672                           
 31673                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31674  000A4E  0E03               	movlw	3
 31675  000A50                     L73:
 31676  000A50  6FE6               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31677                           
 31678                           ; BSR set to: 1
 31679                           ;mdm_gsm_gprs_http.c: 494: }
 31680                           
 31681                           ; BSR set to: 1
 31682                           ;mdm_gsm_gprs_http.c: 493: break;
 31683                           
 31684                           ;mdm_gsm_gprs_http.c: 492: default:
 31685                           
 31686                           ;mdm_gsm_gprs_http.c: 490: break;
 31687  000A52  D031               	goto	l1255
 31688  000A54                     l1252:
 31689                           
 31690                           ; BSR set to: 1
 31691                           
 31692                           ; BSR set to: 1
 31693  000A54  51E7               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31694                           
 31695                           ; Switch size 1, requested type "space"
 31696                           ; Number of cases is 16, Range of values is 0 to 15
 31697                           ; switch strategies available:
 31698                           ; Name         Instructions Cycles
 31699                           ; simple_byte           49    25 (average)
 31700                           ;	Chosen strategy is simple_byte
 31701  000A56  0A00               	xorlw	0	; case 0
 31702  000A58  B4D8               	btfsc	status,2,c
 31703  000A5A  D5CC               	goto	l1253
 31704  000A5C  0A01               	xorlw	1	; case 1
 31705  000A5E  B4D8               	btfsc	status,2,c
 31706  000A60  D5D5               	goto	l1256
 31707  000A62  0A03               	xorlw	3	; case 2
 31708  000A64  B4D8               	btfsc	status,2,c
 31709  000A66  D5EF               	goto	l1257
 31710  000A68  0A01               	xorlw	1	; case 3
 31711  000A6A  B4D8               	btfsc	status,2,c
 31712  000A6C  D609               	goto	l1258
 31713  000A6E  0A07               	xorlw	7	; case 4
 31714  000A70  B4D8               	btfsc	status,2,c
 31715  000A72  D623               	goto	l1259
 31716  000A74  0A01               	xorlw	1	; case 5
 31717  000A76  B4D8               	btfsc	status,2,c
 31718  000A78  D6BC               	goto	l1263
 31719  000A7A  0A03               	xorlw	3	; case 6
 31720  000A7C  B4D8               	btfsc	status,2,c
 31721  000A7E  D6D6               	goto	l1264
 31722  000A80  0A01               	xorlw	1	; case 7
 31723  000A82  B4D8               	btfsc	status,2,c
 31724  000A84  D752               	goto	l1272
 31725  000A86  0A0F               	xorlw	15	; case 8
 31726  000A88  B4D8               	btfsc	status,2,c
 31727  000A8A  D6E5               	goto	l1265
 31728  000A8C  0A01               	xorlw	1	; case 9
 31729  000A8E  B4D8               	btfsc	status,2,c
 31730  000A90  D6FF               	goto	l1266
 31731  000A92  0A03               	xorlw	3	; case 10
 31732  000A94  B4D8               	btfsc	status,2,c
 31733  000A96  D719               	goto	l1267
 31734  000A98  0A01               	xorlw	1	; case 11
 31735  000A9A  B4D8               	btfsc	status,2,c
 31736  000A9C  D770               	goto	l1277
 31737  000A9E  0A07               	xorlw	7	; case 12
 31738  000AA0  B4D8               	btfsc	status,2,c
 31739  000AA2  D783               	goto	l1278
 31740  000AA4  0A01               	xorlw	1	; case 13
 31741  000AA6  B4D8               	btfsc	status,2,c
 31742  000AA8  D78D               	goto	l1280
 31743  000AAA  0A03               	xorlw	3	; case 14
 31744  000AAC  B4D8               	btfsc	status,2,c
 31745  000AAE  D7C9               	goto	l1285
 31746  000AB0  0A01               	xorlw	1	; case 15
 31747  000AB2  B4D8               	btfsc	status,2,c
 31748  000AB4  D7CA               	goto	l1286
 31749  000AB6                     l1255:
 31750                           
 31751                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31752                           
 31753                           ; BSR set to: 1
 31754  000AB6  0101               	movlb	1	; () banked
 31755  000AB8  51E6               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31756  000ABA  0012               	return	
 31757  000ABC                     __end_of_HttpGetMethod:
 31758                           	opt stack 0
 31759                           tosu	equ	0xFFF
 31760                           tosh	equ	0xFFE
 31761                           tosl	equ	0xFFD
 31762                           pclath	equ	0xFFA
 31763                           tblptru	equ	0xFF8
 31764                           tblptrh	equ	0xFF7
 31765                           tblptrl	equ	0xFF6
 31766                           tablat	equ	0xFF5
 31767                           prodh	equ	0xFF4
 31768                           prodl	equ	0xFF3
 31769                           intcon	equ	0xFF2
 31770                           intcon2	equ	0xFF1
 31771                           intcon3	equ	0xFF0
 31772                           indf0	equ	0xFEF
 31773                           postinc0	equ	0xFEE
 31774                           plusw0	equ	0xFEB
 31775                           fsr0h	equ	0xFEA
 31776                           fsr0l	equ	0xFE9
 31777                           wreg	equ	0xFE8
 31778                           indf1	equ	0xFE7
 31779                           postinc1	equ	0xFE6
 31780                           postdec1	equ	0xFE5
 31781                           plusw1	equ	0xFE3
 31782                           fsr1h	equ	0xFE2
 31783                           fsr1l	equ	0xFE1
 31784                           indf2	equ	0xFDF
 31785                           postinc2	equ	0xFDE
 31786                           postdec2	equ	0xFDD
 31787                           plusw2	equ	0xFDB
 31788                           fsr2h	equ	0xFDA
 31789                           fsr2l	equ	0xFD9
 31790                           status	equ	0xFD8
 31791                           
 31792 ;; *************** function _Uart_WriteString *****************
 31793 ;; Defined at:
 31794 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31795 ;; Parameters:    Size  Location     Type
 31796 ;;  Module          1    wreg     unsigned char 
 31797 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31798 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31799 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31800 ;; Auto vars:     Size  Location     Type
 31801 ;;  Module          1   34[BANK0 ] unsigned char 
 31802 ;; Return value:  Size  Location     Type
 31803 ;;                  1    wreg      void 
 31804 ;; Registers used:
 31805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31806 ;; Tracked objects:
 31807 ;;		On entry : 0/0
 31808 ;;		On exit  : 0/0
 31809 ;;		Unchanged: 0/0
 31810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31814 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31815 ;;Total ram usage:        3 bytes
 31816 ;; Hardware stack levels used:    1
 31817 ;; Hardware stack levels required when called:   12
 31818 ;; This function calls:
 31819 ;;		_UartTxBufferStatus
 31820 ;;		_UartWriteByte
 31821 ;; This function is called by:
 31822 ;;		_Mdm_SetSmsFormat
 31823 ;;		_InitGprsNetwork
 31824 ;;		_HttpGetMethod
 31825 ;;		_Mdm_PinUnlock
 31826 ;;		_Mdm_MakePhoneCall
 31827 ;; This function uses a non-reentrant model
 31828 ;;
 31829                           
 31830                           	psect	text144
 31831  00629A                     __ptext144:
 31832                           	opt stack 0
 31833  00629A                     _Uart_WriteString:
 31834                           	opt stack 12
 31835                           
 31836                           ; BSR set to: 1
 31837                           ;incstack = 0
 31838                           ;Uart_WriteString@Module stored from wreg
 31839  00629A  0100               	movlb	0	; () banked
 31840  00629C  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31841                           
 31842                           ;uart_drv.c: 521: while (*StringToWrite)
 31843  00629E  D014               	goto	u12210
 31844  0062A0                     
 31845                           ;uart_drv.c: 522: {
 31846                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31847  0062A0  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31848  0062A4  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31849  0062A8  50DF               	movf	indf2,w,c
 31850  0062AA  0100               	movlb	0	; () banked
 31851  0062AC  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31852  0062AE  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31853  0062B0  EC42  F034         	call	_UartWriteByte
 31854                           
 31855                           ;uart_drv.c: 526: StringToWrite++;
 31856  0062B4  0100               	movlb	0	; () banked
 31857  0062B6  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31858  0062B8  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31859  0062BA                     
 31860                           ; BSR set to: 0
 31861                           
 31862                           ; BSR set to: 0
 31863  0062BA  0100               	movlb	0	; () banked
 31864  0062BC  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31865  0062BE  EC44  F02F         	call	_UartTxBufferStatus
 31866  0062C2  06E8               	decf	wreg,f,c
 31867  0062C4  B4D8               	btfsc	status,2,c
 31868  0062C6  D7F9               	goto	l709
 31869  0062C8                     u12210:
 31870  0062C8  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31871  0062CC  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31872  0062D0  50DF               	movf	indf2,w,c
 31873  0062D2  B4D8               	btfsc	status,2,c
 31874  0062D4  0012               	return	
 31875  0062D6  D7E4               	goto	l707
 31876  0062D8                     __end_of_Uart_WriteString:
 31877                           	opt stack 0
 31878                           tosu	equ	0xFFF
 31879                           tosh	equ	0xFFE
 31880                           tosl	equ	0xFFD
 31881                           pclath	equ	0xFFA
 31882                           tblptru	equ	0xFF8
 31883                           tblptrh	equ	0xFF7
 31884                           tblptrl	equ	0xFF6
 31885                           tablat	equ	0xFF5
 31886                           prodh	equ	0xFF4
 31887                           prodl	equ	0xFF3
 31888                           intcon	equ	0xFF2
 31889                           intcon2	equ	0xFF1
 31890                           intcon3	equ	0xFF0
 31891                           indf0	equ	0xFEF
 31892                           postinc0	equ	0xFEE
 31893                           plusw0	equ	0xFEB
 31894                           fsr0h	equ	0xFEA
 31895                           fsr0l	equ	0xFE9
 31896                           wreg	equ	0xFE8
 31897                           indf1	equ	0xFE7
 31898                           postinc1	equ	0xFE6
 31899                           postdec1	equ	0xFE5
 31900                           plusw1	equ	0xFE3
 31901                           fsr1h	equ	0xFE2
 31902                           fsr1l	equ	0xFE1
 31903                           indf2	equ	0xFDF
 31904                           postinc2	equ	0xFDE
 31905                           postdec2	equ	0xFDD
 31906                           plusw2	equ	0xFDB
 31907                           fsr2h	equ	0xFDA
 31908                           fsr2l	equ	0xFD9
 31909                           status	equ	0xFD8
 31910                           
 31911 ;; *************** function _Uart_WriteConstString *****************
 31912 ;; Defined at:
 31913 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31914 ;; Parameters:    Size  Location     Type
 31915 ;;  Module          1    wreg     unsigned char 
 31916 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 31917 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 31918 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 31919 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 31920 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 31921 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 31922 ;; Auto vars:     Size  Location     Type
 31923 ;;  Module          1   34[BANK0 ] unsigned char 
 31924 ;; Return value:  Size  Location     Type
 31925 ;;                  1    wreg      void 
 31926 ;; Registers used:
 31927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31928 ;; Tracked objects:
 31929 ;;		On entry : 0/0
 31930 ;;		On exit  : 0/0
 31931 ;;		Unchanged: 0/0
 31932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;Total ram usage:        3 bytes
 31938 ;; Hardware stack levels used:    1
 31939 ;; Hardware stack levels required when called:   12
 31940 ;; This function calls:
 31941 ;;		_UartTxBufferStatus
 31942 ;;		_UartWriteByte
 31943 ;; This function is called by:
 31944 ;;		_CheckModem
 31945 ;;		_ConfigureModem
 31946 ;;		_GetSmsSm
 31947 ;;		_Mdm_HangPhoneCall
 31948 ;;		_InitGprsNetwork
 31949 ;;		_HttpGetMethod
 31950 ;;		_detectCmd
 31951 ;;		_initGprsModem
 31952 ;;		_Mdm_GetPhoneCall
 31953 ;;		_MdmHttp_SetSsl
 31954 ;; This function uses a non-reentrant model
 31955 ;;
 31956                           
 31957                           	psect	text145
 31958  00615A                     __ptext145:
 31959                           	opt stack 0
 31960  00615A                     _Uart_WriteConstString:
 31961                           	opt stack 11
 31962                           
 31963                           ;incstack = 0
 31964                           ;Uart_WriteConstString@Module stored from wreg
 31965  00615A  0100               	movlb	0	; () banked
 31966  00615C  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 31967                           
 31968                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 31969  00615E  D015               	goto	u11670
 31970  006160                     
 31971                           ;uart_drv.c: 500: {
 31972                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 31973  006160  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31974  006164  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31975  006168                     	if	0	;tblptru may be non-zero
 31976  006168                     	endif
 31977  006168                     	if	0	;tblptru may be non-zero
 31978  006168                     	endif
 31979  006168  0008               	tblrd		*
 31980  00616A  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 31981  00616E  0100               	movlb	0	; () banked
 31982  006170  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31983  006172  EC42  F034         	call	_UartWriteByte
 31984                           
 31985                           ;uart_drv.c: 504: ConstStringToWrite++;
 31986  006176  0100               	movlb	0	; () banked
 31987  006178  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 31988  00617A  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 31989  00617C                     
 31990                           ; BSR set to: 0
 31991                           
 31992                           ; BSR set to: 0
 31993  00617C  0100               	movlb	0	; () banked
 31994  00617E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31995  006180  EC44  F02F         	call	_UartTxBufferStatus
 31996  006184  06E8               	decf	wreg,f,c
 31997  006186  B4D8               	btfsc	status,2,c
 31998  006188  D7F9               	goto	l700
 31999  00618A                     u11670:
 32000  00618A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32001  00618E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32002  006192                     	if	0	;tblptru may be non-zero
 32003  006192                     	endif
 32004  006192                     	if	0	;tblptru may be non-zero
 32005  006192                     	endif
 32006  006192  0008               	tblrd		*
 32007  006194  50F5               	movf	tablat,w,c
 32008  006196  0900               	iorlw	0
 32009  006198  B4D8               	btfsc	status,2,c
 32010  00619A  0012               	return	
 32011  00619C  D7E1               	goto	l698
 32012  00619E                     __end_of_Uart_WriteConstString:
 32013                           	opt stack 0
 32014                           tosu	equ	0xFFF
 32015                           tosh	equ	0xFFE
 32016                           tosl	equ	0xFFD
 32017                           pclath	equ	0xFFA
 32018                           tblptru	equ	0xFF8
 32019                           tblptrh	equ	0xFF7
 32020                           tblptrl	equ	0xFF6
 32021                           tablat	equ	0xFF5
 32022                           prodh	equ	0xFF4
 32023                           prodl	equ	0xFF3
 32024                           intcon	equ	0xFF2
 32025                           intcon2	equ	0xFF1
 32026                           intcon3	equ	0xFF0
 32027                           indf0	equ	0xFEF
 32028                           postinc0	equ	0xFEE
 32029                           plusw0	equ	0xFEB
 32030                           fsr0h	equ	0xFEA
 32031                           fsr0l	equ	0xFE9
 32032                           wreg	equ	0xFE8
 32033                           indf1	equ	0xFE7
 32034                           postinc1	equ	0xFE6
 32035                           postdec1	equ	0xFE5
 32036                           plusw1	equ	0xFE3
 32037                           fsr1h	equ	0xFE2
 32038                           fsr1l	equ	0xFE1
 32039                           indf2	equ	0xFDF
 32040                           postinc2	equ	0xFDE
 32041                           postdec2	equ	0xFDD
 32042                           plusw2	equ	0xFDB
 32043                           fsr2h	equ	0xFDA
 32044                           fsr2l	equ	0xFD9
 32045                           status	equ	0xFD8
 32046                           
 32047 ;; *************** function _UartWriteByte *****************
 32048 ;; Defined at:
 32049 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32050 ;; Parameters:    Size  Location     Type
 32051 ;;  Module          1    wreg     unsigned char 
 32052 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32053 ;; Auto vars:     Size  Location     Type
 32054 ;;  Module          1   30[BANK0 ] unsigned char 
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  1    wreg      void 
 32057 ;; Registers used:
 32058 ;;		wreg, status,2, status,0
 32059 ;; Tracked objects:
 32060 ;;		On entry : 0/0
 32061 ;;		On exit  : 0/0
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32064 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32068 ;;Total ram usage:        2 bytes
 32069 ;; Hardware stack levels used:    1
 32070 ;; Hardware stack levels required when called:   11
 32071 ;; This function calls:
 32072 ;;		Nothing
 32073 ;; This function is called by:
 32074 ;;		_Uart_WriteConstString
 32075 ;;		_Uart_WriteString
 32076 ;;		_Uart_WriteStringLen
 32077 ;; This function uses a non-reentrant model
 32078 ;;
 32079                           
 32080                           	psect	text146
 32081  006884                     __ptext146:
 32082                           	opt stack 0
 32083  006884                     _UartWriteByte:
 32084                           	opt stack 11
 32085                           
 32086                           ;incstack = 0
 32087                           ;UartWriteByte@Module stored from wreg
 32088  006884  0100               	movlb	0	; () banked
 32089  006886  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32090                           
 32091                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32092  006888  0100               	movlb	0	; () banked
 32093  00688A  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32094  00688C  A4D8               	btfss	status,2,c
 32095  00688E  D003               	goto	l639
 32096                           
 32097                           ; BSR set to: 0
 32098                           ;uart_drv.c: 176: {
 32099                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32100  006890  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32101                           
 32102                           ;uart_drv.c: 179: }
 32103  006894  0012               	return	
 32104  006896                     l639:
 32105                           
 32106                           ; BSR set to: 0
 32107                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32108                           
 32109                           ; BSR set to: 0
 32110  006896  0E02               	movlw	2
 32111  006898  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32112  00689A  A4D8               	btfss	status,2,c
 32113  00689C  0012               	return	
 32114                           
 32115                           ; BSR set to: 0
 32116                           ;uart_drv.c: 181: {
 32117                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32118  00689E  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32119                           
 32120                           ; BSR set to: 0
 32121  0068A2  0012               	return	
 32122  0068A4                     __end_of_UartWriteByte:
 32123                           	opt stack 0
 32124                           tosu	equ	0xFFF
 32125                           tosh	equ	0xFFE
 32126                           tosl	equ	0xFFD
 32127                           pclath	equ	0xFFA
 32128                           tblptru	equ	0xFF8
 32129                           tblptrh	equ	0xFF7
 32130                           tblptrl	equ	0xFF6
 32131                           tablat	equ	0xFF5
 32132                           prodh	equ	0xFF4
 32133                           prodl	equ	0xFF3
 32134                           intcon	equ	0xFF2
 32135                           intcon2	equ	0xFF1
 32136                           intcon3	equ	0xFF0
 32137                           indf0	equ	0xFEF
 32138                           postinc0	equ	0xFEE
 32139                           plusw0	equ	0xFEB
 32140                           fsr0h	equ	0xFEA
 32141                           fsr0l	equ	0xFE9
 32142                           wreg	equ	0xFE8
 32143                           indf1	equ	0xFE7
 32144                           postinc1	equ	0xFE6
 32145                           postdec1	equ	0xFE5
 32146                           plusw1	equ	0xFE3
 32147                           fsr1h	equ	0xFE2
 32148                           fsr1l	equ	0xFE1
 32149                           indf2	equ	0xFDF
 32150                           postinc2	equ	0xFDE
 32151                           postdec2	equ	0xFDD
 32152                           plusw2	equ	0xFDB
 32153                           fsr2h	equ	0xFDA
 32154                           fsr2l	equ	0xFD9
 32155                           status	equ	0xFD8
 32156                           
 32157 ;; *************** function _UartTxBufferStatus *****************
 32158 ;; Defined at:
 32159 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32160 ;; Parameters:    Size  Location     Type
 32161 ;;  Module          1    wreg     unsigned char 
 32162 ;; Auto vars:     Size  Location     Type
 32163 ;;  Module          1   30[BANK0 ] unsigned char 
 32164 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 32165 ;; Return value:  Size  Location     Type
 32166 ;;                  1    wreg      enum E9037
 32167 ;; Registers used:
 32168 ;;		wreg, status,2, status,0
 32169 ;; Tracked objects:
 32170 ;;		On entry : 0/0
 32171 ;;		On exit  : 0/0
 32172 ;;		Unchanged: 0/0
 32173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32177 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32178 ;;Total ram usage:        3 bytes
 32179 ;; Hardware stack levels used:    1
 32180 ;; Hardware stack levels required when called:   11
 32181 ;; This function calls:
 32182 ;;		Nothing
 32183 ;; This function is called by:
 32184 ;;		_Uart_WriteConstString
 32185 ;;		_Uart_WriteString
 32186 ;;		_Uart_WriteStringLen
 32187 ;; This function uses a non-reentrant model
 32188 ;;
 32189                           
 32190                           	psect	text147
 32191  005E88                     __ptext147:
 32192                           	opt stack 0
 32193  005E88                     _UartTxBufferStatus:
 32194                           	opt stack 11
 32195                           
 32196                           ; BSR set to: 0
 32197                           ;incstack = 0
 32198                           ;UartTxBufferStatus@Module stored from wreg
 32199  005E88  0100               	movlb	0	; () banked
 32200  005E8A  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 32201                           
 32202                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 32203  005E8C  0E00               	movlw	0
 32204  005E8E  0100               	movlb	0	; () banked
 32205  005E90  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32206                           
 32207                           ; BSR set to: 0
 32208                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 32209  005E92  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 32210  005E94  A4D8               	btfss	status,2,c
 32211  005E96  D00B               	goto	l651
 32212                           
 32213                           ; BSR set to: 0
 32214                           ;uart_drv.c: 228: {
 32215                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32216  005E98  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32217  005E9C  90D8               	bcf	status,0,c
 32218  005E9E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32219  005EA0  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 32220  005EA2  D002               	goto	l652
 32221  005EA4                     u11510:
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;uart_drv.c: 231: {
 32225                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 32226  005EA4  0E01               	movlw	1
 32227  005EA6  D014               	goto	L76
 32228  005EA8                     l652:
 32229                           
 32230                           ; BSR set to: 0
 32231                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32232                           
 32233                           ; BSR set to: 0
 32234  005EA8  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32235  005EAC  D00C               	goto	L105
 32236  005EAE                     l651:
 32237                           
 32238                           ; BSR set to: 0
 32239                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32240                           
 32241                           ; BSR set to: 0
 32242  005EAE  0E02               	movlw	2
 32243  005EB0  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32244  005EB2  A4D8               	btfss	status,2,c
 32245  005EB4  D00E               	goto	l660
 32246                           
 32247                           ; BSR set to: 0
 32248                           ;uart_drv.c: 244: {
 32249                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32250  005EB6  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32251  005EBA  90D8               	bcf	status,0,c
 32252  005EBC  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32253  005EBE  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32254  005EC0  D7F1               	goto	u11510
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32258                           
 32259                           ; BSR set to: 0
 32260                           
 32261                           ;uart_drv.c: 249: }
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;uart_drv.c: 247: {
 32265                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32266  005EC2  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32267  005EC6                     L105:
 32268  005EC6  90D8               	bcf	status,0,c
 32269  005EC8  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32270  005ECA  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32271  005ECC  D002               	goto	l660
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;uart_drv.c: 251: {
 32275                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32276  005ECE  0E02               	movlw	2
 32277  005ED0                     L76:
 32278  005ED0  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32279  005ED2                     l660:
 32280                           
 32281                           ; BSR set to: 0
 32282                           ;uart_drv.c: 257: }
 32283                           ;uart_drv.c: 258: }
 32284                           ;uart_drv.c: 260: return TxBufferStatus;
 32285                           
 32286                           ; BSR set to: 0
 32287                           
 32288                           ; BSR set to: 0
 32289                           
 32290                           ; BSR set to: 0
 32291                           
 32292                           ; BSR set to: 0
 32293                           
 32294                           ;uart_drv.c: 254: else
 32295                           ;uart_drv.c: 255: {
 32296                           
 32297                           ; BSR set to: 0
 32298  005ED2  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32299  005ED4  0012               	return	
 32300  005ED6                     __end_of_UartTxBufferStatus:
 32301                           	opt stack 0
 32302                           tosu	equ	0xFFF
 32303                           tosh	equ	0xFFE
 32304                           tosl	equ	0xFFD
 32305                           pclath	equ	0xFFA
 32306                           tblptru	equ	0xFF8
 32307                           tblptrh	equ	0xFF7
 32308                           tblptrl	equ	0xFF6
 32309                           tablat	equ	0xFF5
 32310                           prodh	equ	0xFF4
 32311                           prodl	equ	0xFF3
 32312                           intcon	equ	0xFF2
 32313                           intcon2	equ	0xFF1
 32314                           intcon3	equ	0xFF0
 32315                           indf0	equ	0xFEF
 32316                           postinc0	equ	0xFEE
 32317                           plusw0	equ	0xFEB
 32318                           fsr0h	equ	0xFEA
 32319                           fsr0l	equ	0xFE9
 32320                           wreg	equ	0xFE8
 32321                           indf1	equ	0xFE7
 32322                           postinc1	equ	0xFE6
 32323                           postdec1	equ	0xFE5
 32324                           plusw1	equ	0xFE3
 32325                           fsr1h	equ	0xFE2
 32326                           fsr1l	equ	0xFE1
 32327                           indf2	equ	0xFDF
 32328                           postinc2	equ	0xFDE
 32329                           postdec2	equ	0xFDD
 32330                           plusw2	equ	0xFDB
 32331                           fsr2h	equ	0xFDA
 32332                           fsr2l	equ	0xFD9
 32333                           status	equ	0xFD8
 32334                           
 32335 ;; *************** function _StringCopy *****************
 32336 ;; Defined at:
 32337 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32338 ;; Parameters:    Size  Location     Type
 32339 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32340 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32341 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32342 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32343 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32344 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32345 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32346 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32347 ;;  Len             2   41[BANK0 ] unsigned short 
 32348 ;; Auto vars:     Size  Location     Type
 32349 ;;  Index           2   45[BANK0 ] unsigned short 
 32350 ;; Return value:  Size  Location     Type
 32351 ;;                  1    wreg      void 
 32352 ;; Registers used:
 32353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32354 ;; Tracked objects:
 32355 ;;		On entry : 0/0
 32356 ;;		On exit  : 0/0
 32357 ;;		Unchanged: 0/0
 32358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32359 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32361 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;Total ram usage:       10 bytes
 32364 ;; Hardware stack levels used:    1
 32365 ;; Hardware stack levels required when called:   11
 32366 ;; This function calls:
 32367 ;;		Nothing
 32368 ;; This function is called by:
 32369 ;;		_ModemEvtParser
 32370 ;;		_GetSmsSm
 32371 ;;		_SendSmsSm
 32372 ;;		_Mdm_GetSmsData
 32373 ;;		_InitGprsNetwork
 32374 ;;		_HttpGetMethod
 32375 ;;		_Eeprom_Write
 32376 ;;		_detectCmd
 32377 ;;		_Mdm_SendSmsData
 32378 ;; This function uses a non-reentrant model
 32379 ;;
 32380                           
 32381                           	psect	text148
 32382  0057D2                     __ptext148:
 32383                           	opt stack 0
 32384  0057D2                     _StringCopy:
 32385                           	opt stack 13
 32386                           
 32387                           ;sf.c: 106: UINT16 Index = 0;
 32388                           
 32389                           ; BSR set to: 0
 32390                           ;incstack = 0
 32391  0057D2  0E00               	movlw	0
 32392  0057D4  0100               	movlb	0	; () banked
 32393  0057D6  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32394  0057D8  0E00               	movlw	0
 32395  0057DA  6F8D               	movwf	StringCopy@Index& (0+255),b
 32396                           
 32397                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32398  0057DC  0E00               	movlw	0
 32399  0057DE  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32400  0057E0  0E00               	movlw	0
 32401  0057E2  6F8D               	movwf	StringCopy@Index& (0+255),b
 32402  0057E4  D020               	goto	l2256
 32403  0057E6                     
 32404                           ; BSR set to: 0
 32405                           ;sf.c: 110: {
 32406                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32407                           
 32408                           ; BSR set to: 0
 32409  0057E6  518D               	movf	StringCopy@Index& (0+255),w,b
 32410  0057E8  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32411  0057EA  6F8B               	movwf	??_StringCopy& (0+255),b
 32412  0057EC  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32413  0057EE  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32414  0057F0  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32415  0057F2  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32416  0057F6  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32417  0057FA  6AF8               	clrf	tblptru,c
 32418  0057FC  518D               	movf	StringCopy@Index& (0+255),w,b
 32419  0057FE  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32420  005800  6ED9               	movwf	fsr2l,c
 32421  005802  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32422  005804  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32423  005806  6EDA               	movwf	fsr2h,c
 32424  005808  0E0E               	movlw	(high __ramtop+-1)
 32425  00580A  64F7               	cpfsgt	tblptrh,c
 32426  00580C  D003               	bra	u12237
 32427  00580E  0008               	tblrd		*
 32428  005810  50F5               	movf	tablat,w,c
 32429  005812  D005               	bra	u12230
 32430  005814                     u12237:
 32431  005814  CFF6 FFE9          	movff	tblptrl,fsr0l
 32432  005818  CFF7 FFEA          	movff	tblptrh,fsr0h
 32433  00581C  50EF               	movf	indf0,w,c
 32434  00581E                     u12230:
 32435  00581E  6EDF               	movwf	indf2,c
 32436  005820  0100               	movlb	0	; () banked
 32437  005822  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32438  005824  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32439  005826                     l2256:
 32440                           
 32441                           ; BSR set to: 0
 32442                           
 32443                           ; BSR set to: 0
 32444  005826  5189               	movf	StringCopy@Len& (0+255),w,b
 32445  005828  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32446  00582A  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32447  00582C  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32448  00582E  B0D8               	btfsc	status,0,c
 32449  005830  0012               	return	
 32450  005832  D7D9               	goto	l2257
 32451  005834                     __end_of_StringCopy:
 32452                           	opt stack 0
 32453                           tosu	equ	0xFFF
 32454                           tosh	equ	0xFFE
 32455                           tosl	equ	0xFFD
 32456                           pclath	equ	0xFFA
 32457                           tblptru	equ	0xFF8
 32458                           tblptrh	equ	0xFF7
 32459                           tblptrl	equ	0xFF6
 32460                           tablat	equ	0xFF5
 32461                           prodh	equ	0xFF4
 32462                           prodl	equ	0xFF3
 32463                           intcon	equ	0xFF2
 32464                           intcon2	equ	0xFF1
 32465                           intcon3	equ	0xFF0
 32466                           indf0	equ	0xFEF
 32467                           postinc0	equ	0xFEE
 32468                           plusw0	equ	0xFEB
 32469                           fsr0h	equ	0xFEA
 32470                           fsr0l	equ	0xFE9
 32471                           wreg	equ	0xFE8
 32472                           indf1	equ	0xFE7
 32473                           postinc1	equ	0xFE6
 32474                           postdec1	equ	0xFE5
 32475                           plusw1	equ	0xFE3
 32476                           fsr1h	equ	0xFE2
 32477                           fsr1l	equ	0xFE1
 32478                           indf2	equ	0xFDF
 32479                           postinc2	equ	0xFDE
 32480                           postdec2	equ	0xFDD
 32481                           plusw2	equ	0xFDB
 32482                           fsr2h	equ	0xFDA
 32483                           fsr2l	equ	0xFD9
 32484                           status	equ	0xFD8
 32485                           
 32486 ;; *************** function _OsTmr_StartTimer *****************
 32487 ;; Defined at:
 32488 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32489 ;; Parameters:    Size  Location     Type
 32490 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32491 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32492 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32493 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32494 ;; Auto vars:     Size  Location     Type
 32495 ;;		None
 32496 ;; Return value:  Size  Location     Type
 32497 ;;                  1    wreg      void 
 32498 ;; Registers used:
 32499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32500 ;; Tracked objects:
 32501 ;;		On entry : 0/0
 32502 ;;		On exit  : 0/0
 32503 ;;		Unchanged: 0/0
 32504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32505 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32508 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32509 ;;Total ram usage:        6 bytes
 32510 ;; Hardware stack levels used:    1
 32511 ;; Hardware stack levels required when called:   12
 32512 ;; This function calls:
 32513 ;;		_GetOsTickCounter
 32514 ;; This function is called by:
 32515 ;;		_OsTmr_Wait
 32516 ;;		_CheckModem
 32517 ;;		_SendSmsSm
 32518 ;;		_InitGprsNetwork
 32519 ;;		_HttpGetMethod
 32520 ;;		_I2cSlv_QueryI2cData
 32521 ;;		_Term_MainSm
 32522 ;; This function uses a non-reentrant model
 32523 ;;
 32524                           
 32525                           	psect	text149
 32526  005892                     __ptext149:
 32527                           	opt stack 0
 32528  005892                     _OsTmr_StartTimer:
 32529                           	opt stack 12
 32530                           
 32531                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32532                           
 32533                           ; BSR set to: 0
 32534                           ;incstack = 0
 32535  005892  0100               	movlb	0	; () banked
 32536  005894  EE20 F001          	lfsr	2,1
 32537  005898  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32538  00589A  26D9               	addwf	fsr2l,f,c
 32539  00589C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32540  00589E  22DA               	addwfc	fsr2h,f,c
 32541  0058A0  0E00               	movlw	0
 32542  0058A2  6EDF               	movwf	indf2,c
 32543                           
 32544                           ; BSR set to: 0
 32545                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32546  0058A4  EC3B  F035         	call	_GetOsTickCounter	;wreg free
 32547  0058A8  0100               	movlb	0	; () banked
 32548  0058AA  EE20 F002          	lfsr	2,2
 32549  0058AE  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32550  0058B0  26D9               	addwf	fsr2l,f,c
 32551  0058B2  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32552  0058B4  22DA               	addwfc	fsr2h,f,c
 32553  0058B6  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32554  0058BA  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32555  0058BE  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32556  0058C2  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32557                           
 32558                           ; BSR set to: 0
 32559                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32560  0058C6  EE20 F006          	lfsr	2,6
 32561  0058CA  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32562  0058CC  26D9               	addwf	fsr2l,f,c
 32563  0058CE  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32564  0058D0  22DA               	addwfc	fsr2h,f,c
 32565  0058D2  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32566  0058D6  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32567  0058DA  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32568  0058DE  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32569                           
 32570                           ; BSR set to: 0
 32571                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32572  0058E2  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32573  0058E6  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32574  0058EA  0E01               	movlw	1
 32575  0058EC  6EDF               	movwf	indf2,c
 32576                           
 32577                           ; BSR set to: 0
 32578  0058EE  0012               	return		;funcret
 32579  0058F0                     __end_of_OsTmr_StartTimer:
 32580                           	opt stack 0
 32581                           tosu	equ	0xFFF
 32582                           tosh	equ	0xFFE
 32583                           tosl	equ	0xFFD
 32584                           pclath	equ	0xFFA
 32585                           tblptru	equ	0xFF8
 32586                           tblptrh	equ	0xFF7
 32587                           tblptrl	equ	0xFF6
 32588                           tablat	equ	0xFF5
 32589                           prodh	equ	0xFF4
 32590                           prodl	equ	0xFF3
 32591                           intcon	equ	0xFF2
 32592                           intcon2	equ	0xFF1
 32593                           intcon3	equ	0xFF0
 32594                           indf0	equ	0xFEF
 32595                           postinc0	equ	0xFEE
 32596                           plusw0	equ	0xFEB
 32597                           fsr0h	equ	0xFEA
 32598                           fsr0l	equ	0xFE9
 32599                           wreg	equ	0xFE8
 32600                           indf1	equ	0xFE7
 32601                           postinc1	equ	0xFE6
 32602                           postdec1	equ	0xFE5
 32603                           plusw1	equ	0xFE3
 32604                           fsr1h	equ	0xFE2
 32605                           fsr1l	equ	0xFE1
 32606                           indf2	equ	0xFDF
 32607                           postinc2	equ	0xFDE
 32608                           postdec2	equ	0xFDD
 32609                           plusw2	equ	0xFDB
 32610                           fsr2h	equ	0xFDA
 32611                           fsr2l	equ	0xFD9
 32612                           status	equ	0xFD8
 32613                           
 32614 ;; *************** function _OsTmr_GetTimerStatus *****************
 32615 ;; Defined at:
 32616 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32617 ;; Parameters:    Size  Location     Type
 32618 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32619 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32620 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32621 ;; Auto vars:     Size  Location     Type
 32622 ;;		None
 32623 ;; Return value:  Size  Location     Type
 32624 ;;                  1    wreg      enum E7740
 32625 ;; Registers used:
 32626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32627 ;; Tracked objects:
 32628 ;;		On entry : 0/0
 32629 ;;		On exit  : 0/0
 32630 ;;		Unchanged: 0/0
 32631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32634 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32636 ;;Total ram usage:        6 bytes
 32637 ;; Hardware stack levels used:    1
 32638 ;; Hardware stack levels required when called:   13
 32639 ;; This function calls:
 32640 ;;		_GetElapsedTime
 32641 ;; This function is called by:
 32642 ;;		_OsTmr_Wait
 32643 ;;		_CheckModem
 32644 ;;		_SendSmsSm
 32645 ;;		_InitGprsNetwork
 32646 ;;		_HttpGetMethod
 32647 ;;		_I2cSlv_QueryI2cData
 32648 ;;		_Term_MainSm
 32649 ;; This function uses a non-reentrant model
 32650 ;;
 32651                           
 32652                           	psect	text150
 32653  004FFC                     __ptext150:
 32654                           	opt stack 0
 32655  004FFC                     _OsTmr_GetTimerStatus:
 32656                           	opt stack 11
 32657                           
 32658                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32659                           
 32660                           ; BSR set to: 0
 32661                           ;incstack = 0
 32662  004FFC  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32663  005000  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32664  005004  04DE               	decf	postinc2,w,c
 32665  005006  A4D8               	btfss	status,2,c
 32666  005008  D030               	goto	l864
 32667                           
 32668                           ;os_timers.c: 197: {
 32669                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32670  00500A  0100               	movlb	0	; () banked
 32671  00500C  EE20 F006          	lfsr	2,6
 32672  005010  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32673  005012  26D9               	addwf	fsr2l,f,c
 32674  005014  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32675  005016  22DA               	addwfc	fsr2h,f,c
 32676  005018  EE10 F002          	lfsr	1,2
 32677  00501C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32678  00501E  26E1               	addwf	fsr1l,f,c
 32679  005020  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32680  005022  22E2               	addwfc	fsr1h,f,c
 32681  005024  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32682  005028  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32683  00502C  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32684  005030  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32685  005034  EC70  F01F         	call	_GetElapsedTime	;wreg free
 32686  005038  50DE               	movf	postinc2,w,c
 32687  00503A  0100               	movlb	0	; () banked
 32688  00503C  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32689  00503E  50DE               	movf	postinc2,w,c
 32690  005040  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32691  005042  50DE               	movf	postinc2,w,c
 32692  005044  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32693  005046  50DE               	movf	postinc2,w,c
 32694  005048  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32695  00504A  A0D8               	btfss	status,0,c
 32696  00504C  D017               	goto	l867
 32697                           
 32698                           ; BSR set to: 0
 32699                           ;os_timers.c: 200: {
 32700                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32701  00504E  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32702  005052  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32703  005056  0E00               	movlw	0
 32704  005058  6EDF               	movwf	indf2,c
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32708  00505A  EE20 F001          	lfsr	2,1
 32709  00505E  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32710  005060  26D9               	addwf	fsr2l,f,c
 32711  005062  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32712  005064  22DA               	addwfc	fsr2h,f,c
 32713  005066  0E01               	movlw	1
 32714  005068  D008               	goto	L106
 32715  00506A                     l864:
 32716                           
 32717                           ;os_timers.c: 211: else
 32718                           ;os_timers.c: 212: {
 32719                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32720                           
 32721                           ; BSR set to: 0
 32722  00506A  0100               	movlb	0	; () banked
 32723  00506C  EE20 F001          	lfsr	2,1
 32724  005070  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32725  005072  26D9               	addwf	fsr2l,f,c
 32726  005074  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32727  005076  22DA               	addwfc	fsr2h,f,c
 32728  005078  0E02               	movlw	2
 32729  00507A                     L106:
 32730  00507A  6EDF               	movwf	indf2,c
 32731  00507C                     l867:
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;os_timers.c: 215: }
 32735                           ;os_timers.c: 218: return Timer->Status;
 32736  00507C  EE20 F001          	lfsr	2,1
 32737  005080  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32738  005082  26D9               	addwf	fsr2l,f,c
 32739  005084  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32740  005086  22DA               	addwfc	fsr2h,f,c
 32741  005088  50DF               	movf	indf2,w,c
 32742  00508A  0012               	return	
 32743  00508C                     __end_of_OsTmr_GetTimerStatus:
 32744                           	opt stack 0
 32745                           tosu	equ	0xFFF
 32746                           tosh	equ	0xFFE
 32747                           tosl	equ	0xFFD
 32748                           pclath	equ	0xFFA
 32749                           tblptru	equ	0xFF8
 32750                           tblptrh	equ	0xFF7
 32751                           tblptrl	equ	0xFF6
 32752                           tablat	equ	0xFF5
 32753                           prodh	equ	0xFF4
 32754                           prodl	equ	0xFF3
 32755                           intcon	equ	0xFF2
 32756                           intcon2	equ	0xFF1
 32757                           intcon3	equ	0xFF0
 32758                           indf0	equ	0xFEF
 32759                           postinc0	equ	0xFEE
 32760                           plusw0	equ	0xFEB
 32761                           fsr0h	equ	0xFEA
 32762                           fsr0l	equ	0xFE9
 32763                           wreg	equ	0xFE8
 32764                           indf1	equ	0xFE7
 32765                           postinc1	equ	0xFE6
 32766                           postdec1	equ	0xFE5
 32767                           plusw1	equ	0xFE3
 32768                           fsr1h	equ	0xFE2
 32769                           fsr1l	equ	0xFE1
 32770                           indf2	equ	0xFDF
 32771                           postinc2	equ	0xFDE
 32772                           postdec2	equ	0xFDD
 32773                           plusw2	equ	0xFDB
 32774                           fsr2h	equ	0xFDA
 32775                           fsr2l	equ	0xFD9
 32776                           status	equ	0xFD8
 32777                           
 32778 ;; *************** function _GetElapsedTime *****************
 32779 ;; Defined at:
 32780 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32781 ;; Parameters:    Size  Location     Type
 32782 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32783 ;; Auto vars:     Size  Location     Type
 32784 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32785 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32786 ;; Return value:  Size  Location     Type
 32787 ;;                  4   33[BANK0 ] unsigned long 
 32788 ;; Registers used:
 32789 ;;		wreg, status,2, status,0, cstack
 32790 ;; Tracked objects:
 32791 ;;		On entry : 0/0
 32792 ;;		On exit  : 0/0
 32793 ;;		Unchanged: 0/0
 32794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32797 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32798 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32799 ;;Total ram usage:       20 bytes
 32800 ;; Hardware stack levels used:    1
 32801 ;; Hardware stack levels required when called:   12
 32802 ;; This function calls:
 32803 ;;		_GetOsTickCounter
 32804 ;; This function is called by:
 32805 ;;		_OsTmr_GetTimerStatus
 32806 ;;		_OsTmr_GetRemainingTime
 32807 ;; This function uses a non-reentrant model
 32808 ;;
 32809                           
 32810                           	psect	text151
 32811  003EE0                     __ptext151:
 32812                           	opt stack 0
 32813  003EE0                     _GetElapsedTime:
 32814                           	opt stack 11
 32815                           
 32816                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32817                           ;os_timers.c: 87: UINT32 TimeValue;
 32818                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32819                           
 32820                           ; BSR set to: 0
 32821                           ;incstack = 0
 32822  003EE0  EC3B  F035         	call	_GetOsTickCounter	;wreg free
 32823  003EE4  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32824  003EE8  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32825  003EEC  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32826  003EF0  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32827                           
 32828                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32829  003EF4  0100               	movlb	0	; () banked
 32830  003EF6  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32831  003EF8  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32832  003EFA  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32833  003EFC  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32834  003EFE  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32835  003F00  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32836  003F02  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32837  003F04  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32838  003F06  A0D8               	btfss	status,0,c
 32839  003F08  D01D               	goto	l844
 32840                           
 32841                           ; BSR set to: 0
 32842                           ;os_timers.c: 94: {
 32843                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32844  003F0A  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32845  003F0E  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32846  003F12  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32847  003F16  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32848  003F1A  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32849  003F1C  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32850  003F1E  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32851  003F20  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32852  003F22  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32853  003F24  0E00               	movlw	0
 32854  003F26  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32855  003F28  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32856  003F2A  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32857  003F2C  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32858  003F2E  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32859  003F30  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32860  003F32  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32861  003F34  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32862  003F36  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32863  003F38  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32864  003F3A  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32865  003F3C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32866  003F3E  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32867  003F40  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32868  003F42  D028               	goto	L77
 32869  003F44                     l844:
 32870                           
 32871                           ; BSR set to: 0
 32872                           ;os_timers.c: 97: else
 32873                           ;os_timers.c: 98: {
 32874                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32875                           
 32876                           ; BSR set to: 0
 32877  003F44  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32878  003F48  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32879  003F4C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32880  003F50  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32881  003F54  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32882  003F56  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32883  003F58  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32884  003F5A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32885  003F5C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32886  003F5E  0E00               	movlw	0
 32887  003F60  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32888  003F62  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32889  003F64  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32890  003F66  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32891  003F68  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32892  003F6A  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 32893  003F6C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32894  003F6E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32895  003F70  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 32896  003F72  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32897  003F74  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32898  003F76  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 32899  003F78  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32900  003F7A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32901  003F7C  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 32902  003F7E  0EFF               	movlw	255
 32903  003F80  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 32904  003F82  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32905  003F84  0EFF               	movlw	255
 32906  003F86  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 32907  003F88  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32908  003F8A  0EFF               	movlw	255
 32909  003F8C  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 32910  003F8E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32911  003F90  0EFF               	movlw	255
 32912  003F92  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 32913  003F94                     L77:
 32914  003F94  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 32915                           
 32916                           ; BSR set to: 0
 32917                           ;os_timers.c: 100: }
 32918                           ;os_timers.c: 102: return TimeValue;
 32919                           
 32920                           ; BSR set to: 0
 32921  003F96  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 32922  003F9A  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 32923  003F9E  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 32924  003FA2  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 32925  003FA6  0012               	return	
 32926  003FA8                     __end_of_GetElapsedTime:
 32927                           	opt stack 0
 32928                           tosu	equ	0xFFF
 32929                           tosh	equ	0xFFE
 32930                           tosl	equ	0xFFD
 32931                           pclath	equ	0xFFA
 32932                           tblptru	equ	0xFF8
 32933                           tblptrh	equ	0xFF7
 32934                           tblptrl	equ	0xFF6
 32935                           tablat	equ	0xFF5
 32936                           prodh	equ	0xFF4
 32937                           prodl	equ	0xFF3
 32938                           intcon	equ	0xFF2
 32939                           intcon2	equ	0xFF1
 32940                           intcon3	equ	0xFF0
 32941                           indf0	equ	0xFEF
 32942                           postinc0	equ	0xFEE
 32943                           plusw0	equ	0xFEB
 32944                           fsr0h	equ	0xFEA
 32945                           fsr0l	equ	0xFE9
 32946                           wreg	equ	0xFE8
 32947                           indf1	equ	0xFE7
 32948                           postinc1	equ	0xFE6
 32949                           postdec1	equ	0xFE5
 32950                           plusw1	equ	0xFE3
 32951                           fsr1h	equ	0xFE2
 32952                           fsr1l	equ	0xFE1
 32953                           indf2	equ	0xFDF
 32954                           postinc2	equ	0xFDE
 32955                           postdec2	equ	0xFDD
 32956                           plusw2	equ	0xFDB
 32957                           fsr2h	equ	0xFDA
 32958                           fsr2l	equ	0xFD9
 32959                           status	equ	0xFD8
 32960                           
 32961 ;; *************** function _GetOsTickCounter *****************
 32962 ;; Defined at:
 32963 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32964 ;; Parameters:    Size  Location     Type
 32965 ;;		None
 32966 ;; Auto vars:     Size  Location     Type
 32967 ;;		None
 32968 ;; Return value:  Size  Location     Type
 32969 ;;                  4   29[BANK0 ] unsigned long 
 32970 ;; Registers used:
 32971 ;;		None
 32972 ;; Tracked objects:
 32973 ;;		On entry : 0/0
 32974 ;;		On exit  : 0/0
 32975 ;;		Unchanged: 0/0
 32976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32981 ;;Total ram usage:        4 bytes
 32982 ;; Hardware stack levels used:    1
 32983 ;; Hardware stack levels required when called:   11
 32984 ;; This function calls:
 32985 ;;		Nothing
 32986 ;; This function is called by:
 32987 ;;		_GetElapsedTime
 32988 ;;		_OsTmr_StartTimer
 32989 ;;		_OsTmr_GetElapsedTime
 32990 ;; This function uses a non-reentrant model
 32991 ;;
 32992                           
 32993                           	psect	text152
 32994  006A76                     __ptext152:
 32995                           	opt stack 0
 32996  006A76                     _GetOsTickCounter:
 32997                           	opt stack 12
 32998                           
 32999                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33000                           
 33001                           ; BSR set to: 0
 33002                           ;incstack = 0
 33003  006A76  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33004  006A7A  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33005  006A7E  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33006  006A82  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33007  006A86  0012               	return		;funcret
 33008  006A88                     __end_of_GetOsTickCounter:
 33009                           	opt stack 0
 33010                           tosu	equ	0xFFF
 33011                           tosh	equ	0xFFE
 33012                           tosl	equ	0xFFD
 33013                           pclath	equ	0xFFA
 33014                           tblptru	equ	0xFF8
 33015                           tblptrh	equ	0xFF7
 33016                           tblptrl	equ	0xFF6
 33017                           tablat	equ	0xFF5
 33018                           prodh	equ	0xFF4
 33019                           prodl	equ	0xFF3
 33020                           intcon	equ	0xFF2
 33021                           intcon2	equ	0xFF1
 33022                           intcon3	equ	0xFF0
 33023                           indf0	equ	0xFEF
 33024                           postinc0	equ	0xFEE
 33025                           plusw0	equ	0xFEB
 33026                           fsr0h	equ	0xFEA
 33027                           fsr0l	equ	0xFE9
 33028                           wreg	equ	0xFE8
 33029                           indf1	equ	0xFE7
 33030                           postinc1	equ	0xFE6
 33031                           postdec1	equ	0xFE5
 33032                           plusw1	equ	0xFE3
 33033                           fsr1h	equ	0xFE2
 33034                           fsr1l	equ	0xFE1
 33035                           indf2	equ	0xFDF
 33036                           postinc2	equ	0xFDE
 33037                           postdec2	equ	0xFDD
 33038                           plusw2	equ	0xFDB
 33039                           fsr2h	equ	0xFDA
 33040                           fsr2l	equ	0xFD9
 33041                           status	equ	0xFD8
 33042                           
 33043 ;; *************** function _ClearBuffer *****************
 33044 ;; Defined at:
 33045 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33046 ;; Parameters:    Size  Location     Type
 33047 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 33048 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 33049 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 33050 ;;  Len             2   31[BANK0 ] unsigned short 
 33051 ;; Auto vars:     Size  Location     Type
 33052 ;;  Index           2   33[BANK0 ] unsigned short 
 33053 ;; Return value:  Size  Location     Type
 33054 ;;                  1    wreg      void 
 33055 ;; Registers used:
 33056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33057 ;; Tracked objects:
 33058 ;;		On entry : 0/0
 33059 ;;		On exit  : 0/0
 33060 ;;		Unchanged: 0/0
 33061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33066 ;;Total ram usage:        6 bytes
 33067 ;; Hardware stack levels used:    1
 33068 ;; Hardware stack levels required when called:   11
 33069 ;; This function calls:
 33070 ;;		Nothing
 33071 ;; This function is called by:
 33072 ;;		_GetSmsSm
 33073 ;;		_GetCallerNumber
 33074 ;;		_InitGprsNetwork
 33075 ;;		_HttpGetMethod
 33076 ;;		_Eeprom_Reset
 33077 ;;		_GsmGprsTerminal
 33078 ;; This function uses a non-reentrant model
 33079 ;;
 33080                           
 33081                           	psect	text153
 33082  006430                     __ptext153:
 33083                           	opt stack 0
 33084  006430                     _ClearBuffer:
 33085                           	opt stack 14
 33086                           
 33087                           ;sf.c: 126: UINT16 Index = 0;
 33088                           
 33089                           ;incstack = 0
 33090  006430  0E00               	movlw	0
 33091  006432  0100               	movlb	0	; () banked
 33092  006434  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33093  006436  0E00               	movlw	0
 33094  006438  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33095                           
 33096                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33097  00643A  0E00               	movlw	0
 33098  00643C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33099  00643E  0E00               	movlw	0
 33100  006440  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33101  006442  D00A               	goto	l2262
 33102  006444                     
 33103                           ; BSR set to: 0
 33104                           ;sf.c: 130: {
 33105                           ;sf.c: 131: *(Buffer + Index) = 0;
 33106                           
 33107                           ; BSR set to: 0
 33108  006444  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33109  006446  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33110  006448  6ED9               	movwf	fsr2l,c
 33111  00644A  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33112  00644C  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33113  00644E  6EDA               	movwf	fsr2h,c
 33114  006450  0E00               	movlw	0
 33115  006452  6EDF               	movwf	indf2,c
 33116                           
 33117                           ; BSR set to: 0
 33118  006454  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33119  006456  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33120  006458                     l2262:
 33121                           
 33122                           ; BSR set to: 0
 33123                           
 33124                           ; BSR set to: 0
 33125  006458  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33126  00645A  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33127  00645C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33128  00645E  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33129  006460  A0D8               	btfss	status,0,c
 33130  006462  0012               	return	
 33131  006464  D7EF               	goto	l2263
 33132  006466                     __end_of_ClearBuffer:
 33133                           	opt stack 0
 33134                           tosu	equ	0xFFF
 33135                           tosh	equ	0xFFE
 33136                           tosl	equ	0xFFD
 33137                           pclath	equ	0xFFA
 33138                           tblptru	equ	0xFF8
 33139                           tblptrh	equ	0xFF7
 33140                           tblptrl	equ	0xFF6
 33141                           tablat	equ	0xFF5
 33142                           prodh	equ	0xFF4
 33143                           prodl	equ	0xFF3
 33144                           intcon	equ	0xFF2
 33145                           intcon2	equ	0xFF1
 33146                           intcon3	equ	0xFF0
 33147                           indf0	equ	0xFEF
 33148                           postinc0	equ	0xFEE
 33149                           plusw0	equ	0xFEB
 33150                           fsr0h	equ	0xFEA
 33151                           fsr0l	equ	0xFE9
 33152                           wreg	equ	0xFE8
 33153                           indf1	equ	0xFE7
 33154                           postinc1	equ	0xFE6
 33155                           postdec1	equ	0xFE5
 33156                           plusw1	equ	0xFE3
 33157                           fsr1h	equ	0xFE2
 33158                           fsr1l	equ	0xFE1
 33159                           indf2	equ	0xFDF
 33160                           postinc2	equ	0xFDE
 33161                           postdec2	equ	0xFDD
 33162                           plusw2	equ	0xFDB
 33163                           fsr2h	equ	0xFDA
 33164                           fsr2l	equ	0xFD9
 33165                           status	equ	0xFD8
 33166                           
 33167 ;; *************** function _LedStateMachine *****************
 33168 ;; Defined at:
 33169 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33170 ;; Parameters:    Size  Location     Type
 33171 ;;  Led             1    wreg     unsigned char 
 33172 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 33173 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 33174 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 33175 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 33176 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 33177 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33178 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 33179 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33180 ;; Auto vars:     Size  Location     Type
 33181 ;;  Led             1   57[BANK0 ] unsigned char 
 33182 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 33183 ;; Return value:  Size  Location     Type
 33184 ;;                  1    wreg      unsigned char 
 33185 ;; Registers used:
 33186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33187 ;; Tracked objects:
 33188 ;;		On entry : 0/0
 33189 ;;		On exit  : 0/0
 33190 ;;		Unchanged: 0/0
 33191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33195 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33196 ;;Total ram usage:       11 bytes
 33197 ;; Hardware stack levels used:    1
 33198 ;; Hardware stack levels required when called:   13
 33199 ;; This function calls:
 33200 ;;		_LedBlinkStateMachine
 33201 ;;		_LedPulseStateMachine
 33202 ;;		_Led_SetLedStatus
 33203 ;; This function is called by:
 33204 ;;		_Led_MainTask
 33205 ;; This function uses a non-reentrant model
 33206 ;;
 33207                           
 33208                           	psect	text154
 33209  004832                     __ptext154:
 33210                           	opt stack 0
 33211  004832                     _LedStateMachine:
 33212                           	opt stack 14
 33213                           
 33214                           ; BSR set to: 0
 33215                           ;incstack = 0
 33216                           ;LedStateMachine@Led stored from wreg
 33217  004832  0100               	movlb	0	; () banked
 33218  004834  6F99               	movwf	LedStateMachine@Led& (0+255),b
 33219                           
 33220                           ;led.c: 238: UINT8 LedOutSts = 0u;
 33221  004836  0E00               	movlw	0
 33222  004838  0100               	movlb	0	; () banked
 33223  00483A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33224                           
 33225                           ;led.c: 241: switch (*LedSts)
 33226  00483C  D037               	goto	l2121
 33227  00483E                     
 33228                           ; BSR set to: 0
 33229                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 33230                           
 33231                           ; BSR set to: 0
 33232  00483E  0E00               	movlw	0
 33233  004840  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33234                           
 33235                           ; BSR set to: 0
 33236                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33237  004842  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33238  004846  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33239  00484A  0E00               	movlw	0
 33240  00484C  D007               	goto	L78
 33241  00484E                     
 33242                           ; BSR set to: 0
 33243                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33244                           
 33245                           ; BSR set to: 0
 33246  00484E  0E01               	movlw	1
 33247  004850  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33248                           
 33249                           ; BSR set to: 0
 33250                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33251  004852  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33252  004856  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33253  00485A  0E01               	movlw	1
 33254  00485C                     L78:
 33255  00485C  6EDF               	movwf	indf2,c
 33256                           
 33257                           ;led.c: 253: break;
 33258  00485E  D03A               	goto	l2123
 33259  004860                     
 33260                           ; BSR set to: 0
 33261                           ;led.c: 257: if (*LedOut == 1)
 33262                           
 33263                           ; BSR set to: 0
 33264  004860  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33265  004864  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33266  004868  04DE               	decf	postinc2,w,c
 33267  00486A  A4D8               	btfss	status,2,c
 33268  00486C  D006               	goto	l2126
 33269                           
 33270                           ; BSR set to: 0
 33271                           ;led.c: 258: {
 33272                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33273  00486E  0E00               	movlw	0
 33274  004870  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33275  004872  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33276  004874  ECC7  F032         	call	_Led_SetLedStatus
 33277                           
 33278                           ;led.c: 261: }
 33279  004878  D02D               	goto	l2123
 33280  00487A                     l2126:
 33281                           
 33282                           ;led.c: 262: else
 33283                           ;led.c: 263: {
 33284                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33285  00487A  0E01               	movlw	1
 33286  00487C  0100               	movlb	0	; () banked
 33287  00487E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33288  004880  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33289  004882  ECC7  F032         	call	_Led_SetLedStatus
 33290                           
 33291                           ;led.c: 266: }
 33292                           ;led.c: 267: break;
 33293  004886  D026               	goto	l2123
 33294  004888                     
 33295                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33296  004888  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33297  00488C  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33298  004890  EC6E  F013         	call	_LedBlinkStateMachine	;wreg free
 33299  004894  D008               	goto	L79
 33300  004896                     
 33301                           ; BSR set to: 0
 33302                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33303                           
 33304                           ; BSR set to: 0
 33305  004896  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33306  00489A  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33307  00489E  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33308  0048A2  EC22  F019         	call	_LedPulseStateMachine	;wreg free
 33309  0048A6                     L79:
 33310  0048A6  0100               	movlb	0	; () banked
 33311  0048A8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33312                           
 33313                           ; BSR set to: 0
 33314                           ;led.c: 281: }
 33315                           
 33316                           ; BSR set to: 0
 33317                           ;led.c: 280: break;
 33318                           
 33319                           ;led.c: 279: default:
 33320                           
 33321                           ;led.c: 277: break;
 33322  0048AA  D014               	goto	l2123
 33323  0048AC                     l2121:
 33324                           
 33325                           ; BSR set to: 0
 33326                           
 33327                           ; BSR set to: 0
 33328  0048AC  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33329  0048B0  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33330  0048B4  50DF               	movf	indf2,w,c
 33331                           
 33332                           ; Switch size 1, requested type "space"
 33333                           ; Number of cases is 5, Range of values is 0 to 4
 33334                           ; switch strategies available:
 33335                           ; Name         Instructions Cycles
 33336                           ; simple_byte           16     9 (average)
 33337                           ;	Chosen strategy is simple_byte
 33338  0048B6  0A00               	xorlw	0	; case 0
 33339  0048B8  B4D8               	btfsc	status,2,c
 33340  0048BA  D7C1               	goto	l2122
 33341  0048BC  0A01               	xorlw	1	; case 1
 33342  0048BE  B4D8               	btfsc	status,2,c
 33343  0048C0  D7C6               	goto	l2124
 33344  0048C2  0A03               	xorlw	3	; case 2
 33345  0048C4  B4D8               	btfsc	status,2,c
 33346  0048C6  D7CC               	goto	l2125
 33347  0048C8  0A01               	xorlw	1	; case 3
 33348  0048CA  B4D8               	btfsc	status,2,c
 33349  0048CC  D7DD               	goto	l2128
 33350  0048CE  0A07               	xorlw	7	; case 4
 33351  0048D0  B4D8               	btfsc	status,2,c
 33352  0048D2  D7E1               	goto	l2129
 33353  0048D4                     l2123:
 33354                           
 33355                           ;led.c: 283: return LedOutSts;
 33356                           
 33357                           ; BSR set to: 0
 33358  0048D4  0100               	movlb	0	; () banked
 33359  0048D6  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33360  0048D8  0012               	return	
 33361  0048DA                     __end_of_LedStateMachine:
 33362                           	opt stack 0
 33363                           tosu	equ	0xFFF
 33364                           tosh	equ	0xFFE
 33365                           tosl	equ	0xFFD
 33366                           pclath	equ	0xFFA
 33367                           tblptru	equ	0xFF8
 33368                           tblptrh	equ	0xFF7
 33369                           tblptrl	equ	0xFF6
 33370                           tablat	equ	0xFF5
 33371                           prodh	equ	0xFF4
 33372                           prodl	equ	0xFF3
 33373                           intcon	equ	0xFF2
 33374                           intcon2	equ	0xFF1
 33375                           intcon3	equ	0xFF0
 33376                           indf0	equ	0xFEF
 33377                           postinc0	equ	0xFEE
 33378                           plusw0	equ	0xFEB
 33379                           fsr0h	equ	0xFEA
 33380                           fsr0l	equ	0xFE9
 33381                           wreg	equ	0xFE8
 33382                           indf1	equ	0xFE7
 33383                           postinc1	equ	0xFE6
 33384                           postdec1	equ	0xFE5
 33385                           plusw1	equ	0xFE3
 33386                           fsr1h	equ	0xFE2
 33387                           fsr1l	equ	0xFE1
 33388                           indf2	equ	0xFDF
 33389                           postinc2	equ	0xFDE
 33390                           postdec2	equ	0xFDD
 33391                           plusw2	equ	0xFDB
 33392                           fsr2h	equ	0xFDA
 33393                           fsr2l	equ	0xFD9
 33394                           status	equ	0xFD8
 33395                           
 33396 ;; *************** function _LedPulseStateMachine *****************
 33397 ;; Defined at:
 33398 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33399 ;; Parameters:    Size  Location     Type
 33400 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33401 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33402 ;;  Led             1   44[BANK0 ] unsigned char 
 33403 ;; Auto vars:     Size  Location     Type
 33404 ;;		None
 33405 ;; Return value:  Size  Location     Type
 33406 ;;                  1    wreg      unsigned char 
 33407 ;; Registers used:
 33408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33409 ;; Tracked objects:
 33410 ;;		On entry : 0/0
 33411 ;;		On exit  : 0/0
 33412 ;;		Unchanged: 0/0
 33413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33414 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33417 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33418 ;;Total ram usage:        5 bytes
 33419 ;; Hardware stack levels used:    1
 33420 ;; Hardware stack levels required when called:   12
 33421 ;; This function calls:
 33422 ;;		_Led_SetLedStatus
 33423 ;;		___lwdiv
 33424 ;; This function is called by:
 33425 ;;		_LedStateMachine
 33426 ;; This function uses a non-reentrant model
 33427 ;;
 33428                           
 33429                           	psect	text155
 33430  003244                     __ptext155:
 33431                           	opt stack 0
 33432  003244                     _LedPulseStateMachine:
 33433                           	opt stack 14
 33434                           
 33435                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33436                           
 33437                           ; BSR set to: 0
 33438                           ;incstack = 0
 33439  003244  D05C               	goto	l2111
 33440  003246                     
 33441                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33442  003246  0100               	movlb	0	; () banked
 33443  003248  EE20 F001          	lfsr	2,1
 33444  00324C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33445  00324E  26D9               	addwf	fsr2l,f,c
 33446  003250  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33447  003252  22DA               	addwfc	fsr2h,f,c
 33448  003254  0E01               	movlw	1
 33449  003256  6EDF               	movwf	indf2,c
 33450                           
 33451                           ; BSR set to: 0
 33452                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33453  003258  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33454  00325C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33455  003260  0E01               	movlw	1
 33456  003262  D036               	goto	L80
 33457  003264                     
 33458                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33459                           
 33460                           ; BSR set to: 0
 33461  003264  0100               	movlb	0	; () banked
 33462  003266  EE20 F002          	lfsr	2,2
 33463  00326A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33464  00326C  26D9               	addwf	fsr2l,f,c
 33465  00326E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33466  003270  22DA               	addwfc	fsr2h,f,c
 33467  003272  2ADE               	incf	postinc2,f,c
 33468  003274  0E00               	movlw	0
 33469  003276  22DD               	addwfc	postdec2,f,c
 33470                           
 33471                           ; BSR set to: 0
 33472                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33473  003278  EE20 F004          	lfsr	2,4
 33474  00327C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33475  00327E  26D9               	addwf	fsr2l,f,c
 33476  003280  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33477  003282  22DA               	addwfc	fsr2h,f,c
 33478  003284  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33479  003288  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33480  00328C  0E00               	movlw	0
 33481  00328E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33482  003290  0E32               	movlw	50
 33483  003292  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33484  003294  EC29  F02E         	call	___lwdiv	;wreg free
 33485  003298  0100               	movlb	0	; () banked
 33486  00329A  EE20 F002          	lfsr	2,2
 33487  00329E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33488  0032A0  26D9               	addwf	fsr2l,f,c
 33489  0032A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33490  0032A4  22DA               	addwfc	fsr2h,f,c
 33491  0032A6  5183               	movf	?___lwdiv& (0+255),w,b
 33492  0032A8  5CDE               	subwf	postinc2,w,c
 33493  0032AA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33494  0032AC  58DE               	subwfb	postinc2,w,c
 33495  0032AE  A0D8               	btfss	status,0,c
 33496  0032B0  D034               	goto	l2113
 33497                           
 33498                           ; BSR set to: 0
 33499                           ;led.c: 199: {
 33500                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33501  0032B2  EE20 F002          	lfsr	2,2
 33502  0032B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33503  0032B8  26D9               	addwf	fsr2l,f,c
 33504  0032BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33505  0032BC  22DA               	addwfc	fsr2h,f,c
 33506  0032BE  0E00               	movlw	0
 33507  0032C0  6EDE               	movwf	postinc2,c
 33508  0032C2  0E00               	movlw	0
 33509  0032C4  6EDD               	movwf	postdec2,c
 33510                           
 33511                           ; BSR set to: 0
 33512                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33513  0032C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33514  0032CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33515  0032CE  0E02               	movlw	2
 33516  0032D0                     L80:
 33517  0032D0  6EDF               	movwf	indf2,c
 33518                           
 33519                           ; BSR set to: 0
 33520                           ;led.c: 204: }
 33521                           ;led.c: 205: break;
 33522  0032D2  D023               	goto	l2113
 33523  0032D4                     
 33524                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33525                           
 33526                           ; BSR set to: 0
 33527  0032D4  0100               	movlb	0	; () banked
 33528  0032D6  EE20 F001          	lfsr	2,1
 33529  0032DA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33530  0032DC  26D9               	addwf	fsr2l,f,c
 33531  0032DE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33532  0032E0  22DA               	addwfc	fsr2h,f,c
 33533  0032E2  0E00               	movlw	0
 33534  0032E4  6EDF               	movwf	indf2,c
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33538  0032E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33539  0032EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33540  0032EE  0E00               	movlw	0
 33541  0032F0  6EDF               	movwf	indf2,c
 33542                           
 33543                           ; BSR set to: 0
 33544                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33545  0032F2  0E00               	movlw	0
 33546  0032F4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33547  0032F6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33548  0032F8  ECC7  F032         	call	_Led_SetLedStatus
 33549                           
 33550                           ;led.c: 218: }
 33551                           
 33552                           ;led.c: 217: break;
 33553                           
 33554                           ;led.c: 216: default:
 33555                           
 33556                           ;led.c: 214: break;
 33557  0032FC  D00E               	goto	l2113
 33558  0032FE                     l2111:
 33559  0032FE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33560  003302  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33561  003306  50DF               	movf	indf2,w,c
 33562                           
 33563                           ; Switch size 1, requested type "space"
 33564                           ; Number of cases is 3, Range of values is 0 to 2
 33565                           ; switch strategies available:
 33566                           ; Name         Instructions Cycles
 33567                           ; simple_byte           10     6 (average)
 33568                           ;	Chosen strategy is simple_byte
 33569  003308  0A00               	xorlw	0	; case 0
 33570  00330A  B4D8               	btfsc	status,2,c
 33571  00330C  D79C               	goto	l2112
 33572  00330E  0A01               	xorlw	1	; case 1
 33573  003310  B4D8               	btfsc	status,2,c
 33574  003312  D7A8               	goto	l2114
 33575  003314  0A03               	xorlw	3	; case 2
 33576  003316  B4D8               	btfsc	status,2,c
 33577  003318  D7DD               	goto	l2116
 33578  00331A                     l2113:
 33579                           
 33580                           ;led.c: 221: return (LedPulse->LedOutState);
 33581  00331A  0100               	movlb	0	; () banked
 33582  00331C  EE20 F001          	lfsr	2,1
 33583  003320  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33584  003322  26D9               	addwf	fsr2l,f,c
 33585  003324  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33586  003326  22DA               	addwfc	fsr2h,f,c
 33587  003328  50DF               	movf	indf2,w,c
 33588  00332A  0012               	return	
 33589  00332C                     __end_of_LedPulseStateMachine:
 33590                           	opt stack 0
 33591                           tosu	equ	0xFFF
 33592                           tosh	equ	0xFFE
 33593                           tosl	equ	0xFFD
 33594                           pclath	equ	0xFFA
 33595                           tblptru	equ	0xFF8
 33596                           tblptrh	equ	0xFF7
 33597                           tblptrl	equ	0xFF6
 33598                           tablat	equ	0xFF5
 33599                           prodh	equ	0xFF4
 33600                           prodl	equ	0xFF3
 33601                           intcon	equ	0xFF2
 33602                           intcon2	equ	0xFF1
 33603                           intcon3	equ	0xFF0
 33604                           indf0	equ	0xFEF
 33605                           postinc0	equ	0xFEE
 33606                           plusw0	equ	0xFEB
 33607                           fsr0h	equ	0xFEA
 33608                           fsr0l	equ	0xFE9
 33609                           wreg	equ	0xFE8
 33610                           indf1	equ	0xFE7
 33611                           postinc1	equ	0xFE6
 33612                           postdec1	equ	0xFE5
 33613                           plusw1	equ	0xFE3
 33614                           fsr1h	equ	0xFE2
 33615                           fsr1l	equ	0xFE1
 33616                           indf2	equ	0xFDF
 33617                           postinc2	equ	0xFDE
 33618                           postdec2	equ	0xFDD
 33619                           plusw2	equ	0xFDB
 33620                           fsr2h	equ	0xFDA
 33621                           fsr2l	equ	0xFD9
 33622                           status	equ	0xFD8
 33623                           
 33624 ;; *************** function _Led_SetLedStatus *****************
 33625 ;; Defined at:
 33626 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33627 ;; Parameters:    Size  Location     Type
 33628 ;;  Led             1    wreg     unsigned char 
 33629 ;;  LedSts          1   29[BANK0 ] enum E8954
 33630 ;; Auto vars:     Size  Location     Type
 33631 ;;  Led             1   30[BANK0 ] unsigned char 
 33632 ;; Return value:  Size  Location     Type
 33633 ;;                  1    wreg      void 
 33634 ;; Registers used:
 33635 ;;		wreg, status,2, status,0
 33636 ;; Tracked objects:
 33637 ;;		On entry : 0/0
 33638 ;;		On exit  : 0/0
 33639 ;;		Unchanged: 0/0
 33640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33641 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33645 ;;Total ram usage:        2 bytes
 33646 ;; Hardware stack levels used:    1
 33647 ;; Hardware stack levels required when called:   11
 33648 ;; This function calls:
 33649 ;;		Nothing
 33650 ;; This function is called by:
 33651 ;;		_LedPulseStateMachine
 33652 ;;		_LedStateMachine
 33653 ;;		_waitSetupCall
 33654 ;;		_initFsm
 33655 ;;		_blinkForSeconds
 33656 ;; This function uses a non-reentrant model
 33657 ;;
 33658                           
 33659                           	psect	text156
 33660  00658E                     __ptext156:
 33661                           	opt stack 0
 33662  00658E                     _Led_SetLedStatus:
 33663                           	opt stack 14
 33664                           
 33665                           ; BSR set to: 0
 33666                           ;incstack = 0
 33667                           ;Led_SetLedStatus@Led stored from wreg
 33668  00658E  0100               	movlb	0	; () banked
 33669  006590  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33670                           
 33671                           ;led.c: 341: switch (Led)
 33672  006592  D009               	goto	l2142
 33673  006594                     l2143:
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;led.c: 344: Led1Sts = LedSts;
 33677  006594  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33678                           
 33679                           ;led.c: 345: break;
 33680  006598  0012               	return	
 33681  00659A                     l2145:
 33682                           
 33683                           ; BSR set to: 0
 33684                           ;led.c: 348: Led2Sts = LedSts;
 33685  00659A  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33686                           
 33687                           ;led.c: 349: break;
 33688  00659E  0012               	return	
 33689  0065A0                     l2146:
 33690                           
 33691                           ; BSR set to: 0
 33692                           ;led.c: 352: Led3Sts = LedSts;
 33693  0065A0  C07D  F1F6         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33694                           
 33695                           ; BSR set to: 0
 33696                           ;led.c: 357: }
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;led.c: 356: break;
 33700                           
 33701                           ;led.c: 355: default:
 33702                           
 33703                           ;led.c: 353: break;
 33704  0065A4  0012               	return	
 33705  0065A6                     l2142:
 33706                           
 33707                           ; BSR set to: 0
 33708  0065A6  0100               	movlb	0	; () banked
 33709  0065A8  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33710                           
 33711                           ; Switch size 1, requested type "space"
 33712                           ; Number of cases is 3, Range of values is 1 to 3
 33713                           ; switch strategies available:
 33714                           ; Name         Instructions Cycles
 33715                           ; simple_byte           10     6 (average)
 33716                           ;	Chosen strategy is simple_byte
 33717  0065AA  0A01               	xorlw	1	; case 1
 33718  0065AC  B4D8               	btfsc	status,2,c
 33719  0065AE  D7F2               	goto	l2143
 33720  0065B0  0A03               	xorlw	3	; case 2
 33721  0065B2  B4D8               	btfsc	status,2,c
 33722  0065B4  D7F2               	goto	l2145
 33723  0065B6  0A01               	xorlw	1	; case 3
 33724  0065B8  A4D8               	btfss	status,2,c
 33725  0065BA  0012               	return	
 33726  0065BC  D7F1               	goto	l2146
 33727  0065BE                     __end_of_Led_SetLedStatus:
 33728                           	opt stack 0
 33729                           tosu	equ	0xFFF
 33730                           tosh	equ	0xFFE
 33731                           tosl	equ	0xFFD
 33732                           pclath	equ	0xFFA
 33733                           tblptru	equ	0xFF8
 33734                           tblptrh	equ	0xFF7
 33735                           tblptrl	equ	0xFF6
 33736                           tablat	equ	0xFF5
 33737                           prodh	equ	0xFF4
 33738                           prodl	equ	0xFF3
 33739                           intcon	equ	0xFF2
 33740                           intcon2	equ	0xFF1
 33741                           intcon3	equ	0xFF0
 33742                           indf0	equ	0xFEF
 33743                           postinc0	equ	0xFEE
 33744                           plusw0	equ	0xFEB
 33745                           fsr0h	equ	0xFEA
 33746                           fsr0l	equ	0xFE9
 33747                           wreg	equ	0xFE8
 33748                           indf1	equ	0xFE7
 33749                           postinc1	equ	0xFE6
 33750                           postdec1	equ	0xFE5
 33751                           plusw1	equ	0xFE3
 33752                           fsr1h	equ	0xFE2
 33753                           fsr1l	equ	0xFE1
 33754                           indf2	equ	0xFDF
 33755                           postinc2	equ	0xFDE
 33756                           postdec2	equ	0xFDD
 33757                           plusw2	equ	0xFDB
 33758                           fsr2h	equ	0xFDA
 33759                           fsr2l	equ	0xFD9
 33760                           status	equ	0xFD8
 33761                           
 33762 ;; *************** function _LedBlinkStateMachine *****************
 33763 ;; Defined at:
 33764 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33765 ;; Parameters:    Size  Location     Type
 33766 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33767 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;		None
 33770 ;; Return value:  Size  Location     Type
 33771 ;;                  1    wreg      unsigned char 
 33772 ;; Registers used:
 33773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33774 ;; Tracked objects:
 33775 ;;		On entry : 0/0
 33776 ;;		On exit  : 0/0
 33777 ;;		Unchanged: 0/0
 33778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33782 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33783 ;;Total ram usage:        4 bytes
 33784 ;; Hardware stack levels used:    1
 33785 ;; Hardware stack levels required when called:   12
 33786 ;; This function calls:
 33787 ;;		___lwdiv
 33788 ;; This function is called by:
 33789 ;;		_LedStateMachine
 33790 ;; This function uses a non-reentrant model
 33791 ;;
 33792                           
 33793                           	psect	text157
 33794  0026DC                     __ptext157:
 33795                           	opt stack 0
 33796  0026DC                     _LedBlinkStateMachine:
 33797                           	opt stack 14
 33798                           
 33799                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33800                           
 33801                           ; BSR set to: 0
 33802                           ;incstack = 0
 33803  0026DC  D08F               	goto	l2098
 33804  0026DE                     
 33805                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33806  0026DE  0100               	movlb	0	; () banked
 33807  0026E0  EE20 F008          	lfsr	2,8
 33808  0026E4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33809  0026E6  26D9               	addwf	fsr2l,f,c
 33810  0026E8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33811  0026EA  22DA               	addwfc	fsr2h,f,c
 33812  0026EC  EE10 F001          	lfsr	1,1
 33813  0026F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33814  0026F2  26E1               	addwf	fsr1l,f,c
 33815  0026F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33816  0026F6  22E2               	addwfc	fsr1h,f,c
 33817  0026F8  CFDF FFE7          	movff	indf2,indf1
 33818                           
 33819                           ; BSR set to: 0
 33820                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33821  0026FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33822  002700  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33823  002704  D040               	goto	L81
 33824  002706                     
 33825                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33826                           
 33827                           ; BSR set to: 0
 33828  002706  0100               	movlb	0	; () banked
 33829  002708  EE20 F002          	lfsr	2,2
 33830  00270C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33831  00270E  26D9               	addwf	fsr2l,f,c
 33832  002710  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33833  002712  22DA               	addwfc	fsr2h,f,c
 33834  002714  2ADE               	incf	postinc2,f,c
 33835  002716  0E00               	movlw	0
 33836  002718  22DD               	addwfc	postdec2,f,c
 33837                           
 33838                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33839  00271A  EE20 F001          	lfsr	2,1
 33840  00271E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33841  002720  26D9               	addwf	fsr2l,f,c
 33842  002722  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33843  002724  22DA               	addwfc	fsr2h,f,c
 33844  002726  50DF               	movf	indf2,w,c
 33845  002728  A4D8               	btfss	status,2,c
 33846  00272A  D02F               	goto	l2102
 33847                           
 33848                           ; BSR set to: 0
 33849                           ;led.c: 142: {
 33850                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33851  00272C  EE20 F006          	lfsr	2,6
 33852  002730  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33853  002732  26D9               	addwf	fsr2l,f,c
 33854  002734  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33855  002736  22DA               	addwfc	fsr2h,f,c
 33856  002738  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33857  00273C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33858  002740  0E00               	movlw	0
 33859  002742  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33860  002744  0E32               	movlw	50
 33861  002746  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33862  002748  EC29  F02E         	call	___lwdiv	;wreg free
 33863  00274C  0100               	movlb	0	; () banked
 33864  00274E  EE20 F002          	lfsr	2,2
 33865  002752  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33866  002754  26D9               	addwf	fsr2l,f,c
 33867  002756  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33868  002758  22DA               	addwfc	fsr2h,f,c
 33869  00275A  5183               	movf	?___lwdiv& (0+255),w,b
 33870  00275C  5CDE               	subwf	postinc2,w,c
 33871  00275E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33872  002760  58DE               	subwfb	postinc2,w,c
 33873  002762  A0D8               	btfss	status,0,c
 33874  002764  D056               	goto	l2100
 33875                           
 33876                           ; BSR set to: 0
 33877                           ;led.c: 145: {
 33878                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 33879  002766  EE20 F002          	lfsr	2,2
 33880  00276A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33881  00276C  26D9               	addwf	fsr2l,f,c
 33882  00276E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33883  002770  22DA               	addwfc	fsr2h,f,c
 33884  002772  0E00               	movlw	0
 33885  002774  6EDE               	movwf	postinc2,c
 33886  002776  0E00               	movlw	0
 33887  002778  6EDD               	movwf	postdec2,c
 33888                           
 33889                           ;led.c: 149: LedBlink->LedOutState = OnState;
 33890  00277A  EE20 F001          	lfsr	2,1
 33891  00277E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33892  002780  26D9               	addwf	fsr2l,f,c
 33893  002782  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33894  002784  22DA               	addwfc	fsr2h,f,c
 33895  002786                     L81:
 33896  002786  0E01               	movlw	1
 33897  002788  D037               	goto	L82
 33898  00278A                     l2102:
 33899                           
 33900                           ; BSR set to: 0
 33901                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 33902                           
 33903                           ; BSR set to: 0
 33904  00278A  EE20 F001          	lfsr	2,1
 33905  00278E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33906  002790  26D9               	addwf	fsr2l,f,c
 33907  002792  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33908  002794  22DA               	addwfc	fsr2h,f,c
 33909  002796  04DE               	decf	postinc2,w,c
 33910  002798  A4D8               	btfss	status,2,c
 33911  00279A  D03B               	goto	l2100
 33912                           
 33913                           ; BSR set to: 0
 33914                           ;led.c: 153: {
 33915                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 33916  00279C  EE20 F004          	lfsr	2,4
 33917  0027A0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33918  0027A2  26D9               	addwf	fsr2l,f,c
 33919  0027A4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33920  0027A6  22DA               	addwfc	fsr2h,f,c
 33921  0027A8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33922  0027AC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33923  0027B0  0E00               	movlw	0
 33924  0027B2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33925  0027B4  0E32               	movlw	50
 33926  0027B6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33927  0027B8  EC29  F02E         	call	___lwdiv	;wreg free
 33928  0027BC  0100               	movlb	0	; () banked
 33929  0027BE  EE20 F002          	lfsr	2,2
 33930  0027C2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33931  0027C4  26D9               	addwf	fsr2l,f,c
 33932  0027C6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33933  0027C8  22DA               	addwfc	fsr2h,f,c
 33934  0027CA  5183               	movf	?___lwdiv& (0+255),w,b
 33935  0027CC  5CDE               	subwf	postinc2,w,c
 33936  0027CE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33937  0027D0  58DE               	subwfb	postinc2,w,c
 33938  0027D2  A0D8               	btfss	status,0,c
 33939  0027D4  D01E               	goto	l2100
 33940                           
 33941                           ; BSR set to: 0
 33942                           ;led.c: 156: {
 33943                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 33944  0027D6  EE20 F002          	lfsr	2,2
 33945  0027DA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33946  0027DC  26D9               	addwf	fsr2l,f,c
 33947  0027DE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33948  0027E0  22DA               	addwfc	fsr2h,f,c
 33949  0027E2  0E00               	movlw	0
 33950  0027E4  6EDE               	movwf	postinc2,c
 33951  0027E6  0E00               	movlw	0
 33952  0027E8  6EDD               	movwf	postdec2,c
 33953                           
 33954                           ;led.c: 160: LedBlink->LedOutState = OffState;
 33955  0027EA  EE20 F001          	lfsr	2,1
 33956  0027EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33957  0027F0  26D9               	addwf	fsr2l,f,c
 33958  0027F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33959  0027F4  22DA               	addwfc	fsr2h,f,c
 33960  0027F6  0E00               	movlw	0
 33961  0027F8                     L82:
 33962  0027F8  6EDF               	movwf	indf2,c
 33963                           
 33964                           ; BSR set to: 0
 33965                           ;led.c: 167: }
 33966                           
 33967                           ; BSR set to: 0
 33968                           ;led.c: 166: break;
 33969                           
 33970                           ;led.c: 165: default:
 33971                           
 33972                           ; BSR set to: 0
 33973                           ;led.c: 161: }
 33974                           ;led.c: 162: }
 33975                           ;led.c: 163: break;
 33976                           
 33977                           ; BSR set to: 0
 33978                           
 33979                           ; BSR set to: 0
 33980  0027FA  D00B               	goto	l2100
 33981  0027FC                     l2098:
 33982                           
 33983                           ; BSR set to: 0
 33984  0027FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33985  002800  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33986  002804  50DF               	movf	indf2,w,c
 33987                           
 33988                           ; Switch size 1, requested type "space"
 33989                           ; Number of cases is 2, Range of values is 0 to 1
 33990                           ; switch strategies available:
 33991                           ; Name         Instructions Cycles
 33992                           ; simple_byte            7     4 (average)
 33993                           ;	Chosen strategy is simple_byte
 33994  002806  0A00               	xorlw	0	; case 0
 33995  002808  B4D8               	btfsc	status,2,c
 33996  00280A  D769               	goto	l2099
 33997  00280C  0A01               	xorlw	1	; case 1
 33998  00280E  B4D8               	btfsc	status,2,c
 33999  002810  D77A               	goto	l2101
 34000  002812                     l2100:
 34001                           
 34002                           ;led.c: 170: return (LedBlink->LedOutState);
 34003  002812  0100               	movlb	0	; () banked
 34004  002814  EE20 F001          	lfsr	2,1
 34005  002818  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34006  00281A  26D9               	addwf	fsr2l,f,c
 34007  00281C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34008  00281E  22DA               	addwfc	fsr2h,f,c
 34009  002820  50DF               	movf	indf2,w,c
 34010  002822  0012               	return	
 34011  002824                     __end_of_LedBlinkStateMachine:
 34012                           	opt stack 0
 34013                           tosu	equ	0xFFF
 34014                           tosh	equ	0xFFE
 34015                           tosl	equ	0xFFD
 34016                           pclath	equ	0xFFA
 34017                           tblptru	equ	0xFF8
 34018                           tblptrh	equ	0xFF7
 34019                           tblptrl	equ	0xFF6
 34020                           tablat	equ	0xFF5
 34021                           prodh	equ	0xFF4
 34022                           prodl	equ	0xFF3
 34023                           intcon	equ	0xFF2
 34024                           intcon2	equ	0xFF1
 34025                           intcon3	equ	0xFF0
 34026                           indf0	equ	0xFEF
 34027                           postinc0	equ	0xFEE
 34028                           plusw0	equ	0xFEB
 34029                           fsr0h	equ	0xFEA
 34030                           fsr0l	equ	0xFE9
 34031                           wreg	equ	0xFE8
 34032                           indf1	equ	0xFE7
 34033                           postinc1	equ	0xFE6
 34034                           postdec1	equ	0xFE5
 34035                           plusw1	equ	0xFE3
 34036                           fsr1h	equ	0xFE2
 34037                           fsr1l	equ	0xFE1
 34038                           indf2	equ	0xFDF
 34039                           postinc2	equ	0xFDE
 34040                           postdec2	equ	0xFDD
 34041                           plusw2	equ	0xFDB
 34042                           fsr2h	equ	0xFDA
 34043                           fsr2l	equ	0xFD9
 34044                           status	equ	0xFD8
 34045                           
 34046 ;; *************** function ___lwdiv *****************
 34047 ;; Defined at:
 34048 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 34049 ;; Parameters:    Size  Location     Type
 34050 ;;  dividend        2   35[BANK0 ] unsigned int 
 34051 ;;  divisor         2   37[BANK0 ] unsigned int 
 34052 ;; Auto vars:     Size  Location     Type
 34053 ;;  quotient        2   40[BANK0 ] unsigned int 
 34054 ;;  counter         1   39[BANK0 ] unsigned char 
 34055 ;; Return value:  Size  Location     Type
 34056 ;;                  2   35[BANK0 ] unsigned int 
 34057 ;; Registers used:
 34058 ;;		wreg, status,2, status,0
 34059 ;; Tracked objects:
 34060 ;;		On entry : 0/0
 34061 ;;		On exit  : 0/0
 34062 ;;		Unchanged: 0/0
 34063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34065 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34067 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34068 ;;Total ram usage:        7 bytes
 34069 ;; Hardware stack levels used:    1
 34070 ;; Hardware stack levels required when called:   11
 34071 ;; This function calls:
 34072 ;;		Nothing
 34073 ;; This function is called by:
 34074 ;;		_LedBlinkStateMachine
 34075 ;;		_LedPulseStateMachine
 34076 ;;		_secondsAppTimer
 34077 ;;		_utoa
 34078 ;; This function uses a non-reentrant model
 34079 ;;
 34080                           
 34081                           	psect	text158
 34082  005C52                     __ptext158:
 34083                           	opt stack 0
 34084  005C52                     ___lwdiv:
 34085                           	opt stack 14
 34086                           
 34087                           ; BSR set to: 0
 34088                           ;incstack = 0
 34089  005C52  0E00               	movlw	0
 34090  005C54  0100               	movlb	0	; () banked
 34091  005C56  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34092  005C58  0E00               	movlw	0
 34093  005C5A  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34094                           
 34095                           ; BSR set to: 0
 34096  005C5C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34097  005C5E  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34098  005C60  B4D8               	btfsc	status,2,c
 34099  005C62  D01C               	goto	l3361
 34100                           
 34101                           ; BSR set to: 0
 34102  005C64  0E01               	movlw	1
 34103  005C66  6F87               	movwf	___lwdiv@counter& (0+255),b
 34104  005C68  D004               	goto	l3356
 34105  005C6A                     
 34106                           ; BSR set to: 0
 34107                           
 34108                           ; BSR set to: 0
 34109  005C6A  90D8               	bcf	status,0,c
 34110  005C6C  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34111  005C6E  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34112  005C70  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34113  005C72                     l3356:
 34114                           
 34115                           ; BSR set to: 0
 34116                           
 34117                           ; BSR set to: 0
 34118  005C72  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34119  005C74  D7FA               	goto	l3357
 34120  005C76                     u12140:
 34121                           
 34122                           ; BSR set to: 0
 34123                           
 34124                           ; BSR set to: 0
 34125                           
 34126                           ; BSR set to: 0
 34127  005C76  90D8               	bcf	status,0,c
 34128  005C78  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34129  005C7A  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34130                           
 34131                           ; BSR set to: 0
 34132  005C7C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34133  005C7E  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34134  005C80  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34135  005C82  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34136  005C84  A0D8               	btfss	status,0,c
 34137  005C86  D005               	goto	l3360
 34138                           
 34139                           ; BSR set to: 0
 34140  005C88  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34141  005C8A  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 34142  005C8C  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34143  005C8E  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 34144                           
 34145                           ; BSR set to: 0
 34146  005C90  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 34147  005C92                     l3360:
 34148                           
 34149                           ; BSR set to: 0
 34150                           
 34151                           ; BSR set to: 0
 34152  005C92  90D8               	bcf	status,0,c
 34153  005C94  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 34154  005C96  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 34155                           
 34156                           ; BSR set to: 0
 34157  005C98  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 34158  005C9A  D7ED               	goto	u12140
 34159  005C9C                     l3361:
 34160                           
 34161                           ; BSR set to: 0
 34162                           
 34163                           ; BSR set to: 0
 34164  005C9C  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 34165  005CA0  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 34166                           
 34167                           ; BSR set to: 0
 34168  005CA4  0012               	return		;funcret
 34169  005CA6                     __end_of___lwdiv:
 34170                           	opt stack 0
 34171                           tosu	equ	0xFFF
 34172                           tosh	equ	0xFFE
 34173                           tosl	equ	0xFFD
 34174                           pclath	equ	0xFFA
 34175                           tblptru	equ	0xFF8
 34176                           tblptrh	equ	0xFF7
 34177                           tblptrl	equ	0xFF6
 34178                           tablat	equ	0xFF5
 34179                           prodh	equ	0xFF4
 34180                           prodl	equ	0xFF3
 34181                           intcon	equ	0xFF2
 34182                           intcon2	equ	0xFF1
 34183                           intcon3	equ	0xFF0
 34184                           indf0	equ	0xFEF
 34185                           postinc0	equ	0xFEE
 34186                           plusw0	equ	0xFEB
 34187                           fsr0h	equ	0xFEA
 34188                           fsr0l	equ	0xFE9
 34189                           wreg	equ	0xFE8
 34190                           indf1	equ	0xFE7
 34191                           postinc1	equ	0xFE6
 34192                           postdec1	equ	0xFE5
 34193                           plusw1	equ	0xFE3
 34194                           fsr1h	equ	0xFE2
 34195                           fsr1l	equ	0xFE1
 34196                           indf2	equ	0xFDF
 34197                           postinc2	equ	0xFDE
 34198                           postdec2	equ	0xFDD
 34199                           plusw2	equ	0xFDB
 34200                           fsr2h	equ	0xFDA
 34201                           fsr2l	equ	0xFD9
 34202                           status	equ	0xFD8
 34203                           
 34204 ;; *************** function _OsAlrm_SetOsAlarm *****************
 34205 ;; Defined at:
 34206 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34207 ;; Parameters:    Size  Location     Type
 34208 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 34209 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 34210 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 34211 ;;		 -> I2cDummyTx(1), 
 34212 ;; Auto vars:     Size  Location     Type
 34213 ;;		None
 34214 ;; Return value:  Size  Location     Type
 34215 ;;                  1    wreg      void 
 34216 ;; Registers used:
 34217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34218 ;; Tracked objects:
 34219 ;;		On entry : 0/0
 34220 ;;		On exit  : 0/0
 34221 ;;		Unchanged: 0/0
 34222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34223 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34226 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34227 ;;Total ram usage:        8 bytes
 34228 ;; Hardware stack levels used:    1
 34229 ;; Hardware stack levels required when called:   12
 34230 ;; This function calls:
 34231 ;;		___wmul
 34232 ;; This function is called by:
 34233 ;;		_I2cSlv_MainTask
 34234 ;; This function uses a non-reentrant model
 34235 ;;
 34236                           
 34237                           	psect	text159
 34238  003FA8                     __ptext159:
 34239                           	opt stack 0
 34240  003FA8                     _OsAlrm_SetOsAlarm:
 34241                           	opt stack 15
 34242                           
 34243                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34244                           
 34245                           ; BSR set to: 0
 34246                           ;incstack = 0
 34247  003FA8  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34248  003FAC  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34249  003FB0  0E00               	movlw	0
 34250  003FB2  0100               	movlb	0	; () banked
 34251  003FB4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34252  003FB6  0E0B               	movlw	11
 34253  003FB8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34254  003FBA  EC4D  F033         	call	___wmul	;wreg free
 34255  003FBE  0E00               	movlw	low _OsAlarms
 34256  003FC0  0100               	movlb	0	; () banked
 34257  003FC2  257D               	addwf	?___wmul& (0+255),w,b
 34258  003FC4  6ED9               	movwf	fsr2l,c
 34259  003FC6  0E06               	movlw	high _OsAlarms
 34260  003FC8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34261  003FCA  6EDA               	movwf	fsr2h,c
 34262  003FCC  0E01               	movlw	1
 34263  003FCE  6EDF               	movwf	indf2,c
 34264                           
 34265                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34266  003FD0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34267  003FD4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34268  003FD8  0E00               	movlw	0
 34269  003FDA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34270  003FDC  0E0B               	movlw	11
 34271  003FDE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34272  003FE0  EC4D  F033         	call	___wmul	;wreg free
 34273  003FE4  0E01               	movlw	1
 34274  003FE6  0100               	movlb	0	; () banked
 34275  003FE8  277D               	addwf	?___wmul& (0+255),f,b
 34276  003FEA  0E00               	movlw	0
 34277  003FEC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34278  003FEE  0E00               	movlw	low _OsAlarms
 34279  003FF0  257D               	addwf	?___wmul& (0+255),w,b
 34280  003FF2  6ED9               	movwf	fsr2l,c
 34281  003FF4  0E06               	movlw	high _OsAlarms
 34282  003FF6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34283  003FF8  6EDA               	movwf	fsr2h,c
 34284  003FFA  6ADE               	clrf	postinc2,c
 34285  003FFC  6ADE               	clrf	postinc2,c
 34286  003FFE  6ADE               	clrf	postinc2,c
 34287  004000  6ADD               	clrf	postdec2,c
 34288                           
 34289                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34290  004002  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34291  004006  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34292  00400A  0E00               	movlw	0
 34293  00400C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34294  00400E  0E0B               	movlw	11
 34295  004010  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34296  004012  EC4D  F033         	call	___wmul	;wreg free
 34297  004016  0E05               	movlw	5
 34298  004018  0100               	movlb	0	; () banked
 34299  00401A  277D               	addwf	?___wmul& (0+255),f,b
 34300  00401C  0E00               	movlw	0
 34301  00401E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34302  004020  0E00               	movlw	low _OsAlarms
 34303  004022  257D               	addwf	?___wmul& (0+255),w,b
 34304  004024  6ED9               	movwf	fsr2l,c
 34305  004026  0E06               	movlw	high _OsAlarms
 34306  004028  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34307  00402A  6EDA               	movwf	fsr2h,c
 34308  00402C  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34309  004030  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34310  004034  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34311  004038  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34312                           
 34313                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34314  00403C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34315  004040  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34316  004044  0E00               	movlw	0
 34317  004046  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34318  004048  0E0B               	movlw	11
 34319  00404A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34320  00404C  EC4D  F033         	call	___wmul	;wreg free
 34321  004050  0E09               	movlw	9
 34322  004052  0100               	movlb	0	; () banked
 34323  004054  277D               	addwf	?___wmul& (0+255),f,b
 34324  004056  0E00               	movlw	0
 34325  004058  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34326  00405A  0E00               	movlw	low _OsAlarms
 34327  00405C  257D               	addwf	?___wmul& (0+255),w,b
 34328  00405E  6ED9               	movwf	fsr2l,c
 34329  004060  0E06               	movlw	high _OsAlarms
 34330  004062  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34331  004064  6EDA               	movwf	fsr2h,c
 34332  004066  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34333  00406A  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34334                           
 34335                           ; BSR set to: 0
 34336  00406E  0012               	return		;funcret
 34337  004070                     __end_of_OsAlrm_SetOsAlarm:
 34338                           	opt stack 0
 34339                           tosu	equ	0xFFF
 34340                           tosh	equ	0xFFE
 34341                           tosl	equ	0xFFD
 34342                           pclath	equ	0xFFA
 34343                           tblptru	equ	0xFF8
 34344                           tblptrh	equ	0xFF7
 34345                           tblptrl	equ	0xFF6
 34346                           tablat	equ	0xFF5
 34347                           prodh	equ	0xFF4
 34348                           prodl	equ	0xFF3
 34349                           intcon	equ	0xFF2
 34350                           intcon2	equ	0xFF1
 34351                           intcon3	equ	0xFF0
 34352                           indf0	equ	0xFEF
 34353                           postinc0	equ	0xFEE
 34354                           plusw0	equ	0xFEB
 34355                           fsr0h	equ	0xFEA
 34356                           fsr0l	equ	0xFE9
 34357                           wreg	equ	0xFE8
 34358                           indf1	equ	0xFE7
 34359                           postinc1	equ	0xFE6
 34360                           postdec1	equ	0xFE5
 34361                           plusw1	equ	0xFE3
 34362                           fsr1h	equ	0xFE2
 34363                           fsr1l	equ	0xFE1
 34364                           indf2	equ	0xFDF
 34365                           postinc2	equ	0xFDE
 34366                           postdec2	equ	0xFDD
 34367                           plusw2	equ	0xFDB
 34368                           fsr2h	equ	0xFDA
 34369                           fsr2l	equ	0xFD9
 34370                           status	equ	0xFD8
 34371                           
 34372 ;; *************** function ___wmul *****************
 34373 ;; Defined at:
 34374 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34375 ;; Parameters:    Size  Location     Type
 34376 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34377 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34378 ;; Auto vars:     Size  Location     Type
 34379 ;;  product         2   33[BANK0 ] unsigned int 
 34380 ;; Return value:  Size  Location     Type
 34381 ;;                  2   29[BANK0 ] unsigned int 
 34382 ;; Registers used:
 34383 ;;		wreg, status,2, status,0, prodl, prodh
 34384 ;; Tracked objects:
 34385 ;;		On entry : 0/0
 34386 ;;		On exit  : 0/0
 34387 ;;		Unchanged: 0/0
 34388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34393 ;;Total ram usage:        6 bytes
 34394 ;; Hardware stack levels used:    1
 34395 ;; Hardware stack levels required when called:   11
 34396 ;; This function calls:
 34397 ;;		Nothing
 34398 ;; This function is called by:
 34399 ;;		_OsAlrm_SetOsAlarm
 34400 ;;		_secondsAppTimer
 34401 ;;		_atoi
 34402 ;; This function uses a non-reentrant model
 34403 ;;
 34404                           
 34405                           	psect	text160
 34406  00669A                     __ptext160:
 34407                           	opt stack 0
 34408  00669A                     ___wmul:
 34409                           	opt stack 13
 34410                           
 34411                           ; BSR set to: 0
 34412                           ;incstack = 0
 34413  00669A  0100               	movlb	0	; () banked
 34414  00669C  517D               	movf	___wmul@multiplier& (0+255),w,b
 34415  00669E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34416  0066A0  CFF3 F081          	movff	prodl,___wmul@product
 34417  0066A4  CFF4 F082          	movff	prodh,___wmul@product+1
 34418  0066A8  517D               	movf	___wmul@multiplier& (0+255),w,b
 34419  0066AA  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34420  0066AC  50F3               	movf	prodl,w,c
 34421  0066AE  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34422  0066B0  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34423  0066B2  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34424  0066B4  50F3               	movf	prodl,w,c
 34425  0066B6  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34426                           
 34427                           ; BSR set to: 0
 34428  0066B8  C081  F07D         	movff	___wmul@product,?___wmul
 34429  0066BC  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34430  0066C0  0012               	return	
 34431  0066C2                     __end_of___wmul:
 34432                           	opt stack 0
 34433                           tosu	equ	0xFFF
 34434                           tosh	equ	0xFFE
 34435                           tosl	equ	0xFFD
 34436                           pclath	equ	0xFFA
 34437                           tblptru	equ	0xFF8
 34438                           tblptrh	equ	0xFF7
 34439                           tblptrl	equ	0xFF6
 34440                           tablat	equ	0xFF5
 34441                           prodh	equ	0xFF4
 34442                           prodl	equ	0xFF3
 34443                           intcon	equ	0xFF2
 34444                           intcon2	equ	0xFF1
 34445                           intcon3	equ	0xFF0
 34446                           indf0	equ	0xFEF
 34447                           postinc0	equ	0xFEE
 34448                           plusw0	equ	0xFEB
 34449                           fsr0h	equ	0xFEA
 34450                           fsr0l	equ	0xFE9
 34451                           wreg	equ	0xFE8
 34452                           indf1	equ	0xFE7
 34453                           postinc1	equ	0xFE6
 34454                           postdec1	equ	0xFE5
 34455                           plusw1	equ	0xFE3
 34456                           fsr1h	equ	0xFE2
 34457                           fsr1l	equ	0xFE1
 34458                           indf2	equ	0xFDF
 34459                           postinc2	equ	0xFDE
 34460                           postdec2	equ	0xFDD
 34461                           plusw2	equ	0xFDB
 34462                           fsr2h	equ	0xFDA
 34463                           fsr2l	equ	0xFD9
 34464                           status	equ	0xFD8
 34465                           
 34466 ;; *************** function _I2c_InitI2cModule *****************
 34467 ;; Defined at:
 34468 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34469 ;; Parameters:    Size  Location     Type
 34470 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34471 ;;		 -> I2cConfig(10), 
 34472 ;; Auto vars:     Size  Location     Type
 34473 ;;		None
 34474 ;; Return value:  Size  Location     Type
 34475 ;;                  1    wreg      void 
 34476 ;; Registers used:
 34477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34478 ;; Tracked objects:
 34479 ;;		On entry : 0/0
 34480 ;;		On exit  : 0/0
 34481 ;;		Unchanged: 0/0
 34482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34486 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34487 ;;Total ram usage:        4 bytes
 34488 ;; Hardware stack levels used:    1
 34489 ;; Hardware stack levels required when called:   13
 34490 ;; This function calls:
 34491 ;;		_SetBaudRate
 34492 ;; This function is called by:
 34493 ;;		_I2cSlv_MainTask
 34494 ;; This function uses a non-reentrant model
 34495 ;;
 34496                           
 34497                           	psect	text161
 34498  0053A4                     __ptext161:
 34499                           	opt stack 0
 34500  0053A4                     _I2c_InitI2cModule:
 34501                           	opt stack 14
 34502                           
 34503                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34504                           
 34505                           ; BSR set to: 0
 34506                           ;incstack = 0
 34507  0053A4  8295               	bsf	3989,1,c	;volatile
 34508                           
 34509                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34510  0053A6  8095               	bsf	3989,0,c	;volatile
 34511                           
 34512                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34513  0053A8  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34514  0053AC  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34515  0053B0  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34516  0053B4  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34517  0053B8  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34518  0053BC  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34519  0053C0  0100               	movlb	0	; () banked
 34520  0053C2  EE20 F004          	lfsr	2,4
 34521  0053C6  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34522  0053C8  26D9               	addwf	fsr2l,f,c
 34523  0053CA  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34524  0053CC  22DA               	addwfc	fsr2h,f,c
 34525  0053CE  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34526  0053D2  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34527  0053D6  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34528  0053DA  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34529  0053DE  EC6B  F02F         	call	_SetBaudRate	;wreg free
 34530                           
 34531                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34532  0053E2  0100               	movlb	0	; () banked
 34533  0053E4  EE20 F008          	lfsr	2,8
 34534  0053E8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34535  0053EA  26D9               	addwf	fsr2l,f,c
 34536  0053EC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34537  0053EE  22DA               	addwfc	fsr2h,f,c
 34538  0053F0  50DF               	movf	indf2,w,c
 34539  0053F2  1272               	iorwf	3954,f,c	;volatile
 34540                           
 34541                           ; BSR set to: 0
 34542                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34543  0053F4  EE20 F009          	lfsr	2,9
 34544  0053F8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34545  0053FA  26D9               	addwf	fsr2l,f,c
 34546  0053FC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34547  0053FE  22DA               	addwfc	fsr2h,f,c
 34548  005400  50DF               	movf	indf2,w,c
 34549  005402  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34550  005404  0E05               	movlw	5
 34551  005406  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34552  005408                     u14725:
 34553  005408  90D8               	bcf	status,0,c
 34554  00540A  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34555  00540C  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34556  00540E  D7FC               	goto	u14725
 34557  005410  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34558  005412  1272               	iorwf	3954,f,c	;volatile
 34559                           
 34560                           ; BSR set to: 0
 34561  005414  0012               	return		;funcret
 34562  005416                     __end_of_I2c_InitI2cModule:
 34563                           	opt stack 0
 34564                           tosu	equ	0xFFF
 34565                           tosh	equ	0xFFE
 34566                           tosl	equ	0xFFD
 34567                           pclath	equ	0xFFA
 34568                           tblptru	equ	0xFF8
 34569                           tblptrh	equ	0xFF7
 34570                           tblptrl	equ	0xFF6
 34571                           tablat	equ	0xFF5
 34572                           prodh	equ	0xFF4
 34573                           prodl	equ	0xFF3
 34574                           intcon	equ	0xFF2
 34575                           intcon2	equ	0xFF1
 34576                           intcon3	equ	0xFF0
 34577                           indf0	equ	0xFEF
 34578                           postinc0	equ	0xFEE
 34579                           plusw0	equ	0xFEB
 34580                           fsr0h	equ	0xFEA
 34581                           fsr0l	equ	0xFE9
 34582                           wreg	equ	0xFE8
 34583                           indf1	equ	0xFE7
 34584                           postinc1	equ	0xFE6
 34585                           postdec1	equ	0xFE5
 34586                           plusw1	equ	0xFE3
 34587                           fsr1h	equ	0xFE2
 34588                           fsr1l	equ	0xFE1
 34589                           indf2	equ	0xFDF
 34590                           postinc2	equ	0xFDE
 34591                           postdec2	equ	0xFDD
 34592                           plusw2	equ	0xFDB
 34593                           fsr2h	equ	0xFDA
 34594                           fsr2l	equ	0xFD9
 34595                           status	equ	0xFD8
 34596                           
 34597 ;; *************** function _SetBaudRate *****************
 34598 ;; Defined at:
 34599 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34600 ;; Parameters:    Size  Location     Type
 34601 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34602 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34603 ;; Auto vars:     Size  Location     Type
 34604 ;;		None
 34605 ;; Return value:  Size  Location     Type
 34606 ;;                  1    wreg      void 
 34607 ;; Registers used:
 34608 ;;		wreg, status,2, status,0, cstack
 34609 ;; Tracked objects:
 34610 ;;		On entry : 0/0
 34611 ;;		On exit  : 0/0
 34612 ;;		Unchanged: 0/0
 34613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34617 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34618 ;;Total ram usage:       12 bytes
 34619 ;; Hardware stack levels used:    1
 34620 ;; Hardware stack levels required when called:   12
 34621 ;; This function calls:
 34622 ;;		___lldiv
 34623 ;; This function is called by:
 34624 ;;		_I2c_InitI2cModule
 34625 ;; This function uses a non-reentrant model
 34626 ;;
 34627                           
 34628                           	psect	text162
 34629  005ED6                     __ptext162:
 34630                           	opt stack 0
 34631  005ED6                     _SetBaudRate:
 34632                           	opt stack 14
 34633                           
 34634                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34635                           
 34636                           ; BSR set to: 0
 34637                           ;incstack = 0
 34638  005ED6  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34639  005EDA  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34640  005EDE  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34641  005EE2  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34642  005EE6  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34643  005EEA  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34644  005EEE  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34645  005EF2  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34646  005EF6  0E02               	movlw	2
 34647  005EF8                     u13485:
 34648  005EF8  90D8               	bcf	status,0,c
 34649  005EFA  0100               	movlb	0	; () banked
 34650  005EFC  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34651  005EFE  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34652  005F00  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34653  005F02  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34654  005F04  2EE8               	decfsz	wreg,f,c
 34655  005F06  D7F8               	goto	u13485
 34656  005F08  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34657  005F0C  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34658  005F10  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34659  005F14  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34660  005F18  EC16  F029         	call	___lldiv	;wreg free
 34661  005F1C  0100               	movlb	0	; () banked
 34662  005F1E  0589               	decf	?___lldiv& (0+255),w,b
 34663  005F20  6E74               	movwf	3956,c	;volatile
 34664                           
 34665                           ; BSR set to: 0
 34666  005F22  0012               	return		;funcret
 34667  005F24                     __end_of_SetBaudRate:
 34668                           	opt stack 0
 34669                           tosu	equ	0xFFF
 34670                           tosh	equ	0xFFE
 34671                           tosl	equ	0xFFD
 34672                           pclath	equ	0xFFA
 34673                           tblptru	equ	0xFF8
 34674                           tblptrh	equ	0xFF7
 34675                           tblptrl	equ	0xFF6
 34676                           tablat	equ	0xFF5
 34677                           prodh	equ	0xFF4
 34678                           prodl	equ	0xFF3
 34679                           intcon	equ	0xFF2
 34680                           intcon2	equ	0xFF1
 34681                           intcon3	equ	0xFF0
 34682                           indf0	equ	0xFEF
 34683                           postinc0	equ	0xFEE
 34684                           plusw0	equ	0xFEB
 34685                           fsr0h	equ	0xFEA
 34686                           fsr0l	equ	0xFE9
 34687                           wreg	equ	0xFE8
 34688                           indf1	equ	0xFE7
 34689                           postinc1	equ	0xFE6
 34690                           postdec1	equ	0xFE5
 34691                           plusw1	equ	0xFE3
 34692                           fsr1h	equ	0xFE2
 34693                           fsr1l	equ	0xFE1
 34694                           indf2	equ	0xFDF
 34695                           postinc2	equ	0xFDE
 34696                           postdec2	equ	0xFDD
 34697                           plusw2	equ	0xFDB
 34698                           fsr2h	equ	0xFDA
 34699                           fsr2l	equ	0xFD9
 34700                           status	equ	0xFD8
 34701                           
 34702 ;; *************** function ___lldiv *****************
 34703 ;; Defined at:
 34704 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34705 ;; Parameters:    Size  Location     Type
 34706 ;;  dividend        4   41[BANK0 ] unsigned long 
 34707 ;;  divisor         4   45[BANK0 ] unsigned long 
 34708 ;; Auto vars:     Size  Location     Type
 34709 ;;  quotient        4   49[BANK0 ] unsigned long 
 34710 ;;  counter         1   53[BANK0 ] unsigned char 
 34711 ;; Return value:  Size  Location     Type
 34712 ;;                  4   41[BANK0 ] unsigned long 
 34713 ;; Registers used:
 34714 ;;		wreg, status,2, status,0
 34715 ;; Tracked objects:
 34716 ;;		On entry : 0/0
 34717 ;;		On exit  : 0/0
 34718 ;;		Unchanged: 0/0
 34719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34720 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34721 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34723 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34724 ;;Total ram usage:       13 bytes
 34725 ;; Hardware stack levels used:    1
 34726 ;; Hardware stack levels required when called:   11
 34727 ;; This function calls:
 34728 ;;		Nothing
 34729 ;; This function is called by:
 34730 ;;		_SetBaudRate
 34731 ;;		_Tmr_TmrBPrSet
 34732 ;;		_SetUartBaudRate
 34733 ;; This function uses a non-reentrant model
 34734 ;;
 34735                           
 34736                           	psect	text163
 34737  00522C                     __ptext163:
 34738                           	opt stack 0
 34739  00522C                     ___lldiv:
 34740                           	opt stack 15
 34741                           
 34742                           ; BSR set to: 0
 34743                           ;incstack = 0
 34744  00522C  0E00               	movlw	0
 34745  00522E  0100               	movlb	0	; () banked
 34746  005230  6F91               	movwf	___lldiv@quotient& (0+255),b
 34747  005232  0E00               	movlw	0
 34748  005234  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34749  005236  0E00               	movlw	0
 34750  005238  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34751  00523A  0E00               	movlw	0
 34752  00523C  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34753                           
 34754                           ; BSR set to: 0
 34755  00523E  518D               	movf	___lldiv@divisor& (0+255),w,b
 34756  005240  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34757  005242  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34758  005244  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34759  005246  B4D8               	btfsc	status,2,c
 34760  005248  D02A               	goto	l3308
 34761                           
 34762                           ; BSR set to: 0
 34763  00524A  0E01               	movlw	1
 34764  00524C  6F95               	movwf	___lldiv@counter& (0+255),b
 34765  00524E  D006               	goto	l3303
 34766  005250                     
 34767                           ; BSR set to: 0
 34768                           
 34769                           ; BSR set to: 0
 34770  005250  90D8               	bcf	status,0,c
 34771  005252  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34772  005254  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34773  005256  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34774  005258  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34775  00525A  2B95               	incf	___lldiv@counter& (0+255),f,b
 34776  00525C                     l3303:
 34777                           
 34778                           ; BSR set to: 0
 34779                           
 34780                           ; BSR set to: 0
 34781  00525C  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34782  00525E  D7F8               	goto	l3304
 34783  005260                     u12480:
 34784                           
 34785                           ; BSR set to: 0
 34786                           
 34787                           ; BSR set to: 0
 34788                           
 34789                           ; BSR set to: 0
 34790  005260  90D8               	bcf	status,0,c
 34791  005262  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34792  005264  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34793  005266  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34794  005268  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34795                           
 34796                           ; BSR set to: 0
 34797  00526A  518D               	movf	___lldiv@divisor& (0+255),w,b
 34798  00526C  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34799  00526E  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34800  005270  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34801  005272  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34802  005274  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34803  005276  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34804  005278  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34805  00527A  A0D8               	btfss	status,0,c
 34806  00527C  D009               	goto	l3307
 34807                           
 34808                           ; BSR set to: 0
 34809  00527E  518D               	movf	___lldiv@divisor& (0+255),w,b
 34810  005280  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34811  005282  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34812  005284  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34813  005286  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34814  005288  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34815  00528A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34816  00528C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34817                           
 34818                           ; BSR set to: 0
 34819  00528E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34820  005290                     l3307:
 34821                           
 34822                           ; BSR set to: 0
 34823                           
 34824                           ; BSR set to: 0
 34825  005290  90D8               	bcf	status,0,c
 34826  005292  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34827  005294  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34828  005296  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34829  005298  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34830                           
 34831                           ; BSR set to: 0
 34832  00529A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34833  00529C  D7E1               	goto	u12480
 34834  00529E                     l3308:
 34835                           
 34836                           ; BSR set to: 0
 34837                           
 34838                           ; BSR set to: 0
 34839  00529E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34840  0052A2  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34841  0052A6  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34842  0052AA  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34843                           
 34844                           ; BSR set to: 0
 34845  0052AE  0012               	return		;funcret
 34846  0052B0                     __end_of___lldiv:
 34847                           	opt stack 0
 34848                           tosu	equ	0xFFF
 34849                           tosh	equ	0xFFE
 34850                           tosl	equ	0xFFD
 34851                           pclath	equ	0xFFA
 34852                           tblptru	equ	0xFF8
 34853                           tblptrh	equ	0xFF7
 34854                           tblptrl	equ	0xFF6
 34855                           tablat	equ	0xFF5
 34856                           prodh	equ	0xFF4
 34857                           prodl	equ	0xFF3
 34858                           intcon	equ	0xFF2
 34859                           intcon2	equ	0xFF1
 34860                           intcon3	equ	0xFF0
 34861                           indf0	equ	0xFEF
 34862                           postinc0	equ	0xFEE
 34863                           plusw0	equ	0xFEB
 34864                           fsr0h	equ	0xFEA
 34865                           fsr0l	equ	0xFE9
 34866                           wreg	equ	0xFE8
 34867                           indf1	equ	0xFE7
 34868                           postinc1	equ	0xFE6
 34869                           postdec1	equ	0xFE5
 34870                           plusw1	equ	0xFE3
 34871                           fsr1h	equ	0xFE2
 34872                           fsr1l	equ	0xFE1
 34873                           indf2	equ	0xFDF
 34874                           postinc2	equ	0xFDE
 34875                           postdec2	equ	0xFDD
 34876                           plusw2	equ	0xFDB
 34877                           fsr2h	equ	0xFDA
 34878                           fsr2l	equ	0xFD9
 34879                           status	equ	0xFD8
 34880                           
 34881 ;; *************** function _I2cSetConfig *****************
 34882 ;; Defined at:
 34883 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34884 ;; Parameters:    Size  Location     Type
 34885 ;;		None
 34886 ;; Auto vars:     Size  Location     Type
 34887 ;;		None
 34888 ;; Return value:  Size  Location     Type
 34889 ;;                  1    wreg      void 
 34890 ;; Registers used:
 34891 ;;		wreg, status,2
 34892 ;; Tracked objects:
 34893 ;;		On entry : 0/0
 34894 ;;		On exit  : 0/0
 34895 ;;		Unchanged: 0/0
 34896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34901 ;;Total ram usage:        0 bytes
 34902 ;; Hardware stack levels used:    1
 34903 ;; Hardware stack levels required when called:   11
 34904 ;; This function calls:
 34905 ;;		Nothing
 34906 ;; This function is called by:
 34907 ;;		_I2cSlv_MainTask
 34908 ;; This function uses a non-reentrant model
 34909 ;;
 34910                           
 34911                           	psect	text164
 34912  00661A                     __ptext164:
 34913                           	opt stack 0
 34914  00661A                     _I2cSetConfig:
 34915                           	opt stack 16
 34916                           
 34917                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 34918                           
 34919                           ; BSR set to: 0
 34920                           ;incstack = 0
 34921  00661A  0E80               	movlw	128
 34922  00661C  0103               	movlb	3	; () banked
 34923  00661E  6F56               	movwf	_I2cConfig& (0+255),b
 34924  006620  0E1A               	movlw	26
 34925  006622  6F57               	movwf	(_I2cConfig+1)& (0+255),b
 34926  006624  0E06               	movlw	6
 34927  006626  6F58               	movwf	(_I2cConfig+2)& (0+255),b
 34928  006628  0E00               	movlw	0
 34929  00662A  6F59               	movwf	(_I2cConfig+3)& (0+255),b
 34930                           
 34931                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 34932  00662C  0E00               	movlw	0
 34933  00662E  6F5A               	movwf	(_I2cConfig+4)& (0+255),b
 34934  006630  0E6C               	movlw	108
 34935  006632  6F5B               	movwf	(_I2cConfig+5)& (0+255),b
 34936  006634  0EDC               	movlw	220
 34937  006636  6F5C               	movwf	(_I2cConfig+6)& (0+255),b
 34938  006638  0E02               	movlw	2
 34939  00663A  6F5D               	movwf	(_I2cConfig+7)& (0+255),b
 34940                           
 34941                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 34942  00663C  0E08               	movlw	8
 34943  00663E  6F5E               	movwf	(_I2cConfig+8)& (0+255),b
 34944                           
 34945                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 34946  006640  0E01               	movlw	1
 34947  006642  6F5F               	movwf	(_I2cConfig+9)& (0+255),b
 34948                           
 34949                           ; BSR set to: 3
 34950  006644  0012               	return		;funcret
 34951  006646                     __end_of_I2cSetConfig:
 34952                           	opt stack 0
 34953                           tosu	equ	0xFFF
 34954                           tosh	equ	0xFFE
 34955                           tosl	equ	0xFFD
 34956                           pclath	equ	0xFFA
 34957                           tblptru	equ	0xFF8
 34958                           tblptrh	equ	0xFF7
 34959                           tblptrl	equ	0xFF6
 34960                           tablat	equ	0xFF5
 34961                           prodh	equ	0xFF4
 34962                           prodl	equ	0xFF3
 34963                           intcon	equ	0xFF2
 34964                           intcon2	equ	0xFF1
 34965                           intcon3	equ	0xFF0
 34966                           indf0	equ	0xFEF
 34967                           postinc0	equ	0xFEE
 34968                           plusw0	equ	0xFEB
 34969                           fsr0h	equ	0xFEA
 34970                           fsr0l	equ	0xFE9
 34971                           wreg	equ	0xFE8
 34972                           indf1	equ	0xFE7
 34973                           postinc1	equ	0xFE6
 34974                           postdec1	equ	0xFE5
 34975                           plusw1	equ	0xFE3
 34976                           fsr1h	equ	0xFE2
 34977                           fsr1l	equ	0xFE1
 34978                           indf2	equ	0xFDF
 34979                           postinc2	equ	0xFDE
 34980                           postdec2	equ	0xFDD
 34981                           plusw2	equ	0xFDB
 34982                           fsr2h	equ	0xFDA
 34983                           fsr2l	equ	0xFD9
 34984                           status	equ	0xFD8
 34985                           
 34986 ;; *************** function _I2cSendMsgSm *****************
 34987 ;; Defined at:
 34988 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34989 ;; Parameters:    Size  Location     Type
 34990 ;;		None
 34991 ;; Auto vars:     Size  Location     Type
 34992 ;;		None
 34993 ;; Return value:  Size  Location     Type
 34994 ;;                  1    wreg      void 
 34995 ;; Registers used:
 34996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34997 ;; Tracked objects:
 34998 ;;		On entry : 0/0
 34999 ;;		On exit  : 0/0
 35000 ;;		Unchanged: 0/0
 35001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35006 ;;Total ram usage:        0 bytes
 35007 ;; Hardware stack levels used:    1
 35008 ;; Hardware stack levels required when called:   13
 35009 ;; This function calls:
 35010 ;;		_I2c_ReadData
 35011 ;;		_I2c_WriteData
 35012 ;;		_ReceiveEvt
 35013 ;; This function is called by:
 35014 ;;		_I2cSlv_MainTask
 35015 ;; This function uses a non-reentrant model
 35016 ;;
 35017                           
 35018                           	psect	text165
 35019  004070                     __ptext165:
 35020                           	opt stack 0
 35021  004070                     _I2cSendMsgSm:
 35022                           	opt stack 14
 35023                           
 35024                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 35025                           ;i2c_slv.c: 122: switch(I2cComState)
 35026                           
 35027                           ; BSR set to: 3
 35028                           ;incstack = 0
 35029  004070  D04F               	goto	l1382
 35030  004072                     
 35031                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 35032  004072  0ED7               	movlw	low _I2cWriteDataEvt
 35033  004074  0100               	movlb	0	; () banked
 35034  004076  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35035  004078  0E00               	movlw	high _I2cWriteDataEvt
 35036  00407A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35037  00407C  ECF6  F032         	call	_ReceiveEvt	;wreg free
 35038  004080  0900               	iorlw	0
 35039  004082  B4D8               	btfsc	status,2,c
 35040  004084  D007               	goto	l1384
 35041                           
 35042                           ;i2c_slv.c: 127: {
 35043                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 35044  004086  0E01               	movlw	1
 35045  004088  0101               	movlb	1	; () banked
 35046  00408A  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35047                           
 35048                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 35049  00408C  0E01               	movlw	1
 35050  00408E  0100               	movlb	0	; () banked
 35051  004090  6FCF               	movwf	_I2cComSts& (0+255),b
 35052                           
 35053                           ;i2c_slv.c: 132: }
 35054  004092  0012               	return	
 35055  004094                     l1384:
 35056                           
 35057                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35058                           
 35059                           ; BSR set to: 0
 35060  004094  0E39               	movlw	low _I2cReadDataEvt
 35061  004096  0100               	movlb	0	; () banked
 35062  004098  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35063  00409A  0E00               	movlw	high _I2cReadDataEvt
 35064  00409C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35065  00409E  ECF6  F032         	call	_ReceiveEvt	;wreg free
 35066  0040A2  0900               	iorlw	0
 35067  0040A4  B4D8               	btfsc	status,2,c
 35068  0040A6  D007               	goto	l1386
 35069                           
 35070                           ;i2c_slv.c: 134: {
 35071                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35072  0040A8  0E02               	movlw	2
 35073  0040AA  0101               	movlb	1	; () banked
 35074  0040AC  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35075                           
 35076                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35077  0040AE  0E02               	movlw	2
 35078  0040B0  0100               	movlb	0	; () banked
 35079  0040B2  6FCF               	movwf	_I2cComSts& (0+255),b
 35080                           
 35081                           ;i2c_slv.c: 139: }
 35082  0040B4  0012               	return	
 35083  0040B6                     l1386:
 35084                           
 35085                           ;i2c_slv.c: 140: else
 35086                           ;i2c_slv.c: 141: {
 35087                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35088                           
 35089                           ; BSR set to: 0
 35090  0040B6  0E00               	movlw	0
 35091  0040B8  0100               	movlb	0	; () banked
 35092  0040BA  6FCF               	movwf	_I2cComSts& (0+255),b
 35093                           
 35094                           ; BSR set to: 0
 35095                           ;i2c_slv.c: 144: }
 35096                           ;i2c_slv.c: 145: break;
 35097                           
 35098                           ; BSR set to: 0
 35099  0040BC  0012               	return	
 35100  0040BE                     
 35101                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35102                           
 35103                           ; BSR set to: 0
 35104  0040BE  0EA2               	movlw	low _I2cTxPacket
 35105  0040C0  0100               	movlb	0	; () banked
 35106  0040C2  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35107  0040C4  0E03               	movlw	high _I2cTxPacket
 35108  0040C6  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35109  0040C8  EC59  F00F         	call	_I2c_WriteData	;wreg free
 35110  0040CC  0900               	iorlw	0
 35111  0040CE  B4D8               	btfsc	status,2,c
 35112  0040D0  0012               	return	
 35113                           
 35114                           ;i2c_slv.c: 150: {
 35115                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35116  0040D2  0E03               	movlw	3
 35117  0040D4  0101               	movlb	1	; () banked
 35118  0040D6  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35119                           
 35120                           ; BSR set to: 1
 35121                           ;i2c_slv.c: 153: }
 35122                           ;i2c_slv.c: 154: break;
 35123  0040D8  0012               	return	
 35124  0040DA                     
 35125                           ; BSR set to: 1
 35126                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35127                           
 35128                           ; BSR set to: 1
 35129  0040DA  0E9C               	movlw	low _I2cRxPacket
 35130  0040DC  0100               	movlb	0	; () banked
 35131  0040DE  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35132  0040E0  0E03               	movlw	high _I2cRxPacket
 35133  0040E2  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35134  0040E4  ECC0  F010         	call	_I2c_ReadData	;wreg free
 35135  0040E8  0900               	iorlw	0
 35136  0040EA  B4D8               	btfsc	status,2,c
 35137  0040EC  0012               	return	
 35138                           
 35139                           ;i2c_slv.c: 159: {
 35140                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 35141  0040EE  0E04               	movlw	4
 35142  0040F0  0101               	movlb	1	; () banked
 35143  0040F2  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35144                           
 35145                           ; BSR set to: 1
 35146                           ;i2c_slv.c: 162: }
 35147                           ;i2c_slv.c: 164: break;
 35148  0040F4  0012               	return	
 35149  0040F6                     
 35150                           ; BSR set to: 1
 35151                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 35152                           
 35153                           ; BSR set to: 1
 35154  0040F6  0E00               	movlw	0
 35155  0040F8  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35156                           
 35157                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 35158  0040FA  0E00               	movlw	0
 35159  0040FC  0100               	movlb	0	; () banked
 35160  0040FE  6FCF               	movwf	_I2cComSts& (0+255),b
 35161                           
 35162                           ;i2c_slv.c: 171: break;
 35163  004100  0012               	return	
 35164  004102                     
 35165                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 35166                           
 35167                           ; BSR set to: 0
 35168  004102  0E00               	movlw	0
 35169  004104  0101               	movlb	1	; () banked
 35170  004106  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35171                           
 35172                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 35173  004108  0E00               	movlw	0
 35174  00410A  0100               	movlb	0	; () banked
 35175  00410C  6FCF               	movwf	_I2cComSts& (0+255),b
 35176                           
 35177                           ; BSR set to: 0
 35178                           ;i2c_slv.c: 182: }
 35179                           
 35180                           ; BSR set to: 0
 35181                           ;i2c_slv.c: 181: break;
 35182                           
 35183                           ;i2c_slv.c: 180: default:
 35184                           
 35185                           ;i2c_slv.c: 178: break;
 35186  00410E  0012               	return	
 35187  004110                     l1382:
 35188                           
 35189                           ; BSR set to: 0
 35190  004110  0101               	movlb	1	; () banked
 35191  004112  51E4               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 35192                           
 35193                           ; Switch size 1, requested type "space"
 35194                           ; Number of cases is 5, Range of values is 0 to 4
 35195                           ; switch strategies available:
 35196                           ; Name         Instructions Cycles
 35197                           ; simple_byte           16     9 (average)
 35198                           ;	Chosen strategy is simple_byte
 35199  004114  0A00               	xorlw	0	; case 0
 35200  004116  B4D8               	btfsc	status,2,c
 35201  004118  D7AC               	goto	l1383
 35202  00411A  0A01               	xorlw	1	; case 1
 35203  00411C  B4D8               	btfsc	status,2,c
 35204  00411E  D7CF               	goto	l1389
 35205  004120  0A03               	xorlw	3	; case 2
 35206  004122  B4D8               	btfsc	status,2,c
 35207  004124  D7DA               	goto	l1391
 35208  004126  0A01               	xorlw	1	; case 3
 35209  004128  B4D8               	btfsc	status,2,c
 35210  00412A  D7E5               	goto	l1393
 35211  00412C  0A07               	xorlw	7	; case 4
 35212  00412E  A4D8               	btfss	status,2,c
 35213  004130  0012               	return	
 35214  004132  D7E7               	goto	l1394
 35215  004134                     __end_of_I2cSendMsgSm:
 35216                           	opt stack 0
 35217                           tosu	equ	0xFFF
 35218                           tosh	equ	0xFFE
 35219                           tosl	equ	0xFFD
 35220                           pclath	equ	0xFFA
 35221                           tblptru	equ	0xFF8
 35222                           tblptrh	equ	0xFF7
 35223                           tblptrl	equ	0xFF6
 35224                           tablat	equ	0xFF5
 35225                           prodh	equ	0xFF4
 35226                           prodl	equ	0xFF3
 35227                           intcon	equ	0xFF2
 35228                           intcon2	equ	0xFF1
 35229                           intcon3	equ	0xFF0
 35230                           indf0	equ	0xFEF
 35231                           postinc0	equ	0xFEE
 35232                           plusw0	equ	0xFEB
 35233                           fsr0h	equ	0xFEA
 35234                           fsr0l	equ	0xFE9
 35235                           wreg	equ	0xFE8
 35236                           indf1	equ	0xFE7
 35237                           postinc1	equ	0xFE6
 35238                           postdec1	equ	0xFE5
 35239                           plusw1	equ	0xFE3
 35240                           fsr1h	equ	0xFE2
 35241                           fsr1l	equ	0xFE1
 35242                           indf2	equ	0xFDF
 35243                           postinc2	equ	0xFDE
 35244                           postdec2	equ	0xFDD
 35245                           plusw2	equ	0xFDB
 35246                           fsr2h	equ	0xFDA
 35247                           fsr2l	equ	0xFD9
 35248                           status	equ	0xFD8
 35249                           
 35250 ;; *************** function _ReceiveEvt *****************
 35251 ;; Defined at:
 35252 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35253 ;; Parameters:    Size  Location     Type
 35254 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35255 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35256 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35257 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35258 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35259 ;;		 -> ActivateRiDetection(1), 
 35260 ;; Auto vars:     Size  Location     Type
 35261 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35262 ;; Return value:  Size  Location     Type
 35263 ;;                  1    wreg      enum E7699
 35264 ;; Registers used:
 35265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35266 ;; Tracked objects:
 35267 ;;		On entry : 0/0
 35268 ;;		On exit  : 0/0
 35269 ;;		Unchanged: 0/0
 35270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35275 ;;Total ram usage:        4 bytes
 35276 ;; Hardware stack levels used:    1
 35277 ;; Hardware stack levels required when called:   11
 35278 ;; This function calls:
 35279 ;;		Nothing
 35280 ;; This function is called by:
 35281 ;;		_MdmCntSm
 35282 ;;		_CheckModem
 35283 ;;		_ModemEvtParser
 35284 ;;		_GetSmsSm
 35285 ;;		_SendSmsSm
 35286 ;;		_Mdm_GetSmsData
 35287 ;;		_Mdm_IsSmsReceived
 35288 ;;		_Mdm_IsRinging
 35289 ;;		_GetCallerNumber
 35290 ;;		_InitGprsNetwork
 35291 ;;		_HttpGetMethod
 35292 ;;		_I2cSendMsgSm
 35293 ;;		_I2cSlv_I2cReadMsgSts
 35294 ;;		_RiSm
 35295 ;;		_GsmGprsTerminal
 35296 ;; This function uses a non-reentrant model
 35297 ;;
 35298                           
 35299                           	psect	text166
 35300  0065EC                     __ptext166:
 35301                           	opt stack 0
 35302  0065EC                     _ReceiveEvt:
 35303                           	opt stack 13
 35304                           
 35305                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35306                           
 35307                           ;incstack = 0
 35308  0065EC  0E00               	movlw	0
 35309  0065EE  0100               	movlb	0	; () banked
 35310  0065F0  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35311                           
 35312                           ; BSR set to: 0
 35313                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35314  0065F2  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35315  0065F6  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35316  0065FA  0E02               	movlw	2
 35317  0065FC  18DE               	xorwf	postinc2,w,c
 35318  0065FE  A4D8               	btfss	status,2,c
 35319  006600  D008               	goto	l832
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;os_ser.c: 106: {
 35323                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35324  006602  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35325  006606  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35326  00660A  0E01               	movlw	1
 35327  00660C  6EDF               	movwf	indf2,c
 35328                           
 35329                           ; BSR set to: 0
 35330                           ;os_ser.c: 110: EventStatus = EventReceived;
 35331  00660E  0E01               	movlw	1
 35332  006610  D001               	goto	L83
 35333  006612                     l832:
 35334                           
 35335                           ; BSR set to: 0
 35336                           ;os_ser.c: 112: else
 35337                           ;os_ser.c: 113: {
 35338                           ;os_ser.c: 115: EventStatus = EventIdle;
 35339                           
 35340                           ; BSR set to: 0
 35341  006612  0E00               	movlw	0
 35342  006614                     L83:
 35343  006614  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35344                           
 35345                           ; BSR set to: 0
 35346                           ;os_ser.c: 116: }
 35347                           ;os_ser.c: 119: return(EventStatus);
 35348  006616  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35349  006618  0012               	return	
 35350  00661A                     __end_of_ReceiveEvt:
 35351                           	opt stack 0
 35352                           tosu	equ	0xFFF
 35353                           tosh	equ	0xFFE
 35354                           tosl	equ	0xFFD
 35355                           pclath	equ	0xFFA
 35356                           tblptru	equ	0xFF8
 35357                           tblptrh	equ	0xFF7
 35358                           tblptrl	equ	0xFF6
 35359                           tablat	equ	0xFF5
 35360                           prodh	equ	0xFF4
 35361                           prodl	equ	0xFF3
 35362                           intcon	equ	0xFF2
 35363                           intcon2	equ	0xFF1
 35364                           intcon3	equ	0xFF0
 35365                           indf0	equ	0xFEF
 35366                           postinc0	equ	0xFEE
 35367                           plusw0	equ	0xFEB
 35368                           fsr0h	equ	0xFEA
 35369                           fsr0l	equ	0xFE9
 35370                           wreg	equ	0xFE8
 35371                           indf1	equ	0xFE7
 35372                           postinc1	equ	0xFE6
 35373                           postdec1	equ	0xFE5
 35374                           plusw1	equ	0xFE3
 35375                           fsr1h	equ	0xFE2
 35376                           fsr1l	equ	0xFE1
 35377                           indf2	equ	0xFDF
 35378                           postinc2	equ	0xFDE
 35379                           postdec2	equ	0xFDD
 35380                           plusw2	equ	0xFDB
 35381                           fsr2h	equ	0xFDA
 35382                           fsr2l	equ	0xFD9
 35383                           status	equ	0xFD8
 35384                           
 35385 ;; *************** function _I2c_WriteData *****************
 35386 ;; Defined at:
 35387 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35388 ;; Parameters:    Size  Location     Type
 35389 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35390 ;;		 -> I2cTxPacket(5), 
 35391 ;; Auto vars:     Size  Location     Type
 35392 ;;		None
 35393 ;; Return value:  Size  Location     Type
 35394 ;;                  1    wreg      enum E7740
 35395 ;; Registers used:
 35396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35397 ;; Tracked objects:
 35398 ;;		On entry : 0/0
 35399 ;;		On exit  : 0/0
 35400 ;;		Unchanged: 0/0
 35401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35405 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35406 ;;Total ram usage:        4 bytes
 35407 ;; Hardware stack levels used:    1
 35408 ;; Hardware stack levels required when called:   12
 35409 ;; This function calls:
 35410 ;;		_CheckAckStatus
 35411 ;;		_CheckTxStatus
 35412 ;;		_StartCondition
 35413 ;;		_StopCondition
 35414 ;;		_WriteByte
 35415 ;; This function is called by:
 35416 ;;		_I2cSendMsgSm
 35417 ;; This function uses a non-reentrant model
 35418 ;;
 35419                           
 35420                           	psect	text167
 35421  001EB2                     __ptext167:
 35422                           	opt stack 0
 35423  001EB2                     _I2c_WriteData:
 35424                           	opt stack 14
 35425                           
 35426                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35427                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35428                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35429                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35430                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35431                           
 35432                           ; BSR set to: 0
 35433                           ;incstack = 0
 35434  001EB2  D095               	goto	l160
 35435  001EB4                     
 35436                           ;i2c_drv.c: 264: StartCondition();
 35437  001EB4  ECB2  F035         	call	_StartCondition	;wreg free
 35438                           
 35439                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35440  001EB8  0E00               	movlw	0
 35441  001EBA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35442                           
 35443                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35444  001EBC  0E01               	movlw	1
 35445  001EBE  D084               	goto	L90
 35446  001EC0                     
 35447                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35448  001EC0  0100               	movlb	0	; () banked
 35449  001EC2  EE20 F001          	lfsr	2,1
 35450  001EC6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35451  001EC8  26D9               	addwf	fsr2l,f,c
 35452  001ECA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35453  001ECC  22DA               	addwfc	fsr2h,f,c
 35454  001ECE  50DF               	movf	indf2,w,c
 35455  001ED0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35456  001ED2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35457  001ED6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35458  001EDA  50DF               	movf	indf2,w,c
 35459  001EDC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35460  001EDE  90D8               	bcf	status,0,c
 35461  001EE0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35462  001EE2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35463  001EE4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35464  001EE8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35465  001EEC  6EDF               	movwf	indf2,c
 35466                           
 35467                           ; BSR set to: 0
 35468                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35469  001EEE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35470  001EF2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35471  001EF6  50DF               	movf	indf2,w,c
 35472  001EF8  EC90  F035         	call	_WriteByte
 35473                           
 35474                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35475  001EFC  0E02               	movlw	2
 35476  001EFE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35477  001F00                     
 35478                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35479  001F00  EC9A  F035         	call	_CheckTxStatus	;wreg free
 35480  001F04  0900               	iorlw	0
 35481  001F06  A4D8               	btfss	status,2,c
 35482  001F08  D089               	goto	l162
 35483                           
 35484                           ;i2c_drv.c: 282: {
 35485                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35486  001F0A  0E03               	movlw	3
 35487  001F0C  D01A               	goto	L92
 35488  001F0E                     
 35489                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35490  001F0E  0100               	movlb	0	; () banked
 35491  001F10  EE20 F002          	lfsr	2,2
 35492  001F14  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35493  001F16  26D9               	addwf	fsr2l,f,c
 35494  001F18  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35495  001F1A  22DA               	addwfc	fsr2h,f,c
 35496  001F1C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35497  001F20  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35498  001F24  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35499  001F28  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35500  001F2C  50DF               	movf	indf2,w,c
 35501  001F2E  EC90  F035         	call	_WriteByte
 35502                           
 35503                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35504  001F32  0E04               	movlw	4
 35505  001F34  D049               	goto	L90
 35506  001F36                     
 35507                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35508  001F36  EC9A  F035         	call	_CheckTxStatus	;wreg free
 35509  001F3A  0900               	iorlw	0
 35510  001F3C  A4D8               	btfss	status,2,c
 35511  001F3E  D06E               	goto	l162
 35512                           
 35513                           ;i2c_drv.c: 300: {
 35514                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35515  001F40  0E05               	movlw	5
 35516  001F42                     L92:
 35517  001F42  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35518                           
 35519                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35520  001F44  0E08               	movlw	8
 35521  001F46  D040               	goto	L90
 35522  001F48                     
 35523                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35524  001F48  0100               	movlb	0	; () banked
 35525  001F4A  EE20 F004          	lfsr	2,4
 35526  001F4E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35527  001F50  26D9               	addwf	fsr2l,f,c
 35528  001F52  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35529  001F54  22DA               	addwfc	fsr2h,f,c
 35530  001F56  50DF               	movf	indf2,w,c
 35531  001F58  B4D8               	btfsc	status,2,c
 35532  001F5A  D010               	goto	l170
 35533                           
 35534                           ; BSR set to: 0
 35535                           ;i2c_drv.c: 310: {
 35536                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35537  001F5C  EE20 F004          	lfsr	2,4
 35538  001F60  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35539  001F62  26D9               	addwf	fsr2l,f,c
 35540  001F64  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35541  001F66  22DA               	addwfc	fsr2h,f,c
 35542  001F68  06DF               	decf	indf2,f,c
 35543                           
 35544                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35545  001F6A  EE20 F002          	lfsr	2,2
 35546  001F6E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35547  001F70  26D9               	addwf	fsr2l,f,c
 35548  001F72  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35549  001F74  22DA               	addwfc	fsr2h,f,c
 35550  001F76  2ADE               	incf	postinc2,f,c
 35551  001F78  0E00               	movlw	0
 35552  001F7A  22DD               	addwfc	postdec2,f,c
 35553  001F7C                     l170:
 35554                           
 35555                           ; BSR set to: 0
 35556                           ;i2c_drv.c: 315: }
 35557                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35558  001F7C  EE20 F004          	lfsr	2,4
 35559  001F80  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35560  001F82  26D9               	addwf	fsr2l,f,c
 35561  001F84  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35562  001F86  22DA               	addwfc	fsr2h,f,c
 35563  001F88  50DF               	movf	indf2,w,c
 35564  001F8A  A4D8               	btfss	status,2,c
 35565  001F8C  D002               	goto	l171
 35566                           
 35567                           ; BSR set to: 0
 35568                           ;i2c_drv.c: 319: {
 35569                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35570  001F8E  0E06               	movlw	6
 35571  001F90  D01B               	goto	L90
 35572  001F92                     l171:
 35573                           
 35574                           ; BSR set to: 0
 35575                           ;i2c_drv.c: 323: else
 35576                           ;i2c_drv.c: 324: {
 35577                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35578                           
 35579                           ; BSR set to: 0
 35580  001F92  0E03               	movlw	3
 35581  001F94  D019               	goto	L90
 35582  001F96                     
 35583                           ;i2c_drv.c: 332: StopCondition();
 35584                           
 35585                           ; BSR set to: 0
 35586  001F96  ECB0  F035         	call	_StopCondition	;wreg free
 35587                           
 35588                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35589  001F9A  0E07               	movlw	7
 35590  001F9C  D015               	goto	L90
 35591  001F9E                     
 35592                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35593  001F9E  0E00               	movlw	0
 35594  001FA0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35595                           
 35596                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35597  001FA2  0E00               	movlw	0
 35598  001FA4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35599                           
 35600                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35601  001FA6  0E02               	movlw	2
 35602  001FA8  D018               	goto	L91
 35603  001FAA                     
 35604                           ;i2c_drv.c: 347: TentativeCounter++;
 35605  001FAA  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 35606                           
 35607                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35608  001FAC  EC9F  F035         	call	_CheckAckStatus	;wreg free
 35609  001FB0  0900               	iorlw	0
 35610  001FB2  A4D8               	btfss	status,2,c
 35611  001FB4  D005               	goto	l176
 35612                           
 35613                           ;i2c_drv.c: 350: {
 35614                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35615  001FB6  0E00               	movlw	0
 35616  001FB8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35617                           
 35618                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35619  001FBA  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35620                           
 35621                           ;i2c_drv.c: 355: }
 35622  001FBE  D02E               	goto	l162
 35623  001FC0                     l176:
 35624                           
 35625                           ;i2c_drv.c: 356: else
 35626                           ;i2c_drv.c: 357: {
 35627                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35628  001FC0  0E02               	movlw	2
 35629  001FC2  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35630  001FC4  D02B               	goto	l162
 35631                           
 35632                           ;i2c_drv.c: 360: {
 35633                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35634  001FC6  0E09               	movlw	9
 35635  001FC8                     L90:
 35636  001FC8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35637                           
 35638                           ;i2c_drv.c: 363: }
 35639                           ;i2c_drv.c: 364: }
 35640                           ;i2c_drv.c: 365: break;
 35641  001FCA  D028               	goto	l162
 35642  001FCC                     
 35643                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35644  001FCC  0E00               	movlw	0
 35645  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35646                           
 35647                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35648  001FD0  0E00               	movlw	0
 35649  001FD2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35650                           
 35651                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35652  001FD4  0E00               	movlw	0
 35653  001FD6  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35654                           
 35655                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35656  001FD8  0E01               	movlw	1
 35657  001FDA                     L91:
 35658  001FDA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35659                           
 35660                           ;i2c_drv.c: 379: }
 35661                           
 35662                           ;i2c_drv.c: 378: break;
 35663                           
 35664                           ;i2c_drv.c: 377: default:
 35665                           
 35666                           ;i2c_drv.c: 375: break;
 35667  001FDC  D01F               	goto	l162
 35668  001FDE                     l160:
 35669  001FDE  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 35670                           
 35671                           ; Switch size 1, requested type "space"
 35672                           ; Number of cases is 10, Range of values is 0 to 9
 35673                           ; switch strategies available:
 35674                           ; Name         Instructions Cycles
 35675                           ; simple_byte           31    16 (average)
 35676                           ;	Chosen strategy is simple_byte
 35677  001FE0  0A00               	xorlw	0	; case 0
 35678  001FE2  B4D8               	btfsc	status,2,c
 35679  001FE4  D767               	goto	l161
 35680  001FE6  0A01               	xorlw	1	; case 1
 35681  001FE8  B4D8               	btfsc	status,2,c
 35682  001FEA  D76A               	goto	l163
 35683  001FEC  0A03               	xorlw	3	; case 2
 35684  001FEE  B4D8               	btfsc	status,2,c
 35685  001FF0  D787               	goto	l164
 35686  001FF2  0A01               	xorlw	1	; case 3
 35687  001FF4  B4D8               	btfsc	status,2,c
 35688  001FF6  D78B               	goto	l166
 35689  001FF8  0A07               	xorlw	7	; case 4
 35690  001FFA  B4D8               	btfsc	status,2,c
 35691  001FFC  D79C               	goto	l167
 35692  001FFE  0A01               	xorlw	1	; case 5
 35693  002000  B4D8               	btfsc	status,2,c
 35694  002002  D7A2               	goto	l169
 35695  002004  0A03               	xorlw	3	; case 6
 35696  002006  B4D8               	btfsc	status,2,c
 35697  002008  D7C6               	goto	l173
 35698  00200A  0A01               	xorlw	1	; case 7
 35699  00200C  B4D8               	btfsc	status,2,c
 35700  00200E  D7C7               	goto	l174
 35701  002010  0A0F               	xorlw	15	; case 8
 35702  002012  B4D8               	btfsc	status,2,c
 35703  002014  D7CA               	goto	l175
 35704  002016  0A01               	xorlw	1	; case 9
 35705  002018  B4D8               	btfsc	status,2,c
 35706  00201A  D7D8               	goto	l179
 35707  00201C                     l162:
 35708                           
 35709                           ;i2c_drv.c: 382: return WriteStatus;
 35710  00201C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 35711  00201E  0012               	return	
 35712  002020                     __end_of_I2c_WriteData:
 35713                           	opt stack 0
 35714                           tosu	equ	0xFFF
 35715                           tosh	equ	0xFFE
 35716                           tosl	equ	0xFFD
 35717                           pclath	equ	0xFFA
 35718                           tblptru	equ	0xFF8
 35719                           tblptrh	equ	0xFF7
 35720                           tblptrl	equ	0xFF6
 35721                           tablat	equ	0xFF5
 35722                           prodh	equ	0xFF4
 35723                           prodl	equ	0xFF3
 35724                           intcon	equ	0xFF2
 35725                           intcon2	equ	0xFF1
 35726                           intcon3	equ	0xFF0
 35727                           indf0	equ	0xFEF
 35728                           postinc0	equ	0xFEE
 35729                           plusw0	equ	0xFEB
 35730                           fsr0h	equ	0xFEA
 35731                           fsr0l	equ	0xFE9
 35732                           wreg	equ	0xFE8
 35733                           indf1	equ	0xFE7
 35734                           postinc1	equ	0xFE6
 35735                           postdec1	equ	0xFE5
 35736                           plusw1	equ	0xFE3
 35737                           fsr1h	equ	0xFE2
 35738                           fsr1l	equ	0xFE1
 35739                           indf2	equ	0xFDF
 35740                           postinc2	equ	0xFDE
 35741                           postdec2	equ	0xFDD
 35742                           plusw2	equ	0xFDB
 35743                           fsr2h	equ	0xFDA
 35744                           fsr2l	equ	0xFD9
 35745                           status	equ	0xFD8
 35746                           
 35747 ;; *************** function _I2c_ReadData *****************
 35748 ;; Defined at:
 35749 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35750 ;; Parameters:    Size  Location     Type
 35751 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35752 ;;		 -> I2cRxPacket(6), 
 35753 ;; Auto vars:     Size  Location     Type
 35754 ;;		None
 35755 ;; Return value:  Size  Location     Type
 35756 ;;                  1    wreg      enum E7787
 35757 ;; Registers used:
 35758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35759 ;; Tracked objects:
 35760 ;;		On entry : 0/0
 35761 ;;		On exit  : 0/0
 35762 ;;		Unchanged: 0/0
 35763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;Total ram usage:        4 bytes
 35769 ;; Hardware stack levels used:    1
 35770 ;; Hardware stack levels required when called:   12
 35771 ;; This function calls:
 35772 ;;		_CheckAckStatus
 35773 ;;		_CheckTxStatus
 35774 ;;		_EnableReceiver
 35775 ;;		_GenerateEvt
 35776 ;;		_ReadByte
 35777 ;;		_SetAckStatus
 35778 ;;		_StartCondition
 35779 ;;		_StopCondition
 35780 ;;		_WriteByte
 35781 ;; This function is called by:
 35782 ;;		_I2cSendMsgSm
 35783 ;; This function uses a non-reentrant model
 35784 ;;
 35785                           
 35786                           	psect	text168
 35787  002180                     __ptext168:
 35788                           	opt stack 0
 35789  002180                     _I2c_ReadData:
 35790                           	opt stack 14
 35791                           
 35792                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35793                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35794                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35795                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35796                           ;i2c_drv.c: 402: switch (I2cReadState)
 35797                           
 35798                           ;incstack = 0
 35799  002180  D090               	goto	l192
 35800  002182                     
 35801                           ;i2c_drv.c: 406: StartCondition();
 35802  002182  ECB2  F035         	call	_StartCondition	;wreg free
 35803                           
 35804                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35805  002186  0E00               	movlw	0
 35806  002188  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35807                           
 35808                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35809  00218A  0E01               	movlw	1
 35810  00218C  D083               	goto	L100
 35811  00218E                     
 35812                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35813  00218E  0100               	movlb	0	; () banked
 35814  002190  EE20 F001          	lfsr	2,1
 35815  002194  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35816  002196  26D9               	addwf	fsr2l,f,c
 35817  002198  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35818  00219A  22DA               	addwfc	fsr2h,f,c
 35819  00219C  50DF               	movf	indf2,w,c
 35820  00219E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35821  0021A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35822  0021A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35823  0021A8  50DF               	movf	indf2,w,c
 35824  0021AA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35825  0021AC  90D8               	bcf	status,0,c
 35826  0021AE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35827  0021B0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35828  0021B2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35829  0021B6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35830  0021BA  6EDF               	movwf	indf2,c
 35831                           
 35832                           ; BSR set to: 0
 35833                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35834  0021BC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35835  0021C0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35836  0021C4  50DF               	movf	indf2,w,c
 35837  0021C6  EC90  F035         	call	_WriteByte
 35838                           
 35839                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35840  0021CA  0E02               	movlw	2
 35841  0021CC  D063               	goto	L100
 35842  0021CE                     
 35843                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35844  0021CE  EC9A  F035         	call	_CheckTxStatus	;wreg free
 35845  0021D2  0900               	iorlw	0
 35846  0021D4  A4D8               	btfss	status,2,c
 35847  0021D6  D081               	goto	l194
 35848                           
 35849                           ;i2c_drv.c: 425: {
 35850                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35851  0021D8  0E03               	movlw	3
 35852  0021DA  D05C               	goto	L100
 35853  0021DC                     
 35854                           ;i2c_drv.c: 433: TentativeCounter++;
 35855  0021DC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 35856                           
 35857                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35858  0021DE  EC9F  F035         	call	_CheckAckStatus	;wreg free
 35859  0021E2  0900               	iorlw	0
 35860  0021E4  A4D8               	btfss	status,2,c
 35861  0021E6  D004               	goto	l199
 35862                           
 35863                           ;i2c_drv.c: 436: {
 35864                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35865  0021E8  0E00               	movlw	0
 35866  0021EA  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 35867  0021EC                     
 35868                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35869  0021EC  0E04               	movlw	4
 35870  0021EE  D052               	goto	L100
 35871  0021F0                     l199:
 35872                           
 35873                           ;i2c_drv.c: 442: else
 35874                           ;i2c_drv.c: 443: {
 35875                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 35876  0021F0  0E02               	movlw	2
 35877  0021F2  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 35878  0021F4  D072               	goto	l194
 35879                           
 35880                           ;i2c_drv.c: 446: {
 35881                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 35882  0021F6  0E08               	movlw	8
 35883  0021F8  D04D               	goto	L100
 35884  0021FA                     
 35885                           ;i2c_drv.c: 455: EnableReceiver();
 35886  0021FA  ECB4  F035         	call	_EnableReceiver	;wreg free
 35887                           
 35888                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 35889  0021FE  0E05               	movlw	5
 35890  002200  D049               	goto	L100
 35891  002202                     
 35892                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 35893  002202  EC9A  F035         	call	_CheckTxStatus	;wreg free
 35894  002206  0900               	iorlw	0
 35895  002208  A4D8               	btfss	status,2,c
 35896  00220A  D067               	goto	l194
 35897                           
 35898                           ;i2c_drv.c: 463: {
 35899                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 35900  00220C  0100               	movlb	0	; () banked
 35901  00220E  EE20 F002          	lfsr	2,2
 35902  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35903  002214  26D9               	addwf	fsr2l,f,c
 35904  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35905  002218  22DA               	addwfc	fsr2h,f,c
 35906  00221A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 35907  00221E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 35908  002222  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 35909  002226  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 35910  00222A  EC95  F035         	call	_ReadByte	;wreg free
 35911  00222E  6EDF               	movwf	indf2,c
 35912                           
 35913                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 35914  002230  0100               	movlb	0	; () banked
 35915  002232  EE20 F002          	lfsr	2,2
 35916  002236  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35917  002238  26D9               	addwf	fsr2l,f,c
 35918  00223A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35919  00223C  22DA               	addwfc	fsr2h,f,c
 35920  00223E  2ADE               	incf	postinc2,f,c
 35921  002240  0E00               	movlw	0
 35922  002242  22DD               	addwfc	postdec2,f,c
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;i2c_drv.c: 469: DataCounter++;
 35926  002244  2A33               	incf	I2c_ReadData@DataCounter,f,c
 35927                           
 35928                           ; BSR set to: 0
 35929                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 35930  002246  0E06               	movlw	6
 35931  002248  D025               	goto	L100
 35932  00224A                     
 35933                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 35934                           
 35935                           ; BSR set to: 0
 35936  00224A  0100               	movlb	0	; () banked
 35937  00224C  EE20 F004          	lfsr	2,4
 35938  002250  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35939  002252  26D9               	addwf	fsr2l,f,c
 35940  002254  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35941  002256  22DA               	addwfc	fsr2h,f,c
 35942  002258  50DE               	movf	postinc2,w,c
 35943  00225A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 35944  00225C  A0D8               	btfss	status,0,c
 35945  00225E  D008               	goto	l206
 35946                           
 35947                           ; BSR set to: 0
 35948                           ;i2c_drv.c: 478: {
 35949                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 35950  002260  0E01               	movlw	1
 35951  002262  EC1F  F035         	call	_SetAckStatus
 35952                           
 35953                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 35954  002266  0E07               	movlw	7
 35955  002268  6E34               	movwf	I2c_ReadData@I2cReadState,c
 35956                           
 35957                           ;i2c_drv.c: 484: DataCounter = 0;
 35958  00226A  0E00               	movlw	0
 35959  00226C  6E33               	movwf	I2c_ReadData@DataCounter,c
 35960                           
 35961                           ;i2c_drv.c: 485: }
 35962  00226E  D035               	goto	l194
 35963  002270                     l206:
 35964                           
 35965                           ;i2c_drv.c: 486: else
 35966                           ;i2c_drv.c: 487: {
 35967                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 35968  002270  0E00               	movlw	0
 35969  002272  EC1F  F035         	call	_SetAckStatus
 35970  002276  D7BA               	goto	L101
 35971  002278                     
 35972                           ;i2c_drv.c: 497: StopCondition();
 35973  002278  ECB0  F035         	call	_StopCondition	;wreg free
 35974                           
 35975                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 35976  00227C  0E02               	movlw	2
 35977  00227E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35978                           
 35979                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 35980  002280  0E05               	movlw	5
 35981  002282  0100               	movlb	0	; () banked
 35982  002284  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 35983  002286  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 35984  002288  0E00               	movlw	0
 35985  00228A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35986  00228C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 35987  00228E  ECE7  F034         	call	_GenerateEvt	;wreg free
 35988                           
 35989                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 35990  002292  0E00               	movlw	0
 35991  002294                     L100:
 35992  002294  6E34               	movwf	I2c_ReadData@I2cReadState,c
 35993                           
 35994                           ;i2c_drv.c: 504: break;
 35995  002296  D021               	goto	l194
 35996  002298                     
 35997                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 35998  002298  0E00               	movlw	0
 35999  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36000                           
 36001                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36002  00229C  0E01               	movlw	1
 36003  00229E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36004                           
 36005                           ;i2c_drv.c: 515: }
 36006                           
 36007                           ;i2c_drv.c: 514: break;
 36008                           
 36009                           ;i2c_drv.c: 513: default:
 36010                           
 36011                           ;i2c_drv.c: 511: break;
 36012  0022A0  D01C               	goto	l194
 36013  0022A2                     l192:
 36014  0022A2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36015                           
 36016                           ; Switch size 1, requested type "space"
 36017                           ; Number of cases is 9, Range of values is 0 to 8
 36018                           ; switch strategies available:
 36019                           ; Name         Instructions Cycles
 36020                           ; simple_byte           28    15 (average)
 36021                           ;	Chosen strategy is simple_byte
 36022  0022A4  0A00               	xorlw	0	; case 0
 36023  0022A6  B4D8               	btfsc	status,2,c
 36024  0022A8  D76C               	goto	l193
 36025  0022AA  0A01               	xorlw	1	; case 1
 36026  0022AC  B4D8               	btfsc	status,2,c
 36027  0022AE  D76F               	goto	l195
 36028  0022B0  0A03               	xorlw	3	; case 2
 36029  0022B2  B4D8               	btfsc	status,2,c
 36030  0022B4  D78C               	goto	l196
 36031  0022B6  0A01               	xorlw	1	; case 3
 36032  0022B8  B4D8               	btfsc	status,2,c
 36033  0022BA  D790               	goto	l198
 36034  0022BC  0A07               	xorlw	7	; case 4
 36035  0022BE  B4D8               	btfsc	status,2,c
 36036  0022C0  D79C               	goto	l202
 36037  0022C2  0A01               	xorlw	1	; case 5
 36038  0022C4  B4D8               	btfsc	status,2,c
 36039  0022C6  D79D               	goto	l203
 36040  0022C8  0A03               	xorlw	3	; case 6
 36041  0022CA  B4D8               	btfsc	status,2,c
 36042  0022CC  D7BE               	goto	l205
 36043  0022CE  0A01               	xorlw	1	; case 7
 36044  0022D0  B4D8               	btfsc	status,2,c
 36045  0022D2  D7D2               	goto	l208
 36046  0022D4  0A0F               	xorlw	15	; case 8
 36047  0022D6  B4D8               	btfsc	status,2,c
 36048  0022D8  D7DF               	goto	l209
 36049  0022DA                     l194:
 36050                           
 36051                           ;i2c_drv.c: 518: return ReadStatus;
 36052  0022DA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36053  0022DC  0012               	return	
 36054  0022DE                     __end_of_I2c_ReadData:
 36055                           	opt stack 0
 36056                           tosu	equ	0xFFF
 36057                           tosh	equ	0xFFE
 36058                           tosl	equ	0xFFD
 36059                           pclath	equ	0xFFA
 36060                           tblptru	equ	0xFF8
 36061                           tblptrh	equ	0xFF7
 36062                           tblptrl	equ	0xFF6
 36063                           tablat	equ	0xFF5
 36064                           prodh	equ	0xFF4
 36065                           prodl	equ	0xFF3
 36066                           intcon	equ	0xFF2
 36067                           intcon2	equ	0xFF1
 36068                           intcon3	equ	0xFF0
 36069                           indf0	equ	0xFEF
 36070                           postinc0	equ	0xFEE
 36071                           plusw0	equ	0xFEB
 36072                           fsr0h	equ	0xFEA
 36073                           fsr0l	equ	0xFE9
 36074                           wreg	equ	0xFE8
 36075                           indf1	equ	0xFE7
 36076                           postinc1	equ	0xFE6
 36077                           postdec1	equ	0xFE5
 36078                           plusw1	equ	0xFE3
 36079                           fsr1h	equ	0xFE2
 36080                           fsr1l	equ	0xFE1
 36081                           indf2	equ	0xFDF
 36082                           postinc2	equ	0xFDE
 36083                           postdec2	equ	0xFDD
 36084                           plusw2	equ	0xFDB
 36085                           fsr2h	equ	0xFDA
 36086                           fsr2l	equ	0xFD9
 36087                           status	equ	0xFD8
 36088                           
 36089 ;; *************** function _WriteByte *****************
 36090 ;; Defined at:
 36091 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36092 ;; Parameters:    Size  Location     Type
 36093 ;;  Byte            1    wreg     unsigned char 
 36094 ;; Auto vars:     Size  Location     Type
 36095 ;;  Byte            1   29[BANK0 ] unsigned char 
 36096 ;; Return value:  Size  Location     Type
 36097 ;;                  1    wreg      void 
 36098 ;; Registers used:
 36099 ;;		wreg
 36100 ;; Tracked objects:
 36101 ;;		On entry : 0/0
 36102 ;;		On exit  : 0/0
 36103 ;;		Unchanged: 0/0
 36104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36109 ;;Total ram usage:        1 bytes
 36110 ;; Hardware stack levels used:    1
 36111 ;; Hardware stack levels required when called:   11
 36112 ;; This function calls:
 36113 ;;		Nothing
 36114 ;; This function is called by:
 36115 ;;		_I2c_WriteData
 36116 ;;		_I2c_ReadData
 36117 ;; This function uses a non-reentrant model
 36118 ;;
 36119                           
 36120                           	psect	text169
 36121  006B20                     __ptext169:
 36122                           	opt stack 0
 36123  006B20                     _WriteByte:
 36124                           	opt stack 14
 36125                           
 36126                           ;incstack = 0
 36127                           ;WriteByte@Byte stored from wreg
 36128  006B20  0100               	movlb	0	; () banked
 36129  006B22  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36130                           
 36131                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36132  006B24  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36133  006B28  0012               	return		;funcret
 36134  006B2A                     __end_of_WriteByte:
 36135                           	opt stack 0
 36136                           tosu	equ	0xFFF
 36137                           tosh	equ	0xFFE
 36138                           tosl	equ	0xFFD
 36139                           pclath	equ	0xFFA
 36140                           tblptru	equ	0xFF8
 36141                           tblptrh	equ	0xFF7
 36142                           tblptrl	equ	0xFF6
 36143                           tablat	equ	0xFF5
 36144                           prodh	equ	0xFF4
 36145                           prodl	equ	0xFF3
 36146                           intcon	equ	0xFF2
 36147                           intcon2	equ	0xFF1
 36148                           intcon3	equ	0xFF0
 36149                           indf0	equ	0xFEF
 36150                           postinc0	equ	0xFEE
 36151                           plusw0	equ	0xFEB
 36152                           fsr0h	equ	0xFEA
 36153                           fsr0l	equ	0xFE9
 36154                           wreg	equ	0xFE8
 36155                           indf1	equ	0xFE7
 36156                           postinc1	equ	0xFE6
 36157                           postdec1	equ	0xFE5
 36158                           plusw1	equ	0xFE3
 36159                           fsr1h	equ	0xFE2
 36160                           fsr1l	equ	0xFE1
 36161                           indf2	equ	0xFDF
 36162                           postinc2	equ	0xFDE
 36163                           postdec2	equ	0xFDD
 36164                           plusw2	equ	0xFDB
 36165                           fsr2h	equ	0xFDA
 36166                           fsr2l	equ	0xFD9
 36167                           status	equ	0xFD8
 36168                           
 36169 ;; *************** function _StopCondition *****************
 36170 ;; Defined at:
 36171 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36172 ;; Parameters:    Size  Location     Type
 36173 ;;		None
 36174 ;; Auto vars:     Size  Location     Type
 36175 ;;		None
 36176 ;; Return value:  Size  Location     Type
 36177 ;;                  1    wreg      void 
 36178 ;; Registers used:
 36179 ;;		status,2, status,0
 36180 ;; Tracked objects:
 36181 ;;		On entry : 0/0
 36182 ;;		On exit  : 0/0
 36183 ;;		Unchanged: 0/0
 36184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36189 ;;Total ram usage:        0 bytes
 36190 ;; Hardware stack levels used:    1
 36191 ;; Hardware stack levels required when called:   11
 36192 ;; This function calls:
 36193 ;;		Nothing
 36194 ;; This function is called by:
 36195 ;;		_I2c_WriteData
 36196 ;;		_I2c_ReadData
 36197 ;; This function uses a non-reentrant model
 36198 ;;
 36199                           
 36200                           	psect	text170
 36201  006B60                     __ptext170:
 36202                           	opt stack 0
 36203  006B60                     _StopCondition:
 36204                           	opt stack 14
 36205                           
 36206                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 36207                           
 36208                           ;incstack = 0
 36209  006B60  8471               	bsf	3953,2,c	;volatile
 36210  006B62  0012               	return		;funcret
 36211  006B64                     __end_of_StopCondition:
 36212                           	opt stack 0
 36213                           tosu	equ	0xFFF
 36214                           tosh	equ	0xFFE
 36215                           tosl	equ	0xFFD
 36216                           pclath	equ	0xFFA
 36217                           tblptru	equ	0xFF8
 36218                           tblptrh	equ	0xFF7
 36219                           tblptrl	equ	0xFF6
 36220                           tablat	equ	0xFF5
 36221                           prodh	equ	0xFF4
 36222                           prodl	equ	0xFF3
 36223                           intcon	equ	0xFF2
 36224                           intcon2	equ	0xFF1
 36225                           intcon3	equ	0xFF0
 36226                           indf0	equ	0xFEF
 36227                           postinc0	equ	0xFEE
 36228                           plusw0	equ	0xFEB
 36229                           fsr0h	equ	0xFEA
 36230                           fsr0l	equ	0xFE9
 36231                           wreg	equ	0xFE8
 36232                           indf1	equ	0xFE7
 36233                           postinc1	equ	0xFE6
 36234                           postdec1	equ	0xFE5
 36235                           plusw1	equ	0xFE3
 36236                           fsr1h	equ	0xFE2
 36237                           fsr1l	equ	0xFE1
 36238                           indf2	equ	0xFDF
 36239                           postinc2	equ	0xFDE
 36240                           postdec2	equ	0xFDD
 36241                           plusw2	equ	0xFDB
 36242                           fsr2h	equ	0xFDA
 36243                           fsr2l	equ	0xFD9
 36244                           status	equ	0xFD8
 36245                           
 36246 ;; *************** function _StartCondition *****************
 36247 ;; Defined at:
 36248 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36249 ;; Parameters:    Size  Location     Type
 36250 ;;		None
 36251 ;; Auto vars:     Size  Location     Type
 36252 ;;		None
 36253 ;; Return value:  Size  Location     Type
 36254 ;;                  1    wreg      void 
 36255 ;; Registers used:
 36256 ;;		status,2, status,0
 36257 ;; Tracked objects:
 36258 ;;		On entry : 0/0
 36259 ;;		On exit  : 0/0
 36260 ;;		Unchanged: 0/0
 36261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36266 ;;Total ram usage:        0 bytes
 36267 ;; Hardware stack levels used:    1
 36268 ;; Hardware stack levels required when called:   11
 36269 ;; This function calls:
 36270 ;;		Nothing
 36271 ;; This function is called by:
 36272 ;;		_I2c_WriteData
 36273 ;;		_I2c_ReadData
 36274 ;; This function uses a non-reentrant model
 36275 ;;
 36276                           
 36277                           	psect	text171
 36278  006B64                     __ptext171:
 36279                           	opt stack 0
 36280  006B64                     _StartCondition:
 36281                           	opt stack 14
 36282                           
 36283                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36284                           
 36285                           ;incstack = 0
 36286  006B64  8071               	bsf	3953,0,c	;volatile
 36287  006B66  0012               	return		;funcret
 36288  006B68                     __end_of_StartCondition:
 36289                           	opt stack 0
 36290                           tosu	equ	0xFFF
 36291                           tosh	equ	0xFFE
 36292                           tosl	equ	0xFFD
 36293                           pclath	equ	0xFFA
 36294                           tblptru	equ	0xFF8
 36295                           tblptrh	equ	0xFF7
 36296                           tblptrl	equ	0xFF6
 36297                           tablat	equ	0xFF5
 36298                           prodh	equ	0xFF4
 36299                           prodl	equ	0xFF3
 36300                           intcon	equ	0xFF2
 36301                           intcon2	equ	0xFF1
 36302                           intcon3	equ	0xFF0
 36303                           indf0	equ	0xFEF
 36304                           postinc0	equ	0xFEE
 36305                           plusw0	equ	0xFEB
 36306                           fsr0h	equ	0xFEA
 36307                           fsr0l	equ	0xFE9
 36308                           wreg	equ	0xFE8
 36309                           indf1	equ	0xFE7
 36310                           postinc1	equ	0xFE6
 36311                           postdec1	equ	0xFE5
 36312                           plusw1	equ	0xFE3
 36313                           fsr1h	equ	0xFE2
 36314                           fsr1l	equ	0xFE1
 36315                           indf2	equ	0xFDF
 36316                           postinc2	equ	0xFDE
 36317                           postdec2	equ	0xFDD
 36318                           plusw2	equ	0xFDB
 36319                           fsr2h	equ	0xFDA
 36320                           fsr2l	equ	0xFD9
 36321                           status	equ	0xFD8
 36322                           
 36323 ;; *************** function _SetAckStatus *****************
 36324 ;; Defined at:
 36325 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36326 ;; Parameters:    Size  Location     Type
 36327 ;;  AckSts          1    wreg     unsigned char 
 36328 ;; Auto vars:     Size  Location     Type
 36329 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36330 ;; Return value:  Size  Location     Type
 36331 ;;                  1    wreg      void 
 36332 ;; Registers used:
 36333 ;;		wreg
 36334 ;; Tracked objects:
 36335 ;;		On entry : 0/0
 36336 ;;		On exit  : 0/0
 36337 ;;		Unchanged: 0/0
 36338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36343 ;;Total ram usage:        1 bytes
 36344 ;; Hardware stack levels used:    1
 36345 ;; Hardware stack levels required when called:   11
 36346 ;; This function calls:
 36347 ;;		Nothing
 36348 ;; This function is called by:
 36349 ;;		_I2c_ReadData
 36350 ;; This function uses a non-reentrant model
 36351 ;;
 36352                           
 36353                           	psect	text172
 36354  006A3E                     __ptext172:
 36355                           	opt stack 0
 36356  006A3E                     _SetAckStatus:
 36357                           	opt stack 14
 36358                           
 36359                           ;incstack = 0
 36360                           ;SetAckStatus@AckSts stored from wreg
 36361  006A3E  0100               	movlb	0	; () banked
 36362  006A40  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36363                           
 36364                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36365  006A42  0100               	movlb	0	; () banked
 36366  006A44  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36367  006A46  D002               	bra	u12655
 36368  006A48  9A71               	bcf	3953,5,c	;volatile
 36369  006A4A  D001               	bra	u12656
 36370  006A4C                     u12655:
 36371  006A4C  8A71               	bsf	3953,5,c	;volatile
 36372  006A4E                     u12656:
 36373                           
 36374                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36375  006A4E  8871               	bsf	3953,4,c	;volatile
 36376  006A50  0012               	return		;funcret
 36377  006A52                     __end_of_SetAckStatus:
 36378                           	opt stack 0
 36379                           tosu	equ	0xFFF
 36380                           tosh	equ	0xFFE
 36381                           tosl	equ	0xFFD
 36382                           pclath	equ	0xFFA
 36383                           tblptru	equ	0xFF8
 36384                           tblptrh	equ	0xFF7
 36385                           tblptrl	equ	0xFF6
 36386                           tablat	equ	0xFF5
 36387                           prodh	equ	0xFF4
 36388                           prodl	equ	0xFF3
 36389                           intcon	equ	0xFF2
 36390                           intcon2	equ	0xFF1
 36391                           intcon3	equ	0xFF0
 36392                           indf0	equ	0xFEF
 36393                           postinc0	equ	0xFEE
 36394                           plusw0	equ	0xFEB
 36395                           fsr0h	equ	0xFEA
 36396                           fsr0l	equ	0xFE9
 36397                           wreg	equ	0xFE8
 36398                           indf1	equ	0xFE7
 36399                           postinc1	equ	0xFE6
 36400                           postdec1	equ	0xFE5
 36401                           plusw1	equ	0xFE3
 36402                           fsr1h	equ	0xFE2
 36403                           fsr1l	equ	0xFE1
 36404                           indf2	equ	0xFDF
 36405                           postinc2	equ	0xFDE
 36406                           postdec2	equ	0xFDD
 36407                           plusw2	equ	0xFDB
 36408                           fsr2h	equ	0xFDA
 36409                           fsr2l	equ	0xFD9
 36410                           status	equ	0xFD8
 36411                           
 36412 ;; *************** function _ReadByte *****************
 36413 ;; Defined at:
 36414 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36415 ;; Parameters:    Size  Location     Type
 36416 ;;		None
 36417 ;; Auto vars:     Size  Location     Type
 36418 ;;  Byte            1   29[BANK0 ] unsigned char 
 36419 ;; Return value:  Size  Location     Type
 36420 ;;                  1    wreg      unsigned char 
 36421 ;; Registers used:
 36422 ;;		wreg, status,2
 36423 ;; Tracked objects:
 36424 ;;		On entry : 0/0
 36425 ;;		On exit  : 0/0
 36426 ;;		Unchanged: 0/0
 36427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36432 ;;Total ram usage:        1 bytes
 36433 ;; Hardware stack levels used:    1
 36434 ;; Hardware stack levels required when called:   11
 36435 ;; This function calls:
 36436 ;;		Nothing
 36437 ;; This function is called by:
 36438 ;;		_I2c_ReadData
 36439 ;; This function uses a non-reentrant model
 36440 ;;
 36441                           
 36442                           	psect	text173
 36443  006B2A                     __ptext173:
 36444                           	opt stack 0
 36445  006B2A                     _ReadByte:
 36446                           	opt stack 14
 36447                           
 36448                           ;i2c_drv.c: 207: UINT8 Byte;
 36449                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36450                           
 36451                           ;incstack = 0
 36452  006B2A  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36453                           
 36454                           ;i2c_drv.c: 213: return Byte;
 36455  006B2E  0100               	movlb	0	; () banked
 36456  006B30  517D               	movf	ReadByte@Byte& (0+255),w,b
 36457  006B32  0012               	return	
 36458  006B34                     __end_of_ReadByte:
 36459                           	opt stack 0
 36460                           tosu	equ	0xFFF
 36461                           tosh	equ	0xFFE
 36462                           tosl	equ	0xFFD
 36463                           pclath	equ	0xFFA
 36464                           tblptru	equ	0xFF8
 36465                           tblptrh	equ	0xFF7
 36466                           tblptrl	equ	0xFF6
 36467                           tablat	equ	0xFF5
 36468                           prodh	equ	0xFF4
 36469                           prodl	equ	0xFF3
 36470                           intcon	equ	0xFF2
 36471                           intcon2	equ	0xFF1
 36472                           intcon3	equ	0xFF0
 36473                           indf0	equ	0xFEF
 36474                           postinc0	equ	0xFEE
 36475                           plusw0	equ	0xFEB
 36476                           fsr0h	equ	0xFEA
 36477                           fsr0l	equ	0xFE9
 36478                           wreg	equ	0xFE8
 36479                           indf1	equ	0xFE7
 36480                           postinc1	equ	0xFE6
 36481                           postdec1	equ	0xFE5
 36482                           plusw1	equ	0xFE3
 36483                           fsr1h	equ	0xFE2
 36484                           fsr1l	equ	0xFE1
 36485                           indf2	equ	0xFDF
 36486                           postinc2	equ	0xFDE
 36487                           postdec2	equ	0xFDD
 36488                           plusw2	equ	0xFDB
 36489                           fsr2h	equ	0xFDA
 36490                           fsr2l	equ	0xFD9
 36491                           status	equ	0xFD8
 36492                           
 36493 ;; *************** function _GenerateEvt *****************
 36494 ;; Defined at:
 36495 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36496 ;; Parameters:    Size  Location     Type
 36497 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36498 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36499 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36500 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36501 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36502 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36503 ;; Auto vars:     Size  Location     Type
 36504 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36505 ;; Return value:  Size  Location     Type
 36506 ;;                  1    wreg      enum E7699
 36507 ;; Registers used:
 36508 ;;		wreg, fsr2l, fsr2h, status,2
 36509 ;; Tracked objects:
 36510 ;;		On entry : 0/0
 36511 ;;		On exit  : 0/0
 36512 ;;		Unchanged: 0/0
 36513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36517 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36518 ;;Total ram usage:        3 bytes
 36519 ;; Hardware stack levels used:    1
 36520 ;; Hardware stack levels required when called:   11
 36521 ;; This function calls:
 36522 ;;		Nothing
 36523 ;; This function is called by:
 36524 ;;		_I2c_ReadData
 36525 ;;		_CheckModem
 36526 ;;		_TurnOnModem
 36527 ;;		_ConfigureModem
 36528 ;;		_ModemEvtParser
 36529 ;;		_GetSmsSm
 36530 ;;		_Mdm_RequestSmsData
 36531 ;;		_I2cSlv_SendI2cMsg
 36532 ;;		_I2cSlv_ReceiveI2cMsg
 36533 ;;		_RiSm
 36534 ;;		_Mdm_SendSmsData
 36535 ;;		_MdmHttp_InitGprsNetwork
 36536 ;;		_MdmHttp_GetMethod
 36537 ;;		_Alarm
 36538 ;; This function uses a non-reentrant model
 36539 ;;
 36540                           
 36541                           	psect	text174
 36542  0069CE                     __ptext174:
 36543                           	opt stack 0
 36544  0069CE                     _GenerateEvt:
 36545                           	opt stack 13
 36546                           
 36547                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36548                           
 36549                           ; BSR set to: 0
 36550                           ;incstack = 0
 36551  0069CE  0E00               	movlw	0
 36552  0069D0  0100               	movlb	0	; () banked
 36553  0069D2  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36554                           
 36555                           ; BSR set to: 0
 36556                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36557  0069D4  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36558  0069D8  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36559  0069DC  0E02               	movlw	2
 36560  0069DE  6EDF               	movwf	indf2,c
 36561                           
 36562                           ; BSR set to: 0
 36563                           ;os_ser.c: 83: EventStatus = EventSent;
 36564  0069E0  0E02               	movlw	2
 36565  0069E2  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36566  0069E4  0012               	return	
 36567  0069E6                     __end_of_GenerateEvt:
 36568                           	opt stack 0
 36569                           tosu	equ	0xFFF
 36570                           tosh	equ	0xFFE
 36571                           tosl	equ	0xFFD
 36572                           pclath	equ	0xFFA
 36573                           tblptru	equ	0xFF8
 36574                           tblptrh	equ	0xFF7
 36575                           tblptrl	equ	0xFF6
 36576                           tablat	equ	0xFF5
 36577                           prodh	equ	0xFF4
 36578                           prodl	equ	0xFF3
 36579                           intcon	equ	0xFF2
 36580                           intcon2	equ	0xFF1
 36581                           intcon3	equ	0xFF0
 36582                           indf0	equ	0xFEF
 36583                           postinc0	equ	0xFEE
 36584                           plusw0	equ	0xFEB
 36585                           fsr0h	equ	0xFEA
 36586                           fsr0l	equ	0xFE9
 36587                           wreg	equ	0xFE8
 36588                           indf1	equ	0xFE7
 36589                           postinc1	equ	0xFE6
 36590                           postdec1	equ	0xFE5
 36591                           plusw1	equ	0xFE3
 36592                           fsr1h	equ	0xFE2
 36593                           fsr1l	equ	0xFE1
 36594                           indf2	equ	0xFDF
 36595                           postinc2	equ	0xFDE
 36596                           postdec2	equ	0xFDD
 36597                           plusw2	equ	0xFDB
 36598                           fsr2h	equ	0xFDA
 36599                           fsr2l	equ	0xFD9
 36600                           status	equ	0xFD8
 36601                           
 36602 ;; *************** function _EnableReceiver *****************
 36603 ;; Defined at:
 36604 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36605 ;; Parameters:    Size  Location     Type
 36606 ;;		None
 36607 ;; Auto vars:     Size  Location     Type
 36608 ;;		None
 36609 ;; Return value:  Size  Location     Type
 36610 ;;                  1    wreg      void 
 36611 ;; Registers used:
 36612 ;;		status,2, status,0
 36613 ;; Tracked objects:
 36614 ;;		On entry : 0/0
 36615 ;;		On exit  : 0/0
 36616 ;;		Unchanged: 0/0
 36617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36622 ;;Total ram usage:        0 bytes
 36623 ;; Hardware stack levels used:    1
 36624 ;; Hardware stack levels required when called:   11
 36625 ;; This function calls:
 36626 ;;		Nothing
 36627 ;; This function is called by:
 36628 ;;		_I2c_ReadData
 36629 ;; This function uses a non-reentrant model
 36630 ;;
 36631                           
 36632                           	psect	text175
 36633  006B68                     __ptext175:
 36634                           	opt stack 0
 36635  006B68                     _EnableReceiver:
 36636                           	opt stack 14
 36637                           
 36638                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36639                           
 36640                           ; BSR set to: 0
 36641                           ;incstack = 0
 36642  006B68  8671               	bsf	3953,3,c	;volatile
 36643  006B6A  0012               	return		;funcret
 36644  006B6C                     __end_of_EnableReceiver:
 36645                           	opt stack 0
 36646                           tosu	equ	0xFFF
 36647                           tosh	equ	0xFFE
 36648                           tosl	equ	0xFFD
 36649                           pclath	equ	0xFFA
 36650                           tblptru	equ	0xFF8
 36651                           tblptrh	equ	0xFF7
 36652                           tblptrl	equ	0xFF6
 36653                           tablat	equ	0xFF5
 36654                           prodh	equ	0xFF4
 36655                           prodl	equ	0xFF3
 36656                           intcon	equ	0xFF2
 36657                           intcon2	equ	0xFF1
 36658                           intcon3	equ	0xFF0
 36659                           indf0	equ	0xFEF
 36660                           postinc0	equ	0xFEE
 36661                           plusw0	equ	0xFEB
 36662                           fsr0h	equ	0xFEA
 36663                           fsr0l	equ	0xFE9
 36664                           wreg	equ	0xFE8
 36665                           indf1	equ	0xFE7
 36666                           postinc1	equ	0xFE6
 36667                           postdec1	equ	0xFE5
 36668                           plusw1	equ	0xFE3
 36669                           fsr1h	equ	0xFE2
 36670                           fsr1l	equ	0xFE1
 36671                           indf2	equ	0xFDF
 36672                           postinc2	equ	0xFDE
 36673                           postdec2	equ	0xFDD
 36674                           plusw2	equ	0xFDB
 36675                           fsr2h	equ	0xFDA
 36676                           fsr2l	equ	0xFD9
 36677                           status	equ	0xFD8
 36678                           
 36679 ;; *************** function _CheckTxStatus *****************
 36680 ;; Defined at:
 36681 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36682 ;; Parameters:    Size  Location     Type
 36683 ;;		None
 36684 ;; Auto vars:     Size  Location     Type
 36685 ;;		None
 36686 ;; Return value:  Size  Location     Type
 36687 ;;                  1    wreg      unsigned char 
 36688 ;; Registers used:
 36689 ;;		wreg, status,2, status,0
 36690 ;; Tracked objects:
 36691 ;;		On entry : 0/0
 36692 ;;		On exit  : 0/0
 36693 ;;		Unchanged: 0/0
 36694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36699 ;;Total ram usage:        0 bytes
 36700 ;; Hardware stack levels used:    1
 36701 ;; Hardware stack levels required when called:   11
 36702 ;; This function calls:
 36703 ;;		Nothing
 36704 ;; This function is called by:
 36705 ;;		_I2c_WriteData
 36706 ;;		_I2c_ReadData
 36707 ;; This function uses a non-reentrant model
 36708 ;;
 36709                           
 36710                           	psect	text176
 36711  006B34                     __ptext176:
 36712                           	opt stack 0
 36713  006B34                     _CheckTxStatus:
 36714                           	opt stack 14
 36715                           
 36716                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36717                           
 36718                           ;incstack = 0
 36719  006B34  4073               	rrncf	3955,w,c	;volatile
 36720  006B36  42E8               	rrncf	wreg,f,c
 36721  006B38  0B3F               	andlw	63
 36722  006B3A  0B01               	andlw	1
 36723  006B3C  0012               	return	
 36724  006B3E                     __end_of_CheckTxStatus:
 36725                           	opt stack 0
 36726                           tosu	equ	0xFFF
 36727                           tosh	equ	0xFFE
 36728                           tosl	equ	0xFFD
 36729                           pclath	equ	0xFFA
 36730                           tblptru	equ	0xFF8
 36731                           tblptrh	equ	0xFF7
 36732                           tblptrl	equ	0xFF6
 36733                           tablat	equ	0xFF5
 36734                           prodh	equ	0xFF4
 36735                           prodl	equ	0xFF3
 36736                           intcon	equ	0xFF2
 36737                           intcon2	equ	0xFF1
 36738                           intcon3	equ	0xFF0
 36739                           indf0	equ	0xFEF
 36740                           postinc0	equ	0xFEE
 36741                           plusw0	equ	0xFEB
 36742                           fsr0h	equ	0xFEA
 36743                           fsr0l	equ	0xFE9
 36744                           wreg	equ	0xFE8
 36745                           indf1	equ	0xFE7
 36746                           postinc1	equ	0xFE6
 36747                           postdec1	equ	0xFE5
 36748                           plusw1	equ	0xFE3
 36749                           fsr1h	equ	0xFE2
 36750                           fsr1l	equ	0xFE1
 36751                           indf2	equ	0xFDF
 36752                           postinc2	equ	0xFDE
 36753                           postdec2	equ	0xFDD
 36754                           plusw2	equ	0xFDB
 36755                           fsr2h	equ	0xFDA
 36756                           fsr2l	equ	0xFD9
 36757                           status	equ	0xFD8
 36758                           
 36759 ;; *************** function _CheckAckStatus *****************
 36760 ;; Defined at:
 36761 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36762 ;; Parameters:    Size  Location     Type
 36763 ;;		None
 36764 ;; Auto vars:     Size  Location     Type
 36765 ;;		None
 36766 ;; Return value:  Size  Location     Type
 36767 ;;                  1    wreg      unsigned char 
 36768 ;; Registers used:
 36769 ;;		wreg, status,2, status,0
 36770 ;; Tracked objects:
 36771 ;;		On entry : 0/0
 36772 ;;		On exit  : 0/0
 36773 ;;		Unchanged: 0/0
 36774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36779 ;;Total ram usage:        0 bytes
 36780 ;; Hardware stack levels used:    1
 36781 ;; Hardware stack levels required when called:   11
 36782 ;; This function calls:
 36783 ;;		Nothing
 36784 ;; This function is called by:
 36785 ;;		_I2c_WriteData
 36786 ;;		_I2c_ReadData
 36787 ;; This function uses a non-reentrant model
 36788 ;;
 36789                           
 36790                           	psect	text177
 36791  006B3E                     __ptext177:
 36792                           	opt stack 0
 36793  006B3E                     _CheckAckStatus:
 36794                           	opt stack 14
 36795                           
 36796                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36797                           
 36798                           ;incstack = 0
 36799  006B3E  4471               	rlncf	3953,w,c	;volatile
 36800  006B40  46E8               	rlncf	wreg,f,c
 36801  006B42  0B03               	andlw	3
 36802  006B44  0B01               	andlw	1
 36803  006B46  0012               	return	
 36804  006B48                     __end_of_CheckAckStatus:
 36805                           	opt stack 0
 36806                           tosu	equ	0xFFF
 36807                           tosh	equ	0xFFE
 36808                           tosl	equ	0xFFD
 36809                           pclath	equ	0xFFA
 36810                           tblptru	equ	0xFF8
 36811                           tblptrh	equ	0xFF7
 36812                           tblptrl	equ	0xFF6
 36813                           tablat	equ	0xFF5
 36814                           prodh	equ	0xFF4
 36815                           prodl	equ	0xFF3
 36816                           intcon	equ	0xFF2
 36817                           intcon2	equ	0xFF1
 36818                           intcon3	equ	0xFF0
 36819                           indf0	equ	0xFEF
 36820                           postinc0	equ	0xFEE
 36821                           plusw0	equ	0xFEB
 36822                           fsr0h	equ	0xFEA
 36823                           fsr0l	equ	0xFE9
 36824                           wreg	equ	0xFE8
 36825                           indf1	equ	0xFE7
 36826                           postinc1	equ	0xFE6
 36827                           postdec1	equ	0xFE5
 36828                           plusw1	equ	0xFE3
 36829                           fsr1h	equ	0xFE2
 36830                           fsr1l	equ	0xFE1
 36831                           indf2	equ	0xFDF
 36832                           postinc2	equ	0xFDE
 36833                           postdec2	equ	0xFDD
 36834                           plusw2	equ	0xFDB
 36835                           fsr2h	equ	0xFDA
 36836                           fsr2l	equ	0xFD9
 36837                           status	equ	0xFD8
 36838                           
 36839 ;; *************** function _LowPriorityIsr *****************
 36840 ;; Defined at:
 36841 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36842 ;; Parameters:    Size  Location     Type
 36843 ;;		None
 36844 ;; Auto vars:     Size  Location     Type
 36845 ;;		None
 36846 ;; Return value:  Size  Location     Type
 36847 ;;                  1    wreg      void 
 36848 ;; Registers used:
 36849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36850 ;; Tracked objects:
 36851 ;;		On entry : 0/0
 36852 ;;		On exit  : 0/0
 36853 ;;		Unchanged: 0/0
 36854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36857 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36858 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36859 ;;Total ram usage:       21 bytes
 36860 ;; Hardware stack levels used:    1
 36861 ;; Hardware stack levels required when called:   10
 36862 ;; This function calls:
 36863 ;;		_Tmr_Tmr2Isr
 36864 ;; This function is called by:
 36865 ;;		Interrupt level 1
 36866 ;; This function uses a non-reentrant model
 36867 ;;
 36868                           
 36869                           	psect	intcodelo
 36870  000018                     __pintcodelo:
 36871                           	opt stack 0
 36872  000018                     _LowPriorityIsr:
 36873                           	opt stack 8
 36874                           
 36875                           ;incstack = 0
 36876  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36877  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 36878  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 36879  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 36880  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 36881  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 36882  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 36883  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 36884  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 36885  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 36886  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 36887  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 36888  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 36889  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 36890  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 36891  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 36892  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 36893  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 36894  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 36895  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 36896  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 36897  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 36898                           
 36899                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 36900  00006E  B29E               	btfsc	3998,1,c	;volatile
 36901                           
 36902                           ;irq.c: 259: {
 36903                           ;irq.c: 261: Tmr_Tmr2Isr();
 36904  000070  ECAA  F033         	call	_Tmr_Tmr2Isr	;wreg free
 36905  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 36906  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 36907  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 36908  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 36909  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 36910  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 36911  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 36912  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 36913  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 36914  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 36915  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 36916  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 36917  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 36918  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 36919  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 36920  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 36921  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 36922  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 36923  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 36924  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 36925  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 36926  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36927  0000CA  0010               	retfie	
 36928  0000CC                     __end_of_LowPriorityIsr:
 36929                           	opt stack 0
 36930                           tosu	equ	0xFFF
 36931                           tosh	equ	0xFFE
 36932                           tosl	equ	0xFFD
 36933                           pclatu	equ	0xFFB
 36934                           pclath	equ	0xFFA
 36935                           tblptru	equ	0xFF8
 36936                           tblptrh	equ	0xFF7
 36937                           tblptrl	equ	0xFF6
 36938                           tablat	equ	0xFF5
 36939                           prodh	equ	0xFF4
 36940                           prodl	equ	0xFF3
 36941                           intcon	equ	0xFF2
 36942                           intcon2	equ	0xFF1
 36943                           intcon3	equ	0xFF0
 36944                           indf0	equ	0xFEF
 36945                           postinc0	equ	0xFEE
 36946                           plusw0	equ	0xFEB
 36947                           fsr0h	equ	0xFEA
 36948                           fsr0l	equ	0xFE9
 36949                           wreg	equ	0xFE8
 36950                           indf1	equ	0xFE7
 36951                           postinc1	equ	0xFE6
 36952                           postdec1	equ	0xFE5
 36953                           plusw1	equ	0xFE3
 36954                           fsr1h	equ	0xFE2
 36955                           fsr1l	equ	0xFE1
 36956                           bsr	equ	0xFE0
 36957                           indf2	equ	0xFDF
 36958                           postinc2	equ	0xFDE
 36959                           postdec2	equ	0xFDD
 36960                           plusw2	equ	0xFDB
 36961                           fsr2h	equ	0xFDA
 36962                           fsr2l	equ	0xFD9
 36963                           status	equ	0xFD8
 36964                           
 36965 ;; *************** function _Tmr_Tmr2Isr *****************
 36966 ;; Defined at:
 36967 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 36968 ;; Parameters:    Size  Location     Type
 36969 ;;		None
 36970 ;; Auto vars:     Size  Location     Type
 36971 ;;		None
 36972 ;; Return value:  Size  Location     Type
 36973 ;;                  1    wreg      void 
 36974 ;; Registers used:
 36975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36976 ;; Tracked objects:
 36977 ;;		On entry : 0/0
 36978 ;;		On exit  : 0/0
 36979 ;;		Unchanged: 0/0
 36980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36985 ;;Total ram usage:        0 bytes
 36986 ;; Hardware stack levels used:    1
 36987 ;; Hardware stack levels required when called:    9
 36988 ;; This function calls:
 36989 ;;		Absolute function
 36990 ;;		_Sch_SchmIntService
 36991 ;; This function is called by:
 36992 ;;		_LowPriorityIsr
 36993 ;; This function uses a non-reentrant model
 36994 ;;
 36995                           
 36996                           	psect	text179
 36997  006754                     __ptext179:
 36998                           	opt stack 0
 36999  006754                     _Tmr_Tmr2Isr:
 37000                           	opt stack 8
 37001                           
 37002                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37003                           
 37004                           ;incstack = 0
 37005  006754  929E               	bcf	3998,1,c	;volatile
 37006                           
 37007                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37008  006756  0102               	movlb	2	; () banked
 37009  006758  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 37010  00675A  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37011  00675C  B4D8               	btfsc	status,2,c
 37012  00675E  0012               	return	
 37013                           
 37014                           ; BSR set to: 2
 37015                           ;tmr_drv.c: 315: {
 37016                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37017  006760  D801               	call	i1u1647_28
 37018  006762  0012               	return	
 37019  006764                     i1u1647_28:
 37020  006764  0005               	push	
 37021  006766  6EFA               	movwf	pclath,c
 37022  006768  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 37023  00676A  6EFD               	movwf	tosl,c
 37024  00676C  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37025  00676E  6EFE               	movwf	tosh,c
 37026  006770  50F8               	movf	tblptru,w,c
 37027  006772  6EFF               	movwf	tosu,c
 37028  006774  50FA               	movf	pclath,w,c
 37029  006776  0012               	return		;indir
 37030  006778                     __end_of_Tmr_Tmr2Isr:
 37031                           	opt stack 0
 37032                           tosu	equ	0xFFF
 37033                           tosh	equ	0xFFE
 37034                           tosl	equ	0xFFD
 37035                           pclatu	equ	0xFFB
 37036                           pclath	equ	0xFFA
 37037                           tblptru	equ	0xFF8
 37038                           tblptrh	equ	0xFF7
 37039                           tblptrl	equ	0xFF6
 37040                           tablat	equ	0xFF5
 37041                           prodh	equ	0xFF4
 37042                           prodl	equ	0xFF3
 37043                           intcon	equ	0xFF2
 37044                           intcon2	equ	0xFF1
 37045                           intcon3	equ	0xFF0
 37046                           indf0	equ	0xFEF
 37047                           postinc0	equ	0xFEE
 37048                           plusw0	equ	0xFEB
 37049                           fsr0h	equ	0xFEA
 37050                           fsr0l	equ	0xFE9
 37051                           wreg	equ	0xFE8
 37052                           indf1	equ	0xFE7
 37053                           postinc1	equ	0xFE6
 37054                           postdec1	equ	0xFE5
 37055                           plusw1	equ	0xFE3
 37056                           fsr1h	equ	0xFE2
 37057                           fsr1l	equ	0xFE1
 37058                           bsr	equ	0xFE0
 37059                           indf2	equ	0xFDF
 37060                           postinc2	equ	0xFDE
 37061                           postdec2	equ	0xFDD
 37062                           plusw2	equ	0xFDB
 37063                           fsr2h	equ	0xFDA
 37064                           fsr2l	equ	0xFD9
 37065                           status	equ	0xFD8
 37066                           
 37067 ;; *************** function _Sch_SchmIntService *****************
 37068 ;; Defined at:
 37069 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37070 ;; Parameters:    Size  Location     Type
 37071 ;;		None
 37072 ;; Auto vars:     Size  Location     Type
 37073 ;;		None
 37074 ;; Return value:  Size  Location     Type
 37075 ;;                  1    wreg      void 
 37076 ;; Registers used:
 37077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37078 ;; Tracked objects:
 37079 ;;		On entry : 0/0
 37080 ;;		On exit  : 0/0
 37081 ;;		Unchanged: 0/0
 37082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37087 ;;Total ram usage:        0 bytes
 37088 ;; Hardware stack levels used:    1
 37089 ;; Hardware stack levels required when called:    8
 37090 ;; This function calls:
 37091 ;;		_OsAlrm_ProcessOsAlarms
 37092 ;;		_UpdateOsCounters
 37093 ;;		_UpdateSchFlag
 37094 ;; This function is called by:
 37095 ;;		_SystemInit
 37096 ;;		_Tmr_Tmr2Isr
 37097 ;; This function uses a non-reentrant model
 37098 ;;
 37099                           
 37100                           	psect	text180
 37101  006AD8                     __ptext180:
 37102                           	opt stack 0
 37103  006AD8                     _Sch_SchmIntService:
 37104                           	opt stack 8
 37105                           
 37106                           ;os_sched.c: 217: UpdateSchFlag();
 37107                           
 37108                           ;incstack = 0
 37109  006AD8  EC7F  F034         	call	_UpdateSchFlag	;wreg free
 37110                           
 37111                           ;os_sched.c: 219: UpdateOsCounters();
 37112  006ADC  EC5C  F035         	call	_UpdateOsCounters	;wreg free
 37113                           
 37114                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37115  006AE0  EC1A  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37116  006AE4  0012               	return		;funcret
 37117  006AE6                     __end_of_Sch_SchmIntService:
 37118                           	opt stack 0
 37119                           tosu	equ	0xFFF
 37120                           tosh	equ	0xFFE
 37121                           tosl	equ	0xFFD
 37122                           pclatu	equ	0xFFB
 37123                           pclath	equ	0xFFA
 37124                           tblptru	equ	0xFF8
 37125                           tblptrh	equ	0xFF7
 37126                           tblptrl	equ	0xFF6
 37127                           tablat	equ	0xFF5
 37128                           prodh	equ	0xFF4
 37129                           prodl	equ	0xFF3
 37130                           intcon	equ	0xFF2
 37131                           intcon2	equ	0xFF1
 37132                           intcon3	equ	0xFF0
 37133                           indf0	equ	0xFEF
 37134                           postinc0	equ	0xFEE
 37135                           plusw0	equ	0xFEB
 37136                           fsr0h	equ	0xFEA
 37137                           fsr0l	equ	0xFE9
 37138                           wreg	equ	0xFE8
 37139                           indf1	equ	0xFE7
 37140                           postinc1	equ	0xFE6
 37141                           postdec1	equ	0xFE5
 37142                           plusw1	equ	0xFE3
 37143                           fsr1h	equ	0xFE2
 37144                           fsr1l	equ	0xFE1
 37145                           bsr	equ	0xFE0
 37146                           indf2	equ	0xFDF
 37147                           postinc2	equ	0xFDE
 37148                           postdec2	equ	0xFDD
 37149                           plusw2	equ	0xFDB
 37150                           fsr2h	equ	0xFDA
 37151                           fsr2l	equ	0xFD9
 37152                           status	equ	0xFD8
 37153                           
 37154 ;; *************** function _UpdateSchFlag *****************
 37155 ;; Defined at:
 37156 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37157 ;; Parameters:    Size  Location     Type
 37158 ;;		None
 37159 ;; Auto vars:     Size  Location     Type
 37160 ;;		None
 37161 ;; Return value:  Size  Location     Type
 37162 ;;                  1    wreg      void 
 37163 ;; Registers used:
 37164 ;;		wreg, status,2, status,0
 37165 ;; Tracked objects:
 37166 ;;		On entry : 0/0
 37167 ;;		On exit  : 0/0
 37168 ;;		Unchanged: 0/0
 37169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37174 ;;Total ram usage:        0 bytes
 37175 ;; Hardware stack levels used:    1
 37176 ;; Hardware stack levels required when called:    4
 37177 ;; This function calls:
 37178 ;;		Nothing
 37179 ;; This function is called by:
 37180 ;;		_Sch_SchmIntService
 37181 ;; This function uses a non-reentrant model
 37182 ;;
 37183                           
 37184                           	psect	text181
 37185  0068FE                     __ptext181:
 37186                           	opt stack 0
 37187  0068FE                     _UpdateSchFlag:
 37188                           	opt stack 11
 37189                           
 37190                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 37191                           ;os_sched.c: 138: InterruptCounter++;
 37192                           
 37193                           ;incstack = 0
 37194  0068FE  0102               	movlb	2	; () banked
 37195  006900  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 37196  006902  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 37197                           
 37198                           ; BSR set to: 2
 37199                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 37200  006904  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 37201  006906  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 37202  006908  B4D8               	btfsc	status,2,c
 37203  00690A  0012               	return	
 37204                           
 37205                           ; BSR set to: 2
 37206                           ;os_sched.c: 141: {
 37207                           ;os_sched.c: 143: InterruptCounter = 0;
 37208  00690C  0E00               	movlw	0
 37209  00690E  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 37210  006910  0E00               	movlw	0
 37211  006912  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 37212                           
 37213                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 37214  006914  0E00               	movlw	0
 37215  006916  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 37216  006918  0012               	return	
 37217  00691A                     __end_of_UpdateSchFlag:
 37218                           	opt stack 0
 37219                           tosu	equ	0xFFF
 37220                           tosh	equ	0xFFE
 37221                           tosl	equ	0xFFD
 37222                           pclatu	equ	0xFFB
 37223                           pclath	equ	0xFFA
 37224                           tblptru	equ	0xFF8
 37225                           tblptrh	equ	0xFF7
 37226                           tblptrl	equ	0xFF6
 37227                           tablat	equ	0xFF5
 37228                           prodh	equ	0xFF4
 37229                           prodl	equ	0xFF3
 37230                           intcon	equ	0xFF2
 37231                           intcon2	equ	0xFF1
 37232                           intcon3	equ	0xFF0
 37233                           indf0	equ	0xFEF
 37234                           postinc0	equ	0xFEE
 37235                           plusw0	equ	0xFEB
 37236                           fsr0h	equ	0xFEA
 37237                           fsr0l	equ	0xFE9
 37238                           wreg	equ	0xFE8
 37239                           indf1	equ	0xFE7
 37240                           postinc1	equ	0xFE6
 37241                           postdec1	equ	0xFE5
 37242                           plusw1	equ	0xFE3
 37243                           fsr1h	equ	0xFE2
 37244                           fsr1l	equ	0xFE1
 37245                           bsr	equ	0xFE0
 37246                           indf2	equ	0xFDF
 37247                           postinc2	equ	0xFDE
 37248                           postdec2	equ	0xFDD
 37249                           plusw2	equ	0xFDB
 37250                           fsr2h	equ	0xFDA
 37251                           fsr2l	equ	0xFD9
 37252                           status	equ	0xFD8
 37253                           
 37254 ;; *************** function _UpdateOsCounters *****************
 37255 ;; Defined at:
 37256 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37257 ;; Parameters:    Size  Location     Type
 37258 ;;		None
 37259 ;; Auto vars:     Size  Location     Type
 37260 ;;		None
 37261 ;; Return value:  Size  Location     Type
 37262 ;;                  1    wreg      void 
 37263 ;; Registers used:
 37264 ;;		wreg, status,2, status,0
 37265 ;; Tracked objects:
 37266 ;;		On entry : 0/0
 37267 ;;		On exit  : 0/0
 37268 ;;		Unchanged: 0/0
 37269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37274 ;;Total ram usage:        0 bytes
 37275 ;; Hardware stack levels used:    1
 37276 ;; Hardware stack levels required when called:    4
 37277 ;; This function calls:
 37278 ;;		Nothing
 37279 ;; This function is called by:
 37280 ;;		_Sch_SchmIntService
 37281 ;; This function uses a non-reentrant model
 37282 ;;
 37283                           
 37284                           	psect	text182
 37285  006AB8                     __ptext182:
 37286                           	opt stack 0
 37287  006AB8                     _UpdateOsCounters:
 37288                           	opt stack 11
 37289                           
 37290                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37291                           
 37292                           ; BSR set to: 2
 37293                           ;incstack = 0
 37294  006AB8  0E01               	movlw	1
 37295  006ABA  0103               	movlb	3	; () banked
 37296  006ABC  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37297  006ABE  0E00               	movlw	0
 37298  006AC0  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37299  006AC2  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37300  006AC4  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37301                           
 37302                           ; BSR set to: 3
 37303  006AC6  0012               	return		;funcret
 37304  006AC8                     __end_of_UpdateOsCounters:
 37305                           	opt stack 0
 37306                           tosu	equ	0xFFF
 37307                           tosh	equ	0xFFE
 37308                           tosl	equ	0xFFD
 37309                           pclatu	equ	0xFFB
 37310                           pclath	equ	0xFFA
 37311                           tblptru	equ	0xFF8
 37312                           tblptrh	equ	0xFF7
 37313                           tblptrl	equ	0xFF6
 37314                           tablat	equ	0xFF5
 37315                           prodh	equ	0xFF4
 37316                           prodl	equ	0xFF3
 37317                           intcon	equ	0xFF2
 37318                           intcon2	equ	0xFF1
 37319                           intcon3	equ	0xFF0
 37320                           indf0	equ	0xFEF
 37321                           postinc0	equ	0xFEE
 37322                           plusw0	equ	0xFEB
 37323                           fsr0h	equ	0xFEA
 37324                           fsr0l	equ	0xFE9
 37325                           wreg	equ	0xFE8
 37326                           indf1	equ	0xFE7
 37327                           postinc1	equ	0xFE6
 37328                           postdec1	equ	0xFE5
 37329                           plusw1	equ	0xFE3
 37330                           fsr1h	equ	0xFE2
 37331                           fsr1l	equ	0xFE1
 37332                           bsr	equ	0xFE0
 37333                           indf2	equ	0xFDF
 37334                           postinc2	equ	0xFDE
 37335                           postdec2	equ	0xFDD
 37336                           plusw2	equ	0xFDB
 37337                           fsr2h	equ	0xFDA
 37338                           fsr2l	equ	0xFD9
 37339                           status	equ	0xFD8
 37340                           
 37341 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37342 ;; Defined at:
 37343 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37344 ;; Parameters:    Size  Location     Type
 37345 ;;		None
 37346 ;; Auto vars:     Size  Location     Type
 37347 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37348 ;; Return value:  Size  Location     Type
 37349 ;;                  1    wreg      void 
 37350 ;; Registers used:
 37351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37352 ;; Tracked objects:
 37353 ;;		On entry : 0/0
 37354 ;;		On exit  : 0/0
 37355 ;;		Unchanged: 0/0
 37356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37359 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37360 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37361 ;;Total ram usage:       10 bytes
 37362 ;; Hardware stack levels used:    1
 37363 ;; Hardware stack levels required when called:    7
 37364 ;; This function calls:
 37365 ;;		_I2cDummyTx
 37366 ;;		_OsAlrm_ClearOsAlarm
 37367 ;;		i1___wmul
 37368 ;; This function is called by:
 37369 ;;		_Sch_SchmIntService
 37370 ;; This function uses a non-reentrant model
 37371 ;;
 37372                           
 37373                           	psect	text183
 37374  002434                     __ptext183:
 37375                           	opt stack 0
 37376  002434                     _OsAlrm_ProcessOsAlarms:
 37377                           	opt stack 8
 37378                           
 37379                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37380                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37381                           
 37382                           ; BSR set to: 3
 37383                           ;incstack = 0
 37384  002434  0E00               	movlw	0
 37385  002436  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37386  002438  0E00               	movlw	0
 37387  00243A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37388  00243C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37389  00243E  E105               	bnz	i1u1622_20
 37390  002440  0E14               	movlw	20
 37391  002442  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37392  002444  B0D8               	btfsc	status,0,c
 37393  002446  0012               	return	
 37394  002448  D001               	goto	i1l742
 37395  00244A                     i1u1622_20:
 37396  00244A  0012               	return	
 37397  00244C                     i1l742:
 37398                           
 37399                           ;os_alarms.c: 121: {
 37400                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37401  00244C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37402  002450  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37403  002454  0E00               	movlw	0
 37404  002456  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37405  002458  0E0B               	movlw	11
 37406  00245A  6E1B               	movwf	i1___wmul@multiplicand,c
 37407  00245C  EC61  F033         	call	i1___wmul	;wreg free
 37408  002460  0E00               	movlw	low _OsAlarms
 37409  002462  2419               	addwf	?i1___wmul,w,c
 37410  002464  6ED9               	movwf	fsr2l,c
 37411  002466  0E06               	movlw	high _OsAlarms
 37412  002468  201A               	addwfc	?i1___wmul+1,w,c
 37413  00246A  6EDA               	movwf	fsr2h,c
 37414  00246C  04DE               	decf	postinc2,w,c
 37415  00246E  A4D8               	btfss	status,2,c
 37416  002470  D086               	goto	i1u1626_29
 37417                           
 37418                           ;os_alarms.c: 124: {
 37419                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37420  002472  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37421  002476  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37422  00247A  0E00               	movlw	0
 37423  00247C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37424  00247E  0E0B               	movlw	11
 37425  002480  6E1B               	movwf	i1___wmul@multiplicand,c
 37426  002482  EC61  F033         	call	i1___wmul	;wreg free
 37427  002486  0E01               	movlw	1
 37428  002488  2619               	addwf	?i1___wmul,f,c
 37429  00248A  0E00               	movlw	0
 37430  00248C  221A               	addwfc	?i1___wmul+1,f,c
 37431  00248E  0E00               	movlw	low _OsAlarms
 37432  002490  2419               	addwf	?i1___wmul,w,c
 37433  002492  6ED9               	movwf	fsr2l,c
 37434  002494  0E06               	movlw	high _OsAlarms
 37435  002496  201A               	addwfc	?i1___wmul+1,w,c
 37436  002498  6EDA               	movwf	fsr2h,c
 37437  00249A  2ADE               	incf	postinc2,f,c
 37438  00249C  0E00               	movlw	0
 37439  00249E  22DE               	addwfc	postinc2,f,c
 37440  0024A0  22DE               	addwfc	postinc2,f,c
 37441  0024A2  22DE               	addwfc	postinc2,f,c
 37442                           
 37443                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37444  0024A4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37445  0024A8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37446  0024AC  0E00               	movlw	0
 37447  0024AE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37448  0024B0  0E0B               	movlw	11
 37449  0024B2  6E1B               	movwf	i1___wmul@multiplicand,c
 37450  0024B4  EC61  F033         	call	i1___wmul	;wreg free
 37451  0024B8  0E05               	movlw	5
 37452  0024BA  2619               	addwf	?i1___wmul,f,c
 37453  0024BC  0E00               	movlw	0
 37454  0024BE  221A               	addwfc	?i1___wmul+1,f,c
 37455  0024C0  0E00               	movlw	low _OsAlarms
 37456  0024C2  2419               	addwf	?i1___wmul,w,c
 37457  0024C4  6ED9               	movwf	fsr2l,c
 37458  0024C6  0E06               	movlw	high _OsAlarms
 37459  0024C8  201A               	addwfc	?i1___wmul+1,w,c
 37460  0024CA  6EDA               	movwf	fsr2h,c
 37461  0024CC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37462  0024D0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37463  0024D4  0E00               	movlw	0
 37464  0024D6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37465  0024D8  0E0B               	movlw	11
 37466  0024DA  6E1B               	movwf	i1___wmul@multiplicand,c
 37467  0024DC  EC61  F033         	call	i1___wmul	;wreg free
 37468  0024E0  0E01               	movlw	1
 37469  0024E2  2619               	addwf	?i1___wmul,f,c
 37470  0024E4  0E00               	movlw	0
 37471  0024E6  221A               	addwfc	?i1___wmul+1,f,c
 37472  0024E8  0E00               	movlw	low _OsAlarms
 37473  0024EA  2419               	addwf	?i1___wmul,w,c
 37474  0024EC  6EE1               	movwf	fsr1l,c
 37475  0024EE  0E06               	movlw	high _OsAlarms
 37476  0024F0  201A               	addwfc	?i1___wmul+1,w,c
 37477  0024F2  6EE2               	movwf	fsr1h,c
 37478  0024F4  50DE               	movf	postinc2,w,c
 37479  0024F6  5CE6               	subwf	postinc1,w,c
 37480  0024F8  50DE               	movf	postinc2,w,c
 37481  0024FA  58E6               	subwfb	postinc1,w,c
 37482  0024FC  50DE               	movf	postinc2,w,c
 37483  0024FE  58E6               	subwfb	postinc1,w,c
 37484  002500  50DE               	movf	postinc2,w,c
 37485  002502  58E6               	subwfb	postinc1,w,c
 37486  002504  A0D8               	btfss	status,0,c
 37487  002506  D03B               	goto	i1u1626_29
 37488                           
 37489                           ;os_alarms.c: 129: {
 37490                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37491  002508  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37492  00250A  EC2A  F02D         	call	_OsAlrm_ClearOsAlarm
 37493                           
 37494                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37495  00250E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37496  002512  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37497  002516  0E00               	movlw	0
 37498  002518  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37499  00251A  0E0B               	movlw	11
 37500  00251C  6E1B               	movwf	i1___wmul@multiplicand,c
 37501  00251E  EC61  F033         	call	i1___wmul	;wreg free
 37502  002522  0E09               	movlw	9
 37503  002524  2619               	addwf	?i1___wmul,f,c
 37504  002526  0E00               	movlw	0
 37505  002528  221A               	addwfc	?i1___wmul+1,f,c
 37506  00252A  0E00               	movlw	low _OsAlarms
 37507  00252C  2419               	addwf	?i1___wmul,w,c
 37508  00252E  6ED9               	movwf	fsr2l,c
 37509  002530  0E06               	movlw	high _OsAlarms
 37510  002532  201A               	addwfc	?i1___wmul+1,w,c
 37511  002534  6EDA               	movwf	fsr2h,c
 37512  002536  50DE               	movf	postinc2,w,c
 37513  002538  10DE               	iorwf	postinc2,w,c
 37514  00253A  B4D8               	btfsc	status,2,c
 37515  00253C  D020               	goto	i1u1626_29
 37516                           
 37517                           ;os_alarms.c: 134: {
 37518                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37519  00253E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37520  002542  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37521  002546  0E00               	movlw	0
 37522  002548  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37523  00254A  0E0B               	movlw	11
 37524  00254C  6E1B               	movwf	i1___wmul@multiplicand,c
 37525  00254E  EC61  F033         	call	i1___wmul	;wreg free
 37526  002552  0E09               	movlw	9
 37527  002554  2619               	addwf	?i1___wmul,f,c
 37528  002556  0E00               	movlw	0
 37529  002558  221A               	addwfc	?i1___wmul+1,f,c
 37530  00255A  0E00               	movlw	low _OsAlarms
 37531  00255C  2419               	addwf	?i1___wmul,w,c
 37532  00255E  6ED9               	movwf	fsr2l,c
 37533  002560  0E06               	movlw	high _OsAlarms
 37534  002562  201A               	addwfc	?i1___wmul+1,w,c
 37535  002564  6EDA               	movwf	fsr2h,c
 37536  002566  D801               	call	i1u1626_28
 37537  002568  D00A               	goto	i1u1626_29
 37538  00256A                     i1u1626_28:
 37539  00256A  0005               	push	
 37540  00256C  6EFA               	movwf	pclath,c
 37541  00256E  50DE               	movf	postinc2,w,c
 37542  002570  6EFD               	movwf	tosl,c
 37543  002572  50DE               	movf	postinc2,w,c
 37544  002574  6EFE               	movwf	tosh,c
 37545  002576  50F8               	movf	tblptru,w,c
 37546  002578  6EFF               	movwf	tosu,c
 37547  00257A  50FA               	movf	pclath,w,c
 37548  00257C  0012               	return		;indir
 37549  00257E                     i1u1626_29:
 37550  00257E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37551  002580  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37552  002582  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37553  002584  E101               	bnz	i1l747
 37554  002586  D75C               	goto	L102
 37555  002588                     i1l747:
 37556  002588  0012               	return		;funcret
 37557  00258A                     __end_of_OsAlrm_ProcessOsAlarms:
 37558                           	opt stack 0
 37559                           tosu	equ	0xFFF
 37560                           tosh	equ	0xFFE
 37561                           tosl	equ	0xFFD
 37562                           pclatu	equ	0xFFB
 37563                           pclath	equ	0xFFA
 37564                           tblptru	equ	0xFF8
 37565                           tblptrh	equ	0xFF7
 37566                           tblptrl	equ	0xFF6
 37567                           tablat	equ	0xFF5
 37568                           prodh	equ	0xFF4
 37569                           prodl	equ	0xFF3
 37570                           intcon	equ	0xFF2
 37571                           intcon2	equ	0xFF1
 37572                           intcon3	equ	0xFF0
 37573                           indf0	equ	0xFEF
 37574                           postinc0	equ	0xFEE
 37575                           plusw0	equ	0xFEB
 37576                           fsr0h	equ	0xFEA
 37577                           fsr0l	equ	0xFE9
 37578                           wreg	equ	0xFE8
 37579                           indf1	equ	0xFE7
 37580                           postinc1	equ	0xFE6
 37581                           postdec1	equ	0xFE5
 37582                           plusw1	equ	0xFE3
 37583                           fsr1h	equ	0xFE2
 37584                           fsr1l	equ	0xFE1
 37585                           bsr	equ	0xFE0
 37586                           indf2	equ	0xFDF
 37587                           postinc2	equ	0xFDE
 37588                           postdec2	equ	0xFDD
 37589                           plusw2	equ	0xFDB
 37590                           fsr2h	equ	0xFDA
 37591                           fsr2l	equ	0xFD9
 37592                           status	equ	0xFD8
 37593                           
 37594 ;; *************** function i1___wmul *****************
 37595 ;; Defined at:
 37596 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37597 ;; Parameters:    Size  Location     Type
 37598 ;;  multiplier      2   24[COMRAM] unsigned int 
 37599 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37600 ;; Auto vars:     Size  Location     Type
 37601 ;;  __wmul          2   28[COMRAM] unsigned int 
 37602 ;; Return value:  Size  Location     Type
 37603 ;;                  2   24[COMRAM] unsigned int 
 37604 ;; Registers used:
 37605 ;;		wreg, status,2, status,0, prodl, prodh
 37606 ;; Tracked objects:
 37607 ;;		On entry : 0/0
 37608 ;;		On exit  : 0/0
 37609 ;;		Unchanged: 0/0
 37610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37615 ;;Total ram usage:        6 bytes
 37616 ;; Hardware stack levels used:    1
 37617 ;; Hardware stack levels required when called:    4
 37618 ;; This function calls:
 37619 ;;		Nothing
 37620 ;; This function is called by:
 37621 ;;		_OsAlrm_ProcessOsAlarms
 37622 ;; This function uses a non-reentrant model
 37623 ;;
 37624                           
 37625                           	psect	text184
 37626  0066C2                     __ptext184:
 37627                           	opt stack 0
 37628  0066C2                     i1___wmul:
 37629                           	opt stack 10
 37630                           
 37631                           ;incstack = 0
 37632  0066C2  5019               	movf	i1___wmul@multiplier,w,c
 37633  0066C4  021B               	mulwf	i1___wmul@multiplicand,c
 37634  0066C6  CFF3 F01D          	movff	prodl,i1___wmul@product
 37635  0066CA  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37636  0066CE  5019               	movf	i1___wmul@multiplier,w,c
 37637  0066D0  021C               	mulwf	i1___wmul@multiplicand+1,c
 37638  0066D2  50F3               	movf	prodl,w,c
 37639  0066D4  261E               	addwf	i1___wmul@product+1,f,c
 37640  0066D6  501A               	movf	i1___wmul@multiplier+1,w,c
 37641  0066D8  021B               	mulwf	i1___wmul@multiplicand,c
 37642  0066DA  50F3               	movf	prodl,w,c
 37643  0066DC  261E               	addwf	i1___wmul@product+1,f,c
 37644  0066DE  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37645  0066E2  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37646  0066E6  0012               	return	
 37647  0066E8                     __end_ofi1___wmul:
 37648                           	opt stack 0
 37649                           tosu	equ	0xFFF
 37650                           tosh	equ	0xFFE
 37651                           tosl	equ	0xFFD
 37652                           pclatu	equ	0xFFB
 37653                           pclath	equ	0xFFA
 37654                           tblptru	equ	0xFF8
 37655                           tblptrh	equ	0xFF7
 37656                           tblptrl	equ	0xFF6
 37657                           tablat	equ	0xFF5
 37658                           prodh	equ	0xFF4
 37659                           prodl	equ	0xFF3
 37660                           intcon	equ	0xFF2
 37661                           intcon2	equ	0xFF1
 37662                           intcon3	equ	0xFF0
 37663                           indf0	equ	0xFEF
 37664                           postinc0	equ	0xFEE
 37665                           plusw0	equ	0xFEB
 37666                           fsr0h	equ	0xFEA
 37667                           fsr0l	equ	0xFE9
 37668                           wreg	equ	0xFE8
 37669                           indf1	equ	0xFE7
 37670                           postinc1	equ	0xFE6
 37671                           postdec1	equ	0xFE5
 37672                           plusw1	equ	0xFE3
 37673                           fsr1h	equ	0xFE2
 37674                           fsr1l	equ	0xFE1
 37675                           bsr	equ	0xFE0
 37676                           indf2	equ	0xFDF
 37677                           postinc2	equ	0xFDE
 37678                           postdec2	equ	0xFDD
 37679                           plusw2	equ	0xFDB
 37680                           fsr2h	equ	0xFDA
 37681                           fsr2l	equ	0xFD9
 37682                           status	equ	0xFD8
 37683                           
 37684 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37685 ;; Defined at:
 37686 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37687 ;; Parameters:    Size  Location     Type
 37688 ;;  OsAlarmId       1    wreg     unsigned char 
 37689 ;; Auto vars:     Size  Location     Type
 37690 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37691 ;; Return value:  Size  Location     Type
 37692 ;;                  1    wreg      void 
 37693 ;; Registers used:
 37694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37695 ;; Tracked objects:
 37696 ;;		On entry : 0/0
 37697 ;;		On exit  : 0/0
 37698 ;;		Unchanged: 0/0
 37699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37704 ;;Total ram usage:        1 bytes
 37705 ;; Hardware stack levels used:    1
 37706 ;; Hardware stack levels required when called:    4
 37707 ;; This function calls:
 37708 ;;		Nothing
 37709 ;; This function is called by:
 37710 ;;		_OsAlrm_ProcessOsAlarms
 37711 ;; This function uses a non-reentrant model
 37712 ;;
 37713                           
 37714                           	psect	text185
 37715  005A54                     __ptext185:
 37716                           	opt stack 0
 37717  005A54                     _OsAlrm_ClearOsAlarm:
 37718                           	opt stack 10
 37719                           
 37720                           ;incstack = 0
 37721                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37722  005A54  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37723                           
 37724                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37725  005A56  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37726  005A58  0D0B               	mullw	11
 37727  005A5A  0E00               	movlw	low _OsAlarms
 37728  005A5C  24F3               	addwf	prodl,w,c
 37729  005A5E  6ED9               	movwf	fsr2l,c
 37730  005A60  0E06               	movlw	high _OsAlarms
 37731  005A62  20F4               	addwfc	prodh,w,c
 37732  005A64  6EDA               	movwf	fsr2h,c
 37733  005A66  0E00               	movlw	0
 37734  005A68  6EDF               	movwf	indf2,c
 37735                           
 37736                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37737  005A6A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37738  005A6C  0D0B               	mullw	11
 37739  005A6E  0E01               	movlw	1
 37740  005A70  26F3               	addwf	prodl,f,c
 37741  005A72  0E00               	movlw	0
 37742  005A74  22F4               	addwfc	prodh,f,c
 37743  005A76  0E00               	movlw	low _OsAlarms
 37744  005A78  24F3               	addwf	prodl,w,c
 37745  005A7A  6ED9               	movwf	fsr2l,c
 37746  005A7C  0E06               	movlw	high _OsAlarms
 37747  005A7E  20F4               	addwfc	prodh,w,c
 37748  005A80  6EDA               	movwf	fsr2h,c
 37749  005A82  6ADE               	clrf	postinc2,c
 37750  005A84  6ADE               	clrf	postinc2,c
 37751  005A86  6ADE               	clrf	postinc2,c
 37752  005A88  6ADD               	clrf	postdec2,c
 37753                           
 37754                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37755  005A8A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37756  005A8C  0D0B               	mullw	11
 37757  005A8E  0E05               	movlw	5
 37758  005A90  26F3               	addwf	prodl,f,c
 37759  005A92  0E00               	movlw	0
 37760  005A94  22F4               	addwfc	prodh,f,c
 37761  005A96  0E00               	movlw	low _OsAlarms
 37762  005A98  24F3               	addwf	prodl,w,c
 37763  005A9A  6ED9               	movwf	fsr2l,c
 37764  005A9C  0E06               	movlw	high _OsAlarms
 37765  005A9E  20F4               	addwfc	prodh,w,c
 37766  005AA0  6EDA               	movwf	fsr2h,c
 37767  005AA2  6ADE               	clrf	postinc2,c
 37768  005AA4  6ADE               	clrf	postinc2,c
 37769  005AA6  6ADE               	clrf	postinc2,c
 37770  005AA8  6ADD               	clrf	postdec2,c
 37771  005AAA  0012               	return		;funcret
 37772  005AAC                     __end_of_OsAlrm_ClearOsAlarm:
 37773                           	opt stack 0
 37774                           tosu	equ	0xFFF
 37775                           tosh	equ	0xFFE
 37776                           tosl	equ	0xFFD
 37777                           pclatu	equ	0xFFB
 37778                           pclath	equ	0xFFA
 37779                           tblptru	equ	0xFF8
 37780                           tblptrh	equ	0xFF7
 37781                           tblptrl	equ	0xFF6
 37782                           tablat	equ	0xFF5
 37783                           prodh	equ	0xFF4
 37784                           prodl	equ	0xFF3
 37785                           intcon	equ	0xFF2
 37786                           intcon2	equ	0xFF1
 37787                           intcon3	equ	0xFF0
 37788                           indf0	equ	0xFEF
 37789                           postinc0	equ	0xFEE
 37790                           plusw0	equ	0xFEB
 37791                           fsr0h	equ	0xFEA
 37792                           fsr0l	equ	0xFE9
 37793                           wreg	equ	0xFE8
 37794                           indf1	equ	0xFE7
 37795                           postinc1	equ	0xFE6
 37796                           postdec1	equ	0xFE5
 37797                           plusw1	equ	0xFE3
 37798                           fsr1h	equ	0xFE2
 37799                           fsr1l	equ	0xFE1
 37800                           bsr	equ	0xFE0
 37801                           indf2	equ	0xFDF
 37802                           postinc2	equ	0xFDE
 37803                           postdec2	equ	0xFDD
 37804                           plusw2	equ	0xFDB
 37805                           fsr2h	equ	0xFDA
 37806                           fsr2l	equ	0xFD9
 37807                           status	equ	0xFD8
 37808                           
 37809 ;; *************** function _I2cDummyTx *****************
 37810 ;; Defined at:
 37811 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37812 ;; Parameters:    Size  Location     Type
 37813 ;;		None
 37814 ;; Auto vars:     Size  Location     Type
 37815 ;;		None
 37816 ;; Return value:  Size  Location     Type
 37817 ;;                  1    wreg      void 
 37818 ;; Registers used:
 37819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37820 ;; Tracked objects:
 37821 ;;		On entry : 0/0
 37822 ;;		On exit  : 0/0
 37823 ;;		Unchanged: 0/0
 37824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37829 ;;Total ram usage:        0 bytes
 37830 ;; Hardware stack levels used:    1
 37831 ;; Hardware stack levels required when called:    6
 37832 ;; This function calls:
 37833 ;;		i1_I2cSlv_SendI2cMsg
 37834 ;; This function is called by:
 37835 ;;		_I2cSlv_MainTask
 37836 ;;		_OsAlrm_ProcessOsAlarms
 37837 ;; This function uses a non-reentrant model
 37838 ;;
 37839                           
 37840                           	psect	text186
 37841  00691A                     __ptext186:
 37842                           	opt stack 0
 37843  00691A                     _I2cDummyTx:
 37844                           	opt stack 8
 37845                           
 37846                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37847                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37848                           
 37849                           ;incstack = 0
 37850  00691A  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 37851  00691C  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37852  00691E  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37853  006920  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37854  006922  0E00               	movlw	0
 37855  006924  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37856  006926  0E01               	movlw	1
 37857  006928  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37858  00692A  ECC5  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37859                           
 37860                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37861  00692E  0E01               	movlw	1
 37862  006930  0101               	movlb	1	; () banked
 37863  006932  6FE5               	movwf	_I2cBusStatus& (0+255),b
 37864                           
 37865                           ; BSR set to: 1
 37866  006934  0012               	return		;funcret
 37867  006936                     __end_of_I2cDummyTx:
 37868                           	opt stack 0
 37869                           tosu	equ	0xFFF
 37870                           tosh	equ	0xFFE
 37871                           tosl	equ	0xFFD
 37872                           pclatu	equ	0xFFB
 37873                           pclath	equ	0xFFA
 37874                           tblptru	equ	0xFF8
 37875                           tblptrh	equ	0xFF7
 37876                           tblptrl	equ	0xFF6
 37877                           tablat	equ	0xFF5
 37878                           prodh	equ	0xFF4
 37879                           prodl	equ	0xFF3
 37880                           intcon	equ	0xFF2
 37881                           intcon2	equ	0xFF1
 37882                           intcon3	equ	0xFF0
 37883                           indf0	equ	0xFEF
 37884                           postinc0	equ	0xFEE
 37885                           plusw0	equ	0xFEB
 37886                           fsr0h	equ	0xFEA
 37887                           fsr0l	equ	0xFE9
 37888                           wreg	equ	0xFE8
 37889                           indf1	equ	0xFE7
 37890                           postinc1	equ	0xFE6
 37891                           postdec1	equ	0xFE5
 37892                           plusw1	equ	0xFE3
 37893                           fsr1h	equ	0xFE2
 37894                           fsr1l	equ	0xFE1
 37895                           bsr	equ	0xFE0
 37896                           indf2	equ	0xFDF
 37897                           postinc2	equ	0xFDE
 37898                           postdec2	equ	0xFDD
 37899                           plusw2	equ	0xFDB
 37900                           fsr2h	equ	0xFDA
 37901                           fsr2l	equ	0xFD9
 37902                           status	equ	0xFD8
 37903                           
 37904 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 37905 ;; Defined at:
 37906 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37907 ;; Parameters:    Size  Location     Type
 37908 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 37909 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 37910 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 37911 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 37912 ;;  DataLenght      1   30[COMRAM] unsigned char 
 37913 ;; Auto vars:     Size  Location     Type
 37914 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 37915 ;; Return value:  Size  Location     Type
 37916 ;;                  1    wreg      unsigned char 
 37917 ;; Registers used:
 37918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37919 ;; Tracked objects:
 37920 ;;		On entry : 0/0
 37921 ;;		On exit  : 0/0
 37922 ;;		Unchanged: 0/0
 37923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37928 ;;Total ram usage:        5 bytes
 37929 ;; Hardware stack levels used:    1
 37930 ;; Hardware stack levels required when called:    5
 37931 ;; This function calls:
 37932 ;;		i1_GenerateEvt
 37933 ;; This function is called by:
 37934 ;;		_I2cDummyTx
 37935 ;; This function uses a non-reentrant model
 37936 ;;
 37937                           
 37938                           	psect	text187
 37939  00638A                     __ptext187:
 37940                           	opt stack 0
 37941  00638A                     i1_I2cSlv_SendI2cMsg:
 37942                           	opt stack 8
 37943                           
 37944                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 37945                           
 37946                           ; BSR set to: 1
 37947                           ;incstack = 0
 37948  00638A  0E00               	movlw	0
 37949  00638C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37950                           
 37951                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 37952  00638E  0100               	movlb	0	; () banked
 37953  006390  05CF               	decf	_I2cComSts& (0+255),w,b
 37954  006392  B4D8               	btfsc	status,2,c
 37955  006394  D014               	goto	i1l1412
 37956                           
 37957                           ; BSR set to: 0
 37958                           ;i2c_slv.c: 257: {
 37959                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 37960  006396  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 37961                           
 37962                           ; BSR set to: 0
 37963                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 37964  00639A  0E00               	movlw	0
 37965  00639C  0103               	movlb	3	; () banked
 37966  00639E  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 37967                           
 37968                           ; BSR set to: 3
 37969                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 37970  0063A0  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 37971                           
 37972                           ; BSR set to: 3
 37973                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 37974  0063A4  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 37975  0063A8  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 37976                           
 37977                           ; BSR set to: 3
 37978                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 37979  0063AC  0ED7               	movlw	low _I2cWriteDataEvt
 37980  0063AE  6E19               	movwf	i1GenerateEvt@Event,c
 37981  0063B0  0E00               	movlw	high _I2cWriteDataEvt
 37982  0063B2  6E1A               	movwf	i1GenerateEvt@Event+1,c
 37983  0063B4  EC09  F035         	call	i1_GenerateEvt	;wreg free
 37984                           
 37985                           ;i2c_slv.c: 267: TxSts = 1u;
 37986  0063B8  0E01               	movlw	1
 37987  0063BA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37988                           
 37989                           ;i2c_slv.c: 268: }
 37990  0063BC  0012               	return	
 37991  0063BE                     i1l1412:
 37992                           
 37993                           ;i2c_slv.c: 269: else
 37994                           ;i2c_slv.c: 270: {
 37995                           ;i2c_slv.c: 272: TxSts = 0u;
 37996  0063BE  0E00               	movlw	0
 37997  0063C0  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37998  0063C2  0012               	return	
 37999  0063C4                     __end_ofi1_I2cSlv_SendI2cMsg:
 38000                           	opt stack 0
 38001                           tosu	equ	0xFFF
 38002                           tosh	equ	0xFFE
 38003                           tosl	equ	0xFFD
 38004                           pclatu	equ	0xFFB
 38005                           pclath	equ	0xFFA
 38006                           tblptru	equ	0xFF8
 38007                           tblptrh	equ	0xFF7
 38008                           tblptrl	equ	0xFF6
 38009                           tablat	equ	0xFF5
 38010                           prodh	equ	0xFF4
 38011                           prodl	equ	0xFF3
 38012                           intcon	equ	0xFF2
 38013                           intcon2	equ	0xFF1
 38014                           intcon3	equ	0xFF0
 38015                           indf0	equ	0xFEF
 38016                           postinc0	equ	0xFEE
 38017                           plusw0	equ	0xFEB
 38018                           fsr0h	equ	0xFEA
 38019                           fsr0l	equ	0xFE9
 38020                           wreg	equ	0xFE8
 38021                           indf1	equ	0xFE7
 38022                           postinc1	equ	0xFE6
 38023                           postdec1	equ	0xFE5
 38024                           plusw1	equ	0xFE3
 38025                           fsr1h	equ	0xFE2
 38026                           fsr1l	equ	0xFE1
 38027                           bsr	equ	0xFE0
 38028                           indf2	equ	0xFDF
 38029                           postinc2	equ	0xFDE
 38030                           postdec2	equ	0xFDD
 38031                           plusw2	equ	0xFDB
 38032                           fsr2h	equ	0xFDA
 38033                           fsr2l	equ	0xFD9
 38034                           status	equ	0xFD8
 38035                           
 38036 ;; *************** function i1_GenerateEvt *****************
 38037 ;; Defined at:
 38038 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38039 ;; Parameters:    Size  Location     Type
 38040 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 38041 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38042 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38043 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38044 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38045 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38046 ;; Auto vars:     Size  Location     Type
 38047 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 38048 ;; Return value:  Size  Location     Type
 38049 ;;                  1    wreg      enum E7699
 38050 ;; Registers used:
 38051 ;;		wreg, fsr2l, fsr2h, status,2
 38052 ;; Tracked objects:
 38053 ;;		On entry : 0/0
 38054 ;;		On exit  : 0/0
 38055 ;;		Unchanged: 0/0
 38056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38061 ;;Total ram usage:        3 bytes
 38062 ;; Hardware stack levels used:    1
 38063 ;; Hardware stack levels required when called:    4
 38064 ;; This function calls:
 38065 ;;		Nothing
 38066 ;; This function is called by:
 38067 ;;		i1_I2cSlv_SendI2cMsg
 38068 ;; This function uses a non-reentrant model
 38069 ;;
 38070                           
 38071                           	psect	text188
 38072  006A12                     __ptext188:
 38073                           	opt stack 0
 38074  006A12                     i1_GenerateEvt:
 38075                           	opt stack 8
 38076                           
 38077                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38078                           
 38079                           ;incstack = 0
 38080  006A12  0E00               	movlw	0
 38081  006A14  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38082                           
 38083                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38084  006A16  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38085  006A1A  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38086  006A1E  0E02               	movlw	2
 38087  006A20  6EDF               	movwf	indf2,c
 38088                           
 38089                           ;os_ser.c: 83: EventStatus = EventSent;
 38090  006A22  0E02               	movlw	2
 38091  006A24  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38092  006A26  0012               	return	
 38093  006A28                     __end_ofi1_GenerateEvt:
 38094                           	opt stack 0
 38095                           tosu	equ	0xFFF
 38096                           tosh	equ	0xFFE
 38097                           tosl	equ	0xFFD
 38098                           pclatu	equ	0xFFB
 38099                           pclath	equ	0xFFA
 38100                           tblptru	equ	0xFF8
 38101                           tblptrh	equ	0xFF7
 38102                           tblptrl	equ	0xFF6
 38103                           tablat	equ	0xFF5
 38104                           prodh	equ	0xFF4
 38105                           prodl	equ	0xFF3
 38106                           intcon	equ	0xFF2
 38107                           intcon2	equ	0xFF1
 38108                           intcon3	equ	0xFF0
 38109                           indf0	equ	0xFEF
 38110                           postinc0	equ	0xFEE
 38111                           plusw0	equ	0xFEB
 38112                           fsr0h	equ	0xFEA
 38113                           fsr0l	equ	0xFE9
 38114                           wreg	equ	0xFE8
 38115                           indf1	equ	0xFE7
 38116                           postinc1	equ	0xFE6
 38117                           postdec1	equ	0xFE5
 38118                           plusw1	equ	0xFE3
 38119                           fsr1h	equ	0xFE2
 38120                           fsr1l	equ	0xFE1
 38121                           bsr	equ	0xFE0
 38122                           indf2	equ	0xFDF
 38123                           postinc2	equ	0xFDE
 38124                           postdec2	equ	0xFDD
 38125                           plusw2	equ	0xFDB
 38126                           fsr2h	equ	0xFDA
 38127                           fsr2l	equ	0xFD9
 38128                           status	equ	0xFD8
 38129                           
 38130 ;; *************** function _HighPriorityIsr *****************
 38131 ;; Defined at:
 38132 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38133 ;; Parameters:    Size  Location     Type
 38134 ;;		None
 38135 ;; Auto vars:     Size  Location     Type
 38136 ;;		None
 38137 ;; Return value:  Size  Location     Type
 38138 ;;                  1    wreg      void 
 38139 ;; Registers used:
 38140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38141 ;; Tracked objects:
 38142 ;;		On entry : 0/0
 38143 ;;		On exit  : 0/0
 38144 ;;		Unchanged: 0/0
 38145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38148 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38149 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38150 ;;Total ram usage:       18 bytes
 38151 ;; Hardware stack levels used:    1
 38152 ;; Hardware stack levels required when called:    3
 38153 ;; This function calls:
 38154 ;;		_Mcu_Int0Isr
 38155 ;;		_Mcu_Int1Isr
 38156 ;;		_Rtcc_RtcIsr
 38157 ;;		_Uart_Uart1RxIsr
 38158 ;; This function is called by:
 38159 ;;		Interrupt level 2
 38160 ;; This function uses a non-reentrant model
 38161 ;;
 38162                           
 38163                           	psect	intcode
 38164  000008                     __pintcode:
 38165                           	opt stack 0
 38166  000008                     _HighPriorityIsr:
 38167                           	opt stack 8
 38168                           
 38169                           ;incstack = 0
 38170  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38171  00000A  EFC6  F022         	goto	int_func
 38172                           tosu	equ	0xFFF
 38173                           tosh	equ	0xFFE
 38174                           tosl	equ	0xFFD
 38175                           pclatu	equ	0xFFB
 38176                           pclath	equ	0xFFA
 38177                           tblptru	equ	0xFF8
 38178                           tblptrh	equ	0xFF7
 38179                           tblptrl	equ	0xFF6
 38180                           tablat	equ	0xFF5
 38181                           prodh	equ	0xFF4
 38182                           prodl	equ	0xFF3
 38183                           intcon	equ	0xFF2
 38184                           intcon2	equ	0xFF1
 38185                           intcon3	equ	0xFF0
 38186                           indf0	equ	0xFEF
 38187                           postinc0	equ	0xFEE
 38188                           plusw0	equ	0xFEB
 38189                           fsr0h	equ	0xFEA
 38190                           fsr0l	equ	0xFE9
 38191                           wreg	equ	0xFE8
 38192                           indf1	equ	0xFE7
 38193                           postinc1	equ	0xFE6
 38194                           postdec1	equ	0xFE5
 38195                           plusw1	equ	0xFE3
 38196                           fsr1h	equ	0xFE2
 38197                           fsr1l	equ	0xFE1
 38198                           bsr	equ	0xFE0
 38199                           indf2	equ	0xFDF
 38200                           postinc2	equ	0xFDE
 38201                           postdec2	equ	0xFDD
 38202                           plusw2	equ	0xFDB
 38203                           fsr2h	equ	0xFDA
 38204                           fsr2l	equ	0xFD9
 38205                           status	equ	0xFD8
 38206                           
 38207                           	psect	intcode_body
 38208  00458C                     __pintcode_body:
 38209                           	opt stack 8
 38210  00458C                     int_func:
 38211                           	opt stack 8
 38212  00458C  CFFA F007          	movff	pclath,??_HighPriorityIsr
 38213  004590  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 38214  004594  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 38215  004598  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 38216  00459C  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 38217  0045A0  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 38218  0045A4  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 38219  0045A8  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 38220  0045AC  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 38221  0045B0  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 38222  0045B4  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 38223  0045B8  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 38224  0045BC  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 38225  0045C0  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 38226  0045C4  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 38227  0045C8  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 38228  0045CC  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 38229  0045D0  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 38230                           
 38231                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38232  0045D4  B2F2               	btfsc	intcon,1,c	;volatile
 38233                           
 38234                           ;irq.c: 158: {
 38235                           ;irq.c: 160: Mcu_Int0Isr();
 38236  0045D6  ECBA  F035         	call	_Mcu_Int0Isr	;wreg free
 38237                           
 38238                           ;irq.c: 161: }
 38239                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38240  0045DA  B0F0               	btfsc	intcon3,0,c	;volatile
 38241                           
 38242                           ;irq.c: 167: {
 38243                           ;irq.c: 169: Mcu_Int1Isr();
 38244  0045DC  ECB8  F035         	call	_Mcu_Int1Isr	;wreg free
 38245                           
 38246                           ;irq.c: 170: }
 38247                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38248  0045E0  B0A4               	btfsc	4004,0,c	;volatile
 38249                           
 38250                           ;irq.c: 203: {
 38251                           ;irq.c: 205: Rtcc_RtcIsr();
 38252  0045E2  ECB6  F035         	call	_Rtcc_RtcIsr	;wreg free
 38253                           
 38254                           ;irq.c: 206: }
 38255                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38256  0045E6  BA9E               	btfsc	3998,5,c	;volatile
 38257                           
 38258                           ;irq.c: 212: {
 38259                           ;irq.c: 214: Uart_Uart1RxIsr();
 38260  0045E8  EC64  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38261  0045EC  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38262  0045F0  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38263  0045F4  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38264  0045F8  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38265  0045FC  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38266  004600  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38267  004604  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38268  004608  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38269  00460C  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38270  004610  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38271  004614  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38272  004618  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38273  00461C  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38274  004620  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38275  004624  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38276  004628  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38277  00462C  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38278  004630  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38279  004634  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38280  004636  0011               	retfie		f
 38281  004638                     __end_of_HighPriorityIsr:
 38282                           	opt stack 0
 38283                           tosu	equ	0xFFF
 38284                           tosh	equ	0xFFE
 38285                           tosl	equ	0xFFD
 38286                           pclatu	equ	0xFFB
 38287                           pclath	equ	0xFFA
 38288                           tblptru	equ	0xFF8
 38289                           tblptrh	equ	0xFF7
 38290                           tblptrl	equ	0xFF6
 38291                           tablat	equ	0xFF5
 38292                           prodh	equ	0xFF4
 38293                           prodl	equ	0xFF3
 38294                           intcon	equ	0xFF2
 38295                           intcon2	equ	0xFF1
 38296                           intcon3	equ	0xFF0
 38297                           indf0	equ	0xFEF
 38298                           postinc0	equ	0xFEE
 38299                           plusw0	equ	0xFEB
 38300                           fsr0h	equ	0xFEA
 38301                           fsr0l	equ	0xFE9
 38302                           wreg	equ	0xFE8
 38303                           indf1	equ	0xFE7
 38304                           postinc1	equ	0xFE6
 38305                           postdec1	equ	0xFE5
 38306                           plusw1	equ	0xFE3
 38307                           fsr1h	equ	0xFE2
 38308                           fsr1l	equ	0xFE1
 38309                           bsr	equ	0xFE0
 38310                           indf2	equ	0xFDF
 38311                           postinc2	equ	0xFDE
 38312                           postdec2	equ	0xFDD
 38313                           plusw2	equ	0xFDB
 38314                           fsr2h	equ	0xFDA
 38315                           fsr2l	equ	0xFD9
 38316                           status	equ	0xFD8
 38317                           
 38318 ;; *************** function _Uart_Uart1RxIsr *****************
 38319 ;; Defined at:
 38320 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38321 ;; Parameters:    Size  Location     Type
 38322 ;;		None
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;		None
 38325 ;; Return value:  Size  Location     Type
 38326 ;;                  1    wreg      void 
 38327 ;; Registers used:
 38328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38329 ;; Tracked objects:
 38330 ;;		On entry : 0/0
 38331 ;;		On exit  : 0/0
 38332 ;;		Unchanged: 0/0
 38333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38338 ;;Total ram usage:        0 bytes
 38339 ;; Hardware stack levels used:    1
 38340 ;; Hardware stack levels required when called:    2
 38341 ;; This function calls:
 38342 ;;		_Uart_MdmGsmGprsReadService
 38343 ;; This function is called by:
 38344 ;;		_HighPriorityIsr
 38345 ;; This function uses a non-reentrant model
 38346 ;;
 38347                           
 38348                           	psect	text190
 38349  006AC8                     __ptext190:
 38350                           	opt stack 0
 38351  006AC8                     _Uart_Uart1RxIsr:
 38352                           	opt stack 8
 38353                           
 38354                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38355                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38356                           
 38357                           ;incstack = 0
 38358  006AC8  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38359                           
 38360                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38361  006ACC  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38362  006AD0  0E01               	movlw	1
 38363  006AD2  ECA7  F01E         	call	_Uart_MdmGsmGprsReadService
 38364  006AD6  0012               	return		;funcret
 38365  006AD8                     __end_of_Uart_Uart1RxIsr:
 38366                           	opt stack 0
 38367                           tosu	equ	0xFFF
 38368                           tosh	equ	0xFFE
 38369                           tosl	equ	0xFFD
 38370                           pclatu	equ	0xFFB
 38371                           pclath	equ	0xFFA
 38372                           tblptru	equ	0xFF8
 38373                           tblptrh	equ	0xFF7
 38374                           tblptrl	equ	0xFF6
 38375                           tablat	equ	0xFF5
 38376                           prodh	equ	0xFF4
 38377                           prodl	equ	0xFF3
 38378                           intcon	equ	0xFF2
 38379                           intcon2	equ	0xFF1
 38380                           intcon3	equ	0xFF0
 38381                           indf0	equ	0xFEF
 38382                           postinc0	equ	0xFEE
 38383                           plusw0	equ	0xFEB
 38384                           fsr0h	equ	0xFEA
 38385                           fsr0l	equ	0xFE9
 38386                           wreg	equ	0xFE8
 38387                           indf1	equ	0xFE7
 38388                           postinc1	equ	0xFE6
 38389                           postdec1	equ	0xFE5
 38390                           plusw1	equ	0xFE3
 38391                           fsr1h	equ	0xFE2
 38392                           fsr1l	equ	0xFE1
 38393                           bsr	equ	0xFE0
 38394                           indf2	equ	0xFDF
 38395                           postinc2	equ	0xFDE
 38396                           postdec2	equ	0xFDD
 38397                           plusw2	equ	0xFDB
 38398                           fsr2h	equ	0xFDA
 38399                           fsr2l	equ	0xFD9
 38400                           status	equ	0xFD8
 38401                           
 38402 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38403 ;; Defined at:
 38404 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38405 ;; Parameters:    Size  Location     Type
 38406 ;;  Module          1    wreg     unsigned char 
 38407 ;;  UartData        1    3[COMRAM] unsigned char 
 38408 ;; Auto vars:     Size  Location     Type
 38409 ;;  Module          1    0[COMRAM] unsigned char 
 38410 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38411 ;; Return value:  Size  Location     Type
 38412 ;;                  1    wreg      void 
 38413 ;; Registers used:
 38414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38415 ;; Tracked objects:
 38416 ;;		On entry : 0/0
 38417 ;;		On exit  : 0/0
 38418 ;;		Unchanged: 0/0
 38419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38420 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38424 ;;Total ram usage:        3 bytes
 38425 ;; Hardware stack levels used:    1
 38426 ;; Hardware stack levels required when called:    1
 38427 ;; This function calls:
 38428 ;;		i2_GenerateEvt
 38429 ;; This function is called by:
 38430 ;;		_Uart_Uart1RxIsr
 38431 ;; This function uses a non-reentrant model
 38432 ;;
 38433                           
 38434                           	psect	text191
 38435  003D4E                     __ptext191:
 38436                           	opt stack 0
 38437  003D4E                     _Uart_MdmGsmGprsReadService:
 38438                           	opt stack 8
 38439                           
 38440                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38441                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38442                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38443                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38444                           
 38445                           ;incstack = 0
 38446  003D4E  0E00               	movlw	0
 38447  003D50  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38448  003D52  0E00               	movlw	0
 38449  003D54  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38450                           
 38451                           ;uart_drv.c: 383: switch (RxState)
 38452  003D56  D058               	goto	i2l680
 38453  003D58                     
 38454                           ;uart_drv.c: 387: if (UartData == '\r')
 38455  003D58  0E0D               	movlw	13
 38456  003D5A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38457  003D5C  A4D8               	btfss	status,2,c
 38458  003D5E  D003               	goto	i2l682
 38459                           
 38460                           ;uart_drv.c: 388: {
 38461                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38462  003D60  0E01               	movlw	1
 38463  003D62  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38464                           
 38465                           ;uart_drv.c: 391: }
 38466  003D64  0012               	return	
 38467  003D66                     i2l682:
 38468                           
 38469                           ;uart_drv.c: 392: else
 38470                           ;uart_drv.c: 393: {
 38471                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38472  003D66  0E90               	movlw	144
 38473  003D68  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38474  003D6A  0E01               	movlw	1
 38475  003D6C  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38476  003D6E  B0D8               	btfsc	status,0,c
 38477  003D70  0012               	return	
 38478                           
 38479                           ;uart_drv.c: 395: {
 38480                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38481  003D72  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38482  003D74  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38483  003D76  6ED9               	movwf	fsr2l,c
 38484  003D78  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38485  003D7A  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38486  003D7C  6EDA               	movwf	fsr2h,c
 38487  003D7E  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38488                           
 38489                           ;uart_drv.c: 399: RxCounter++;
 38490  003D82  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38491  003D84  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38492                           
 38493                           ;uart_drv.c: 400: }
 38494                           ;uart_drv.c: 401: }
 38495                           ;uart_drv.c: 402: break;
 38496  003D86  0012               	return	
 38497  003D88                     
 38498                           ;uart_drv.c: 406: if (UartData == '\n')
 38499  003D88  0E0A               	movlw	10
 38500  003D8A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38501  003D8C  A4D8               	btfss	status,2,c
 38502  003D8E  D035               	goto	i2l688
 38503                           
 38504                           ;uart_drv.c: 407: {
 38505                           ;uart_drv.c: 409: if (RxCounter > 0)
 38506  003D90  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38507  003D92  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38508  003D94  B4D8               	btfsc	status,2,c
 38509  003D96  D031               	goto	i2l688
 38510                           
 38511                           ;uart_drv.c: 410: {
 38512                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38513  003D98  0E00               	movlw	0
 38514  003D9A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38515  003D9C  0E00               	movlw	0
 38516  003D9E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38517  003DA0  D010               	goto	i2l689
 38518  003DA2                     
 38519                           ;uart_drv.c: 413: {
 38520                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38521  003DA2  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38522  003DA4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38523  003DA6  6ED9               	movwf	fsr2l,c
 38524  003DA8  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38525  003DAA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38526  003DAC  6EDA               	movwf	fsr2h,c
 38527  003DAE  0E58               	movlw	low _RxBuffer
 38528  003DB0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38529  003DB2  6EE1               	movwf	fsr1l,c
 38530  003DB4  0E0C               	movlw	high _RxBuffer
 38531  003DB6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38532  003DB8  6EE2               	movwf	fsr1h,c
 38533  003DBA  CFDF FFE7          	movff	indf2,indf1
 38534  003DBE  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38535  003DC0  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38536  003DC2                     i2l689:
 38537  003DC2  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38538  003DC4  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38539  003DC6  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38540  003DC8  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38541  003DCA  A0D8               	btfss	status,0,c
 38542  003DCC  D7EA               	goto	i2l690
 38543                           
 38544                           ;uart_drv.c: 415: }
 38545                           ;uart_drv.c: 417: RxLen = RxCounter;
 38546  003DCE  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38547  003DD2  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38548                           
 38549                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38550  003DD6  0E3C               	movlw	low _NewStringReceived
 38551  003DD8  6E01               	movwf	i2GenerateEvt@Event,c
 38552  003DDA  0E00               	movlw	high _NewStringReceived
 38553  003DDC  6E02               	movwf	i2GenerateEvt@Event+1,c
 38554  003DDE  EC14  F035         	call	i2_GenerateEvt	;wreg free
 38555                           
 38556                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38557  003DE2  0E3B               	movlw	low _NewMdmEvtParserRequest
 38558  003DE4  6E01               	movwf	i2GenerateEvt@Event,c
 38559  003DE6  0E00               	movlw	high _NewMdmEvtParserRequest
 38560  003DE8  6E02               	movwf	i2GenerateEvt@Event+1,c
 38561  003DEA  EC14  F035         	call	i2_GenerateEvt	;wreg free
 38562                           
 38563                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38564  003DEE  0E3A               	movlw	low _NewStringMdmTerminal
 38565  003DF0  6E01               	movwf	i2GenerateEvt@Event,c
 38566  003DF2  0E00               	movlw	high _NewStringMdmTerminal
 38567  003DF4  6E02               	movwf	i2GenerateEvt@Event+1,c
 38568  003DF6  EC14  F035         	call	i2_GenerateEvt	;wreg free
 38569  003DFA                     i2l688:
 38570                           
 38571                           ;uart_drv.c: 427: }
 38572                           ;uart_drv.c: 429: RxState = ReadData;
 38573                           
 38574                           ;uart_drv.c: 424: else
 38575                           ;uart_drv.c: 425: {
 38576                           
 38577                           ;uart_drv.c: 422: }
 38578                           ;uart_drv.c: 423: }
 38579  003DFA  0E00               	movlw	0
 38580  003DFC  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38581                           
 38582                           ;uart_drv.c: 431: RxCounter = 0;
 38583  003DFE  0E00               	movlw	0
 38584  003E00  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38585  003E02  0E00               	movlw	0
 38586  003E04  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38587                           
 38588                           ;uart_drv.c: 436: }
 38589                           
 38590                           ;uart_drv.c: 435: break;
 38591                           
 38592                           ;uart_drv.c: 434: default:
 38593                           
 38594                           ;uart_drv.c: 432: break;
 38595  003E06  0012               	return	
 38596  003E08                     i2l680:
 38597  003E08  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38598                           
 38599                           ; Switch size 1, requested type "space"
 38600                           ; Number of cases is 2, Range of values is 0 to 1
 38601                           ; switch strategies available:
 38602                           ; Name         Instructions Cycles
 38603                           ; simple_byte            7     4 (average)
 38604                           ;	Chosen strategy is simple_byte
 38605  003E0A  0A00               	xorlw	0	; case 0
 38606  003E0C  B4D8               	btfsc	status,2,c
 38607  003E0E  D7A4               	goto	i2l681
 38608  003E10  0A01               	xorlw	1	; case 1
 38609  003E12  A4D8               	btfss	status,2,c
 38610  003E14  0012               	return	
 38611  003E16  D7B8               	goto	i2l686
 38612  003E18                     __end_of_Uart_MdmGsmGprsReadService:
 38613                           	opt stack 0
 38614                           tosu	equ	0xFFF
 38615                           tosh	equ	0xFFE
 38616                           tosl	equ	0xFFD
 38617                           pclatu	equ	0xFFB
 38618                           pclath	equ	0xFFA
 38619                           tblptru	equ	0xFF8
 38620                           tblptrh	equ	0xFF7
 38621                           tblptrl	equ	0xFF6
 38622                           tablat	equ	0xFF5
 38623                           prodh	equ	0xFF4
 38624                           prodl	equ	0xFF3
 38625                           intcon	equ	0xFF2
 38626                           intcon2	equ	0xFF1
 38627                           intcon3	equ	0xFF0
 38628                           indf0	equ	0xFEF
 38629                           postinc0	equ	0xFEE
 38630                           plusw0	equ	0xFEB
 38631                           fsr0h	equ	0xFEA
 38632                           fsr0l	equ	0xFE9
 38633                           wreg	equ	0xFE8
 38634                           indf1	equ	0xFE7
 38635                           postinc1	equ	0xFE6
 38636                           postdec1	equ	0xFE5
 38637                           plusw1	equ	0xFE3
 38638                           fsr1h	equ	0xFE2
 38639                           fsr1l	equ	0xFE1
 38640                           bsr	equ	0xFE0
 38641                           indf2	equ	0xFDF
 38642                           postinc2	equ	0xFDE
 38643                           postdec2	equ	0xFDD
 38644                           plusw2	equ	0xFDB
 38645                           fsr2h	equ	0xFDA
 38646                           fsr2l	equ	0xFD9
 38647                           status	equ	0xFD8
 38648                           
 38649 ;; *************** function i2_GenerateEvt *****************
 38650 ;; Defined at:
 38651 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38652 ;; Parameters:    Size  Location     Type
 38653 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38654 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38655 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38656 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38657 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38658 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38659 ;; Auto vars:     Size  Location     Type
 38660 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38661 ;; Return value:  Size  Location     Type
 38662 ;;                  1    wreg      enum E7699
 38663 ;; Registers used:
 38664 ;;		wreg, fsr2l, fsr2h, status,2
 38665 ;; Tracked objects:
 38666 ;;		On entry : 0/0
 38667 ;;		On exit  : 0/0
 38668 ;;		Unchanged: 0/0
 38669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38673 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38674 ;;Total ram usage:        3 bytes
 38675 ;; Hardware stack levels used:    1
 38676 ;; This function calls:
 38677 ;;		Nothing
 38678 ;; This function is called by:
 38679 ;;		_Uart_MdmGsmGprsReadService
 38680 ;; This function uses a non-reentrant model
 38681 ;;
 38682                           
 38683                           	psect	text192
 38684  006A28                     __ptext192:
 38685                           	opt stack 0
 38686  006A28                     i2_GenerateEvt:
 38687                           	opt stack 8
 38688                           
 38689                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38690                           
 38691                           ;incstack = 0
 38692  006A28  0E00               	movlw	0
 38693  006A2A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38694                           
 38695                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38696  006A2C  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38697  006A30  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38698  006A34  0E02               	movlw	2
 38699  006A36  6EDF               	movwf	indf2,c
 38700                           
 38701                           ;os_ser.c: 83: EventStatus = EventSent;
 38702  006A38  0E02               	movlw	2
 38703  006A3A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38704  006A3C  0012               	return	
 38705  006A3E                     __end_ofi2_GenerateEvt:
 38706                           	opt stack 0
 38707                           tosu	equ	0xFFF
 38708                           tosh	equ	0xFFE
 38709                           tosl	equ	0xFFD
 38710                           pclatu	equ	0xFFB
 38711                           pclath	equ	0xFFA
 38712                           tblptru	equ	0xFF8
 38713                           tblptrh	equ	0xFF7
 38714                           tblptrl	equ	0xFF6
 38715                           tablat	equ	0xFF5
 38716                           prodh	equ	0xFF4
 38717                           prodl	equ	0xFF3
 38718                           intcon	equ	0xFF2
 38719                           intcon2	equ	0xFF1
 38720                           intcon3	equ	0xFF0
 38721                           indf0	equ	0xFEF
 38722                           postinc0	equ	0xFEE
 38723                           plusw0	equ	0xFEB
 38724                           fsr0h	equ	0xFEA
 38725                           fsr0l	equ	0xFE9
 38726                           wreg	equ	0xFE8
 38727                           indf1	equ	0xFE7
 38728                           postinc1	equ	0xFE6
 38729                           postdec1	equ	0xFE5
 38730                           plusw1	equ	0xFE3
 38731                           fsr1h	equ	0xFE2
 38732                           fsr1l	equ	0xFE1
 38733                           bsr	equ	0xFE0
 38734                           indf2	equ	0xFDF
 38735                           postinc2	equ	0xFDE
 38736                           postdec2	equ	0xFDD
 38737                           plusw2	equ	0xFDB
 38738                           fsr2h	equ	0xFDA
 38739                           fsr2l	equ	0xFD9
 38740                           status	equ	0xFD8
 38741                           
 38742 ;; *************** function _Rtcc_RtcIsr *****************
 38743 ;; Defined at:
 38744 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38745 ;; Parameters:    Size  Location     Type
 38746 ;;		None
 38747 ;; Auto vars:     Size  Location     Type
 38748 ;;		None
 38749 ;; Return value:  Size  Location     Type
 38750 ;;                  1    wreg      void 
 38751 ;; Registers used:
 38752 ;;		wreg, status,2, status,0
 38753 ;; Tracked objects:
 38754 ;;		On entry : 0/0
 38755 ;;		On exit  : 0/0
 38756 ;;		Unchanged: 0/0
 38757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38762 ;;Total ram usage:        0 bytes
 38763 ;; Hardware stack levels used:    1
 38764 ;; This function calls:
 38765 ;;		Nothing
 38766 ;; This function is called by:
 38767 ;;		_HighPriorityIsr
 38768 ;; This function uses a non-reentrant model
 38769 ;;
 38770                           
 38771                           	psect	text193
 38772  006B6C                     __ptext193:
 38773                           	opt stack 0
 38774  006B6C                     _Rtcc_RtcIsr:
 38775                           	opt stack 10
 38776                           
 38777                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38778                           
 38779                           ;incstack = 0
 38780  006B6C  90A4               	bcf	4004,0,c	;volatile
 38781  006B6E  0012               	return	
 38782  006B70                     __end_of_Rtcc_RtcIsr:
 38783                           	opt stack 0
 38784                           tosu	equ	0xFFF
 38785                           tosh	equ	0xFFE
 38786                           tosl	equ	0xFFD
 38787                           pclatu	equ	0xFFB
 38788                           pclath	equ	0xFFA
 38789                           tblptru	equ	0xFF8
 38790                           tblptrh	equ	0xFF7
 38791                           tblptrl	equ	0xFF6
 38792                           tablat	equ	0xFF5
 38793                           prodh	equ	0xFF4
 38794                           prodl	equ	0xFF3
 38795                           intcon	equ	0xFF2
 38796                           intcon2	equ	0xFF1
 38797                           intcon3	equ	0xFF0
 38798                           indf0	equ	0xFEF
 38799                           postinc0	equ	0xFEE
 38800                           plusw0	equ	0xFEB
 38801                           fsr0h	equ	0xFEA
 38802                           fsr0l	equ	0xFE9
 38803                           wreg	equ	0xFE8
 38804                           indf1	equ	0xFE7
 38805                           postinc1	equ	0xFE6
 38806                           postdec1	equ	0xFE5
 38807                           plusw1	equ	0xFE3
 38808                           fsr1h	equ	0xFE2
 38809                           fsr1l	equ	0xFE1
 38810                           bsr	equ	0xFE0
 38811                           indf2	equ	0xFDF
 38812                           postinc2	equ	0xFDE
 38813                           postdec2	equ	0xFDD
 38814                           plusw2	equ	0xFDB
 38815                           fsr2h	equ	0xFDA
 38816                           fsr2l	equ	0xFD9
 38817                           status	equ	0xFD8
 38818                           
 38819 ;; *************** function _Mcu_Int1Isr *****************
 38820 ;; Defined at:
 38821 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38822 ;; Parameters:    Size  Location     Type
 38823 ;;		None
 38824 ;; Auto vars:     Size  Location     Type
 38825 ;;		None
 38826 ;; Return value:  Size  Location     Type
 38827 ;;                  1    wreg      void 
 38828 ;; Registers used:
 38829 ;;		wreg, status,2, status,0
 38830 ;; Tracked objects:
 38831 ;;		On entry : 0/0
 38832 ;;		On exit  : 0/0
 38833 ;;		Unchanged: 0/0
 38834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38839 ;;Total ram usage:        0 bytes
 38840 ;; Hardware stack levels used:    1
 38841 ;; This function calls:
 38842 ;;		Nothing
 38843 ;; This function is called by:
 38844 ;;		_HighPriorityIsr
 38845 ;; This function uses a non-reentrant model
 38846 ;;
 38847                           
 38848                           	psect	text194
 38849  006B70                     __ptext194:
 38850                           	opt stack 0
 38851  006B70                     _Mcu_Int1Isr:
 38852                           	opt stack 10
 38853                           
 38854                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38855                           
 38856                           ;incstack = 0
 38857  006B70  90F0               	bcf	intcon3,0,c	;volatile
 38858  006B72  0012               	return	
 38859  006B74                     __end_of_Mcu_Int1Isr:
 38860                           	opt stack 0
 38861                           tosu	equ	0xFFF
 38862                           tosh	equ	0xFFE
 38863                           tosl	equ	0xFFD
 38864                           pclatu	equ	0xFFB
 38865                           pclath	equ	0xFFA
 38866                           tblptru	equ	0xFF8
 38867                           tblptrh	equ	0xFF7
 38868                           tblptrl	equ	0xFF6
 38869                           tablat	equ	0xFF5
 38870                           prodh	equ	0xFF4
 38871                           prodl	equ	0xFF3
 38872                           intcon	equ	0xFF2
 38873                           intcon2	equ	0xFF1
 38874                           intcon3	equ	0xFF0
 38875                           indf0	equ	0xFEF
 38876                           postinc0	equ	0xFEE
 38877                           plusw0	equ	0xFEB
 38878                           fsr0h	equ	0xFEA
 38879                           fsr0l	equ	0xFE9
 38880                           wreg	equ	0xFE8
 38881                           indf1	equ	0xFE7
 38882                           postinc1	equ	0xFE6
 38883                           postdec1	equ	0xFE5
 38884                           plusw1	equ	0xFE3
 38885                           fsr1h	equ	0xFE2
 38886                           fsr1l	equ	0xFE1
 38887                           bsr	equ	0xFE0
 38888                           indf2	equ	0xFDF
 38889                           postinc2	equ	0xFDE
 38890                           postdec2	equ	0xFDD
 38891                           plusw2	equ	0xFDB
 38892                           fsr2h	equ	0xFDA
 38893                           fsr2l	equ	0xFD9
 38894                           status	equ	0xFD8
 38895                           
 38896 ;; *************** function _Mcu_Int0Isr *****************
 38897 ;; Defined at:
 38898 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38899 ;; Parameters:    Size  Location     Type
 38900 ;;		None
 38901 ;; Auto vars:     Size  Location     Type
 38902 ;;		None
 38903 ;; Return value:  Size  Location     Type
 38904 ;;                  1    wreg      void 
 38905 ;; Registers used:
 38906 ;;		wreg, status,2, status,0
 38907 ;; Tracked objects:
 38908 ;;		On entry : 0/0
 38909 ;;		On exit  : 0/0
 38910 ;;		Unchanged: 0/0
 38911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38916 ;;Total ram usage:        0 bytes
 38917 ;; Hardware stack levels used:    1
 38918 ;; This function calls:
 38919 ;;		Nothing
 38920 ;; This function is called by:
 38921 ;;		_HighPriorityIsr
 38922 ;; This function uses a non-reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text195
 38926  006B74                     __ptext195:
 38927                           	opt stack 0
 38928  006B74                     _Mcu_Int0Isr:
 38929                           	opt stack 10
 38930                           
 38931                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 38932                           
 38933                           ;incstack = 0
 38934  006B74  92F2               	bcf	intcon,1,c	;volatile
 38935  006B76  0012               	return	
 38936  006B78                     __end_of_Mcu_Int0Isr:
 38937                           	opt stack 0
 38938                           tosu	equ	0xFFF
 38939                           tosh	equ	0xFFE
 38940                           tosl	equ	0xFFD
 38941                           pclatu	equ	0xFFB
 38942                           pclath	equ	0xFFA
 38943                           tblptru	equ	0xFF8
 38944                           tblptrh	equ	0xFF7
 38945                           tblptrl	equ	0xFF6
 38946                           tablat	equ	0xFF5
 38947                           prodh	equ	0xFF4
 38948                           prodl	equ	0xFF3
 38949                           intcon	equ	0xFF2
 38950                           intcon2	equ	0xFF1
 38951                           intcon3	equ	0xFF0
 38952                           indf0	equ	0xFEF
 38953                           postinc0	equ	0xFEE
 38954                           plusw0	equ	0xFEB
 38955                           fsr0h	equ	0xFEA
 38956                           fsr0l	equ	0xFE9
 38957                           wreg	equ	0xFE8
 38958                           indf1	equ	0xFE7
 38959                           postinc1	equ	0xFE6
 38960                           postdec1	equ	0xFE5
 38961                           plusw1	equ	0xFE3
 38962                           fsr1h	equ	0xFE2
 38963                           fsr1l	equ	0xFE1
 38964                           bsr	equ	0xFE0
 38965                           indf2	equ	0xFDF
 38966                           postinc2	equ	0xFDE
 38967                           postdec2	equ	0xFDD
 38968                           plusw2	equ	0xFDB
 38969                           fsr2h	equ	0xFDA
 38970                           fsr2l	equ	0xFD9
 38971                           status	equ	0xFD8
 38972                           tosu	equ	0xFFF
 38973                           tosh	equ	0xFFE
 38974                           tosl	equ	0xFFD
 38975                           pclatu	equ	0xFFB
 38976                           pclath	equ	0xFFA
 38977                           tblptru	equ	0xFF8
 38978                           tblptrh	equ	0xFF7
 38979                           tblptrl	equ	0xFF6
 38980                           tablat	equ	0xFF5
 38981                           prodh	equ	0xFF4
 38982                           prodl	equ	0xFF3
 38983                           intcon	equ	0xFF2
 38984                           intcon2	equ	0xFF1
 38985                           intcon3	equ	0xFF0
 38986                           indf0	equ	0xFEF
 38987                           postinc0	equ	0xFEE
 38988                           plusw0	equ	0xFEB
 38989                           fsr0h	equ	0xFEA
 38990                           fsr0l	equ	0xFE9
 38991                           wreg	equ	0xFE8
 38992                           indf1	equ	0xFE7
 38993                           postinc1	equ	0xFE6
 38994                           postdec1	equ	0xFE5
 38995                           plusw1	equ	0xFE3
 38996                           fsr1h	equ	0xFE2
 38997                           fsr1l	equ	0xFE1
 38998                           bsr	equ	0xFE0
 38999                           indf2	equ	0xFDF
 39000                           postinc2	equ	0xFDE
 39001                           postdec2	equ	0xFDD
 39002                           plusw2	equ	0xFDB
 39003                           fsr2h	equ	0xFDA
 39004                           fsr2l	equ	0xFD9
 39005                           status	equ	0xFD8
 39006                           
 39007                           	psect	text196
 39008  000000                     __ptext196:
 39009                           	opt stack 0
 39010                           tosu	equ	0xFFF
 39011                           tosh	equ	0xFFE
 39012                           tosl	equ	0xFFD
 39013                           pclatu	equ	0xFFB
 39014                           pclath	equ	0xFFA
 39015                           tblptru	equ	0xFF8
 39016                           tblptrh	equ	0xFF7
 39017                           tblptrl	equ	0xFF6
 39018                           tablat	equ	0xFF5
 39019                           prodh	equ	0xFF4
 39020                           prodl	equ	0xFF3
 39021                           intcon	equ	0xFF2
 39022                           intcon2	equ	0xFF1
 39023                           intcon3	equ	0xFF0
 39024                           indf0	equ	0xFEF
 39025                           postinc0	equ	0xFEE
 39026                           plusw0	equ	0xFEB
 39027                           fsr0h	equ	0xFEA
 39028                           fsr0l	equ	0xFE9
 39029                           wreg	equ	0xFE8
 39030                           indf1	equ	0xFE7
 39031                           postinc1	equ	0xFE6
 39032                           postdec1	equ	0xFE5
 39033                           plusw1	equ	0xFE3
 39034                           fsr1h	equ	0xFE2
 39035                           fsr1l	equ	0xFE1
 39036                           bsr	equ	0xFE0
 39037                           indf2	equ	0xFDF
 39038                           postinc2	equ	0xFDE
 39039                           postdec2	equ	0xFDD
 39040                           plusw2	equ	0xFDB
 39041                           fsr2h	equ	0xFDA
 39042                           fsr2l	equ	0xFD9
 39043                           status	equ	0xFD8
 39044                           
 39045                           	psect	rparam
 39046  0000                     tosu	equ	0xFFF
 39047                           tosh	equ	0xFFE
 39048                           tosl	equ	0xFFD
 39049                           pclatu	equ	0xFFB
 39050                           pclath	equ	0xFFA
 39051                           tblptru	equ	0xFF8
 39052                           tblptrh	equ	0xFF7
 39053                           tblptrl	equ	0xFF6
 39054                           tablat	equ	0xFF5
 39055                           prodh	equ	0xFF4
 39056                           prodl	equ	0xFF3
 39057                           intcon	equ	0xFF2
 39058                           intcon2	equ	0xFF1
 39059                           intcon3	equ	0xFF0
 39060                           indf0	equ	0xFEF
 39061                           postinc0	equ	0xFEE
 39062                           plusw0	equ	0xFEB
 39063                           fsr0h	equ	0xFEA
 39064                           fsr0l	equ	0xFE9
 39065                           wreg	equ	0xFE8
 39066                           indf1	equ	0xFE7
 39067                           postinc1	equ	0xFE6
 39068                           postdec1	equ	0xFE5
 39069                           plusw1	equ	0xFE3
 39070                           fsr1h	equ	0xFE2
 39071                           fsr1l	equ	0xFE1
 39072                           bsr	equ	0xFE0
 39073                           indf2	equ	0xFDF
 39074                           postinc2	equ	0xFDE
 39075                           postdec2	equ	0xFDD
 39076                           plusw2	equ	0xFDB
 39077                           fsr2h	equ	0xFDA
 39078                           fsr2l	equ	0xFD9
 39079                           status	equ	0xFD8
 39080                           
 39081                           	psect	temp
 39082  000042                     btemp:
 39083                           	opt stack 0
 39084  000042                     	ds	1
 39085  0000                     int$flags	set	btemp
 39086  0000                     wtemp6	set	btemp+1
 39087                           tosu	equ	0xFFF
 39088                           tosh	equ	0xFFE
 39089                           tosl	equ	0xFFD
 39090                           pclatu	equ	0xFFB
 39091                           pclath	equ	0xFFA
 39092                           tblptru	equ	0xFF8
 39093                           tblptrh	equ	0xFF7
 39094                           tblptrl	equ	0xFF6
 39095                           tablat	equ	0xFF5
 39096                           prodh	equ	0xFF4
 39097                           prodl	equ	0xFF3
 39098                           intcon	equ	0xFF2
 39099                           intcon2	equ	0xFF1
 39100                           intcon3	equ	0xFF0
 39101                           indf0	equ	0xFEF
 39102                           postinc0	equ	0xFEE
 39103                           plusw0	equ	0xFEB
 39104                           fsr0h	equ	0xFEA
 39105                           fsr0l	equ	0xFE9
 39106                           wreg	equ	0xFE8
 39107                           indf1	equ	0xFE7
 39108                           postinc1	equ	0xFE6
 39109                           postdec1	equ	0xFE5
 39110                           plusw1	equ	0xFE3
 39111                           fsr1h	equ	0xFE2
 39112                           fsr1l	equ	0xFE1
 39113                           bsr	equ	0xFE0
 39114                           indf2	equ	0xFDF
 39115                           postinc2	equ	0xFDE
 39116                           postdec2	equ	0xFDD
 39117                           plusw2	equ	0xFDB
 39118                           fsr2h	equ	0xFDA
 39119                           fsr2l	equ	0xFD9
 39120                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2375
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     256
    BANK4           192      5     188
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerCmdFsm->_triggerRelay
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1128251
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1123620
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  561903
                                              0 BANK4      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  561717
                                              0 BANK4      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  295933
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        4     2      2    4378
                                             41 BANK0      4     2      2
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         4     4      0    4141
                                             37 BANK0      4     4      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   84592
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17638
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           21    17      4   69077
                                              5 BANK1     21    17      4
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            8     4      4   95067
                                              5 BANK1      8     4      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29246
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29013
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      5      BC      14       97.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     99E       8        0.0%
DATA                 0      0     CBE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 13:19:20 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5A54  
                 delCmdFsm@masterOpResult 0117                                _USB_SD_Ptr FC1C  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 68A4  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 258A                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 21FA  
                                     l203 2202                                       l205 224A  
                                     l206 2270                                       l208 2278  
                                     l160 1FDE                                       l209 2298  
                                     l161 1EB4                                       l162 201C  
                                     l170 1F7C                                       l171 1F92  
                                     l163 1EC0                                       l315 4816  
                                     l323 47E2                                       l164 1F00  
                                     l316 478C                                       l420 4E58  
                                     l500 4C72                                       l173 1F96  
                                     l325 47FC                                       l421 4E78  
                                     l237 68B0                                       l174 1F9E  
                                     l166 1F0E                                       l318 4796  
                                     l422 4E84               __end_of_USBStdGetDscHandler 2D02  
                                     l510 4C44                                       l502 4C04  
                                     l175 1FAA                                       l167 1F36  
                                     l319 47BC                                       l423 4E90  
                                     l511 4C34                                       l503 4BF4  
                                     l192 22A2                                       l176 1FC0  
                                     l416 4EA4                                       l424 4E9C  
                                     l512 4C58                                       l504 4C1A  
                                     l520 5F5E                                       l193 2182  
                                     l169 1F48                                       l417 4E4A  
                                     l441 17EC                                       l513 4C38  
                                     l505 4BF8                                       l521 5F2A  
                                     l194 22DA                                       l418 4ED2  
                                     l442 15F4                                       l514 4C3E  
                                     l506 4BFE                                       l530 31D2  
                                     l195 218E                                       l179 1FCC  
                                     l419 4E52                                       l523 5F44  
                                     l531 3238                                       l196 21CE  
                                     l700 617C                                       l444 163C  
                                     l532 31FE                                       l445 1684  
                                     l541 684E                                       l198 21DC  
                                     l446 16CC                                       l199 21F0  
                                     l631 2A18                                       l447 1714  
                                     l448 175C                                       l528 323E  
                                     l633 2A90                                       l625 29A4  
                                     l449 17A4                                       l529 322A  
                                     l538 6852                                       l546 3E70  
                                     l651 5EAE                                       l707 62A0  
                                     l627 29C8                                       l715 6214  
                                     l539 684A                                       l547 3E8C  
                                     l660 5ED2                                       l652 5EA8  
                                     l716 61EA                                       l709 62BA  
                                     l629 29F0                                       l718 6202  
                                     l639 6896                                       l832 6612  
                                     l844 3F44                                       l668 0C44  
                                     _BDT 000400                                       l790 68CC  
                                     l855 5312                                       l775 2F44  
                                     l864 506A                                       l856 52B8  
                                     l857 532C                                       l698 6160  
                                     l858 52E8                                       l867 507C  
                                     l982 215A                                       l983 2022  
                                     l985 2048                                       l987 2064  
                                     l988 209A                                       l989 210E  
                                     l998 2134                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4638  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 649A                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 61DE  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2020  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5F72           InitGprsNetwork@GprsNetInitState 01E8  
                                    l1100 1B1A                                      l1101 1B66  
                                    l1013 5F8C                                      l1110 5DB2  
                             RiSm@Counter 02E0                                      l1031 3886  
                                    l1111 5DC6                                      l1032 38C0  
                                    l2000 5842                                      l1033 38E6  
                                    l1009 5FA8                                      l1121 5E1E  
                                    l1027 3920                                      l1035 3906  
                                    l1107 5DD8                                      l2100 2812  
                                    l1220 0DD0                                      l1028 3874  
                                    l1052 1E86                                      l1060 1E58  
                                    l1108 5D9C                                      l2101 2706  
                                    l1053 1DA0                                      l2102 278A  
                                    l1222 10B0                                      l1230 0FB8  
                                    l1070 2BB6                                      l2006 5836  
                                    l2111 32FE                                      l1231 0FBC  
                                    l1223 0DE8                                      l1071 2AAE  
                                    l1055 1EA0                                      l2112 3246  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD2                                      l1152 674E  
                                    l1136 672A                                      l2008 583C  
                                    l2113 331A                                      l2121 48AC  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 569A                                      l2114 3264  
                                    l2122 483E                                      l1226 0E5E  
                                    l1074 2ACA                                      l1058 1E22  
                                    l2123 48D4                                      l1219 1078  
                                    l1075 2AE2                                      l1091 1B80  
                                    l2116 32D4                                      l2124 484E  
                                    l1252 0A54                                      l1260 073E  
                                    l1236 1010                                      l1228 0F3E  
                                    l1092 19FE                                      l1412 6292  
                                    l1156 6424                                      l1404 5B44  
                                    l2220 5108                                      l2125 4860  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5ACC                                      l2037 5BEE  
                                    l3101 51BC                                      l1405 5B04  
                                    l2221 508E                                      l2142 65A6  
                                    l2126 487A                                      l1078 2B54  
                                    l2046 5AFE                                      l1422 683A  
                                    l3110 5222                                      l3102 51CC  
                                    l2134 3C70                                      l2143 6594  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1A1A                                      l2151 5C3A  
                                    l2039 5BFA                                      l1407 5B3E  
                                    l2135 3BB8                                      l2223 50F4  
                                    l2128 4888                                      l1280 09C4  
                                    l1272 092A                                      l1264 082C  
                                    l1256 060C                                      l1096 1AD0  
                                    l2152 5C04                                      l1440 39FE  
                                    l3104 51EA                                      l2145 659A  
                                    l2129 4896                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l1417 61D8                                      l1441 3948  
                                    l3105 51E2                                      l3121 5382  
                                    l2137 3BC6                                      l2146 65A0  
                                    l1266 0890                                      l1258 0680  
                                    l2250 5D10                                      l2154 5C16  
                                    l1442 3A14                                      l3122 538C  
                                    l3114 5348                                      l2410 01E2  
                                    l1267 08CA                                      l1259 06BA  
                                    l2251 5D36                                      l2155 5C28  
                                    l1443 3966                                      l3123 539A  
                                    l3115 5354                                      l1291 6038  
                                    l1268 090E                                      l3108 520A  
                                    l2412 01AE                                      l1700 36EC  
                                    l1604 25D4                                      l1620 1BF2  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 39C4                                      l3109 5214  
                                    l3117 536A                                      l2405 05D2  
                                    l2413 019C                                      l1621 1C02  
                                    l1382 4110                                      l2262 6458  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 39D8                                      l3118 5362  
                                    l2406 00E2                                      l1702 3750  
                                    l1606 25FC                                      l1630 1C9E  
                                    l1622 1C0A                                      l2510 6788  
                                    l1294 6006                                      l1391 40DA  
                                    l1383 4072                                      l3303 525C  
                                    l2263 6444                                      l2423 0392  
                                    l1703 3716                                      l1631 1CAA  
                                    l1623 1C20                                      l1615 1BD6  
                                    l2511 677A                                      l1384 4094  
                                    l3304 5250                                      l2256 5826  
                                    l1448 39F6                                      l2424 0326  
                                    l1608 2638                                      l1640 1D26  
                                    l1624 1C2C                                      l1616 1BCC  
                                    l2600 3364                                      l1393 40F6  
                                    l2257 57E6                                      l2249 5D3A  
                                    l2441 041E                                      l2425 02B4  
                                    l2409 0152                                      l1713 2D5E  
                                    l1633 1CBE                                      l1617 1BCA  
                                    l2513 6782                                      l1394 4102  
                                    l1386 40B6                                      l2098 27FC  
                                    l3082 37A2                                      l1650 423A  
                                    l2450 0524                                      l2426 0250  
                                    l2418 01D0                                      l1706 3792  
                                    l1714 2D38                                      l1626 1C54  
                                    l2602 3386                                      l3307 5290  
                                    l2099 26DE                                      l3091 3868  
                                    l3083 379C                                      l2451 0570  
                                    l2443 045E                                      l2435 0402  
                                    l1707 3758                                      l1643 60A2  
                                    l1811 35F8                                      l3308 529E  
                                    l2700 46F8                                      l1652 4296  
                                    l2444 0578                                      l2436 03D2  
                                    l2428 0304                                      l1716 2DD6  
                                    l1644 60B2                                      l1740 2CDA  
                                    l1812 35FE                                      l1636 1CE4  
                                    l1628 1C68                                      l2604 33A8  
              USBConfigureEndpoint@handle 0083                                      l1389 40BE  
                                    l3085 37E4                                      l2429 02C6  
                                    l1717 2DBC                                      l1733 2CEA  
                                    l1725 3460                                      l1813 3604  
                                    l1629 1C74                                      l2702 4714  
                                    l2446 04B4                                      l2470 10FA  
                                    l1902 4568                                      l1830 143E  
                                    l1742 2CE2                                      l1734 2BE6  
                                    l1750 44C6                                      l1814 3618  
                                    l1638 1D08                                      l2606 33C4  
                                    l2703 473C                                      l3263 681A  
                                    l2447 0478                                      l1903 4502  
                                    l1831 1440                                      l1751 4448  
                                    l1727 34D4                                      l1815 361E  
                                    l3360 5C92                                      l3088 3834  
                                    l1648 4210                                      l3512 5900  
                                    l1840 153E                                      l1832 145C  
                                    l1736 2BFA                                      l1752 444E  
                                    l1808 367E                                      l1760 608A  
                                    l3361 5C9C                                      l3089 37F6  
                                    l3273 4640                                      l3521 64E0  
                                    l3513 58FA                                      l2465 131E  
                                    l2481 128E                                      l1905 451A  
                                    l1841 15BA                                      l1825 137E  
                                    l1737 2C82                                      l1753 446E  
                                    l1817 3624                                      l1809 35EE  
                                    l1673 4A6C                                      l1761 6088  
                                    l2570 2FEC                                      l2706 4740  
                                    l3370 6146                                      l3522 64D6  
                                    l2466 10B8                                      l1906 4528  
                                    l1834 14EA                                      l1826 1384  
                                    l1746 44B0                                      l1818 3642  
                                    l2490 6958                                      l2571 2FE8  
                                    l2731 493C                                      l2707 474C  
                                    l3371 6150                                      l3275 467C  
                                    l3515 591A                                      l2483 12F8  
                                    l2475 110E                                      l1667 3CCA  
                                    l1907 4546                                      l1739 2C8A  
                                    l1747 4436                                      l1819 365E  
                                    l1675 4A86                                      l3356 5C72  
                                    l2820 3AE4                                      l2660 4F12  
                                    l1924 4D14                                      l3276 46BE  
                                    l3516 5910                                      l2468 10DE  
                                    l1908 455E                                      l1844 1570  
                                    l1836 14B2                                      l1828 13F6  
                                    l1684 30D6                                      l3380 5FF0  
                                    l3357 5C6A                                      l2821 3A4A  
                                    l2733 4968                                      l2653 4F4A  
                                    l2661 4F26                                      l3269 60F8  
                                    l2485 1318                                      l2477 112E  
                                    l1837 14D0                                      l1685 307E  
                                    l3381 5FCE                                      l2493 6952  
                                    l2750 57CA                                      l2574 3028  
                                    l2670 4F7C                                      l2734 4978  
                                    l2662 4F3E                                      l2654 4EE0  
                                    l3366 612E                                      l2910 3B14  
                                    l1846 15C6                                      l1774 4E32  
                                    l2815 3ACA                                      l1927 4CC2  
                                    l3367 6126                                      l3543 185C  
                                    l3527 622E                                      l2479 114E  
                                    l1679 4BBC                                      l1839 1532  
                                    l1775 4E2C                                      l2591 3400  
                                    l2760 4416                                      l2816 3A2C  
                                    l2584 4B1A                                      l2672 4FC2  
                                    l1928 4CEE                                      l3624 6692  
                                    l3560 1980                                      l3640 69B2  
                                    l2912 3B5C                                      l3528 6228  
                                    l1960 2892                                      l1952 283A  
                                    l1768 637E                                      l2592 332E  
                                    l2761 4392                                      l2833 3AC0  
                                    l2817 3A46                                      l2585 4B50  
                                    l2681 687E                                      l1929 4CC8  
                                    l3553 18D8                                      l3545 1874  
                                    l2913 3B3E                                      l2905 3AF4  
                                    l1793 4166                                      l1785 56B0  
                                    l1689 3100                                      l1769 637C  
                                    l2930 59B6                                      l2762 43B2  
                                    l2578 3052                                      l2674 4FF8  
                                    l3562 19A6                                      l3554 18E8  
                                    l3386 654A                                      l2906 3B0E  
                                    l1970 2946                                      l1962 28EA  
                                    l1954 2848                                      l1698 36E2  
                                    l1794 416C                                      l2931 59CA  
                                    l2747 5792                                      l2827 3A72  
                                    l2675 4FCA                                      l2659 4F66  
                                    l3619 6584                                      l3563 19E0  
                                    l3547 18C8                                      l3387 6538  
                                    l2907 3B70                                      l1971 294A  
                                    l1963 28B2                                      l1795 41E8  
                                    l1787 56FE                                      l2595 33D6  
                                    l2828 3AAA                                      l2860 42FE  
                                    l2676 4FD6                                      l3556 1902  
                                    l3636 6346                                      l2916 3B90  
                                    l1956 287C                                      l1796 41AE  
                                    l2596 3348                                      l2749 57C4  
                                    l2765 4424                                      l2861 433A  
                                    l2669 4FE4                                      l2685 5E76  
                                    l3629 67D6                                      l3581 350E  
                                    l2766 43C2                                      l2758 4386  
                                    l2854 4358                                      l3590 3576  
                                    l3582 3508                                      l1966 292C  
                                    l1798 41CE                                      l2791 4DAA  
                                    l2855 42E0                                      l2687 5E82  
                                    l3567 69CA                                      l3559 1914  
                                    l1967 28F4                                      l1959 288E  
                                    l2599 335A                                      l2792 4D6A  
                                    l2784 4D30                                      l2776 54EE  
                                    l2768 440E                                      l2856 42FA  
              __size_of_Mdm_IsSmsReceived 0024                                      l2696 4764  
                                    l3584 3536                                      l1992 66FA  
                              _Led1OutSts 01F9                                      l2793 4D88  
                                    l2697 46EA                                      l2881 63E0  
                                    l3593 35D4                                      l1993 66EA  
                                    l2786 4D9C                                      l2866 434E  
                                    l2787 4D3C                                      l2859 436C  
                                    l2699 4784                                      l3587 3596  
                                    l1995 66F0                                      l2788 4D5C  
                                    l2892 5632                                      l3588 354E  
                                    l2893 55F6                                      l3589 3566  
                                    l2894 5600                                      l2887 5616  
                                    l2895 5608                                      l2888 55D8  
                                    l2889 55E4                                      STR_1 FFE6  
                                    STR_2 FF75                                      STR_3 FFDF  
                                    STR_4 FFC2                                      STR_5 FFCE  
                                    STR_6 FFF0                                      STR_7 FFEB  
                                    STR_8 FE89                                      STR_9 FEBD  
                              _Led2OutSts 01F7                                _Led3OutSts 01F5  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    u9155 5F34                                      u9156 5F36  
                                    _UEP0 000F26                                      u9165 5F40  
                                    _UEP1 000F27                                      u9166 5F42  
                                    u9175 5F4E                                      u9176 5F50  
                                    u9185 5F5A                                      u9186 5F5C  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F4                            ?_StopCondition 0001  
                            _triggerRelay 63C4                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 0314                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6B48                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 00E1  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 379A  
                                    _main 6AF4                           ??_Mdm_IsRinging 0081  
                                    _itoa 60D2                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 6430                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 030C  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4638                                      _xtoi 34F8  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6B50  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4E44  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 621E                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 5BFE   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 69E6  
                           _isNumberValid 576C                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 36C2                           _Rtcm_SystemDate 0459  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6A88  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 3EE0  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091              isNumberInMemory@currentState 00C5  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 5AAC  
                Eeprom_Write@SlaveAddress 0094                     addCmdFsm@currentState 01D5  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 629A                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DB  
                                   l13013 36EC                                     l12245 68B0  
                                   l14031 3830                                     l14207 4978  
                                   l13185 3458                                     l14169 578A  
                                   l14463 4E5E                                     l15505 1E52  
                                   l15357 323E                                     l12975 6538  
                                   l13849 5FCE                                     l14649 25CC  
                                   l15483 1D98                                     l14589 6478  
                                   l14677 2630                                     l15841 09A4  
                                   l16609 2E30                                     l15675 0FB0  
                                   l16597 5420                                     l16927 585C  
                                   l16929 588C                                     l15993 1CB6  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 522C  
                                   STR_10 FF4B                                     STR_11 FF59  
                                   STR_12 FF9D                                     STR_20 FF3D  
                                   STR_13 FF67                                     STR_21 FE5F  
                                   STR_30 FEFA                                     STR_14 FEA8  
                                   STR_31 FFAA                                     STR_15 FEE6  
                                   STR_23 FED2                                     STR_24 FFF5  
                                   STR_32 FFD8                                     STR_16 FF1E  
                                   STR_25 FFF5                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 53A4                                     STR_29 FF2F  
                           _triggerCmdFsm 55CC         __size_of_USBCtrlEPServiceComplete 00FE  
                         __end_of___lldiv 52B0                                     ?_utoa 008A  
                                   u12210 62C8                                     u12140 5C76  
                         ___awdiv@divisor 007F                                     u12230 581E  
                                   u11510 5EA4                                     u13120 1864  
                                   u12170 6132                                     u12090 1554  
                  __end_of_USBDeviceTasks 1D30                                     u12237 5814  
                                   u10805 666C                                     u13310 57CE  
                                   u13150 189E                                     u11630 373E  
                                   u10806 666E                                     ?_xtoi 0083  
                                   u12520 668E                                     u11800 348C  
                                   u15010 1EA6                                     u13170 18AE  
                                   u12610 632A                                     u11650 3780  
                                   u12540 6574                                     u11637 3734  
                                   u11670 618A                                     u12710 29EC  
                                   u12630 6336                                     u12480 5260  
                                   u11840 2C4C                                     u11657 3776  
                                   u10785 6654                                     u13450 536E  
                                   u14410 3BA8                                     u11850 2C7C  
                                   u10786 6656                                     u10795 6660  
                                   u16100 3ABA                                     u12900 4C9E  
                                   u10796 6662                                     u13605 6A0C  
                                   u16110 42C2                                     u14430 2FE4  
                                   u13606 6A0E                                     u13390 51EE  
                                   u14350 5942                                     u11870 2CCE  
                                   u12655 6A4C                                     u11847 2C42  
                                   u12656 6A4E                                     u13800 2694  
                                   u13625 0AF4                                     u11857 2C72  
                                   u12770 5D46                                     u14290 04BE  
               ?_USBCtrlEPServiceComplete 0001                                     u13635 0B14  
                                   u13485 5EF8                                     u13645 0B9E  
                                   u14357 5938                                     u11877 2CC4  
                                   u16311 50E6                                     u16160 434A  
                                   u14480 4EF0                                     u13665 0C78  
                                   u16321 50FE                                     u16170 55E0  
                                   u13770 25F0                                     u13675 0C98  
                                   u14725 5408                                     u13685 0D22  
                                   u14735 6A60                                     u14760 47F4  
                                   u14840 20C2                                     u15800 291C  
                                   u14736 6A62                                     u14921 1D4A  
                                   u14770 480E                                     u15810 2934  
                                   u14931 1D5C                                     u14860 20D6  
                                   u14941 1D6E                                     u16438 2EF8  
                                   u15807 2912                                     u16439 2F26  
                                   u15690 1D2C                                     u14795 69F6  
                                   u14796 69FA                                     u15780 28DA  
                                   u16398 5452                                     u15871 5762  
                                   u16399 5480                           __end_of___lwdiv 5CA6  
                                   u15787 28D0                           __end_of___lwmod 615A  
               TurnOnModem@TurnOnMdmState 01F2                        ??_UpdateOsCounters 0019  
                                   i1l742 244C                                     i1l747 2588  
                                   i2l680 3E08                                     i2l681 3D58  
                                   i2l690 3DA2                                     i2l682 3D66  
                                   i2l686 3D88                                     i2l688 3DFA  
                                   i2l689 3DC2                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B8  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E4  
                                   _USTAT 000F64                   __end_of_LedStateMachine 48DA  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4ABA                             _StringCompare 5CF8  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3C82  
                             _ApnLenLocal 01EC                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 478A  
                         __end_of_isalpha 658E                           __end_of_isdigit 6822  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 6430                           __end_of_isspace 669A  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 67DE                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 66E8  
                    triggerRelay@txBuffer 0087                 __end_of_Rtcc_GetRtccValue 4ED8  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5560                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5B02  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3BB6  
                         __end_of_tolower 69B6                       __end_of_Mcu_Int0Isr 6B78  
                     __end_of_Mcu_Int1Isr 6B74                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 69CE  
                    __end_of_Eeprom_Reset 5B02                    __end_of_GetElapsedTime 3FA8  
                   __end_of_UartSetConfig 59A4                      __end_of_Eeprom_Write 5CF8  
                        delCmdFsm@smsText 0107                    __size_of_initGprsModem 0094  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 696A  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BD4  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 6646                            _InitSchedTimer 65BE  
                         __initialization 22DE               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 4832                      __end_of_I2c_ReadData 22DE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 4134  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 332C  
                            __end_of_atoi 3872                              __end_of_main 6B00  
                     StringCompare@Result 0085                              __end_of_itoa 6116  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DC  
                            __end_of_utoa 46E2                              __end_of_xtoi 35DE  
                __end_of_Rtcm_SetRtccDate 5BAA                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 6B34  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D4  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                            ?_triggerCmdFsm 0089  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4C84                             ?_initPreamble 007D  
                              _ReceiveEvt 65EC          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6AA8  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 52B0  
                            _cdc_mem_type 01DD                        ??_Mcu_ConfigExtInt 007D  
                        addCmdFsm@smsText 0107                         CheckModem@Timeout 03F5  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3E18                _Uart_MdmGsmGprsReadService 3D4E  
              __end_of_UsbDevice_MainTask 670C                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 6884                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 68A4                     addCmdFsm@searchNumber 010C  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5BAA  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 63BE                               _GenerateEvt 69CE  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0086  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 55CC  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 65EC  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6B68                                _UartConfig 031C  
                    __end_of_Mdm_MainTask 5DEA                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 604A                                    _SmsLen 00D3  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5F24  
                                  ___lmul 59A4                      _I2cSlv_ReceiveI2cMsg 619E  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 669A                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5DEA                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5BFE                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4D1A                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                 isMasterNumber@phoneNumber 0100  
                       _USBEnableEndpoint 608E           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                     addCmdFsm@isComplete 0109                                    _memcpy 5FBC  
                  __size_of_HttpGetMethod 04D0                                    _memset 652E  
                                  clear_0 2396                                    clear_1 23A8  
                                  clear_2 23B4                                    clear_3 23C0  
                                  clear_4 23CC                                    clear_5 23D8  
                                  clear_6 23E4                         parseCommand@F9030 FC22  
                                  clear_7 23F0                                    clear_8 23FC  
                                  clear_9 2408                         parseCommand@F9026 FC2A  
                       parseCommand@F9028 FC26                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E4                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01E9                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01EF  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 58F0                                    _strcpy 64CC  
                                  _strlen 621E                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 6350                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4ED8  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03CE  
                     ModemEvtParser@F9112 03C9                       ModemEvtParser@F9114 03C4  
                     ModemEvtParser@F9116 04ED                              _CDCTxService 2824  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 033E                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6B60  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5B56                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6B74  
                             _Mcu_Int1Isr 6B70                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00D0                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0122                   delCmdFsm@receivedNumber 0105  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 6A28                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 511A                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0001                        _ExtInt1IsrCallback 02E2  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2426                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 6B6C  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FB  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5ED6                          ??_isMasterNumber 00B0  
         I2cSlv_QueryI2cData@TimeoutTimer 034B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 57D2  
                          __pcstackBANK10 0A00                        __size_of_delCmdFsm 00BC  
                   I2cDummyTx@DummyBuffer 01FC                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D6  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DE  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 60D2                               _InitNetwork 00D9  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5F                             __end_of_sd001 FE32  
                           __end_of_sd002 FE14                              __pidataBANK0 6B78  
                            __pidataBANK1 6B7A                              __pidataBANK2 6AE6  
                            __pidataBANK3 62D8                              __pidataBANK4 6B0C  
                            __pidataBANK5 5D4A                 __end_ofparseCommand@F9030 FC26  
               __end_ofparseCommand@F9026 FC2E                 __end_ofparseCommand@F9028 FC2A  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 615A                       __size_of_CheckModem 0160  
                         ??_triggerCmdFsm 008B                __end_of_Uart_ClearRxBuffer 649A  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008C  
                 addCmdFsm@numberInMemory 010B                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 6936               __end_of_USBCtrlTrfInHandler 41F6  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 00BA                       __end_of_Term_MainSm 135A  
               initGprsModem@currentState 01D8                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6A12                        __size_of_detectCmd 009C  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E3                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 64FE  
                              _cdc_notice 044F                     __end_of_Tmr_TmrBPrSet 3244  
                   __end_of_waitSetupCall 5E88                       __end_of_Rtcc_RtcIsr 6B70  
                              _cdc_rx_len 00C9                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C7                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 63C4                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01DE                            ClearBuffer@Len 007F  
                         _secondsAppTimer 48DA          __end_of_GetLastInteractionNumber 6B0C  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 6646  
                  _USBStdGetStatusHandler 442A                         __end_of_SendSmsSm 1BAA  
                   __size_of_Eeprom_Reset 0056       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EB                            _Rtcc_RtcConfig 497C  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6A3E               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 62D8                   addCmdFsm@masterOpResult 010A  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 6778  
                             _SetBaudRate 5ED6                             ?_savePreamble 0001  
                   __end_of_findEmptySpot 4DB0                 initGprsModem@modemCounter 03C0  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01ED  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3156                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6B34                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
               findEmptySpot@currentState 00C4                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3BB6                            _Rtcc_UnlockRtc 6A88  
                            _I2cBusStatus 01E5                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E26  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2020  
                       __end_of_addCmdFsm 3AE8                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4DB0  
                   __end_of_UpdateSchFlag 691A                              _EepromBuffer 04BB  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2E26  
                       __end_of_WriteByte 6B2A                        _USBCheckStdRequest 35DE  
                       _configDescriptor1 FDAB                              _Eeprom_Reset 5AAC  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A7  
                            _Eeprom_Write 5CA6                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 379A                         triggerRelay@F9012 03D2  
                     _USBStdSetCfgHandler 3412                         __end_of_delCmdFsm 4370  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E2  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 661A                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4A1C  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2180  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4070                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DA            __end_of_Pm_DsReleasePinControl 6B56  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E6                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F3                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FA                       _I2cSlv_QueryI2cData 3946  
                                 _Led2Sts 01F8                                   _Led3Sts 01F6  
              __end_of_Sch_SchmIntService 6AE6                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C8  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6B5C  
                    __end_of_initPreamble 68FE                    initEeprom@currentState 01D7  
                       __end_of_detectCmd 4B56                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 6754  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 54F4                    __end_of_Rtcc_UnlockRtc 6A98  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6A52                                _initEeprom 4F6C  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 68C2                    ?_Uart_WriteConstString 0080  
                              _readBuffer 0331                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 69FC  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 51A6  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 5332  
                                 ___lldiv 522C                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                   triggerCmdFsm@isComplete 008B  
                                 ___lwdiv 5C52                         ??_USBStallHandler 007D  
                                 ___lwmod 6116                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 6864                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6B6C  
                    __size_of_putUSBUSART 0022                                   __pcinit 22DE  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 5FBC  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 0356                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B4  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6AF4  
                                 __ptext1 64FE                                   __ptext2 6B16  
                                 __ptext3 6B50                                   __ptext4 68A4  
                                 __ptext5 6936                                   __ptext6 6646  
                                 __ptext7 65BE                                   __ptext8 3E18  
                                 __ptext9 3156                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 497C                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 46E2  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 655E                                   _isdigit 6800  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2414                                   clear_11 2420  
                        ___awmod@dividend 007D                         ??_InitializeTasks 04F7  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02EA  
     __end_of_Tmr_RegisterTmr2IsrCallback 6B20               _Tmr_RegisterTmr2IsrCallback 6B16  
                                 _isspace 6670                              _Mdm_MainTask 5D9A  
                                 _isupper 67BC               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                                 _smsText 0493                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2434  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 6754  
                                 _sprintf 3AE8                                   _tolower 699E  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6AC8  
                        _HttpGetDataLocal 03A7                  __end_of_Mdm_SetSmsFormat 5E3A  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 458C  
                                 _toupper 69B6           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2426  
                            _getsUSBUSART 4C84                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC22  
     Irq_InitIntController@PerInt_LowPInt 007E                 triggerCmdFsm@currentState 01D3  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC0E                            _ModemEvtParser 1D30  
                                 int_func 458C                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 037B                                 i1u1622_20 244A  
                _GetLastInteractionNumber 6B00                                 i1u1626_28 256A  
                               i1u1626_29 257E                                 i1u1647_28 6764  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 699E                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 68E0                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 69E6                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 64CC                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4A1C                        _UsbDevice_MainTask 66E8  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6B5C  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3058  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E6  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2180  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 4370  
                    __end_of_parseCommand 3058                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 679A                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6A64                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6844                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 0087                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01EA  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01DF  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EB2                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 6B64                  __size_of_HighPriorityIsr 4630  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0372                                 _Led2Blink 0369  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0360  
            __end_of_USBTransferOnePacket 42B4                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0396                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 69FC                                 _Led2Pulse 0390  
                               _Led3Pulse 038A                         _I2cSlv_SendI2cMsg 625C  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 04F7                            _Tmr_TmrBConfig 3E18  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 6A64  
                       _OsAlrm_SetOsAlarm 3FA8                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5F24                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5F70  
                               _ClipEvent 00DD                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 0096  
                               _GetMethod 00D8                    _USBCtrlTrfSetupHandler 511A  
                      ?_OsAlrm_SetOsAlarm 0083                  Eeprom_Reset@SlaveAddress 0085  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 26DC  
   __end_of_USBIncrement1msInternalTimers 67BC    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 679A               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 59FC                            _CheckAckStatus 6B3E  
                          __end_of___wmul 66C2                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 6A76               triggerCmdFsm@numberInMemory 008C  
                  __size_of_UartWriteByte 0020                   addCmdFsm@receivedNumber 0105  
                          __end_of_memcpy 6004                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 655E  
                      _UartTxBufferStatus 5E88                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6984                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E0  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6AD8  
                               _MdmStatus 00D1                            __end_of_strcat 594C  
                          __end_of_strcpy 64FE                            __end_of_strlen 625C  
                          __end_of_strtol 19F2                       start_initialization 22DE  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3872  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 6466  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4BEE                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 3412                          _UpdateOsCounters 6AB8  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3D4E                 __end_of_I2cSlv_SendI2cMsg 629A  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4E44                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6AA8  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3EE0                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 4070                    __end_of_Tmr_TmrBIrqSet 5F70  
                               _TaskTable 05A4                                 _RingEvent 00DE  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                     __end_of_isNumberValid 57D2  
            isMasterNumber@memoryOpResult 0102                         __size_of_ReadByte 000A  
                               _RtcConfig 03BC                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 594C  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 661A  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 6950  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6B48  
                                ??___lmul 0085                             _isxdigit$6701 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BD4                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5332                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E1                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03C4  
                             __pdataBANK4 04ED                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 5638  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 3A18                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5C52                    __end_of_ConfigureModem 3946  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D6  
          __end_of_USBStdGetStatusHandler 44DC                              _initPreamble 68E0  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5D4A                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04F7                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 6A3E                              _isalpha$6691 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6B20  
                     __size_of_initEeprom 0090                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6425 007E             UpdateSchFlag@InterruptCounter 02DC  
                          ??_triggerRelay 0085                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 61DE                                 _delCmdFsm 42B4  
     InitGprsNetwork@GprsNetInitNextState 002A                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6884                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 638A              __end_of_LedBlinkStateMachine 2824  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 604A                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6936  
              __end_of_USBCheckCDCRequest 458C              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5A54                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6864                              ??_StringCopy 008B  
                        _Led_SetLedStatus 658E                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6822  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4ABA                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 4F6C  
                               __ptext101 4ABA                                 __ptext110 42B4  
                               __ptext102 2F48                                 __ptext111 3A18  
                               __ptext103 6AA8                                 __ptext120 52B0  
                               __ptext112 6984                                 __ptext104 670C  
                               __ptext121 619E                                 __ptext113 5CA6  
                               __ptext105 6730                                 __ptext130 1D30  
                               __ptext122 6822                                 __ptext114 4370  
                               __ptext106 6A64                             Terminal@Index 00A6  
                               __ptext131 6466                                 __ptext123 5BFE  
                               __ptext115 5486                                 __ptext107 5638  
                               __ptext140 478A                                 __ptext132 5CF8  
                               __ptext124 5AAC                                 __ptext116 4D1A  
                               __ptext108 6B00                                 __ptext141 6B48  
                               __ptext133 2AA2                                 __ptext125 625C  
                               __ptext117 576C                                 __ptext109 63FA  
                               __ptext150 4FFC                                 __ptext142 0DC8  
                               __ptext134 3872                                 __ptext126 594C  
                               __ptext118 5BAA                                 __ptext151 3EE0  
                               __ptext143 05EC                                 __ptext135 0ABC  
                               __ptext127 5F70                                 __ptext119 3946  
                               __ptext160 669A                                 __ptext152 6A76  
                               __ptext144 629A                                 __ptext136 296A  
                               __ptext128 19F2                                 __ptext161 53A4  
                               __ptext153 6430                                 __ptext145 615A  
                               __ptext137 59A4                                 __ptext129 61DE  
                               __ptext170 6B60                                 __ptext162 5ED6  
                               __ptext154 4832                                 __ptext146 6884  
                               __ptext138 59FC                                 __ptext171 6B64  
                               __ptext163 522C                                 __ptext155 3244  
                               __ptext147 5E88                                 __ptext139 2020  
                               __ptext180 6AD8                                 __ptext172 6A3E  
                               __ptext164 661A                                 __ptext156 658E  
                               __ptext148 57D2                                 __ptext181 68FE  
                               __ptext173 6B2A                                 __ptext165 4070  
                               __ptext157 26DC                                 __ptext149 5892  
                               __ptext190 6AC8                                 __ptext182 6AB8  
                               __ptext174 69CE                                 __ptext166 65EC  
                               __ptext158 5C52                                 __ptext191 3D4E  
                               __ptext183 2434                                 __ptext175 6B68  
                               __ptext167 1EB2                                 __ptext159 3FA8  
                               __ptext192 6A28                                 __ptext184 66C2  
                               __ptext176 6B34                                 __ptext168 2180  
                               __ptext193 6B6C                                 __ptext185 5A54  
                               __ptext177 6B3E                                 __ptext169 6B20  
                               __ptext194 6B70                                 __ptext186 691A  
                               __ptext195 6B74                                 __ptext187 638A  
                               __ptext179 6754                                  ?___awmod 007D  
                      _Sch_SchmIntService 6AD8                                 __ptext196 0000  
                               __ptext188 6A12                           _InitializeTasks 5416  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E2  
                              ?_addCmdFsm 0105                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039C                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 41F6  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A2            InitializeTasks@ActiveTaskIndex 04F9  
                  __size_of_findEmptySpot 0096                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 5638  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 5706                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 5706  
              ConfigureModem@DelayCounter 02D6                        __end_of_StringCopy 5834  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04D7                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C2  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0105  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D8  
                        _OsTmr_StartTimer 5892                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 442A  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6A12                __end_of_Mcu_StartSystemPll 68C2  
                            _parseCommand 2F48                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 6778  
                           _Rtcm_MainTask 508C                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03EA  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F1  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 53A4                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 652E                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 508C                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4B56                     delCmdFsm@currentState 01D4  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 6984                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 258A                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 66C2                     __end_of_initGprsModem 4F6C  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9013 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6B50  
                  __end_of_Mdm_GetSmsData 56A0                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E1                                  _ApnLocal 031A  
                          _StartCondition 6B64                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E7  
                           _Tmr_TmrBPrSet 3156                             _waitSetupCall 5E3A  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003C  
                            _isspace$6694 007E                          _UartSetConfigLow 59FC  
                                _GetSmsSm 2AA2                   __end_of_USBStallHandler 608E  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03AC  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DF  
                                _MdmCntSm 478A                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 22F2  
                               copy_data1 2312                                 copy_data2 2332  
                               copy_data3 236A              __end_of_LedPulseStateMachine 332C  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 34F8                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6B2A  
                           i2_GenerateEvt 6A28                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 5416                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 696A  
                 __end_of_InitializeTasks 5486                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 4D1A               __end_of_I2cSlv_QueryI2cData 3A18  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4BEE                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DC  
                         _SetUartBaudRate 296A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB2                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6AC8  
                    __end_of_triggerRelay 63FA                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9013 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 68FE  
                     __end_of_putUSBUSART 6800                               _line_coding 0383  
                            _Rtcc_LockRtc 6A98              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26DC               triggerCmdFsm@receivedNumber 0089  
                  __end_of_StartCondition 6B68                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01EE  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6697 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6A76  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03B0                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5F24  
                                __ptext11 6844                                  __ptext20 66E8  
                                __ptext12 4BEE                                  __ptext21 6004  
                                __ptext13 68C2                           ??_UartWriteByte 007E  
                                __ptext30 649A                                  __ptext22 5D9A  
                                __ptext14 2E26                                  __ptext31 604A  
                                __ptext23 5B02                                  __ptext15 5416  
                                __ptext40 3412                                  __ptext32 679A  
                                __ptext24 6B56                                  __ptext16 332C  
                                __ptext41 442A                                  __ptext33 258A  
                                __ptext25 6778                                  __ptext17 6950  
                                __ptext50 2D02                                  __ptext42 2BD4  
                                __ptext34 4DB0                                  __ptext26 6A52  
                                __ptext18 508C                                  __ptext51 3C82  
                                __ptext43 135A                                  __ptext35 5FBC  
                                __ptext27 6B5C                                  __ptext19 3BB6  
                                __ptext60 00D0                                  __ptext52 4134  
                                __ptext44 5834                                  __ptext36 511A  
                                __ptext28 1BAA                                  __ptext61 34F8  
                                __ptext53 36C2                                  __ptext45 44DC  
                                __ptext37 3058                                  __ptext29 6350  
                                __ptext70 67DE                                  __ptext62 699E  
                                __ptext54 2824                                  __ptext46 54F4  
                                __ptext38 4A1C                                  __ptext71 60D2  
                                __ptext63 6314                                  __ptext55 10B6  
                                __ptext47 608E                                  __ptext39 35DE  
                                __ptext80 15EE                                  __ptext72 4638  
                                __ptext64 181C                                  __ptext56 621E  
                                __ptext48 4B56                                  __ptext81 5332  
                                __ptext73 6116                                  __ptext65 69B6  
                                __ptext57 58F0                                  __ptext49 56A0  
                                __ptext90 55CC                                  __ptext82 51A6  
                                __ptext74 4C84                                  __ptext66 6670  
                                __ptext58 3AE8                                  __ptext91 63C4  
                                __ptext83 6A98                                  __ptext75 41F6  
                                __ptext67 655E                                  __ptext59 652E  
                                __ptext92 46E2                                  __ptext84 5706  
                                __ptext76 379A                                  __ptext68 67BC  
                                __ptext93 5E3A                                  __ptext85 4E44  
                                __ptext77 6800                                  __ptext69 64CC  
                                __ptext94 6864                                  __ptext86 69E6  
                                __ptext78 5B56                                  __ptext95 696A  
                                __ptext87 497C                                  __ptext79 6A88  
                                __ptext96 68E0                                  __ptext88 69FC  
                                __ptext97 4ED8                                  __ptext89 5560  
                                __ptext98 48DA                                  __ptext99 5DEA  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 691A                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 4FFC                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 0109                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                   delCmdFsm@searchNumber 0119                         _Mdm_IsSmsReceived 670C  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 51A6  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6B3E                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6B56                        ??_USBCtrlEPService 0097  
                                _isxdigit 6314                             _Mdm_IsRinging 6730  
                     _USBCtrlTrfInHandler 4134                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 6AB8                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2F48                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 56A0                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3C82                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 04CA                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 04FB                                strtol@sign 0093  
                         Term_MainSm@Data 0461                       delCmdFsm@isComplete 0116  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 5486  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 638A                  __end_of_Mcu_ConfigExtInt 6950  
                           ?_Eeprom_Reset 0001                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CA                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 008F             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 6844  
                __end_of_Led_SetLedStatus 65BE                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5B56                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 6730                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      parseCommand@resetCmd 0090  
                    _OsTmr_GetTimerStatus 4FFC                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5892  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5834  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2AA2                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01D9            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 619E                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 63FA  
                __end_of_Rtcm_GetRtccDate 576C                               _putUSBUSART 67DE  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 2D02  
                  __end_of_isMasterNumber 54F4                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 6350  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 58F0                      _LedPulseStateMachine 3244  
                      _USBCheckCDCRequest 44DC                       _USBCtrlTrfTxService 36C2  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                          ??_Eeprom_Reset 0085                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 5560  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DB                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 6004                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 6670                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                   delCmdFsm@numberInMemory 0118  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4832  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 6B60                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                  __size_of_triggerCmdFsm 006C                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 6466                      __end_of_CDCTxService 296A  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   __size_of_triggerRelay 0036                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F0  
                 _UsbMasterPhoneNumberLen 0318                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 6A52  
