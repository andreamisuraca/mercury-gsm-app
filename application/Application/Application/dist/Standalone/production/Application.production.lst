

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 21:42:19 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	text103,global,reloc=2,class=CODE,delta=1
   138                           	psect	text104,global,reloc=2,class=CODE,delta=1
   139                           	psect	text105,global,reloc=2,class=CODE,delta=1
   140                           	psect	text106,global,reloc=2,class=CODE,delta=1
   141                           	psect	text107,global,reloc=2,class=CODE,delta=1
   142                           	psect	text108,global,reloc=2,class=CODE,delta=1
   143                           	psect	text109,global,reloc=2,class=CODE,delta=1
   144                           	psect	text110,global,reloc=2,class=CODE,delta=1
   145                           	psect	text111,global,reloc=2,class=CODE,delta=1
   146                           	psect	text112,global,reloc=2,class=CODE,delta=1
   147                           	psect	text113,global,reloc=2,class=CODE,delta=1
   148                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text115,global,reloc=2,class=CODE,delta=1
   150                           	psect	text116,global,reloc=2,class=CODE,delta=1
   151                           	psect	text117,global,reloc=2,class=CODE,delta=1
   152                           	psect	text118,global,reloc=2,class=CODE,delta=1
   153                           	psect	text119,global,reloc=2,class=CODE,delta=1
   154                           	psect	text120,global,reloc=2,class=CODE,delta=1
   155                           	psect	text121,global,reloc=2,class=CODE,delta=1
   156                           	psect	text122,global,reloc=2,class=CODE,delta=1
   157                           	psect	text123,global,reloc=2,class=CODE,delta=1
   158                           	psect	text124,global,reloc=2,class=CODE,delta=1
   159                           	psect	text125,global,reloc=2,class=CODE,delta=1
   160                           	psect	text126,global,reloc=2,class=CODE,delta=1
   161                           	psect	text127,global,reloc=2,class=CODE,delta=1
   162                           	psect	text128,global,reloc=2,class=CODE,delta=1
   163                           	psect	text129,global,reloc=2,class=CODE,delta=1
   164                           	psect	text130,global,reloc=2,class=CODE,delta=1
   165                           	psect	text131,global,reloc=2,class=CODE,delta=1
   166                           	psect	text132,global,reloc=2,class=CODE,delta=1
   167                           	psect	text133,global,reloc=2,class=CODE,delta=1
   168                           	psect	text134,global,reloc=2,class=CODE,delta=1
   169                           	psect	text135,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text136,global,reloc=2,class=CODE,delta=1
   171                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text138,global,reloc=2,class=CODE,delta=1
   173                           	psect	text139,global,reloc=2,class=CODE,delta=1
   174                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text141,global,reloc=2,class=CODE,delta=1
   176                           	psect	text142,global,reloc=2,class=CODE,delta=1
   177                           	psect	text143,global,reloc=2,class=CODE,delta=1
   178                           	psect	text144,global,reloc=2,class=CODE,delta=1
   179                           	psect	text145,global,reloc=2,class=CODE,delta=1
   180                           	psect	text146,global,reloc=2,class=CODE,delta=1
   181                           	psect	text147,global,reloc=2,class=CODE,delta=1
   182                           	psect	text148,global,reloc=2,class=CODE,delta=1
   183                           	psect	text149,global,reloc=2,class=CODE,delta=1
   184                           	psect	text150,global,reloc=2,class=CODE,delta=1
   185                           	psect	text151,global,reloc=2,class=CODE,delta=1
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	text153,global,reloc=2,class=CODE,delta=1
   188                           	psect	text154,global,reloc=2,class=CODE,delta=1
   189                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   190                           	psect	text156,global,reloc=2,class=CODE,delta=1
   191                           	psect	text157,global,reloc=2,class=CODE,delta=1
   192                           	psect	text158,global,reloc=2,class=CODE,delta=1
   193                           	psect	text159,global,reloc=2,class=CODE,delta=1
   194                           	psect	text160,global,reloc=2,class=CODE,delta=1
   195                           	psect	text161,global,reloc=2,class=CODE,delta=1
   196                           	psect	text162,global,reloc=2,class=CODE,delta=1
   197                           	psect	text163,global,reloc=2,class=CODE,delta=1
   198                           	psect	text164,global,reloc=2,class=CODE,delta=1
   199                           	psect	text165,global,reloc=2,class=CODE,delta=1
   200                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   201                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	text169,global,reloc=2,class=CODE,delta=1
   205                           	psect	text170,global,reloc=2,class=CODE,delta=1
   206                           	psect	text171,global,reloc=2,class=CODE,delta=1
   207                           	psect	text172,global,reloc=2,class=CODE,delta=1
   208                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   211                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   212                           	dabs	1,0x400,48,_BDT
   213                           	dabs	1,0x438,8,_CtrlTrfData
   214                           	dabs	1,0x430,8,_SetupPkt
   215  0000                     
   216                           ; Version 1.45
   217                           ; Generated 16/11/2017 GMT
   218                           ; 
   219                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   220                           ; All rights reserved.
   221                           ; 
   222                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   223                           ; 
   224                           ; Redistribution and use in source and binary forms, with or without modification, are
   225                           ; permitted provided that the following conditions are met:
   226                           ; 
   227                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   228                           ;        conditions and the following disclaimer.
   229                           ; 
   230                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   231                           ;        of conditions and the following disclaimer in the documentation and/or other
   232                           ;        materials provided with the distribution.
   233                           ; 
   234                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   235                           ;        software without specific prior written permission.
   236                           ; 
   237                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   238                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   239                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   240                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   241                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   242                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   243                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   244                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   245                           ; 
   246                           ; 
   247                           ; Code-generator required, PIC18F46J50 Definitions
   248                           ; 
   249                           ; SFR Addresses
   250  0000                     
   251                           	psect	idataBANK1
   252  0061B2                     __pidataBANK1:
   253                           	opt stack 0
   254                           
   255                           ;initializer for InitGprsNetwork@GprsInitSts
   256  0061B2  01                 	db	1
   257                           
   258                           	psect	idataBANK2
   259  006128                     __pidataBANK2:
   260                           	opt stack 0
   261                           
   262                           ;initializer for MyApp_Task@countRelay1
   263  006128  01                 	db	1
   264                           
   265                           ;initializer for Terminal@EchoOption
   266  006129  01                 	db	1
   267                           
   268                           ;initializer for _MainSystemTimebaseFlag
   269  00612A  01                 	db	1
   270                           
   271                           ;initializer for _ConnTimeout
   272  00612B  00                 	db	0
   273  00612C  01                 	db	1
   274  00612D  0000               	dw	0
   275  00612F  0000               	dw	0
   276  006131  0000               	dw	0
   277  006133  0000               	dw	0
   278  006135  00                 	db	0
   279                           
   280                           	psect	idataBANK3
   281  005884                     __pidataBANK3:
   282                           	opt stack 0
   283                           
   284                           ;initializer for ModemEvtParser@F9089
   285  005884  2B                 	db	43
   286  005885  43                 	db	67
   287  005886  4D                 	db	77
   288  005887  54                 	db	84
   289  005888  49                 	db	73
   290                           
   291                           ;initializer for ModemEvtParser@F9087
   292  005889  52                 	db	82
   293  00588A  49                 	db	73
   294  00588B  4E                 	db	78
   295  00588C  47                 	db	71
   296                           
   297                           ;initializer for MyApp_Task@F9008
   298  00588D  63                 	db	99
   299  00588E  61                 	db	97
   300  00588F  74                 	db	116
   301                           
   302                           ;initializer for MyApp_Task@F8995
   303  005890  50                 	db	80
   304  005891  01                 	db	1
   305                           
   306                           ;initializer for MyApp_Task@F8992
   307  005892  50                 	db	80
   308  005893  00                 	db	0
   309                           
   310                           ;initializer for MyApp_Task@countRelay2
   311  005894  0001               	dw	1
   312                           
   313                           ;initializer for triggerRelay@F8967
   314  005896  50                 	db	80
   315  005897  00                 	db	0
   316                           
   317                           ;initializer for Term_MainSm@TermDelay
   318  005898  01                 	db	1
   319  005899  01                 	db	1
   320  00589A  0000               	dw	0
   321  00589C  0000               	dw	0
   322  00589E  0000               	dw	0
   323  0058A0  0000               	dw	0
   324  0058A2  00                 	db	0
   325                           
   326                           ;initializer for _ConnWait
   327  0058A3  00                 	db	0
   328  0058A4  01                 	db	1
   329  0058A5  0000               	dw	0
   330  0058A7  0000               	dw	0
   331  0058A9  0000               	dw	0
   332  0058AB  0000               	dw	0
   333  0058AD  00                 	db	0
   334                           
   335                           ;initializer for SendSmsSm@SwTimer
   336  0058AE  01                 	db	1
   337  0058AF  01                 	db	1
   338  0058B0  0000               	dw	0
   339  0058B2  0000               	dw	0
   340  0058B4  0000               	dw	0
   341  0058B6  0000               	dw	0
   342  0058B8  00                 	db	0
   343                           
   344                           ;initializer for CheckModem@Timeout
   345  0058B9  00                 	db	0
   346  0058BA  01                 	db	1
   347  0058BB  0000               	dw	0
   348  0058BD  0000               	dw	0
   349  0058BF  0000               	dw	0
   350  0058C1  0000               	dw	0
   351  0058C3  00                 	db	0
   352                           
   353                           ;initializer for MyApp_Task@blickTicks
   354  0058C4  FFFF               	dw	65535
   355                           
   356                           	psect	idataBANK4
   357  005FE8                     __pidataBANK4:
   358                           	opt stack 0
   359                           
   360                           ;initializer for MyApp_Task@F9001
   361  005FE8  2B                 	db	43
   362  005FE9  33                 	db	51
   363  005FEA  39                 	db	57
   364  005FEB  33                 	db	51
   365  005FEC  32                 	db	50
   366  005FED  30                 	db	48
   367  005FEE  30                 	db	48
   368  005FEF  32                 	db	50
   369  005FF0  37                 	db	55
   370  005FF1  36                 	db	54
   371  005FF2  33                 	db	51
   372  005FF3  31                 	db	49
   373  005FF4  38                 	db	56
   374  005FF5  00                 	db	0
   375                           
   376                           ;initializer for ModemEvtParser@F9091
   377  005FF6  43                 	db	67
   378  005FF7  61                 	db	97
   379  005FF8  6C                 	db	108
   380  005FF9  6C                 	db	108
   381  005FFA  20                 	db	32
   382  005FFB  52                 	db	82
   383  005FFC  65                 	db	101
   384  005FFD  61                 	db	97
   385  005FFE  64                 	db	100
   386  005FFF  79                 	db	121
   387                           
   388                           	psect	idataBANK5
   389  0054CE                     __pidataBANK5:
   390                           	opt stack 0
   391                           
   392                           ;initializer for _TaskTable
   393  0054CE  90                 	db	low _Mdm_DrvMainFn
   394  0054CF  61                 	db	high _Mdm_DrvMainFn
   395  0054D0  00                 	db	0
   396  0054D1  0000               	dw	0
   397  0054D3  000A               	dw	10
   398  0054D5  00                 	db	0
   399  0054D6  DA                 	db	low _I2cSlv_MainTask
   400  0054D7  52                 	db	high _I2cSlv_MainTask
   401  0054D8  00                 	db	0
   402  0054D9  0000               	dw	0
   403  0054DB  0001               	dw	1
   404  0054DD  00                 	db	0
   405  0054DE  2A                 	db	low _Mdm_MainTask
   406  0054DF  54                 	db	high _Mdm_MainTask
   407  0054E0  00                 	db	0
   408  0054E1  0000               	dw	0
   409  0054E3  0001               	dw	1
   410  0054E5  00                 	db	0
   411  0054E6  EA                 	db	low _MdmHttp_MainTask
   412  0054E7  56                 	db	high _MdmHttp_MainTask
   413  0054E8  00                 	db	0
   414  0054E9  0000               	dw	0
   415  0054EB  0001               	dw	1
   416  0054ED  00                 	db	0
   417  0054EE  A2                 	db	low _UsbDevice_MainTask
   418  0054EF  5D                 	db	high _UsbDevice_MainTask
   419  0054F0  00                 	db	0
   420  0054F1  0000               	dw	0
   421  0054F3  0001               	dw	1
   422  0054F5  00                 	db	0
   423  0054F6  32                 	db	low _Wdg_MainTask
   424  0054F7  5E                 	db	high _Wdg_MainTask
   425  0054F8  00                 	db	0
   426  0054F9  0000               	dw	0
   427  0054FB  0064               	dw	100
   428  0054FD  00                 	db	0
   429  0054FE  C6                 	db	low _Led_MainTask
   430  0054FF  39                 	db	high _Led_MainTask
   431  005500  00                 	db	0
   432  005501  0000               	dw	0
   433  005503  0032               	dw	50
   434  005505  00                 	db	0
   435  005506  6A                 	db	low _Rtcm_MainTask
   436  005507  49                 	db	high _Rtcm_MainTask
   437  005508  00                 	db	0
   438  005509  0000               	dw	0
   439  00550B  0064               	dw	100
   440  00550D  00                 	db	0
   441  00550E  CE                 	db	low _Term_MainTask
   442  00550F  5F                 	db	high _Term_MainTask
   443  005510  00                 	db	0
   444  005511  0000               	dw	0
   445  005513  0001               	dw	1
   446  005515  00                 	db	0
   447  005516  FE                 	db	low _MyApp_Task
   448  005517  1F                 	db	high _MyApp_Task
   449  005518  00                 	db	0
   450  005519  0000               	dw	0
   451  00551B  0064               	dw	100
   452  00551D  00                 	db	0
   453                           
   454                           	psect	mediumconst
   455  00FC32                     __pmediumconst:
   456                           	opt stack 0
   457  00FC32  00                 	db	0
   458  00FC33                     _USB_SD_Ptr:
   459                           	opt stack 0
   460  00FC33  66                 	db	low _sd000
   461  00FC34  FE                 	db	high _sd000
   462  00FC35  1F                 	db	low _sd001
   463  00FC36  FE                 	db	high _sd001
   464  00FC37  F9                 	db	low _sd002
   465  00FC38  FD                 	db	high _sd002
   466  00FC39                     __end_of_USB_SD_Ptr:
   467                           	opt stack 0
   468  00FC39                     _USB_CD_Ptr:
   469                           	opt stack 0
   470  00FC39  B6                 	db	low _configDescriptor1
   471  00FC3A  FD                 	db	high _configDescriptor1
   472  00FC3B                     __end_of_USB_CD_Ptr:
   473                           	opt stack 0
   474  00FC3B                     _TaskNumber:
   475                           	opt stack 0
   476  00FC3B  000A               	dw	10
   477  00FC3D                     __end_of_TaskNumber:
   478                           	opt stack 0
   479  00FC3D                     _MsgFormat:
   480                           	opt stack 0
   481  00FC3D  48                 	db	72
   482  00FC3E  6F                 	db	111
   483  00FC3F  73                 	db	115
   484  00FC40  74                 	db	116
   485  00FC41  20                 	db	32
   486  00FC42  6D                 	db	109
   487  00FC43  65                 	db	101
   488  00FC44  73                 	db	115
   489  00FC45  73                 	db	115
   490  00FC46  61                 	db	97
   491  00FC47  67                 	db	103
   492  00FC48  65                 	db	101
   493  00FC49  20                 	db	32
   494  00FC4A  66                 	db	102
   495  00FC4B  6F                 	db	111
   496  00FC4C  72                 	db	114
   497  00FC4D  6D                 	db	109
   498  00FC4E  61                 	db	97
   499  00FC4F  74                 	db	116
   500  00FC50  3A                 	db	58
   501  00FC51  20                 	db	32
   502  00FC52  0D                 	db	13
   503  00FC53  0A                 	db	10
   504  00FC54  5B                 	db	91
   505  00FC55  6F                 	db	111
   506  00FC56  70                 	db	112
   507  00FC57  5F                 	db	95
   508  00FC58  74                 	db	116
   509  00FC59  79                 	db	121
   510  00FC5A  70                 	db	112
   511  00FC5B  65                 	db	101
   512  00FC5C  5D                 	db	93
   513  00FC5D  3A                 	db	58
   514  00FC5E  5B                 	db	91
   515  00FC5F  6F                 	db	111
   516  00FC60  70                 	db	112
   517  00FC61  5D                 	db	93
   518  00FC62  3A                 	db	58
   519  00FC63  5B                 	db	91
   520  00FC64  6C                 	db	108
   521  00FC65  65                 	db	101
   522  00FC66  6E                 	db	110
   523  00FC67  5D                 	db	93
   524  00FC68  3A                 	db	58
   525  00FC69  5B                 	db	91
   526  00FC6A  61                 	db	97
   527  00FC6B  64                 	db	100
   528  00FC6C  64                 	db	100
   529  00FC6D  72                 	db	114
   530  00FC6E  5D                 	db	93
   531  00FC6F  3A                 	db	58
   532  00FC70  5B                 	db	91
   533  00FC71  70                 	db	112
   534  00FC72  61                 	db	97
   535  00FC73  79                 	db	121
   536  00FC74  6C                 	db	108
   537  00FC75  6F                 	db	111
   538  00FC76  61                 	db	97
   539  00FC77  64                 	db	100
   540  00FC78  5D                 	db	93
   541  00FC79  0D                 	db	13
   542  00FC7A  0A                 	db	10
   543  00FC7B  0D                 	db	13
   544  00FC7C  0A                 	db	10
   545  00FC7D  5B                 	db	91
   546  00FC7E  6F                 	db	111
   547  00FC7F  70                 	db	112
   548  00FC80  5F                 	db	95
   549  00FC81  74                 	db	116
   550  00FC82  79                 	db	121
   551  00FC83  70                 	db	112
   552  00FC84  65                 	db	101
   553  00FC85  5D                 	db	93
   554  00FC86  20                 	db	32
   555  00FC87  3D                 	db	61
   556  00FC88  20                 	db	32
   557  00FC89  53                 	db	83
   558  00FC8A  4F                 	db	79
   559  00FC8B  2C                 	db	44
   560  00FC8C  53                 	db	83
   561  00FC8D  42                 	db	66
   562  00FC8E  0D                 	db	13
   563  00FC8F  0A                 	db	10
   564  00FC90  5B                 	db	91
   565  00FC91  6F                 	db	111
   566  00FC92  70                 	db	112
   567  00FC93  5D                 	db	93
   568  00FC94  20                 	db	32
   569  00FC95  3D                 	db	61
   570  00FC96  20                 	db	32
   571  00FC97  52                 	db	82
   572  00FC98  3A                 	db	58
   573  00FC99  20                 	db	32
   574  00FC9A  72                 	db	114
   575  00FC9B  65                 	db	101
   576  00FC9C  61                 	db	97
   577  00FC9D  64                 	db	100
   578  00FC9E  2C                 	db	44
   579  00FC9F  57                 	db	87
   580  00FCA0  3A                 	db	58
   581  00FCA1  20                 	db	32
   582  00FCA2  77                 	db	119
   583  00FCA3  72                 	db	114
   584  00FCA4  69                 	db	105
   585  00FCA5  74                 	db	116
   586  00FCA6  65                 	db	101
   587  00FCA7  0D                 	db	13
   588  00FCA8  0A                 	db	10
   589  00FCA9  5B                 	db	91
   590  00FCAA  6C                 	db	108
   591  00FCAB  65                 	db	101
   592  00FCAC  6E                 	db	110
   593  00FCAD  5D                 	db	93
   594  00FCAE  20                 	db	32
   595  00FCAF  3D                 	db	61
   596  00FCB0  20                 	db	32
   597  00FCB1  32                 	db	50
   598  00FCB2  20                 	db	32
   599  00FCB3  62                 	db	98
   600  00FCB4  79                 	db	121
   601  00FCB5  74                 	db	116
   602  00FCB6  65                 	db	101
   603  00FCB7  20                 	db	32
   604  00FCB8  41                 	db	65
   605  00FCB9  53                 	db	83
   606  00FCBA  43                 	db	67
   607  00FCBB  49                 	db	73
   608  00FCBC  49                 	db	73
   609  00FCBD  0D                 	db	13
   610  00FCBE  0A                 	db	10
   611  00FCBF  5B                 	db	91
   612  00FCC0  61                 	db	97
   613  00FCC1  64                 	db	100
   614  00FCC2  64                 	db	100
   615  00FCC3  72                 	db	114
   616  00FCC4  5D                 	db	93
   617  00FCC5  20                 	db	32
   618  00FCC6  3D                 	db	61
   619  00FCC7  20                 	db	32
   620  00FCC8  32                 	db	50
   621  00FCC9  20                 	db	32
   622  00FCCA  62                 	db	98
   623  00FCCB  79                 	db	121
   624  00FCCC  74                 	db	116
   625  00FCCD  65                 	db	101
   626  00FCCE  20                 	db	32
   627  00FCCF  41                 	db	65
   628  00FCD0  53                 	db	83
   629  00FCD1  43                 	db	67
   630  00FCD2  49                 	db	73
   631  00FCD3  49                 	db	73
   632  00FCD4  0D                 	db	13
   633  00FCD5  0A                 	db	10
   634  00FCD6  5B                 	db	91
   635  00FCD7  70                 	db	112
   636  00FCD8  61                 	db	97
   637  00FCD9  79                 	db	121
   638  00FCDA  6C                 	db	108
   639  00FCDB  6F                 	db	111
   640  00FCDC  61                 	db	97
   641  00FCDD  64                 	db	100
   642  00FCDE  5D                 	db	93
   643  00FCDF  20                 	db	32
   644  00FCE0  3D                 	db	61
   645  00FCE1  20                 	db	32
   646  00FCE2  6D                 	db	109
   647  00FCE3  61                 	db	97
   648  00FCE4  78                 	db	120
   649  00FCE5  20                 	db	32
   650  00FCE6  32                 	db	50
   651  00FCE7  30                 	db	48
   652  00FCE8  20                 	db	32
   653  00FCE9  62                 	db	98
   654  00FCEA  79                 	db	121
   655  00FCEB  74                 	db	116
   656  00FCEC  65                 	db	101
   657  00FCED  20                 	db	32
   658  00FCEE  41                 	db	65
   659  00FCEF  53                 	db	83
   660  00FCF0  43                 	db	67
   661  00FCF1  49                 	db	73
   662  00FCF2  49                 	db	73
   663  00FCF3  0D                 	db	13
   664  00FCF4  0A                 	db	10
   665  00FCF5  0D                 	db	13
   666  00FCF6  0A                 	db	10
   667  00FCF7  54                 	db	84
   668  00FCF8  65                 	db	101
   669  00FCF9  72                 	db	114
   670  00FCFA  6D                 	db	109
   671  00FCFB  69                 	db	105
   672  00FCFC  6E                 	db	110
   673  00FCFD  61                 	db	97
   674  00FCFE  6C                 	db	108
   675  00FCFF  20                 	db	32
   676  00FD00  4D                 	db	77
   677  00FD01  6F                 	db	111
   678  00FD02  64                 	db	100
   679  00FD03  65                 	db	101
   680  00FD04  3A                 	db	58
   681  00FD05  20                 	db	32
   682  00FD06  43                 	db	67
   683  00FD07  4F                 	db	79
   684  00FD08  4D                 	db	77
   685  00FD09  4D                 	db	77
   686  00FD0A  41                 	db	65
   687  00FD0B  4E                 	db	78
   688  00FD0C  44                 	db	68
   689  00FD0D  20                 	db	32
   690  00FD0E  4D                 	db	77
   691  00FD0F  4F                 	db	79
   692  00FD10  44                 	db	68
   693  00FD11  45                 	db	69
   694  00FD12  0D                 	db	13
   695  00FD13  0A                 	db	10
   696  00FD14  4D                 	db	77
   697  00FD15  6F                 	db	111
   698  00FD16  64                 	db	100
   699  00FD17  65                 	db	101
   700  00FD18  6D                 	db	109
   701  00FD19  20                 	db	32
   702  00FD1A  54                 	db	84
   703  00FD1B  79                 	db	121
   704  00FD1C  70                 	db	112
   705  00FD1D  65                 	db	101
   706  00FD1E  3A                 	db	58
   707  00FD1F  20                 	db	32
   708  00FD20  47                 	db	71
   709  00FD21  53                 	db	83
   710  00FD22  4D                 	db	77
   711  00FD23  2F                 	db	47
   712  00FD24  47                 	db	71
   713  00FD25  50                 	db	80
   714  00FD26  52                 	db	82
   715  00FD27  53                 	db	83
   716  00FD28  0D                 	db	13
   717  00FD29  0A                 	db	10
   718  00FD2A  0D                 	db	13
   719  00FD2B  0A                 	db	10
   720  00FD2C  00                 	db	0
   721  00FD2D                     __end_of_MsgFormat:
   722                           	opt stack 0
   723  00FD2D                     _Welcome:
   724                           	opt stack 0
   725  00FD2D  2A                 	db	42
   726  00FD2E  2A                 	db	42
   727  00FD2F  2A                 	db	42
   728  00FD30  2A                 	db	42
   729  00FD31  2A                 	db	42
   730  00FD32  2A                 	db	42
   731  00FD33  2A                 	db	42
   732  00FD34  2A                 	db	42
   733  00FD35  2A                 	db	42
   734  00FD36  2A                 	db	42
   735  00FD37  2A                 	db	42
   736  00FD38  2A                 	db	42
   737  00FD39  2A                 	db	42
   738  00FD3A  2A                 	db	42
   739  00FD3B  2A                 	db	42
   740  00FD3C  2A                 	db	42
   741  00FD3D  2A                 	db	42
   742  00FD3E  2A                 	db	42
   743  00FD3F  2A                 	db	42
   744  00FD40  2A                 	db	42
   745  00FD41  2A                 	db	42
   746  00FD42  2A                 	db	42
   747  00FD43  2A                 	db	42
   748  00FD44  2A                 	db	42
   749  00FD45  2A                 	db	42
   750  00FD46  2A                 	db	42
   751  00FD47  2A                 	db	42
   752  00FD48  2A                 	db	42
   753  00FD49  2A                 	db	42
   754  00FD4A  2A                 	db	42
   755  00FD4B  2A                 	db	42
   756  00FD4C  2A                 	db	42
   757  00FD4D  2A                 	db	42
   758  00FD4E  2A                 	db	42
   759  00FD4F  2A                 	db	42
   760  00FD50  2A                 	db	42
   761  00FD51  2A                 	db	42
   762  00FD52  2A                 	db	42
   763  00FD53  2A                 	db	42
   764  00FD54  2A                 	db	42
   765  00FD55  2A                 	db	42
   766  00FD56  2A                 	db	42
   767  00FD57  2A                 	db	42
   768  00FD58  2A                 	db	42
   769  00FD59  2A                 	db	42
   770  00FD5A  2A                 	db	42
   771  00FD5B  2A                 	db	42
   772  00FD5C  2A                 	db	42
   773  00FD5D  2A                 	db	42
   774  00FD5E  0D                 	db	13
   775  00FD5F  0A                 	db	10
   776  00FD60  20                 	db	32
   777  00FD61  20                 	db	32
   778  00FD62  20                 	db	32
   779  00FD63  20                 	db	32
   780  00FD64  20                 	db	32
   781  00FD65  20                 	db	32
   782  00FD66  20                 	db	32
   783  00FD67  20                 	db	32
   784  00FD68  20                 	db	32
   785  00FD69  20                 	db	32
   786  00FD6A  20                 	db	32
   787  00FD6B  20                 	db	32
   788  00FD6C  20                 	db	32
   789  00FD6D  20                 	db	32
   790  00FD6E  20                 	db	32
   791  00FD6F  20                 	db	32
   792  00FD70  20                 	db	32
   793  00FD71  20                 	db	32
   794  00FD72  4D                 	db	77
   795  00FD73  45                 	db	69
   796  00FD74  52                 	db	82
   797  00FD75  43                 	db	67
   798  00FD76  55                 	db	85
   799  00FD77  52                 	db	82
   800  00FD78  59                 	db	89
   801  00FD79  20                 	db	32
   802  00FD7A  53                 	db	83
   803  00FD7B  59                 	db	89
   804  00FD7C  53                 	db	83
   805  00FD7D  54                 	db	84
   806  00FD7E  45                 	db	69
   807  00FD7F  4D                 	db	77
   808  00FD80  0D                 	db	13
   809  00FD81  0A                 	db	10
   810  00FD82  2A                 	db	42
   811  00FD83  2A                 	db	42
   812  00FD84  2A                 	db	42
   813  00FD85  2A                 	db	42
   814  00FD86  2A                 	db	42
   815  00FD87  2A                 	db	42
   816  00FD88  2A                 	db	42
   817  00FD89  2A                 	db	42
   818  00FD8A  2A                 	db	42
   819  00FD8B  2A                 	db	42
   820  00FD8C  2A                 	db	42
   821  00FD8D  2A                 	db	42
   822  00FD8E  2A                 	db	42
   823  00FD8F  2A                 	db	42
   824  00FD90  2A                 	db	42
   825  00FD91  2A                 	db	42
   826  00FD92  2A                 	db	42
   827  00FD93  2A                 	db	42
   828  00FD94  2A                 	db	42
   829  00FD95  2A                 	db	42
   830  00FD96  2A                 	db	42
   831  00FD97  2A                 	db	42
   832  00FD98  2A                 	db	42
   833  00FD99  2A                 	db	42
   834  00FD9A  2A                 	db	42
   835  00FD9B  2A                 	db	42
   836  00FD9C  2A                 	db	42
   837  00FD9D  2A                 	db	42
   838  00FD9E  2A                 	db	42
   839  00FD9F  2A                 	db	42
   840  00FDA0  2A                 	db	42
   841  00FDA1  2A                 	db	42
   842  00FDA2  2A                 	db	42
   843  00FDA3  2A                 	db	42
   844  00FDA4  2A                 	db	42
   845  00FDA5  2A                 	db	42
   846  00FDA6  2A                 	db	42
   847  00FDA7  2A                 	db	42
   848  00FDA8  2A                 	db	42
   849  00FDA9  2A                 	db	42
   850  00FDAA  2A                 	db	42
   851  00FDAB  2A                 	db	42
   852  00FDAC  2A                 	db	42
   853  00FDAD  2A                 	db	42
   854  00FDAE  2A                 	db	42
   855  00FDAF  2A                 	db	42
   856  00FDB0  2A                 	db	42
   857  00FDB1  2A                 	db	42
   858  00FDB2  2A                 	db	42
   859  00FDB3  0D                 	db	13
   860  00FDB4  0A                 	db	10
   861  00FDB5  00                 	db	0
   862  00FDB6                     __end_of_Welcome:
   863                           	opt stack 0
   864  00FDB6                     _configDescriptor1:
   865                           	opt stack 0
   866  00FDB6  09                 	db	9
   867  00FDB7  02                 	db	2
   868  00FDB8  43                 	db	67
   869  00FDB9  00                 	db	0
   870  00FDBA  02                 	db	2
   871  00FDBB  01                 	db	1
   872  00FDBC  00                 	db	0
   873  00FDBD  C0                 	db	192
   874  00FDBE  32                 	db	50
   875  00FDBF  09                 	db	9
   876  00FDC0  04                 	db	4
   877  00FDC1  00                 	db	0
   878  00FDC2  00                 	db	0
   879  00FDC3  01                 	db	1
   880  00FDC4  02                 	db	2
   881  00FDC5  02                 	db	2
   882  00FDC6  01                 	db	1
   883  00FDC7  00                 	db	0
   884  00FDC8  05                 	db	5
   885  00FDC9  24                 	db	36
   886  00FDCA  00                 	db	0
   887  00FDCB  10                 	db	16
   888  00FDCC  01                 	db	1
   889  00FDCD  04                 	db	4
   890  00FDCE  24                 	db	36
   891  00FDCF  02                 	db	2
   892  00FDD0  02                 	db	2
   893  00FDD1  05                 	db	5
   894  00FDD2  24                 	db	36
   895  00FDD3  06                 	db	6
   896  00FDD4  00                 	db	0
   897  00FDD5  01                 	db	1
   898  00FDD6  05                 	db	5
   899  00FDD7  24                 	db	36
   900  00FDD8  01                 	db	1
   901  00FDD9  00                 	db	0
   902  00FDDA  01                 	db	1
   903  00FDDB  07                 	db	7
   904  00FDDC  05                 	db	5
   905  00FDDD  81                 	db	129
   906  00FDDE  03                 	db	3
   907  00FDDF  08                 	db	8
   908  00FDE0  00                 	db	0
   909  00FDE1  02                 	db	2
   910  00FDE2  09                 	db	9
   911  00FDE3  04                 	db	4
   912  00FDE4  01                 	db	1
   913  00FDE5  00                 	db	0
   914  00FDE6  02                 	db	2
   915  00FDE7  0A                 	db	10
   916  00FDE8  00                 	db	0
   917  00FDE9  00                 	db	0
   918  00FDEA  00                 	db	0
   919  00FDEB  07                 	db	7
   920  00FDEC  05                 	db	5
   921  00FDED  02                 	db	2
   922  00FDEE  02                 	db	2
   923  00FDEF  40                 	db	64
   924  00FDF0  00                 	db	0
   925  00FDF1  00                 	db	0
   926  00FDF2  07                 	db	7
   927  00FDF3  05                 	db	5
   928  00FDF4  82                 	db	130
   929  00FDF5  02                 	db	2
   930  00FDF6  40                 	db	64
   931  00FDF7  00                 	db	0
   932  00FDF8  00                 	db	0
   933  00FDF9                     __end_of_configDescriptor1:
   934                           	opt stack 0
   935  00FDF9                     _sd002:
   936                           	opt stack 0
   937  00FDF9  26                 	db	38
   938  00FDFA  03                 	db	3
   939  00FDFB  0054               	dw	84
   940  00FDFD  0065               	dw	101
   941  00FDFF  0072               	dw	114
   942  00FE01  006D               	dw	109
   943  00FE03  0069               	dw	105
   944  00FE05  006E               	dw	110
   945  00FE07  0061               	dw	97
   946  00FE09  006C               	dw	108
   947  00FE0B  0020               	dw	32
   948  00FE0D  0049               	dw	73
   949  00FE0F  006E               	dw	110
   950  00FE11  0074               	dw	116
   951  00FE13  0065               	dw	101
   952  00FE15  0072               	dw	114
   953  00FE17  0066               	dw	102
   954  00FE19  0061               	dw	97
   955  00FE1B  0063               	dw	99
   956  00FE1D  0065               	dw	101
   957  00FE1F                     __end_of_sd002:
   958                           	opt stack 0
   959  00FE1F                     _sd001:
   960                           	opt stack 0
   961  00FE1F  1E                 	db	30
   962  00FE20  03                 	db	3
   963  00FE21  004D               	dw	77
   964  00FE23  0065               	dw	101
   965  00FE25  0072               	dw	114
   966  00FE27  0063               	dw	99
   967  00FE29  0075               	dw	117
   968  00FE2B  0072               	dw	114
   969  00FE2D  0079               	dw	121
   970  00FE2F  0020               	dw	32
   971  00FE31  0053               	dw	83
   972  00FE33  0079               	dw	121
   973  00FE35  0073               	dw	115
   974  00FE37  0074               	dw	116
   975  00FE39  0065               	dw	101
   976  00FE3B  006D               	dw	109
   977  00FE3D                     __end_of_sd001:
   978                           	opt stack 0
   979  00FE3D                     _MsgReady:
   980                           	opt stack 0
   981  00FE3D  0D                 	db	13
   982  00FE3E  0A                 	db	10
   983  00FE3F  53                 	db	83
   984  00FE40  79                 	db	121
   985  00FE41  73                 	db	115
   986  00FE42  74                 	db	116
   987  00FE43  65                 	db	101
   988  00FE44  6D                 	db	109
   989  00FE45  20                 	db	32
   990  00FE46  52                 	db	82
   991  00FE47  65                 	db	101
   992  00FE48  61                 	db	97
   993  00FE49  64                 	db	100
   994  00FE4A  79                 	db	121
   995  00FE4B  2E                 	db	46
   996  00FE4C  2E                 	db	46
   997  00FE4D  2E                 	db	46
   998  00FE4E  20                 	db	32
   999  00FE4F  0D                 	db	13
  1000  00FE50  0A                 	db	10
  1001  00FE51  0D                 	db	13
  1002  00FE52  0A                 	db	10
  1003  00FE53  00                 	db	0
  1004  00FE54                     __end_of_MsgReady:
  1005                           	opt stack 0
  1006  00FE54                     _device_dsc:
  1007                           	opt stack 0
  1008  00FE54  12                 	db	18
  1009  00FE55  01                 	db	1
  1010  00FE56  0200               	dw	512
  1011  00FE58  02                 	db	2
  1012  00FE59  00                 	db	0
  1013  00FE5A  00                 	db	0
  1014  00FE5B  08                 	db	8
  1015  00FE5C  04D8               	dw	1240
  1016  00FE5E  000A               	dw	10
  1017  00FE60  0100               	dw	256
  1018  00FE62  01                 	db	1
  1019  00FE63  02                 	db	2
  1020  00FE64  00                 	db	0
  1021  00FE65  01                 	db	1
  1022  00FE66                     __end_of_device_dsc:
  1023                           	opt stack 0
  1024  00FE66                     _sd000:
  1025                           	opt stack 0
  1026  00FE66  04                 	db	4
  1027  00FE67  03                 	db	3
  1028  00FE68  0409               	dw	1033
  1029  00FE6A                     __end_of_sd000:
  1030                           	opt stack 0
  1031  0000                     _RPINR1	set	3815
  1032  0000                     _UEP0bits	set	3878
  1033  0000                     _UIEbits	set	3894
  1034  0000                     _UADDR	set	3896
  1035  0000                     _UIE	set	3894
  1036  0000                     _UEIE	set	3895
  1037  0000                     _UCFG	set	3897
  1038  0000                     _RTCCAL	set	3902
  1039  0000                     _PADCFG1bits	set	3900
  1040  0000                     _RTCCFGbits	set	3903
  1041  0000                     _DSCONLbits	set	3916
  1042  0000                     _DSGPR1	set	3919
  1043  0000                     _DSGPR0	set	3918
  1044  0000                     _DSCONHbits	set	3917
  1045  0000                     _ANCON1bits	set	3913
  1046  0000                     _UEP1	set	3879
  1047  0000                     _UEP0	set	3878
  1048  0000                     _T1CONbits	set	4045
  1049  0000                     _PORTDbits	set	3971
  1050  0000                     _USTAT	set	3940
  1051  0000                     _PIR2bits	set	4001
  1052  0000                     _UCON	set	3941
  1053  0000                     _UIRbits	set	3938
  1054  0000                     _UCONbits	set	3941
  1055  0000                     _UIR	set	3938
  1056  0000                     _UEIR	set	3939
  1057  0000                     _PIE2bits	set	4000
  1058  0000                     _BAUDCON2	set	3964
  1059  0000                     _RCSTA2	set	3996
  1060  0000                     _BAUDCON1	set	3966
  1061  0000                     _RCSTA1	set	4012
  1062  0000                     _TRISCbits	set	3988
  1063  0000                     _TXSTA2	set	4008
  1064  0000                     _TXSTA1	set	4013
  1065  0000                     _RCREG2	set	4010
  1066  0000                     _RCREG1	set	4015
  1067  0000                     _TXREG2	set	4009
  1068  0000                     _TXREG1	set	4014
  1069  0000                     _SPBRG2	set	4011
  1070  0000                     _SPBRGH2	set	3965
  1071  0000                     _SPBRG1	set	4016
  1072  0000                     _SPBRGH1	set	3967
  1073  0000                     _PR4	set	3959
  1074  0000                     _PR2	set	4043
  1075  0000                     _PIE1bits	set	3997
  1076  0000                     _IPR1bits	set	3999
  1077  0000                     _T4CONbits	set	3958
  1078  0000                     _T2CONbits	set	4042
  1079  0000                     _ALRMVALL	set	3982
  1080  0000                     _ALRMVALH	set	3983
  1081  0000                     _RTCVALH	set	3993
  1082  0000                     _RTCVALL	set	3992
  1083  0000                     _ALRMRPTbits	set	3984
  1084  0000                     _ALRMCFGbits	set	3985
  1085  0000                     _PIE3bits	set	4003
  1086  0000                     _IPR3bits	set	4005
  1087  0000                     _OSCCONbits	set	4051
  1088  0000                     _PORTEbits	set	3972
  1089  0000                     _TRISEbits	set	3990
  1090  0000                     _WDTCONbits	set	4032
  1091  0000                     _INTCON2bits	set	4081
  1092  0000                     _TRISBbits	set	3987
  1093  0000                     _OSCTUNEbits	set	3995
  1094  0000                     _SSP2CON1	set	3954
  1095  0000                     _TRISDbits	set	3989
  1096  0000                     _SSP2BUF	set	3957
  1097  0000                     _SSP2CON2bits	set	3953
  1098  0000                     _SSP2STAT	set	3955
  1099  0000                     _SSP2CON2	set	3953
  1100  0000                     _SSP2ADD	set	3956
  1101  0000                     _PIR1bits	set	3998
  1102  0000                     _PIR3bits	set	4004
  1103  0000                     _INTCON3bits	set	4080
  1104  0000                     _INTCONbits	set	4082
  1105  0000                     _RCONbits	set	4048
  1106  00FE6A                     STR_21:
  1107  00FE6A  20                 	db	32
  1108  00FE6B  4C                 	db	76	;'L'
  1109  00FE6C  61                 	db	97	;'a'
  1110  00FE6D  7A                 	db	122	;'z'
  1111  00FE6E  79                 	db	121	;'y'
  1112  00FE6F  20                 	db	32
  1113  00FE70  64                 	db	100	;'d'
  1114  00FE71  65                 	db	101	;'e'
  1115  00FE72  76                 	db	118	;'v'
  1116  00FE73  69                 	db	105	;'i'
  1117  00FE74  63                 	db	99	;'c'
  1118  00FE75  65                 	db	101	;'e'
  1119  00FE76  2E                 	db	46
  1120  00FE77  2E                 	db	46
  1121  00FE78  2E                 	db	46
  1122  00FE79  79                 	db	121	;'y'
  1123  00FE7A  6F                 	db	111	;'o'
  1124  00FE7B  75                 	db	117	;'u'
  1125  00FE7C  27                 	db	39
  1126  00FE7D  76                 	db	118	;'v'
  1127  00FE7E  65                 	db	101	;'e'
  1128  00FE7F  20                 	db	32
  1129  00FE80  62                 	db	98	;'b'
  1130  00FE81  65                 	db	101	;'e'
  1131  00FE82  65                 	db	101	;'e'
  1132  00FE83  6E                 	db	110	;'n'
  1133  00FE84  20                 	db	32
  1134  00FE85  74                 	db	116	;'t'
  1135  00FE86  69                 	db	105	;'i'
  1136  00FE87  6D                 	db	109	;'m'
  1137  00FE88  65                 	db	101	;'e'
  1138  00FE89  64                 	db	100	;'d'
  1139  00FE8A  2D                 	db	45
  1140  00FE8B  6F                 	db	111	;'o'
  1141  00FE8C  75                 	db	117	;'u'
  1142  00FE8D  74                 	db	116	;'t'
  1143  00FE8E  21                 	db	33
  1144  00FE8F  21                 	db	33
  1145  00FE90  21                 	db	33
  1146  00FE91  0D                 	db	13
  1147  00FE92  0A                 	db	10
  1148  00FE93  00                 	db	0
  1149  00FE94                     STR_8:
  1150  00FE94  41                 	db	65	;'A'
  1151  00FE95  54                 	db	84	;'T'
  1152  00FE96  2B                 	db	43
  1153  00FE97  53                 	db	83	;'S'
  1154  00FE98  41                 	db	65	;'A'
  1155  00FE99  50                 	db	80	;'P'
  1156  00FE9A  42                 	db	66	;'B'
  1157  00FE9B  52                 	db	82	;'R'
  1158  00FE9C  3D                 	db	61	;'='
  1159  00FE9D  33                 	db	51	;'3'
  1160  00FE9E  2C                 	db	44
  1161  00FE9F  31                 	db	49	;'1'
  1162  00FEA0  2C                 	db	44
  1163  00FEA1  22                 	db	34
  1164  00FEA2  43                 	db	67	;'C'
  1165  00FEA3  6F                 	db	111	;'o'
  1166  00FEA4  6E                 	db	110	;'n'
  1167  00FEA5  74                 	db	116	;'t'
  1168  00FEA6  79                 	db	121	;'y'
  1169  00FEA7  70                 	db	112	;'p'
  1170  00FEA8  65                 	db	101	;'e'
  1171  00FEA9  22                 	db	34
  1172  00FEAA  2C                 	db	44
  1173  00FEAB  22                 	db	34
  1174  00FEAC  47                 	db	71	;'G'
  1175  00FEAD  50                 	db	80	;'P'
  1176  00FEAE  52                 	db	82	;'R'
  1177  00FEAF  53                 	db	83	;'S'
  1178  00FEB0  22                 	db	34
  1179  00FEB1  0D                 	db	13
  1180  00FEB2  00                 	db	0
  1181  00FEB3                     STR_14:
  1182  00FEB3  41                 	db	65	;'A'
  1183  00FEB4  54                 	db	84	;'T'
  1184  00FEB5  2B                 	db	43
  1185  00FEB6  48                 	db	72	;'H'
  1186  00FEB7  54                 	db	84	;'T'
  1187  00FEB8  54                 	db	84	;'T'
  1188  00FEB9  50                 	db	80	;'P'
  1189  00FEBA  50                 	db	80	;'P'
  1190  00FEBB  41                 	db	65	;'A'
  1191  00FEBC  52                 	db	82	;'R'
  1192  00FEBD  41                 	db	65	;'A'
  1193  00FEBE  3D                 	db	61	;'='
  1194  00FEBF  22                 	db	34
  1195  00FEC0  43                 	db	67	;'C'
  1196  00FEC1  49                 	db	73	;'I'
  1197  00FEC2  44                 	db	68	;'D'
  1198  00FEC3  22                 	db	34
  1199  00FEC4  2C                 	db	44
  1200  00FEC5  31                 	db	49	;'1'
  1201  00FEC6  0D                 	db	13
  1202  00FEC7  00                 	db	0
  1203  00FEC8                     STR_9:
  1204  00FEC8  41                 	db	65	;'A'
  1205  00FEC9  54                 	db	84	;'T'
  1206  00FECA  2B                 	db	43
  1207  00FECB  53                 	db	83	;'S'
  1208  00FECC  41                 	db	65	;'A'
  1209  00FECD  50                 	db	80	;'P'
  1210  00FECE  42                 	db	66	;'B'
  1211  00FECF  52                 	db	82	;'R'
  1212  00FED0  3D                 	db	61	;'='
  1213  00FED1  33                 	db	51	;'3'
  1214  00FED2  2C                 	db	44
  1215  00FED3  31                 	db	49	;'1'
  1216  00FED4  2C                 	db	44
  1217  00FED5  22                 	db	34
  1218  00FED6  41                 	db	65	;'A'
  1219  00FED7  50                 	db	80	;'P'
  1220  00FED8  4E                 	db	78	;'N'
  1221  00FED9  22                 	db	34
  1222  00FEDA  2C                 	db	44
  1223  00FEDB  22                 	db	34
  1224  00FEDC  00                 	db	0
  1225  00FEDD                     STR_23:
  1226  00FEDD  46                 	db	70	;'F'
  1227  00FEDE  72                 	db	114	;'r'
  1228  00FEDF  61                 	db	97	;'a'
  1229  00FEE0  6D                 	db	109	;'m'
  1230  00FEE1  65                 	db	101	;'e'
  1231  00FEE2  77                 	db	119	;'w'
  1232  00FEE3  6F                 	db	111	;'o'
  1233  00FEE4  72                 	db	114	;'r'
  1234  00FEE5  6B                 	db	107	;'k'
  1235  00FEE6  20                 	db	32
  1236  00FEE7  56                 	db	86	;'V'
  1237  00FEE8  65                 	db	101	;'e'
  1238  00FEE9  72                 	db	114	;'r'
  1239  00FEEA  73                 	db	115	;'s'
  1240  00FEEB  69                 	db	105	;'i'
  1241  00FEEC  6F                 	db	111	;'o'
  1242  00FEED  6E                 	db	110	;'n'
  1243  00FEEE  3A                 	db	58	;':'
  1244  00FEEF  20                 	db	32
  1245  00FEF0  00                 	db	0
  1246  00FEF1                     STR_15:
  1247  00FEF1  41                 	db	65	;'A'
  1248  00FEF2  54                 	db	84	;'T'
  1249  00FEF3  2B                 	db	43
  1250  00FEF4  48                 	db	72	;'H'
  1251  00FEF5  54                 	db	84	;'T'
  1252  00FEF6  54                 	db	84	;'T'
  1253  00FEF7  50                 	db	80	;'P'
  1254  00FEF8  50                 	db	80	;'P'
  1255  00FEF9  41                 	db	65	;'A'
  1256  00FEFA  52                 	db	82	;'R'
  1257  00FEFB  41                 	db	65	;'A'
  1258  00FEFC  3D                 	db	61	;'='
  1259  00FEFD  22                 	db	34
  1260  00FEFE  55                 	db	85	;'U'
  1261  00FEFF  52                 	db	82	;'R'
  1262  00FF00  4C                 	db	76	;'L'
  1263  00FF01  22                 	db	34
  1264  00FF02  2C                 	db	44
  1265  00FF03  22                 	db	34
  1266  00FF04  00                 	db	0
  1267  00FF05                     STR_29:
  1268  00FF05  41                 	db	65	;'A'
  1269  00FF06  54                 	db	84	;'T'
  1270  00FF07  2B                 	db	43
  1271  00FF08  43                 	db	67	;'C'
  1272  00FF09  4D                 	db	77	;'M'
  1273  00FF0A  47                 	db	71	;'G'
  1274  00FF0B  44                 	db	68	;'D'
  1275  00FF0C  41                 	db	65	;'A'
  1276  00FF0D  3D                 	db	61	;'='
  1277  00FF0E  44                 	db	68	;'D'
  1278  00FF0F  45                 	db	69	;'E'
  1279  00FF10  4C                 	db	76	;'L'
  1280  00FF11  20                 	db	32
  1281  00FF12  41                 	db	65	;'A'
  1282  00FF13  4C                 	db	76	;'L'
  1283  00FF14  4C                 	db	76	;'L'
  1284  00FF15  0D                 	db	13
  1285  00FF16  0A                 	db	10
  1286  00FF17  00                 	db	0
  1287  00FF18                     STR_27:
  1288  00FF18  42                 	db	66	;'B'
  1289  00FF19  75                 	db	117	;'u'
  1290  00FF1A  69                 	db	105	;'i'
  1291  00FF1B  6C                 	db	108	;'l'
  1292  00FF1C  64                 	db	100	;'d'
  1293  00FF1D  20                 	db	32
  1294  00FF1E  44                 	db	68	;'D'
  1295  00FF1F  61                 	db	97	;'a'
  1296  00FF20  74                 	db	116	;'t'
  1297  00FF21  65                 	db	101	;'e'
  1298  00FF22  3A                 	db	58	;':'
  1299  00FF23  20                 	db	32
  1300  00FF24  25                 	db	37
  1301  00FF25  73                 	db	115	;'s'
  1302  00FF26  0D                 	db	13
  1303  00FF27  0A                 	db	10
  1304  00FF28  00                 	db	0
  1305  00FF29                     STR_16:
  1306  00FF29  41                 	db	65	;'A'
  1307  00FF2A  54                 	db	84	;'T'
  1308  00FF2B  2B                 	db	43
  1309  00FF2C  48                 	db	72	;'H'
  1310  00FF2D  54                 	db	84	;'T'
  1311  00FF2E  54                 	db	84	;'T'
  1312  00FF2F  50                 	db	80	;'P'
  1313  00FF30  41                 	db	65	;'A'
  1314  00FF31  43                 	db	67	;'C'
  1315  00FF32  54                 	db	84	;'T'
  1316  00FF33  49                 	db	73	;'I'
  1317  00FF34  4F                 	db	79	;'O'
  1318  00FF35  4E                 	db	78	;'N'
  1319  00FF36  3D                 	db	61	;'='
  1320  00FF37  30                 	db	48	;'0'
  1321  00FF38  0D                 	db	13
  1322  00FF39  00                 	db	0
  1323  00FF3A                     STR_30:
  1324  00FF3A  41                 	db	65	;'A'
  1325  00FF3B  54                 	db	84	;'T'
  1326  00FF3C  2B                 	db	43
  1327  00FF3D  43                 	db	67	;'C'
  1328  00FF3E  4D                 	db	77	;'M'
  1329  00FF3F  47                 	db	71	;'G'
  1330  00FF40  44                 	db	68	;'D'
  1331  00FF41  3D                 	db	61	;'='
  1332  00FF42  31                 	db	49	;'1'
  1333  00FF43  2C                 	db	44
  1334  00FF44  30                 	db	48	;'0'
  1335  00FF45  0D                 	db	13
  1336  00FF46  0A                 	db	10
  1337  00FF47  00                 	db	0
  1338  00FF48  41                 	db	65	;'A'
  1339  00FF49  54                 	db	84	;'T'
  1340  00FF4A  2B                 	db	43
  1341  00FF4B  48                 	db	72	;'H'
  1342  00FF4C  54                 	db	84	;'T'
  1343  00FF4D  54                 	db	84	;'T'
  1344  00FF4E  50                 	db	80	;'P'
  1345  00FF4F  53                 	db	83	;'S'
  1346  00FF50  53                 	db	83	;'S'
  1347  00FF51  4C                 	db	76	;'L'
  1348  00FF52  3D                 	db	61	;'='
  1349  00FF53  30                 	db	48	;'0'
  1350  00FF54  0D                 	db	13
  1351  00FF55  00                 	db	0
  1352  00FF56                     STR_10:
  1353  00FF56  41                 	db	65	;'A'
  1354  00FF57  54                 	db	84	;'T'
  1355  00FF58  2B                 	db	43
  1356  00FF59  53                 	db	83	;'S'
  1357  00FF5A  41                 	db	65	;'A'
  1358  00FF5B  50                 	db	80	;'P'
  1359  00FF5C  42                 	db	66	;'B'
  1360  00FF5D  52                 	db	82	;'R'
  1361  00FF5E  3D                 	db	61	;'='
  1362  00FF5F  31                 	db	49	;'1'
  1363  00FF60  2C                 	db	44
  1364  00FF61  31                 	db	49	;'1'
  1365  00FF62  0D                 	db	13
  1366  00FF63  00                 	db	0
  1367  00FF64                     STR_11:
  1368  00FF64  41                 	db	65	;'A'
  1369  00FF65  54                 	db	84	;'T'
  1370  00FF66  2B                 	db	43
  1371  00FF67  53                 	db	83	;'S'
  1372  00FF68  41                 	db	65	;'A'
  1373  00FF69  50                 	db	80	;'P'
  1374  00FF6A  42                 	db	66	;'B'
  1375  00FF6B  52                 	db	82	;'R'
  1376  00FF6C  3D                 	db	61	;'='
  1377  00FF6D  32                 	db	50	;'2'
  1378  00FF6E  2C                 	db	44
  1379  00FF6F  31                 	db	49	;'1'
  1380  00FF70  0D                 	db	13
  1381  00FF71  00                 	db	0
  1382  00FF72                     STR_13:
  1383  00FF72  41                 	db	65	;'A'
  1384  00FF73  54                 	db	84	;'T'
  1385  00FF74  2B                 	db	43
  1386  00FF75  48                 	db	72	;'H'
  1387  00FF76  54                 	db	84	;'T'
  1388  00FF77  54                 	db	84	;'T'
  1389  00FF78  50                 	db	80	;'P'
  1390  00FF79  53                 	db	83	;'S'
  1391  00FF7A  53                 	db	83	;'S'
  1392  00FF7B  4C                 	db	76	;'L'
  1393  00FF7C  3D                 	db	61	;'='
  1394  00FF7D  31                 	db	49	;'1'
  1395  00FF7E  0D                 	db	13
  1396  00FF7F  00                 	db	0
  1397  00FF80                     STR_2:
  1398  00FF80  41                 	db	65	;'A'
  1399  00FF81  54                 	db	84	;'T'
  1400  00FF82  2B                 	db	43
  1401  00FF83  49                 	db	73	;'I'
  1402  00FF84  50                 	db	80	;'P'
  1403  00FF85  52                 	db	82	;'R'
  1404  00FF86  3D                 	db	61	;'='
  1405  00FF87  39                 	db	57	;'9'
  1406  00FF88  36                 	db	54	;'6'
  1407  00FF89  30                 	db	48	;'0'
  1408  00FF8A  30                 	db	48	;'0'
  1409  00FF8B  0D                 	db	13
  1410  00FF8C  0A                 	db	10
  1411  00FF8D  00                 	db	0
  1412  00FF8E                     STR_17:
  1413  00FF8E  41                 	db	65	;'A'
  1414  00FF8F  54                 	db	84	;'T'
  1415  00FF90  2B                 	db	43
  1416  00FF91  48                 	db	72	;'H'
  1417  00FF92  54                 	db	84	;'T'
  1418  00FF93  54                 	db	84	;'T'
  1419  00FF94  50                 	db	80	;'P'
  1420  00FF95  52                 	db	82	;'R'
  1421  00FF96  45                 	db	69	;'E'
  1422  00FF97  41                 	db	65	;'A'
  1423  00FF98  44                 	db	68	;'D'
  1424  00FF99  0D                 	db	13
  1425  00FF9A  00                 	db	0
  1426  00FF9B                     STR_18:
  1427  00FF9B  41                 	db	65	;'A'
  1428  00FF9C  54                 	db	84	;'T'
  1429  00FF9D  2B                 	db	43
  1430  00FF9E  48                 	db	72	;'H'
  1431  00FF9F  54                 	db	84	;'T'
  1432  00FFA0  54                 	db	84	;'T'
  1433  00FFA1  50                 	db	80	;'P'
  1434  00FFA2  54                 	db	84	;'T'
  1435  00FFA3  45                 	db	69	;'E'
  1436  00FFA4  52                 	db	82	;'R'
  1437  00FFA5  4D                 	db	77	;'M'
  1438  00FFA6  0D                 	db	13
  1439  00FFA7  00                 	db	0
  1440  00FFA8                     STR_12:
  1441  00FFA8  41                 	db	65	;'A'
  1442  00FFA9  54                 	db	84	;'T'
  1443  00FFAA  2B                 	db	43
  1444  00FFAB  48                 	db	72	;'H'
  1445  00FFAC  54                 	db	84	;'T'
  1446  00FFAD  54                 	db	84	;'T'
  1447  00FFAE  50                 	db	80	;'P'
  1448  00FFAF  49                 	db	73	;'I'
  1449  00FFB0  4E                 	db	78	;'N'
  1450  00FFB1  49                 	db	73	;'I'
  1451  00FFB2  54                 	db	84	;'T'
  1452  00FFB3  0D                 	db	13
  1453  00FFB4  00                 	db	0
  1454  00FFB5                     STR_28:
  1455  00FFB5  4D                 	db	77	;'M'
  1456  00FFB6  61                 	db	97	;'a'
  1457  00FFB7  72                 	db	114	;'r'
  1458  00FFB8  20                 	db	32
  1459  00FFB9  31                 	db	49	;'1'
  1460  00FFBA  33                 	db	51	;'3'
  1461  00FFBB  20                 	db	32
  1462  00FFBC  32                 	db	50	;'2'
  1463  00FFBD  30                 	db	48	;'0'
  1464  00FFBE  32                 	db	50	;'2'
  1465  00FFBF  32                 	db	50	;'2'
  1466  00FFC0  00                 	db	0
  1467  00FFC1                     STR_4:
  1468  00FFC1  41                 	db	65	;'A'
  1469  00FFC2  54                 	db	84	;'T'
  1470  00FFC3  2B                 	db	43
  1471  00FFC4  43                 	db	67	;'C'
  1472  00FFC5  4D                 	db	77	;'M'
  1473  00FFC6  47                 	db	71	;'G'
  1474  00FFC7  52                 	db	82	;'R'
  1475  00FFC8  3D                 	db	61	;'='
  1476  00FFC9  31                 	db	49	;'1'
  1477  00FFCA  0D                 	db	13
  1478  00FFCB  0A                 	db	10
  1479  00FFCC  00                 	db	0
  1480  00FFCD                     STR_5:
  1481  00FFCD  41                 	db	65	;'A'
  1482  00FFCE  54                 	db	84	;'T'
  1483  00FFCF  2B                 	db	43
  1484  00FFD0  43                 	db	67	;'C'
  1485  00FFD1  4D                 	db	77	;'M'
  1486  00FFD2  47                 	db	71	;'G'
  1487  00FFD3  53                 	db	83	;'S'
  1488  00FFD4  3D                 	db	61	;'='
  1489  00FFD5  22                 	db	34
  1490  00FFD6  00                 	db	0
  1491  00FFD7                     STR_31:
  1492  00FFD7  28                 	db	40
  1493  00FFD8  6E                 	db	110	;'n'
  1494  00FFD9  75                 	db	117	;'u'
  1495  00FFDA  6C                 	db	108	;'l'
  1496  00FFDB  6C                 	db	108	;'l'
  1497  00FFDC  29                 	db	41
  1498  00FFDD  00                 	db	0
  1499  00FFDE                     STR_3:
  1500  00FFDE  41                 	db	65	;'A'
  1501  00FFDF  54                 	db	84	;'T'
  1502  00FFE0  45                 	db	69	;'E'
  1503  00FFE1  30                 	db	48	;'0'
  1504  00FFE2  0D                 	db	13
  1505  00FFE3  0A                 	db	10
  1506  00FFE4  00                 	db	0
  1507  00FFE5                     STR_1:
  1508  00FFE5  41                 	db	65	;'A'
  1509  00FFE6  54                 	db	84	;'T'
  1510  00FFE7  0D                 	db	13
  1511  00FFE8  0A                 	db	10
  1512  00FFE9  00                 	db	0
  1513  00FFEA  41                 	db	65	;'A'
  1514  00FFEB  54                 	db	84	;'T'
  1515  00FFEC  41                 	db	65	;'A'
  1516  00FFED  0D                 	db	13
  1517  00FFEE  00                 	db	0
  1518  00FFEF  41                 	db	65	;'A'
  1519  00FFF0  54                 	db	84	;'T'
  1520  00FFF1  48                 	db	72	;'H'
  1521  00FFF2  0D                 	db	13
  1522  00FFF3  00                 	db	0
  1523  00FFF4                     STR_24:
  1524  00FFF4  2E                 	db	46
  1525  00FFF5  00                 	db	0
  1526  0000                     
  1527                           ; #config settings
  1528  00FFF6  00                 	db	0	; dummy byte at the end
  1529  0000                     
  1530                           	psect	cinit
  1531  0027F0                     __pcinit:
  1532                           	opt stack 0
  1533  0027F0                     start_initialization:
  1534                           	opt stack 0
  1535  0027F0                     __initialization:
  1536                           	opt stack 0
  1537                           
  1538                           ; Initialize objects allocated to BANK5 (80 bytes)
  1539                           ; load TBLPTR registers with __pidataBANK5
  1540  0027F0  0ECE               	movlw	low __pidataBANK5
  1541  0027F2  6EF6               	movwf	tblptrl,c
  1542  0027F4  0E54               	movlw	high __pidataBANK5
  1543  0027F6  6EF7               	movwf	tblptrh,c
  1544  0027F8  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1545  0027FA  6EF8               	movwf	tblptru,c
  1546  0027FC  EE05  F090         	lfsr	0,__pdataBANK5
  1547  002800  EE10 F050          	lfsr	1,80
  1548  002804                     copy_data0:
  1549  002804  0009               	tblrd		*+
  1550  002806  CFF5 FFEE          	movff	tablat,postinc0
  1551  00280A  50E5               	movf	postdec1,w,c
  1552  00280C  50E1               	movf	fsr1l,w,c
  1553  00280E  E1FA               	bnz	copy_data0
  1554                           
  1555                           ; Initialize objects allocated to BANK3 (66 bytes)
  1556                           ; load TBLPTR registers with __pidataBANK3
  1557  002810  0E84               	movlw	low __pidataBANK3
  1558  002812  6EF6               	movwf	tblptrl,c
  1559  002814  0E58               	movlw	high __pidataBANK3
  1560  002816  6EF7               	movwf	tblptrh,c
  1561  002818  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1562  00281A  6EF8               	movwf	tblptru,c
  1563  00281C  EE03  F0BC         	lfsr	0,__pdataBANK3
  1564  002820  EE10 F042          	lfsr	1,66
  1565  002824                     copy_data1:
  1566  002824  0009               	tblrd		*+
  1567  002826  CFF5 FFEE          	movff	tablat,postinc0
  1568  00282A  50E5               	movf	postdec1,w,c
  1569  00282C  50E1               	movf	fsr1l,w,c
  1570  00282E  E1FA               	bnz	copy_data1
  1571                           
  1572                           ; Initialize objects allocated to BANK2 (14 bytes)
  1573                           ; load TBLPTR registers with __pidataBANK2
  1574  002830  0E28               	movlw	low __pidataBANK2
  1575  002832  6EF6               	movwf	tblptrl,c
  1576  002834  0E61               	movlw	high __pidataBANK2
  1577  002836  6EF7               	movwf	tblptrh,c
  1578  002838  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1579  00283A  6EF8               	movwf	tblptru,c
  1580  00283C  EE02  F0F1         	lfsr	0,__pdataBANK2
  1581  002840  EE10 F00E          	lfsr	1,14
  1582  002844                     copy_data2:
  1583  002844  0009               	tblrd		*+
  1584  002846  CFF5 FFEE          	movff	tablat,postinc0
  1585  00284A  50E5               	movf	postdec1,w,c
  1586  00284C  50E1               	movf	fsr1l,w,c
  1587  00284E  E1FA               	bnz	copy_data2
  1588                           
  1589                           ; Initialize objects allocated to BANK1 (1 bytes)
  1590                           ; load TBLPTR registers with __pidataBANK1
  1591  002850  0EB2               	movlw	low __pidataBANK1
  1592  002852  6EF6               	movwf	tblptrl,c
  1593  002854  0E61               	movlw	high __pidataBANK1
  1594  002856  6EF7               	movwf	tblptrh,c
  1595  002858  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1596  00285A  6EF8               	movwf	tblptru,c
  1597  00285C  0009               	tblrd		*+	;fetch initializer
  1598  00285E  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1599                           
  1600                           ; Initialize objects allocated to BANK4 (24 bytes)
  1601                           ; load TBLPTR registers with __pidataBANK4
  1602  002862  0EE8               	movlw	low __pidataBANK4
  1603  002864  6EF6               	movwf	tblptrl,c
  1604  002866  0E5F               	movlw	high __pidataBANK4
  1605  002868  6EF7               	movwf	tblptrh,c
  1606  00286A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1607  00286C  6EF8               	movwf	tblptru,c
  1608  00286E  EE04  F0E2         	lfsr	0,__pdataBANK4
  1609  002872  EE10 F018          	lfsr	1,24
  1610  002876                     copy_data3:
  1611  002876  0009               	tblrd		*+
  1612  002878  CFF5 FFEE          	movff	tablat,postinc0
  1613  00287C  50E5               	movf	postdec1,w,c
  1614  00287E  50E1               	movf	fsr1l,w,c
  1615  002880  E1FA               	bnz	copy_data3
  1616                           
  1617                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1618  002882  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1619  002886  EE13 F020          	lfsr	1,800
  1620  00288A                     clear_0:
  1621  00288A  6AEE               	clrf	postinc0,c
  1622  00288C  50E5               	movf	postdec1,w,c
  1623  00288E  50E1               	movf	fsr1l,w,c
  1624  002890  E1FC               	bnz	clear_0
  1625  002892  50E2               	movf	fsr1h,w,c
  1626  002894  E1FA               	bnz	clear_0
  1627                           
  1628                           ; Clear objects allocated to BANK9 (200 bytes)
  1629  002896  EE09  F000         	lfsr	0,__pbssBANK9
  1630  00289A  0EC8               	movlw	200
  1631  00289C                     clear_1:
  1632  00289C  6AEE               	clrf	postinc0,c
  1633  00289E  06E8               	decf	wreg,f,c
  1634  0028A0  E1FD               	bnz	clear_1
  1635                           
  1636                           ; Clear objects allocated to BANK8 (200 bytes)
  1637  0028A2  EE08  F000         	lfsr	0,__pbssBANK8
  1638  0028A6  0EC8               	movlw	200
  1639  0028A8                     clear_2:
  1640  0028A8  6AEE               	clrf	postinc0,c
  1641  0028AA  06E8               	decf	wreg,f,c
  1642  0028AC  E1FD               	bnz	clear_2
  1643                           
  1644                           ; Clear objects allocated to BANK7 (246 bytes)
  1645  0028AE  EE07  F000         	lfsr	0,__pbssBANK7
  1646  0028B2  0EF6               	movlw	246
  1647  0028B4                     clear_3:
  1648  0028B4  6AEE               	clrf	postinc0,c
  1649  0028B6  06E8               	decf	wreg,f,c
  1650  0028B8  E1FD               	bnz	clear_3
  1651                           
  1652                           ; Clear objects allocated to BANK6 (220 bytes)
  1653  0028BA  EE06  F000         	lfsr	0,__pbssBANK6
  1654  0028BE  0EDC               	movlw	220
  1655  0028C0                     clear_4:
  1656  0028C0  6AEE               	clrf	postinc0,c
  1657  0028C2  06E8               	decf	wreg,f,c
  1658  0028C4  E1FD               	bnz	clear_4
  1659                           
  1660                           ; Clear objects allocated to BANK5 (144 bytes)
  1661  0028C6  EE05  F000         	lfsr	0,__pbssBANK5
  1662  0028CA  0E90               	movlw	144
  1663  0028CC                     clear_5:
  1664  0028CC  6AEE               	clrf	postinc0,c
  1665  0028CE  06E8               	decf	wreg,f,c
  1666  0028D0  E1FD               	bnz	clear_5
  1667                           
  1668                           ; Clear objects allocated to BANK3 (188 bytes)
  1669  0028D2  EE03  F000         	lfsr	0,__pbssBANK3
  1670  0028D6  0EBC               	movlw	188
  1671  0028D8                     clear_6:
  1672  0028D8  6AEE               	clrf	postinc0,c
  1673  0028DA  06E8               	decf	wreg,f,c
  1674  0028DC  E1FD               	bnz	clear_6
  1675                           
  1676                           ; Clear objects allocated to BANK2 (41 bytes)
  1677  0028DE  EE02  F0C8         	lfsr	0,__pbssBANK2
  1678  0028E2  0E29               	movlw	41
  1679  0028E4                     clear_7:
  1680  0028E4  6AEE               	clrf	postinc0,c
  1681  0028E6  06E8               	decf	wreg,f,c
  1682  0028E8  E1FD               	bnz	clear_7
  1683                           
  1684                           ; Clear objects allocated to BANK1 (54 bytes)
  1685  0028EA  EE01  F0C9         	lfsr	0,__pbssBANK1
  1686  0028EE  0E36               	movlw	54
  1687  0028F0                     clear_8:
  1688  0028F0  6AEE               	clrf	postinc0,c
  1689  0028F2  06E8               	decf	wreg,f,c
  1690  0028F4  E1FD               	bnz	clear_8
  1691                           
  1692                           ; Clear objects allocated to BANK4 (162 bytes)
  1693  0028F6  EE04  F040         	lfsr	0,__pbssBANK4
  1694  0028FA  0EA2               	movlw	162
  1695  0028FC                     clear_9:
  1696  0028FC  6AEE               	clrf	postinc0,c
  1697  0028FE  06E8               	decf	wreg,f,c
  1698  002900  E1FD               	bnz	clear_9
  1699                           
  1700                           ; Clear objects allocated to BANK0 (40 bytes)
  1701  002902  EE00  F0B8         	lfsr	0,__pbssBANK0
  1702  002906  0E28               	movlw	40
  1703  002908                     clear_10:
  1704  002908  6AEE               	clrf	postinc0,c
  1705  00290A  06E8               	decf	wreg,f,c
  1706  00290C  E1FD               	bnz	clear_10
  1707                           
  1708                           ; Clear objects allocated to COMRAM (31 bytes)
  1709  00290E  EE00  F023         	lfsr	0,__pbssCOMRAM
  1710  002912  0E1F               	movlw	31
  1711  002914                     clear_11:
  1712  002914  6AEE               	clrf	postinc0,c
  1713  002916  06E8               	decf	wreg,f,c
  1714  002918  E1FD               	bnz	clear_11
  1715  00291A                     end_of_initialization:
  1716                           	opt stack 0
  1717  00291A                     __end_of__initialization:
  1718                           	opt stack 0
  1719  00291A  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1720  00291C  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1721  00291E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1722  002920  6EF8               	movwf	tblptru,c
  1723  002922  0100               	movlb	0
  1724  002924  EFA2  F030         	goto	_main	;jump to C main() function
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           postdec1	equ	0xFE5
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           
  1735                           	psect	bssCOMRAM
  1736  000023                     __pbssCOMRAM:
  1737                           	opt stack 0
  1738  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1739                           	opt stack 0
  1740  000023                     	ds	2
  1741  000025                     _USBDeferOUTDataStagePackets:
  1742                           	opt stack 0
  1743  000025                     	ds	1
  1744  000026                     _USBDeferINDataStagePackets:
  1745                           	opt stack 0
  1746  000026                     	ds	1
  1747  000027                     _USBStatusStageEnabledFlag2:
  1748                           	opt stack 0
  1749  000027                     	ds	1
  1750  000028                     _USBStatusStageEnabledFlag1:
  1751                           	opt stack 0
  1752  000028                     	ds	1
  1753  000029                     _USBStatusStageTimeoutCounter:
  1754                           	opt stack 0
  1755  000029                     	ds	1
  1756  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1757                           	opt stack 0
  1758  00002A                     	ds	1
  1759  00002B                     RiSm@MdmDrvState:
  1760                           	opt stack 0
  1761  00002B                     	ds	1
  1762  00002C                     _Mmd_RingIndicator:
  1763                           	opt stack 0
  1764  00002C                     	ds	1
  1765  00002D                     I2c_ReadData@ReadStatus:
  1766                           	opt stack 0
  1767  00002D                     	ds	1
  1768  00002E                     I2c_ReadData@TentativeCounter:
  1769                           	opt stack 0
  1770  00002E                     	ds	1
  1771  00002F                     I2c_ReadData@DataCounter:
  1772                           	opt stack 0
  1773  00002F                     	ds	1
  1774  000030                     I2c_ReadData@I2cReadState:
  1775                           	opt stack 0
  1776  000030                     	ds	1
  1777  000031                     I2c_WriteData@WriteStatus:
  1778                           	opt stack 0
  1779  000031                     	ds	1
  1780  000032                     I2c_WriteData@TentativeCounter:
  1781                           	opt stack 0
  1782  000032                     	ds	1
  1783  000033                     I2c_WriteData@I2cNextState:
  1784                           	opt stack 0
  1785  000033                     	ds	1
  1786  000034                     I2c_WriteData@I2cWriteState:
  1787                           	opt stack 0
  1788  000034                     	ds	1
  1789  000035                     _I2cReadDataEvt:
  1790                           	opt stack 0
  1791  000035                     	ds	1
  1792  000036                     _InitNetwork:
  1793                           	opt stack 0
  1794  000036                     	ds	1
  1795  000037                     _SmsTxtReady:
  1796                           	opt stack 0
  1797  000037                     	ds	1
  1798  000038                     _GetSmsText:
  1799                           	opt stack 0
  1800  000038                     	ds	1
  1801  000039                     _SmsEvent:
  1802                           	opt stack 0
  1803  000039                     	ds	1
  1804  00003A                     _NewStringMdmTerminal:
  1805                           	opt stack 0
  1806  00003A                     	ds	1
  1807  00003B                     _NewMdmEvtParserRequest:
  1808                           	opt stack 0
  1809  00003B                     	ds	1
  1810  00003C                     _NewStringReceived:
  1811                           	opt stack 0
  1812  00003C                     	ds	1
  1813  00003D                     _MdmResetRequest:
  1814                           	opt stack 0
  1815  00003D                     	ds	1
  1816  00003E                     _CallClosedEvent:
  1817                           	opt stack 0
  1818  00003E                     	ds	1
  1819  00003F                     _IncomingCallEvent:
  1820                           	opt stack 0
  1821  00003F                     	ds	1
  1822  000040                     _NewSmsEvent:
  1823                           	opt stack 0
  1824  000040                     	ds	1
  1825  000041                     _ActivateRiDetection:
  1826                           	opt stack 0
  1827  000041                     	ds	1
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           
  1838                           	psect	bssBANK0
  1839  0000B8                     __pbssBANK0:
  1840                           	opt stack 0
  1841  0000B8                     _inPipes:
  1842                           	opt stack 0
  1843  0000B8                     	ds	6
  1844  0000BE                     _pBDTEntryIn:
  1845                           	opt stack 0
  1846  0000BE                     	ds	6
  1847  0000C4                     _CDCDataOutHandle:
  1848                           	opt stack 0
  1849  0000C4                     	ds	2
  1850  0000C6                     _pBDTEntryEP0OutNext:
  1851                           	opt stack 0
  1852  0000C6                     	ds	2
  1853  0000C8                     _pBDTEntryEP0OutCurrent:
  1854                           	opt stack 0
  1855  0000C8                     	ds	2
  1856  0000CA                     _RxLen:
  1857                           	opt stack 0
  1858  0000CA                     	ds	2
  1859  0000CC                     _cdc_tx_len:
  1860                           	opt stack 0
  1861  0000CC                     	ds	1
  1862  0000CD                     _cdc_trf_state:
  1863                           	opt stack 0
  1864  0000CD                     	ds	1
  1865  0000CE                     _cdc_rx_len:
  1866                           	opt stack 0
  1867  0000CE                     	ds	1
  1868  0000CF                     _USBDeferStatusStagePacket:
  1869                           	opt stack 0
  1870  0000CF                     	ds	1
  1871  0000D0                     _endpoint_number:
  1872                           	opt stack 0
  1873  0000D0                     	ds	1
  1874  0000D1                     _controlTransferState:
  1875                           	opt stack 0
  1876  0000D1                     	ds	1
  1877  0000D2                     _shortPacketStatus:
  1878                           	opt stack 0
  1879  0000D2                     	ds	1
  1880  0000D3                     _USBDeviceState:
  1881                           	opt stack 0
  1882  0000D3                     	ds	1
  1883  0000D4                     _I2cComSts:
  1884                           	opt stack 0
  1885  0000D4                     	ds	1
  1886  0000D5                     HttpGetMethod@GetMethodNextState:
  1887                           	opt stack 0
  1888  0000D5                     	ds	1
  1889  0000D6                     _MdmStatus:
  1890                           	opt stack 0
  1891  0000D6                     	ds	1
  1892  0000D7                     _PhoneNumbLen:
  1893                           	opt stack 0
  1894  0000D7                     	ds	1
  1895  0000D8                     _SmsLen:
  1896                           	opt stack 0
  1897  0000D8                     	ds	1
  1898  0000D9                     _SystemState:
  1899                           	opt stack 0
  1900  0000D9                     	ds	1
  1901  0000DA                     _USTATcopy:
  1902                           	opt stack 0
  1903  0000DA                     	ds	1
  1904  0000DB                     _USBActiveConfiguration:
  1905                           	opt stack 0
  1906  0000DB                     	ds	1
  1907  0000DC                     _I2cWriteDataEvt:
  1908                           	opt stack 0
  1909  0000DC                     	ds	1
  1910  0000DD                     _RingEvent:
  1911                           	opt stack 0
  1912  0000DD                     	ds	1
  1913  0000DE                     _SendSmsEvent:
  1914                           	opt stack 0
  1915  0000DE                     	ds	1
  1916  0000DF                     _MdmOnOffPulseRequest:
  1917                           	opt stack 0
  1918  0000DF                     	ds	1
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           postdec1	equ	0xFE5
  1926                           fsr1h	equ	0xFE2
  1927                           fsr1l	equ	0xFE1
  1928                           
  1929                           	psect	bssBANK1
  1930  0001C9                     __pbssBANK1:
  1931                           	opt stack 0
  1932  0001C9                     _outPipes:
  1933                           	opt stack 0
  1934  0001C9                     	ds	8
  1935  0001D1                     _CDCDataInHandle:
  1936                           	opt stack 0
  1937  0001D1                     	ds	2
  1938  0001D3                     MyApp_Task@blinkSeconds:
  1939                           	opt stack 0
  1940  0001D3                     	ds	1
  1941  0001D4                     initGprsModem@initMdm:
  1942                           	opt stack 0
  1943  0001D4                     	ds	1
  1944  0001D5                     initGprsModem@isInitialized:
  1945                           	opt stack 0
  1946  0001D5                     	ds	1
  1947  0001D6                     	ds	1
  1948  0001D7                     GsmGprsTerminal@SMS:
  1949                           	opt stack 0
  1950  0001D7                     	ds	1
  1951  0001D8                     	ds	1
  1952  0001D9                     _control_signal_bitmap:
  1953                           	opt stack 0
  1954  0001D9                     	ds	1
  1955  0001DA                     _cdc_mem_type:
  1956                           	opt stack 0
  1957  0001DA                     	ds	1
  1958  0001DB                     _USBTicksSinceSuspendEnd:
  1959                           	opt stack 0
  1960  0001DB                     	ds	1
  1961  0001DC                     _BothEP0OutUOWNsSet:
  1962                           	opt stack 0
  1963  0001DC                     	ds	1
  1964  0001DD                     _USBBusIsSuspended:
  1965                           	opt stack 0
  1966  0001DD                     	ds	1
  1967  0001DE                     _RemoteWakeup:
  1968                           	opt stack 0
  1969  0001DE                     	ds	1
  1970  0001DF                     I2cSlv_QueryI2cData@Ret:
  1971                           	opt stack 0
  1972  0001DF                     	ds	1
  1973  0001E0                     I2cSlv_QueryI2cData@I2cOpState:
  1974                           	opt stack 0
  1975  0001E0                     	ds	1
  1976  0001E1                     I2cSendMsgSm@I2cComState:
  1977                           	opt stack 0
  1978  0001E1                     	ds	1
  1979  0001E2                     _I2cBusStatus:
  1980                           	opt stack 0
  1981  0001E2                     	ds	1
  1982  0001E3                     HttpGetMethod@GetMOutSts:
  1983                           	opt stack 0
  1984  0001E3                     	ds	1
  1985  0001E4                     HttpGetMethod@GetMethodState:
  1986                           	opt stack 0
  1987  0001E4                     	ds	1
  1988  0001E5                     InitGprsNetwork@GprsNetInitState:
  1989                           	opt stack 0
  1990  0001E5                     	ds	1
  1991  0001E6                     _PostMethod:
  1992                           	opt stack 0
  1993  0001E6                     	ds	1
  1994  0001E7                     _HttpGetMethodSts:
  1995                           	opt stack 0
  1996  0001E7                     	ds	1
  1997  0001E8                     _GprsNetworkSts:
  1998                           	opt stack 0
  1999  0001E8                     	ds	1
  2000  0001E9                     _ApnLenLocal:
  2001                           	opt stack 0
  2002  0001E9                     	ds	1
  2003  0001EA                     SendSmsSm@SendSms_NextState:
  2004                           	opt stack 0
  2005  0001EA                     	ds	1
  2006  0001EB                     SendSmsSm@SendSms_State:
  2007                           	opt stack 0
  2008  0001EB                     	ds	1
  2009  0001EC                     GetSmsSm@GetSmsState:
  2010                           	opt stack 0
  2011  0001EC                     	ds	1
  2012  0001ED                     ConfigureModem@NextState:
  2013                           	opt stack 0
  2014  0001ED                     	ds	1
  2015  0001EE                     ConfigureModem@MdmConfigState:
  2016                           	opt stack 0
  2017  0001EE                     	ds	1
  2018  0001EF                     TurnOnModem@TurnOnMdmState:
  2019                           	opt stack 0
  2020  0001EF                     	ds	1
  2021  0001F0                     CheckModem@CheckMdmSts:
  2022                           	opt stack 0
  2023  0001F0                     	ds	1
  2024  0001F1                     _ComChecCompleted:
  2025                           	opt stack 0
  2026  0001F1                     	ds	1
  2027  0001F2                     Uart_Uart1RxIsr@UartRxData:
  2028                           	opt stack 0
  2029  0001F2                     	ds	1
  2030  0001F3                     Uart_MdmGsmGprsReadService@RxState:
  2031                           	opt stack 0
  2032  0001F3                     	ds	1
  2033  0001F4                     MdmCntSm@MdmCntState:
  2034                           	opt stack 0
  2035  0001F4                     	ds	1
  2036  0001F5                     _AlarmEvent:
  2037                           	opt stack 0
  2038  0001F5                     	ds	1
  2039  0001F6                     _Led3OutSts:
  2040                           	opt stack 0
  2041  0001F6                     	ds	1
  2042  0001F7                     _Led3Sts:
  2043                           	opt stack 0
  2044  0001F7                     	ds	1
  2045  0001F8                     _Led2OutSts:
  2046                           	opt stack 0
  2047  0001F8                     	ds	1
  2048  0001F9                     _Led2Sts:
  2049                           	opt stack 0
  2050  0001F9                     	ds	1
  2051  0001FA                     _Led1OutSts:
  2052                           	opt stack 0
  2053  0001FA                     	ds	1
  2054  0001FB                     _Led1Sts:
  2055                           	opt stack 0
  2056  0001FB                     	ds	1
  2057  0001FC                     I2cDummyTx@DummyBuffer:
  2058                           	opt stack 0
  2059  0001FC                     	ds	1
  2060  0001FD                     _GetMethod:
  2061                           	opt stack 0
  2062  0001FD                     	ds	1
  2063  0001FE                     _MdmStsReady:
  2064                           	opt stack 0
  2065  0001FE                     	ds	1
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1h	equ	0xFE2
  2074                           fsr1l	equ	0xFE1
  2075                           
  2076                           	psect	dataBANK1
  2077  0001FF                     __pdataBANK1:
  2078                           	opt stack 0
  2079  0001FF                     InitGprsNetwork@GprsInitSts:
  2080                           	opt stack 0
  2081  0001FF                     	ds	1
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           
  2092                           	psect	bssBANK2
  2093  0002C8                     __pbssBANK2:
  2094                           	opt stack 0
  2095  0002C8                     _pCDCDst:
  2096                           	opt stack 0
  2097  0002C8                     	ds	3
  2098  0002CB                     _pCDCSrc:
  2099                           	opt stack 0
  2100  0002CB                     	ds	3
  2101  0002CE                     _ep_data_out:
  2102                           	opt stack 0
  2103  0002CE                     	ds	3
  2104  0002D1                     _ep_data_in:
  2105                           	opt stack 0
  2106  0002D1                     	ds	3
  2107  0002D4                     _pDst:
  2108                           	opt stack 0
  2109  0002D4                     	ds	2
  2110  0002D6                     MdmCntSm@Counter:
  2111                           	opt stack 0
  2112  0002D6                     	ds	2
  2113  0002D8                     _ExtInt0IsrCallback:
  2114                           	opt stack 0
  2115  0002D8                     	ds	2
  2116  0002DA                     _RtccIsrCallback:
  2117                           	opt stack 0
  2118  0002DA                     	ds	2
  2119  0002DC                     _Tmr4IsrCallback:
  2120                           	opt stack 0
  2121  0002DC                     	ds	2
  2122  0002DE                     _Tmr2IsrCallback:
  2123                           	opt stack 0
  2124  0002DE                     	ds	2
  2125  0002E0                     	ds	1
  2126  0002E1                     	ds	1
  2127  0002E2                     	ds	1
  2128  0002E3                     	ds	1
  2129  0002E4                     	ds	1
  2130  0002E5                     	ds	1
  2131  0002E6                     	ds	1
  2132  0002E7                     	ds	1
  2133  0002E8                     	ds	1
  2134  0002E9                     	ds	1
  2135  0002EA                     Term_MainSm@TermMainSmState:
  2136                           	opt stack 0
  2137  0002EA                     	ds	1
  2138  0002EB                     Terminal@FormatOption:
  2139                           	opt stack 0
  2140  0002EB                     	ds	1
  2141  0002EC                     Terminal@SlaveAddr:
  2142                           	opt stack 0
  2143  0002EC                     	ds	1
  2144  0002ED                     Terminal@PackageLen:
  2145                           	opt stack 0
  2146  0002ED                     	ds	1
  2147  0002EE                     Terminal@TermState:
  2148                           	opt stack 0
  2149  0002EE                     	ds	1
  2150  0002EF                     _USBAlternateInterface:
  2151                           	opt stack 0
  2152  0002EF                     	ds	2
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           postdec1	equ	0xFE5
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           
  2163                           	psect	dataBANK2
  2164  0002F1                     __pdataBANK2:
  2165                           	opt stack 0
  2166  0002F1                     	ds	1
  2167  0002F2                     Terminal@EchoOption:
  2168                           	opt stack 0
  2169  0002F2                     	ds	1
  2170  0002F3                     _MainSystemTimebaseFlag:
  2171                           	opt stack 0
  2172  0002F3                     	ds	1
  2173  0002F4                     _ConnTimeout:
  2174                           	opt stack 0
  2175  0002F4                     	ds	11
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           postdec1	equ	0xFE5
  2183                           fsr1h	equ	0xFE2
  2184                           fsr1l	equ	0xFE1
  2185                           
  2186                           	psect	bssBANK3
  2187  000300                     __pbssBANK3:
  2188                           	opt stack 0
  2189  000300                     _Rtcm_SystemDate:
  2190                           	opt stack 0
  2191  000300                     	ds	8
  2192  000308                     _Rtcm_RtccAlarm:
  2193                           	opt stack 0
  2194  000308                     	ds	6
  2195  00030E                     _pBDTEntryOut:
  2196                           	opt stack 0
  2197  00030E                     	ds	6
  2198  000314                     _BaudRateGen:
  2199                           	opt stack 0
  2200  000314                     	ds	4
  2201  000318                     _USB1msTickCount:
  2202                           	opt stack 0
  2203  000318                     	ds	4
  2204  00031C                     _OsTmr_OsTickCounter:
  2205                           	opt stack 0
  2206  00031C                     	ds	4
  2207  000320                     MyApp_Task@F8998:
  2208                           	opt stack 0
  2209  000320                     	ds	2
  2210  000322                     	ds	2
  2211  000324                     _PhoneNumberLen:
  2212                           	opt stack 0
  2213  000324                     	ds	2
  2214  000326                     _ApnLocal:
  2215                           	opt stack 0
  2216  000326                     	ds	2
  2217  000328                     ConfigureModem@DelayCounter:
  2218                           	opt stack 0
  2219  000328                     	ds	2
  2220  00032A                     ConfigureModem@DelayValueMs:
  2221                           	opt stack 0
  2222  00032A                     	ds	2
  2223  00032C                     TurnOnModem@Counter:
  2224                           	opt stack 0
  2225  00032C                     	ds	2
  2226  00032E                     UpdateSchFlag@InterruptCounter:
  2227                           	opt stack 0
  2228  00032E                     	ds	2
  2229  000330                     RiSm@Counter:
  2230                           	opt stack 0
  2231  000330                     	ds	2
  2232  000332                     _ExtInt1IsrCallback:
  2233                           	opt stack 0
  2234  000332                     	ds	2
  2235  000334                     _UartConfig:
  2236                           	opt stack 0
  2237  000334                     	ds	21
  2238  000349                     I2cSlv_QueryI2cData@TimeoutTimer:
  2239                           	opt stack 0
  2240  000349                     	ds	11
  2241  000354                     _I2cConfig:
  2242                           	opt stack 0
  2243  000354                     	ds	10
  2244  00035E                     _Led3Blink:
  2245                           	opt stack 0
  2246  00035E                     	ds	9
  2247  000367                     _Led2Blink:
  2248                           	opt stack 0
  2249  000367                     	ds	9
  2250  000370                     _Led1Blink:
  2251                           	opt stack 0
  2252  000370                     	ds	9
  2253  000379                     _dummy_encapsulated_cmd_response:
  2254                           	opt stack 0
  2255  000379                     	ds	8
  2256  000381                     _line_coding:
  2257                           	opt stack 0
  2258  000381                     	ds	7
  2259  000388                     _Led3Pulse:
  2260                           	opt stack 0
  2261  000388                     	ds	6
  2262  00038E                     _Led2Pulse:
  2263                           	opt stack 0
  2264  00038E                     	ds	6
  2265  000394                     _Led1Pulse:
  2266                           	opt stack 0
  2267  000394                     	ds	6
  2268  00039A                     _I2cRxPacket:
  2269                           	opt stack 0
  2270  00039A                     	ds	6
  2271  0003A0                     _I2cTxPacket:
  2272                           	opt stack 0
  2273  0003A0                     	ds	5
  2274  0003A5                     _HttpGetDataLocal:
  2275                           	opt stack 0
  2276  0003A5                     	ds	5
  2277  0003AA                     Terminal@Addr:
  2278                           	opt stack 0
  2279  0003AA                     	ds	4
  2280  0003AE                     Terminal@Len:
  2281                           	opt stack 0
  2282  0003AE                     	ds	4
  2283  0003B2                     _AlCfg:
  2284                           	opt stack 0
  2285  0003B2                     	ds	4
  2286  0003B6                     _RtcConfig:
  2287                           	opt stack 0
  2288  0003B6                     	ds	4
  2289  0003BA                     initGprsModem@modemCounter:
  2290                           	opt stack 0
  2291  0003BA                     	ds	2
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1h	equ	0xFE2
  2300                           fsr1l	equ	0xFE1
  2301                           
  2302                           	psect	dataBANK3
  2303  0003BC                     __pdataBANK3:
  2304                           	opt stack 0
  2305  0003BC                     ModemEvtParser@F9089:
  2306                           	opt stack 0
  2307  0003BC                     	ds	5
  2308  0003C1                     ModemEvtParser@F9087:
  2309                           	opt stack 0
  2310  0003C1                     	ds	4
  2311  0003C5                     MyApp_Task@F9008:
  2312                           	opt stack 0
  2313  0003C5                     	ds	3
  2314  0003C8                     MyApp_Task@F8995:
  2315                           	opt stack 0
  2316  0003C8                     	ds	2
  2317  0003CA                     MyApp_Task@F8992:
  2318                           	opt stack 0
  2319  0003CA                     	ds	2
  2320  0003CC                     	ds	2
  2321  0003CE                     triggerRelay@F8967:
  2322                           	opt stack 0
  2323  0003CE                     	ds	2
  2324  0003D0                     Term_MainSm@TermDelay:
  2325                           	opt stack 0
  2326  0003D0                     	ds	11
  2327  0003DB                     _ConnWait:
  2328                           	opt stack 0
  2329  0003DB                     	ds	11
  2330  0003E6                     SendSmsSm@SwTimer:
  2331                           	opt stack 0
  2332  0003E6                     	ds	11
  2333  0003F1                     CheckModem@Timeout:
  2334                           	opt stack 0
  2335  0003F1                     	ds	11
  2336  0003FC                     MyApp_Task@blickTicks:
  2337                           	opt stack 0
  2338  0003FC                     	ds	2
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           
  2349                           	psect	bssBANK4
  2350  000440                     __pbssBANK4:
  2351                           	opt stack 0
  2352  000440                     	ds	10
  2353  00044A                     _cdc_notice:
  2354                           	opt stack 0
  2355  00044A                     	ds	10
  2356  000454                     Term_MainSm@Data:
  2357                           	opt stack 0
  2358  000454                     	ds	50
  2359  000486                     Terminal@TermRxBuffer:
  2360                           	opt stack 0
  2361  000486                     	ds	50
  2362  0004B8                     _PhoneNumber:
  2363                           	opt stack 0
  2364  0004B8                     	ds	20
  2365  0004CC                     Terminal@SwTimer:
  2366                           	opt stack 0
  2367  0004CC                     	ds	11
  2368  0004D7                     I2cSlv_QueryI2cData@QueryTimer:
  2369                           	opt stack 0
  2370  0004D7                     	ds	11
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postdec1	equ	0xFE5
  2378                           fsr1h	equ	0xFE2
  2379                           fsr1l	equ	0xFE1
  2380                           
  2381                           	psect	dataBANK4
  2382  0004E2                     __pdataBANK4:
  2383                           	opt stack 0
  2384  0004E2                     MyApp_Task@F9001:
  2385                           	opt stack 0
  2386  0004E2                     	ds	14
  2387  0004F0                     ModemEvtParser@F9091:
  2388                           	opt stack 0
  2389  0004F0                     	ds	10
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postdec1	equ	0xFE5
  2397                           fsr1h	equ	0xFE2
  2398                           fsr1l	equ	0xFE1
  2399                           
  2400                           	psect	bssBANK5
  2401  000500                     __pbssBANK5:
  2402                           	opt stack 0
  2403  000500                     Terminal@Payload:
  2404                           	opt stack 0
  2405  000500                     	ds	80
  2406  000550                     _cdc_data_rx:
  2407                           	opt stack 0
  2408  000550                     	ds	64
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           postdec1	equ	0xFE5
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           
  2419                           	psect	dataBANK5
  2420  000590                     __pdataBANK5:
  2421                           	opt stack 0
  2422  000590                     _TaskTable:
  2423                           	opt stack 0
  2424  000590                     	ds	80
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           postdec1	equ	0xFE5
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           
  2435                           	psect	bssBANK6
  2436  000600                     __pbssBANK6:
  2437                           	opt stack 0
  2438  000600                     _OsAlarms:
  2439                           	opt stack 0
  2440  000600                     	ds	220
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           
  2451                           	psect	bssBANK7
  2452  000700                     __pbssBANK7:
  2453                           	opt stack 0
  2454  000700                     _Mdm_SmsRx:
  2455                           	opt stack 0
  2456  000700                     	ds	132
  2457  000784                     _cdc_data_tx:
  2458                           	opt stack 0
  2459  000784                     	ds	64
  2460  0007C4                     _MessageText:
  2461                           	opt stack 0
  2462  0007C4                     	ds	50
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           
  2473                           	psect	bssBANK8
  2474  000800                     __pbssBANK8:
  2475                           	opt stack 0
  2476  000800                     GsmGprsTerminal@UsbBuffer:
  2477                           	opt stack 0
  2478  000800                     	ds	200
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1h	equ	0xFE2
  2487                           fsr1l	equ	0xFE1
  2488                           
  2489                           	psect	bssBANK9
  2490  000900                     __pbssBANK9:
  2491                           	opt stack 0
  2492  000900                     GsmGprsTerminal@UartBuffer:
  2493                           	opt stack 0
  2494  000900                     	ds	200
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1h	equ	0xFE2
  2503                           fsr1l	equ	0xFE1
  2504                           
  2505                           	psect	bssBIGRAMl
  2506  000AC8                     __pbssBIGRAMl:
  2507                           	opt stack 0
  2508  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2509                           	opt stack 0
  2510  000AC8                     	ds	400
  2511  000C58                     _RxBuffer:
  2512                           	opt stack 0
  2513  000C58                     	ds	400
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           fsr1h	equ	0xFE2
  2522                           fsr1l	equ	0xFE1
  2523                           
  2524                           	psect	cstackBANK10
  2525  000A00                     __pcstackBANK10:
  2526                           	opt stack 0
  2527  000A00                     Terminal@UsbRxBuffer:
  2528                           	opt stack 0
  2529                           
  2530                           ; 200 bytes @ 0x0
  2531  000A00                     	ds	200
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           
  2542                           	psect	cstackBANK2
  2543  000200                     __pcstackBANK2:
  2544                           	opt stack 0
  2545  000200                     Terminal@UsbTxBuffer:
  2546                           	opt stack 0
  2547                           
  2548                           ; 200 bytes @ 0x0
  2549  000200                     	ds	200
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           fsr1h	equ	0xFE2
  2558                           fsr1l	equ	0xFE1
  2559                           
  2560                           	psect	cstackBANK1
  2561  000100                     __pcstackBANK1:
  2562                           	opt stack 0
  2563  000100                     SendSmsSm@UartMessage:
  2564                           	opt stack 0
  2565  000100                     InitGprsNetwork@UartMessage:
  2566                           	opt stack 0
  2567  000100                     Terminal@TermTxBuffer:
  2568                           	opt stack 0
  2569  000100                     MyApp_Task@smsText:
  2570                           	opt stack 0
  2571  000100                     HttpGetMethod@UartMessage:
  2572                           	opt stack 0
  2573                           
  2574                           ; 200 bytes @ 0x0
  2575  000100                     	ds	50
  2576  000132                     InitGprsNetwork@Index:
  2577                           	opt stack 0
  2578  000132                     MyApp_Task@phone:
  2579                           	opt stack 0
  2580                           
  2581                           ; 14 bytes @ 0x32
  2582  000132                     	ds	14
  2583  000140                     MyApp_Task@off:
  2584                           	opt stack 0
  2585                           
  2586                           ; 2 bytes @ 0x40
  2587  000140                     	ds	2
  2588  000142                     MyApp_Task@on:
  2589                           	opt stack 0
  2590                           
  2591                           ; 2 bytes @ 0x42
  2592  000142                     	ds	2
  2593  000144                     MyApp_Task@I2cTxBufferTest:
  2594                           	opt stack 0
  2595                           
  2596                           ; 2 bytes @ 0x44
  2597  000144                     	ds	2
  2598  000146                     MyApp_Task@smsNumber:
  2599                           	opt stack 0
  2600                           
  2601                           ; 14 bytes @ 0x46
  2602  000146                     	ds	14
  2603  000154                     MyApp_Task@cmpString:
  2604                           	opt stack 0
  2605                           
  2606                           ; 3 bytes @ 0x54
  2607  000154                     	ds	116
  2608  0001C8                     HttpGetMethod@Index:
  2609                           	opt stack 0
  2610                           
  2611                           ; 1 bytes @ 0xC8
  2612  0001C8                     	ds	1
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postdec1	equ	0xFE5
  2620                           fsr1h	equ	0xFE2
  2621                           fsr1l	equ	0xFE1
  2622                           
  2623                           	psect	cstackBANK0
  2624  000060                     __pcstackBANK0:
  2625                           	opt stack 0
  2626  000060                     
  2627                           ; 1 bytes @ 0x0
  2628  000060                     	ds	8
  2629  000068                     ??_LowPriorityIsr:
  2630                           
  2631                           ; 1 bytes @ 0x8
  2632  000068                     	ds	21
  2633  00007D                     ??_isdigit:
  2634  00007D                     ??_isspace:
  2635  00007D                     ??_isupper:
  2636  00007D                     ??_Rtcc_GetRtccValue:
  2637  00007D                     ??_UartTxBufferStatus:
  2638  00007D                     ??_USBStdGetDscHandler:
  2639  00007D                     ??_USBStdGetStatusHandler:
  2640  00007D                     ?_USBTransferOnePacket:
  2641                           	opt stack 0
  2642  00007D                     ?_strlen:
  2643                           	opt stack 0
  2644  00007D                     ?_sprintf:
  2645                           	opt stack 0
  2646  00007D                     ?___wmul:
  2647                           	opt stack 0
  2648  00007D                     ?___awdiv:
  2649                           	opt stack 0
  2650  00007D                     ?___awmod:
  2651                           	opt stack 0
  2652  00007D                     ?___lwmod:
  2653                           	opt stack 0
  2654  00007D                     ?_GetOsTickCounter:
  2655                           	opt stack 0
  2656  00007D                     ?___lmul:
  2657                           	opt stack 0
  2658  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2659                           	opt stack 0
  2660  00007D                     SetAckStatus@AckSts:
  2661                           	opt stack 0
  2662  00007D                     WriteByte@Byte:
  2663                           	opt stack 0
  2664  00007D                     ReadByte@Byte:
  2665                           	opt stack 0
  2666  00007D                     Mcu_SetWdgSts@WdgSts:
  2667                           	opt stack 0
  2668  00007D                     RtccIrqInit@Priority:
  2669                           	opt stack 0
  2670  00007D                     Rtcc_SetRtcStatus@Status:
  2671                           	opt stack 0
  2672  00007D                     TmrBInit@Prescaler:
  2673                           	opt stack 0
  2674  00007D                     Tmr_TmrBIrqSet@Priority:
  2675                           	opt stack 0
  2676  00007D                     Tmr_StartTmr@TmrNumb:
  2677                           	opt stack 0
  2678  00007D                     UartWriteByte@ByteToWrite:
  2679                           	opt stack 0
  2680  00007D                     USBTransferOnePacket@dir:
  2681                           	opt stack 0
  2682  00007D                     USBConfigureEndpoint@direction:
  2683                           	opt stack 0
  2684  00007D                     USBCtrlTrfTxService@byteToSend:
  2685                           	opt stack 0
  2686  00007D                     USBCtrlTrfRxService@i:
  2687                           	opt stack 0
  2688  00007D                     Led_SetLedStatus@LedSts:
  2689                           	opt stack 0
  2690  00007D                     toupper@c:
  2691                           	opt stack 0
  2692  00007D                     tolower@c:
  2693                           	opt stack 0
  2694  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2695                           	opt stack 0
  2696  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2697                           	opt stack 0
  2698  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2699                           	opt stack 0
  2700  00007D                     Uart_ClearRxBuffer@Index:
  2701                           	opt stack 0
  2702  00007D                     GenerateEvt@Event:
  2703                           	opt stack 0
  2704  00007D                     ReceiveEvt@Event:
  2705                           	opt stack 0
  2706  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2707                           	opt stack 0
  2708  00007D                     StringCompare@String1:
  2709                           	opt stack 0
  2710  00007D                     StringCopy@SourceStr:
  2711                           	opt stack 0
  2712  00007D                     ClearBuffer@Buffer:
  2713                           	opt stack 0
  2714  00007D                     sprintf@sp:
  2715                           	opt stack 0
  2716  00007D                     ___wmul@multiplier:
  2717                           	opt stack 0
  2718  00007D                     ___awdiv@dividend:
  2719                           	opt stack 0
  2720  00007D                     ___awmod@dividend:
  2721                           	opt stack 0
  2722  00007D                     ___lwmod@dividend:
  2723                           	opt stack 0
  2724  00007D                     memcpy@d1:
  2725                           	opt stack 0
  2726  00007D                     memset@p1:
  2727                           	opt stack 0
  2728  00007D                     strcat@to:
  2729                           	opt stack 0
  2730  00007D                     strcpy@to:
  2731                           	opt stack 0
  2732  00007D                     strlen@s:
  2733                           	opt stack 0
  2734  00007D                     ___lmul@multiplier:
  2735                           	opt stack 0
  2736                           
  2737                           ; 4 bytes @ 0x1D
  2738  00007D                     	ds	1
  2739  00007E                     ??_USBConfigureEndpoint:
  2740  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2741                           	opt stack 0
  2742  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2743                           	opt stack 0
  2744  00007E                     TmrBInit@Postscaler:
  2745                           	opt stack 0
  2746  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2747                           	opt stack 0
  2748  00007E                     UartWriteByte@Module:
  2749                           	opt stack 0
  2750  00007E                     UartTxBufferStatus@Module:
  2751                           	opt stack 0
  2752  00007E                     USBCtrlTrfRxService@byteToRead:
  2753                           	opt stack 0
  2754  00007E                     USBCtrlTrfInHandler@lastDTS:
  2755                           	opt stack 0
  2756  00007E                     Led_SetLedStatus@Led:
  2757                           	opt stack 0
  2758  00007E                     _isdigit$6150:
  2759                           	opt stack 0
  2760  00007E                     _isspace$6419:
  2761                           	opt stack 0
  2762  00007E                     _isupper$6422:
  2763                           	opt stack 0
  2764  00007E                     I2c_WriteData@WritePacket:
  2765                           	opt stack 0
  2766  00007E                     Rtcc_RtcConfig@RtcConfig:
  2767                           	opt stack 0
  2768  00007E                     USBTransferOnePacket@data:
  2769                           	opt stack 0
  2770  00007E                     USBStdGetStatusHandler@p:
  2771                           	opt stack 0
  2772                           
  2773                           ; 2 bytes @ 0x1E
  2774  00007E                     	ds	1
  2775  00007F                     ??_strlen:
  2776  00007F                     ??_Rtcc_AlarmConfig:
  2777  00007F                     ??_TmrBInit:
  2778  00007F                     Irq_InitIntController@IntPriorityEn:
  2779                           	opt stack 0
  2780  00007F                     Rtcc_GetRtccValue@RetValue:
  2781                           	opt stack 0
  2782  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2783                           	opt stack 0
  2784  00007F                     UartTxBufferStatus@TxBufferStatus:
  2785                           	opt stack 0
  2786  00007F                     GenerateEvt@EventStatus:
  2787                           	opt stack 0
  2788  00007F                     isdigit@c:
  2789                           	opt stack 0
  2790  00007F                     isspace@c:
  2791                           	opt stack 0
  2792  00007F                     isupper@c:
  2793                           	opt stack 0
  2794  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2795                           	opt stack 0
  2796  00007F                     StringCompare@String2:
  2797                           	opt stack 0
  2798  00007F                     StringCopy@DestStr:
  2799                           	opt stack 0
  2800  00007F                     ClearBuffer@Len:
  2801                           	opt stack 0
  2802  00007F                     sprintf@f:
  2803                           	opt stack 0
  2804  00007F                     ___wmul@multiplicand:
  2805                           	opt stack 0
  2806  00007F                     ___awdiv@divisor:
  2807                           	opt stack 0
  2808  00007F                     ___awmod@divisor:
  2809                           	opt stack 0
  2810  00007F                     ___lwmod@divisor:
  2811                           	opt stack 0
  2812  00007F                     memcpy@s1:
  2813                           	opt stack 0
  2814  00007F                     memset@c:
  2815                           	opt stack 0
  2816  00007F                     strcat@from:
  2817                           	opt stack 0
  2818  00007F                     strcpy@from:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x1F
  2822  00007F                     	ds	1
  2823  000080                     ??_isalpha:
  2824  000080                     ??_isxdigit:
  2825  000080                     ??_I2c_WriteData:
  2826  000080                     ??_Rtcc_RtcConfig:
  2827  000080                     Rtcc_GetRtccValue@RegValue:
  2828                           	opt stack 0
  2829  000080                     TmrBInit@TmrNumb:
  2830                           	opt stack 0
  2831  000080                     ReceiveEvt@EventStatus:
  2832                           	opt stack 0
  2833  000080                     USBTransferOnePacket@len:
  2834                           	opt stack 0
  2835  000080                     I2c_ReadData@ReadPacket:
  2836                           	opt stack 0
  2837  000080                     Uart_WriteConstString@ConstStringToWrite:
  2838                           	opt stack 0
  2839  000080                     Uart_WriteString@StringToWrite:
  2840                           	opt stack 0
  2841  000080                     Uart_WriteStringLen@StringToWrite:
  2842                           	opt stack 0
  2843  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2844                           	opt stack 0
  2845  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x20
  2849  000080                     	ds	1
  2850  000081                     ?_GetElapsedTime:
  2851                           	opt stack 0
  2852  000081                     ?_Rtcm_GetRtccDate:
  2853                           	opt stack 0
  2854  000081                     Mdm_IsSmsReceived@Ret:
  2855                           	opt stack 0
  2856  000081                     Mdm_IsRinging@Ret:
  2857                           	opt stack 0
  2858  000081                     I2cSlv_I2cReadMsgSts@Result:
  2859                           	opt stack 0
  2860  000081                     USBTransferOnePacket@ep:
  2861                           	opt stack 0
  2862  000081                     Led_SetLedBlinkTime@Led:
  2863                           	opt stack 0
  2864  000081                     ___awdiv@counter:
  2865                           	opt stack 0
  2866  000081                     ___awmod@counter:
  2867                           	opt stack 0
  2868  000081                     ___lwmod@counter:
  2869                           	opt stack 0
  2870  000081                     _isalpha$6416:
  2871                           	opt stack 0
  2872  000081                     _isxdigit$6426:
  2873                           	opt stack 0
  2874  000081                     OsTmr_StartTimer@Timer:
  2875                           	opt stack 0
  2876  000081                     StringCompare@Len:
  2877                           	opt stack 0
  2878  000081                     StringCopy@Len:
  2879                           	opt stack 0
  2880  000081                     ClearBuffer@Index:
  2881                           	opt stack 0
  2882  000081                     ___wmul@product:
  2883                           	opt stack 0
  2884  000081                     memcpy@n:
  2885                           	opt stack 0
  2886  000081                     memset@n:
  2887                           	opt stack 0
  2888  000081                     strcat@cp:
  2889                           	opt stack 0
  2890  000081                     strcpy@cp:
  2891                           	opt stack 0
  2892  000081                     strlen@cp:
  2893                           	opt stack 0
  2894  000081                     GetElapsedTime@StartTime:
  2895                           	opt stack 0
  2896  000081                     ___lmul@multiplicand:
  2897                           	opt stack 0
  2898                           
  2899                           ; 4 bytes @ 0x21
  2900  000081                     	ds	1
  2901  000082                     ??_I2c_ReadData:
  2902  000082                     Uart_WriteConstString@Module:
  2903                           	opt stack 0
  2904  000082                     Uart_WriteString@Module:
  2905                           	opt stack 0
  2906  000082                     Uart_WriteStringLen@Len:
  2907                           	opt stack 0
  2908  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2909                           	opt stack 0
  2910  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2911                           	opt stack 0
  2912  000082                     USBConfigureEndpoint@EPNum:
  2913                           	opt stack 0
  2914  000082                     ___awdiv@sign:
  2915                           	opt stack 0
  2916  000082                     ___awmod@sign:
  2917                           	opt stack 0
  2918  000082                     isalpha@c:
  2919                           	opt stack 0
  2920  000082                     isxdigit@c:
  2921                           	opt stack 0
  2922  000082                     USBTransferOnePacket@handle:
  2923                           	opt stack 0
  2924                           
  2925                           ; 2 bytes @ 0x22
  2926  000082                     	ds	1
  2927  000083                     ??_StringCopy:
  2928  000083                     ?_atoi:
  2929                           	opt stack 0
  2930  000083                     ?_xtoi:
  2931                           	opt stack 0
  2932  000083                     ?___lwdiv:
  2933                           	opt stack 0
  2934  000083                     Uart_WriteStringLen@Index:
  2935                           	opt stack 0
  2936  000083                     Mdm_SetSmsFormat@Index:
  2937                           	opt stack 0
  2938  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2939                           	opt stack 0
  2940  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2941                           	opt stack 0
  2942  000083                     sprintf@flag:
  2943                           	opt stack 0
  2944  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2945                           	opt stack 0
  2946  000083                     USBConfigureEndpoint@handle:
  2947                           	opt stack 0
  2948  000083                     putUSBUSART@data:
  2949                           	opt stack 0
  2950  000083                     atoi@s:
  2951                           	opt stack 0
  2952  000083                     ___awdiv@quotient:
  2953                           	opt stack 0
  2954  000083                     ___lwdiv@dividend:
  2955                           	opt stack 0
  2956  000083                     memcpy@d:
  2957                           	opt stack 0
  2958  000083                     memset@p:
  2959                           	opt stack 0
  2960  000083                     xtoi@s:
  2961                           	opt stack 0
  2962  000083                     OsTmr_StartTimer@Timeout:
  2963                           	opt stack 0
  2964                           
  2965                           ; 4 bytes @ 0x23
  2966  000083                     	ds	1
  2967  000084                     Uart_WriteStringLen@Module:
  2968                           	opt stack 0
  2969  000084                     I2cSlv_SendI2cMsg@TxSts:
  2970                           	opt stack 0
  2971  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2972                           	opt stack 0
  2973  000084                     CDCTxService@i:
  2974                           	opt stack 0
  2975  000084                     getsUSBUSART@buffer:
  2976                           	opt stack 0
  2977  000084                     sprintf@ap:
  2978                           	opt stack 0
  2979  000084                     Mdm_SetSmsFormat@UartMessage:
  2980                           	opt stack 0
  2981                           
  2982                           ; 20 bytes @ 0x24
  2983  000084                     	ds	1
  2984  000085                     ??_atoi:
  2985  000085                     ??_xtoi:
  2986  000085                     ??_GetElapsedTime:
  2987  000085                     Rtcc_SetRtccValue@Value:
  2988                           	opt stack 0
  2989  000085                     USBDeviceInit@i:
  2990                           	opt stack 0
  2991  000085                     USBEnableEndpoint@options:
  2992                           	opt stack 0
  2993  000085                     putUSBUSART@length:
  2994                           	opt stack 0
  2995  000085                     CDCTxService@byte_to_send:
  2996                           	opt stack 0
  2997  000085                     StringCompare@Result:
  2998                           	opt stack 0
  2999  000085                     StringCopy@Index:
  3000                           	opt stack 0
  3001  000085                     ___lwdiv@divisor:
  3002                           	opt stack 0
  3003  000085                     memcpy@s:
  3004                           	opt stack 0
  3005  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3006                           	opt stack 0
  3007  000085                     ___lmul@product:
  3008                           	opt stack 0
  3009                           
  3010                           ; 4 bytes @ 0x25
  3011  000085                     	ds	1
  3012  000086                     ??_Rtcc_SetRtccValue:
  3013  000086                     getsUSBUSART@len:
  3014                           	opt stack 0
  3015  000086                     sprintf@c:
  3016                           	opt stack 0
  3017  000086                     USBEnableEndpoint@p:
  3018                           	opt stack 0
  3019  000086                     StringCompare@Index:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x26
  3023  000086                     	ds	1
  3024  000087                     atoi@sign:
  3025                           	opt stack 0
  3026  000087                     ___lwdiv@counter:
  3027                           	opt stack 0
  3028  000087                     memcpy@tmp:
  3029                           	opt stack 0
  3030  000087                     xtoi@sign:
  3031                           	opt stack 0
  3032  000087                     Mdm_GetSmsData@MessageText:
  3033                           	opt stack 0
  3034  000087                     sprintf@cp:
  3035                           	opt stack 0
  3036                           
  3037                           ; 2 bytes @ 0x27
  3038  000087                     	ds	1
  3039  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3040                           	opt stack 0
  3041  000088                     USBEnableEndpoint@ep:
  3042                           	opt stack 0
  3043  000088                     atoi@a:
  3044                           	opt stack 0
  3045  000088                     ___lwdiv@quotient:
  3046                           	opt stack 0
  3047  000088                     xtoi@val:
  3048                           	opt stack 0
  3049  000088                     ModemEvtParser@CallReadyString:
  3050                           	opt stack 0
  3051                           
  3052                           ; 10 bytes @ 0x28
  3053  000088                     	ds	1
  3054  000089                     ??_Rtcm_GetRtccDate:
  3055  000089                     ?_strtol:
  3056                           	opt stack 0
  3057  000089                     ?___lldiv:
  3058                           	opt stack 0
  3059  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3060                           	opt stack 0
  3061  000089                     Mdm_GetSmsData@MessageHeader:
  3062                           	opt stack 0
  3063  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3064                           	opt stack 0
  3065  000089                     strtol@s:
  3066                           	opt stack 0
  3067  000089                     ___lldiv@dividend:
  3068                           	opt stack 0
  3069  000089                     Rtcm_SetRtccDate@Date:
  3070                           	opt stack 0
  3071                           
  3072                           ; 8 bytes @ 0x29
  3073  000089                     	ds	1
  3074  00008A                     xtoi@c:
  3075                           	opt stack 0
  3076  00008A                     LedBlinkStateMachine@LedBlink:
  3077                           	opt stack 0
  3078  00008A                     LedPulseStateMachine@LedPulse:
  3079                           	opt stack 0
  3080  00008A                     secondsAppTimer@counter:
  3081                           	opt stack 0
  3082  00008A                     utoa@buf:
  3083                           	opt stack 0
  3084  00008A                     Rtcm_GetRtccDate@LocalDate:
  3085                           	opt stack 0
  3086                           
  3087                           ; 8 bytes @ 0x2A
  3088  00008A                     	ds	1
  3089  00008B                     Mdm_GetSmsData@GetSmsStatus:
  3090                           	opt stack 0
  3091  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3092                           	opt stack 0
  3093  00008B                     strtol@endptr:
  3094                           	opt stack 0
  3095                           
  3096                           ; 2 bytes @ 0x2B
  3097  00008B                     	ds	1
  3098  00008C                     LedPulseStateMachine@Led:
  3099                           	opt stack 0
  3100  00008C                     secondsAppTimer@isCyclic:
  3101                           	opt stack 0
  3102  00008C                     utoa@val:
  3103                           	opt stack 0
  3104                           
  3105                           ; 2 bytes @ 0x2C
  3106  00008C                     	ds	1
  3107  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3108                           	opt stack 0
  3109  00008D                     strtol@base:
  3110                           	opt stack 0
  3111  00008D                     GetElapsedTime@TimeValue:
  3112                           	opt stack 0
  3113  00008D                     ___lldiv@divisor:
  3114                           	opt stack 0
  3115                           
  3116                           ; 4 bytes @ 0x2D
  3117  00008D                     	ds	1
  3118  00008E                     utoa@base:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x2E
  3122  00008E                     	ds	1
  3123  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3124  00008F                     ??_strtol:
  3125  00008F                     secondsAppTimer@seconds:
  3126                           	opt stack 0
  3127  00008F                     LedStateMachine@LedSts:
  3128                           	opt stack 0
  3129                           
  3130                           ; 2 bytes @ 0x2F
  3131  00008F                     	ds	1
  3132  000090                     secondsAppTimer@isExpired:
  3133                           	opt stack 0
  3134  000090                     utoa@v:
  3135                           	opt stack 0
  3136                           
  3137                           ; 2 bytes @ 0x30
  3138  000090                     	ds	1
  3139  000091                     ??_USBStdFeatureReqHandler:
  3140  000091                     USBStdSetCfgHandler@i:
  3141                           	opt stack 0
  3142  000091                     LedStateMachine@LedOut:
  3143                           	opt stack 0
  3144  000091                     secondsAppTimer@destinationTicks:
  3145                           	opt stack 0
  3146  000091                     GetElapsedTime@CurrentTimestamp:
  3147                           	opt stack 0
  3148  000091                     ___lldiv@quotient:
  3149                           	opt stack 0
  3150                           
  3151                           ; 4 bytes @ 0x31
  3152  000091                     	ds	1
  3153  000092                     utoa@c:
  3154                           	opt stack 0
  3155  000092                     USBStdFeatureReqHandler@pUEP:
  3156                           	opt stack 0
  3157  000092                     ModemEvtParser@SmsString:
  3158                           	opt stack 0
  3159                           
  3160                           ; 5 bytes @ 0x32
  3161  000092                     	ds	1
  3162  000093                     strtol@sign:
  3163                           	opt stack 0
  3164  000093                     LedStateMachine@LedBlink:
  3165                           	opt stack 0
  3166  000093                     blinkForSeconds@blickTicks:
  3167                           	opt stack 0
  3168  000093                     itoa@buf:
  3169                           	opt stack 0
  3170                           
  3171                           ; 2 bytes @ 0x33
  3172  000093                     	ds	1
  3173  000094                     USBStdFeatureReqHandler@current_ep_data:
  3174                           	opt stack 0
  3175  000094                     strtol@a:
  3176                           	opt stack 0
  3177                           
  3178                           ; 4 bytes @ 0x34
  3179  000094                     	ds	1
  3180  000095                     blinkForSeconds@seconds:
  3181                           	opt stack 0
  3182  000095                     ___lldiv@counter:
  3183                           	opt stack 0
  3184  000095                     OsTmr_GetTimerStatus@Timer:
  3185                           	opt stack 0
  3186  000095                     USBStdFeatureReqHandler@p:
  3187                           	opt stack 0
  3188  000095                     LedStateMachine@LedPulse:
  3189                           	opt stack 0
  3190  000095                     itoa@val:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x35
  3194  000095                     	ds	1
  3195  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3196                           	opt stack 0
  3197  000096                     SetUartBaudRate@UartConfig:
  3198                           	opt stack 0
  3199  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3200                           	opt stack 0
  3201                           
  3202                           ; 4 bytes @ 0x36
  3203  000096                     	ds	1
  3204  000097                     ??_USBCtrlEPService:
  3205  000097                     itoa@base:
  3206                           	opt stack 0
  3207  000097                     ModemEvtParser@RingString:
  3208                           	opt stack 0
  3209                           
  3210                           ; 4 bytes @ 0x37
  3211  000097                     	ds	1
  3212  000098                     Tmr_TmrBPrSet@Prescaler:
  3213                           	opt stack 0
  3214  000098                     Mdm_SetSmsFormat@TextFormat:
  3215                           	opt stack 0
  3216  000098                     USBDeviceTasks@i:
  3217                           	opt stack 0
  3218  000098                     LedStateMachine@LedOutSts:
  3219                           	opt stack 0
  3220  000098                     strtol@c:
  3221                           	opt stack 0
  3222                           
  3223                           ; 1 bytes @ 0x38
  3224  000098                     	ds	1
  3225  000099                     Tmr_TmrBPrSet@Postscaler:
  3226                           	opt stack 0
  3227  000099                     SetUartBaudRate@Module:
  3228                           	opt stack 0
  3229  000099                     LedStateMachine@Led:
  3230                           	opt stack 0
  3231  000099                     itoa@cp:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x39
  3235  000099                     	ds	1
  3236  00009A                     ??_Led_MainTask:
  3237  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3238                           	opt stack 0
  3239  00009A                     SetUartBaudRate@BaudRateRegister:
  3240                           	opt stack 0
  3241  00009A                     SetBaudRate@McuClockHz:
  3242                           	opt stack 0
  3243                           
  3244                           ; 4 bytes @ 0x3A
  3245  00009A                     	ds	1
  3246  00009B                     ??_SendSmsSm:
  3247  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3248                           	opt stack 0
  3249  00009B                     ModemEvtParser@Match:
  3250                           	opt stack 0
  3251  00009B                     OsTmr_Wait@WaitTimer:
  3252                           	opt stack 0
  3253  00009B                     InitGprsNetwork@Apn:
  3254                           	opt stack 0
  3255  00009B                     HttpGetMethod@GetData:
  3256                           	opt stack 0
  3257                           
  3258                           ; 2 bytes @ 0x3B
  3259  00009B                     	ds	1
  3260  00009C                     SetUartBaudRate@DivisionFactor:
  3261                           	opt stack 0
  3262  00009C                     ModemEvtParser@CompareIdx:
  3263                           	opt stack 0
  3264  00009C                     Tmr_TmrBPrSet@Divisor:
  3265                           	opt stack 0
  3266                           
  3267                           ; 4 bytes @ 0x3C
  3268  00009C                     	ds	1
  3269  00009D                     ??_HttpGetMethod:
  3270  00009D                     InitGprsNetwork@ApnLen:
  3271                           	opt stack 0
  3272  00009D                     Uart_InitUartModule@UartConfig:
  3273                           	opt stack 0
  3274  00009D                     OsTmr_Wait@DelayMs:
  3275                           	opt stack 0
  3276                           
  3277                           ; 4 bytes @ 0x3D
  3278  00009D                     	ds	1
  3279  00009E                     ??_SetBaudRate:
  3280  00009E                     ??_InitGprsNetwork:
  3281                           
  3282                           ; 1 bytes @ 0x3E
  3283  00009E                     	ds	1
  3284  00009F                     ??_Uart_InitUartModule:
  3285                           
  3286                           ; 1 bytes @ 0x3F
  3287  00009F                     	ds	1
  3288  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3289                           	opt stack 0
  3290                           
  3291                           ; 2 bytes @ 0x40
  3292  0000A0                     	ds	1
  3293  0000A1                     Uart_InitUartModule@Module:
  3294                           	opt stack 0
  3295  0000A1                     OsTmr_Wait@Ret:
  3296                           	opt stack 0
  3297                           
  3298                           ; 1 bytes @ 0x41
  3299  0000A1                     	ds	1
  3300  0000A2                     ??_Terminal:
  3301  0000A2                     I2c_InitI2cModule@I2cConfig:
  3302                           	opt stack 0
  3303                           
  3304                           ; 2 bytes @ 0x42
  3305  0000A2                     	ds	1
  3306  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3307                           	opt stack 0
  3308                           
  3309                           ; 1 bytes @ 0x43
  3310  0000A3                     	ds	1
  3311  0000A4                     ??_I2c_InitI2cModule:
  3312  0000A4                     Terminal@i:
  3313                           	opt stack 0
  3314  0000A4                     InitSchedTimer@TmrBConfig:
  3315                           	opt stack 0
  3316                           
  3317                           ; 7 bytes @ 0x44
  3318  0000A4                     	ds	1
  3319  0000A5                     Terminal@ReceivedBytes:
  3320                           	opt stack 0
  3321                           
  3322                           ; 1 bytes @ 0x45
  3323  0000A5                     	ds	1
  3324  0000A6                     Terminal@Index:
  3325                           	opt stack 0
  3326                           
  3327                           ; 1 bytes @ 0x46
  3328  0000A6                     	ds	1
  3329  0000A7                     Term_MainSm@FwkMajorStr:
  3330                           	opt stack 0
  3331                           
  3332                           ; 4 bytes @ 0x47
  3333  0000A7                     	ds	4
  3334  0000AB                     Term_MainSm@FwkMinorStr:
  3335                           	opt stack 0
  3336                           
  3337                           ; 4 bytes @ 0x4B
  3338  0000AB                     	ds	4
  3339  0000AF                     Term_MainSm@FwkBuildStr:
  3340                           	opt stack 0
  3341                           
  3342                           ; 4 bytes @ 0x4F
  3343  0000AF                     	ds	4
  3344  0000B3                     ??_InitializeTasks:
  3345  0000B3                     ??_ScheduleTasks:
  3346                           
  3347                           ; 1 bytes @ 0x53
  3348  0000B3                     	ds	2
  3349  0000B5                     InitializeTasks@ActiveTaskIndex:
  3350                           	opt stack 0
  3351                           
  3352                           ; 1 bytes @ 0x55
  3353  0000B5                     	ds	2
  3354  0000B7                     ScheduleTasks@ActiveTaskIndex:
  3355                           	opt stack 0
  3356                           
  3357                           ; 1 bytes @ 0x57
  3358  0000B7                     	ds	1
  3359  0000B8                     tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           postdec1	equ	0xFE5
  3366                           fsr1h	equ	0xFE2
  3367                           fsr1l	equ	0xFE1
  3368                           
  3369                           ; 1 bytes @ 0x58
  3370                           
  3371                           	psect	cstackCOMRAM
  3372  000001                     __pcstackCOMRAM:
  3373                           	opt stack 0
  3374  000001                     i2GenerateEvt@Event:
  3375                           	opt stack 0
  3376                           
  3377                           ; 2 bytes @ 0x0
  3378  000001                     	ds	2
  3379  000003                     i2GenerateEvt@EventStatus:
  3380                           	opt stack 0
  3381                           
  3382                           ; 1 bytes @ 0x2
  3383  000003                     	ds	1
  3384  000004                     Uart_MdmGsmGprsReadService@UartData:
  3385                           	opt stack 0
  3386                           
  3387                           ; 1 bytes @ 0x3
  3388  000004                     	ds	1
  3389  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3390                           	opt stack 0
  3391                           
  3392                           ; 2 bytes @ 0x4
  3393  000005                     	ds	2
  3394  000007                     ??_HighPriorityIsr:
  3395                           
  3396                           ; 1 bytes @ 0x6
  3397  000007                     	ds	18
  3398  000019                     ?i1___wmul:
  3399                           	opt stack 0
  3400  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3401                           	opt stack 0
  3402  000019                     i1GenerateEvt@Event:
  3403                           	opt stack 0
  3404  000019                     i1___wmul@multiplier:
  3405                           	opt stack 0
  3406                           
  3407                           ; 2 bytes @ 0x18
  3408  000019                     	ds	2
  3409  00001B                     i1GenerateEvt@EventStatus:
  3410                           	opt stack 0
  3411  00001B                     i1___wmul@multiplicand:
  3412                           	opt stack 0
  3413                           
  3414                           ; 2 bytes @ 0x1A
  3415  00001B                     	ds	1
  3416  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3417                           	opt stack 0
  3418                           
  3419                           ; 2 bytes @ 0x1B
  3420  00001C                     	ds	1
  3421  00001D                     i1___wmul@product:
  3422                           	opt stack 0
  3423                           
  3424                           ; 2 bytes @ 0x1C
  3425  00001D                     	ds	1
  3426  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3427                           	opt stack 0
  3428                           
  3429                           ; 1 bytes @ 0x1D
  3430  00001E                     	ds	1
  3431  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3432                           	opt stack 0
  3433                           
  3434                           ; 1 bytes @ 0x1E
  3435  00001F                     	ds	1
  3436  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3437                           	opt stack 0
  3438                           
  3439                           ; 1 bytes @ 0x1F
  3440  000020                     	ds	1
  3441  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x20
  3445  000021                     	ds	2
  3446  000023                     tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           postdec1	equ	0xFE5
  3453                           fsr1h	equ	0xFE2
  3454                           fsr1l	equ	0xFE1
  3455                           
  3456                           ; 1 bytes @ 0x22
  3457 ;;
  3458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3459 ;;
  3460 ;; *************** function _main *****************
  3461 ;; Defined at:
  3462 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2   14[None  ] short 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels required when called:   23
  3482 ;; This function calls:
  3483 ;;		_Sch_MainScheduler
  3484 ;;		_SystemInit
  3485 ;; This function is called by:
  3486 ;;		Startup code after reset
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text0
  3491  006144                     __ptext0:
  3492                           	opt stack 0
  3493  006144                     _main:
  3494                           	opt stack 8
  3495                           
  3496                           ;main.c: 61: SystemInit();
  3497                           
  3498                           ;incstack = 0
  3499  006144  ECDC  F02D         	call	_SystemInit	;wreg free
  3500                           
  3501                           ;main.c: 64: Sch_MainScheduler();
  3502  006148  ECAE  F02F         	call	_Sch_MainScheduler	;wreg free
  3503                           
  3504                           ;main.c: 67: return 0;
  3505                           ;	Return value of _main is never used
  3506  00614C  EF66  F000         	goto	start
  3507  006150                     __end_of_main:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postdec1	equ	0xFE5
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           
  3519 ;; *************** function _SystemInit *****************
  3520 ;; Defined at:
  3521 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:   15
  3542 ;; This function calls:
  3543 ;;		_InitSchedTimer
  3544 ;;		_Irq_InitIntController
  3545 ;;		_Mcu_ConfigExtInt
  3546 ;;		_Mcu_StartSystemPll
  3547 ;;		_Pm_DsReleasePinControl
  3548 ;;		_Tmr_RegisterTmr2IsrCallback
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text1
  3555  005BB8                     __ptext1:
  3556                           	opt stack 0
  3557  005BB8                     _SystemInit:
  3558                           	opt stack 15
  3559                           
  3560                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3561                           
  3562                           ;incstack = 0
  3563  005BB8  ECC5  F030         	call	_Pm_DsReleasePinControl	;wreg free
  3564                           
  3565                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3566  005BBC  EC9F  F02F         	call	_Mcu_StartSystemPll	;wreg free
  3567                           
  3568                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3569  005BC0  0E01               	movlw	1
  3570  005BC2  0100               	movlb	0	; () banked
  3571  005BC4  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3572  005BC6  0E01               	movlw	1
  3573  005BC8  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3574  005BCA  0E01               	movlw	1
  3575  005BCC  EC80  F02E         	call	_Irq_InitIntController
  3576                           
  3577                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3578  005BD0  0E36               	movlw	low _Sch_SchmIntService
  3579  005BD2  0100               	movlb	0	; () banked
  3580  005BD4  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3581  005BD6  0E61               	movlw	high _Sch_SchmIntService
  3582  005BD8  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3583  005BDA  ECA8  F030         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3584                           
  3585                           ;sys_init.c: 132: InitSchedTimer();
  3586  005BDE  EC3C  F02E         	call	_InitSchedTimer	;wreg free
  3587                           
  3588                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3589  005BE2  ECDA  F02F         	call	_Mcu_ConfigExtInt	;wreg free
  3590  005BE6  0012               	return		;funcret
  3591  005BE8                     __end_of_SystemInit:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           postinc0	equ	0xFEE
  3598                           wreg	equ	0xFE8
  3599                           postdec1	equ	0xFE5
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           
  3603 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3604 ;; Defined at:
  3605 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3608 ;;		 -> Sch_SchmIntService(1), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:   11
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_SystemInit
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text2
  3635  006150                     __ptext2:
  3636                           	opt stack 0
  3637  006150                     _Tmr_RegisterTmr2IsrCallback:
  3638                           	opt stack 18
  3639                           
  3640                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3641                           
  3642                           ;incstack = 0
  3643  006150  C07D  F2DE         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3644  006154  C07E  F2DF         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3645  006158  0012               	return		;funcret
  3646  00615A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3647                           	opt stack 0
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           postdec1	equ	0xFE5
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           
  3658 ;; *************** function _Pm_DsReleasePinControl *****************
  3659 ;; Defined at:
  3660 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		None
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;Total ram usage:        0 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:   11
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_SystemInit
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text3
  3689  00618A                     __ptext3:
  3690                           	opt stack 0
  3691  00618A                     _Pm_DsReleasePinControl:
  3692                           	opt stack 18
  3693                           
  3694                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3695                           
  3696                           ;incstack = 0
  3697  00618A  010F               	movlb	15	; () banked
  3698  00618C  914C               	bcf	76,0,b	;volatile
  3699                           
  3700                           ; BSR set to: 15
  3701  00618E  0012               	return		;funcret
  3702  006190                     __end_of_Pm_DsReleasePinControl:
  3703                           	opt stack 0
  3704                           tblptru	equ	0xFF8
  3705                           tblptrh	equ	0xFF7
  3706                           tblptrl	equ	0xFF6
  3707                           tablat	equ	0xFF5
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           postdec1	equ	0xFE5
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           
  3714 ;; *************** function _Mcu_StartSystemPll *****************
  3715 ;; Defined at:
  3716 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:   11
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_SystemInit
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text4
  3745  005F3E                     __ptext4:
  3746                           	opt stack 0
  3747  005F3E                     _Mcu_StartSystemPll:
  3748                           	opt stack 18
  3749                           
  3750                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3751                           
  3752                           ; BSR set to: 15
  3753                           ;incstack = 0
  3754  005F3E  0E03               	movlw	3
  3755  005F40  0100               	movlb	0	; () banked
  3756  005F42  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3757  005F44  0EE8               	movlw	232
  3758  005F46  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3762  005F48  8C9B               	bsf	3995,6,c	;volatile
  3763  005F4A                     l10971:
  3764                           
  3765                           ; BSR set to: 0
  3766  005F4A  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3767  005F4C  A0D8               	btfss	status,0,c
  3768  005F4E  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3769  005F50  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3770  005F52  E1FB               	bnz	l10971
  3771  005F54  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3772  005F56  B4D8               	btfsc	status,2,c
  3773  005F58  0012               	return	
  3774  005F5A  D7F7               	goto	l237
  3775  005F5C                     __end_of_Mcu_StartSystemPll:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postdec1	equ	0xFE5
  3784                           fsr1h	equ	0xFE2
  3785                           fsr1l	equ	0xFE1
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _Mcu_ConfigExtInt *****************
  3789 ;; Defined at:
  3790 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:   11
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_SystemInit
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text5
  3819  005FB4                     __ptext5:
  3820                           	opt stack 0
  3821  005FB4                     _Mcu_ConfigExtInt:
  3822                           	opt stack 18
  3823                           
  3824                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;incstack = 0
  3828  005FB4  8093               	bsf	3987,0,c	;volatile
  3829                           
  3830                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3831  005FB6  8695               	bsf	3989,3,c	;volatile
  3832                           
  3833                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3834  005FB8  010F               	movlb	15	; () banked
  3835  005FBA  8949               	bsf	73,4,b	;volatile
  3836                           
  3837                           ; BSR set to: 15
  3838                           ;mcu_drv.c: 108: RPINR1 = 20;
  3839  005FBC  0E14               	movlw	20
  3840  005FBE  010E               	movlb	14	; () banked
  3841  005FC0  6FE7               	movwf	231,b	;volatile
  3842                           
  3843                           ; BSR set to: 14
  3844                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3845  005FC2  88F2               	bsf	intcon,4,c	;volatile
  3846                           
  3847                           ; BSR set to: 14
  3848                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3849  005FC4  86F0               	bsf	intcon3,3,c	;volatile
  3850                           
  3851                           ; BSR set to: 14
  3852                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3853  005FC6  8CF0               	bsf	intcon3,6,c	;volatile
  3854                           
  3855                           ; BSR set to: 14
  3856                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3857  005FC8  9CF1               	bcf	intcon2,6,c	;volatile
  3858                           
  3859                           ; BSR set to: 14
  3860                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3861  005FCA  9AF1               	bcf	intcon2,5,c	;volatile
  3862                           
  3863                           ; BSR set to: 14
  3864  005FCC  0012               	return		;funcret
  3865  005FCE                     __end_of_Mcu_ConfigExtInt:
  3866                           	opt stack 0
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           intcon	equ	0xFF2
  3872                           intcon2	equ	0xFF1
  3873                           intcon3	equ	0xFF0
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           postdec1	equ	0xFE5
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _Irq_InitIntController *****************
  3882 ;; Defined at:
  3883 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  IntPriorityE    1    wreg     enum E7720
  3886 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3887 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;Total ram usage:        3 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:   11
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_SystemInit
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text6
  3914  005D00                     __ptext6:
  3915                           	opt stack 0
  3916  005D00                     _Irq_InitIntController:
  3917                           	opt stack 18
  3918                           
  3919                           ; BSR set to: 14
  3920                           ;incstack = 0
  3921                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3922  005D00  0100               	movlb	0	; () banked
  3923  005D02  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3924                           
  3925                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3926  005D04  0100               	movlb	0	; () banked
  3927  005D06  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3928  005D08  D002               	bra	u9515
  3929  005D0A  9ED0               	bcf	4048,7,c	;volatile
  3930  005D0C  D001               	bra	u9516
  3931  005D0E                     u9515:
  3932  005D0E  8ED0               	bsf	4048,7,c	;volatile
  3933  005D10                     u9516:
  3934                           
  3935                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3936  005D10  0100               	movlb	0	; () banked
  3937  005D12  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3938  005D14  D002               	bra	u9525
  3939  005D16  9EF2               	bcf	intcon,7,c	;volatile
  3940  005D18  D001               	bra	u9526
  3941  005D1A                     u9525:
  3942  005D1A  8EF2               	bsf	intcon,7,c	;volatile
  3943  005D1C                     u9526:
  3944                           
  3945                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3946  005D1C  0100               	movlb	0	; () banked
  3947  005D1E  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3948  005D20  D002               	bra	u9535
  3949  005D22  9CF2               	bcf	intcon,6,c	;volatile
  3950  005D24  D001               	bra	u9536
  3951  005D26                     u9535:
  3952  005D26  8CF2               	bsf	intcon,6,c	;volatile
  3953  005D28                     u9536:
  3954  005D28  0012               	return		;funcret
  3955  005D2A                     __end_of_Irq_InitIntController:
  3956                           	opt stack 0
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           intcon	equ	0xFF2
  3962                           intcon2	equ	0xFF1
  3963                           intcon3	equ	0xFF0
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           status	equ	0xFD8
  3970                           
  3971 ;; *************** function _InitSchedTimer *****************
  3972 ;; Defined at:
  3973 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;Total ram usage:        7 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:   14
  3994 ;; This function calls:
  3995 ;;		_Tmr_TmrBConfig
  3996 ;; This function is called by:
  3997 ;;		_SystemInit
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text7
  4002  005C78                     __ptext7:
  4003                           	opt stack 0
  4004  005C78                     _InitSchedTimer:
  4005                           	opt stack 15
  4006                           
  4007                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4008                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4009                           
  4010                           ;incstack = 0
  4011  005C78  0E04               	movlw	4
  4012  005C7A  0100               	movlb	0	; () banked
  4013  005C7C  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4014                           
  4015                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4016  005C7E  0E0C               	movlw	12
  4017  005C80  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4018                           
  4019                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4020  005C82  0E00               	movlw	0
  4021  005C84  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4022                           
  4023                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4024  005C86  0E01               	movlw	1
  4025  005C88  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4026                           
  4027                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4028  005C8A  0E03               	movlw	3
  4029  005C8C  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4030  005C8E  0EE8               	movlw	232
  4031  005C90  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4032                           
  4033                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4034  005C92  0E01               	movlw	1
  4035  005C94  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4039  005C96  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4040  005C98  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4041  005C9A  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4042  005C9C  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4043  005C9E  0E02               	movlw	2
  4044  005CA0  ECAF  F01D         	call	_Tmr_TmrBConfig
  4045  005CA4  0012               	return		;funcret
  4046  005CA6                     __end_of_InitSchedTimer:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           tblptrh	equ	0xFF7
  4050                           tblptrl	equ	0xFF6
  4051                           tablat	equ	0xFF5
  4052                           intcon	equ	0xFF2
  4053                           intcon2	equ	0xFF1
  4054                           intcon3	equ	0xFF0
  4055                           postinc0	equ	0xFEE
  4056                           wreg	equ	0xFE8
  4057                           postdec1	equ	0xFE5
  4058                           fsr1h	equ	0xFE2
  4059                           fsr1l	equ	0xFE1
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _Tmr_TmrBConfig *****************
  4063 ;; Defined at:
  4064 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  TmrNumb         1    wreg     unsigned char 
  4067 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4068 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;Total ram usage:        4 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:   13
  4087 ;; This function calls:
  4088 ;;		_TmrBInit
  4089 ;;		_Tmr_StartTmr
  4090 ;;		_Tmr_TmrBIrqSet
  4091 ;;		_Tmr_TmrBPrSet
  4092 ;; This function is called by:
  4093 ;;		_InitSchedTimer
  4094 ;;		_InitAuxTimer
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text8
  4099  003B5E                     __ptext8:
  4100                           	opt stack 0
  4101  003B5E                     _Tmr_TmrBConfig:
  4102                           	opt stack 15
  4103                           
  4104                           ;incstack = 0
  4105                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4106  003B5E  0100               	movlb	0	; () banked
  4107  003B60  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4108                           
  4109                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4110  003B62  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4111  003B66  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4112  003B6A  50DF               	movf	indf2,w,c
  4113  003B6C  0100               	movlb	0	; () banked
  4114  003B6E  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4115  003B70  EE20 F001          	lfsr	2,1
  4116  003B74  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4117  003B76  26D9               	addwf	fsr2l,f,c
  4118  003B78  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4119  003B7A  22DA               	addwfc	fsr2h,f,c
  4120  003B7C  50DF               	movf	indf2,w,c
  4121  003B7E  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4122  003B80  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4123  003B82  EC43  F023         	call	_TmrBInit
  4124                           
  4125                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4126  003B86  0100               	movlb	0	; () banked
  4127  003B88  EE20 F002          	lfsr	2,2
  4128  003B8C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4129  003B8E  26D9               	addwf	fsr2l,f,c
  4130  003B90  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4131  003B92  22DA               	addwfc	fsr2h,f,c
  4132  003B94  04DE               	decf	postinc2,w,c
  4133  003B96  A4D8               	btfss	status,2,c
  4134  003B98  D00E               	goto	l546
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;tmr_drv.c: 277: {
  4138                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4139  003B9A  EE20 F003          	lfsr	2,3
  4140  003B9E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4141  003BA0  26D9               	addwf	fsr2l,f,c
  4142  003BA2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4143  003BA4  22DA               	addwfc	fsr2h,f,c
  4144  003BA6  50DF               	movf	indf2,w,c
  4145  003BA8  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4146  003BAA  0E01               	movlw	1
  4147  003BAC  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4148  003BAE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4149  003BB0  EC05  F02B         	call	_Tmr_TmrBIrqSet
  4150                           
  4151                           ;tmr_drv.c: 280: }
  4152  003BB4  D00E               	goto	l547
  4153  003BB6                     l546:
  4154                           
  4155                           ;tmr_drv.c: 281: else
  4156                           ;tmr_drv.c: 282: {
  4157                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4158  003BB6  0100               	movlb	0	; () banked
  4159  003BB8  EE20 F003          	lfsr	2,3
  4160  003BBC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4161  003BBE  26D9               	addwf	fsr2l,f,c
  4162  003BC0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4163  003BC2  22DA               	addwfc	fsr2h,f,c
  4164  003BC4  50DF               	movf	indf2,w,c
  4165  003BC6  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4166  003BC8  0E00               	movlw	0
  4167  003BCA  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4168  003BCC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4169  003BCE  EC05  F02B         	call	_Tmr_TmrBIrqSet
  4170  003BD2                     l547:
  4171                           
  4172                           ;tmr_drv.c: 285: }
  4173                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4174  003BD2  0100               	movlb	0	; () banked
  4175  003BD4  EE20 F004          	lfsr	2,4
  4176  003BD8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4177  003BDA  26D9               	addwf	fsr2l,f,c
  4178  003BDC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4179  003BDE  22DA               	addwfc	fsr2h,f,c
  4180  003BE0  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4181  003BE4  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4182  003BE8  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4183  003BEC  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4184  003BF0  50DF               	movf	indf2,w,c
  4185  003BF2  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4186  003BF4  EE20 F001          	lfsr	2,1
  4187  003BF8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4188  003BFA  26D9               	addwf	fsr2l,f,c
  4189  003BFC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4190  003BFE  22DA               	addwfc	fsr2h,f,c
  4191  003C00  50DF               	movf	indf2,w,c
  4192  003C02  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4193  003C04  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4194  003C06  EC8F  F018         	call	_Tmr_TmrBPrSet
  4195                           
  4196                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4197  003C0A  0100               	movlb	0	; () banked
  4198  003C0C  EE20 F006          	lfsr	2,6
  4199  003C10  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4200  003C12  26D9               	addwf	fsr2l,f,c
  4201  003C14  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4202  003C16  22DA               	addwfc	fsr2h,f,c
  4203  003C18  04DE               	decf	postinc2,w,c
  4204  003C1A  A4D8               	btfss	status,2,c
  4205  003C1C  0012               	return	
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;tmr_drv.c: 290: {
  4209                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4210  003C1E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4211  003C20  EC7F  F02F         	call	_Tmr_StartTmr
  4212                           
  4213                           ;tmr_drv.c: 293: }
  4214  003C24  0012               	return	
  4215  003C26                     __end_of_Tmr_TmrBConfig:
  4216                           	opt stack 0
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           intcon	equ	0xFF2
  4222                           intcon2	equ	0xFF1
  4223                           intcon3	equ	0xFF0
  4224                           postinc0	equ	0xFEE
  4225                           wreg	equ	0xFE8
  4226                           postdec1	equ	0xFE5
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           postdec2	equ	0xFDD
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function _Tmr_TmrBPrSet *****************
  4237 ;; Defined at:
  4238 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  TmrNumb         1    wreg     unsigned char 
  4241 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4242 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4243 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4246 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4247 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      enum E7736
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;Total ram usage:       10 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:   12
  4264 ;; This function calls:
  4265 ;;		___lldiv
  4266 ;;		___lmul
  4267 ;; This function is called by:
  4268 ;;		_Tmr_TmrBConfig
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text9
  4273  00311E                     __ptext9:
  4274                           	opt stack 0
  4275  00311E                     _Tmr_TmrBPrSet:
  4276                           	opt stack 15
  4277                           
  4278                           ;incstack = 0
  4279                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4280  00311E  0100               	movlb	0	; () banked
  4281  003120  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4282                           
  4283                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4284                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4285  003122  0E00               	movlw	0
  4286  003124  0100               	movlb	0	; () banked
  4287  003126  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4288  003128  0E00               	movlw	0
  4289  00312A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4290  00312C  0E00               	movlw	0
  4291  00312E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4292  003130  0E00               	movlw	0
  4293  003132  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4297  003134  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4298  003136  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4299  003138  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4300  00313C  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4301  003140  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4302  003142  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4303  003144  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4304  003148  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4305  00314C  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4306  00314E  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4307  003150  ECE9  F028         	call	___lmul	;wreg free
  4308  003154  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4309  003158  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4310  00315C  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4311  003160  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4312                           
  4313                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4314  003164  0E00               	movlw	0
  4315  003166  0100               	movlb	0	; () banked
  4316  003168  6F89               	movwf	___lldiv@dividend& (0+255),b
  4317  00316A  0E1B               	movlw	27
  4318  00316C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4319  00316E  0EB7               	movlw	183
  4320  003170  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4321  003172  0E00               	movlw	0
  4322  003174  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4323  003176  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4324  00317A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4325  00317E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4326  003182  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4327  003186  EC85  F025         	call	___lldiv	;wreg free
  4328  00318A  0100               	movlb	0	; () banked
  4329  00318C  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4330  00318E  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4331  003190  E13A               	bnz	l13003
  4332  003192  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4333  003194  A0D8               	btfss	status,0,c
  4334  003196  D02D               	goto	l529
  4335  003198  D036               	goto	l528
  4336  00319A                     
  4337                           ; BSR set to: 0
  4338                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4339                           
  4340                           ; BSR set to: 0
  4341  00319A  0E00               	movlw	0
  4342  00319C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4343  00319E  0E1B               	movlw	27
  4344  0031A0  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4345  0031A2  0EB7               	movlw	183
  4346  0031A4  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4347  0031A6  0E00               	movlw	0
  4348  0031A8  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4349  0031AA  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4350  0031AE  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4351  0031B2  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4352  0031B6  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4353  0031BA  EC85  F025         	call	___lldiv	;wreg free
  4354  0031BE  0100               	movlb	0	; () banked
  4355  0031C0  5189               	movf	?___lldiv& (0+255),w,b
  4356  0031C2  6ECB               	movwf	4043,c	;volatile
  4357                           
  4358                           ;tmr_drv.c: 210: break;
  4359  0031C4  D01D               	goto	l531
  4360  0031C6                     
  4361                           ; BSR set to: 0
  4362                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4363                           
  4364                           ; BSR set to: 0
  4365  0031C6  0E00               	movlw	0
  4366  0031C8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4367  0031CA  0E1B               	movlw	27
  4368  0031CC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4369  0031CE  0EB7               	movlw	183
  4370  0031D0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4371  0031D2  0E00               	movlw	0
  4372  0031D4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4373  0031D6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4374  0031DA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4375  0031DE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4376  0031E2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4377  0031E6  EC85  F025         	call	___lldiv	;wreg free
  4378  0031EA  0100               	movlb	0	; () banked
  4379  0031EC  5189               	movf	?___lldiv& (0+255),w,b
  4380  0031EE  6E77               	movwf	3959,c	;volatile
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;tmr_drv.c: 219: }
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;tmr_drv.c: 218: break;
  4387                           
  4388                           ;tmr_drv.c: 217: default:
  4389                           
  4390                           ;tmr_drv.c: 215: break;
  4391  0031F0  D007               	goto	l531
  4392  0031F2                     l529:
  4393                           
  4394                           ; BSR set to: 0
  4395                           
  4396                           ; BSR set to: 0
  4397  0031F2  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4398                           
  4399                           ; Switch size 1, requested type "space"
  4400                           ; Number of cases is 2, Range of values is 2 to 4
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte            7     4 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  0031F4  0A02               	xorlw	2	; case 2
  4406  0031F6  B4D8               	btfsc	status,2,c
  4407  0031F8  D7D0               	goto	l530
  4408  0031FA  0A06               	xorlw	6	; case 4
  4409  0031FC  B4D8               	btfsc	status,2,c
  4410  0031FE  D7E3               	goto	l532
  4411  003200                     l531:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4415                           
  4416                           ; BSR set to: 0
  4417  003200  0E00               	movlw	0
  4418  003202  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4419                           
  4420                           ;tmr_drv.c: 223: }
  4421  003204  0012               	return	
  4422  003206                     l528:
  4423  003206                     l13003:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;tmr_drv.c: 224: else
  4427                           ;tmr_drv.c: 225: {
  4428                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4429  003206  0E01               	movlw	1
  4430  003208  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4431                           
  4432                           ; BSR set to: 0
  4433  00320A  0012               	return	
  4434  00320C                     __end_of_Tmr_TmrBPrSet:
  4435                           	opt stack 0
  4436                           tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           prodh	equ	0xFF4
  4441                           prodl	equ	0xFF3
  4442                           intcon	equ	0xFF2
  4443                           intcon2	equ	0xFF1
  4444                           intcon3	equ	0xFF0
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           postdec1	equ	0xFE5
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           indf2	equ	0xFDF
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function _Tmr_TmrBIrqSet *****************
  4458 ;; Defined at:
  4459 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  TmrNumb         1    wreg     unsigned char 
  4462 ;;  Priority        1   29[BANK0 ] enum E7716
  4463 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        3 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   11
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_Tmr_TmrBConfig
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text10
  4490  00560A                     __ptext10:
  4491                           	opt stack 0
  4492  00560A                     _Tmr_TmrBIrqSet:
  4493                           	opt stack 16
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;incstack = 0
  4497                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4498  00560A  0100               	movlb	0	; () banked
  4499  00560C  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4500                           
  4501                           ;tmr_drv.c: 156: switch (TmrNumb)
  4502  00560E  D01A               	goto	l520
  4503  005610                     l521:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4507  005610  929E               	bcf	3998,1,c	;volatile
  4508                           
  4509                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4510  005612  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4511  005614  D002               	bra	u8075
  4512  005616  929F               	bcf	3999,1,c	;volatile
  4513  005618  D001               	bra	u8076
  4514  00561A                     u8075:
  4515  00561A  829F               	bsf	3999,1,c	;volatile
  4516  00561C                     u8076:
  4517                           
  4518                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4519  00561C  0100               	movlb	0	; () banked
  4520  00561E  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4521  005620  D002               	bra	u8085
  4522  005622  929D               	bcf	3997,1,c	;volatile
  4523  005624  D001               	bra	u8086
  4524  005626                     u8085:
  4525  005626  829D               	bsf	3997,1,c	;volatile
  4526  005628                     u8086:
  4527                           
  4528                           ;tmr_drv.c: 165: break;
  4529  005628  0012               	return	
  4530  00562A                     l523:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4534  00562A  96A4               	bcf	4004,3,c	;volatile
  4535                           
  4536                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4537  00562C  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4538  00562E  D002               	bra	u8095
  4539  005630  96A5               	bcf	4005,3,c	;volatile
  4540  005632  D001               	bra	u8096
  4541  005634                     u8095:
  4542  005634  86A5               	bsf	4005,3,c	;volatile
  4543  005636                     u8096:
  4544                           
  4545                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4546  005636  0100               	movlb	0	; () banked
  4547  005638  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4548  00563A  D002               	bra	u8105
  4549  00563C  96A3               	bcf	4003,3,c	;volatile
  4550  00563E  D001               	bra	u8106
  4551  005640                     u8105:
  4552  005640  86A3               	bsf	4003,3,c	;volatile
  4553  005642                     u8106:
  4554                           
  4555                           ;tmr_drv.c: 178: }
  4556                           
  4557                           ;tmr_drv.c: 177: break;
  4558                           
  4559                           ;tmr_drv.c: 176: default:
  4560                           
  4561                           ;tmr_drv.c: 174: break;
  4562  005642  0012               	return	
  4563  005644                     l520:
  4564  005644  0100               	movlb	0	; () banked
  4565  005646  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4566                           
  4567                           ; Switch size 1, requested type "space"
  4568                           ; Number of cases is 2, Range of values is 2 to 4
  4569                           ; switch strategies available:
  4570                           ; Name         Instructions Cycles
  4571                           ; simple_byte            7     4 (average)
  4572                           ;	Chosen strategy is simple_byte
  4573  005648  0A02               	xorlw	2	; case 2
  4574  00564A  B4D8               	btfsc	status,2,c
  4575  00564C  D7E1               	goto	l521
  4576  00564E  0A06               	xorlw	6	; case 4
  4577  005650  A4D8               	btfss	status,2,c
  4578  005652  0012               	return	
  4579  005654  D7EA               	goto	l523
  4580  005656                     __end_of_Tmr_TmrBIrqSet:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           intcon3	equ	0xFF0
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           postinc2	equ	0xFDE
  4598                           postdec2	equ	0xFDD
  4599                           fsr2h	equ	0xFDA
  4600                           fsr2l	equ	0xFD9
  4601                           status	equ	0xFD8
  4602                           
  4603 ;; *************** function _Tmr_StartTmr *****************
  4604 ;; Defined at:
  4605 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  TmrNumb         1    wreg     unsigned char 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;Total ram usage:        1 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:   11
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_Tmr_TmrBConfig
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text11
  4634  005EFE                     __ptext11:
  4635                           	opt stack 0
  4636  005EFE                     _Tmr_StartTmr:
  4637                           	opt stack 16
  4638                           
  4639                           ;incstack = 0
  4640                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4641  005EFE  0100               	movlb	0	; () banked
  4642  005F00  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4643                           
  4644                           ;tmr_drv.c: 245: switch (TmrNumb)
  4645  005F02  D004               	goto	l538
  4646  005F04                     l539:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4650  005F04  84CA               	bsf	4042,2,c	;volatile
  4651                           
  4652                           ;tmr_drv.c: 250: break;
  4653  005F06  0012               	return	
  4654  005F08                     l541:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4658  005F08  8476               	bsf	3958,2,c	;volatile
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;tmr_drv.c: 259: }
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;tmr_drv.c: 258: break;
  4665                           
  4666                           ;tmr_drv.c: 257: default:
  4667                           
  4668                           ;tmr_drv.c: 255: break;
  4669  005F0A  0012               	return	
  4670  005F0C                     l538:
  4671                           
  4672                           ; BSR set to: 0
  4673  005F0C  0100               	movlb	0	; () banked
  4674  005F0E  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4675                           
  4676                           ; Switch size 1, requested type "space"
  4677                           ; Number of cases is 2, Range of values is 2 to 4
  4678                           ; switch strategies available:
  4679                           ; Name         Instructions Cycles
  4680                           ; simple_byte            7     4 (average)
  4681                           ;	Chosen strategy is simple_byte
  4682  005F10  0A02               	xorlw	2	; case 2
  4683  005F12  B4D8               	btfsc	status,2,c
  4684  005F14  D7F7               	goto	l539
  4685  005F16  0A06               	xorlw	6	; case 4
  4686  005F18  A4D8               	btfss	status,2,c
  4687  005F1A  0012               	return	
  4688  005F1C  D7F5               	goto	l541
  4689  005F1E                     __end_of_Tmr_StartTmr:
  4690                           	opt stack 0
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           prodh	equ	0xFF4
  4696                           prodl	equ	0xFF3
  4697                           intcon	equ	0xFF2
  4698                           intcon2	equ	0xFF1
  4699                           intcon3	equ	0xFF0
  4700                           postinc0	equ	0xFEE
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           fsr1h	equ	0xFE2
  4704                           fsr1l	equ	0xFE1
  4705                           indf2	equ	0xFDF
  4706                           postinc2	equ	0xFDE
  4707                           postdec2	equ	0xFDD
  4708                           fsr2h	equ	0xFDA
  4709                           fsr2l	equ	0xFD9
  4710                           status	equ	0xFD8
  4711                           
  4712 ;; *************** function _TmrBInit *****************
  4713 ;; Defined at:
  4714 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  TmrNumb         1    wreg     unsigned char 
  4717 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4718 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;Total ram usage:        4 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:   11
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_Tmr_TmrBConfig
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text12
  4745  004686                     __ptext12:
  4746                           	opt stack 0
  4747  004686                     _TmrBInit:
  4748                           	opt stack 16
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;incstack = 0
  4752                           ;TmrBInit@TmrNumb stored from wreg
  4753  004686  0100               	movlb	0	; () banked
  4754  004688  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4755                           
  4756                           ;tmr_drv.c: 75: switch (TmrNumb)
  4757  00468A  D03F               	goto	l500
  4758  00468C                     l503:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4762  00468C  90CA               	bcf	4042,0,c	;volatile
  4763  00468E  D001               	goto	L1
  4764  004690                     l505:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4768  004690  80CA               	bsf	4042,0,c	;volatile
  4769  004692                     L1:
  4770                           
  4771                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4772  004692  92CA               	bcf	4042,1,c	;volatile
  4773                           
  4774                           ;tmr_drv.c: 91: break;
  4775  004694  D00E               	goto	l504
  4776  004696                     l506:
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4780  004696  80CA               	bsf	4042,0,c	;volatile
  4781                           
  4782                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4783  004698  82CA               	bsf	4042,1,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;tmr_drv.c: 100: }
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;tmr_drv.c: 99: break;
  4790                           
  4791                           ;tmr_drv.c: 98: default:
  4792                           
  4793                           ;tmr_drv.c: 96: break;
  4794  00469A  D00B               	goto	l504
  4795  00469C                     
  4796                           ; BSR set to: 0
  4797  00469C  0100               	movlb	0	; () banked
  4798  00469E  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4799                           
  4800                           ; Switch size 1, requested type "space"
  4801                           ; Number of cases is 3, Range of values is 1 to 16
  4802                           ; switch strategies available:
  4803                           ; Name         Instructions Cycles
  4804                           ; simple_byte           10     6 (average)
  4805                           ;	Chosen strategy is simple_byte
  4806  0046A0  0A01               	xorlw	1	; case 1
  4807  0046A2  B4D8               	btfsc	status,2,c
  4808  0046A4  D7F3               	goto	l503
  4809  0046A6  0A05               	xorlw	5	; case 4
  4810  0046A8  B4D8               	btfsc	status,2,c
  4811  0046AA  D7F2               	goto	l505
  4812  0046AC  0A14               	xorlw	20	; case 16
  4813  0046AE  B4D8               	btfsc	status,2,c
  4814  0046B0  D7F2               	goto	l506
  4815  0046B2                     l504:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4819                           
  4820                           ; BSR set to: 0
  4821  0046B2  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4822  0046B6  0EFF               	movlw	255
  4823  0046B8  277F               	addwf	??_TmrBInit& (0+255),f,b
  4824  0046BA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4825  0046BC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4826  0046BE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4827  0046C0  50CA               	movf	4042,w,c	;volatile
  4828  0046C2  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4829  0046C4  0B87               	andlw	-121
  4830  0046C6  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4831  0046C8  6ECA               	movwf	4042,c	;volatile
  4832                           
  4833                           ;tmr_drv.c: 104: break;
  4834  0046CA  0012               	return	
  4835  0046CC                     l511:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4839  0046CC  9076               	bcf	3958,0,c	;volatile
  4840  0046CE  D001               	goto	L2
  4841  0046D0                     l513:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4845  0046D0  8076               	bsf	3958,0,c	;volatile
  4846  0046D2                     L2:
  4847                           
  4848                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4849  0046D2  9276               	bcf	3958,1,c	;volatile
  4850                           
  4851                           ;tmr_drv.c: 120: break;
  4852  0046D4  D00D               	goto	l512
  4853  0046D6                     l514:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4857  0046D6  8076               	bsf	3958,0,c	;volatile
  4858                           
  4859                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4860  0046D8  8276               	bsf	3958,1,c	;volatile
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;tmr_drv.c: 129: }
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;tmr_drv.c: 128: break;
  4867                           
  4868                           ;tmr_drv.c: 127: default:
  4869                           
  4870                           ;tmr_drv.c: 125: break;
  4871  0046DA  D00A               	goto	l512
  4872  0046DC                     
  4873                           ; BSR set to: 0
  4874                           
  4875                           ; BSR set to: 0
  4876  0046DC  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4877                           
  4878                           ; Switch size 1, requested type "space"
  4879                           ; Number of cases is 3, Range of values is 1 to 16
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; simple_byte           10     6 (average)
  4883                           ;	Chosen strategy is simple_byte
  4884  0046DE  0A01               	xorlw	1	; case 1
  4885  0046E0  B4D8               	btfsc	status,2,c
  4886  0046E2  D7F4               	goto	l511
  4887  0046E4  0A05               	xorlw	5	; case 4
  4888  0046E6  B4D8               	btfsc	status,2,c
  4889  0046E8  D7F3               	goto	l513
  4890  0046EA  0A14               	xorlw	20	; case 16
  4891  0046EC  B4D8               	btfsc	status,2,c
  4892  0046EE  D7F3               	goto	l514
  4893  0046F0                     l512:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4897                           
  4898                           ; BSR set to: 0
  4899  0046F0  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4900  0046F4  0EFF               	movlw	255
  4901  0046F6  277F               	addwf	??_TmrBInit& (0+255),f,b
  4902  0046F8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4903  0046FA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4904  0046FC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4905  0046FE  5076               	movf	3958,w,c	;volatile
  4906  004700  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4907  004702  0B87               	andlw	-121
  4908  004704  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4909  004706  6E76               	movwf	3958,c	;volatile
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;tmr_drv.c: 137: }
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;tmr_drv.c: 136: break;
  4916                           
  4917                           ;tmr_drv.c: 135: default:
  4918                           
  4919                           ;tmr_drv.c: 133: break;
  4920  004708  0012               	return	
  4921  00470A                     l500:
  4922                           
  4923                           ; BSR set to: 0
  4924  00470A  0100               	movlb	0	; () banked
  4925  00470C  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4926                           
  4927                           ; Switch size 1, requested type "space"
  4928                           ; Number of cases is 2, Range of values is 2 to 4
  4929                           ; switch strategies available:
  4930                           ; Name         Instructions Cycles
  4931                           ; simple_byte            7     4 (average)
  4932                           ;	Chosen strategy is simple_byte
  4933  00470E  0A02               	xorlw	2	; case 2
  4934  004710  B4D8               	btfsc	status,2,c
  4935  004712  D7C4               	goto	l502
  4936  004714  0A06               	xorlw	6	; case 4
  4937  004716  A4D8               	btfss	status,2,c
  4938  004718  0012               	return	
  4939  00471A  D7E0               	goto	l510
  4940  00471C                     __end_of_TmrBInit:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           intcon	equ	0xFF2
  4949                           intcon2	equ	0xFF1
  4950                           intcon3	equ	0xFF0
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           indf2	equ	0xFDF
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _Sch_MainScheduler *****************
  4964 ;; Defined at:
  4965 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   22
  4986 ;; This function calls:
  4987 ;;		_InitializeTasks
  4988 ;;		_ScheduleTasks
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text13
  4995  005F5C                     __ptext13:
  4996                           	opt stack 0
  4997  005F5C                     _Sch_MainScheduler:
  4998                           	opt stack 8
  4999                           
  5000                           ;os_sched.c: 178: InitializeTasks();
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;incstack = 0
  5004  005F5C  ECF6  F026         	call	_InitializeTasks	;wreg free
  5005                           
  5006                           ;os_sched.c: 180: SystemState = RunningState;
  5007  005F60  0E01               	movlw	1
  5008  005F62  0100               	movlb	0	; () banked
  5009  005F64  6FD9               	movwf	_SystemState& (0+255),b
  5010  005F66                     
  5011                           ;os_sched.c: 188: {
  5012                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5013                           
  5014                           ; BSR set to: 0
  5015  005F66  0102               	movlb	2	; () banked
  5016  005F68  51F3               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5017  005F6A  A4D8               	btfss	status,2,c
  5018  005F6C  D7FC               	goto	l790
  5019                           
  5020                           ; BSR set to: 2
  5021                           ;os_sched.c: 191: {
  5022                           ;os_sched.c: 196: ScheduleTasks();
  5023  005F6E  ECF2  F016         	call	_ScheduleTasks	;wreg free
  5024                           
  5025                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5026  005F72  0E01               	movlw	1
  5027  005F74  0102               	movlb	2	; () banked
  5028  005F76  6FF3               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5029                           
  5030                           ; BSR set to: 2
  5031                           
  5032                           ; BSR set to: 2
  5033  005F78  D7F6               	goto	l790
  5034  005F7A                     __end_of_Sch_MainScheduler:
  5035                           	opt stack 0
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           intcon2	equ	0xFF1
  5044                           intcon3	equ	0xFF0
  5045                           postinc0	equ	0xFEE
  5046                           wreg	equ	0xFE8
  5047                           postdec1	equ	0xFE5
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _ScheduleTasks *****************
  5058 ;; Defined at:
  5059 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  ActiveTaskIn    1   87[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;Total ram usage:        5 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:   21
  5080 ;; This function calls:
  5081 ;;		_I2cSlv_MainTask
  5082 ;;		_Led_MainTask
  5083 ;;		_MdmHttp_MainTask
  5084 ;;		_Mdm_DrvMainFn
  5085 ;;		_Mdm_MainTask
  5086 ;;		_MyApp_Task
  5087 ;;		_Rtcm_MainTask
  5088 ;;		_Term_MainTask
  5089 ;;		_UsbDevice_MainTask
  5090 ;;		_Wdg_MainTask
  5091 ;; This function is called by:
  5092 ;;		_Sch_MainScheduler
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text14
  5097  002DE4                     __ptext14:
  5098                           	opt stack 0
  5099  002DE4                     _ScheduleTasks:
  5100                           	opt stack 8
  5101                           
  5102                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5103                           
  5104                           ; BSR set to: 2
  5105                           ;incstack = 0
  5106  002DE4  0E00               	movlw	0
  5107  002DE6  0100               	movlb	0	; () banked
  5108  002DE8  6FB7               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5109                           
  5110                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5111  002DEA  0E00               	movlw	0
  5112  002DEC  6FB7               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5113  002DEE                     l14061:
  5114                           
  5115                           ; BSR set to: 0
  5116  002DEE  0E3B               	movlw	low _TaskNumber
  5117  002DF0  6EF6               	movwf	tblptrl,c
  5118  002DF2                     	if	1	;There is more than 1 active tblptr byte
  5119  002DF2  0EFC               	movlw	high _TaskNumber
  5120  002DF4  6EF7               	movwf	tblptrh,c
  5121  002DF6                     	endif
  5122  002DF6                     	if	0	;There are less than 3 active tblptr bytes
  5123  002DF6                     	endif
  5124  002DF6  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5125  002DF8  6FB3               	movwf	??_ScheduleTasks& (0+255),b
  5126  002DFA  6BB4               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5127  002DFC  0009               	tblrd		*+
  5128  002DFE  50F5               	movf	tablat,w,c
  5129  002E00  5DB3               	subwf	??_ScheduleTasks& (0+255),w,b
  5130  002E02  0009               	tblrd		*+
  5131  002E04  50F5               	movf	tablat,w,c
  5132  002E06  59B4               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5133  002E08  B0D8               	btfsc	status,0,c
  5134  002E0A  0012               	return	
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;os_sched.c: 106: {
  5138                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5139                           
  5140                           ; BSR set to: 0
  5141                           
  5142                           ; BSR set to: 0
  5143  002E0C  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5144  002E0E  0D08               	mullw	8
  5145  002E10  0E03               	movlw	3
  5146  002E12  26F3               	addwf	prodl,f,c
  5147  002E14  0E00               	movlw	0
  5148  002E16  22F4               	addwfc	prodh,f,c
  5149  002E18  0E90               	movlw	low _TaskTable
  5150  002E1A  24F3               	addwf	prodl,w,c
  5151  002E1C  6ED9               	movwf	fsr2l,c
  5152  002E1E  0E05               	movlw	high _TaskTable
  5153  002E20  20F4               	addwfc	prodh,w,c
  5154  002E22  6EDA               	movwf	fsr2h,c
  5155  002E24  2ADE               	incf	postinc2,f,c
  5156  002E26  0E00               	movlw	0
  5157  002E28  22DD               	addwfc	postdec2,f,c
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5161  002E2A  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5162  002E2C  0D08               	mullw	8
  5163  002E2E  0E05               	movlw	5
  5164  002E30  26F3               	addwf	prodl,f,c
  5165  002E32  0E00               	movlw	0
  5166  002E34  22F4               	addwfc	prodh,f,c
  5167  002E36  0E90               	movlw	low _TaskTable
  5168  002E38  24F3               	addwf	prodl,w,c
  5169  002E3A  6ED9               	movwf	fsr2l,c
  5170  002E3C  0E05               	movlw	high _TaskTable
  5171  002E3E  20F4               	addwfc	prodh,w,c
  5172  002E40  6EDA               	movwf	fsr2h,c
  5173  002E42  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5174  002E44  0D08               	mullw	8
  5175  002E46  0E03               	movlw	3
  5176  002E48  26F3               	addwf	prodl,f,c
  5177  002E4A  0E00               	movlw	0
  5178  002E4C  22F4               	addwfc	prodh,f,c
  5179  002E4E  0E90               	movlw	low _TaskTable
  5180  002E50  24F3               	addwf	prodl,w,c
  5181  002E52  6EE1               	movwf	fsr1l,c
  5182  002E54  0E05               	movlw	high _TaskTable
  5183  002E56  20F4               	addwfc	prodh,w,c
  5184  002E58  6EE2               	movwf	fsr1h,c
  5185  002E5A  50DE               	movf	postinc2,w,c
  5186  002E5C  5CE6               	subwf	postinc1,w,c
  5187  002E5E  50DE               	movf	postinc2,w,c
  5188  002E60  58E6               	subwfb	postinc1,w,c
  5189  002E62  A0D8               	btfss	status,0,c
  5190  002E64  D04E               	goto	l775
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;os_sched.c: 111: {
  5194                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5195  002E66  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5196  002E68  0D08               	mullw	8
  5197  002E6A  0E03               	movlw	3
  5198  002E6C  26F3               	addwf	prodl,f,c
  5199  002E6E  0E00               	movlw	0
  5200  002E70  22F4               	addwfc	prodh,f,c
  5201  002E72  0E90               	movlw	low _TaskTable
  5202  002E74  24F3               	addwf	prodl,w,c
  5203  002E76  6ED9               	movwf	fsr2l,c
  5204  002E78  0E05               	movlw	high _TaskTable
  5205  002E7A  20F4               	addwfc	prodh,w,c
  5206  002E7C  6EDA               	movwf	fsr2h,c
  5207  002E7E  0E00               	movlw	0
  5208  002E80  6EDE               	movwf	postinc2,c
  5209  002E82  0E00               	movlw	0
  5210  002E84  6EDD               	movwf	postdec2,c
  5211                           
  5212                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5213  002E86  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5214  002E88  0D08               	mullw	8
  5215  002E8A  0E02               	movlw	2
  5216  002E8C  26F3               	addwf	prodl,f,c
  5217  002E8E  0E00               	movlw	0
  5218  002E90  22F4               	addwfc	prodh,f,c
  5219  002E92  0E90               	movlw	low _TaskTable
  5220  002E94  24F3               	addwf	prodl,w,c
  5221  002E96  6ED9               	movwf	fsr2l,c
  5222  002E98  0E05               	movlw	high _TaskTable
  5223  002E9A  20F4               	addwfc	prodh,w,c
  5224  002E9C  6EDA               	movwf	fsr2h,c
  5225  002E9E  0E01               	movlw	1
  5226  002EA0  6EDF               	movwf	indf2,c
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5230  002EA2  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5231  002EA4  0D08               	mullw	8
  5232  002EA6  0E90               	movlw	low _TaskTable
  5233  002EA8  24F3               	addwf	prodl,w,c
  5234  002EAA  6ED9               	movwf	fsr2l,c
  5235  002EAC  0E05               	movlw	high _TaskTable
  5236  002EAE  20F4               	addwfc	prodh,w,c
  5237  002EB0  6EDA               	movwf	fsr2h,c
  5238  002EB2  D801               	call	u13558
  5239  002EB4  D017               	goto	u13559
  5240  002EB6                     u13558:
  5241  002EB6  0005               	push	
  5242  002EB8  6EFA               	movwf	pclath,c
  5243  002EBA  50DE               	movf	postinc2,w,c
  5244  002EBC  6EFD               	movwf	tosl,c
  5245  002EBE  50DE               	movf	postinc2,w,c
  5246  002EC0  6EFE               	movwf	tosh,c
  5247  002EC2  50F8               	movf	tblptru,w,c
  5248  002EC4  6EFF               	movwf	tosu,c
  5249  002EC6  50FA               	movf	pclath,w,c
  5250  002EC8  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5251  002ECA  0D08               	mullw	8
  5252  002ECC  0E07               	movlw	7
  5253  002ECE  26F3               	addwf	prodl,f,c
  5254  002ED0  0E00               	movlw	0
  5255  002ED2  22F4               	addwfc	prodh,f,c
  5256  002ED4  0E90               	movlw	low _TaskTable
  5257  002ED6  24F3               	addwf	prodl,w,c
  5258  002ED8  6ED9               	movwf	fsr2l,c
  5259  002EDA  0E05               	movlw	high _TaskTable
  5260  002EDC  20F4               	addwfc	prodh,w,c
  5261  002EDE  6EDA               	movwf	fsr2h,c
  5262  002EE0  50DF               	movf	indf2,w,c
  5263  002EE2  0012               	return		;indir
  5264  002EE4                     u13559:
  5265                           
  5266                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5267  002EE4  0100               	movlb	0	; () banked
  5268  002EE6  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5269  002EE8  0D08               	mullw	8
  5270  002EEA  0E02               	movlw	2
  5271  002EEC  26F3               	addwf	prodl,f,c
  5272  002EEE  0E00               	movlw	0
  5273  002EF0  22F4               	addwfc	prodh,f,c
  5274  002EF2  0E90               	movlw	low _TaskTable
  5275  002EF4  24F3               	addwf	prodl,w,c
  5276  002EF6  6ED9               	movwf	fsr2l,c
  5277  002EF8  0E05               	movlw	high _TaskTable
  5278  002EFA  20F4               	addwfc	prodh,w,c
  5279  002EFC  6EDA               	movwf	fsr2h,c
  5280  002EFE  0E00               	movlw	0
  5281  002F00  6EDF               	movwf	indf2,c
  5282  002F02                     l775:
  5283                           
  5284                           ; BSR set to: 0
  5285                           
  5286                           ; BSR set to: 0
  5287                           
  5288                           ;os_sched.c: 117: else
  5289                           ;os_sched.c: 118: {
  5290                           
  5291                           ; BSR set to: 0
  5292  002F02  2BB7               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5293  002F04  D774               	goto	l14061
  5294  002F06                     __end_of_ScheduleTasks:
  5295                           	opt stack 0
  5296                           tosu	equ	0xFFF
  5297                           tosh	equ	0xFFE
  5298                           tosl	equ	0xFFD
  5299                           pclath	equ	0xFFA
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           intcon2	equ	0xFF1
  5308                           intcon3	equ	0xFF0
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           postinc1	equ	0xFE6
  5312                           postdec1	equ	0xFE5
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _InitializeTasks *****************
  5323 ;; Defined at:
  5324 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  ActiveTaskIn    1   85[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;Total ram usage:        3 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:   21
  5345 ;; This function calls:
  5346 ;;		_I2cSlv_MainTask
  5347 ;;		_Led_MainTask
  5348 ;;		_MdmHttp_MainTask
  5349 ;;		_Mdm_DrvMainFn
  5350 ;;		_Mdm_MainTask
  5351 ;;		_MyApp_Task
  5352 ;;		_Rtcm_MainTask
  5353 ;;		_Term_MainTask
  5354 ;;		_UsbDevice_MainTask
  5355 ;;		_Wdg_MainTask
  5356 ;; This function is called by:
  5357 ;;		_Sch_MainScheduler
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text15
  5362  004DEC                     __ptext15:
  5363                           	opt stack 0
  5364  004DEC                     _InitializeTasks:
  5365                           	opt stack 8
  5366                           
  5367                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;incstack = 0
  5371  004DEC  0E00               	movlw	0
  5372  004DEE  0100               	movlb	0	; () banked
  5373  004DF0  6FB5               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5374                           
  5375                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5376  004DF2  0E00               	movlw	0
  5377  004DF4  6FB5               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5378  004DF6                     l14049:
  5379                           
  5380                           ; BSR set to: 0
  5381  004DF6  0E3B               	movlw	low _TaskNumber
  5382  004DF8  6EF6               	movwf	tblptrl,c
  5383  004DFA                     	if	1	;There is more than 1 active tblptr byte
  5384  004DFA  0EFC               	movlw	high _TaskNumber
  5385  004DFC  6EF7               	movwf	tblptrh,c
  5386  004DFE                     	endif
  5387  004DFE                     	if	0	;There are less than 3 active tblptr bytes
  5388  004DFE                     	endif
  5389  004DFE  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5390  004E00  6FB3               	movwf	??_InitializeTasks& (0+255),b
  5391  004E02  6BB4               	clrf	(??_InitializeTasks+1)& (0+255),b
  5392  004E04  0009               	tblrd		*+
  5393  004E06  50F5               	movf	tablat,w,c
  5394  004E08  5DB3               	subwf	??_InitializeTasks& (0+255),w,b
  5395  004E0A  0009               	tblrd		*+
  5396  004E0C  50F5               	movf	tablat,w,c
  5397  004E0E  59B4               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5398  004E10  B0D8               	btfsc	status,0,c
  5399  004E12  0012               	return	
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;os_sched.c: 86: {
  5403                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5404                           
  5405                           ; BSR set to: 0
  5406                           
  5407                           ; BSR set to: 0
  5408  004E14  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5409  004E16  0D08               	mullw	8
  5410  004E18  0E90               	movlw	low _TaskTable
  5411  004E1A  24F3               	addwf	prodl,w,c
  5412  004E1C  6ED9               	movwf	fsr2l,c
  5413  004E1E  0E05               	movlw	high _TaskTable
  5414  004E20  20F4               	addwfc	prodh,w,c
  5415  004E22  6EDA               	movwf	fsr2h,c
  5416  004E24  D801               	call	u13518
  5417  004E26  D017               	goto	u13519
  5418  004E28                     u13518:
  5419  004E28  0005               	push	
  5420  004E2A  6EFA               	movwf	pclath,c
  5421  004E2C  50DE               	movf	postinc2,w,c
  5422  004E2E  6EFD               	movwf	tosl,c
  5423  004E30  50DE               	movf	postinc2,w,c
  5424  004E32  6EFE               	movwf	tosh,c
  5425  004E34  50F8               	movf	tblptru,w,c
  5426  004E36  6EFF               	movwf	tosu,c
  5427  004E38  50FA               	movf	pclath,w,c
  5428  004E3A  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5429  004E3C  0D08               	mullw	8
  5430  004E3E  0E07               	movlw	7
  5431  004E40  26F3               	addwf	prodl,f,c
  5432  004E42  0E00               	movlw	0
  5433  004E44  22F4               	addwfc	prodh,f,c
  5434  004E46  0E90               	movlw	low _TaskTable
  5435  004E48  24F3               	addwf	prodl,w,c
  5436  004E4A  6ED9               	movwf	fsr2l,c
  5437  004E4C  0E05               	movlw	high _TaskTable
  5438  004E4E  20F4               	addwfc	prodh,w,c
  5439  004E50  6EDA               	movwf	fsr2h,c
  5440  004E52  50DF               	movf	indf2,w,c
  5441  004E54  0012               	return		;indir
  5442  004E56                     u13519:
  5443  004E56  0100               	movlb	0	; () banked
  5444  004E58  2BB5               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5445  004E5A  D7CD               	goto	l14049
  5446  004E5C                     __end_of_InitializeTasks:
  5447                           	opt stack 0
  5448                           tosu	equ	0xFFF
  5449                           tosh	equ	0xFFE
  5450                           tosl	equ	0xFFD
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           intcon2	equ	0xFF1
  5460                           intcon3	equ	0xFF0
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           postinc1	equ	0xFE6
  5464                           postdec1	equ	0xFE5
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function _MyApp_Task *****************
  5475 ;; Defined at:
  5476 ;;		line 165 in file "../Source/c/04_App/app.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  Options         1    wreg     unsigned char 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  Options         1    0[COMRAM] unsigned char 
  5481 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5482 ;;  smsNumber      14   70[BANK1 ] unsigned char [14]
  5483 ;;  phone          14   50[BANK1 ] unsigned char [14]
  5484 ;;  cmpString       3   84[BANK1 ] unsigned char [3]
  5485 ;;  I2cTxBufferT    2   68[BANK1 ] unsigned char [2]
  5486 ;;  on              2   66[BANK1 ] unsigned char [2]
  5487 ;;  off             2   64[BANK1 ] unsigned char [2]
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1    wreg      void 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Locals:         0       0      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Totals:         0       0      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;Total ram usage:       87 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:   15
  5504 ;; This function calls:
  5505 ;;		_ClearBuffer
  5506 ;;		_Led_SetLedBlinkTime
  5507 ;;		_Mdm_GetSmsData
  5508 ;;		_Mdm_IsRinging
  5509 ;;		_Mdm_IsSmsReceived
  5510 ;;		_Mdm_RequestSmsData
  5511 ;;		_StringCompare
  5512 ;;		_Uart_WriteConstString
  5513 ;;		_blinkForSeconds
  5514 ;;		_initGprsModem
  5515 ;; This function is called by:
  5516 ;;		_InitializeTasks
  5517 ;;		_ScheduleTasks
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text16
  5522  001FFE                     __ptext16:
  5523                           	opt stack 0
  5524  001FFE                     _MyApp_Task:
  5525                           	opt stack 13
  5526                           
  5527                           ;app.c: 167: static uint8_t countRelay1 = 1;
  5528                           ;app.c: 168: static uint16_t countRelay2 = 1;
  5529                           ;app.c: 169: static bool isRelay1On = 0;
  5530                           ;app.c: 170: static bool isRelay2On = 0;
  5531                           ;app.c: 171: static uint8_t test = 0;
  5532                           ;app.c: 172: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;incstack = 0
  5536  001FFE  C3CA  F140         	movff	MyApp_Task@F8992,MyApp_Task@off
  5537  002002  C3CB  F141         	movff	MyApp_Task@F8992+1,MyApp_Task@off+1
  5538                           
  5539                           ;app.c: 173: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5540  002006  C3C8  F142         	movff	MyApp_Task@F8995,MyApp_Task@on
  5541  00200A  C3C9  F143         	movff	MyApp_Task@F8995+1,MyApp_Task@on+1
  5542                           
  5543                           ;app.c: 176: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5544  00200E  C320  F144         	movff	MyApp_Task@F8998,MyApp_Task@I2cTxBufferTest
  5545  002012  C321  F145         	movff	MyApp_Task@F8998+1,MyApp_Task@I2cTxBufferTest+1
  5546                           
  5547                           ;app.c: 177: static UINT8 I2cStsReady = 0u;
  5548                           ;app.c: 178: UINT8 phone[] = {'+', '3', '9', '3', '2', '0', '0', '2', '7', '6', '3', '1'
      +                          , '8', '\0'};
  5549  002016  EE24  F0E2         	lfsr	2,MyApp_Task@F9001
  5550  00201A  EE11  F032         	lfsr	1,MyApp_Task@phone
  5551  00201E  0E0D               	movlw	13
  5552  002020                     u13431:
  5553  002020  CFDB FFE3          	movff	plusw2,plusw1
  5554  002024  06E8               	decf	wreg,f,c
  5555  002026  E2FC               	bc	u13431
  5556                           
  5557                           ;app.c: 180: static uint16_t blickTicks = 0xFFFF;
  5558                           ;app.c: 181: static uint8_t blinkSeconds = 0;
  5559                           ;app.c: 183: uint8_t smsText[((UINT8)(50))];
  5560                           ;app.c: 184: uint8_t smsNumber[14];
  5561                           ;app.c: 185: uint8_t cmpString[] = {'c', 'a', 't'};
  5562  002028  C3C5  F154         	movff	MyApp_Task@F9008,MyApp_Task@cmpString
  5563  00202C  C3C6  F155         	movff	MyApp_Task@F9008+1,MyApp_Task@cmpString+1
  5564  002030  C3C7  F156         	movff	MyApp_Task@F9008+2,MyApp_Task@cmpString+2
  5565                           
  5566                           ;app.c: 187: switch (SystemState)
  5567  002034  D08A               	goto	l2580
  5568  002036                     
  5569                           ;app.c: 192: Led_SetLedBlinkTime(1u,100,900);
  5570  002036  0E00               	movlw	0
  5571  002038  0100               	movlb	0	; () banked
  5572  00203A  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5573  00203C  0E64               	movlw	100
  5574  00203E  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5575  002040  0E03               	movlw	3
  5576  002042  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5577  002044  0E84               	movlw	132
  5578  002046  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5579  002048  0E01               	movlw	1
  5580  00204A  ECC1  F029         	call	_Led_SetLedBlinkTime
  5581                           
  5582                           ;app.c: 193: break;
  5583  00204E  0012               	return	
  5584  002050                     
  5585                           ;app.c: 197: if (initGprsModem())
  5586  002050  EC08  F026         	call	_initGprsModem	;wreg free
  5587  002054  0900               	iorlw	0
  5588  002056  B4D8               	btfsc	status,2,c
  5589  002058  0012               	return	
  5590                           
  5591                           ;app.c: 198: {
  5592                           ;app.c: 200: if (Mdm_IsRinging())
  5593  00205A  ECF5  F02E         	call	_Mdm_IsRinging	;wreg free
  5594  00205E  0900               	iorlw	0
  5595  002060  B4D8               	btfsc	status,2,c
  5596  002062  D008               	goto	l2585
  5597                           
  5598                           ;app.c: 201: {
  5599                           ;app.c: 202: blickTicks = 0;
  5600  002064  0E00               	movlw	0
  5601  002066  0103               	movlb	3	; () banked
  5602  002068  6FFD               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5603  00206A  0E00               	movlw	0
  5604  00206C  6FFC               	movwf	MyApp_Task@blickTicks& (0+255),b
  5605                           
  5606                           ;app.c: 203: blinkSeconds = 5;
  5607  00206E  0E05               	movlw	5
  5608  002070  0101               	movlb	1	; () banked
  5609  002072  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5610  002074                     l2585:
  5611                           
  5612                           ;app.c: 204: }
  5613                           ;app.c: 205: if (Mdm_IsSmsReceived())
  5614                           
  5615                           ; BSR set to: 1
  5616  002074  ECE3  F02E         	call	_Mdm_IsSmsReceived	;wreg free
  5617  002078  0900               	iorlw	0
  5618  00207A  A4D8               	btfss	status,2,c
  5619                           
  5620                           ;app.c: 206: {
  5621                           ;app.c: 207: Mdm_RequestSmsData();
  5622  00207C  EC7C  F030         	call	_Mdm_RequestSmsData	;wreg free
  5623                           
  5624                           ;app.c: 208: }
  5625                           ;app.c: 209: if (Mdm_GetSmsData(smsText, smsNumber) == SmsDataReady)
  5626  002080  0E00               	movlw	low MyApp_Task@smsText
  5627  002082  0100               	movlb	0	; () banked
  5628  002084  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5629  002086  0E01               	movlw	high MyApp_Task@smsText
  5630  002088  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5631  00208A  0E46               	movlw	low MyApp_Task@smsNumber
  5632  00208C  6F89               	movwf	Mdm_GetSmsData@MessageHeader& (0+255),b
  5633  00208E  0E01               	movlw	high MyApp_Task@smsNumber
  5634  002090  6F8A               	movwf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),b
  5635  002092  EC48  F026         	call	_Mdm_GetSmsData	;wreg free
  5636  002096  06E8               	decf	wreg,f,c
  5637  002098  A4D8               	btfss	status,2,c
  5638  00209A  D04D               	goto	l2587
  5639                           
  5640                           ;app.c: 210: {
  5641                           ;app.c: 211: blickTicks = 0;
  5642  00209C  0E00               	movlw	0
  5643  00209E  0103               	movlb	3	; () banked
  5644  0020A0  6FFD               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5645  0020A2  0E00               	movlw	0
  5646  0020A4  6FFC               	movwf	MyApp_Task@blickTicks& (0+255),b
  5647                           
  5648                           ;app.c: 212: blinkSeconds = 3;
  5649  0020A6  0E03               	movlw	3
  5650  0020A8  0101               	movlb	1	; () banked
  5651  0020AA  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;app.c: 213: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5655  0020AC  0E3A               	movlw	low STR_30
  5656  0020AE  0100               	movlb	0	; () banked
  5657  0020B0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5658  0020B2  0EFF               	movlw	high STR_30
  5659  0020B4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5660  0020B6  0E01               	movlw	1
  5661  0020B8  EC20  F02C         	call	_Uart_WriteConstString
  5662                           
  5663                           ;app.c: 215: if (StringCompare(smsNumber, phone, 14))
  5664  0020BC  0E46               	movlw	low MyApp_Task@smsNumber
  5665  0020BE  0100               	movlb	0	; () banked
  5666  0020C0  6F7D               	movwf	StringCompare@String1& (0+255),b
  5667  0020C2  0E01               	movlw	high MyApp_Task@smsNumber
  5668  0020C4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5669  0020C6  0E32               	movlw	low MyApp_Task@phone
  5670  0020C8  6F7F               	movwf	StringCompare@String2& (0+255),b
  5671  0020CA  0E01               	movlw	high MyApp_Task@phone
  5672  0020CC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5673  0020CE  0E00               	movlw	0
  5674  0020D0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5675  0020D2  0E0E               	movlw	14
  5676  0020D4  6F81               	movwf	StringCompare@Len& (0+255),b
  5677  0020D6  EC3E  F02A         	call	_StringCompare	;wreg free
  5678  0020DA  0900               	iorlw	0
  5679  0020DC  B4D8               	btfsc	status,2,c
  5680  0020DE  D015               	goto	l2589
  5681                           
  5682                           ;app.c: 216: {
  5683                           ;app.c: 217: if (StringCompare(smsText, cmpString, sizeof(cmpString)))
  5684  0020E0  0E00               	movlw	low MyApp_Task@smsText
  5685  0020E2  0100               	movlb	0	; () banked
  5686  0020E4  6F7D               	movwf	StringCompare@String1& (0+255),b
  5687  0020E6  0E01               	movlw	high MyApp_Task@smsText
  5688  0020E8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5689  0020EA  0E54               	movlw	low MyApp_Task@cmpString
  5690  0020EC  6F7F               	movwf	StringCompare@String2& (0+255),b
  5691  0020EE  0E01               	movlw	high MyApp_Task@cmpString
  5692  0020F0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5693  0020F2  0E00               	movlw	0
  5694  0020F4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5695  0020F6  0E03               	movlw	3
  5696  0020F8  6F81               	movwf	StringCompare@Len& (0+255),b
  5697  0020FA  EC3E  F02A         	call	_StringCompare	;wreg free
  5698  0020FE  0900               	iorlw	0
  5699  002100  B4D8               	btfsc	status,2,c
  5700  002102  D003               	goto	l2589
  5701                           
  5702                           ;app.c: 218: {
  5703                           ;app.c: 219: blinkSeconds = 6;
  5704  002104  0E06               	movlw	6
  5705  002106  0101               	movlb	1	; () banked
  5706  002108  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5707  00210A                     l2589:
  5708                           
  5709                           ;app.c: 220: }
  5710                           ;app.c: 221: }
  5711                           ;app.c: 222: ClearBuffer(smsText, sizeof(smsText));
  5712                           
  5713                           ; BSR set to: 1
  5714                           
  5715                           ; BSR set to: 1
  5716  00210A  0E00               	movlw	low MyApp_Task@smsText
  5717  00210C  0100               	movlb	0	; () banked
  5718  00210E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5719  002110  0E01               	movlw	high MyApp_Task@smsText
  5720  002112  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5721  002114  0E00               	movlw	0
  5722  002116  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5723  002118  0E32               	movlw	50
  5724  00211A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5725  00211C  EC75  F02D         	call	_ClearBuffer	;wreg free
  5726                           
  5727                           ;app.c: 223: ClearBuffer(smsNumber, 14);
  5728  002120  0E46               	movlw	low MyApp_Task@smsNumber
  5729  002122  0100               	movlb	0	; () banked
  5730  002124  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5731  002126  0E01               	movlw	high MyApp_Task@smsNumber
  5732  002128  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5733  00212A  0E00               	movlw	0
  5734  00212C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5735  00212E  0E0E               	movlw	14
  5736  002130  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5737  002132  EC75  F02D         	call	_ClearBuffer	;wreg free
  5738  002136                     l2587:
  5739                           
  5740                           ;app.c: 224: }
  5741                           ;app.c: 225: blinkForSeconds(blinkSeconds, &blickTicks);
  5742  002136  0EFC               	movlw	low MyApp_Task@blickTicks
  5743  002138  0100               	movlb	0	; () banked
  5744  00213A  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5745  00213C  0E03               	movlw	high MyApp_Task@blickTicks
  5746  00213E  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5747  002140  0101               	movlb	1	; () banked
  5748  002142  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5749  002144  EC3B  F02D         	call	_blinkForSeconds
  5750                           
  5751                           ;app.c: 232: }
  5752                           
  5753                           ;app.c: 231: break;
  5754                           
  5755                           ;app.c: 230: default:
  5756                           
  5757                           ;app.c: 226: }
  5758                           ;app.c: 227: break;
  5759  002148  0012               	return	
  5760  00214A                     l2580:
  5761  00214A  0100               	movlb	0	; () banked
  5762  00214C  51D9               	movf	_SystemState& (0+255),w,b
  5763                           
  5764                           ; Switch size 1, requested type "space"
  5765                           ; Number of cases is 2, Range of values is 0 to 1
  5766                           ; switch strategies available:
  5767                           ; Name         Instructions Cycles
  5768                           ; simple_byte            7     4 (average)
  5769                           ;	Chosen strategy is simple_byte
  5770  00214E  0A00               	xorlw	0	; case 0
  5771  002150  B4D8               	btfsc	status,2,c
  5772  002152  D771               	goto	l2581
  5773  002154  0A01               	xorlw	1	; case 1
  5774  002156  A4D8               	btfss	status,2,c
  5775  002158  0012               	return	
  5776  00215A  D77A               	goto	l2583
  5777  00215C                     __end_of_MyApp_Task:
  5778                           	opt stack 0
  5779                           tosu	equ	0xFFF
  5780                           tosh	equ	0xFFE
  5781                           tosl	equ	0xFFD
  5782                           pclath	equ	0xFFA
  5783                           tblptru	equ	0xFF8
  5784                           tblptrh	equ	0xFF7
  5785                           tblptrl	equ	0xFF6
  5786                           tablat	equ	0xFF5
  5787                           prodh	equ	0xFF4
  5788                           prodl	equ	0xFF3
  5789                           intcon	equ	0xFF2
  5790                           intcon2	equ	0xFF1
  5791                           intcon3	equ	0xFF0
  5792                           postinc0	equ	0xFEE
  5793                           wreg	equ	0xFE8
  5794                           postinc1	equ	0xFE6
  5795                           postdec1	equ	0xFE5
  5796                           plusw1	equ	0xFE3
  5797                           fsr1h	equ	0xFE2
  5798                           fsr1l	equ	0xFE1
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           postdec2	equ	0xFDD
  5802                           plusw2	equ	0xFDB
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _Term_MainTask *****************
  5808 ;; Defined at:
  5809 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  Options         1    wreg     unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  Options         1    0[COMRAM] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      void 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:   17
  5830 ;; This function calls:
  5831 ;;		_Term_MainSm
  5832 ;; This function is called by:
  5833 ;;		_InitializeTasks
  5834 ;;		_ScheduleTasks
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text17
  5839  005FCE                     __ptext17:
  5840                           	opt stack 0
  5841  005FCE                     _Term_MainTask:
  5842                           	opt stack 11
  5843                           
  5844                           ;term.c: 847: switch (SystemState)
  5845                           
  5846                           ;incstack = 0
  5847  005FCE  D003               	goto	l2440
  5848  005FD0                     
  5849                           ;term.c: 858: Term_MainSm();
  5850  005FD0  EC5B  F008         	call	_Term_MainSm	;wreg free
  5851                           
  5852                           ;term.c: 865: }
  5853                           
  5854                           ;term.c: 864: break;
  5855                           
  5856                           ;term.c: 863: default:
  5857                           
  5858                           ;term.c: 860: break;
  5859  005FD4  0012               	return	
  5860  005FD6                     l2440:
  5861  005FD6  0100               	movlb	0	; () banked
  5862  005FD8  51D9               	movf	_SystemState& (0+255),w,b
  5863                           
  5864                           ; Switch size 1, requested type "space"
  5865                           ; Number of cases is 2, Range of values is 0 to 1
  5866                           ; switch strategies available:
  5867                           ; Name         Instructions Cycles
  5868                           ; simple_byte            7     4 (average)
  5869                           ;	Chosen strategy is simple_byte
  5870  005FDA  0A00               	xorlw	0	; case 0
  5871  005FDC  B4D8               	btfsc	status,2,c
  5872  005FDE  0012               	return	
  5873  005FE0  0A01               	xorlw	1	; case 1
  5874  005FE2  A4D8               	btfss	status,2,c
  5875  005FE4  0012               	return	
  5876  005FE6  D7F4               	goto	l2443
  5877  005FE8                     __end_of_Term_MainTask:
  5878                           	opt stack 0
  5879                           tosu	equ	0xFFF
  5880                           tosh	equ	0xFFE
  5881                           tosl	equ	0xFFD
  5882                           pclath	equ	0xFFA
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           intcon2	equ	0xFF1
  5891                           intcon3	equ	0xFF0
  5892                           postinc0	equ	0xFEE
  5893                           wreg	equ	0xFE8
  5894                           postinc1	equ	0xFE6
  5895                           postdec1	equ	0xFE5
  5896                           plusw1	equ	0xFE3
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           indf2	equ	0xFDF
  5900                           postinc2	equ	0xFDE
  5901                           postdec2	equ	0xFDD
  5902                           plusw2	equ	0xFDB
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _Rtcm_MainTask *****************
  5908 ;; Defined at:
  5909 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  Options         1    wreg     unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  Options         1    0[COMRAM] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:   14
  5930 ;; This function calls:
  5931 ;;		_Rtcc_AlarmConfig
  5932 ;;		_Rtcc_LockRtc
  5933 ;;		_Rtcc_RtcConfig
  5934 ;;		_Rtcc_SetRtcStatus
  5935 ;;		_Rtcc_UnlockRtc
  5936 ;;		_Rtcm_GetRtccDate
  5937 ;;		_Rtcm_SetRtccDate
  5938 ;; This function is called by:
  5939 ;;		_InitializeTasks
  5940 ;;		_ScheduleTasks
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text18
  5945  00496A                     __ptext18:
  5946                           	opt stack 0
  5947  00496A                     _Rtcm_MainTask:
  5948                           	opt stack 14
  5949                           
  5950                           ;rtcm.c: 101: switch (SystemState)
  5951                           
  5952                           ;incstack = 0
  5953  00496A  D03D               	goto	l2170
  5954  00496C                     l2171:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5958  00496C  86CD               	bsf	4045,3,c	;volatile
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5962  00496E  0E00               	movlw	0
  5963  004970  0103               	movlb	3	; () banked
  5964  004972  6FB6               	movwf	_RtcConfig& (0+255),b
  5965                           
  5966                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5967  004974  0E00               	movlw	0
  5968  004976  6FB7               	movwf	(_RtcConfig+1)& (0+255),b
  5969                           
  5970                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5971  004978  0E01               	movlw	1
  5972  00497A  6FB8               	movwf	(_RtcConfig+2)& (0+255),b
  5973                           
  5974                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5975  00497C  0E01               	movlw	1
  5976  00497E  6FB9               	movwf	(_RtcConfig+3)& (0+255),b
  5977                           
  5978                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5979  004980  0E01               	movlw	1
  5980  004982  6FB2               	movwf	_AlCfg& (0+255),b
  5981                           
  5982                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5983  004984  0E01               	movlw	1
  5984  004986  6FB3               	movwf	(_AlCfg+1)& (0+255),b
  5985                           
  5986                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5987  004988  0E01               	movlw	1
  5988  00498A  6FB4               	movwf	(_AlCfg+2)& (0+255),b
  5989                           
  5990                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5991  00498C  0E00               	movlw	0
  5992  00498E  6FB5               	movwf	(_AlCfg+3)& (0+255),b
  5993                           
  5994                           ; BSR set to: 3
  5995                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5996  004990  EC6C  F030         	call	_Rtcc_UnlockRtc	;wreg free
  5997                           
  5998                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5999  004994  0EB6               	movlw	low _RtcConfig
  6000  004996  0100               	movlb	0	; () banked
  6001  004998  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6002  00499A  0E03               	movlw	high _RtcConfig
  6003  00499C  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6004  00499E  EC58  F022         	call	_Rtcc_RtcConfig	;wreg free
  6005                           
  6006                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6007  0049A2  0EB2               	movlw	low _AlCfg
  6008  0049A4  0100               	movlb	0	; () banked
  6009  0049A6  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6010  0049A8  0E03               	movlw	high _AlCfg
  6011  0049AA  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6012  0049AC  EC64  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6013                           
  6014                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6015  0049B0  0E01               	movlw	1
  6016  0049B2  EC24  F030         	call	_Rtcc_SetRtcStatus
  6017                           
  6018                           ;rtcm.c: 127: Rtcc_LockRtc();
  6019  0049B6  EC74  F030         	call	_Rtcc_LockRtc	;wreg free
  6020                           
  6021                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6022  0049BA  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6023  0049BE  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6024  0049C2  0E07               	movlw	7
  6025  0049C4                     u9421:
  6026  0049C4  CFDB FFEB          	movff	plusw2,plusw0
  6027  0049C8  06E8               	decf	wreg,f,c
  6028  0049CA  E2FC               	bc	u9421
  6029  0049CC  EC97  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6030                           
  6031                           ;rtcm.c: 154: break;
  6032  0049D0  0012               	return	
  6033  0049D2                     
  6034                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6035  0049D2  ECCD  F027         	call	_Rtcm_GetRtccDate	;wreg free
  6036  0049D6  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6037  0049DA  0E07               	movlw	7
  6038  0049DC                     u9431:
  6039  0049DC  CFEB FFDB          	movff	plusw0,plusw2
  6040  0049E0  06E8               	decf	wreg,f,c
  6041  0049E2  E2FC               	bc	u9431
  6042                           
  6043                           ;rtcm.c: 165: }
  6044                           
  6045                           ;rtcm.c: 164: break;
  6046                           
  6047                           ;rtcm.c: 163: default:
  6048                           
  6049                           ;rtcm.c: 160: break;
  6050  0049E4  0012               	return	
  6051  0049E6                     l2170:
  6052  0049E6  0100               	movlb	0	; () banked
  6053  0049E8  51D9               	movf	_SystemState& (0+255),w,b
  6054                           
  6055                           ; Switch size 1, requested type "space"
  6056                           ; Number of cases is 2, Range of values is 0 to 1
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            7     4 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  0049EA  0A00               	xorlw	0	; case 0
  6062  0049EC  B4D8               	btfsc	status,2,c
  6063  0049EE  D7BE               	goto	l2171
  6064  0049F0  0A01               	xorlw	1	; case 1
  6065  0049F2  A4D8               	btfss	status,2,c
  6066  0049F4  0012               	return	
  6067  0049F6  D7ED               	goto	l2173
  6068  0049F8                     __end_of_Rtcm_MainTask:
  6069                           	opt stack 0
  6070                           tosu	equ	0xFFF
  6071                           tosh	equ	0xFFE
  6072                           tosl	equ	0xFFD
  6073                           pclath	equ	0xFFA
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           intcon	equ	0xFF2
  6081                           intcon2	equ	0xFF1
  6082                           intcon3	equ	0xFF0
  6083                           postinc0	equ	0xFEE
  6084                           plusw0	equ	0xFEB
  6085                           wreg	equ	0xFE8
  6086                           postinc1	equ	0xFE6
  6087                           postdec1	equ	0xFE5
  6088                           plusw1	equ	0xFE3
  6089                           fsr1h	equ	0xFE2
  6090                           fsr1l	equ	0xFE1
  6091                           indf2	equ	0xFDF
  6092                           postinc2	equ	0xFDE
  6093                           postdec2	equ	0xFDD
  6094                           plusw2	equ	0xFDB
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function _Led_MainTask *****************
  6100 ;; Defined at:
  6101 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  Options         1    wreg     unsigned char 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  Options         1    0[COMRAM] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;Total ram usage:        1 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   14
  6122 ;; This function calls:
  6123 ;;		_LedStateMachine
  6124 ;; This function is called by:
  6125 ;;		_InitializeTasks
  6126 ;;		_ScheduleTasks
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text19
  6131  0039C6                     __ptext19:
  6132                           	opt stack 0
  6133  0039C6                     _Led_MainTask:
  6134                           	opt stack 14
  6135                           
  6136                           ;led.c: 300: switch (SystemState)
  6137                           
  6138                           ;incstack = 0
  6139  0039C6  D05C               	goto	l2084
  6140  0039C8                     l2085:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6144  0039C8  9895               	bcf	3989,4,c	;volatile
  6145                           
  6146                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6147  0039CA  9A95               	bcf	3989,5,c	;volatile
  6148                           
  6149                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6150  0039CC  9C95               	bcf	3989,6,c	;volatile
  6151                           
  6152                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6153  0039CE  9883               	bcf	3971,4,c	;volatile
  6154                           
  6155                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6156  0039D0  9A83               	bcf	3971,5,c	;volatile
  6157                           
  6158                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6159  0039D2  9C83               	bcf	3971,6,c	;volatile
  6160                           
  6161                           ;led.c: 311: break;
  6162  0039D4  0012               	return	
  6163  0039D6                     
  6164                           ; BSR set to: 0
  6165                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6166                           
  6167                           ; BSR set to: 0
  6168  0039D6  0EFB               	movlw	low _Led1Sts
  6169  0039D8  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6170  0039DA  0E01               	movlw	high _Led1Sts
  6171  0039DC  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6172  0039DE  0EFA               	movlw	low _Led1OutSts
  6173  0039E0  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6174  0039E2  0E01               	movlw	high _Led1OutSts
  6175  0039E4  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6176  0039E6  0E70               	movlw	low _Led1Blink
  6177  0039E8  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6178  0039EA  0E03               	movlw	high _Led1Blink
  6179  0039EC  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6180  0039EE  0E94               	movlw	low _Led1Pulse
  6181  0039F0  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6182  0039F2  0E03               	movlw	high _Led1Pulse
  6183  0039F4  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6184  0039F6  0E01               	movlw	1
  6185  0039F8  ECB3  F021         	call	_LedStateMachine
  6186  0039FC  0100               	movlb	0	; () banked
  6187  0039FE  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6188  003A00  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6189  003A02  5083               	movf	3971,w,c	;volatile
  6190  003A04  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6191  003A06  0BEF               	andlw	-17
  6192  003A08  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6193  003A0A  6E83               	movwf	3971,c	;volatile
  6194                           
  6195                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6196  003A0C  0EF9               	movlw	low _Led2Sts
  6197  003A0E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6198  003A10  0E01               	movlw	high _Led2Sts
  6199  003A12  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6200  003A14  0EF8               	movlw	low _Led2OutSts
  6201  003A16  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6202  003A18  0E01               	movlw	high _Led2OutSts
  6203  003A1A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6204  003A1C  0E67               	movlw	low _Led2Blink
  6205  003A1E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6206  003A20  0E03               	movlw	high _Led2Blink
  6207  003A22  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6208  003A24  0E8E               	movlw	low _Led2Pulse
  6209  003A26  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6210  003A28  0E03               	movlw	high _Led2Pulse
  6211  003A2A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6212  003A2C  0E02               	movlw	2
  6213  003A2E  ECB3  F021         	call	_LedStateMachine
  6214  003A32  0100               	movlb	0	; () banked
  6215  003A34  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6216  003A36  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6217  003A38  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6218  003A3A  5083               	movf	3971,w,c	;volatile
  6219  003A3C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6220  003A3E  0BDF               	andlw	-33
  6221  003A40  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6222  003A42  6E83               	movwf	3971,c	;volatile
  6223                           
  6224                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6225  003A44  0EF7               	movlw	low _Led3Sts
  6226  003A46  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6227  003A48  0E01               	movlw	high _Led3Sts
  6228  003A4A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6229  003A4C  0EF6               	movlw	low _Led3OutSts
  6230  003A4E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6231  003A50  0E01               	movlw	high _Led3OutSts
  6232  003A52  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6233  003A54  0E5E               	movlw	low _Led3Blink
  6234  003A56  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6235  003A58  0E03               	movlw	high _Led3Blink
  6236  003A5A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6237  003A5C  0E88               	movlw	low _Led3Pulse
  6238  003A5E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6239  003A60  0E03               	movlw	high _Led3Pulse
  6240  003A62  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6241  003A64  0E03               	movlw	3
  6242  003A66  ECB3  F021         	call	_LedStateMachine
  6243  003A6A  0100               	movlb	0	; () banked
  6244  003A6C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6245  003A6E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6246  003A70  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6247  003A72  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6248  003A74  5083               	movf	3971,w,c	;volatile
  6249  003A76  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6250  003A78  0BBF               	andlw	-65
  6251  003A7A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6252  003A7C  6E83               	movwf	3971,c	;volatile
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;led.c: 326: }
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;led.c: 325: break;
  6259                           
  6260                           ;led.c: 324: default:
  6261                           
  6262                           ;led.c: 321: break;
  6263  003A7E  0012               	return	
  6264  003A80                     l2084:
  6265                           
  6266                           ; BSR set to: 0
  6267  003A80  0100               	movlb	0	; () banked
  6268  003A82  51D9               	movf	_SystemState& (0+255),w,b
  6269                           
  6270                           ; Switch size 1, requested type "space"
  6271                           ; Number of cases is 2, Range of values is 0 to 1
  6272                           ; switch strategies available:
  6273                           ; Name         Instructions Cycles
  6274                           ; simple_byte            7     4 (average)
  6275                           ;	Chosen strategy is simple_byte
  6276  003A84  0A00               	xorlw	0	; case 0
  6277  003A86  B4D8               	btfsc	status,2,c
  6278  003A88  D79F               	goto	l2085
  6279  003A8A  0A01               	xorlw	1	; case 1
  6280  003A8C  A4D8               	btfss	status,2,c
  6281  003A8E  0012               	return	
  6282  003A90  D7A2               	goto	l2087
  6283  003A92                     __end_of_Led_MainTask:
  6284                           	opt stack 0
  6285                           tosu	equ	0xFFF
  6286                           tosh	equ	0xFFE
  6287                           tosl	equ	0xFFD
  6288                           pclath	equ	0xFFA
  6289                           tblptru	equ	0xFF8
  6290                           tblptrh	equ	0xFF7
  6291                           tblptrl	equ	0xFF6
  6292                           tablat	equ	0xFF5
  6293                           prodh	equ	0xFF4
  6294                           prodl	equ	0xFF3
  6295                           intcon	equ	0xFF2
  6296                           intcon2	equ	0xFF1
  6297                           intcon3	equ	0xFF0
  6298                           postinc0	equ	0xFEE
  6299                           plusw0	equ	0xFEB
  6300                           wreg	equ	0xFE8
  6301                           postinc1	equ	0xFE6
  6302                           postdec1	equ	0xFE5
  6303                           plusw1	equ	0xFE3
  6304                           fsr1h	equ	0xFE2
  6305                           fsr1l	equ	0xFE1
  6306                           indf2	equ	0xFDF
  6307                           postinc2	equ	0xFDE
  6308                           postdec2	equ	0xFDD
  6309                           plusw2	equ	0xFDB
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314 ;; *************** function _UsbDevice_MainTask *****************
  6315 ;; Defined at:
  6316 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  Options         1    wreg     unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  Options         1    0[COMRAM] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   20
  6337 ;; This function calls:
  6338 ;;		_CDCTxService
  6339 ;;		_USBDeviceInit
  6340 ;;		_USBDeviceTasks
  6341 ;; This function is called by:
  6342 ;;		_InitializeTasks
  6343 ;;		_ScheduleTasks
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text20
  6348  005DA2                     __ptext20:
  6349                           	opt stack 0
  6350  005DA2                     _UsbDevice_MainTask:
  6351                           	opt stack 8
  6352                           
  6353                           ;usb_device_mgr.c: 74: switch (SystemState)
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;incstack = 0
  6357  005DA2  D008               	goto	l1977
  6358  005DA4                     
  6359                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6360  005DA4  EC08  F012         	call	_USBDeviceInit	;wreg free
  6361                           
  6362                           ;usb_device_mgr.c: 80: ;
  6363                           ;usb_device_mgr.c: 81: break;
  6364  005DA8  0012               	return	
  6365  005DAA                     
  6366                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6367  005DAA  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6368                           
  6369                           ;usb_device_mgr.c: 90: CDCTxService();
  6370  005DAE  EC55  F013         	call	_CDCTxService	;wreg free
  6371                           
  6372                           ;usb_device_mgr.c: 101: }
  6373                           
  6374                           ;usb_device_mgr.c: 100: break;
  6375                           
  6376                           ;usb_device_mgr.c: 99: default:
  6377                           
  6378                           ;usb_device_mgr.c: 96: break;
  6379  005DB2  0012               	return	
  6380  005DB4                     l1977:
  6381  005DB4  0100               	movlb	0	; () banked
  6382  005DB6  51D9               	movf	_SystemState& (0+255),w,b
  6383                           
  6384                           ; Switch size 1, requested type "space"
  6385                           ; Number of cases is 2, Range of values is 0 to 1
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte            7     4 (average)
  6389                           ;	Chosen strategy is simple_byte
  6390  005DB8  0A00               	xorlw	0	; case 0
  6391  005DBA  B4D8               	btfsc	status,2,c
  6392  005DBC  D7F3               	goto	l1978
  6393  005DBE  0A01               	xorlw	1	; case 1
  6394  005DC0  A4D8               	btfss	status,2,c
  6395  005DC2  0012               	return	
  6396  005DC4  D7F2               	goto	l1980
  6397  005DC6                     __end_of_UsbDevice_MainTask:
  6398                           	opt stack 0
  6399                           tosu	equ	0xFFF
  6400                           tosh	equ	0xFFE
  6401                           tosl	equ	0xFFD
  6402                           pclath	equ	0xFFA
  6403                           tblptru	equ	0xFF8
  6404                           tblptrh	equ	0xFF7
  6405                           tblptrl	equ	0xFF6
  6406                           tablat	equ	0xFF5
  6407                           prodh	equ	0xFF4
  6408                           prodl	equ	0xFF3
  6409                           intcon	equ	0xFF2
  6410                           intcon2	equ	0xFF1
  6411                           intcon3	equ	0xFF0
  6412                           postinc0	equ	0xFEE
  6413                           plusw0	equ	0xFEB
  6414                           wreg	equ	0xFE8
  6415                           postinc1	equ	0xFE6
  6416                           postdec1	equ	0xFE5
  6417                           plusw1	equ	0xFE3
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           plusw2	equ	0xFDB
  6424                           fsr2h	equ	0xFDA
  6425                           fsr2l	equ	0xFD9
  6426                           status	equ	0xFD8
  6427                           
  6428 ;; *************** function _MdmHttp_MainTask *****************
  6429 ;; Defined at:
  6430 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  Options         1    wreg     unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  Options         1    0[COMRAM] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:   15
  6451 ;; This function calls:
  6452 ;;		_HttpGetMethod
  6453 ;;		_InitGprsNetwork
  6454 ;; This function is called by:
  6455 ;;		_InitializeTasks
  6456 ;;		_ScheduleTasks
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text21
  6461  0056EA                     __ptext21:
  6462                           	opt stack 0
  6463  0056EA                     _MdmHttp_MainTask:
  6464                           	opt stack 13
  6465                           
  6466                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6467                           
  6468                           ;incstack = 0
  6469  0056EA  D019               	goto	l1276
  6470  0056EC                     
  6471                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6472  0056EC  0E03               	movlw	3
  6473  0056EE  0100               	movlb	0	; () banked
  6474  0056F0  19D6               	xorwf	_MdmStatus& (0+255),w,b
  6475  0056F2  A4D8               	btfss	status,2,c
  6476  0056F4  0012               	return	
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;mdm_gsm_gprs_http.c: 570: {
  6480                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6481  0056F6  C326  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6482  0056FA  C327  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6483  0056FE  C1E9  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6484  005702  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6485  005706  0101               	movlb	1	; () banked
  6486  005708  6FE8               	movwf	_GprsNetworkSts& (0+255),b
  6487                           
  6488                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6489  00570A  0EA5               	movlw	low _HttpGetDataLocal
  6490  00570C  0100               	movlb	0	; () banked
  6491  00570E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6492  005710  0E03               	movlw	high _HttpGetDataLocal
  6493  005712  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6494  005714  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6495  005718  0101               	movlb	1	; () banked
  6496  00571A  6FE7               	movwf	_HttpGetMethodSts& (0+255),b
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;mdm_gsm_gprs_http.c: 581: }
  6500                           
  6501                           ; BSR set to: 1
  6502                           ;mdm_gsm_gprs_http.c: 580: break;
  6503                           
  6504                           ;mdm_gsm_gprs_http.c: 579: default:
  6505                           
  6506                           ; BSR set to: 1
  6507                           ;mdm_gsm_gprs_http.c: 575: }
  6508                           ;mdm_gsm_gprs_http.c: 576: break;
  6509  00571C  0012               	return	
  6510  00571E                     l1276:
  6511                           
  6512                           ; BSR set to: 1
  6513  00571E  0100               	movlb	0	; () banked
  6514  005720  51D9               	movf	_SystemState& (0+255),w,b
  6515                           
  6516                           ; Switch size 1, requested type "space"
  6517                           ; Number of cases is 2, Range of values is 0 to 1
  6518                           ; switch strategies available:
  6519                           ; Name         Instructions Cycles
  6520                           ; simple_byte            7     4 (average)
  6521                           ;	Chosen strategy is simple_byte
  6522  005722  0A00               	xorlw	0	; case 0
  6523  005724  B4D8               	btfsc	status,2,c
  6524  005726  0012               	return	
  6525  005728  0A01               	xorlw	1	; case 1
  6526  00572A  A4D8               	btfss	status,2,c
  6527  00572C  0012               	return	
  6528  00572E  D7DE               	goto	l1279
  6529  005730                     __end_of_MdmHttp_MainTask:
  6530                           	opt stack 0
  6531                           tosu	equ	0xFFF
  6532                           tosh	equ	0xFFE
  6533                           tosl	equ	0xFFD
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           intcon3	equ	0xFF0
  6544                           postinc0	equ	0xFEE
  6545                           plusw0	equ	0xFEB
  6546                           wreg	equ	0xFE8
  6547                           postinc1	equ	0xFE6
  6548                           postdec1	equ	0xFE5
  6549                           plusw1	equ	0xFE3
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           plusw2	equ	0xFDB
  6556                           fsr2h	equ	0xFDA
  6557                           fsr2l	equ	0xFD9
  6558                           status	equ	0xFD8
  6559                           
  6560 ;; *************** function _Mdm_MainTask *****************
  6561 ;; Defined at:
  6562 ;;		line 736 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  Options         1    wreg     unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  Options         1    0[COMRAM] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;Total ram usage:        0 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:   15
  6583 ;; This function calls:
  6584 ;;		_CheckModem
  6585 ;;		_ConfigureModem
  6586 ;;		_GetSmsSm
  6587 ;;		_ModemEvtParser
  6588 ;;		_SendSmsSm
  6589 ;;		_TurnOnModem
  6590 ;;		_UartSetConfig
  6591 ;;		_Uart_InitUartModule
  6592 ;; This function is called by:
  6593 ;;		_InitializeTasks
  6594 ;;		_ScheduleTasks
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text22
  6599  00542A                     __ptext22:
  6600                           	opt stack 0
  6601  00542A                     _Mdm_MainTask:
  6602                           	opt stack 13
  6603                           
  6604                           ;mdm_gsm_gprs.c: 738: switch (SystemState)
  6605                           
  6606                           ;incstack = 0
  6607  00542A  D01F               	goto	l1099
  6608  00542C                     
  6609                           ;mdm_gsm_gprs.c: 743: UartSetConfig();
  6610  00542C  ECBD  F028         	call	_UartSetConfig	;wreg free
  6611                           
  6612                           ;mdm_gsm_gprs.c: 745: Uart_InitUartModule(1,&UartConfig);
  6613  005430  0E34               	movlw	low _UartConfig
  6614  005432  0100               	movlb	0	; () banked
  6615  005434  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6616  005436  0E03               	movlw	high _UartConfig
  6617  005438  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6618  00543A  0E01               	movlw	1
  6619  00543C  EC5E  F005         	call	_Uart_InitUartModule
  6620                           
  6621                           ;mdm_gsm_gprs.c: 746: break;
  6622  005440  0012               	return	
  6623  005442                     
  6624                           ;mdm_gsm_gprs.c: 751: CheckModem();
  6625  005442  EC4F  F00F         	call	_CheckModem	;wreg free
  6626                           
  6627                           ;mdm_gsm_gprs.c: 753: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6628  005446  0101               	movlb	1	; () banked
  6629  005448  05F1               	decf	_ComChecCompleted& (0+255),w,b
  6630  00544A  A4D8               	btfss	status,2,c
  6631  00544C  D005               	goto	l1103
  6632                           
  6633                           ; BSR set to: 1
  6634  00544E  0100               	movlb	0	; () banked
  6635  005450  51D6               	movf	_MdmStatus& (0+255),w,b
  6636  005452  B4D8               	btfsc	status,2,c
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;mdm_gsm_gprs.c: 754: {
  6640                           ;mdm_gsm_gprs.c: 756: TurnOnModem();
  6641  005454  EC2B  F02B         	call	_TurnOnModem	;wreg free
  6642  005458                     l1103:
  6643                           
  6644                           ;mdm_gsm_gprs.c: 757: }
  6645                           ;mdm_gsm_gprs.c: 759: ConfigureModem();
  6646  005458  ECAA  F01B         	call	_ConfigureModem	;wreg free
  6647                           
  6648                           ;mdm_gsm_gprs.c: 761: ModemEvtParser();
  6649  00545C  EC83  F017         	call	_ModemEvtParser	;wreg free
  6650                           
  6651                           ;mdm_gsm_gprs.c: 763: GetSmsSm();
  6652  005460  EC30  F015         	call	_GetSmsSm	;wreg free
  6653                           
  6654                           ;mdm_gsm_gprs.c: 765: SendSmsSm();
  6655  005464  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6656                           
  6657                           ;mdm_gsm_gprs.c: 771: }
  6658                           
  6659                           ;mdm_gsm_gprs.c: 770: break;
  6660                           
  6661                           ;mdm_gsm_gprs.c: 769: default:
  6662                           
  6663                           ;mdm_gsm_gprs.c: 766: break;
  6664  005468  0012               	return	
  6665  00546A                     l1099:
  6666  00546A  0100               	movlb	0	; () banked
  6667  00546C  51D9               	movf	_SystemState& (0+255),w,b
  6668                           
  6669                           ; Switch size 1, requested type "space"
  6670                           ; Number of cases is 2, Range of values is 0 to 1
  6671                           ; switch strategies available:
  6672                           ; Name         Instructions Cycles
  6673                           ; simple_byte            7     4 (average)
  6674                           ;	Chosen strategy is simple_byte
  6675  00546E  0A00               	xorlw	0	; case 0
  6676  005470  B4D8               	btfsc	status,2,c
  6677  005472  D7DC               	goto	l1100
  6678  005474  0A01               	xorlw	1	; case 1
  6679  005476  A4D8               	btfss	status,2,c
  6680  005478  0012               	return	
  6681  00547A  D7E3               	goto	l1102
  6682  00547C                     __end_of_Mdm_MainTask:
  6683                           	opt stack 0
  6684                           tosu	equ	0xFFF
  6685                           tosh	equ	0xFFE
  6686                           tosl	equ	0xFFD
  6687                           pclath	equ	0xFFA
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           intcon2	equ	0xFF1
  6696                           intcon3	equ	0xFF0
  6697                           postinc0	equ	0xFEE
  6698                           plusw0	equ	0xFEB
  6699                           wreg	equ	0xFE8
  6700                           postinc1	equ	0xFE6
  6701                           postdec1	equ	0xFE5
  6702                           plusw1	equ	0xFE3
  6703                           fsr1h	equ	0xFE2
  6704                           fsr1l	equ	0xFE1
  6705                           indf2	equ	0xFDF
  6706                           postinc2	equ	0xFDE
  6707                           postdec2	equ	0xFDD
  6708                           plusw2	equ	0xFDB
  6709                           fsr2h	equ	0xFDA
  6710                           fsr2l	equ	0xFD9
  6711                           status	equ	0xFD8
  6712                           
  6713 ;; *************** function _I2cSlv_MainTask *****************
  6714 ;; Defined at:
  6715 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  Options         1    wreg     unsigned char 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  Options         1    0[COMRAM] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6733 ;;Total ram usage:        0 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:   14
  6736 ;; This function calls:
  6737 ;;		_I2cSendMsgSm
  6738 ;;		_I2cSetConfig
  6739 ;;		_I2c_InitI2cModule
  6740 ;;		_OsAlrm_SetOsAlarm
  6741 ;; This function is called by:
  6742 ;;		_InitializeTasks
  6743 ;;		_ScheduleTasks
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text23
  6748  0052DA                     __ptext23:
  6749                           	opt stack 0
  6750  0052DA                     _I2cSlv_MainTask:
  6751                           	opt stack 14
  6752                           
  6753                           ;i2c_slv.c: 217: switch (SystemState)
  6754                           
  6755                           ;incstack = 0
  6756  0052DA  D020               	goto	l1389
  6757  0052DC                     
  6758                           ;i2c_slv.c: 222: I2cSetConfig();
  6759  0052DC  EC6A  F02E         	call	_I2cSetConfig	;wreg free
  6760                           
  6761                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6762  0052E0  0E54               	movlw	low _I2cConfig
  6763  0052E2  0100               	movlb	0	; () banked
  6764  0052E4  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6765  0052E6  0E03               	movlw	high _I2cConfig
  6766  0052E8  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6767  0052EA  ECBD  F026         	call	_I2c_InitI2cModule	;wreg free
  6768                           
  6769                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6770  0052EE  0E00               	movlw	0
  6771  0052F0  0100               	movlb	0	; () banked
  6772  0052F2  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6773  0052F4  0E00               	movlw	0
  6774  0052F6  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6775  0052F8  0E32               	movlw	50
  6776  0052FA  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6777  0052FC  0E00               	movlw	0
  6778  0052FE  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6779  005300  0E00               	movlw	0
  6780  005302  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6781  005304  0E00               	movlw	0
  6782  005306  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6783  005308  0E98               	movlw	low _I2cDummyTx
  6784  00530A  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6785  00530C  0E5F               	movlw	high _I2cDummyTx
  6786  00530E  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6787  005310  EC77  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6788                           
  6789                           ;i2c_slv.c: 227: break;
  6790  005314  0012               	return	
  6791  005316                     
  6792                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6793  005316  ECDB  F01E         	call	_I2cSendMsgSm	;wreg free
  6794                           
  6795                           ;i2c_slv.c: 238: }
  6796                           
  6797                           ;i2c_slv.c: 237: break;
  6798                           
  6799                           ;i2c_slv.c: 236: default:
  6800                           
  6801                           ;i2c_slv.c: 233: break;
  6802  00531A  0012               	return	
  6803  00531C                     l1389:
  6804  00531C  0100               	movlb	0	; () banked
  6805  00531E  51D9               	movf	_SystemState& (0+255),w,b
  6806                           
  6807                           ; Switch size 1, requested type "space"
  6808                           ; Number of cases is 2, Range of values is 0 to 1
  6809                           ; switch strategies available:
  6810                           ; Name         Instructions Cycles
  6811                           ; simple_byte            7     4 (average)
  6812                           ;	Chosen strategy is simple_byte
  6813  005320  0A00               	xorlw	0	; case 0
  6814  005322  B4D8               	btfsc	status,2,c
  6815  005324  D7DB               	goto	l1390
  6816  005326  0A01               	xorlw	1	; case 1
  6817  005328  A4D8               	btfss	status,2,c
  6818  00532A  0012               	return	
  6819  00532C  D7F4               	goto	l1392
  6820  00532E                     __end_of_I2cSlv_MainTask:
  6821                           	opt stack 0
  6822                           tosu	equ	0xFFF
  6823                           tosh	equ	0xFFE
  6824                           tosl	equ	0xFFD
  6825                           pclath	equ	0xFFA
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           intcon2	equ	0xFF1
  6834                           intcon3	equ	0xFF0
  6835                           postinc0	equ	0xFEE
  6836                           plusw0	equ	0xFEB
  6837                           wreg	equ	0xFE8
  6838                           postinc1	equ	0xFE6
  6839                           postdec1	equ	0xFE5
  6840                           plusw1	equ	0xFE3
  6841                           fsr1h	equ	0xFE2
  6842                           fsr1l	equ	0xFE1
  6843                           indf2	equ	0xFDF
  6844                           postinc2	equ	0xFDE
  6845                           postdec2	equ	0xFDD
  6846                           plusw2	equ	0xFDB
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _Mdm_DrvMainFn *****************
  6852 ;; Defined at:
  6853 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  Options         1    wreg     unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  Options         1    0[COMRAM] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;Total ram usage:        0 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:   13
  6874 ;; This function calls:
  6875 ;;		_MdmCntSm
  6876 ;; This function is called by:
  6877 ;;		_InitializeTasks
  6878 ;;		_ScheduleTasks
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text24
  6883  006190                     __ptext24:
  6884                           	opt stack 0
  6885  006190                     _Mdm_DrvMainFn:
  6886                           	opt stack 15
  6887                           
  6888                           ;mdm_drv.c: 307: MdmCntSm();
  6889                           
  6890                           ;incstack = 0
  6891  006190  ECFD  F01F         	call	_MdmCntSm	;wreg free
  6892  006194  0012               	return		;funcret
  6893  006196                     __end_of_Mdm_DrvMainFn:
  6894                           	opt stack 0
  6895                           tosu	equ	0xFFF
  6896                           tosh	equ	0xFFE
  6897                           tosl	equ	0xFFD
  6898                           pclath	equ	0xFFA
  6899                           tblptru	equ	0xFF8
  6900                           tblptrh	equ	0xFF7
  6901                           tblptrl	equ	0xFF6
  6902                           tablat	equ	0xFF5
  6903                           prodh	equ	0xFF4
  6904                           prodl	equ	0xFF3
  6905                           intcon	equ	0xFF2
  6906                           intcon2	equ	0xFF1
  6907                           intcon3	equ	0xFF0
  6908                           postinc0	equ	0xFEE
  6909                           plusw0	equ	0xFEB
  6910                           wreg	equ	0xFE8
  6911                           postinc1	equ	0xFE6
  6912                           postdec1	equ	0xFE5
  6913                           plusw1	equ	0xFE3
  6914                           fsr1h	equ	0xFE2
  6915                           fsr1l	equ	0xFE1
  6916                           indf2	equ	0xFDF
  6917                           postinc2	equ	0xFDE
  6918                           postdec2	equ	0xFDD
  6919                           plusw2	equ	0xFDB
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _Wdg_MainTask *****************
  6925 ;; Defined at:
  6926 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  Options         1    wreg     unsigned char 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  Options         1    0[COMRAM] unsigned char 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:   12
  6947 ;; This function calls:
  6948 ;;		_Mcu_ClearWdg
  6949 ;;		_Mcu_SetWdgSts
  6950 ;; This function is called by:
  6951 ;;		_InitializeTasks
  6952 ;;		_ScheduleTasks
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text25
  6957  005E32                     __ptext25:
  6958                           	opt stack 0
  6959  005E32                     _Wdg_MainTask:
  6960                           	opt stack 16
  6961                           
  6962                           ;wdg.c: 75: switch (SystemState)
  6963                           
  6964                           ;incstack = 0
  6965  005E32  D007               	goto	l2460
  6966  005E34                     
  6967                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6968  005E34  0E01               	movlw	1
  6969  005E36  EC5A  F030         	call	_Mcu_SetWdgSts
  6970                           
  6971                           ;wdg.c: 81: break;
  6972  005E3A  0012               	return	
  6973  005E3C                     
  6974                           ;wdg.c: 86: Mcu_ClearWdg();
  6975  005E3C  ECCB  F030         	call	_Mcu_ClearWdg	;wreg free
  6976                           
  6977                           ;wdg.c: 92: }
  6978                           
  6979                           ;wdg.c: 91: break;
  6980                           
  6981                           ;wdg.c: 90: default:
  6982                           
  6983                           ;wdg.c: 87: break;
  6984  005E40  0012               	return	
  6985  005E42                     l2460:
  6986  005E42  0100               	movlb	0	; () banked
  6987  005E44  51D9               	movf	_SystemState& (0+255),w,b
  6988                           
  6989                           ; Switch size 1, requested type "space"
  6990                           ; Number of cases is 2, Range of values is 0 to 1
  6991                           ; switch strategies available:
  6992                           ; Name         Instructions Cycles
  6993                           ; simple_byte            7     4 (average)
  6994                           ;	Chosen strategy is simple_byte
  6995  005E46  0A00               	xorlw	0	; case 0
  6996  005E48  B4D8               	btfsc	status,2,c
  6997  005E4A  D7F4               	goto	l2461
  6998  005E4C  0A01               	xorlw	1	; case 1
  6999  005E4E  A4D8               	btfss	status,2,c
  7000  005E50  0012               	return	
  7001  005E52  D7F4               	goto	l2463
  7002  005E54                     __end_of_Wdg_MainTask:
  7003                           	opt stack 0
  7004                           tosu	equ	0xFFF
  7005                           tosh	equ	0xFFE
  7006                           tosl	equ	0xFFD
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           intcon3	equ	0xFF0
  7017                           postinc0	equ	0xFEE
  7018                           plusw0	equ	0xFEB
  7019                           wreg	equ	0xFE8
  7020                           postinc1	equ	0xFE6
  7021                           postdec1	equ	0xFE5
  7022                           plusw1	equ	0xFE3
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           plusw2	equ	0xFDB
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _Mcu_SetWdgSts *****************
  7034 ;; Defined at:
  7035 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  WdgSts          1    wreg     unsigned char 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        1 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:   11
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_Wdg_MainTask
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text26
  7064  0060B4                     __ptext26:
  7065                           	opt stack 0
  7066  0060B4                     _Mcu_SetWdgSts:
  7067                           	opt stack 16
  7068                           
  7069                           ;incstack = 0
  7070                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7071  0060B4  0100               	movlb	0	; () banked
  7072  0060B6  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7073                           
  7074                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7075  0060B8  0100               	movlb	0	; () banked
  7076  0060BA  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7077  0060BC  D002               	bra	u8005
  7078  0060BE  90C0               	bcf	4032,0,c	;volatile
  7079  0060C0  D001               	bra	u8006
  7080  0060C2                     u8005:
  7081  0060C2  80C0               	bsf	4032,0,c	;volatile
  7082  0060C4                     u8006:
  7083  0060C4  0012               	return		;funcret
  7084  0060C6                     __end_of_Mcu_SetWdgSts:
  7085                           	opt stack 0
  7086                           tosu	equ	0xFFF
  7087                           tosh	equ	0xFFE
  7088                           tosl	equ	0xFFD
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           intcon3	equ	0xFF0
  7099                           postinc0	equ	0xFEE
  7100                           plusw0	equ	0xFEB
  7101                           wreg	equ	0xFE8
  7102                           postinc1	equ	0xFE6
  7103                           postdec1	equ	0xFE5
  7104                           plusw1	equ	0xFE3
  7105                           fsr1h	equ	0xFE2
  7106                           fsr1l	equ	0xFE1
  7107                           indf2	equ	0xFDF
  7108                           postinc2	equ	0xFDE
  7109                           postdec2	equ	0xFDD
  7110                           plusw2	equ	0xFDB
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function _Mcu_ClearWdg *****************
  7116 ;; Defined at:
  7117 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      void 
  7124 ;; Registers used:
  7125 ;;		None
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:   11
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_Wdg_MainTask
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text27
  7146  006196                     __ptext27:
  7147                           	opt stack 0
  7148  006196                     _Mcu_ClearWdg:
  7149                           	opt stack 16
  7150                           
  7151                           ;incstack = 0
  7152  006196  0004               	clrwdt		;# 
  7153  006198  0012               	return		;funcret
  7154  00619A                     __end_of_Mcu_ClearWdg:
  7155                           	opt stack 0
  7156                           tosu	equ	0xFFF
  7157                           tosh	equ	0xFFE
  7158                           tosl	equ	0xFFD
  7159                           pclath	equ	0xFFA
  7160                           tblptru	equ	0xFF8
  7161                           tblptrh	equ	0xFF7
  7162                           tblptrl	equ	0xFF6
  7163                           tablat	equ	0xFF5
  7164                           prodh	equ	0xFF4
  7165                           prodl	equ	0xFF3
  7166                           intcon	equ	0xFF2
  7167                           intcon2	equ	0xFF1
  7168                           intcon3	equ	0xFF0
  7169                           postinc0	equ	0xFEE
  7170                           plusw0	equ	0xFEB
  7171                           wreg	equ	0xFE8
  7172                           postinc1	equ	0xFE6
  7173                           postdec1	equ	0xFE5
  7174                           plusw1	equ	0xFE3
  7175                           fsr1h	equ	0xFE2
  7176                           fsr1l	equ	0xFE1
  7177                           indf2	equ	0xFDF
  7178                           postinc2	equ	0xFDE
  7179                           postdec2	equ	0xFDD
  7180                           plusw2	equ	0xFDB
  7181                           fsr2h	equ	0xFDA
  7182                           fsr2l	equ	0xFD9
  7183                           status	equ	0xFD8
  7184                           
  7185 ;; *************** function _USBDeviceTasks *****************
  7186 ;; Defined at:
  7187 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  i               1   56[BANK0 ] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7205 ;;Total ram usage:        1 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:   19
  7208 ;; This function calls:
  7209 ;;		_USBCtrlEPAllowStatusStage
  7210 ;;		_USBCtrlEPService
  7211 ;;		_USBDeviceInit
  7212 ;;		_USBIncrement1msInternalTimers
  7213 ;;		_USBStallHandler
  7214 ;;		_USBSuspend
  7215 ;;		_USBWakeFromSuspend
  7216 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7217 ;; This function is called by:
  7218 ;;		_UsbDevice_MainTask
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text28
  7223  001BAA                     __ptext28:
  7224                           	opt stack 0
  7225  001BAA                     _USBDeviceTasks:
  7226                           	opt stack 8
  7227                           
  7228                           ;usb_device.c: 562: }
  7229                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7230                           
  7231                           ; BSR set to: 0
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;usb_device.c: 561: return;
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7238                           
  7239                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7240                           
  7241                           ;usb_device.c: 529: UIE = 0;
  7242                           
  7243                           ;usb_device.c: 524: {
  7244                           ;usb_device.c: 526: UCON = 0;
  7245                           
  7246                           ;usb_device.c: 497: uint8_t i;
  7247                           ;usb_device.c: 523: if (1 != 1)
  7248                           
  7249                           ;incstack = 0
  7250  001BAA  0100               	movlb	0	; () banked
  7251  001BAC  51D3               	movf	_USBDeviceState& (0+255),w,b
  7252  001BAE  A4D8               	btfss	status,2,c
  7253  001BB0  D012               	goto	l1600
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;usb_device.c: 585: {
  7257                           ;usb_device.c: 587: UCON = 0;
  7258  001BB2  0E00               	movlw	0
  7259  001BB4  6E65               	movwf	3941,c	;volatile
  7260                           
  7261                           ;usb_device.c: 590: UIE = 0;
  7262  001BB6  0E00               	movlw	0
  7263  001BB8  010F               	movlb	15	; () banked
  7264  001BBA  6F36               	movwf	54,b	;volatile
  7265                           
  7266                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7267  001BBC  0E16               	movlw	22
  7268  001BBE  6F39               	movwf	57,b	;volatile
  7269  001BC0  0E9F               	movlw	159
  7270  001BC2  6F37               	movwf	55,b	;volatile
  7271  001BC4  0E7B               	movlw	123
  7272  001BC6  6F36               	movwf	54,b	;volatile
  7273                           
  7274                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7275  001BC8  D001               	goto	l1601
  7276  001BCA                     l1602:
  7277  001BCA  8665               	bsf	3941,3,c	;volatile
  7278  001BCC                     l1601:
  7279  001BCC  A665               	btfss	3941,3,c	;volatile
  7280  001BCE  D7FD               	goto	l1602
  7281                           
  7282                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7283  001BD0  0E01               	movlw	1
  7284  001BD2  0100               	movlb	0	; () banked
  7285  001BD4  6FD3               	movwf	_USBDeviceState& (0+255),b
  7286  001BD6                     l1600:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;usb_device.c: 605: }
  7290                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7291                           
  7292                           ; BSR set to: 0
  7293  001BD6  05D3               	decf	_USBDeviceState& (0+255),w,b
  7294  001BD8  B4D8               	btfsc	status,2,c
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;usb_device.c: 609: {
  7298                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7299  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7300  001BDC  D00A               	goto	l1605
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;usb_device.c: 620: {
  7304                           ;usb_device.c: 626: {UIR = 0;};
  7305  001BDE  0E00               	movlw	0
  7306  001BE0  6E62               	movwf	3938,c	;volatile
  7307                           
  7308                           ;usb_device.c: 630: UIE=0;
  7309  001BE2  0E00               	movlw	0
  7310  001BE4  010F               	movlb	15	; () banked
  7311  001BE6  6F36               	movwf	54,b	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7315  001BE8  8136               	bsf	54,0,b	;volatile
  7316                           
  7317                           ; BSR set to: 15
  7318                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7319  001BEA  8936               	bsf	54,4,b	;volatile
  7320                           
  7321                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7322  001BEC  0E02               	movlw	2
  7323  001BEE  0100               	movlb	0	; () banked
  7324  001BF0  6FD3               	movwf	_USBDeviceState& (0+255),b
  7325  001BF2                     l1605:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;usb_device.c: 635: }
  7329                           ;usb_device.c: 636: }
  7330                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7331                           
  7332                           ; BSR set to: 0
  7333                           
  7334                           ; BSR set to: 0
  7335  001BF2  A462               	btfss	3938,2,c	;volatile
  7336  001BF4  D006               	goto	l1606
  7337                           
  7338                           ; BSR set to: 0
  7339  001BF6  010F               	movlb	15	; () banked
  7340  001BF8  A536               	btfss	54,2,b	;volatile
  7341  001BFA  D003               	goto	l1606
  7342                           
  7343                           ; BSR set to: 15
  7344                           ;usb_device.c: 653: {
  7345                           ;usb_device.c: 654: (UIR &= 0xFB);
  7346  001BFC  9462               	bcf	3938,2,c	;volatile
  7347                           
  7348                           ; BSR set to: 15
  7349                           ;usb_device.c: 658: USBWakeFromSuspend();
  7350  001BFE  EC1E  F02D         	call	_USBWakeFromSuspend	;wreg free
  7351  001C02                     l1606:
  7352                           
  7353                           ;usb_device.c: 660: }
  7354                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7355  001C02  A265               	btfss	3941,1,c	;volatile
  7356  001C04  D002               	goto	l1607
  7357                           
  7358                           ;usb_device.c: 666: {
  7359                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7360  001C06  98A1               	bcf	4001,4,c	;volatile
  7361                           
  7362                           ;usb_device.c: 668: return;
  7363  001C08  0012               	return	
  7364  001C0A                     l1607:
  7365                           
  7366                           ;usb_device.c: 669: }
  7367                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7368  001C0A  A062               	btfss	3938,0,c	;volatile
  7369  001C0C  D009               	goto	l1608
  7370  001C0E  010F               	movlb	15	; () banked
  7371  001C10  A136               	btfss	54,0,b	;volatile
  7372  001C12  D006               	goto	l1608
  7373                           
  7374                           ; BSR set to: 15
  7375                           ;usb_device.c: 682: {
  7376                           ;usb_device.c: 683: USBDeviceInit();
  7377  001C14  EC08  F012         	call	_USBDeviceInit	;wreg free
  7378                           
  7379                           ;usb_device.c: 687: ;
  7380                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7381  001C18  0E04               	movlw	4
  7382  001C1A  0100               	movlb	0	; () banked
  7383  001C1C  6FD3               	movwf	_USBDeviceState& (0+255),b
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;usb_device.c: 699: (UIR &= 0xFE);
  7387  001C1E  9062               	bcf	3938,0,c	;volatile
  7388  001C20                     l1608:
  7389                           
  7390                           ;usb_device.c: 700: }
  7391                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7392                           
  7393                           ; BSR set to: 0
  7394  001C20  A862               	btfss	3938,4,c	;volatile
  7395  001C22  D004               	goto	l1609
  7396  001C24  010F               	movlb	15	; () banked
  7397  001C26  B936               	btfsc	54,4,b	;volatile
  7398                           
  7399                           ; BSR set to: 15
  7400                           ;usb_device.c: 706: {
  7401                           ;usb_device.c: 712: USBSuspend();
  7402  001C28  ECAA  F02D         	call	_USBSuspend	;wreg free
  7403  001C2C                     l1609:
  7404                           
  7405                           ;usb_device.c: 714: }
  7406                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7407  001C2C  AC62               	btfss	3938,6,c	;volatile
  7408  001C2E  D01C               	goto	l1613
  7409                           
  7410                           ;usb_device.c: 727: {
  7411                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7412  001C30  010F               	movlb	15	; () banked
  7413  001C32  AD36               	btfss	54,6,b	;volatile
  7414  001C34  D00F               	goto	l1611
  7415                           
  7416                           ; BSR set to: 15
  7417                           ;usb_device.c: 730: {
  7418                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7419  001C36  0E00               	movlw	0
  7420  001C38  0100               	movlb	0	; () banked
  7421  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7422  001C3C  0E73               	movlw	115
  7423  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7424  001C40  0E00               	movlw	0
  7425  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7426  001C44  0E00               	movlw	0
  7427  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7428  001C48  0E00               	movlw	0
  7429  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7430  001C4C  0E01               	movlw	1
  7431  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7432  001C50  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7433  001C54                     l1611:
  7434                           
  7435                           ;usb_device.c: 732: }
  7436                           ;usb_device.c: 733: (UIR &= 0xBF);
  7437  001C54  9C62               	bcf	3938,6,c	;volatile
  7438                           
  7439                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7440  001C56  EC2A  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7441                           
  7442                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7443  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7444  001C5C  A4D8               	btfss	status,2,c
  7445                           
  7446                           ;usb_device.c: 754: {
  7447                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7448  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7449                           
  7450                           ;usb_device.c: 756: }
  7451                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7452  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7453  001C62  B4D8               	btfsc	status,2,c
  7454                           
  7455                           ;usb_device.c: 763: {
  7456                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7457  001C64  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7458  001C68                     l1613:
  7459                           
  7460                           ;usb_device.c: 765: }
  7461                           ;usb_device.c: 767: }
  7462                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7463  001C68  AA62               	btfss	3938,5,c	;volatile
  7464  001C6A  D004               	goto	l1614
  7465  001C6C  010F               	movlb	15	; () banked
  7466  001C6E  BB36               	btfsc	54,5,b	;volatile
  7467                           
  7468                           ; BSR set to: 15
  7469                           ;usb_device.c: 770: {
  7470                           ;usb_device.c: 771: USBStallHandler();
  7471  001C70  EC98  F02B         	call	_USBStallHandler	;wreg free
  7472  001C74                     l1614:
  7473                           
  7474                           ;usb_device.c: 772: }
  7475                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7476  001C74  A262               	btfss	3938,1,c	;volatile
  7477  001C76  D013               	goto	l1615
  7478  001C78  010F               	movlb	15	; () banked
  7479  001C7A  A336               	btfss	54,1,b	;volatile
  7480  001C7C  D010               	goto	l1615
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;usb_device.c: 775: {
  7484                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7485  001C7E  0E7F               	movlw	127
  7486  001C80  0100               	movlb	0	; () banked
  7487  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7488  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7489  001C86  0E00               	movlw	0
  7490  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7491  001C8A  0E00               	movlw	0
  7492  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7493  001C8E  0E00               	movlw	0
  7494  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7495  001C92  0E01               	movlw	1
  7496  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7497  001C96  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7498                           
  7499                           ;usb_device.c: 777: {UEIR = 0;};
  7500  001C9A  0E00               	movlw	0
  7501  001C9C  6E63               	movwf	3939,c	;volatile
  7502  001C9E                     l1615:
  7503                           
  7504                           ;usb_device.c: 785: }
  7505                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7506  001C9E  0E04               	movlw	4
  7507  001CA0  0100               	movlb	0	; () banked
  7508  001CA2  61D3               	cpfslt	_USBDeviceState& (0+255),b
  7509  001CA4  D002               	goto	l1616
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;usb_device.c: 793: {
  7513                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7514  001CA6  98A1               	bcf	4001,4,c	;volatile
  7515                           
  7516                           ;usb_device.c: 795: return;
  7517  001CA8  0012               	return	
  7518  001CAA                     l1616:
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;usb_device.c: 796: }
  7522                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7523  001CAA  010F               	movlb	15	; () banked
  7524  001CAC  A736               	btfss	54,3,b	;volatile
  7525  001CAE  D03E               	goto	u13040
  7526                           
  7527                           ; BSR set to: 15
  7528                           ;usb_device.c: 802: {
  7529                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7530  001CB0  0E00               	movlw	0
  7531  001CB2  0100               	movlb	0	; () banked
  7532  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7533  001CB6                     l13659:
  7534                           
  7535                           ; BSR set to: 0
  7536  001CB6  0E03               	movlw	3
  7537  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7538  001CBA  D001               	goto	l1618
  7539  001CBC  D037               	goto	u13040
  7540  001CBE                     l1618:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;usb_device.c: 804: {
  7544                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7545  001CBE  A662               	btfss	3938,3,c	;volatile
  7546  001CC0  D035               	goto	u13040
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;usb_device.c: 806: {
  7550                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7551  001CC2  CF64 F0DA          	movff	3940,_USTATcopy	;volatile
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7555  001CC6  31DA               	rrcf	_USTATcopy& (0+255),w,b
  7556  001CC8  32E8               	rrcf	wreg,f,c
  7557  001CCA  32E8               	rrcf	wreg,f,c
  7558  001CCC  0B0F               	andlw	15
  7559  001CCE  6FD0               	movwf	_endpoint_number& (0+255),b
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;usb_device.c: 811: (UIR &= 0xF7);
  7563  001CD0  9662               	bcf	3938,3,c	;volatile
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7567  001CD2  B5DA               	btfsc	_USTATcopy& (0+255),2,b
  7568  001CD4  D007               	goto	l1621
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;usb_device.c: 817: {
  7572                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7573  001CD6  51D0               	movf	_endpoint_number& (0+255),w,b
  7574  001CD8  0D01               	mullw	1
  7575  001CDA  0ECE               	movlw	low _ep_data_out
  7576  001CDC  24F3               	addwf	prodl,w,c
  7577  001CDE  6ED9               	movwf	fsr2l,c
  7578  001CE0  0E02               	movlw	high _ep_data_out
  7579  001CE2  D007               	goto	L3
  7580  001CE4                     l1621:
  7581                           
  7582                           ;usb_device.c: 820: else
  7583                           ;usb_device.c: 821: {
  7584                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7585                           
  7586                           ; BSR set to: 2
  7587  001CE4  0100               	movlb	0	; () banked
  7588  001CE6  51D0               	movf	_endpoint_number& (0+255),w,b
  7589  001CE8  0D01               	mullw	1
  7590  001CEA  0ED1               	movlw	low _ep_data_in
  7591  001CEC  24F3               	addwf	prodl,w,c
  7592  001CEE  6ED9               	movwf	fsr2l,c
  7593  001CF0  0E02               	movlw	high _ep_data_in
  7594  001CF2                     L3:
  7595  001CF2  20F4               	addwfc	prodh,w,c
  7596  001CF4  6EDA               	movwf	fsr2h,c
  7597  001CF6  0102               	movlb	2	; () banked
  7598  001CF8  70DF               	btg	indf2,0,c
  7599                           
  7600                           ; BSR set to: 2
  7601                           ;usb_device.c: 823: }
  7602                           ;usb_device.c: 828: if(endpoint_number == 0)
  7603                           
  7604                           ; BSR set to: 2
  7605  001CFA  0100               	movlb	0	; () banked
  7606  001CFC  51D0               	movf	_endpoint_number& (0+255),w,b
  7607  001CFE  A4D8               	btfss	status,2,c
  7608  001D00  D003               	goto	l1623
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;usb_device.c: 829: {
  7612                           ;usb_device.c: 830: USBCtrlEPService();
  7613  001D02  ECD9  F023         	call	_USBCtrlEPService	;wreg free
  7614                           
  7615                           ;usb_device.c: 831: }
  7616  001D06  D00F               	goto	l1625
  7617  001D08                     l1623:
  7618                           
  7619                           ;usb_device.c: 832: else
  7620                           ;usb_device.c: 833: {
  7621                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7622  001D08  0E00               	movlw	0
  7623  001D0A  0100               	movlb	0	; () banked
  7624  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7625  001D0E  0E72               	movlw	114
  7626  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7627  001D12  0EDA               	movlw	low _USTATcopy
  7628  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7629  001D16  0E00               	movlw	high _USTATcopy
  7630  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7631  001D1A  0E00               	movlw	0
  7632  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7633  001D1E  0E00               	movlw	0
  7634  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7635  001D22  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7636  001D26                     l1625:
  7637  001D26  0100               	movlb	0	; () banked
  7638  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7639  001D2A  D7C5               	goto	l13659
  7640  001D2C                     u13040:
  7641                           
  7642                           ;usb_device.c: 840: }
  7643                           ;usb_device.c: 841: }
  7644                           ;usb_device.c: 842: }
  7645                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7646                           
  7647                           ; BSR set to: 0
  7648  001D2C  98A1               	bcf	4001,4,c	;volatile
  7649  001D2E  0012               	return		;funcret
  7650  001D30                     __end_of_USBDeviceTasks:
  7651                           	opt stack 0
  7652                           tosu	equ	0xFFF
  7653                           tosh	equ	0xFFE
  7654                           tosl	equ	0xFFD
  7655                           pclath	equ	0xFFA
  7656                           tblptru	equ	0xFF8
  7657                           tblptrh	equ	0xFF7
  7658                           tblptrl	equ	0xFF6
  7659                           tablat	equ	0xFF5
  7660                           prodh	equ	0xFF4
  7661                           prodl	equ	0xFF3
  7662                           intcon	equ	0xFF2
  7663                           intcon2	equ	0xFF1
  7664                           intcon3	equ	0xFF0
  7665                           postinc0	equ	0xFEE
  7666                           plusw0	equ	0xFEB
  7667                           wreg	equ	0xFE8
  7668                           postinc1	equ	0xFE6
  7669                           postdec1	equ	0xFE5
  7670                           plusw1	equ	0xFE3
  7671                           fsr1h	equ	0xFE2
  7672                           fsr1l	equ	0xFE1
  7673                           indf2	equ	0xFDF
  7674                           postinc2	equ	0xFDE
  7675                           postdec2	equ	0xFDD
  7676                           plusw2	equ	0xFDB
  7677                           fsr2h	equ	0xFDA
  7678                           fsr2l	equ	0xFD9
  7679                           status	equ	0xFD8
  7680                           
  7681 ;; *************** function _USBWakeFromSuspend *****************
  7682 ;; Defined at:
  7683 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;Total ram usage:        0 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:   15
  7704 ;; This function calls:
  7705 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7706 ;; This function is called by:
  7707 ;;		_USBDeviceTasks
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text29
  7712  005A3C                     __ptext29:
  7713                           	opt stack 0
  7714  005A3C                     _USBWakeFromSuspend:
  7715                           	opt stack 11
  7716                           
  7717                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7718                           
  7719                           ;incstack = 0
  7720  005A3C  0E00               	movlw	0
  7721  005A3E  0101               	movlb	1	; () banked
  7722  005A40  6FDD               	movwf	_USBBusIsSuspended& (0+255),b
  7723                           
  7724                           ; BSR set to: 1
  7725                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7726  005A42  0E00               	movlw	0
  7727  005A44  0100               	movlb	0	; () banked
  7728  005A46  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7729  005A48  0E74               	movlw	116
  7730  005A4A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7731  005A4C  0E00               	movlw	0
  7732  005A4E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7733  005A50  0E00               	movlw	0
  7734  005A52  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7735  005A54  0E00               	movlw	0
  7736  005A56  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7737  005A58  0E00               	movlw	0
  7738  005A5A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7739  005A5C  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7740                           
  7741                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7742  005A60  9265               	bcf	3941,1,c	;volatile
  7743                           
  7744                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7745  005A62  010F               	movlb	15	; () banked
  7746  005A64  9536               	bcf	54,2,b	;volatile
  7747                           
  7748                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7749  005A66  D001               	goto	l1753
  7750  005A68                     
  7751                           ;usb_device.c: 2361: {
  7752                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7753                           
  7754                           ; BSR set to: 15
  7755  005A68  9462               	bcf	3938,2,c	;volatile
  7756  005A6A                     l1753:
  7757  005A6A  B462               	btfsc	3938,2,c	;volatile
  7758  005A6C  D7FD               	goto	l1754
  7759                           
  7760                           ;usb_device.c: 2363: }
  7761                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7762  005A6E  0E00               	movlw	0
  7763  005A70  0101               	movlb	1	; () banked
  7764  005A72  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7765                           
  7766                           ; BSR set to: 1
  7767  005A74  0012               	return		;funcret
  7768  005A76                     __end_of_USBWakeFromSuspend:
  7769                           	opt stack 0
  7770                           tosu	equ	0xFFF
  7771                           tosh	equ	0xFFE
  7772                           tosl	equ	0xFFD
  7773                           pclath	equ	0xFFA
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           intcon	equ	0xFF2
  7781                           intcon2	equ	0xFF1
  7782                           intcon3	equ	0xFF0
  7783                           postinc0	equ	0xFEE
  7784                           plusw0	equ	0xFEB
  7785                           wreg	equ	0xFE8
  7786                           postinc1	equ	0xFE6
  7787                           postdec1	equ	0xFE5
  7788                           plusw1	equ	0xFE3
  7789                           fsr1h	equ	0xFE2
  7790                           fsr1l	equ	0xFE1
  7791                           indf2	equ	0xFDF
  7792                           postinc2	equ	0xFDE
  7793                           postdec2	equ	0xFDD
  7794                           plusw2	equ	0xFDB
  7795                           fsr2h	equ	0xFDA
  7796                           fsr2l	equ	0xFD9
  7797                           status	equ	0xFD8
  7798                           
  7799 ;; *************** function _USBSuspend *****************
  7800 ;; Defined at:
  7801 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:   15
  7822 ;; This function calls:
  7823 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7824 ;; This function is called by:
  7825 ;;		_USBDeviceTasks
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text30
  7830  005B54                     __ptext30:
  7831                           	opt stack 0
  7832  005B54                     _USBSuspend:
  7833                           	opt stack 11
  7834                           
  7835                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7836                           
  7837                           ; BSR set to: 1
  7838                           ;incstack = 0
  7839  005B54  010F               	movlb	15	; () banked
  7840  005B56  8536               	bsf	54,2,b	;volatile
  7841                           
  7842                           ; BSR set to: 15
  7843                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7844  005B58  9862               	bcf	3938,4,c	;volatile
  7845                           
  7846                           ; BSR set to: 15
  7847                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7848  005B5A  8265               	bsf	3941,1,c	;volatile
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7852  005B5C  0E01               	movlw	1
  7853  005B5E  0101               	movlb	1	; () banked
  7854  005B60  6FDD               	movwf	_USBBusIsSuspended& (0+255),b
  7855                           
  7856                           ; BSR set to: 1
  7857                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7858  005B62  0E00               	movlw	0
  7859  005B64  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7860                           
  7861                           ; BSR set to: 1
  7862                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7863  005B66  0E00               	movlw	0
  7864  005B68  0100               	movlb	0	; () banked
  7865  005B6A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7866  005B6C  0E75               	movlw	117
  7867  005B6E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7868  005B70  0E00               	movlw	0
  7869  005B72  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7870  005B74  0E00               	movlw	0
  7871  005B76  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7872  005B78  0E00               	movlw	0
  7873  005B7A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7874  005B7C  0E00               	movlw	0
  7875  005B7E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7876  005B80  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7877  005B84  0012               	return		;funcret
  7878  005B86                     __end_of_USBSuspend:
  7879                           	opt stack 0
  7880                           tosu	equ	0xFFF
  7881                           tosh	equ	0xFFE
  7882                           tosl	equ	0xFFD
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           intcon2	equ	0xFF1
  7892                           intcon3	equ	0xFF0
  7893                           postinc0	equ	0xFEE
  7894                           plusw0	equ	0xFEB
  7895                           wreg	equ	0xFE8
  7896                           postinc1	equ	0xFE6
  7897                           postdec1	equ	0xFE5
  7898                           plusw1	equ	0xFE3
  7899                           fsr1h	equ	0xFE2
  7900                           fsr1l	equ	0xFE1
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           plusw2	equ	0xFDB
  7905                           fsr2h	equ	0xFDA
  7906                           fsr2l	equ	0xFD9
  7907                           status	equ	0xFD8
  7908                           
  7909 ;; *************** function _USBStallHandler *****************
  7910 ;; Defined at:
  7911 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:        1 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   11
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_USBDeviceTasks
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text31
  7940  005730                     __ptext31:
  7941                           	opt stack 0
  7942  005730                     _USBStallHandler:
  7943                           	opt stack 15
  7944                           
  7945                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7946                           
  7947                           ;incstack = 0
  7948  005730  010F               	movlb	15	; () banked
  7949  005732  A126               	btfss	38,0,b	;volatile
  7950  005734  D01D               	goto	l1745
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;usb_device.c: 2233: {
  7954                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7955  005736  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7956  00573A  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7957  00573E  0E80               	movlw	128
  7958  005740  18DE               	xorwf	postinc2,w,c
  7959  005742  A4D8               	btfss	status,2,c
  7960  005744  D014               	goto	l1746
  7961                           
  7962                           ; BSR set to: 15
  7963  005746  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  7964  00574A  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7965  00574E  0E84               	movlw	132
  7966  005750  18DE               	xorwf	postinc2,w,c
  7967  005752  A4D8               	btfss	status,2,c
  7968  005754  D00C               	goto	l1746
  7969                           
  7970                           ; BSR set to: 15
  7971                           ;usb_device.c: 2236: {
  7972                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7973  005756  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7974  00575A  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7975  00575E  0E0C               	movlw	12
  7976  005760  6EDF               	movwf	indf2,c
  7977                           
  7978                           ; BSR set to: 15
  7979                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7980  005762  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7981  005766  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7982  00576A  0E00               	movlw	0
  7983  00576C  8EDB               	bsf	plusw2,7,c
  7984  00576E                     l1746:
  7985                           
  7986                           ; BSR set to: 15
  7987                           ;usb_device.c: 2240: }
  7988                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7989                           
  7990                           ; BSR set to: 15
  7991  00576E  9126               	bcf	38,0,b	;volatile
  7992  005770                     l1745:
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;usb_device.c: 2242: }
  7996                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7997  005770  9A62               	bcf	3938,5,c	;volatile
  7998                           
  7999                           ; BSR set to: 15
  8000  005772  0012               	return		;funcret
  8001  005774                     __end_of_USBStallHandler:
  8002                           	opt stack 0
  8003                           tosu	equ	0xFFF
  8004                           tosh	equ	0xFFE
  8005                           tosl	equ	0xFFD
  8006                           pclath	equ	0xFFA
  8007                           tblptru	equ	0xFF8
  8008                           tblptrh	equ	0xFF7
  8009                           tblptrl	equ	0xFF6
  8010                           tablat	equ	0xFF5
  8011                           prodh	equ	0xFF4
  8012                           prodl	equ	0xFF3
  8013                           intcon	equ	0xFF2
  8014                           intcon2	equ	0xFF1
  8015                           intcon3	equ	0xFF0
  8016                           postinc0	equ	0xFEE
  8017                           plusw0	equ	0xFEB
  8018                           wreg	equ	0xFE8
  8019                           postinc1	equ	0xFE6
  8020                           postdec1	equ	0xFE5
  8021                           plusw1	equ	0xFE3
  8022                           fsr1h	equ	0xFE2
  8023                           fsr1l	equ	0xFE1
  8024                           indf2	equ	0xFDF
  8025                           postinc2	equ	0xFDE
  8026                           postdec2	equ	0xFDD
  8027                           plusw2	equ	0xFDB
  8028                           fsr2h	equ	0xFDA
  8029                           fsr2l	equ	0xFD9
  8030                           status	equ	0xFD8
  8031                           
  8032 ;; *************** function _USBIncrement1msInternalTimers *****************
  8033 ;; Defined at:
  8034 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2, status,0
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:   11
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_USBDeviceTasks
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text32
  8063  005E54                     __ptext32:
  8064                           	opt stack 0
  8065  005E54                     _USBIncrement1msInternalTimers:
  8066                           	opt stack 15
  8067                           
  8068                           ;usb_device.c: 3050: USB1msTickCount++;
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;incstack = 0
  8072  005E54  0E01               	movlw	1
  8073  005E56  0103               	movlb	3	; () banked
  8074  005E58  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8075  005E5A  0E00               	movlw	0
  8076  005E5C  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8077  005E5E  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8078  005E60  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8079                           
  8080                           ; BSR set to: 3
  8081                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8082  005E62  0101               	movlb	1	; () banked
  8083  005E64  51DD               	movf	_USBBusIsSuspended& (0+255),w,b
  8084  005E66  A4D8               	btfss	status,2,c
  8085  005E68  0012               	return	
  8086                           
  8087                           ; BSR set to: 1
  8088                           ;usb_device.c: 3052: {
  8089                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8090  005E6A  2BDB               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8094  005E6C  51DB               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8095  005E6E  A4D8               	btfss	status,2,c
  8096  005E70  0012               	return	
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;usb_device.c: 3056: {
  8100                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8101  005E72  69DB               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8102                           
  8103                           ; BSR set to: 1
  8104  005E74  0012               	return	
  8105  005E76                     __end_of_USBIncrement1msInternalTimers:
  8106                           	opt stack 0
  8107                           tosu	equ	0xFFF
  8108                           tosh	equ	0xFFE
  8109                           tosl	equ	0xFFD
  8110                           pclath	equ	0xFFA
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           intcon	equ	0xFF2
  8118                           intcon2	equ	0xFF1
  8119                           intcon3	equ	0xFF0
  8120                           postinc0	equ	0xFEE
  8121                           plusw0	equ	0xFEB
  8122                           wreg	equ	0xFE8
  8123                           postinc1	equ	0xFE6
  8124                           postdec1	equ	0xFE5
  8125                           plusw1	equ	0xFE3
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           indf2	equ	0xFDF
  8129                           postinc2	equ	0xFDE
  8130                           postdec2	equ	0xFDD
  8131                           plusw2	equ	0xFDB
  8132                           fsr2h	equ	0xFDA
  8133                           fsr2l	equ	0xFD9
  8134                           status	equ	0xFD8
  8135                           
  8136 ;; *************** function _USBDeviceInit *****************
  8137 ;; Defined at:
  8138 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  i               1   37[BANK0 ] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;Total ram usage:        1 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:   12
  8159 ;; This function calls:
  8160 ;;		_memset
  8161 ;; This function is called by:
  8162 ;;		_USBDeviceTasks
  8163 ;;		_UsbDevice_MainTask
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text33
  8168  002410                     __ptext33:
  8169                           	opt stack 0
  8170  002410                     _USBDeviceInit:
  8171                           	opt stack 14
  8172                           
  8173                           ;usb_device.c: 297: uint8_t i;
  8174                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8175                           
  8176                           ; BSR set to: 1
  8177                           ;incstack = 0
  8178  002410  98A0               	bcf	4000,4,c	;volatile
  8179                           
  8180                           ;usb_device.c: 303: ;
  8181                           ;usb_device.c: 306: {UEIR = 0;};
  8182  002412  0E00               	movlw	0
  8183  002414  6E63               	movwf	3939,c	;volatile
  8184                           
  8185                           ;usb_device.c: 309: {UIR = 0;};
  8186  002416  0E00               	movlw	0
  8187  002418  6E62               	movwf	3938,c	;volatile
  8188                           
  8189                           ;usb_device.c: 312: UEP0 = 0;
  8190  00241A  0E00               	movlw	0
  8191  00241C  010F               	movlb	15	; () banked
  8192  00241E  6F26               	movwf	38,b	;volatile
  8193                           
  8194                           ; BSR set to: 15
  8195                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8196  002420  0E27               	movlw	39
  8197  002422  0100               	movlb	0	; () banked
  8198  002424  6F7D               	movwf	memset@p1& (0+255),b
  8199  002426  0E0F               	movlw	15
  8200  002428  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8201  00242A  0E00               	movlw	0
  8202  00242C  6F80               	movwf	(memset@c+1)& (0+255),b
  8203  00242E  0E00               	movlw	0
  8204  002430  6F7F               	movwf	memset@c& (0+255),b
  8205  002432  0E00               	movlw	0
  8206  002434  6F82               	movwf	(memset@n+1)& (0+255),b
  8207  002436  0E02               	movlw	2
  8208  002438  6F81               	movwf	memset@n& (0+255),b
  8209  00243A  ECF4  F02D         	call	_memset	;wreg free
  8210                           
  8211                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8212  00243E  0E16               	movlw	22
  8213  002440  010F               	movlb	15	; () banked
  8214  002442  6F39               	movwf	57,b	;volatile
  8215                           
  8216                           ; BSR set to: 15
  8217  002444  0E9F               	movlw	159
  8218  002446  6F37               	movwf	55,b	;volatile
  8219                           
  8220                           ; BSR set to: 15
  8221  002448  0E7B               	movlw	123
  8222  00244A  6F36               	movwf	54,b	;volatile
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;usb_device.c: 319: ;
  8226                           ;usb_device.c: 322: ;
  8227                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8228  00244C  0E00               	movlw	0
  8229  00244E  0100               	movlb	0	; () banked
  8230  002450  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8231  002452                     l9261:
  8232                           
  8233                           ; BSR set to: 0
  8234  002452  0E0B               	movlw	11
  8235  002454  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8236  002456  D001               	goto	l1589
  8237  002458  D00E               	goto	u7300
  8238  00245A                     l1589:
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;usb_device.c: 326: {
  8242                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8243                           
  8244                           ; BSR set to: 0
  8245  00245A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8246  00245C  0D04               	mullw	4
  8247  00245E  0E00               	movlw	0
  8248  002460  24F3               	addwf	prodl,w,c
  8249  002462  6ED9               	movwf	fsr2l,c
  8250  002464  0E04               	movlw	4
  8251  002466  20F4               	addwfc	prodh,w,c
  8252  002468  6EDA               	movwf	fsr2h,c
  8253  00246A  6ADE               	clrf	postinc2,c
  8254  00246C  6ADE               	clrf	postinc2,c
  8255  00246E  6ADE               	clrf	postinc2,c
  8256  002470  6ADD               	clrf	postdec2,c
  8257                           
  8258                           ; BSR set to: 0
  8259  002472  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8260  002474  D7EE               	goto	l9261
  8261  002476                     u7300:
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;usb_device.c: 328: }
  8265                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8266  002476  8C65               	bsf	3941,6,c	;volatile
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;usb_device.c: 334: UADDR = 0x00;
  8270  002478  0E00               	movlw	0
  8271  00247A  010F               	movlb	15	; () banked
  8272  00247C  6F38               	movwf	56,b	;volatile
  8273                           
  8274                           ; BSR set to: 15
  8275                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8276  00247E  9865               	bcf	3941,4,c	;volatile
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8280  002480  9C65               	bcf	3941,6,c	;volatile
  8281  002482                     
  8282                           ;usb_device.c: 344: {
  8283                           ;usb_device.c: 345: (UIR &= 0xF7);
  8284                           
  8285                           ; BSR set to: 15
  8286  002482  9662               	bcf	3938,3,c	;volatile
  8287                           
  8288                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8289  002484  0E00               	movlw	0
  8290  002486  0100               	movlb	0	; () banked
  8291  002488  6FBB               	movwf	(_inPipes+3)& (0+255),b
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8295  00248A  0E00               	movlw	0
  8296  00248C  0101               	movlb	1	; () banked
  8297  00248E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8301  002490  0E00               	movlw	0
  8302  002492  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8303  002494  0E00               	movlw	0
  8304  002496  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8305                           
  8306                           ; BSR set to: 1
  8307                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8308  002498  B662               	btfsc	3938,3,c	;volatile
  8309  00249A  D7F3               	goto	l1591
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8313                           
  8314                           ; BSR set to: 1
  8315  00249C  0E01               	movlw	1
  8316  00249E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8317                           
  8318                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8319  0024A0  0E01               	movlw	1
  8320  0024A2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8321                           
  8322                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8323  0024A4  0E00               	movlw	0
  8324  0024A6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8325                           
  8326                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8327  0024A8  0E00               	movlw	0
  8328  0024AA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8329                           
  8330                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8331  0024AC  0E00               	movlw	0
  8332  0024AE  6FDD               	movwf	_USBBusIsSuspended& (0+255),b
  8333                           
  8334                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8335  0024B0  0E00               	movlw	0
  8336  0024B2  0100               	movlb	0	; () banked
  8337  0024B4  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8338  0024B6                     l9289:
  8339                           
  8340                           ; BSR set to: 0
  8341  0024B6  0E02               	movlw	2
  8342  0024B8  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8343  0024BA  D001               	goto	l1593
  8344  0024BC  D02E               	goto	u7330
  8345  0024BE                     l1593:
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;usb_device.c: 364: {
  8349                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8350                           
  8351                           ; BSR set to: 0
  8352  0024BE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8353  0024C0  0D02               	mullw	2
  8354  0024C2  0EBE               	movlw	low _pBDTEntryIn
  8355  0024C4  24F3               	addwf	prodl,w,c
  8356  0024C6  6ED9               	movwf	fsr2l,c
  8357  0024C8  0E00               	movlw	high _pBDTEntryIn
  8358  0024CA  20F4               	addwfc	prodh,w,c
  8359  0024CC  6EDA               	movwf	fsr2h,c
  8360  0024CE  0E00               	movlw	0
  8361  0024D0  6EDE               	movwf	postinc2,c
  8362  0024D2  0E00               	movlw	0
  8363  0024D4  6EDD               	movwf	postdec2,c
  8364                           
  8365                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8366  0024D6  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8367  0024D8  0D02               	mullw	2
  8368  0024DA  0E0E               	movlw	low _pBDTEntryOut
  8369  0024DC  24F3               	addwf	prodl,w,c
  8370  0024DE  6ED9               	movwf	fsr2l,c
  8371  0024E0  0E03               	movlw	high _pBDTEntryOut
  8372  0024E2  20F4               	addwfc	prodh,w,c
  8373  0024E4  6EDA               	movwf	fsr2h,c
  8374  0024E6  0E00               	movlw	0
  8375  0024E8  6EDE               	movwf	postinc2,c
  8376  0024EA  0E00               	movlw	0
  8377  0024EC  6EDD               	movwf	postdec2,c
  8378                           
  8379                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8380  0024EE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8381  0024F0  0D01               	mullw	1
  8382  0024F2  0ED1               	movlw	low _ep_data_in
  8383  0024F4  24F3               	addwf	prodl,w,c
  8384  0024F6  6ED9               	movwf	fsr2l,c
  8385  0024F8  0E02               	movlw	high _ep_data_in
  8386  0024FA  20F4               	addwfc	prodh,w,c
  8387  0024FC  6EDA               	movwf	fsr2h,c
  8388  0024FE  0E00               	movlw	0
  8389  002500  6EDF               	movwf	indf2,c
  8390                           
  8391                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8392  002502  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8393  002504  0D01               	mullw	1
  8394  002506  0ECE               	movlw	low _ep_data_out
  8395  002508  24F3               	addwf	prodl,w,c
  8396  00250A  6ED9               	movwf	fsr2l,c
  8397  00250C  0E02               	movlw	high _ep_data_out
  8398  00250E  20F4               	addwfc	prodh,w,c
  8399  002510  6EDA               	movwf	fsr2h,c
  8400  002512  0E00               	movlw	0
  8401  002514  6EDF               	movwf	indf2,c
  8402                           
  8403                           ; BSR set to: 0
  8404  002516  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8405  002518  D7CE               	goto	l9289
  8406  00251A                     u7330:
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;usb_device.c: 369: }
  8410                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8411                           
  8412                           ; BSR set to: 0
  8413  00251A  0E08               	movlw	8
  8414  00251C  6FBE               	movwf	_pBDTEntryIn& (0+255),b
  8415  00251E  0E04               	movlw	4
  8416  002520  6FBF               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8420  002522  0E16               	movlw	22
  8421  002524  010F               	movlb	15	; () banked
  8422  002526  6F26               	movwf	38,b	;volatile
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8426  002528  0E04               	movlw	4
  8427  00252A  0104               	movlb	4	; () banked
  8428  00252C  6F03               	movwf	3,b	;volatile
  8429  00252E  0E30               	movlw	48
  8430  002530  6F02               	movwf	2,b	;volatile
  8431                           
  8432                           ; BSR set to: 4
  8433                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8434  002532  0E08               	movlw	8
  8435  002534  6F01               	movwf	1,b	;volatile
  8436                           
  8437                           ; BSR set to: 4
  8438                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8439  002536  0E04               	movlw	4
  8440  002538  6F00               	movwf	0,b	;volatile
  8441                           
  8442                           ; BSR set to: 4
  8443                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8444  00253A  8F00               	bsf	0,7,b	;volatile
  8445                           
  8446                           ; BSR set to: 4
  8447                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8448  00253C  0E00               	movlw	0
  8449  00253E  0100               	movlb	0	; () banked
  8450  002540  6FDB               	movwf	_USBActiveConfiguration& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;usb_device.c: 384: USB1msTickCount = 0;
  8454  002542  0E00               	movlw	0
  8455  002544  0103               	movlb	3	; () banked
  8456  002546  6F18               	movwf	_USB1msTickCount& (0+255),b
  8457  002548  0E00               	movlw	0
  8458  00254A  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8459  00254C  0E00               	movlw	0
  8460  00254E  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8461  002550  0E00               	movlw	0
  8462  002552  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8463                           
  8464                           ; BSR set to: 3
  8465                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8466  002554  0E00               	movlw	0
  8467  002556  0101               	movlb	1	; () banked
  8468  002558  6FDB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8469                           
  8470                           ; BSR set to: 1
  8471                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8472  00255A  0E00               	movlw	0
  8473  00255C  0100               	movlb	0	; () banked
  8474  00255E  6FD3               	movwf	_USBDeviceState& (0+255),b
  8475                           
  8476                           ; BSR set to: 0
  8477  002560  0012               	return		;funcret
  8478  002562                     __end_of_USBDeviceInit:
  8479                           	opt stack 0
  8480                           tosu	equ	0xFFF
  8481                           tosh	equ	0xFFE
  8482                           tosl	equ	0xFFD
  8483                           pclath	equ	0xFFA
  8484                           tblptru	equ	0xFF8
  8485                           tblptrh	equ	0xFF7
  8486                           tblptrl	equ	0xFF6
  8487                           tablat	equ	0xFF5
  8488                           prodh	equ	0xFF4
  8489                           prodl	equ	0xFF3
  8490                           intcon	equ	0xFF2
  8491                           intcon2	equ	0xFF1
  8492                           intcon3	equ	0xFF0
  8493                           postinc0	equ	0xFEE
  8494                           plusw0	equ	0xFEB
  8495                           wreg	equ	0xFE8
  8496                           postinc1	equ	0xFE6
  8497                           postdec1	equ	0xFE5
  8498                           plusw1	equ	0xFE3
  8499                           fsr1h	equ	0xFE2
  8500                           fsr1l	equ	0xFE1
  8501                           indf2	equ	0xFDF
  8502                           postinc2	equ	0xFDE
  8503                           postdec2	equ	0xFDD
  8504                           plusw2	equ	0xFDB
  8505                           fsr2h	equ	0xFDA
  8506                           fsr2l	equ	0xFD9
  8507                           status	equ	0xFD8
  8508                           
  8509 ;; *************** function _USBCtrlEPService *****************
  8510 ;; Defined at:
  8511 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;		None
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;		None
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;Total ram usage:        1 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:   18
  8532 ;; This function calls:
  8533 ;;		_USBCtrlTrfInHandler
  8534 ;;		_USBCtrlTrfOutHandler
  8535 ;;		_USBCtrlTrfSetupHandler
  8536 ;;		_memcpy
  8537 ;; This function is called by:
  8538 ;;		_USBDeviceTasks
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text34
  8543  0047B2                     __ptext34:
  8544                           	opt stack 0
  8545  0047B2                     _USBCtrlEPService:
  8546                           	opt stack 8
  8547                           
  8548                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;incstack = 0
  8552  0047B2  0E2D               	movlw	45
  8553  0047B4  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8554                           
  8555                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8556  0047B6  C0DA  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8557  0047BA  0EFD               	movlw	253
  8558  0047BC  0100               	movlb	0	; () banked
  8559  0047BE  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8560  0047C0  A4D8               	btfss	status,2,c
  8561  0047C2  D038               	goto	l1759
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;usb_device.c: 2401: {
  8565                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8566  0047C4  C0DA  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8567  0047C8  90D8               	bcf	status,0,c
  8568  0047CA  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8569  0047CC  0E3F               	movlw	63
  8570  0047CE  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8571  0047D0  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8572  0047D2  0D04               	mullw	4
  8573  0047D4  0E00               	movlw	0
  8574  0047D6  24F3               	addwf	prodl,w,c
  8575  0047D8  6FC8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8576  0047DA  0E04               	movlw	4
  8577  0047DC  20F4               	addwfc	prodh,w,c
  8578  0047DE  6FC9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8582  0047E0  C0C8  F0C6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8583  0047E4  C0C9  F0C7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8587  0047E8  0E04               	movlw	4
  8588  0047EA  1BC6               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8592  0047EC  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8593  0047F0  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8594  0047F4  30DF               	rrcf	223,w,c
  8595  0047F6  32E8               	rrcf	wreg,f,c
  8596  0047F8  0B0F               	andlw	15
  8597  0047FA  0A0D               	xorlw	13
  8598  0047FC  A4D8               	btfss	status,2,c
  8599  0047FE  D017               	goto	l1760
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;usb_device.c: 2418: {
  8603                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8604  004800  0E30               	movlw	48
  8605  004802  6F7D               	movwf	memcpy@d1& (0+255),b
  8606  004804  0E04               	movlw	4
  8607  004806  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8608  004808  EE20 F002          	lfsr	2,2
  8609  00480C  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8610  00480E  26D9               	addwf	fsr2l,f,c
  8611  004810  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8612  004812  22DA               	addwfc	fsr2h,f,c
  8613  004814  CFDE F07F          	movff	postinc2,memcpy@s1
  8614  004818  CFDD F080          	movff	postdec2,memcpy@s1+1
  8615  00481C  0E00               	movlw	0
  8616  00481E  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8617  004820  0E08               	movlw	8
  8618  004822  6F81               	movwf	memcpy@n& (0+255),b
  8619  004824  EC51  F02B         	call	_memcpy	;wreg free
  8620                           
  8621                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8622  004828  ECFC  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8623                           
  8624                           ;usb_device.c: 2427: }
  8625  00482C  0012               	return	
  8626  00482E                     l1760:
  8627                           
  8628                           ;usb_device.c: 2428: else
  8629                           ;usb_device.c: 2429: {
  8630                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8631  00482E  EC9A  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8632                           
  8633                           ;usb_device.c: 2432: }
  8634                           ;usb_device.c: 2433: }
  8635  004832  0012               	return	
  8636  004834                     l1759:
  8637                           
  8638                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8639  004834  0100               	movlb	0	; () banked
  8640  004836  51DA               	movf	_USTATcopy& (0+255),w,b
  8641  004838  0BFD               	andlw	253
  8642  00483A  0A04               	xorlw	4
  8643  00483C  A4D8               	btfss	status,2,c
  8644  00483E  0012               	return	
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;usb_device.c: 2435: {
  8648                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8649  004840  EC3D  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8650  004844  0012               	return	
  8651  004846                     __end_of_USBCtrlEPService:
  8652                           	opt stack 0
  8653                           tosu	equ	0xFFF
  8654                           tosh	equ	0xFFE
  8655                           tosl	equ	0xFFD
  8656                           pclath	equ	0xFFA
  8657                           tblptru	equ	0xFF8
  8658                           tblptrh	equ	0xFF7
  8659                           tblptrl	equ	0xFF6
  8660                           tablat	equ	0xFF5
  8661                           prodh	equ	0xFF4
  8662                           prodl	equ	0xFF3
  8663                           intcon	equ	0xFF2
  8664                           intcon2	equ	0xFF1
  8665                           intcon3	equ	0xFF0
  8666                           postinc0	equ	0xFEE
  8667                           plusw0	equ	0xFEB
  8668                           wreg	equ	0xFE8
  8669                           postinc1	equ	0xFE6
  8670                           postdec1	equ	0xFE5
  8671                           plusw1	equ	0xFE3
  8672                           fsr1h	equ	0xFE2
  8673                           fsr1l	equ	0xFE1
  8674                           indf2	equ	0xFDF
  8675                           postinc2	equ	0xFDE
  8676                           postdec2	equ	0xFDD
  8677                           plusw2	equ	0xFDB
  8678                           fsr2h	equ	0xFDA
  8679                           fsr2l	equ	0xFD9
  8680                           status	equ	0xFD8
  8681                           
  8682 ;; *************** function _memcpy *****************
  8683 ;; Defined at:
  8684 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  d1              2   29[BANK0 ] PTR void 
  8687 ;;		 -> SetupPkt(8), 
  8688 ;;  s1              2   31[BANK0 ] PTR const void 
  8689 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8690 ;;  n               2   33[BANK0 ] unsigned int 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8693 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8694 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8695 ;;		 -> SetupPkt(8), 
  8696 ;;  tmp             1   39[BANK0 ] unsigned char 
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  2   29[BANK0 ] PTR void 
  8699 ;; Registers used:
  8700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8706 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8707 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;Total ram usage:       11 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:   11
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_USBCtrlEPService
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text35
  8721  0056A2                     __ptext35:
  8722                           	opt stack 0
  8723  0056A2                     _memcpy:
  8724                           	opt stack 14
  8725                           
  8726                           ;incstack = 0
  8727  0056A2  C07F  F085         	movff	memcpy@s1,memcpy@s
  8728  0056A6  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8729  0056AA  C07D  F083         	movff	memcpy@d1,memcpy@d
  8730  0056AE  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8731  0056B2  D011               	goto	l3074
  8732  0056B4                     l8535:
  8733  0056B4  C085  FFD9         	movff	memcpy@s,fsr2l
  8734  0056B8  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8735  0056BC  50DF               	movf	indf2,w,c
  8736  0056BE  0100               	movlb	0	; () banked
  8737  0056C0  6F87               	movwf	memcpy@tmp& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740  0056C2  4B85               	infsnz	memcpy@s& (0+255),f,b
  8741  0056C4  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8742                           
  8743                           ; BSR set to: 0
  8744  0056C6  C083  FFD9         	movff	memcpy@d,fsr2l
  8745  0056CA  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8746  0056CE  C087  FFDF         	movff	memcpy@tmp,indf2
  8747                           
  8748                           ; BSR set to: 0
  8749  0056D2  4B83               	infsnz	memcpy@d& (0+255),f,b
  8750  0056D4  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8751  0056D6                     l3074:
  8752                           
  8753                           ; BSR set to: 0
  8754  0056D6  0100               	movlb	0	; () banked
  8755  0056D8  0781               	decf	memcpy@n& (0+255),f,b
  8756  0056DA  A0D8               	btfss	status,0,c
  8757  0056DC  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8758  0056DE  2981               	incf	memcpy@n& (0+255),w,b
  8759  0056E0  E1E9               	bnz	l8535
  8760  0056E2  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8761  0056E4  B4D8               	btfsc	status,2,c
  8762  0056E6  0012               	return	
  8763  0056E8  D7E5               	goto	l3075
  8764  0056EA                     __end_of_memcpy:
  8765                           	opt stack 0
  8766                           tosu	equ	0xFFF
  8767                           tosh	equ	0xFFE
  8768                           tosl	equ	0xFFD
  8769                           pclath	equ	0xFFA
  8770                           tblptru	equ	0xFF8
  8771                           tblptrh	equ	0xFF7
  8772                           tblptrl	equ	0xFF6
  8773                           tablat	equ	0xFF5
  8774                           prodh	equ	0xFF4
  8775                           prodl	equ	0xFF3
  8776                           intcon	equ	0xFF2
  8777                           intcon2	equ	0xFF1
  8778                           intcon3	equ	0xFF0
  8779                           postinc0	equ	0xFEE
  8780                           plusw0	equ	0xFEB
  8781                           wreg	equ	0xFE8
  8782                           postinc1	equ	0xFE6
  8783                           postdec1	equ	0xFE5
  8784                           plusw1	equ	0xFE3
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           postdec2	equ	0xFDD
  8790                           plusw2	equ	0xFDB
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8796 ;; Defined at:
  8797 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:   17
  8818 ;; This function calls:
  8819 ;;		_USBCheckStdRequest
  8820 ;;		_USBCtrlEPServiceComplete
  8821 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8822 ;; This function is called by:
  8823 ;;		_USBCtrlEPService
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text36
  8828  0049F8                     __ptext36:
  8829                           	opt stack 0
  8830  0049F8                     _USBCtrlTrfSetupHandler:
  8831                           	opt stack 8
  8832                           
  8833                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;incstack = 0
  8837  0049F8  0E00               	movlw	0
  8838  0049FA  0100               	movlb	0	; () banked
  8839  0049FC  6FD2               	movwf	_shortPacketStatus& (0+255),b
  8840                           
  8841                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8842  0049FE  0E00               	movlw	0
  8843  004A00  6FCF               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8844                           
  8845                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8846  004A02  0E00               	movlw	0
  8847  004A04  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8848                           
  8849                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8850  004A06  0E00               	movlw	0
  8851  004A08  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8852                           
  8853                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8854  004A0A  0E00               	movlw	0
  8855  004A0C  0101               	movlb	1	; () banked
  8856  004A0E  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8857                           
  8858                           ;usb_device.c: 2493: controlTransferState = 0;
  8859  004A10  0E00               	movlw	0
  8860  004A12  0100               	movlb	0	; () banked
  8861  004A14  6FD1               	movwf	_controlTransferState& (0+255),b
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8865  004A16  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  8866  004A1A  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8867  004A1E  0E7F               	movlw	127
  8868  004A20  16DF               	andwf	indf2,f,c
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8872  004A22  0E04               	movlw	4
  8873  004A24  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8877  004A26  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  8878  004A2A  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8879  004A2E  0E7F               	movlw	127
  8880  004A30  16DF               	andwf	indf2,f,c
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8884  004A32  0E04               	movlw	4
  8885  004A34  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8889  004A36  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8890  004A3A  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8891  004A3E  0E7F               	movlw	127
  8892  004A40  16DF               	andwf	indf2,f,c
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8896  004A42  0E00               	movlw	0
  8897  004A44  6FBB               	movwf	(_inPipes+3)& (0+255),b
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8901  004A46  0E00               	movlw	0
  8902  004A48  6FBD               	movwf	(_inPipes+5)& (0+255),b
  8903  004A4A  0E00               	movlw	0
  8904  004A4C  6FBC               	movwf	(_inPipes+4)& (0+255),b
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8908  004A4E  0E00               	movlw	0
  8909  004A50  0101               	movlb	1	; () banked
  8910  004A52  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8911                           
  8912                           ; BSR set to: 1
  8913                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8914  004A54  0E00               	movlw	0
  8915  004A56  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8916  004A58  0E00               	movlw	0
  8917  004A5A  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8918                           
  8919                           ; BSR set to: 1
  8920                           ;usb_device.c: 2517: USBCheckStdRequest();
  8921  004A5C  EC60  F01A         	call	_USBCheckStdRequest	;wreg free
  8922                           
  8923                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8924  004A60  0E00               	movlw	0
  8925  004A62  0100               	movlb	0	; () banked
  8926  004A64  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8927  004A66  0E03               	movlw	3
  8928  004A68  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8929  004A6A  0E00               	movlw	0
  8930  004A6C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8931  004A6E  0E00               	movlw	0
  8932  004A70  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8933  004A72  0E00               	movlw	0
  8934  004A74  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8935  004A76  0E00               	movlw	0
  8936  004A78  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8937  004A7A  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8938                           
  8939                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8940  004A7E  EC10  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8941  004A82  0012               	return		;funcret
  8942  004A84                     __end_of_USBCtrlTrfSetupHandler:
  8943                           	opt stack 0
  8944                           tosu	equ	0xFFF
  8945                           tosh	equ	0xFFE
  8946                           tosl	equ	0xFFD
  8947                           pclath	equ	0xFFA
  8948                           tblptru	equ	0xFF8
  8949                           tblptrh	equ	0xFF7
  8950                           tblptrl	equ	0xFF6
  8951                           tablat	equ	0xFF5
  8952                           prodh	equ	0xFF4
  8953                           prodl	equ	0xFF3
  8954                           intcon	equ	0xFF2
  8955                           intcon2	equ	0xFF1
  8956                           intcon3	equ	0xFF0
  8957                           postinc0	equ	0xFEE
  8958                           plusw0	equ	0xFEB
  8959                           wreg	equ	0xFE8
  8960                           postinc1	equ	0xFE6
  8961                           postdec1	equ	0xFE5
  8962                           plusw1	equ	0xFE3
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           indf2	equ	0xFDF
  8966                           postinc2	equ	0xFDE
  8967                           postdec2	equ	0xFDD
  8968                           plusw2	equ	0xFDB
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           
  8973 ;; *************** function _USBCtrlEPServiceComplete *****************
  8974 ;; Defined at:
  8975 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;Total ram usage:        0 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:   13
  8996 ;; This function calls:
  8997 ;;		_USBCtrlEPAllowDataStage
  8998 ;;		_USBCtrlEPAllowStatusStage
  8999 ;; This function is called by:
  9000 ;;		_USBCtrlTrfSetupHandler
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text37
  9005  003020                     __ptext37:
  9006                           	opt stack 0
  9007  003020                     _USBCtrlEPServiceComplete:
  9008                           	opt stack 11
  9009                           
  9010                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9011                           
  9012                           ;incstack = 0
  9013  003020  9865               	bcf	3941,4,c	;volatile
  9014                           
  9015                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9016  003022  0100               	movlb	0	; () banked
  9017  003024  BFBB               	btfsc	(_inPipes+3)& (0+255),7,b
  9018  003026  D03B               	goto	l1669
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;usb_device.c: 1647: {
  9022                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9023  003028  0101               	movlb	1	; () banked
  9024  00302A  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9025  00302C  D00C               	goto	l1670
  9026                           
  9027                           ; BSR set to: 1
  9028                           ;usb_device.c: 1649: {
  9029                           ;usb_device.c: 1650: controlTransferState = 2;
  9030  00302E  0E02               	movlw	2
  9031  003030  0100               	movlb	0	; () banked
  9032  003032  6FD1               	movwf	_controlTransferState& (0+255),b
  9033                           
  9034                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9035  003034  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9036  003036  B4D8               	btfsc	status,2,c
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;usb_device.c: 1662: {
  9040                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9041  003038  ECA8  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9042                           
  9043                           ;usb_device.c: 1664: }
  9044                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9045  00303C  0E00               	movlw	0
  9046  00303E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9047                           
  9048                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9049  003040  0E00               	movlw	0
  9050  003042  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9051                           
  9052                           ;usb_device.c: 1670: }
  9053  003044  0012               	return	
  9054  003046                     l1670:
  9055                           
  9056                           ;usb_device.c: 1671: else
  9057                           ;usb_device.c: 1672: {
  9058                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9059  003046  0100               	movlb	0	; () banked
  9060  003048  EE20 F001          	lfsr	2,1
  9061  00304C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9062  00304E  26D9               	addwf	fsr2l,f,c
  9063  003050  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9064  003052  22DA               	addwfc	fsr2h,f,c
  9065  003054  0E08               	movlw	8
  9066  003056  6EDF               	movwf	indf2,c
  9067                           
  9068                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9069  003058  EE20 F002          	lfsr	2,2
  9070  00305C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9071  00305E  26D9               	addwf	fsr2l,f,c
  9072  003060  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9073  003062  22DA               	addwfc	fsr2h,f,c
  9074  003064  0E30               	movlw	48
  9075  003066  6EDE               	movwf	postinc2,c
  9076  003068  0E04               	movlw	4
  9077  00306A  6EDD               	movwf	postdec2,c
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9081  00306C  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9082  003070  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9083  003074  0E0C               	movlw	12
  9084  003076  6EDF               	movwf	indf2,c
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9088  003078  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9089  00307C  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9090  003080  0E00               	movlw	0
  9091  003082  8EDB               	bsf	plusw2,7,c
  9092                           
  9093                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9094  003084  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9095  003088  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9096  00308C  0E04               	movlw	4
  9097  00308E  6EDF               	movwf	indf2,c
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9101  003090  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9102  003094  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9103  003098  0E00               	movlw	0
  9104  00309A  8EDB               	bsf	plusw2,7,c
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;usb_device.c: 1683: }
  9108                           ;usb_device.c: 1684: }
  9109  00309C  0012               	return	
  9110  00309E                     l1669:
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;usb_device.c: 1685: else
  9114                           ;usb_device.c: 1686: {
  9115                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9116  00309E  0104               	movlb	4	; () banked
  9117  0030A0  AF30               	btfss	48,7,b	;volatile
  9118  0030A2  D012               	goto	l1674
  9119                           
  9120                           ; BSR set to: 4
  9121                           ;usb_device.c: 1688: {
  9122                           ;usb_device.c: 1689: controlTransferState = 1;
  9123  0030A4  0E01               	movlw	1
  9124  0030A6  0100               	movlb	0	; () banked
  9125  0030A8  6FD1               	movwf	_controlTransferState& (0+255),b
  9126                           
  9127                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9128  0030AA  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9129  0030AC  B4D8               	btfsc	status,2,c
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;usb_device.c: 1704: {
  9133                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9134  0030AE  ECA8  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9135                           
  9136                           ;usb_device.c: 1706: }
  9137                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9138  0030B2  0E00               	movlw	0
  9139  0030B4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9140                           
  9141                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9142  0030B6  0E00               	movlw	0
  9143  0030B8  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9144                           
  9145                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9146  0030BA  0100               	movlb	0	; () banked
  9147  0030BC  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9148  0030BE  A4D8               	btfss	status,2,c
  9149  0030C0  0012               	return	
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;usb_device.c: 1731: {
  9153                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9154  0030C2  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9155                           
  9156                           ;usb_device.c: 1733: }
  9157                           ;usb_device.c: 1734: }
  9158  0030C6  0012               	return	
  9159  0030C8                     l1674:
  9160                           
  9161                           ;usb_device.c: 1735: else
  9162                           ;usb_device.c: 1736: {
  9163                           ;usb_device.c: 1747: controlTransferState = 2;
  9164  0030C8  0E02               	movlw	2
  9165  0030CA  0100               	movlb	0	; () banked
  9166  0030CC  6FD1               	movwf	_controlTransferState& (0+255),b
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9170  0030CE  EE20 F001          	lfsr	2,1
  9171  0030D2  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9172  0030D4  26D9               	addwf	fsr2l,f,c
  9173  0030D6  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9174  0030D8  22DA               	addwfc	fsr2h,f,c
  9175  0030DA  0E08               	movlw	8
  9176  0030DC  6EDF               	movwf	indf2,c
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9180  0030DE  EE20 F002          	lfsr	2,2
  9181  0030E2  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9182  0030E4  26D9               	addwf	fsr2l,f,c
  9183  0030E6  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9184  0030E8  22DA               	addwfc	fsr2h,f,c
  9185  0030EA  0E30               	movlw	48
  9186  0030EC  6EDE               	movwf	postinc2,c
  9187  0030EE  0E04               	movlw	4
  9188  0030F0  6EDD               	movwf	postdec2,c
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9192  0030F2  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9193  0030F6  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9194  0030FA  0E04               	movlw	4
  9195  0030FC  6EDF               	movwf	indf2,c
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9199  0030FE  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9200  003102  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9201  003106  0E00               	movlw	0
  9202  003108  8EDB               	bsf	plusw2,7,c
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9206  00310A  0E00               	movlw	0
  9207  00310C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9211  00310E  0E00               	movlw	0
  9212  003110  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9216  003112  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9217  003114  A4D8               	btfss	status,2,c
  9218  003116  0012               	return	
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;usb_device.c: 1759: {
  9222                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9223  003118  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9224  00311C  0012               	return	
  9225  00311E                     __end_of_USBCtrlEPServiceComplete:
  9226                           	opt stack 0
  9227                           tosu	equ	0xFFF
  9228                           tosh	equ	0xFFE
  9229                           tosl	equ	0xFFD
  9230                           pclath	equ	0xFFA
  9231                           tblptru	equ	0xFF8
  9232                           tblptrh	equ	0xFF7
  9233                           tblptrl	equ	0xFF6
  9234                           tablat	equ	0xFF5
  9235                           prodh	equ	0xFF4
  9236                           prodl	equ	0xFF3
  9237                           intcon	equ	0xFF2
  9238                           intcon2	equ	0xFF1
  9239                           intcon3	equ	0xFF0
  9240                           postinc0	equ	0xFEE
  9241                           plusw0	equ	0xFEB
  9242                           wreg	equ	0xFE8
  9243                           postinc1	equ	0xFE6
  9244                           postdec1	equ	0xFE5
  9245                           plusw1	equ	0xFE3
  9246                           fsr1h	equ	0xFE2
  9247                           fsr1l	equ	0xFE1
  9248                           indf2	equ	0xFDF
  9249                           postinc2	equ	0xFDE
  9250                           postdec2	equ	0xFDD
  9251                           plusw2	equ	0xFDB
  9252                           fsr2h	equ	0xFDA
  9253                           fsr2l	equ	0xFD9
  9254                           status	equ	0xFD8
  9255                           
  9256 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9257 ;; Defined at:
  9258 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;		None
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;Total ram usage:        0 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:   12
  9279 ;; This function calls:
  9280 ;;		_USBCtrlTrfTxService
  9281 ;; This function is called by:
  9282 ;;		_USBCtrlEPServiceComplete
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text38
  9287  004550                     __ptext38:
  9288                           	opt stack 0
  9289  004550                     _USBCtrlEPAllowDataStage:
  9290                           	opt stack 11
  9291                           
  9292                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9293                           
  9294                           ;incstack = 0
  9295  004550  0E00               	movlw	0
  9296  004552  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9297                           
  9298                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9299  004554  0E00               	movlw	0
  9300  004556  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9301                           
  9302                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9303  004558  0E02               	movlw	2
  9304  00455A  0100               	movlb	0	; () banked
  9305  00455C  19D1               	xorwf	_controlTransferState& (0+255),w,b
  9306  00455E  A4D8               	btfss	status,2,c
  9307  004560  D01F               	goto	l1658
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;usb_device.c: 1512: {
  9311                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9312  004562  EE20 F001          	lfsr	2,1
  9313  004566  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9314  004568  26D9               	addwf	fsr2l,f,c
  9315  00456A  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9316  00456C  22DA               	addwfc	fsr2h,f,c
  9317  00456E  0E08               	movlw	8
  9318  004570  6EDF               	movwf	indf2,c
  9319                           
  9320                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9321  004572  EE20 F002          	lfsr	2,2
  9322  004576  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9323  004578  26D9               	addwf	fsr2l,f,c
  9324  00457A  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9325  00457C  22DA               	addwfc	fsr2h,f,c
  9326  00457E  0E38               	movlw	56
  9327  004580  6EDE               	movwf	postinc2,c
  9328  004582  0E04               	movlw	4
  9329  004584  6EDD               	movwf	postdec2,c
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9333  004586  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9334  00458A  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9335  00458E  0E48               	movlw	72
  9336  004590  6EDF               	movwf	indf2,c
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9340  004592  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9341  004596  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9342  00459A  0E00               	movlw	0
  9343  00459C  8EDB               	bsf	plusw2,7,c
  9344                           
  9345                           ;usb_device.c: 1518: }
  9346  00459E  0012               	return	
  9347  0045A0                     l1658:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;usb_device.c: 1519: else
  9351                           ;usb_device.c: 1520: {
  9352                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9353                           
  9354                           ; BSR set to: 0
  9355  0045A0  51BC               	movf	(_inPipes+4)& (0+255),w,b
  9356  0045A2  0104               	movlb	4	; () banked
  9357  0045A4  5D36               	subwf	54,w,b	;volatile
  9358  0045A6  0100               	movlb	0	; () banked
  9359  0045A8  51BD               	movf	(_inPipes+5)& (0+255),w,b
  9360  0045AA  0104               	movlb	4	; () banked
  9361  0045AC  5937               	subwfb	55,w,b	;volatile
  9362  0045AE  B0D8               	btfsc	status,0,c
  9363  0045B0  D004               	goto	l1660
  9364                           
  9365                           ; BSR set to: 4
  9366                           ;usb_device.c: 1524: {
  9367                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9368  0045B2  C436 F0BC          	movff	1078,_inPipes+4	;volatile
  9369  0045B6  C437 F0BD          	movff	1079,_inPipes+5	;volatile
  9370  0045BA                     l1660:
  9371                           
  9372                           ; BSR set to: 4
  9373                           ;usb_device.c: 1526: }
  9374                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9375                           
  9376                           ; BSR set to: 4
  9377  0045BA  ECD2  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9378                           
  9379                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9380  0045BE  0100               	movlb	0	; () banked
  9381  0045C0  EE20 F002          	lfsr	2,2
  9382  0045C4  51BE               	movf	_pBDTEntryIn& (0+255),w,b
  9383  0045C6  26D9               	addwf	fsr2l,f,c
  9384  0045C8  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9385  0045CA  22DA               	addwfc	fsr2h,f,c
  9386  0045CC  0E38               	movlw	56
  9387  0045CE  6EDE               	movwf	postinc2,c
  9388  0045D0  0E04               	movlw	4
  9389  0045D2  6EDD               	movwf	postdec2,c
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9393  0045D4  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9394  0045D8  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9395  0045DC  0E48               	movlw	72
  9396  0045DE  6EDF               	movwf	indf2,c
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9400  0045E0  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9401  0045E4  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9402  0045E8  0E00               	movlw	0
  9403  0045EA  8EDB               	bsf	plusw2,7,c
  9404  0045EC  0012               	return	
  9405  0045EE                     __end_of_USBCtrlEPAllowDataStage:
  9406                           	opt stack 0
  9407                           tosu	equ	0xFFF
  9408                           tosh	equ	0xFFE
  9409                           tosl	equ	0xFFD
  9410                           pclath	equ	0xFFA
  9411                           tblptru	equ	0xFF8
  9412                           tblptrh	equ	0xFF7
  9413                           tblptrl	equ	0xFF6
  9414                           tablat	equ	0xFF5
  9415                           prodh	equ	0xFF4
  9416                           prodl	equ	0xFF3
  9417                           intcon	equ	0xFF2
  9418                           intcon2	equ	0xFF1
  9419                           intcon3	equ	0xFF0
  9420                           postinc0	equ	0xFEE
  9421                           plusw0	equ	0xFEB
  9422                           wreg	equ	0xFE8
  9423                           postinc1	equ	0xFE6
  9424                           postdec1	equ	0xFE5
  9425                           plusw1	equ	0xFE3
  9426                           fsr1h	equ	0xFE2
  9427                           fsr1l	equ	0xFE1
  9428                           indf2	equ	0xFDF
  9429                           postinc2	equ	0xFDE
  9430                           postdec2	equ	0xFDD
  9431                           plusw2	equ	0xFDB
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           
  9436 ;; *************** function _USBCheckStdRequest *****************
  9437 ;; Defined at:
  9438 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:   16
  9459 ;; This function calls:
  9460 ;;		_USBStdFeatureReqHandler
  9461 ;;		_USBStdGetDscHandler
  9462 ;;		_USBStdGetStatusHandler
  9463 ;;		_USBStdSetCfgHandler
  9464 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9465 ;; This function is called by:
  9466 ;;		_USBCtrlTrfSetupHandler
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text39
  9471  0034C0                     __ptext39:
  9472                           	opt stack 0
  9473  0034C0                     _USBCheckStdRequest:
  9474                           	opt stack 8
  9475                           
  9476                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;incstack = 0
  9480  0034C0  0104               	movlb	4	; () banked
  9481  0034C2  3930               	swapf	48,w,b	;volatile
  9482  0034C4  32E8               	rrcf	wreg,f,c
  9483  0034C6  0B03               	andlw	3
  9484  0034C8  0900               	iorlw	0
  9485  0034CA  A4D8               	btfss	status,2,c
  9486  0034CC  0012               	return	
  9487  0034CE  D048               	goto	l1793
  9488  0034D0                     l1794:
  9489                           
  9490                           ; BSR set to: 4
  9491                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9492  0034D0  0100               	movlb	0	; () banked
  9493  0034D2  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9497  0034D4  0E08               	movlw	8
  9498  0034D6  6FD3               	movwf	_USBDeviceState& (0+255),b
  9499                           
  9500                           ;usb_device.c: 2713: break;
  9501  0034D8  0012               	return	
  9502  0034DA                     
  9503                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9504                           
  9505                           ; BSR set to: 0
  9506  0034DA  ECC9  F015         	call	_USBStdGetDscHandler	;wreg free
  9507                           
  9508                           ;usb_device.c: 2716: break;
  9509  0034DE  0012               	return	
  9510  0034E0                     
  9511                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9512  0034E0  EC7A  F019         	call	_USBStdSetCfgHandler	;wreg free
  9513                           
  9514                           ;usb_device.c: 2719: break;
  9515  0034E4  0012               	return	
  9516  0034E6                     
  9517                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9518  0034E6  0EDB               	movlw	low _USBActiveConfiguration
  9519  0034E8  0100               	movlb	0	; () banked
  9520  0034EA  6FB8               	movwf	_inPipes& (0+255),b
  9521  0034EC  0E00               	movlw	high _USBActiveConfiguration
  9522  0034EE  6FB9               	movwf	(_inPipes+1)& (0+255),b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9526  0034F0  81BB               	bsf	(_inPipes+3)& (0+255),0,b
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9530  0034F2  0E01               	movlw	1
  9531  0034F4  6FBC               	movwf	(_inPipes+4)& (0+255),b
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9535  0034F6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9536                           
  9537                           ;usb_device.c: 2725: break;
  9538  0034F8  0012               	return	
  9539  0034FA                     
  9540                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9541                           
  9542                           ; BSR set to: 0
  9543  0034FA  EC57  F020         	call	_USBStdGetStatusHandler	;wreg free
  9544                           
  9545                           ;usb_device.c: 2728: break;
  9546  0034FE  0012               	return	
  9547  003500                     
  9548                           ;usb_device.c: 2730: case 3:
  9549                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9550  003500  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9551                           
  9552                           ;usb_device.c: 2732: break;
  9553  003504  0012               	return	
  9554  003506                     
  9555                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9556  003506  0104               	movlb	4	; () banked
  9557  003508  5134               	movf	52,w,b	;volatile
  9558  00350A  0D01               	mullw	1
  9559  00350C  0EEF               	movlw	low _USBAlternateInterface
  9560  00350E  24F3               	addwf	prodl,w,c
  9561  003510  0100               	movlb	0	; () banked
  9562  003512  6FB8               	movwf	_inPipes& (0+255),b
  9563  003514  0E02               	movlw	high _USBAlternateInterface
  9564  003516  20F4               	addwfc	prodh,w,c
  9565  003518  6FB9               	movwf	(_inPipes+1)& (0+255),b
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9569  00351A  81BB               	bsf	(_inPipes+3)& (0+255),0,b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9573  00351C  0E01               	movlw	1
  9574  00351E  6FBC               	movwf	(_inPipes+4)& (0+255),b
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9578  003520  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9579                           
  9580                           ;usb_device.c: 2738: break;
  9581  003522  0012               	return	
  9582  003524                     l1803:
  9583                           
  9584                           ; BSR set to: 4
  9585                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9586  003524  0100               	movlb	0	; () banked
  9587  003526  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9591  003528  0104               	movlb	4	; () banked
  9592  00352A  5134               	movf	52,w,b	;volatile
  9593  00352C  0D01               	mullw	1
  9594  00352E  0EEF               	movlw	low _USBAlternateInterface
  9595  003530  24F3               	addwf	prodl,w,c
  9596  003532  6ED9               	movwf	fsr2l,c
  9597  003534  0E02               	movlw	high _USBAlternateInterface
  9598  003536  20F4               	addwfc	prodh,w,c
  9599  003538  6EDA               	movwf	fsr2h,c
  9600  00353A  C432 FFDF          	movff	1074,indf2	;volatile
  9601                           
  9602                           ;usb_device.c: 2742: break;
  9603  00353E  0012               	return	
  9604  003540                     
  9605                           ; BSR set to: 4
  9606                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9607                           
  9608                           ; BSR set to: 4
  9609  003540  0E00               	movlw	0
  9610  003542  0100               	movlb	0	; () banked
  9611  003544  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9612  003546  0E02               	movlw	2
  9613  003548  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9614  00354A  0E00               	movlw	0
  9615  00354C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9616  00354E  0E00               	movlw	0
  9617  003550  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9618  003552  0E00               	movlw	0
  9619  003554  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9620  003556  0E00               	movlw	0
  9621  003558  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9622  00355A  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9623                           
  9624                           ;usb_device.c: 2749: }
  9625                           
  9626                           ;usb_device.c: 2748: break;
  9627                           
  9628                           ;usb_device.c: 2747: default:
  9629                           
  9630                           ;usb_device.c: 2746: case 12:
  9631                           
  9632                           ;usb_device.c: 2745: break;
  9633  00355E  0012               	return	
  9634  003560                     l1793:
  9635  003560  0104               	movlb	4	; () banked
  9636  003562  5131               	movf	49,w,b	;volatile
  9637                           
  9638                           ; Switch size 1, requested type "space"
  9639                           ; Number of cases is 11, Range of values is 0 to 12
  9640                           ; switch strategies available:
  9641                           ; Name         Instructions Cycles
  9642                           ; simple_byte           34    18 (average)
  9643                           ;	Chosen strategy is simple_byte
  9644  003564  0A00               	xorlw	0	; case 0
  9645  003566  B4D8               	btfsc	status,2,c
  9646  003568  D7C8               	goto	l1799
  9647  00356A  0A01               	xorlw	1	; case 1
  9648  00356C  B4D8               	btfsc	status,2,c
  9649  00356E  D7C8               	goto	l1800
  9650  003570  0A02               	xorlw	2	; case 3
  9651  003572  B4D8               	btfsc	status,2,c
  9652  003574  D7C5               	goto	l1800
  9653  003576  0A06               	xorlw	6	; case 5
  9654  003578  B4D8               	btfsc	status,2,c
  9655  00357A  D7AA               	goto	l1794
  9656  00357C  0A03               	xorlw	3	; case 6
  9657  00357E  B4D8               	btfsc	status,2,c
  9658  003580  D7AC               	goto	l1796
  9659  003582  0A01               	xorlw	1	; case 7
  9660  003584  B4D8               	btfsc	status,2,c
  9661  003586  D7DC               	goto	l1804
  9662  003588  0A0F               	xorlw	15	; case 8
  9663  00358A  B4D8               	btfsc	status,2,c
  9664  00358C  D7AC               	goto	l1798
  9665  00358E  0A01               	xorlw	1	; case 9
  9666  003590  B4D8               	btfsc	status,2,c
  9667  003592  D7A6               	goto	l1797
  9668  003594  0A03               	xorlw	3	; case 10
  9669  003596  B4D8               	btfsc	status,2,c
  9670  003598  D7B6               	goto	l1802
  9671  00359A  0A01               	xorlw	1	; case 11
  9672  00359C  B4D8               	btfsc	status,2,c
  9673  00359E  D7C2               	goto	l1803
  9674  0035A0  0A07               	xorlw	7	; case 12
  9675  0035A2  0012               	return	
  9676  0035A4                     __end_of_USBCheckStdRequest:
  9677                           	opt stack 0
  9678                           tosu	equ	0xFFF
  9679                           tosh	equ	0xFFE
  9680                           tosl	equ	0xFFD
  9681                           pclath	equ	0xFFA
  9682                           tblptru	equ	0xFF8
  9683                           tblptrh	equ	0xFF7
  9684                           tblptrl	equ	0xFF6
  9685                           tablat	equ	0xFF5
  9686                           prodh	equ	0xFF4
  9687                           prodl	equ	0xFF3
  9688                           intcon	equ	0xFF2
  9689                           intcon2	equ	0xFF1
  9690                           intcon3	equ	0xFF0
  9691                           postinc0	equ	0xFEE
  9692                           plusw0	equ	0xFEB
  9693                           wreg	equ	0xFE8
  9694                           postinc1	equ	0xFE6
  9695                           postdec1	equ	0xFE5
  9696                           plusw1	equ	0xFE3
  9697                           fsr1h	equ	0xFE2
  9698                           fsr1l	equ	0xFE1
  9699                           indf2	equ	0xFDF
  9700                           postinc2	equ	0xFDE
  9701                           postdec2	equ	0xFDD
  9702                           plusw2	equ	0xFDB
  9703                           fsr2h	equ	0xFDA
  9704                           fsr2l	equ	0xFD9
  9705                           status	equ	0xFD8
  9706                           
  9707 ;; *************** function _USBStdSetCfgHandler *****************
  9708 ;; Defined at:
  9709 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  i               1   49[BANK0 ] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;Total ram usage:        1 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; Hardware stack levels required when called:   15
  9730 ;; This function calls:
  9731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9732 ;;		_memset
  9733 ;; This function is called by:
  9734 ;;		_USBCheckStdRequest
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text40
  9739  0032F4                     __ptext40:
  9740                           	opt stack 0
  9741  0032F4                     _USBStdSetCfgHandler:
  9742                           	opt stack 8
  9743                           
  9744                           ;usb_device.c: 1988: uint8_t i;
  9745                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9746                           
  9747                           ;incstack = 0
  9748  0032F4  0100               	movlb	0	; () banked
  9749  0032F6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9753  0032F8  0E27               	movlw	39
  9754  0032FA  6F7D               	movwf	memset@p1& (0+255),b
  9755  0032FC  0E0F               	movlw	15
  9756  0032FE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9757  003300  0E00               	movlw	0
  9758  003302  6F80               	movwf	(memset@c+1)& (0+255),b
  9759  003304  0E00               	movlw	0
  9760  003306  6F7F               	movwf	memset@c& (0+255),b
  9761  003308  0E00               	movlw	0
  9762  00330A  6F82               	movwf	(memset@n+1)& (0+255),b
  9763  00330C  0E02               	movlw	2
  9764  00330E  6F81               	movwf	memset@n& (0+255),b
  9765  003310  ECF4  F02D         	call	_memset	;wreg free
  9766                           
  9767                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9768  003314  0E00               	movlw	0
  9769  003316  0100               	movlb	0	; () banked
  9770  003318  6F7D               	movwf	memset@p1& (0+255),b
  9771  00331A  0E04               	movlw	4
  9772  00331C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9773  00331E  0E00               	movlw	0
  9774  003320  6F80               	movwf	(memset@c+1)& (0+255),b
  9775  003322  0E00               	movlw	0
  9776  003324  6F7F               	movwf	memset@c& (0+255),b
  9777  003326  0E00               	movlw	0
  9778  003328  6F82               	movwf	(memset@n+1)& (0+255),b
  9779  00332A  0E30               	movlw	48
  9780  00332C  6F81               	movwf	memset@n& (0+255),b
  9781  00332E  ECF4  F02D         	call	_memset	;wreg free
  9782                           
  9783                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9784  003332  8C65               	bsf	3941,6,c	;volatile
  9785                           
  9786                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9787  003334  0E00               	movlw	0
  9788  003336  0100               	movlb	0	; () banked
  9789  003338  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9790  00333A                     l11621:
  9791                           
  9792                           ; BSR set to: 0
  9793  00333A  0E02               	movlw	2
  9794  00333C  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9795  00333E  D001               	goto	l1710
  9796  003340  D016               	goto	u10170
  9797  003342                     l1710:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;usb_device.c: 2006: {
  9801                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9802                           
  9803                           ; BSR set to: 0
  9804  003342  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9805  003344  0D01               	mullw	1
  9806  003346  0ED1               	movlw	low _ep_data_in
  9807  003348  24F3               	addwf	prodl,w,c
  9808  00334A  6ED9               	movwf	fsr2l,c
  9809  00334C  0E02               	movlw	high _ep_data_in
  9810  00334E  20F4               	addwfc	prodh,w,c
  9811  003350  6EDA               	movwf	fsr2h,c
  9812  003352  0E00               	movlw	0
  9813  003354  6EDF               	movwf	indf2,c
  9814                           
  9815                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9816  003356  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9817  003358  0D01               	mullw	1
  9818  00335A  0ECE               	movlw	low _ep_data_out
  9819  00335C  24F3               	addwf	prodl,w,c
  9820  00335E  6ED9               	movwf	fsr2l,c
  9821  003360  0E02               	movlw	high _ep_data_out
  9822  003362  20F4               	addwfc	prodh,w,c
  9823  003364  6EDA               	movwf	fsr2h,c
  9824  003366  0E00               	movlw	0
  9825  003368  6EDF               	movwf	indf2,c
  9826                           
  9827                           ; BSR set to: 0
  9828  00336A  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9829  00336C  D7E6               	goto	l11621
  9830  00336E                     u10170:
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;usb_device.c: 2009: }
  9834                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9835                           
  9836                           ; BSR set to: 0
  9837  00336E  0EEF               	movlw	low _USBAlternateInterface
  9838  003370  6F7D               	movwf	memset@p1& (0+255),b
  9839  003372  0E02               	movlw	high _USBAlternateInterface
  9840  003374  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9841  003376  0E00               	movlw	0
  9842  003378  6F80               	movwf	(memset@c+1)& (0+255),b
  9843  00337A  0E00               	movlw	0
  9844  00337C  6F7F               	movwf	memset@c& (0+255),b
  9845  00337E  0E00               	movlw	0
  9846  003380  6F82               	movwf	(memset@n+1)& (0+255),b
  9847  003382  0E02               	movlw	2
  9848  003384  6F81               	movwf	memset@n& (0+255),b
  9849  003386  ECF4  F02D         	call	_memset	;wreg free
  9850                           
  9851                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9852  00338A  9C65               	bcf	3941,6,c	;volatile
  9853                           
  9854                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9855  00338C  0E08               	movlw	8
  9856  00338E  0100               	movlb	0	; () banked
  9857  003390  6FBE               	movwf	_pBDTEntryIn& (0+255),b
  9858  003392  0E04               	movlw	4
  9859  003394  6FBF               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9863  003396  0E00               	movlw	0
  9864  003398  6FC8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9865  00339A  0E04               	movlw	4
  9866  00339C  6FC9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9870  00339E  C0C8  F0C6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9871  0033A2  C0C9  F0C7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9875  0033A6  C432 F0DB          	movff	1074,_USBActiveConfiguration	;volatile
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9879  0033AA  51DB               	movf	_USBActiveConfiguration& (0+255),w,b
  9880  0033AC  A4D8               	btfss	status,2,c
  9881  0033AE  D003               	goto	l1712
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;usb_device.c: 2028: {
  9885                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9886  0033B0  0E10               	movlw	16
  9887  0033B2  6FD3               	movwf	_USBDeviceState& (0+255),b
  9888                           
  9889                           ;usb_device.c: 2031: }
  9890  0033B4  0012               	return	
  9891  0033B6                     l1712:
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;usb_device.c: 2032: else
  9895                           ;usb_device.c: 2033: {
  9896                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9897                           
  9898                           ; BSR set to: 0
  9899  0033B6  0E00               	movlw	0
  9900  0033B8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9901  0033BA  0E01               	movlw	1
  9902  0033BC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9903  0033BE  0EDB               	movlw	low _USBActiveConfiguration
  9904  0033C0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9905  0033C2  0E00               	movlw	high _USBActiveConfiguration
  9906  0033C4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9907  0033C6  0E00               	movlw	0
  9908  0033C8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9909  0033CA  0E01               	movlw	1
  9910  0033CC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9911  0033CE  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9912                           
  9913                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9914  0033D2  0E20               	movlw	32
  9915  0033D4  0100               	movlb	0	; () banked
  9916  0033D6  6FD3               	movwf	_USBDeviceState& (0+255),b
  9917  0033D8  0012               	return	
  9918  0033DA                     __end_of_USBStdSetCfgHandler:
  9919                           	opt stack 0
  9920                           tosu	equ	0xFFF
  9921                           tosh	equ	0xFFE
  9922                           tosl	equ	0xFFD
  9923                           pclath	equ	0xFFA
  9924                           tblptru	equ	0xFF8
  9925                           tblptrh	equ	0xFF7
  9926                           tblptrl	equ	0xFF6
  9927                           tablat	equ	0xFF5
  9928                           prodh	equ	0xFF4
  9929                           prodl	equ	0xFF3
  9930                           intcon	equ	0xFF2
  9931                           intcon2	equ	0xFF1
  9932                           intcon3	equ	0xFF0
  9933                           postinc0	equ	0xFEE
  9934                           plusw0	equ	0xFEB
  9935                           wreg	equ	0xFE8
  9936                           postinc1	equ	0xFE6
  9937                           postdec1	equ	0xFE5
  9938                           plusw1	equ	0xFE3
  9939                           fsr1h	equ	0xFE2
  9940                           fsr1l	equ	0xFE1
  9941                           indf2	equ	0xFDF
  9942                           postinc2	equ	0xFDE
  9943                           postdec2	equ	0xFDD
  9944                           plusw2	equ	0xFDB
  9945                           fsr2h	equ	0xFDA
  9946                           fsr2l	equ	0xFD9
  9947                           status	equ	0xFD8
  9948                           
  9949 ;; *************** function _USBStdGetStatusHandler *****************
  9950 ;; Defined at:
  9951 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;		None
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9956 ;;		 -> NULL(0), BDT(48), 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  1    wreg      void 
  9959 ;; Registers used:
  9960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9970 ;;Total ram usage:        3 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:   11
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_USBCheckStdRequest
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text41
  9981  0040AE                     __ptext41:
  9982                           	opt stack 0
  9983  0040AE                     _USBStdGetStatusHandler:
  9984                           	opt stack 12
  9985                           
  9986                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;incstack = 0
  9990  0040AE  0E00               	movlw	0
  9991  0040B0  0104               	movlb	4	; () banked
  9992  0040B2  6F38               	movwf	56,b	;volatile
  9993                           
  9994                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9995  0040B4  0E00               	movlw	0
  9996  0040B6  6F39               	movwf	57,b	;volatile
  9997                           
  9998                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9999  0040B8  D03D               	goto	l1731
 10000  0040BA                     l1732:
 10001                           
 10002                           ; BSR set to: 4
 10003                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10004  0040BA  0100               	movlb	0	; () banked
 10005  0040BC  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10006                           
 10007                           ;usb_device.c: 2163: }
 10008                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10009                           
 10010                           ; BSR set to: 4
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;usb_device.c: 2161: {
 10014                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10015                           
 10016                           ;usb_device.c: 2160: if(0 == 1)
 10017  0040BE  0101               	movlb	1	; () banked
 10018  0040C0  05DE               	decf	_RemoteWakeup& (0+255),w,b
 10019  0040C2  A4D8               	btfss	status,2,c
 10020  0040C4  D042               	goto	l1735
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;usb_device.c: 2166: {
 10024                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10025  0040C6  0104               	movlb	4	; () banked
 10026  0040C8  8338               	bsf	56,1,b	;volatile
 10027                           
 10028                           ; BSR set to: 4
 10029                           ;usb_device.c: 2168: }
 10030                           ;usb_device.c: 2169: break;
 10031  0040CA  D03F               	goto	l1735
 10032  0040CC                     l1736:
 10033                           
 10034                           ; BSR set to: 4
 10035                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10036  0040CC  0100               	movlb	0	; () banked
 10037  0040CE  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10038                           
 10039                           ;usb_device.c: 2172: break;
 10040  0040D0  D03C               	goto	l1735
 10041  0040D2                     l1737:
 10042                           
 10043                           ; BSR set to: 4
 10044                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10045  0040D2  0100               	movlb	0	; () banked
 10046  0040D4  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10047                           
 10048                           ;usb_device.c: 2178: {
 10049                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10050                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10051  0040D6  0104               	movlb	4	; () banked
 10052  0040D8  BF34               	btfsc	52,7,b	;volatile
 10053  0040DA  D00B               	goto	l1738
 10054                           
 10055                           ; BSR set to: 4
 10056                           ;usb_device.c: 2182: {
 10057                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10058  0040DC  5134               	movf	52,w,b	;volatile
 10059  0040DE  0B0F               	andlw	15
 10060  0040E0  0100               	movlb	0	; () banked
 10061  0040E2  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10062  0040E4  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10063  0040E6  0D02               	mullw	2
 10064  0040E8  0E0E               	movlw	low _pBDTEntryOut
 10065  0040EA  24F3               	addwf	prodl,w,c
 10066  0040EC  6ED9               	movwf	fsr2l,c
 10067  0040EE  0E03               	movlw	high _pBDTEntryOut
 10068  0040F0  D00B               	goto	L4
 10069  0040F2                     l1738:
 10070                           
 10071                           ;usb_device.c: 2185: else
 10072                           ;usb_device.c: 2186: {
 10073                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10074                           
 10075                           ; BSR set to: 0
 10076  0040F2  0104               	movlb	4	; () banked
 10077  0040F4  5134               	movf	52,w,b	;volatile
 10078  0040F6  0B0F               	andlw	15
 10079  0040F8  0100               	movlb	0	; () banked
 10080  0040FA  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10081  0040FC  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10082  0040FE  0D02               	mullw	2
 10083  004100  0EBE               	movlw	low _pBDTEntryIn
 10084  004102  24F3               	addwf	prodl,w,c
 10085  004104  6ED9               	movwf	fsr2l,c
 10086  004106  0E00               	movlw	high _pBDTEntryIn
 10087  004108                     L4:
 10088  004108  20F4               	addwfc	prodh,w,c
 10089  00410A  6EDA               	movwf	fsr2h,c
 10090  00410C  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10091  004110  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;usb_device.c: 2188: }
 10095                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10096                           
 10097                           ; BSR set to: 0
 10098  004114  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10099  004118  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10100  00411C  AEDF               	btfss	indf2,7,c
 10101  00411E  D015               	goto	l1735
 10102                           
 10103                           ; BSR set to: 0
 10104  004120  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10105  004124  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10106  004128  A4DF               	btfss	indf2,2,c
 10107  00412A  D00F               	goto	l1735
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10111  00412C  0E01               	movlw	1
 10112  00412E  0104               	movlb	4	; () banked
 10113  004130  6F38               	movwf	56,b	;volatile
 10114                           
 10115                           ; BSR set to: 4
 10116                           ;usb_device.c: 2193: }
 10117                           ;usb_device.c: 2194: }
 10118                           
 10119                           ; BSR set to: 4
 10120                           ;usb_device.c: 2192: break;
 10121  004132  D00B               	goto	l1735
 10122  004134                     l1731:
 10123                           
 10124                           ; BSR set to: 4
 10125                           
 10126                           ; BSR set to: 4
 10127  004134  5130               	movf	48,w,b	;volatile
 10128  004136  0B1F               	andlw	31
 10129                           
 10130                           ; Switch size 1, requested type "space"
 10131                           ; Number of cases is 3, Range of values is 0 to 2
 10132                           ; switch strategies available:
 10133                           ; Name         Instructions Cycles
 10134                           ; simple_byte           10     6 (average)
 10135                           ;	Chosen strategy is simple_byte
 10136  004138  0A00               	xorlw	0	; case 0
 10137  00413A  B4D8               	btfsc	status,2,c
 10138  00413C  D7BE               	goto	l1732
 10139  00413E  0A01               	xorlw	1	; case 1
 10140  004140  B4D8               	btfsc	status,2,c
 10141  004142  D7C4               	goto	l1736
 10142  004144  0A03               	xorlw	3	; case 2
 10143  004146  B4D8               	btfsc	status,2,c
 10144  004148  D7C4               	goto	l1737
 10145  00414A                     l1735:
 10146                           
 10147                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10148  00414A  0100               	movlb	0	; () banked
 10149  00414C  AFBB               	btfss	(_inPipes+3)& (0+255),7,b
 10150  00414E  0012               	return	
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;usb_device.c: 2197: {
 10154                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10155  004150  0E38               	movlw	56
 10156  004152  6FB8               	movwf	_inPipes& (0+255),b
 10157  004154  0E04               	movlw	4
 10158  004156  6FB9               	movwf	(_inPipes+1)& (0+255),b
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10162  004158  81BB               	bsf	(_inPipes+3)& (0+255),0,b
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10166  00415A  0E02               	movlw	2
 10167  00415C  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10168  00415E  0012               	return	
 10169  004160                     __end_of_USBStdGetStatusHandler:
 10170                           	opt stack 0
 10171                           tosu	equ	0xFFF
 10172                           tosh	equ	0xFFE
 10173                           tosl	equ	0xFFD
 10174                           pclath	equ	0xFFA
 10175                           tblptru	equ	0xFF8
 10176                           tblptrh	equ	0xFF7
 10177                           tblptrl	equ	0xFF6
 10178                           tablat	equ	0xFF5
 10179                           prodh	equ	0xFF4
 10180                           prodl	equ	0xFF3
 10181                           intcon	equ	0xFF2
 10182                           intcon2	equ	0xFF1
 10183                           intcon3	equ	0xFF0
 10184                           postinc0	equ	0xFEE
 10185                           plusw0	equ	0xFEB
 10186                           wreg	equ	0xFE8
 10187                           postinc1	equ	0xFE6
 10188                           postdec1	equ	0xFE5
 10189                           plusw1	equ	0xFE3
 10190                           fsr1h	equ	0xFE2
 10191                           fsr1l	equ	0xFE1
 10192                           indf2	equ	0xFDF
 10193                           postinc2	equ	0xFDE
 10194                           postdec2	equ	0xFDD
 10195                           plusw2	equ	0xFDB
 10196                           fsr2h	equ	0xFDA
 10197                           fsr2l	equ	0xFD9
 10198                           status	equ	0xFD8
 10199                           
 10200 ;; *************** function _USBStdGetDscHandler *****************
 10201 ;; Defined at:
 10202 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10219 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10220 ;;Total ram usage:        2 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:   11
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_USBCheckStdRequest
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text42
 10231  002B92                     __ptext42:
 10232                           	opt stack 0
 10233  002B92                     _USBStdGetDscHandler:
 10234                           	opt stack 12
 10235                           
 10236                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;incstack = 0
 10240  002B92  0E80               	movlw	128
 10241  002B94  0104               	movlb	4	; () banked
 10242  002B96  1930               	xorwf	48,w,b	;volatile
 10243  002B98  A4D8               	btfss	status,2,c
 10244  002B9A  0012               	return	
 10245                           
 10246                           ; BSR set to: 4
 10247                           ;usb_device.c: 2064: {
 10248                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10249  002B9C  0EC0               	movlw	192
 10250  002B9E  0100               	movlb	0	; () banked
 10251  002BA0  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10252                           
 10253                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10254  002BA2  D082               	goto	l1718
 10255  002BA4                     
 10256                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10257                           
 10258                           ; BSR set to: 0
 10259  002BA4  0E54               	movlw	low _device_dsc
 10260  002BA6  0100               	movlb	0	; () banked
 10261  002BA8  6FB8               	movwf	_inPipes& (0+255),b
 10262  002BAA  0EFE               	movlw	high _device_dsc
 10263  002BAC  6FB9               	movwf	(_inPipes+1)& (0+255),b
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10267  002BAE  0E00               	movlw	0
 10268  002BB0  6FBD               	movwf	(_inPipes+5)& (0+255),b
 10269  002BB2  0E12               	movlw	18
 10270  002BB4  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10271                           
 10272                           ;usb_device.c: 2076: break;
 10273  002BB6  0012               	return	
 10274  002BB8                     
 10275                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10276                           
 10277                           ; BSR set to: 0
 10278  002BB8  0104               	movlb	4	; () banked
 10279  002BBA  5132               	movf	50,w,b	;volatile
 10280  002BBC  A4D8               	btfss	status,2,c
 10281  002BBE  D040               	goto	l1722
 10282                           
 10283                           ; BSR set to: 4
 10284                           ;usb_device.c: 2082: {
 10285                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10286  002BC0  5132               	movf	50,w,b	;volatile
 10287  002BC2  0D02               	mullw	2
 10288  002BC4  0E39               	movlw	low _USB_CD_Ptr
 10289  002BC6  24F3               	addwf	prodl,w,c
 10290  002BC8  6EF6               	movwf	tblptrl,c
 10291  002BCA  0EFC               	movlw	high _USB_CD_Ptr
 10292  002BCC  20F4               	addwfc	prodh,w,c
 10293  002BCE  6EF7               	movwf	tblptrh,c
 10294  002BD0                     	if	0	;There are less than 3 active tblptr bytes
 10295  002BD0                     	endif
 10296  002BD0  0009               	tblrd		*+
 10297  002BD2  CFF5 F0B8          	movff	tablat,_inPipes
 10298  002BD6  000A               	tblrd		*-
 10299  002BD8  CFF5 F0B9          	movff	tablat,_inPipes+1
 10300                           
 10301                           ; BSR set to: 4
 10302                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10303  002BDC  0E02               	movlw	2
 10304  002BDE  0100               	movlb	0	; () banked
 10305  002BE0  25B8               	addwf	_inPipes& (0+255),w,b
 10306  002BE2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10307  002BE4  0E00               	movlw	0
 10308  002BE6  21B9               	addwfc	(_inPipes+1)& (0+255),w,b
 10309  002BE8  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10310  002BEA  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10311  002BEE  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10312  002BF2  6AF8               	clrf	tblptru,c
 10313  002BF4  0E0E               	movlw	(high __ramtop+-1)
 10314  002BF6  64F7               	cpfsgt	tblptrh,c
 10315  002BF8  D003               	bra	u5397
 10316  002BFA  0008               	tblrd		*
 10317  002BFC  50F5               	movf	tablat,w,c
 10318  002BFE  D005               	bra	u5390
 10319  002C00                     u5397:
 10320  002C00  CFF6 FFE9          	movff	tblptrl,fsr0l
 10321  002C04  CFF7 FFEA          	movff	tblptrh,fsr0h
 10322  002C08  50EF               	movf	indf0,w,c
 10323  002C0A                     u5390:
 10324  002C0A  0100               	movlb	0	; () banked
 10325  002C0C  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10329  002C0E  0E03               	movlw	3
 10330  002C10  25B8               	addwf	_inPipes& (0+255),w,b
 10331  002C12  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10332  002C14  0E00               	movlw	0
 10333  002C16  21B9               	addwfc	(_inPipes+1)& (0+255),w,b
 10334  002C18  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10335  002C1A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10336  002C1E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10337  002C22  6AF8               	clrf	tblptru,c
 10338  002C24  0E0E               	movlw	(high __ramtop+-1)
 10339  002C26  64F7               	cpfsgt	tblptrh,c
 10340  002C28  D003               	bra	u5407
 10341  002C2A  0008               	tblrd		*
 10342  002C2C  50F5               	movf	tablat,w,c
 10343  002C2E  D005               	bra	u5400
 10344  002C30                     u5407:
 10345  002C30  CFF6 FFE9          	movff	tblptrl,fsr0l
 10346  002C34  CFF7 FFEA          	movff	tblptrh,fsr0h
 10347  002C38  50EF               	movf	indf0,w,c
 10348  002C3A                     u5400:
 10349  002C3A  0100               	movlb	0	; () banked
 10350  002C3C  6FBD               	movwf	(_inPipes+5)& (0+255),b
 10351                           
 10352                           ;usb_device.c: 2094: }
 10353  002C3E  0012               	return	
 10354  002C40                     l1722:
 10355                           
 10356                           ;usb_device.c: 2095: else
 10357                           ;usb_device.c: 2096: {
 10358                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10359                           
 10360                           ; BSR set to: 0
 10361  002C40  0E00               	movlw	0
 10362  002C42  0100               	movlb	0	; () banked
 10363  002C44  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;usb_device.c: 2098: }
 10367                           ;usb_device.c: 2099: break;
 10368  002C46  0012               	return	
 10369  002C48                     
 10370                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10371                           
 10372                           ; BSR set to: 0
 10373  002C48  0E03               	movlw	3
 10374  002C4A  0104               	movlb	4	; () banked
 10375  002C4C  6132               	cpfslt	50,b	;volatile
 10376  002C4E  D024               	goto	l1725
 10377                           
 10378                           ; BSR set to: 4
 10379                           ;usb_device.c: 2105: {
 10380                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10381  002C50  5132               	movf	50,w,b	;volatile
 10382  002C52  0D02               	mullw	2
 10383  002C54  0E33               	movlw	low _USB_SD_Ptr
 10384  002C56  24F3               	addwf	prodl,w,c
 10385  002C58  6EF6               	movwf	tblptrl,c
 10386  002C5A  0EFC               	movlw	high _USB_SD_Ptr
 10387  002C5C  20F4               	addwfc	prodh,w,c
 10388  002C5E  6EF7               	movwf	tblptrh,c
 10389  002C60                     	if	0	;There are less than 3 active tblptr bytes
 10390  002C60                     	endif
 10391  002C60  0009               	tblrd		*+
 10392  002C62  CFF5 F0B8          	movff	tablat,_inPipes
 10393  002C66  000A               	tblrd		*-
 10394  002C68  CFF5 F0B9          	movff	tablat,_inPipes+1
 10395                           
 10396                           ; BSR set to: 4
 10397                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10398  002C6C  C0B8  FFF6         	movff	_inPipes,tblptrl
 10399  002C70  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 10400  002C74  6AF8               	clrf	tblptru,c
 10401  002C76  0E0E               	movlw	(high __ramtop+-1)
 10402  002C78  64F7               	cpfsgt	tblptrh,c
 10403  002C7A  D003               	bra	u5427
 10404  002C7C  0008               	tblrd		*
 10405  002C7E  50F5               	movf	tablat,w,c
 10406  002C80  D005               	bra	u5420
 10407  002C82                     u5427:
 10408  002C82  CFF6 FFE9          	movff	tblptrl,fsr0l
 10409  002C86  CFF7 FFEA          	movff	tblptrh,fsr0h
 10410  002C8A  50EF               	movf	indf0,w,c
 10411  002C8C                     u5420:
 10412  002C8C  0100               	movlb	0	; () banked
 10413  002C8E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10414  002C90  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10415  002C92  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10416  002C94  6BBD               	clrf	(_inPipes+5)& (0+255),b
 10417                           
 10418                           ;usb_device.c: 2110: }
 10419  002C96  0012               	return	
 10420  002C98                     l1725:
 10421                           
 10422                           ;usb_device.c: 2120: else
 10423                           ;usb_device.c: 2121: {
 10424                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10425                           
 10426                           ; BSR set to: 0
 10427  002C98  0E00               	movlw	0
 10428  002C9A  0100               	movlb	0	; () banked
 10429  002C9C  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;usb_device.c: 2123: }
 10433                           ;usb_device.c: 2124: break;
 10434  002C9E  0012               	return	
 10435  002CA0                     
 10436                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10437                           
 10438                           ; BSR set to: 0
 10439  002CA0  0E00               	movlw	0
 10440  002CA2  0100               	movlb	0	; () banked
 10441  002CA4  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;usb_device.c: 2128: }
 10445                           
 10446                           ;usb_device.c: 2127: break;
 10447  002CA6  0012               	return	
 10448  002CA8                     l1718:
 10449                           
 10450                           ; BSR set to: 0
 10451                           
 10452                           ; BSR set to: 0
 10453  002CA8  0104               	movlb	4	; () banked
 10454  002CAA  5133               	movf	51,w,b	;volatile
 10455                           
 10456                           ; Switch size 1, requested type "space"
 10457                           ; Number of cases is 3, Range of values is 1 to 3
 10458                           ; switch strategies available:
 10459                           ; Name         Instructions Cycles
 10460                           ; simple_byte           10     6 (average)
 10461                           ;	Chosen strategy is simple_byte
 10462  002CAC  0A01               	xorlw	1	; case 1
 10463  002CAE  B4D8               	btfsc	status,2,c
 10464  002CB0  D779               	goto	l1719
 10465  002CB2  0A03               	xorlw	3	; case 2
 10466  002CB4  B4D8               	btfsc	status,2,c
 10467  002CB6  D780               	goto	l1721
 10468  002CB8  0A01               	xorlw	1	; case 3
 10469  002CBA  B4D8               	btfsc	status,2,c
 10470  002CBC  D7C5               	goto	l1724
 10471  002CBE  D7F0               	goto	l1727
 10472  002CC0                     __end_of_USBStdGetDscHandler:
 10473                           	opt stack 0
 10474                           tosu	equ	0xFFF
 10475                           tosh	equ	0xFFE
 10476                           tosl	equ	0xFFD
 10477                           pclath	equ	0xFFA
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           intcon	equ	0xFF2
 10485                           intcon2	equ	0xFF1
 10486                           intcon3	equ	0xFF0
 10487                           indf0	equ	0xFEF
 10488                           postinc0	equ	0xFEE
 10489                           plusw0	equ	0xFEB
 10490                           fsr0h	equ	0xFEA
 10491                           fsr0l	equ	0xFE9
 10492                           wreg	equ	0xFE8
 10493                           postinc1	equ	0xFE6
 10494                           postdec1	equ	0xFE5
 10495                           plusw1	equ	0xFE3
 10496                           fsr1h	equ	0xFE2
 10497                           fsr1l	equ	0xFE1
 10498                           indf2	equ	0xFDF
 10499                           postinc2	equ	0xFDE
 10500                           postdec2	equ	0xFDD
 10501                           plusw2	equ	0xFDB
 10502                           fsr2h	equ	0xFDA
 10503                           fsr2l	equ	0xFD9
 10504                           status	equ	0xFD8
 10505                           
 10506 ;; *************** function _USBStdFeatureReqHandler *****************
 10507 ;; Defined at:
 10508 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;		None
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10513 ;;		 -> NULL(0), BDT(48), 
 10514 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10515 ;;		 -> UEP0(1), 
 10516 ;;  current_ep_d    1   52[BANK0 ] struct .
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10527 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10530 ;;Total ram usage:        6 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:   15
 10533 ;; This function calls:
 10534 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10535 ;; This function is called by:
 10536 ;;		_USBCheckStdRequest
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text43
 10541  00135A                     __ptext43:
 10542                           	opt stack 0
 10543  00135A                     _USBStdFeatureReqHandler:
 10544                           	opt stack 8
 10545                           
 10546                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10547                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10548                           ;usb_device.c: 2778: unsigned char* pUEP;
 10549                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10550                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10551                           
 10552                           ;incstack = 0
 10553  00135A  0104               	movlb	4	; () banked
 10554  00135C  0532               	decf	50,w,b	;volatile
 10555  00135E  A4D8               	btfss	status,2,c
 10556  001360  D011               	goto	l1811
 10557                           
 10558                           ; BSR set to: 4
 10559  001362  5130               	movf	48,w,b	;volatile
 10560  001364  0B1F               	andlw	31
 10561  001366  0900               	iorlw	0
 10562  001368  A4D8               	btfss	status,2,c
 10563  00136A  D00C               	goto	l1811
 10564                           
 10565                           ; BSR set to: 4
 10566                           ;usb_device.c: 2818: {
 10567                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10568  00136C  0100               	movlb	0	; () banked
 10569  00136E  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10573  001370  0E03               	movlw	3
 10574  001372  0104               	movlb	4	; () banked
 10575  001374  1931               	xorwf	49,w,b	;volatile
 10576  001376  A4D8               	btfss	status,2,c
 10577  001378  D002               	goto	l1810
 10578                           
 10579                           ; BSR set to: 4
 10580                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10581  00137A  0E01               	movlw	1
 10582  00137C  D001               	goto	L5
 10583  00137E                     l1810:
 10584                           
 10585                           ;usb_device.c: 2822: else
 10586                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10587                           
 10588                           ; BSR set to: 1
 10589  00137E  0E00               	movlw	0
 10590  001380                     L5:
 10591  001380  0101               	movlb	1	; () banked
 10592  001382  6FDE               	movwf	_RemoteWakeup& (0+255),b
 10593  001384                     l1811:
 10594                           
 10595                           ;usb_device.c: 2824: }
 10596                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10597                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10598                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10599                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10600                           
 10601                           ; BSR set to: 1
 10602  001384  0104               	movlb	4	; () banked
 10603  001386  5132               	movf	50,w,b	;volatile
 10604  001388  A4D8               	btfss	status,2,c
 10605  00138A  0012               	return	
 10606                           
 10607                           ; BSR set to: 4
 10608  00138C  5130               	movf	48,w,b	;volatile
 10609  00138E  0B1F               	andlw	31
 10610  001390  0A02               	xorlw	2
 10611  001392  A4D8               	btfss	status,2,c
 10612  001394  0012               	return	
 10613                           
 10614                           ; BSR set to: 4
 10615  001396  5134               	movf	52,w,b	;volatile
 10616  001398  0B0F               	andlw	15
 10617  00139A  0900               	iorlw	0
 10618  00139C  B4D8               	btfsc	status,2,c
 10619  00139E  0012               	return	
 10620                           
 10621                           ; BSR set to: 4
 10622  0013A0  5134               	movf	52,w,b	;volatile
 10623  0013A2  0B0F               	andlw	15
 10624  0013A4  0100               	movlb	0	; () banked
 10625  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10626  0013A8  0E03               	movlw	3
 10627  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10628  0013AC  0012               	return	
 10629                           
 10630                           ; BSR set to: 0
 10631  0013AE  0E20               	movlw	32
 10632  0013B0  19D3               	xorwf	_USBDeviceState& (0+255),w,b
 10633  0013B2  A4D8               	btfss	status,2,c
 10634  0013B4  0012               	return	
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;usb_device.c: 2831: {
 10638                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10639  0013B6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10640                           
 10641                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10642  0013B8  0104               	movlb	4	; () banked
 10643  0013BA  BF34               	btfsc	52,7,b	;volatile
 10644  0013BC  D01C               	goto	l1813
 10645                           
 10646                           ; BSR set to: 4
 10647                           ;usb_device.c: 2838: {
 10648                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10649  0013BE  5134               	movf	52,w,b	;volatile
 10650  0013C0  0B0F               	andlw	15
 10651  0013C2  0100               	movlb	0	; () banked
 10652  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10653  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10654  0013C8  0D02               	mullw	2
 10655  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10656  0013CC  24F3               	addwf	prodl,w,c
 10657  0013CE  6ED9               	movwf	fsr2l,c
 10658  0013D0  0E03               	movlw	high _pBDTEntryOut
 10659  0013D2  20F4               	addwfc	prodh,w,c
 10660  0013D4  6EDA               	movwf	fsr2h,c
 10661  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10662  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10663                           
 10664                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10665  0013DE  0104               	movlb	4	; () banked
 10666  0013E0  5134               	movf	52,w,b	;volatile
 10667  0013E2  0B0F               	andlw	15
 10668  0013E4  0100               	movlb	0	; () banked
 10669  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10670  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10671  0013EA  0D01               	mullw	1
 10672  0013EC  0ECE               	movlw	low _ep_data_out
 10673  0013EE  24F3               	addwf	prodl,w,c
 10674  0013F0  6ED9               	movwf	fsr2l,c
 10675  0013F2  0E02               	movlw	high _ep_data_out
 10676  0013F4  D01C               	goto	L6
 10677  0013F6                     l1813:
 10678                           
 10679                           ;usb_device.c: 2842: else
 10680                           ;usb_device.c: 2843: {
 10681                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10682                           
 10683                           ; BSR set to: 0
 10684  0013F6  0104               	movlb	4	; () banked
 10685  0013F8  5134               	movf	52,w,b	;volatile
 10686  0013FA  0B0F               	andlw	15
 10687  0013FC  0100               	movlb	0	; () banked
 10688  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10689  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10690  001402  0D02               	mullw	2
 10691  001404  0EBE               	movlw	low _pBDTEntryIn
 10692  001406  24F3               	addwf	prodl,w,c
 10693  001408  6ED9               	movwf	fsr2l,c
 10694  00140A  0E00               	movlw	high _pBDTEntryIn
 10695  00140C  20F4               	addwfc	prodh,w,c
 10696  00140E  6EDA               	movwf	fsr2h,c
 10697  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10698  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10699                           
 10700                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10701  001418  0104               	movlb	4	; () banked
 10702  00141A  5134               	movf	52,w,b	;volatile
 10703  00141C  0B0F               	andlw	15
 10704  00141E  0100               	movlb	0	; () banked
 10705  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10706  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10707  001424  0D01               	mullw	1
 10708  001426  0ED1               	movlw	low _ep_data_in
 10709  001428  24F3               	addwf	prodl,w,c
 10710  00142A  6ED9               	movwf	fsr2l,c
 10711  00142C  0E02               	movlw	high _ep_data_in
 10712  00142E                     L6:
 10713  00142E  20F4               	addwfc	prodh,w,c
 10714  001430  6EDA               	movwf	fsr2h,c
 10715  001432  50DF               	movf	indf2,w,c
 10716  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;usb_device.c: 2846: }
 10720                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10721                           
 10722                           ; BSR set to: 0
 10723  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10724  001438  D002               	goto	l1815
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;usb_device.c: 2853: {
 10728                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10729  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10730                           
 10731                           ;usb_device.c: 2855: }
 10732  00143C  D001               	goto	l1816
 10733  00143E                     l1815:
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;usb_device.c: 2856: else
 10737                           ;usb_device.c: 2857: {
 10738                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10739                           
 10740                           ; BSR set to: 0
 10741  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10742  001440                     l1816:
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;usb_device.c: 2859: }
 10746                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10747                           
 10748                           ; BSR set to: 0
 10749  001440  0104               	movlb	4	; () banked
 10750  001442  BF34               	btfsc	52,7,b	;volatile
 10751  001444  D00B               	goto	l1817
 10752                           
 10753                           ; BSR set to: 4
 10754                           ;usb_device.c: 2865: {
 10755                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10756  001446  5134               	movf	52,w,b	;volatile
 10757  001448  0B0F               	andlw	15
 10758  00144A  0100               	movlb	0	; () banked
 10759  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10760  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10761  001450  0D02               	mullw	2
 10762  001452  0E0E               	movlw	low _pBDTEntryOut
 10763  001454  24F3               	addwf	prodl,w,c
 10764  001456  6ED9               	movwf	fsr2l,c
 10765  001458  0E03               	movlw	high _pBDTEntryOut
 10766  00145A  D00B               	goto	L7
 10767  00145C                     l1817:
 10768                           
 10769                           ;usb_device.c: 2868: else
 10770                           ;usb_device.c: 2869: {
 10771                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10772                           
 10773                           ; BSR set to: 0
 10774  00145C  0104               	movlb	4	; () banked
 10775  00145E  5134               	movf	52,w,b	;volatile
 10776  001460  0B0F               	andlw	15
 10777  001462  0100               	movlb	0	; () banked
 10778  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10779  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10780  001468  0D02               	mullw	2
 10781  00146A  0EBE               	movlw	low _pBDTEntryIn
 10782  00146C  24F3               	addwf	prodl,w,c
 10783  00146E  6ED9               	movwf	fsr2l,c
 10784  001470  0E00               	movlw	high _pBDTEntryIn
 10785  001472                     L7:
 10786  001472  20F4               	addwfc	prodh,w,c
 10787  001474  6EDA               	movwf	fsr2h,c
 10788  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10789  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;usb_device.c: 2871: }
 10793                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10794                           
 10795                           ; BSR set to: 0
 10796  00147E  0E03               	movlw	3
 10797  001480  0104               	movlb	4	; () banked
 10798  001482  1931               	xorwf	49,w,b	;volatile
 10799  001484  A4D8               	btfss	status,2,c
 10800  001486  D031               	goto	l1819
 10801                           
 10802                           ; BSR set to: 4
 10803                           ;usb_device.c: 2875: {
 10804                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10805  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10806  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10807  001490  0100               	movlb	0	; () banked
 10808  001492  AEDF               	btfss	indf2,7,c
 10809  001494  D01D               	goto	l1822
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;usb_device.c: 2877: {
 10813                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10814  001496  0104               	movlb	4	; () banked
 10815  001498  BF34               	btfsc	52,7,b	;volatile
 10816  00149A  D00B               	goto	l1821
 10817                           
 10818                           ; BSR set to: 4
 10819                           ;usb_device.c: 2881: {
 10820                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10821  00149C  5134               	movf	52,w,b	;volatile
 10822  00149E  0B0F               	andlw	15
 10823  0014A0  0100               	movlb	0	; () banked
 10824  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10825  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10826  0014A6  0D01               	mullw	1
 10827  0014A8  0ECE               	movlw	low _ep_data_out
 10828  0014AA  24F3               	addwf	prodl,w,c
 10829  0014AC  6ED9               	movwf	fsr2l,c
 10830  0014AE  0E02               	movlw	high _ep_data_out
 10831  0014B0  D00B               	goto	L8
 10832  0014B2                     l1821:
 10833                           
 10834                           ;usb_device.c: 2884: else
 10835                           ;usb_device.c: 2885: {
 10836                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10837                           
 10838                           ; BSR set to: 2
 10839  0014B2  0104               	movlb	4	; () banked
 10840  0014B4  5134               	movf	52,w,b	;volatile
 10841  0014B6  0B0F               	andlw	15
 10842  0014B8  0100               	movlb	0	; () banked
 10843  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10844  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10845  0014BE  0D01               	mullw	1
 10846  0014C0  0ED1               	movlw	low _ep_data_in
 10847  0014C2  24F3               	addwf	prodl,w,c
 10848  0014C4  6ED9               	movwf	fsr2l,c
 10849  0014C6  0E02               	movlw	high _ep_data_in
 10850  0014C8                     L8:
 10851  0014C8  20F4               	addwfc	prodh,w,c
 10852  0014CA  6EDA               	movwf	fsr2h,c
 10853  0014CC  0102               	movlb	2	; () banked
 10854  0014CE  82DF               	bsf	indf2,1,c
 10855  0014D0                     l1822:
 10856                           
 10857                           ;usb_device.c: 2887: }
 10858                           ;usb_device.c: 2888: }
 10859                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10860                           
 10861                           ; BSR set to: 2
 10862                           
 10863                           ; BSR set to: 2
 10864  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10865  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10866  0014D8  0E00               	movlw	0
 10867  0014DA  84DB               	bsf	plusw2,2,c
 10868                           
 10869                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10870  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10871  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10872  0014E4  0E00               	movlw	0
 10873  0014E6  8EDB               	bsf	plusw2,7,c
 10874                           
 10875                           ;usb_device.c: 2893: }
 10876  0014E8  0012               	return	
 10877  0014EA                     l1819:
 10878                           
 10879                           ;usb_device.c: 2894: else
 10880                           ;usb_device.c: 2895: {
 10881                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10882  0014EA  0E04               	movlw	4
 10883  0014EC  0100               	movlb	0	; () banked
 10884  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10888  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10889  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10890  0014F8  AEDF               	btfss	indf2,7,c
 10891  0014FA  D01B               	goto	l1824
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;usb_device.c: 2902: {
 10895                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10896  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10897  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10898  001504  0E7F               	movlw	127
 10899  001506  16DF               	andwf	indf2,f,c
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10903  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10904  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10905  001510  0E00               	movlw	0
 10906  001512  8CDB               	bsf	plusw2,6,c
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10910  001514  0E00               	movlw	0
 10911  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10912  001518  0E05               	movlw	5
 10913  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10914  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10915  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10916  001524  0E00               	movlw	0
 10917  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10918  001528  0E02               	movlw	2
 10919  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10920  00152C  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10921                           
 10922                           ;usb_device.c: 2908: }
 10923  001530  D006               	goto	l1825
 10924  001532                     l1824:
 10925                           
 10926                           ;usb_device.c: 2909: else
 10927                           ;usb_device.c: 2910: {
 10928                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10929  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10930  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10931  00153A  0E00               	movlw	0
 10932  00153C  8CDB               	bsf	plusw2,6,c
 10933  00153E                     l1825:
 10934                           
 10935                           ;usb_device.c: 2913: }
 10936                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10937  00153E  0E04               	movlw	4
 10938  001540  0100               	movlb	0	; () banked
 10939  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10943  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10944  001546  D006               	goto	u10350
 10945                           
 10946                           ; BSR set to: 0
 10947  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10948  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10949  001550  AEDF               	btfss	indf2,7,c
 10950  001552  D033               	goto	l1826
 10951  001554                     u10350:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 2924: {
 10955                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10956  001554  0104               	movlb	4	; () banked
 10957  001556  BF34               	btfsc	52,7,b	;volatile
 10958  001558  D00B               	goto	l1829
 10959                           
 10960                           ; BSR set to: 4
 10961                           ;usb_device.c: 2926: {
 10962                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10963  00155A  5134               	movf	52,w,b	;volatile
 10964  00155C  0B0F               	andlw	15
 10965  00155E  0100               	movlb	0	; () banked
 10966  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10967  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10968  001564  0D01               	mullw	1
 10969  001566  0ECE               	movlw	low _ep_data_out
 10970  001568  24F3               	addwf	prodl,w,c
 10971  00156A  6ED9               	movwf	fsr2l,c
 10972  00156C  0E02               	movlw	high _ep_data_out
 10973  00156E  D00B               	goto	L9
 10974  001570                     l1829:
 10975                           
 10976                           ;usb_device.c: 2929: else
 10977                           ;usb_device.c: 2930: {
 10978                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10979                           
 10980                           ; BSR set to: 2
 10981  001570  0104               	movlb	4	; () banked
 10982  001572  5134               	movf	52,w,b	;volatile
 10983  001574  0B0F               	andlw	15
 10984  001576  0100               	movlb	0	; () banked
 10985  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10986  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10987  00157C  0D01               	mullw	1
 10988  00157E  0ED1               	movlw	low _ep_data_in
 10989  001580  24F3               	addwf	prodl,w,c
 10990  001582  6ED9               	movwf	fsr2l,c
 10991  001584  0E02               	movlw	high _ep_data_in
 10992  001586                     L9:
 10993  001586  20F4               	addwfc	prodh,w,c
 10994  001588  6EDA               	movwf	fsr2h,c
 10995  00158A  0102               	movlb	2	; () banked
 10996  00158C  92DF               	bcf	indf2,1,c
 10997                           
 10998                           ; BSR set to: 2
 10999                           ;usb_device.c: 2932: }
 11000                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11001                           
 11002                           ; BSR set to: 2
 11003  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11004  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11005  001596  0E3B               	movlw	59
 11006  001598  16DF               	andwf	indf2,f,c
 11007                           
 11008                           ; BSR set to: 2
 11009                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11010  00159A  0E00               	movlw	0
 11011  00159C  0100               	movlb	0	; () banked
 11012  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11013  0015A0  0E05               	movlw	5
 11014  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11015  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11016  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11017  0015AC  0E00               	movlw	0
 11018  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11019  0015B0  0E02               	movlw	2
 11020  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11021  0015B4  EC31  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11022                           
 11023                           ;usb_device.c: 2938: }
 11024  0015B8  D006               	goto	l1831
 11025  0015BA                     l1826:
 11026                           
 11027                           ;usb_device.c: 2939: else
 11028                           ;usb_device.c: 2940: {
 11029                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11030  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11031  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11032  0015C2  0E3B               	movlw	59
 11033  0015C4  16DF               	andwf	indf2,f,c
 11034  0015C6                     l1831:
 11035                           
 11036                           ;usb_device.c: 2943: }
 11037                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11038  0015C6  0104               	movlb	4	; () banked
 11039  0015C8  5134               	movf	52,w,b	;volatile
 11040  0015CA  0B0F               	andlw	15
 11041  0015CC  0100               	movlb	0	; () banked
 11042  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11043  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11044  0015D2  0D01               	mullw	1
 11045  0015D4  0E26               	movlw	38
 11046  0015D6  24F3               	addwf	prodl,w,c
 11047  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11048  0015DA  0E0F               	movlw	15
 11049  0015DC  20F4               	addwfc	prodh,w,c
 11050  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11054  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11055  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11056  0015E8  0EFE               	movlw	254
 11057  0015EA  16DF               	andwf	indf2,f,c
 11058                           
 11059                           ; BSR set to: 0
 11060  0015EC  0012               	return	
 11061  0015EE                     __end_of_USBStdFeatureReqHandler:
 11062                           	opt stack 0
 11063                           tosu	equ	0xFFF
 11064                           tosh	equ	0xFFE
 11065                           tosl	equ	0xFFD
 11066                           pclath	equ	0xFFA
 11067                           tblptru	equ	0xFF8
 11068                           tblptrh	equ	0xFF7
 11069                           tblptrl	equ	0xFF6
 11070                           tablat	equ	0xFF5
 11071                           prodh	equ	0xFF4
 11072                           prodl	equ	0xFF3
 11073                           intcon	equ	0xFF2
 11074                           intcon2	equ	0xFF1
 11075                           intcon3	equ	0xFF0
 11076                           indf0	equ	0xFEF
 11077                           postinc0	equ	0xFEE
 11078                           plusw0	equ	0xFEB
 11079                           fsr0h	equ	0xFEA
 11080                           fsr0l	equ	0xFE9
 11081                           wreg	equ	0xFE8
 11082                           postinc1	equ	0xFE6
 11083                           postdec1	equ	0xFE5
 11084                           plusw1	equ	0xFE3
 11085                           fsr1h	equ	0xFE2
 11086                           fsr1l	equ	0xFE1
 11087                           indf2	equ	0xFDF
 11088                           postinc2	equ	0xFDE
 11089                           postdec2	equ	0xFDD
 11090                           plusw2	equ	0xFDB
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11096 ;; Defined at:
 11097 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  event           2   41[BANK0 ] enum E8347
 11100 ;;  pdata           2   43[BANK0 ] PTR void 
 11101 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11102 ;;  size            2   45[BANK0 ] unsigned int 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      unsigned char 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11114 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;Total ram usage:        8 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:   14
 11121 ;; This function calls:
 11122 ;;		_CDCInitEP
 11123 ;;		_USBCheckCDCRequest
 11124 ;; This function is called by:
 11125 ;;		_USBDeviceTasks
 11126 ;;		_USBStdSetCfgHandler
 11127 ;;		_USBSuspend
 11128 ;;		_USBWakeFromSuspend
 11129 ;;		_USBCtrlTrfSetupHandler
 11130 ;;		_USBCheckStdRequest
 11131 ;;		_USBStdFeatureReqHandler
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text44
 11136  005062                     __ptext44:
 11137                           	opt stack 0
 11138  005062                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11139                           	opt stack 12
 11140                           
 11141                           ;usb_device_mgr.c: 106: switch( (int) event )
 11142                           
 11143                           ;incstack = 0
 11144  005062  D006               	goto	l1985
 11145  005064                     
 11146                           ;usb_device_mgr.c: 134: CDCInitEP();
 11147  005064  EC2E  F027         	call	_CDCInitEP	;wreg free
 11148                           
 11149                           ;usb_device_mgr.c: 142: break;
 11150                           
 11151                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11152                           
 11153                           ;usb_device_mgr.c: 139: break;
 11154  005068  0012               	return	
 11155  00506A                     
 11156                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11157  00506A  ECB0  F020         	call	_USBCheckCDCRequest	;wreg free
 11158                           
 11159                           ;usb_device_mgr.c: 163: }
 11160                           
 11161                           ;usb_device_mgr.c: 162: break;
 11162                           
 11163                           ;usb_device_mgr.c: 161: default:
 11164                           
 11165                           ;usb_device_mgr.c: 159: break;
 11166                           
 11167                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11168                           
 11169                           ;usb_device_mgr.c: 156: break;
 11170                           
 11171                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11172                           
 11173                           ;usb_device_mgr.c: 153: break;
 11174  00506E  0012               	return	
 11175  005070                     l1985:
 11176  005070  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11177  005074  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11178                           
 11179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11180                           ; Switch size 1, requested type "space"
 11181                           ; Number of cases is 2, Range of values is 0 to 127
 11182                           ; switch strategies available:
 11183                           ; Name         Instructions Cycles
 11184                           ; simple_byte            7     4 (average)
 11185                           ;	Chosen strategy is simple_byte
 11186  005078  0100               	movlb	0	; () banked
 11187  00507A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11188  00507C  0A00               	xorlw	0	; case 0
 11189  00507E  B4D8               	btfsc	status,2,c
 11190  005080  D004               	goto	l14385
 11191  005082  0A7F               	xorlw	127	; case 127
 11192  005084  A4D8               	btfss	status,2,c
 11193  005086  0012               	return	
 11194  005088  D018               	goto	l14387
 11195  00508A                     l14385:
 11196                           
 11197                           ; BSR set to: 0
 11198                           ; Switch size 1, requested type "space"
 11199                           ; Number of cases is 8, Range of values is 1 to 117
 11200                           ; switch strategies available:
 11201                           ; Name         Instructions Cycles
 11202                           ; simple_byte           25    13 (average)
 11203                           ;	Chosen strategy is simple_byte
 11204  00508A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11205  00508C  0A01               	xorlw	1	; case 1
 11206  00508E  B4D8               	btfsc	status,2,c
 11207  005090  D7E9               	goto	l1991
 11208  005092  0A03               	xorlw	3	; case 2
 11209  005094  B4D8               	btfsc	status,2,c
 11210  005096  0012               	return	
 11211  005098  0A01               	xorlw	1	; case 3
 11212  00509A  B4D8               	btfsc	status,2,c
 11213  00509C  D7E6               	goto	l1993
 11214  00509E  0A06               	xorlw	6	; case 5
 11215  0050A0  B4D8               	btfsc	status,2,c
 11216  0050A2  0012               	return	
 11217  0050A4  0A77               	xorlw	119	; case 114
 11218  0050A6  B4D8               	btfsc	status,2,c
 11219  0050A8  0012               	return	
 11220  0050AA  0A01               	xorlw	1	; case 115
 11221  0050AC  B4D8               	btfsc	status,2,c
 11222  0050AE  0012               	return	
 11223  0050B0  0A07               	xorlw	7	; case 116
 11224  0050B2  B4D8               	btfsc	status,2,c
 11225  0050B4  0012               	return	
 11226  0050B6  0A01               	xorlw	1	; case 117
 11227  0050B8  0012               	return	
 11228  0050BA                     l14387:
 11229                           
 11230                           ; BSR set to: 0
 11231                           ; Switch size 1, requested type "space"
 11232                           ; Number of cases is 1, Range of values is 255 to 255
 11233                           ; switch strategies available:
 11234                           ; Name         Instructions Cycles
 11235                           ; simple_byte            4     3 (average)
 11236                           ;	Chosen strategy is simple_byte
 11237  0050BA  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11238  0050BC  0AFF               	xorlw	255	; case 255
 11239  0050BE  0012               	return	
 11240  0050C0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11241                           	opt stack 0
 11242                           tosu	equ	0xFFF
 11243                           tosh	equ	0xFFE
 11244                           tosl	equ	0xFFD
 11245                           pclath	equ	0xFFA
 11246                           tblptru	equ	0xFF8
 11247                           tblptrh	equ	0xFF7
 11248                           tblptrl	equ	0xFF6
 11249                           tablat	equ	0xFF5
 11250                           prodh	equ	0xFF4
 11251                           prodl	equ	0xFF3
 11252                           intcon	equ	0xFF2
 11253                           intcon2	equ	0xFF1
 11254                           intcon3	equ	0xFF0
 11255                           indf0	equ	0xFEF
 11256                           postinc0	equ	0xFEE
 11257                           plusw0	equ	0xFEB
 11258                           fsr0h	equ	0xFEA
 11259                           fsr0l	equ	0xFE9
 11260                           wreg	equ	0xFE8
 11261                           postinc1	equ	0xFE6
 11262                           postdec1	equ	0xFE5
 11263                           plusw1	equ	0xFE3
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           plusw2	equ	0xFDB
 11270                           fsr2h	equ	0xFDA
 11271                           fsr2l	equ	0xFD9
 11272                           status	equ	0xFD8
 11273                           
 11274 ;; *************** function _USBCheckCDCRequest *****************
 11275 ;; Defined at:
 11276 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		wreg, status,2, status,0
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;Total ram usage:        0 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:   11
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text45
 11305  004160                     __ptext45:
 11306                           	opt stack 0
 11307  004160                     _USBCheckCDCRequest:
 11308                           	opt stack 14
 11309                           
 11310                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11311                           
 11312                           ;incstack = 0
 11313  004160  0104               	movlb	4	; () banked
 11314  004162  5130               	movf	48,w,b	;volatile
 11315  004164  0B1F               	andlw	31
 11316  004166  06E8               	decf	wreg,f,c
 11317  004168  A4D8               	btfss	status,2,c
 11318  00416A  0012               	return	
 11319                           
 11320                           ; BSR set to: 4
 11321                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11322                           
 11323                           ; BSR set to: 4
 11324                           
 11325                           ; BSR set to: 4
 11326  00416C  3930               	swapf	48,w,b	;volatile
 11327  00416E  32E8               	rrcf	wreg,f,c
 11328  004170  0B03               	andlw	3
 11329  004172  06E8               	decf	wreg,f,c
 11330  004174  A4D8               	btfss	status,2,c
 11331  004176  0012               	return	
 11332                           
 11333                           ; BSR set to: 4
 11334                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11335                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11336                           
 11337                           ; BSR set to: 4
 11338                           
 11339                           ; BSR set to: 4
 11340  004178  5134               	movf	52,w,b	;volatile
 11341  00417A  B4D8               	btfsc	status,2,c
 11342  00417C  D037               	goto	l1887
 11343                           
 11344                           ; BSR set to: 4
 11345  00417E  0534               	decf	52,w,b	;volatile
 11346  004180  A4D8               	btfss	status,2,c
 11347  004182  0012               	return	
 11348  004184  D033               	goto	l1887
 11349  004186                     
 11350                           ; BSR set to: 4
 11351                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11352                           
 11353                           ; BSR set to: 4
 11354  004186  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11355  004188  0100               	movlb	0	; () banked
 11356  00418A  6FB8               	movwf	_inPipes& (0+255),b
 11357  00418C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11358  00418E  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11362  004190  0E00               	movlw	0
 11363  004192  6FBD               	movwf	(_inPipes+5)& (0+255),b
 11364  004194  0E08               	movlw	8
 11365  004196  6FBC               	movwf	(_inPipes+4)& (0+255),b
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11369  004198  81BB               	bsf	(_inPipes+3)& (0+255),0,b
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11373  00419A  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11374                           
 11375                           ;usb_device_cdc.c: 178: break;
 11376  00419C  0012               	return	
 11377  00419E                     
 11378                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11379                           
 11380                           ; BSR set to: 0
 11381  00419E  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11382  0041A0  0100               	movlb	0	; () banked
 11383  0041A2  6FB8               	movwf	_inPipes& (0+255),b
 11384  0041A4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11385  0041A6  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11389  0041A8  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11390                           
 11391                           ;usb_device_cdc.c: 183: break;
 11392  0041AA  0012               	return	
 11393  0041AC                     l1891:
 11394                           
 11395                           ; BSR set to: 4
 11396                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11397  0041AC  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11398  0041B0  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11399                           
 11400                           ; BSR set to: 4
 11401                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11402  0041B4  0E81               	movlw	low _line_coding
 11403  0041B6  0101               	movlb	1	; () banked
 11404  0041B8  6FC9               	movwf	_outPipes& (0+255),b
 11405  0041BA  0E03               	movlw	high _line_coding
 11406  0041BC  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11407                           
 11408                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11409  0041BE  0E00               	movlw	0
 11410  0041C0  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11411  0041C2  0E00               	movlw	0
 11412  0041C4  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11413                           
 11414                           ; BSR set to: 1
 11415                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11416  0041C6  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11417                           
 11418                           ;usb_device_cdc.c: 192: break;
 11419  0041C8  0012               	return	
 11420  0041CA                     
 11421                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11422                           
 11423                           ; BSR set to: 1
 11424  0041CA  0E81               	movlw	low _line_coding
 11425  0041CC  0100               	movlb	0	; () banked
 11426  0041CE  6FB8               	movwf	_inPipes& (0+255),b
 11427  0041D0  0E03               	movlw	high _line_coding
 11428  0041D2  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11429                           
 11430                           ; BSR set to: 0
 11431  0041D4  0E00               	movlw	0
 11432  0041D6  6FBD               	movwf	(_inPipes+5)& (0+255),b
 11433  0041D8  0E07               	movlw	7
 11434  0041DA  6FBC               	movwf	(_inPipes+4)& (0+255),b
 11435                           
 11436                           ; BSR set to: 0
 11437  0041DC  0EC1               	movlw	193
 11438  0041DE  6FBB               	movwf	(_inPipes+3)& (0+255),b
 11439                           
 11440                           ;usb_device_cdc.c: 199: break;
 11441  0041E0  0012               	return	
 11442  0041E2                     l1893:
 11443                           
 11444                           ; BSR set to: 4
 11445                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11446  0041E2  C432 F1D9          	movff	1074,_control_signal_bitmap	;volatile
 11447                           
 11448                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11449  0041E6  0100               	movlb	0	; () banked
 11450  0041E8  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;usb_device_cdc.c: 261: }
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;usb_device_cdc.c: 260: break;
 11457                           
 11458                           ;usb_device_cdc.c: 259: default:
 11459                           
 11460                           ;usb_device_cdc.c: 235: break;
 11461  0041EA  0012               	return	
 11462  0041EC                     l1887:
 11463                           
 11464                           ; BSR set to: 0
 11465  0041EC  0104               	movlb	4	; () banked
 11466  0041EE  5131               	movf	49,w,b	;volatile
 11467                           
 11468                           ; Switch size 1, requested type "space"
 11469                           ; Number of cases is 5, Range of values is 0 to 34
 11470                           ; switch strategies available:
 11471                           ; Name         Instructions Cycles
 11472                           ; simple_byte           16     9 (average)
 11473                           ;	Chosen strategy is simple_byte
 11474  0041F0  0A00               	xorlw	0	; case 0
 11475  0041F2  B4D8               	btfsc	status,2,c
 11476  0041F4  D7C8               	goto	l1888
 11477  0041F6  0A01               	xorlw	1	; case 1
 11478  0041F8  B4D8               	btfsc	status,2,c
 11479  0041FA  D7D1               	goto	l1890
 11480  0041FC  0A21               	xorlw	33	; case 32
 11481  0041FE  B4D8               	btfsc	status,2,c
 11482  004200  D7D5               	goto	l1891
 11483  004202  0A01               	xorlw	1	; case 33
 11484  004204  B4D8               	btfsc	status,2,c
 11485  004206  D7E1               	goto	l1892
 11486  004208  0A03               	xorlw	3	; case 34
 11487  00420A  A4D8               	btfss	status,2,c
 11488  00420C  0012               	return	
 11489  00420E  D7E9               	goto	l1893
 11490  004210                     __end_of_USBCheckCDCRequest:
 11491                           	opt stack 0
 11492                           tosu	equ	0xFFF
 11493                           tosh	equ	0xFFE
 11494                           tosl	equ	0xFFD
 11495                           pclath	equ	0xFFA
 11496                           tblptru	equ	0xFF8
 11497                           tblptrh	equ	0xFF7
 11498                           tblptrl	equ	0xFF6
 11499                           tablat	equ	0xFF5
 11500                           prodh	equ	0xFF4
 11501                           prodl	equ	0xFF3
 11502                           intcon	equ	0xFF2
 11503                           intcon2	equ	0xFF1
 11504                           intcon3	equ	0xFF0
 11505                           indf0	equ	0xFEF
 11506                           postinc0	equ	0xFEE
 11507                           plusw0	equ	0xFEB
 11508                           fsr0h	equ	0xFEA
 11509                           fsr0l	equ	0xFE9
 11510                           wreg	equ	0xFE8
 11511                           postinc1	equ	0xFE6
 11512                           postdec1	equ	0xFE5
 11513                           plusw1	equ	0xFE3
 11514                           fsr1h	equ	0xFE2
 11515                           fsr1l	equ	0xFE1
 11516                           indf2	equ	0xFDF
 11517                           postinc2	equ	0xFDE
 11518                           postdec2	equ	0xFDD
 11519                           plusw2	equ	0xFDB
 11520                           fsr2h	equ	0xFDA
 11521                           fsr2l	equ	0xFD9
 11522                           status	equ	0xFD8
 11523                           
 11524 ;; *************** function _CDCInitEP *****************
 11525 ;; Defined at:
 11526 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;		None
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;		None
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11544 ;;Total ram usage:        0 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:   13
 11547 ;; This function calls:
 11548 ;;		_USBEnableEndpoint
 11549 ;;		_USBTransferOnePacket
 11550 ;; This function is called by:
 11551 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11552 ;; This function uses a non-reentrant model
 11553 ;;
 11554                           
 11555                           	psect	text46
 11556  004E5C                     __ptext46:
 11557                           	opt stack 0
 11558  004E5C                     _CDCInitEP:
 11559                           	opt stack 12
 11560                           
 11561                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11562                           
 11563                           ;incstack = 0
 11564  004E5C  0E80               	movlw	128
 11565  004E5E  0103               	movlb	3	; () banked
 11566  004E60  6F81               	movwf	_line_coding& (0+255),b
 11567  004E62  0E25               	movlw	37
 11568  004E64  6F82               	movwf	(_line_coding+1)& (0+255),b
 11569  004E66  0E00               	movlw	0
 11570  004E68  6F83               	movwf	(_line_coding+2)& (0+255),b
 11571  004E6A  0E00               	movlw	0
 11572  004E6C  6F84               	movwf	(_line_coding+3)& (0+255),b
 11573                           
 11574                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11575  004E6E  0E00               	movlw	0
 11576  004E70  6F85               	movwf	(_line_coding+4)& (0+255),b
 11577                           
 11578                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11579  004E72  0E00               	movlw	0
 11580  004E74  6F86               	movwf	(_line_coding+5)& (0+255),b
 11581                           
 11582                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11583  004E76  0E08               	movlw	8
 11584  004E78  6F87               	movwf	(_line_coding+6)& (0+255),b
 11585                           
 11586                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11587  004E7A  0E00               	movlw	0
 11588  004E7C  0100               	movlb	0	; () banked
 11589  004E7E  6FCE               	movwf	_cdc_rx_len& (0+255),b
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11593  004E80  0E1A               	movlw	26
 11594  004E82  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11595  004E84  0E01               	movlw	1
 11596  004E86  ECBA  F02B         	call	_USBEnableEndpoint
 11597                           
 11598                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11599  004E8A  0E1E               	movlw	30
 11600  004E8C  0100               	movlb	0	; () banked
 11601  004E8E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11602  004E90  0E02               	movlw	2
 11603  004E92  ECBA  F02B         	call	_USBEnableEndpoint
 11604                           
 11605                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11606  004E96  0E00               	movlw	0
 11607  004E98  0100               	movlb	0	; () banked
 11608  004E9A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11609  004E9C  0E50               	movlw	low _cdc_data_rx
 11610  004E9E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11611  004EA0  0E05               	movlw	high _cdc_data_rx
 11612  004EA2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11613  004EA4  0E40               	movlw	64
 11614  004EA6  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11615  004EA8  0E02               	movlw	2
 11616  004EAA  EC9E  F01F         	call	_USBTransferOnePacket
 11617  004EAE  C07D  F0C4         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11618  004EB2  C07E  F0C5         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11619                           
 11620                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11621  004EB6  0E00               	movlw	0
 11622  004EB8  0101               	movlb	1	; () banked
 11623  004EBA  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11624  004EBC  0E00               	movlw	0
 11625  004EBE  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11626                           
 11627                           ; BSR set to: 1
 11628                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11629  004EC0  0E00               	movlw	0
 11630  004EC2  0100               	movlb	0	; () banked
 11631  004EC4  6FCD               	movwf	_cdc_trf_state& (0+255),b
 11632                           
 11633                           ; BSR set to: 0
 11634  004EC6  0012               	return		;funcret
 11635  004EC8                     __end_of_CDCInitEP:
 11636                           	opt stack 0
 11637                           tosu	equ	0xFFF
 11638                           tosh	equ	0xFFE
 11639                           tosl	equ	0xFFD
 11640                           pclath	equ	0xFFA
 11641                           tblptru	equ	0xFF8
 11642                           tblptrh	equ	0xFF7
 11643                           tblptrl	equ	0xFF6
 11644                           tablat	equ	0xFF5
 11645                           prodh	equ	0xFF4
 11646                           prodl	equ	0xFF3
 11647                           intcon	equ	0xFF2
 11648                           intcon2	equ	0xFF1
 11649                           intcon3	equ	0xFF0
 11650                           indf0	equ	0xFEF
 11651                           postinc0	equ	0xFEE
 11652                           plusw0	equ	0xFEB
 11653                           fsr0h	equ	0xFEA
 11654                           fsr0l	equ	0xFE9
 11655                           wreg	equ	0xFE8
 11656                           postinc1	equ	0xFE6
 11657                           postdec1	equ	0xFE5
 11658                           plusw1	equ	0xFE3
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           indf2	equ	0xFDF
 11662                           postinc2	equ	0xFDE
 11663                           postdec2	equ	0xFDD
 11664                           plusw2	equ	0xFDB
 11665                           fsr2h	equ	0xFDA
 11666                           fsr2l	equ	0xFD9
 11667                           status	equ	0xFD8
 11668                           
 11669 ;; *************** function _USBEnableEndpoint *****************
 11670 ;; Defined at:
 11671 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  ep              1    wreg     unsigned char 
 11674 ;;  options         1   37[BANK0 ] unsigned char 
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  ep              1   40[BANK0 ] unsigned char 
 11677 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11678 ;;		 -> UEP0(1), 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11692 ;;Total ram usage:        4 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:   12
 11695 ;; This function calls:
 11696 ;;		_USBConfigureEndpoint
 11697 ;; This function is called by:
 11698 ;;		_CDCInitEP
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           	psect	text47
 11703  005774                     __ptext47:
 11704                           	opt stack 0
 11705  005774                     _USBEnableEndpoint:
 11706                           	opt stack 12
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;incstack = 0
 11710                           ;USBEnableEndpoint@ep stored from wreg
 11711  005774  0100               	movlb	0	; () banked
 11712  005776  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11713                           
 11714                           ;usb_device.c: 898: unsigned char* p;
 11715                           ;usb_device.c: 902: if(options & 0x04)
 11716  005778  0100               	movlb	0	; () banked
 11717  00577A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11718  00577C  D005               	goto	l1628
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;usb_device.c: 903: {
 11722                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11723  00577E  0E00               	movlw	0
 11724  005780  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11725  005782  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11726  005784  ECF7  F022         	call	_USBConfigureEndpoint
 11727  005788                     l1628:
 11728                           
 11729                           ;usb_device.c: 905: }
 11730                           ;usb_device.c: 906: if(options & 0x02)
 11731  005788  0100               	movlb	0	; () banked
 11732  00578A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11733  00578C  D005               	goto	l1629
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;usb_device.c: 907: {
 11737                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11738  00578E  0E01               	movlw	1
 11739  005790  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11740  005792  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11741  005794  ECF7  F022         	call	_USBConfigureEndpoint
 11742  005798                     l1629:
 11743                           
 11744                           ;usb_device.c: 909: }
 11745                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11746  005798  0100               	movlb	0	; () banked
 11747  00579A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11748  00579C  0D01               	mullw	1
 11749  00579E  0E26               	movlw	38
 11750  0057A0  24F3               	addwf	prodl,w,c
 11751  0057A2  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11752  0057A4  0E0F               	movlw	15
 11753  0057A6  20F4               	addwfc	prodh,w,c
 11754  0057A8  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11755                           
 11756                           ; BSR set to: 0
 11757                           ;usb_device.c: 919: *p = options;
 11758  0057AA  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11759  0057AE  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11760  0057B2  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11761                           
 11762                           ; BSR set to: 0
 11763  0057B6  0012               	return		;funcret
 11764  0057B8                     __end_of_USBEnableEndpoint:
 11765                           	opt stack 0
 11766                           tosu	equ	0xFFF
 11767                           tosh	equ	0xFFE
 11768                           tosl	equ	0xFFD
 11769                           pclath	equ	0xFFA
 11770                           tblptru	equ	0xFF8
 11771                           tblptrh	equ	0xFF7
 11772                           tblptrl	equ	0xFF6
 11773                           tablat	equ	0xFF5
 11774                           prodh	equ	0xFF4
 11775                           prodl	equ	0xFF3
 11776                           intcon	equ	0xFF2
 11777                           intcon2	equ	0xFF1
 11778                           intcon3	equ	0xFF0
 11779                           indf0	equ	0xFEF
 11780                           postinc0	equ	0xFEE
 11781                           plusw0	equ	0xFEB
 11782                           fsr0h	equ	0xFEA
 11783                           fsr0l	equ	0xFE9
 11784                           wreg	equ	0xFE8
 11785                           postinc1	equ	0xFE6
 11786                           postdec1	equ	0xFE5
 11787                           plusw1	equ	0xFE3
 11788                           fsr1h	equ	0xFE2
 11789                           fsr1l	equ	0xFE1
 11790                           indf2	equ	0xFDF
 11791                           postinc2	equ	0xFDE
 11792                           postdec2	equ	0xFDD
 11793                           plusw2	equ	0xFDB
 11794                           fsr2h	equ	0xFDA
 11795                           fsr2l	equ	0xFD9
 11796                           status	equ	0xFD8
 11797                           
 11798 ;; *************** function _USBConfigureEndpoint *****************
 11799 ;; Defined at:
 11800 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;  EPNum           1    wreg     unsigned char 
 11803 ;;  direction       1   29[BANK0 ] unsigned char 
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11806 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11807 ;;		 -> BDT(48), 
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  1    wreg      void 
 11810 ;; Registers used:
 11811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 0/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11817 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11818 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11820 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11821 ;;Total ram usage:        8 bytes
 11822 ;; Hardware stack levels used:    1
 11823 ;; Hardware stack levels required when called:   11
 11824 ;; This function calls:
 11825 ;;		Nothing
 11826 ;; This function is called by:
 11827 ;;		_USBEnableEndpoint
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text48
 11832  0045EE                     __ptext48:
 11833                           	opt stack 0
 11834  0045EE                     _USBConfigureEndpoint:
 11835                           	opt stack 12
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;incstack = 0
 11839                           ;USBConfigureEndpoint@EPNum stored from wreg
 11840  0045EE  0100               	movlb	0	; () banked
 11841  0045F0  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11842                           
 11843                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11844                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11845  0045F2  0E00               	movlw	0
 11846  0045F4  0100               	movlb	0	; () banked
 11847  0045F6  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11848  0045F8  0E04               	movlw	4
 11849  0045FA  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11853  0045FC  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11854  0045FE  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11855  004600  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11856  004602  90D8               	bcf	status,0,c
 11857  004604  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11858  004606  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11859  004608  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11860  00460A  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11861  00460C  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11862  00460E  90D8               	bcf	status,0,c
 11863  004610  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11864  004612  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11865  004614  90D8               	bcf	status,0,c
 11866  004616  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11867  004618  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11868  00461A  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11869  00461C  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11870  00461E  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11871  004620  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11872  004622  90D8               	bcf	status,0,c
 11873  004624  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11874  004626  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11875  004628  90D8               	bcf	status,0,c
 11876  00462A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11877  00462C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11878  00462E  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11879  004630  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11880  004632  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11881  004634  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11885  004636  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11886  00463A  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11887  00463E  9EDF               	bcf	indf2,7,c
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;usb_device.c: 1575: if(direction == 0)
 11891  004640  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11892  004642  A4D8               	btfss	status,2,c
 11893  004644  D007               	goto	l1664
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;usb_device.c: 1576: {
 11897                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11898  004646  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11899  004648  0D02               	mullw	2
 11900  00464A  0E0E               	movlw	low _pBDTEntryOut
 11901  00464C  24F3               	addwf	prodl,w,c
 11902  00464E  6ED9               	movwf	fsr2l,c
 11903  004650  0E03               	movlw	high _pBDTEntryOut
 11904  004652  D006               	goto	L10
 11905  004654                     l1664:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;usb_device.c: 1579: else
 11909                           ;usb_device.c: 1580: {
 11910                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11911                           
 11912                           ; BSR set to: 0
 11913  004654  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11914  004656  0D02               	mullw	2
 11915  004658  0EBE               	movlw	low _pBDTEntryIn
 11916  00465A  24F3               	addwf	prodl,w,c
 11917  00465C  6ED9               	movwf	fsr2l,c
 11918  00465E  0E00               	movlw	high _pBDTEntryIn
 11919  004660                     L10:
 11920  004660  20F4               	addwfc	prodh,w,c
 11921  004662  6EDA               	movwf	fsr2h,c
 11922  004664  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11923  004668  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;usb_device.c: 1582: }
 11927                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11928                           
 11929                           ; BSR set to: 0
 11930  00466C  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11931  004670  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11932  004674  9CDF               	bcf	indf2,6,c
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11936  004676  EE20 F004          	lfsr	2,4
 11937  00467A  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11938  00467C  26D9               	addwf	fsr2l,f,c
 11939  00467E  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11940  004680  22DA               	addwfc	fsr2h,f,c
 11941  004682  8CDF               	bsf	indf2,6,c
 11942                           
 11943                           ; BSR set to: 0
 11944  004684  0012               	return		;funcret
 11945  004686                     __end_of_USBConfigureEndpoint:
 11946                           	opt stack 0
 11947                           tosu	equ	0xFFF
 11948                           tosh	equ	0xFFE
 11949                           tosl	equ	0xFFD
 11950                           pclath	equ	0xFFA
 11951                           tblptru	equ	0xFF8
 11952                           tblptrh	equ	0xFF7
 11953                           tblptrl	equ	0xFF6
 11954                           tablat	equ	0xFF5
 11955                           prodh	equ	0xFF4
 11956                           prodl	equ	0xFF3
 11957                           intcon	equ	0xFF2
 11958                           intcon2	equ	0xFF1
 11959                           intcon3	equ	0xFF0
 11960                           indf0	equ	0xFEF
 11961                           postinc0	equ	0xFEE
 11962                           plusw0	equ	0xFEB
 11963                           fsr0h	equ	0xFEA
 11964                           fsr0l	equ	0xFE9
 11965                           wreg	equ	0xFE8
 11966                           postinc1	equ	0xFE6
 11967                           postdec1	equ	0xFE5
 11968                           plusw1	equ	0xFE3
 11969                           fsr1h	equ	0xFE2
 11970                           fsr1l	equ	0xFE1
 11971                           indf2	equ	0xFDF
 11972                           postinc2	equ	0xFDE
 11973                           postdec2	equ	0xFDD
 11974                           plusw2	equ	0xFDB
 11975                           fsr2h	equ	0xFDA
 11976                           fsr2l	equ	0xFD9
 11977                           status	equ	0xFD8
 11978                           
 11979 ;; *************** function _USBCtrlTrfOutHandler *****************
 11980 ;; Defined at:
 11981 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11999 ;;Total ram usage:        0 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:   13
 12002 ;; This function calls:
 12003 ;;		_USBCtrlTrfRxService
 12004 ;; This function is called by:
 12005 ;;		_USBCtrlEPService
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text49
 12010  004F34                     __ptext49:
 12011                           	opt stack 0
 12012  004F34                     _USBCtrlTrfOutHandler:
 12013                           	opt stack 12
 12014                           
 12015                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;incstack = 0
 12019  004F34  0E02               	movlw	2
 12020  004F36  0100               	movlb	0	; () banked
 12021  004F38  19D1               	xorwf	_controlTransferState& (0+255),w,b
 12022  004F3A  A4D8               	btfss	status,2,c
 12023  004F3C  D003               	goto	l1770
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;usb_device.c: 2558: {
 12027                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12028  004F3E  EC60  F016         	call	_USBCtrlTrfRxService	;wreg free
 12029                           
 12030                           ;usb_device.c: 2560: }
 12031  004F42  0012               	return	
 12032  004F44                     l1770:
 12033                           
 12034                           ;usb_device.c: 2561: else
 12035                           ;usb_device.c: 2562: {
 12036                           ;usb_device.c: 2565: controlTransferState = 0;
 12037  004F44  0E00               	movlw	0
 12038  004F46  0100               	movlb	0	; () banked
 12039  004F48  6FD1               	movwf	_controlTransferState& (0+255),b
 12040                           
 12041                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12042  004F4A  0101               	movlb	1	; () banked
 12043  004F4C  51DC               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12044  004F4E  A4D8               	btfss	status,2,c
 12045  004F50  D020               	goto	l1772
 12046                           
 12047                           ; BSR set to: 1
 12048                           ;usb_device.c: 2573: {
 12049                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12050  004F52  0100               	movlb	0	; () banked
 12051  004F54  EE20 F001          	lfsr	2,1
 12052  004F58  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12053  004F5A  26D9               	addwf	fsr2l,f,c
 12054  004F5C  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12055  004F5E  22DA               	addwfc	fsr2h,f,c
 12056  004F60  0E08               	movlw	8
 12057  004F62  6EDF               	movwf	indf2,c
 12058                           
 12059                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12060  004F64  EE20 F002          	lfsr	2,2
 12061  004F68  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12062  004F6A  26D9               	addwf	fsr2l,f,c
 12063  004F6C  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12064  004F6E  22DA               	addwfc	fsr2h,f,c
 12065  004F70  0E30               	movlw	48
 12066  004F72  6EDE               	movwf	postinc2,c
 12067  004F74  0E04               	movlw	4
 12068  004F76  6EDD               	movwf	postdec2,c
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12072  004F78  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12073  004F7C  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12074  004F80  0E0C               	movlw	12
 12075  004F82  6EDF               	movwf	indf2,c
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12079  004F84  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12080  004F88  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12081  004F8C  0E00               	movlw	0
 12082  004F8E  8EDB               	bsf	plusw2,7,c
 12083                           
 12084                           ;usb_device.c: 2578: }
 12085  004F90  0012               	return	
 12086  004F92                     l1772:
 12087                           
 12088                           ;usb_device.c: 2579: else
 12089                           ;usb_device.c: 2580: {
 12090                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12091                           
 12092                           ; BSR set to: 0
 12093  004F92  0E00               	movlw	0
 12094  004F94  0101               	movlb	1	; () banked
 12095  004F96  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12096                           
 12097                           ; BSR set to: 1
 12098  004F98  0012               	return	
 12099  004F9A                     __end_of_USBCtrlTrfOutHandler:
 12100                           	opt stack 0
 12101                           tosu	equ	0xFFF
 12102                           tosh	equ	0xFFE
 12103                           tosl	equ	0xFFD
 12104                           pclath	equ	0xFFA
 12105                           tblptru	equ	0xFF8
 12106                           tblptrh	equ	0xFF7
 12107                           tblptrl	equ	0xFF6
 12108                           tablat	equ	0xFF5
 12109                           prodh	equ	0xFF4
 12110                           prodl	equ	0xFF3
 12111                           intcon	equ	0xFF2
 12112                           intcon2	equ	0xFF1
 12113                           intcon3	equ	0xFF0
 12114                           indf0	equ	0xFEF
 12115                           postinc0	equ	0xFEE
 12116                           plusw0	equ	0xFEB
 12117                           fsr0h	equ	0xFEA
 12118                           fsr0l	equ	0xFE9
 12119                           wreg	equ	0xFE8
 12120                           postinc1	equ	0xFE6
 12121                           postdec1	equ	0xFE5
 12122                           plusw1	equ	0xFE3
 12123                           fsr1h	equ	0xFE2
 12124                           fsr1l	equ	0xFE1
 12125                           indf2	equ	0xFDF
 12126                           postinc2	equ	0xFDE
 12127                           postdec2	equ	0xFDD
 12128                           plusw2	equ	0xFDB
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function _USBCtrlTrfRxService *****************
 12134 ;; Defined at:
 12135 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;		None
 12138 ;; Auto vars:     Size  Location     Type
 12139 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12140 ;;  i               1   29[BANK0 ] unsigned char 
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12154 ;;Total ram usage:        2 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:   12
 12157 ;; This function calls:
 12158 ;;		_USBCtrlEPAllowStatusStage
 12159 ;; This function is called by:
 12160 ;;		_USBCtrlTrfOutHandler
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text50
 12165  002CC0                     __ptext50:
 12166                           	opt stack 0
 12167  002CC0                     _USBCtrlTrfRxService:
 12168                           	opt stack 12
 12169                           
 12170                           ;usb_device.c: 1872: uint8_t byteToRead;
 12171                           ;usb_device.c: 1873: uint8_t i;
 12172                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12173                           
 12174                           ;incstack = 0
 12175  002CC0  0100               	movlb	0	; () banked
 12176  002CC2  EE20 F001          	lfsr	2,1
 12177  002CC6  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12178  002CC8  26D9               	addwf	fsr2l,f,c
 12179  002CCA  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12180  002CCC  22DA               	addwfc	fsr2h,f,c
 12181  002CCE  50DF               	movf	indf2,w,c
 12182  002CD0  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12186  002CD2  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12187  002CD4  0101               	movlb	1	; () banked
 12188  002CD6  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12189  002CD8  0E00               	movlw	0
 12190  002CDA  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12191  002CDC  A0D8               	btfss	status,0,c
 12192                           
 12193                           ; BSR set to: 1
 12194                           ;usb_device.c: 1884: {
 12195                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12196  002CDE  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12197                           
 12198                           ; BSR set to: 1
 12199                           ;usb_device.c: 1886: }
 12200                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12201                           
 12202                           ; BSR set to: 1
 12203  002CE2  0100               	movlb	0	; () banked
 12204  002CE4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12205  002CE6  0101               	movlb	1	; () banked
 12206  002CE8  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12207  002CEA  0E00               	movlw	0
 12208  002CEC  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12212  002CEE  0E00               	movlw	0
 12213  002CF0  0100               	movlb	0	; () banked
 12214  002CF2  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12215  002CF4  D013               	goto	l1698
 12216  002CF6                     
 12217                           ; BSR set to: 0
 12218                           ;usb_device.c: 1893: {
 12219                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12220                           
 12221                           ; BSR set to: 0
 12222  002CF6  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12223  002CF8  0D01               	mullw	1
 12224  002CFA  0E38               	movlw	56
 12225  002CFC  24F3               	addwf	prodl,w,c
 12226  002CFE  6ED9               	movwf	fsr2l,c
 12227  002D00  0E04               	movlw	4
 12228  002D02  20F4               	addwfc	prodh,w,c
 12229  002D04  6EDA               	movwf	fsr2h,c
 12230  002D06  C1C9  FFE1         	movff	_outPipes,fsr1l
 12231  002D0A  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12232  002D0E  CFDF FFE7          	movff	indf2,indf1
 12233                           
 12234                           ; BSR set to: 0
 12235  002D12  0101               	movlb	1	; () banked
 12236  002D14  4BC9               	infsnz	_outPipes& (0+255),f,b
 12237  002D16  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12238                           
 12239                           ; BSR set to: 1
 12240  002D18  0100               	movlb	0	; () banked
 12241  002D1A  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12242  002D1C                     l1698:
 12243                           
 12244                           ; BSR set to: 0
 12245                           
 12246                           ; BSR set to: 0
 12247  002D1C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12248  002D1E  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12249  002D20  A0D8               	btfss	status,0,c
 12250  002D22  D7E9               	goto	l1699
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;usb_device.c: 1895: }
 12254                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12255                           
 12256                           ; BSR set to: 0
 12257  002D24  0101               	movlb	1	; () banked
 12258  002D26  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12259  002D28  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12260  002D2A  B4D8               	btfsc	status,2,c
 12261  002D2C  D033               	goto	l1701
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;usb_device.c: 1900: {
 12265                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12266  002D2E  0100               	movlb	0	; () banked
 12267  002D30  EE20 F001          	lfsr	2,1
 12268  002D34  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12269  002D36  26D9               	addwf	fsr2l,f,c
 12270  002D38  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12271  002D3A  22DA               	addwfc	fsr2h,f,c
 12272  002D3C  0E08               	movlw	8
 12273  002D3E  6EDF               	movwf	indf2,c
 12274                           
 12275                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12276  002D40  EE20 F002          	lfsr	2,2
 12277  002D44  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12278  002D46  26D9               	addwf	fsr2l,f,c
 12279  002D48  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12280  002D4A  22DA               	addwfc	fsr2h,f,c
 12281  002D4C  0E38               	movlw	56
 12282  002D4E  6EDE               	movwf	postinc2,c
 12283  002D50  0E04               	movlw	4
 12284  002D52  6EDD               	movwf	postdec2,c
 12285                           
 12286                           ; BSR set to: 0
 12287                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12288  002D54  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12289  002D58  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12290  002D5C  BCDF               	btfsc	indf2,6,c
 12291  002D5E  D00D               	goto	l1702
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;usb_device.c: 1904: {
 12295                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12296  002D60  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12297  002D64  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12298  002D68  0E48               	movlw	72
 12299  002D6A  6EDF               	movwf	indf2,c
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12303  002D6C  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12304  002D70  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12305  002D74  0E00               	movlw	0
 12306  002D76  8EDB               	bsf	plusw2,7,c
 12307                           
 12308                           ;usb_device.c: 1907: }
 12309  002D78  0012               	return	
 12310  002D7A                     l1702:
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;usb_device.c: 1908: else
 12314                           ;usb_device.c: 1909: {
 12315                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12316                           
 12317                           ; BSR set to: 0
 12318  002D7A  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12319  002D7E  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12320  002D82  0E08               	movlw	8
 12321  002D84  6EDF               	movwf	indf2,c
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12325  002D86  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12326  002D8A  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12327  002D8E  0E00               	movlw	0
 12328  002D90  8EDB               	bsf	plusw2,7,c
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;usb_device.c: 1912: }
 12332                           ;usb_device.c: 1913: }
 12333  002D92  0012               	return	
 12334  002D94                     l1701:
 12335                           
 12336                           ;usb_device.c: 1914: else
 12337                           ;usb_device.c: 1915: {
 12338                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12339                           
 12340                           ; BSR set to: 0
 12341  002D94  0100               	movlb	0	; () banked
 12342  002D96  EE20 F001          	lfsr	2,1
 12343  002D9A  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12344  002D9C  26D9               	addwf	fsr2l,f,c
 12345  002D9E  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12346  002DA0  22DA               	addwfc	fsr2h,f,c
 12347  002DA2  0E08               	movlw	8
 12348  002DA4  6EDF               	movwf	indf2,c
 12349                           
 12350                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12351  002DA6  EE20 F002          	lfsr	2,2
 12352  002DAA  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12353  002DAC  26D9               	addwf	fsr2l,f,c
 12354  002DAE  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12355  002DB0  22DA               	addwfc	fsr2h,f,c
 12356  002DB2  0E30               	movlw	48
 12357  002DB4  6EDE               	movwf	postinc2,c
 12358  002DB6  0E04               	movlw	4
 12359  002DB8  6EDD               	movwf	postdec2,c
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12363  002DBA  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12364  002DBE  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12365  002DC2  0E04               	movlw	4
 12366  002DC4  6EDF               	movwf	indf2,c
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12370  002DC6  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12371  002DCA  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12372  002DCE  0E00               	movlw	0
 12373  002DD0  8EDB               	bsf	plusw2,7,c
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;usb_device.c: 1944: }
 12377                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12378                           
 12379                           ; BSR set to: 0
 12380  002DD2  0101               	movlb	1	; () banked
 12381  002DD4  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12385  002DD6  0100               	movlb	0	; () banked
 12386  002DD8  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12387  002DDA  A4D8               	btfss	status,2,c
 12388  002DDC  0012               	return	
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;usb_device.c: 1960: {
 12392                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12393  002DDE  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12394  002DE2  0012               	return	
 12395  002DE4                     __end_of_USBCtrlTrfRxService:
 12396                           	opt stack 0
 12397                           tosu	equ	0xFFF
 12398                           tosh	equ	0xFFE
 12399                           tosl	equ	0xFFD
 12400                           pclath	equ	0xFFA
 12401                           tblptru	equ	0xFF8
 12402                           tblptrh	equ	0xFF7
 12403                           tblptrl	equ	0xFF6
 12404                           tablat	equ	0xFF5
 12405                           prodh	equ	0xFF4
 12406                           prodl	equ	0xFF3
 12407                           intcon	equ	0xFF2
 12408                           intcon2	equ	0xFF1
 12409                           intcon3	equ	0xFF0
 12410                           indf0	equ	0xFEF
 12411                           postinc0	equ	0xFEE
 12412                           plusw0	equ	0xFEB
 12413                           fsr0h	equ	0xFEA
 12414                           fsr0l	equ	0xFE9
 12415                           wreg	equ	0xFE8
 12416                           indf1	equ	0xFE7
 12417                           postinc1	equ	0xFE6
 12418                           postdec1	equ	0xFE5
 12419                           plusw1	equ	0xFE3
 12420                           fsr1h	equ	0xFE2
 12421                           fsr1l	equ	0xFE1
 12422                           indf2	equ	0xFDF
 12423                           postinc2	equ	0xFDE
 12424                           postdec2	equ	0xFDD
 12425                           plusw2	equ	0xFDB
 12426                           fsr2h	equ	0xFDA
 12427                           fsr2l	equ	0xFD9
 12428                           status	equ	0xFD8
 12429                           
 12430 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12431 ;; Defined at:
 12432 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:   11
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_USBDeviceTasks
 12457 ;;		_USBCtrlEPServiceComplete
 12458 ;;		_USBCtrlTrfRxService
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text51
 12463  003A92                     __ptext51:
 12464                           	opt stack 0
 12465  003A92                     _USBCtrlEPAllowStatusStage:
 12466                           	opt stack 12
 12467                           
 12468                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12469                           
 12470                           ;incstack = 0
 12471  003A92  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12472  003A94  A4D8               	btfss	status,2,c
 12473  003A96  0012               	return	
 12474                           
 12475                           ;usb_device.c: 1442: {
 12476                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12477  003A98  0E01               	movlw	1
 12478  003A9A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12479                           
 12480                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12481  003A9C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12482  003A9E  A4D8               	btfss	status,2,c
 12483  003AA0  0012               	return	
 12484                           
 12485                           ;usb_device.c: 1445: {
 12486                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12487  003AA2  0E01               	movlw	1
 12488  003AA4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12489                           
 12490                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12491  003AA6  0E02               	movlw	2
 12492  003AA8  0100               	movlb	0	; () banked
 12493  003AAA  19D1               	xorwf	_controlTransferState& (0+255),w,b
 12494  003AAC  A4D8               	btfss	status,2,c
 12495  003AAE  D015               	goto	l1652
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;usb_device.c: 1451: {
 12499                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12500  003AB0  EE20 F001          	lfsr	2,1
 12501  003AB4  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 12502  003AB6  26D9               	addwf	fsr2l,f,c
 12503  003AB8  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12504  003ABA  22DA               	addwfc	fsr2h,f,c
 12505  003ABC  0E00               	movlw	0
 12506  003ABE  6EDF               	movwf	indf2,c
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12510  003AC0  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12511  003AC4  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12512  003AC8  0E48               	movlw	72
 12513  003ACA  6EDF               	movwf	indf2,c
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12517  003ACC  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12518  003AD0  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12519  003AD4  0E00               	movlw	0
 12520  003AD6  8EDB               	bsf	plusw2,7,c
 12521                           
 12522                           ;usb_device.c: 1455: }
 12523  003AD8  0012               	return	
 12524  003ADA                     l1652:
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12528                           
 12529                           ; BSR set to: 0
 12530  003ADA  05D1               	decf	_controlTransferState& (0+255),w,b
 12531  003ADC  A4D8               	btfss	status,2,c
 12532  003ADE  0012               	return	
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 1457: {
 12536                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12537  003AE0  0E00               	movlw	0
 12538  003AE2  0101               	movlb	1	; () banked
 12539  003AE4  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12540                           
 12541                           ; BSR set to: 1
 12542                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12543  003AE6  0100               	movlb	0	; () banked
 12544  003AE8  EE20 F001          	lfsr	2,1
 12545  003AEC  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12546  003AEE  26D9               	addwf	fsr2l,f,c
 12547  003AF0  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12548  003AF2  22DA               	addwfc	fsr2h,f,c
 12549  003AF4  0E08               	movlw	8
 12550  003AF6  6EDF               	movwf	indf2,c
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12554  003AF8  EE20 F002          	lfsr	2,2
 12555  003AFC  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12556  003AFE  26D9               	addwf	fsr2l,f,c
 12557  003B00  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12558  003B02  22DA               	addwfc	fsr2h,f,c
 12559  003B04  0E30               	movlw	48
 12560  003B06  6EDE               	movwf	postinc2,c
 12561  003B08  0E04               	movlw	4
 12562  003B0A  6EDD               	movwf	postdec2,c
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12566  003B0C  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12567  003B10  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12568  003B14  0E04               	movlw	4
 12569  003B16  6EDF               	movwf	indf2,c
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12573  003B18  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12574  003B1C  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12575  003B20  0E00               	movlw	0
 12576  003B22  8EDB               	bsf	plusw2,7,c
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12580  003B24  0E01               	movlw	1
 12581  003B26  0101               	movlb	1	; () banked
 12582  003B28  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12583                           
 12584                           ; BSR set to: 1
 12585                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12586  003B2A  0100               	movlb	0	; () banked
 12587  003B2C  EE20 F001          	lfsr	2,1
 12588  003B30  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12589  003B32  26D9               	addwf	fsr2l,f,c
 12590  003B34  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12591  003B36  22DA               	addwfc	fsr2h,f,c
 12592  003B38  0E08               	movlw	8
 12593  003B3A  6EDF               	movwf	indf2,c
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12597  003B3C  EE20 F002          	lfsr	2,2
 12598  003B40  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12599  003B42  26D9               	addwf	fsr2l,f,c
 12600  003B44  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12601  003B46  22DA               	addwfc	fsr2h,f,c
 12602  003B48  0E30               	movlw	48
 12603  003B4A  6EDE               	movwf	postinc2,c
 12604  003B4C  0E04               	movlw	4
 12605  003B4E  6EDD               	movwf	postdec2,c
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12609  003B50  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12610  003B54  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12611  003B58  0E80               	movlw	128
 12612  003B5A  6EDF               	movwf	indf2,c
 12613                           
 12614                           ; BSR set to: 0
 12615                           
 12616                           ; BSR set to: 0
 12617                           
 12618                           ; BSR set to: 0
 12619  003B5C  0012               	return	
 12620  003B5E                     __end_of_USBCtrlEPAllowStatusStage:
 12621                           	opt stack 0
 12622                           tosu	equ	0xFFF
 12623                           tosh	equ	0xFFE
 12624                           tosl	equ	0xFFD
 12625                           pclath	equ	0xFFA
 12626                           tblptru	equ	0xFF8
 12627                           tblptrh	equ	0xFF7
 12628                           tblptrl	equ	0xFF6
 12629                           tablat	equ	0xFF5
 12630                           prodh	equ	0xFF4
 12631                           prodl	equ	0xFF3
 12632                           intcon	equ	0xFF2
 12633                           intcon2	equ	0xFF1
 12634                           intcon3	equ	0xFF0
 12635                           indf0	equ	0xFEF
 12636                           postinc0	equ	0xFEE
 12637                           plusw0	equ	0xFEB
 12638                           fsr0h	equ	0xFEA
 12639                           fsr0l	equ	0xFE9
 12640                           wreg	equ	0xFE8
 12641                           indf1	equ	0xFE7
 12642                           postinc1	equ	0xFE6
 12643                           postdec1	equ	0xFE5
 12644                           plusw1	equ	0xFE3
 12645                           fsr1h	equ	0xFE2
 12646                           fsr1l	equ	0xFE1
 12647                           indf2	equ	0xFDF
 12648                           postinc2	equ	0xFDE
 12649                           postdec2	equ	0xFDD
 12650                           plusw2	equ	0xFDB
 12651                           fsr2h	equ	0xFDA
 12652                           fsr2l	equ	0xFD9
 12653                           status	equ	0xFD8
 12654                           
 12655 ;; *************** function _USBCtrlTrfInHandler *****************
 12656 ;; Defined at:
 12657 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;		None
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12675 ;;Total ram usage:        1 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:   12
 12678 ;; This function calls:
 12679 ;;		_USBCtrlTrfTxService
 12680 ;; This function is called by:
 12681 ;;		_USBCtrlEPService
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           	psect	text52
 12686  003E7A                     __ptext52:
 12687                           	opt stack 0
 12688  003E7A                     _USBCtrlTrfInHandler:
 12689                           	opt stack 13
 12690                           
 12691                           ;usb_device.c: 2611: uint8_t lastDTS;
 12692                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12693                           
 12694                           ;incstack = 0
 12695  003E7A  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12696  003E7E  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12697  003E82  0100               	movlb	0	; () banked
 12698  003E84  0E00               	movlw	0
 12699  003E86  BCDF               	btfsc	indf2,6,c
 12700  003E88  0E01               	movlw	1
 12701  003E8A  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12705  003E8C  0E04               	movlw	4
 12706  003E8E  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12710  003E90  0E08               	movlw	8
 12711  003E92  19D3               	xorwf	_USBDeviceState& (0+255),w,b
 12712  003E94  A4D8               	btfss	status,2,c
 12713  003E96  D00D               	goto	l1779
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;usb_device.c: 2622: {
 12717                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12718  003E98  0104               	movlb	4	; () banked
 12719  003E9A  5132               	movf	50,w,b	;volatile
 12720  003E9C  0B7F               	andlw	127
 12721  003E9E  010F               	movlb	15	; () banked
 12722  003EA0  6F38               	movwf	56,b	;volatile
 12723                           
 12724                           ; BSR set to: 15
 12725                           ;usb_device.c: 2624: if(UADDR != 0u)
 12726  003EA2  5138               	movf	56,w,b	;volatile
 12727  003EA4  B4D8               	btfsc	status,2,c
 12728  003EA6  D002               	goto	l1778
 12729                           
 12730                           ; BSR set to: 15
 12731                           ;usb_device.c: 2625: {
 12732                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12733  003EA8  0E10               	movlw	16
 12734  003EAA  D001               	goto	L11
 12735  003EAC                     l1778:
 12736                           
 12737                           ;usb_device.c: 2628: else
 12738                           ;usb_device.c: 2629: {
 12739                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12740                           
 12741                           ; BSR set to: 0
 12742  003EAC  0E04               	movlw	4
 12743  003EAE                     L11:
 12744  003EAE  0100               	movlb	0	; () banked
 12745  003EB0  6FD3               	movwf	_USBDeviceState& (0+255),b
 12746  003EB2                     l1779:
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;usb_device.c: 2631: }
 12750                           ;usb_device.c: 2632: }
 12751                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12752                           
 12753                           ; BSR set to: 0
 12754                           
 12755                           ; BSR set to: 0
 12756  003EB2  05D1               	decf	_controlTransferState& (0+255),w,b
 12757  003EB4  A4D8               	btfss	status,2,c
 12758  003EB6  D03B               	goto	l1780
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;usb_device.c: 2636: {
 12762                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12763  003EB8  EE20 F002          	lfsr	2,2
 12764  003EBC  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 12765  003EBE  26D9               	addwf	fsr2l,f,c
 12766  003EC0  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12767  003EC2  22DA               	addwfc	fsr2h,f,c
 12768  003EC4  0E38               	movlw	56
 12769  003EC6  6EDE               	movwf	postinc2,c
 12770  003EC8  0E04               	movlw	4
 12771  003ECA  6EDD               	movwf	postdec2,c
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12775  003ECC  ECD2  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12776                           
 12777                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12778  003ED0  0E02               	movlw	2
 12779  003ED2  0100               	movlb	0	; () banked
 12780  003ED4  19D2               	xorwf	_shortPacketStatus& (0+255),w,b
 12781  003ED6  A4D8               	btfss	status,2,c
 12782  003ED8  D00D               	goto	l1781
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;usb_device.c: 2645: {
 12786                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12787  003EDA  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12788  003EDE  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12789  003EE2  0E04               	movlw	4
 12790  003EE4  6EDF               	movwf	indf2,c
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12794  003EE6  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12795  003EEA  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12796  003EEE  0E00               	movlw	0
 12797  003EF0  8EDB               	bsf	plusw2,7,c
 12798                           
 12799                           ;usb_device.c: 2650: }
 12800  003EF2  0012               	return	
 12801  003EF4                     l1781:
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;usb_device.c: 2651: else
 12805                           ;usb_device.c: 2652: {
 12806                           ;usb_device.c: 2653: if(lastDTS == 0)
 12807                           
 12808                           ; BSR set to: 0
 12809  003EF4  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12810  003EF6  A4D8               	btfss	status,2,c
 12811  003EF8  D00D               	goto	l1783
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;usb_device.c: 2654: {
 12815                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12816  003EFA  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12817  003EFE  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12818  003F02  0E48               	movlw	72
 12819  003F04  6EDF               	movwf	indf2,c
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12823  003F06  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12824  003F0A  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12825  003F0E  0E00               	movlw	0
 12826  003F10  8EDB               	bsf	plusw2,7,c
 12827                           
 12828                           ;usb_device.c: 2657: }
 12829  003F12  0012               	return	
 12830  003F14                     l1783:
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;usb_device.c: 2658: else
 12834                           ;usb_device.c: 2659: {
 12835                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12836                           
 12837                           ; BSR set to: 0
 12838  003F14  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12839  003F18  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12840  003F1C  0E08               	movlw	8
 12841  003F1E  6EDF               	movwf	indf2,c
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12845  003F20  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12846  003F24  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12847  003F28  0E00               	movlw	0
 12848  003F2A  8EDB               	bsf	plusw2,7,c
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;usb_device.c: 2662: }
 12852                           ;usb_device.c: 2663: }
 12853                           ;usb_device.c: 2664: }
 12854                           
 12855                           ; BSR set to: 0
 12856  003F2C  0012               	return	
 12857  003F2E                     l1780:
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;usb_device.c: 2665: else
 12861                           ;usb_device.c: 2666: {
 12862                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12863  003F2E  0101               	movlb	1	; () banked
 12864  003F30  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12865                           
 12866                           ; BSR set to: 1
 12867                           ;usb_device.c: 2675: }
 12868                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12869                           
 12870                           ; BSR set to: 1
 12871  003F32  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12872                           
 12873                           ; BSR set to: 1
 12874                           ;usb_device.c: 2677: }
 12875                           ;usb_device.c: 2679: controlTransferState = 0;
 12876                           
 12877                           ; BSR set to: 1
 12878  003F34  0E00               	movlw	0
 12879  003F36  0100               	movlb	0	; () banked
 12880  003F38  6FD1               	movwf	_controlTransferState& (0+255),b
 12881  003F3A  0012               	return	
 12882  003F3C                     __end_of_USBCtrlTrfInHandler:
 12883                           	opt stack 0
 12884                           tosu	equ	0xFFF
 12885                           tosh	equ	0xFFE
 12886                           tosl	equ	0xFFD
 12887                           pclath	equ	0xFFA
 12888                           tblptru	equ	0xFF8
 12889                           tblptrh	equ	0xFF7
 12890                           tblptrl	equ	0xFF6
 12891                           tablat	equ	0xFF5
 12892                           prodh	equ	0xFF4
 12893                           prodl	equ	0xFF3
 12894                           intcon	equ	0xFF2
 12895                           intcon2	equ	0xFF1
 12896                           intcon3	equ	0xFF0
 12897                           indf0	equ	0xFEF
 12898                           postinc0	equ	0xFEE
 12899                           plusw0	equ	0xFEB
 12900                           fsr0h	equ	0xFEA
 12901                           fsr0l	equ	0xFE9
 12902                           wreg	equ	0xFE8
 12903                           indf1	equ	0xFE7
 12904                           postinc1	equ	0xFE6
 12905                           postdec1	equ	0xFE5
 12906                           plusw1	equ	0xFE3
 12907                           fsr1h	equ	0xFE2
 12908                           fsr1l	equ	0xFE1
 12909                           indf2	equ	0xFDF
 12910                           postinc2	equ	0xFDE
 12911                           postdec2	equ	0xFDD
 12912                           plusw2	equ	0xFDB
 12913                           fsr2h	equ	0xFDA
 12914                           fsr2l	equ	0xFD9
 12915                           status	equ	0xFD8
 12916                           
 12917 ;; *************** function _USBCtrlTrfTxService *****************
 12918 ;; Defined at:
 12919 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;		None
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  1    wreg      void 
 12926 ;; Registers used:
 12927 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12937 ;;Total ram usage:        1 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:   11
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_USBCtrlEPAllowDataStage
 12944 ;;		_USBCtrlTrfInHandler
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text53
 12949  0035A4                     __ptext53:
 12950                           	opt stack 0
 12951  0035A4                     _USBCtrlTrfTxService:
 12952                           	opt stack 11
 12953                           
 12954                           ;usb_device.c: 1791: uint8_t byteToSend;
 12955                           ;usb_device.c: 1795: byteToSend = 8;
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;incstack = 0
 12959  0035A4  0E08               	movlw	8
 12960  0035A6  0100               	movlb	0	; () banked
 12961  0035A8  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12965  0035AA  51BD               	movf	(_inPipes+5)& (0+255),w,b
 12966  0035AC  E110               	bnz	l7707
 12967  0035AE  0E08               	movlw	8
 12968  0035B0  5DBC               	subwf	(_inPipes+4)& (0+255),w,b
 12969  0035B2  B0D8               	btfsc	status,0,c
 12970  0035B4  D00C               	goto	l1685
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;usb_device.c: 1797: {
 12974                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12975  0035B6  C0BC  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12979  0035BA  51D2               	movf	_shortPacketStatus& (0+255),w,b
 12980  0035BC  A4D8               	btfss	status,2,c
 12981  0035BE  D002               	goto	l1683
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;usb_device.c: 1806: {
 12985                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12986  0035C0  0E01               	movlw	1
 12987  0035C2  D004               	goto	L12
 12988  0035C4                     l1683:
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12992                           
 12993                           ; BSR set to: 0
 12994  0035C4  05D2               	decf	_shortPacketStatus& (0+255),w,b
 12995  0035C6  A4D8               	btfss	status,2,c
 12996  0035C8  D002               	goto	l1685
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;usb_device.c: 1810: {
 13000                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13001  0035CA  0E02               	movlw	2
 13002  0035CC                     L12:
 13003  0035CC  6FD2               	movwf	_shortPacketStatus& (0+255),b
 13004  0035CE                     l1685:
 13005  0035CE                     l7707:
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;usb_device.c: 1812: }
 13009                           ;usb_device.c: 1813: }
 13010                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13011  0035CE  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13012  0035D0  5FBC               	subwf	(_inPipes+4)& (0+255),f,b
 13013  0035D2  0E00               	movlw	0
 13014  0035D4  5BBD               	subwfb	(_inPipes+5)& (0+255),f,b
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13018  0035D6  EE20 F001          	lfsr	2,1
 13019  0035DA  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 13020  0035DC  26D9               	addwf	fsr2l,f,c
 13021  0035DE  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13022  0035E0  22DA               	addwfc	fsr2h,f,c
 13023  0035E2  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13027  0035E6  0E38               	movlw	56
 13028  0035E8  0102               	movlb	2	; () banked
 13029  0035EA  6FD4               	movwf	_pDst& (0+255),b
 13030  0035EC  0E04               	movlw	4
 13031  0035EE  6FD5               	movwf	(_pDst+1)& (0+255),b
 13032                           
 13033                           ; BSR set to: 2
 13034                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13035  0035F0  0100               	movlb	0	; () banked
 13036  0035F2  A1BB               	btfss	(_inPipes+3)& (0+255),0,b
 13037  0035F4  D01E               	goto	l1687
 13038  0035F6  D03E               	goto	l1691
 13039  0035F8                     
 13040                           ; BSR set to: 0
 13041                           ;usb_device.c: 1830: {
 13042                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13043                           
 13044                           ; BSR set to: 0
 13045  0035F8  C0B8  FFF6         	movff	_inPipes,tblptrl
 13046  0035FC  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 13047  003600  6AF8               	clrf	tblptru,c
 13048  003602  C2D4  FFD9         	movff	_pDst,fsr2l
 13049  003606  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13050  00360A  0E0E               	movlw	(high __ramtop+-1)
 13051  00360C  64F7               	cpfsgt	tblptrh,c
 13052  00360E  D003               	bra	u5237
 13053  003610  0008               	tblrd		*
 13054  003612  50F5               	movf	tablat,w,c
 13055  003614  D005               	bra	u5230
 13056  003616                     u5237:
 13057  003616  CFF6 FFE9          	movff	tblptrl,fsr0l
 13058  00361A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13059  00361E  50EF               	movf	indf0,w,c
 13060  003620                     u5230:
 13061  003620  6EDF               	movwf	indf2,c
 13062  003622  0100               	movlb	0	; () banked
 13063  003624  4BB8               	infsnz	_inPipes& (0+255),f,b
 13064  003626  2BB9               	incf	(_inPipes+1)& (0+255),f,b
 13065                           
 13066                           ; BSR set to: 0
 13067  003628  0102               	movlb	2	; () banked
 13068  00362A  4BD4               	infsnz	_pDst& (0+255),f,b
 13069  00362C  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13070                           
 13071                           ; BSR set to: 2
 13072                           ;usb_device.c: 1832: byteToSend--;
 13073  00362E  0100               	movlb	0	; () banked
 13074  003630  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13075  003632                     l1687:
 13076                           
 13077                           ; BSR set to: 0
 13078                           
 13079                           ; BSR set to: 0
 13080  003632  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13081  003634  B4D8               	btfsc	status,2,c
 13082  003636  0012               	return	
 13083  003638  D7DF               	goto	l1688
 13084  00363A                     
 13085                           ; BSR set to: 0
 13086                           ;usb_device.c: 1838: {
 13087                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13088                           
 13089                           ; BSR set to: 0
 13090  00363A  C0B8  FFF6         	movff	_inPipes,tblptrl
 13091  00363E  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 13092  003642  6AF8               	clrf	tblptru,c
 13093  003644  C2D4  FFD9         	movff	_pDst,fsr2l
 13094  003648  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13095  00364C  0E0E               	movlw	(high __ramtop+-1)
 13096  00364E  64F7               	cpfsgt	tblptrh,c
 13097  003650  D003               	bra	u5257
 13098  003652  0008               	tblrd		*
 13099  003654  50F5               	movf	tablat,w,c
 13100  003656  D005               	bra	u5250
 13101  003658                     u5257:
 13102  003658  CFF6 FFE9          	movff	tblptrl,fsr0l
 13103  00365C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13104  003660  50EF               	movf	indf0,w,c
 13105  003662                     u5250:
 13106  003662  6EDF               	movwf	indf2,c
 13107  003664  0100               	movlb	0	; () banked
 13108  003666  4BB8               	infsnz	_inPipes& (0+255),f,b
 13109  003668  2BB9               	incf	(_inPipes+1)& (0+255),f,b
 13110                           
 13111                           ; BSR set to: 0
 13112  00366A  0102               	movlb	2	; () banked
 13113  00366C  4BD4               	infsnz	_pDst& (0+255),f,b
 13114  00366E  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13115                           
 13116                           ; BSR set to: 2
 13117                           ;usb_device.c: 1840: byteToSend--;
 13118  003670  0100               	movlb	0	; () banked
 13119  003672  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13120  003674                     l1691:
 13121                           
 13122                           ; BSR set to: 0
 13123                           
 13124                           ; BSR set to: 0
 13125  003674  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13126  003676  B4D8               	btfsc	status,2,c
 13127  003678  0012               	return	
 13128  00367A  D7DF               	goto	l1692
 13129  00367C                     __end_of_USBCtrlTrfTxService:
 13130                           	opt stack 0
 13131                           tosu	equ	0xFFF
 13132                           tosh	equ	0xFFE
 13133                           tosl	equ	0xFFD
 13134                           pclath	equ	0xFFA
 13135                           tblptru	equ	0xFF8
 13136                           tblptrh	equ	0xFF7
 13137                           tblptrl	equ	0xFF6
 13138                           tablat	equ	0xFF5
 13139                           prodh	equ	0xFF4
 13140                           prodl	equ	0xFF3
 13141                           intcon	equ	0xFF2
 13142                           intcon2	equ	0xFF1
 13143                           intcon3	equ	0xFF0
 13144                           indf0	equ	0xFEF
 13145                           postinc0	equ	0xFEE
 13146                           plusw0	equ	0xFEB
 13147                           fsr0h	equ	0xFEA
 13148                           fsr0l	equ	0xFE9
 13149                           wreg	equ	0xFE8
 13150                           indf1	equ	0xFE7
 13151                           postinc1	equ	0xFE6
 13152                           postdec1	equ	0xFE5
 13153                           plusw1	equ	0xFE3
 13154                           fsr1h	equ	0xFE2
 13155                           fsr1l	equ	0xFE1
 13156                           indf2	equ	0xFDF
 13157                           postinc2	equ	0xFDE
 13158                           postdec2	equ	0xFDD
 13159                           plusw2	equ	0xFDB
 13160                           fsr2h	equ	0xFDA
 13161                           fsr2l	equ	0xFD9
 13162                           status	equ	0xFD8
 13163                           
 13164 ;; *************** function _CDCTxService *****************
 13165 ;; Defined at:
 13166 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;		None
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13171 ;;  i               1   36[BANK0 ] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      void 
 13174 ;; Registers used:
 13175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;Total ram usage:        2 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:   12
 13188 ;; This function calls:
 13189 ;;		_USBTransferOnePacket
 13190 ;; This function is called by:
 13191 ;;		_UsbDevice_MainTask
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text54
 13196  0026AA                     __ptext54:
 13197                           	opt stack 0
 13198  0026AA                     _CDCTxService:
 13199                           	opt stack 15
 13200                           
 13201                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13202                           ;usb_device_cdc.c: 842: uint8_t i;
 13203                           ;usb_device_cdc.c: 844: ;
 13204                           ;usb_device_cdc.c: 846: {};
 13205                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;incstack = 0
 13209  0026AA  0101               	movlb	1	; () banked
 13210  0026AC  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13211  0026AE  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13212  0026B0  B4D8               	btfsc	status,2,c
 13213  0026B2  D006               	goto	l1937
 13214                           
 13215                           ; BSR set to: 1
 13216  0026B4  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13217  0026B8  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13218  0026BC  BEDF               	btfsc	indf2,7,c
 13219  0026BE  0012               	return	
 13220  0026C0                     l1937:
 13221                           
 13222                           ; BSR set to: 1
 13223                           ;usb_device_cdc.c: 852: }
 13224                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13225                           
 13226                           ; BSR set to: 1
 13227  0026C0  0E03               	movlw	3
 13228  0026C2  0100               	movlb	0	; () banked
 13229  0026C4  19CD               	xorwf	_cdc_trf_state& (0+255),w,b
 13230  0026C6  A4D8               	btfss	status,2,c
 13231  0026C8  D002               	goto	l1939
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13235  0026CA  0E00               	movlw	0
 13236  0026CC  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13237  0026CE                     l1939:
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13241  0026CE  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13242  0026D0  B4D8               	btfsc	status,2,c
 13243  0026D2  0012               	return	
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;usb_device_cdc.c: 869: }
 13247                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13248                           
 13249                           ; BSR set to: 0
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;usb_device_cdc.c: 866: {
 13253                           ;usb_device_cdc.c: 867: ;
 13254                           ;usb_device_cdc.c: 868: return;
 13255  0026D4  0E02               	movlw	2
 13256  0026D6  19CD               	xorwf	_cdc_trf_state& (0+255),w,b
 13257  0026D8  A4D8               	btfss	status,2,c
 13258  0026DA  D013               	goto	l1941
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;usb_device_cdc.c: 875: {
 13262                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13263  0026DC  0E01               	movlw	1
 13264  0026DE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13265  0026E0  0E00               	movlw	0
 13266  0026E2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13267  0026E4  0E00               	movlw	0
 13268  0026E6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13269  0026E8  0E00               	movlw	0
 13270  0026EA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13271  0026EC  0E02               	movlw	2
 13272  0026EE  EC9E  F01F         	call	_USBTransferOnePacket
 13273  0026F2  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13274  0026F6  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13275                           
 13276                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13277  0026FA  0E03               	movlw	3
 13278  0026FC  0100               	movlb	0	; () banked
 13279  0026FE  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13280                           
 13281                           ;usb_device_cdc.c: 879: }
 13282  002700  0012               	return	
 13283  002702                     l1941:
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13287                           
 13288                           ; BSR set to: 0
 13289  002702  05CD               	decf	_cdc_trf_state& (0+255),w,b
 13290  002704  A4D8               	btfss	status,2,c
 13291  002706  0012               	return	
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;usb_device_cdc.c: 881: {
 13295                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13296  002708  0E40               	movlw	64
 13297  00270A  65CC               	cpfsgt	_cdc_tx_len& (0+255),b
 13298  00270C  D003               	goto	l1944
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13302  00270E  0E40               	movlw	64
 13303  002710  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13304  002712  D002               	goto	l1945
 13305  002714                     l1944:
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;usb_device_cdc.c: 887: else
 13309                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13310  002714  C0CC  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13311  002718                     l1945:
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13315                           
 13316                           ; BSR set to: 0
 13317  002718  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13318  00271A  0800               	sublw	0
 13319  00271C  25CC               	addwf	_cdc_tx_len& (0+255),w,b
 13320  00271E  6FCC               	movwf	_cdc_tx_len& (0+255),b
 13321                           
 13322                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13323  002720  0E84               	movlw	low _cdc_data_tx
 13324  002722  0102               	movlb	2	; () banked
 13325  002724  6FC8               	movwf	_pCDCDst& (0+255),b
 13326  002726  0E07               	movlw	high _cdc_data_tx
 13327  002728  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13328                           
 13329                           ; BSR set to: 2
 13330                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13331  00272A  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13332                           
 13333                           ; BSR set to: 2
 13334                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13335  00272E  0101               	movlb	1	; () banked
 13336  002730  51DA               	movf	_cdc_mem_type& (0+255),w,b
 13337  002732  B4D8               	btfsc	status,2,c
 13338  002734  D01D               	goto	l1947
 13339  002736  D03D               	goto	l1951
 13340  002738                     
 13341                           ;usb_device_cdc.c: 901: {
 13342                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13343                           
 13344                           ; BSR set to: 1
 13345  002738  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13346  00273C  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13347  002740  6AF8               	clrf	tblptru,c
 13348  002742  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13349  002746  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13350  00274A  0E0E               	movlw	(high __ramtop+-1)
 13351  00274C  64F7               	cpfsgt	tblptrh,c
 13352  00274E  D003               	bra	u13137
 13353  002750  0008               	tblrd		*
 13354  002752  50F5               	movf	tablat,w,c
 13355  002754  D005               	bra	u13130
 13356  002756                     u13137:
 13357  002756  CFF6 FFE9          	movff	tblptrl,fsr0l
 13358  00275A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13359  00275E  50EF               	movf	indf0,w,c
 13360  002760                     u13130:
 13361  002760  6EDF               	movwf	indf2,c
 13362                           
 13363                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13364  002762  0102               	movlb	2	; () banked
 13365  002764  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13366  002766  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13367                           
 13368                           ; BSR set to: 2
 13369                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13370  002768  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13371  00276A  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13372                           
 13373                           ; BSR set to: 2
 13374                           ;usb_device_cdc.c: 905: i--;
 13375  00276C  0100               	movlb	0	; () banked
 13376  00276E  0784               	decf	CDCTxService@i& (0+255),f,b
 13377  002770                     l1947:
 13378                           
 13379                           ; BSR set to: 0
 13380  002770  0100               	movlb	0	; () banked
 13381  002772  5184               	movf	CDCTxService@i& (0+255),w,b
 13382  002774  B4D8               	btfsc	status,2,c
 13383  002776  D021               	goto	u13160
 13384  002778  D7DF               	goto	l1948
 13385  00277A                     
 13386                           ; BSR set to: 0
 13387                           ;usb_device_cdc.c: 911: {
 13388                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13389                           
 13390                           ; BSR set to: 0
 13391  00277A  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13392  00277E  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13393  002782  6AF8               	clrf	tblptru,c
 13394  002784  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13395  002788  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13396  00278C  0E0E               	movlw	(high __ramtop+-1)
 13397  00278E  64F7               	cpfsgt	tblptrh,c
 13398  002790  D003               	bra	u13157
 13399  002792  0008               	tblrd		*
 13400  002794  50F5               	movf	tablat,w,c
 13401  002796  D005               	bra	u13150
 13402  002798                     u13157:
 13403  002798  CFF6 FFE9          	movff	tblptrl,fsr0l
 13404  00279C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13405  0027A0  50EF               	movf	indf0,w,c
 13406  0027A2                     u13150:
 13407  0027A2  6EDF               	movwf	indf2,c
 13408                           
 13409                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13410  0027A4  0102               	movlb	2	; () banked
 13411  0027A6  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13412  0027A8  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13413                           
 13414                           ; BSR set to: 2
 13415                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13416  0027AA  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13417  0027AC  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13418                           
 13419                           ; BSR set to: 2
 13420                           ;usb_device_cdc.c: 915: i--;
 13421  0027AE  0100               	movlb	0	; () banked
 13422  0027B0  0784               	decf	CDCTxService@i& (0+255),f,b
 13423  0027B2                     l1951:
 13424                           
 13425                           ; BSR set to: 0
 13426  0027B2  0100               	movlb	0	; () banked
 13427  0027B4  5184               	movf	CDCTxService@i& (0+255),w,b
 13428  0027B6  A4D8               	btfss	status,2,c
 13429  0027B8  D7E0               	goto	l1952
 13430  0027BA                     u13160:
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;usb_device_cdc.c: 916: }
 13434                           ;usb_device_cdc.c: 917: }
 13435                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13436                           
 13437                           ; BSR set to: 0
 13438                           
 13439                           ; BSR set to: 0
 13440  0027BA  51CC               	movf	_cdc_tx_len& (0+255),w,b
 13441  0027BC  A4D8               	btfss	status,2,c
 13442  0027BE  D008               	goto	l1956
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device_cdc.c: 924: {
 13446                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13447  0027C0  0E40               	movlw	64
 13448  0027C2  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13449  0027C4  A4D8               	btfss	status,2,c
 13450  0027C6  D002               	goto	l1955
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13454  0027C8  0E02               	movlw	2
 13455  0027CA  D001               	goto	L13
 13456  0027CC                     l1955:
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;usb_device_cdc.c: 927: else
 13460                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13461                           
 13462                           ; BSR set to: 0
 13463  0027CC  0E03               	movlw	3
 13464  0027CE                     L13:
 13465  0027CE  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13466  0027D0                     l1956:
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;usb_device_cdc.c: 929: }
 13470                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13471                           
 13472                           ; BSR set to: 0
 13473                           
 13474                           ; BSR set to: 0
 13475  0027D0  0E01               	movlw	1
 13476  0027D2  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13477  0027D4  0E84               	movlw	low _cdc_data_tx
 13478  0027D6  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13479  0027D8  0E07               	movlw	high _cdc_data_tx
 13480  0027DA  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13481  0027DC  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13482  0027E0  0E02               	movlw	2
 13483  0027E2  EC9E  F01F         	call	_USBTransferOnePacket
 13484  0027E6  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13485  0027EA  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13486  0027EE  0012               	return	
 13487  0027F0                     __end_of_CDCTxService:
 13488                           	opt stack 0
 13489                           tosu	equ	0xFFF
 13490                           tosh	equ	0xFFE
 13491                           tosl	equ	0xFFD
 13492                           pclath	equ	0xFFA
 13493                           tblptru	equ	0xFF8
 13494                           tblptrh	equ	0xFF7
 13495                           tblptrl	equ	0xFF6
 13496                           tablat	equ	0xFF5
 13497                           prodh	equ	0xFF4
 13498                           prodl	equ	0xFF3
 13499                           intcon	equ	0xFF2
 13500                           intcon2	equ	0xFF1
 13501                           intcon3	equ	0xFF0
 13502                           indf0	equ	0xFEF
 13503                           postinc0	equ	0xFEE
 13504                           plusw0	equ	0xFEB
 13505                           fsr0h	equ	0xFEA
 13506                           fsr0l	equ	0xFE9
 13507                           wreg	equ	0xFE8
 13508                           indf1	equ	0xFE7
 13509                           postinc1	equ	0xFE6
 13510                           postdec1	equ	0xFE5
 13511                           plusw1	equ	0xFE3
 13512                           fsr1h	equ	0xFE2
 13513                           fsr1l	equ	0xFE1
 13514                           indf2	equ	0xFDF
 13515                           postinc2	equ	0xFDE
 13516                           postdec2	equ	0xFDD
 13517                           plusw2	equ	0xFDB
 13518                           fsr2h	equ	0xFDA
 13519                           fsr2l	equ	0xFD9
 13520                           status	equ	0xFD8
 13521                           
 13522 ;; *************** function _Term_MainSm *****************
 13523 ;; Defined at:
 13524 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  FwkBuildStr     4   79[BANK0 ] unsigned char [4]
 13529 ;;  FwkMinorStr     4   75[BANK0 ] unsigned char [4]
 13530 ;;  FwkMajorStr     4   71[BANK0 ] unsigned char [4]
 13531 ;;  FwkBuildYear    4    0        unsigned char [4]
 13532 ;;  FwkBuildMont    4    0        unsigned char [4]
 13533 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13534 ;; Return value:  Size  Location     Type
 13535 ;;                  1    wreg      void 
 13536 ;; Registers used:
 13537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13538 ;; Tracked objects:
 13539 ;;		On entry : 0/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13544 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13546 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13547 ;;Total ram usage:       12 bytes
 13548 ;; Hardware stack levels used:    1
 13549 ;; Hardware stack levels required when called:   16
 13550 ;; This function calls:
 13551 ;;		_OsTmr_GetTimerStatus
 13552 ;;		_OsTmr_StartTimer
 13553 ;;		_Terminal
 13554 ;;		_memset
 13555 ;;		_putUSBUSART
 13556 ;;		_sprintf
 13557 ;;		_strcat
 13558 ;;		_strcpy
 13559 ;;		_strlen
 13560 ;;		_utoa
 13561 ;; This function is called by:
 13562 ;;		_Term_MainTask
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           	psect	text55
 13567  0010B6                     __ptext55:
 13568                           	opt stack 0
 13569  0010B6                     _Term_MainSm:
 13570                           	opt stack 11
 13571                           
 13572                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13573                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13574                           ;term.c: 711: static UINT8 Data[50];
 13575                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13576                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13577                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13578                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13579                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13580                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13581                           ;term.c: 719: switch (TermMainSmState)
 13582                           
 13583                           ;incstack = 0
 13584  0010B6  D133               	goto	l2415
 13585  0010B8                     
 13586                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13587  0010B8  0ED0               	movlw	low Term_MainSm@TermDelay
 13588  0010BA  0100               	movlb	0	; () banked
 13589  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13590  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13591  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13592  0010C2  0ED0               	movlw	208
 13593  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13594  0010C6  0E07               	movlw	7
 13595  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13596  0010CA  0E00               	movlw	0
 13597  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13598  0010CE  0E00               	movlw	0
 13599  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13600  0010D2  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 13601                           
 13602                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13603  0010D6  0E01               	movlw	1
 13604  0010D8  0102               	movlb	2	; () banked
 13605  0010DA  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13606                           
 13607                           ;term.c: 726: break;
 13608  0010DC  0012               	return	
 13609  0010DE                     
 13610                           ; BSR set to: 2
 13611                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13612                           
 13613                           ; BSR set to: 2
 13614  0010DE  0ED0               	movlw	low Term_MainSm@TermDelay
 13615  0010E0  0100               	movlb	0	; () banked
 13616  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13617  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13618  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13619  0010E8  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 13620  0010EC  06E8               	decf	wreg,f,c
 13621  0010EE  A4D8               	btfss	status,2,c
 13622  0010F0  0012               	return	
 13623                           
 13624                           ;term.c: 731: {
 13625                           ;term.c: 733: TermMainSmState = Term_InitState;
 13626  0010F2  0E02               	movlw	2
 13627  0010F4  0102               	movlb	2	; () banked
 13628  0010F6  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13629                           
 13630                           ; BSR set to: 2
 13631                           ;term.c: 734: }
 13632                           ;term.c: 735: break;
 13633  0010F8  0012               	return	
 13634  0010FA                     
 13635                           ; BSR set to: 2
 13636                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13637                           
 13638                           ; BSR set to: 2
 13639  0010FA  0E1F               	movlw	31
 13640  0010FC  0100               	movlb	0	; () banked
 13641  0010FE  65D3               	cpfsgt	_USBDeviceState& (0+255),b
 13642  001100  0012               	return	
 13643                           
 13644                           ; BSR set to: 0
 13645  001102  B265               	btfsc	3941,1,c	;volatile
 13646  001104  0012               	return	
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;term.c: 743: else
 13650                           ;term.c: 744: {
 13651                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13652                           
 13653                           ; BSR set to: 0
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;term.c: 740: {
 13657                           ;term.c: 742: }
 13658  001106  0E03               	movlw	3
 13659  001108  0102               	movlb	2	; () banked
 13660  00110A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13661                           
 13662                           ; BSR set to: 2
 13663                           ;term.c: 747: }
 13664                           ;term.c: 748: break;
 13665  00110C  0012               	return	
 13666  00110E                     
 13667                           ; BSR set to: 2
 13668                           ;term.c: 752: if((cdc_trf_state == 0))
 13669                           
 13670                           ; BSR set to: 2
 13671  00110E  0100               	movlb	0	; () banked
 13672  001110  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13673  001112  A4D8               	btfss	status,2,c
 13674  001114  0012               	return	
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;term.c: 753: {
 13678                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13679  001116  0E2D               	movlw	low _Welcome
 13680  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13681  00111A  0EFD               	movlw	high _Welcome
 13682  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13683  00111E  0E88               	movlw	136
 13684  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13685  001122  EC4C  F02F         	call	_putUSBUSART	;wreg free
 13686                           
 13687                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13688  001126  0E04               	movlw	4
 13689  001128  0102               	movlb	2	; () banked
 13690  00112A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13691                           
 13692                           ; BSR set to: 2
 13693                           ;term.c: 758: }
 13694                           ;term.c: 759: break;
 13695  00112C  0012               	return	
 13696  00112E                     
 13697                           ; BSR set to: 2
 13698                           ;term.c: 763: if((cdc_trf_state == 0))
 13699                           
 13700                           ; BSR set to: 2
 13701  00112E  0100               	movlb	0	; () banked
 13702  001130  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13703  001132  A4D8               	btfss	status,2,c
 13704  001134  0012               	return	
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;term.c: 764: {
 13708                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13709  001136  0E3D               	movlw	low _MsgFormat
 13710  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13711  00113A  0EFC               	movlw	high _MsgFormat
 13712  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13713  00113E  0EEF               	movlw	239
 13714  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13715  001142  EC4C  F02F         	call	_putUSBUSART	;wreg free
 13716                           
 13717                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13718  001146  0E05               	movlw	5
 13719  001148  0102               	movlb	2	; () banked
 13720  00114A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13721                           
 13722                           ; BSR set to: 2
 13723                           ;term.c: 769: }
 13724                           ;term.c: 770: break;
 13725  00114C  0012               	return	
 13726  00114E                     
 13727                           ; BSR set to: 2
 13728                           ;term.c: 774: if((cdc_trf_state == 0))
 13729                           
 13730                           ; BSR set to: 2
 13731  00114E  0100               	movlb	0	; () banked
 13732  001150  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13733  001152  A4D8               	btfss	status,2,c
 13734  001154  0012               	return	
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;term.c: 775: {
 13738                           ;term.c: 777: memset(Data,0,50);
 13739  001156  0E54               	movlw	low Term_MainSm@Data
 13740  001158  6F7D               	movwf	memset@p1& (0+255),b
 13741  00115A  0E04               	movlw	high Term_MainSm@Data
 13742  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13743  00115E  0E00               	movlw	0
 13744  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13745  001162  0E00               	movlw	0
 13746  001164  6F7F               	movwf	memset@c& (0+255),b
 13747  001166  0E00               	movlw	0
 13748  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13749  00116A  0E32               	movlw	50
 13750  00116C  6F81               	movwf	memset@n& (0+255),b
 13751  00116E  ECF4  F02D         	call	_memset	;wreg free
 13752                           
 13753                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13754  001172  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13755  001174  0100               	movlb	0	; () banked
 13756  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13757  001178  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13758  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13759  00117C  0E00               	movlw	0
 13760  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13761  001180  0E01               	movlw	1
 13762  001182  6F8C               	movwf	utoa@val& (0+255),b
 13763  001184  0E00               	movlw	0
 13764  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13765  001188  0E0A               	movlw	10
 13766  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13767  00118C  EC5E  F021         	call	_utoa	;wreg free
 13768                           
 13769                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13770  001190  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13771  001192  0100               	movlb	0	; () banked
 13772  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13773  001196  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13774  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13775  00119A  0E00               	movlw	0
 13776  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13777  00119E  0E02               	movlw	2
 13778  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13779  0011A2  0E00               	movlw	0
 13780  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13781  0011A6  0E0A               	movlw	10
 13782  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13783  0011AA  EC5E  F021         	call	_utoa	;wreg free
 13784                           
 13785                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13786  0011AE  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13787  0011B0  0100               	movlb	0	; () banked
 13788  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13789  0011B4  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13790  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13791  0011B8  0E00               	movlw	0
 13792  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13793  0011BC  0E00               	movlw	0
 13794  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13795  0011C0  0E00               	movlw	0
 13796  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13797  0011C4  0E0A               	movlw	10
 13798  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13799  0011C8  EC5E  F021         	call	_utoa	;wreg free
 13800                           
 13801                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13802  0011CC  0E54               	movlw	low Term_MainSm@Data
 13803  0011CE  0100               	movlb	0	; () banked
 13804  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13805  0011D2  0E04               	movlw	high Term_MainSm@Data
 13806  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13807  0011D6  0EDD               	movlw	low STR_23
 13808  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13809  0011DA  0EFE               	movlw	high STR_23
 13810  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13811  0011DE  ECC3  F02D         	call	_strcpy	;wreg free
 13812                           
 13813                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13814  0011E2  0E54               	movlw	low Term_MainSm@Data
 13815  0011E4  0100               	movlb	0	; () banked
 13816  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13817  0011E8  0E04               	movlw	high Term_MainSm@Data
 13818  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13819  0011EC  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13820  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13821  0011F0  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13822  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13823  0011F4  EC8F  F028         	call	_strcat	;wreg free
 13824                           
 13825                           ;term.c: 784: strcat(Data,".");
 13826  0011F8  0E54               	movlw	low Term_MainSm@Data
 13827  0011FA  0100               	movlb	0	; () banked
 13828  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13829  0011FE  0E04               	movlw	high Term_MainSm@Data
 13830  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13831  001202  0EF4               	movlw	low STR_24
 13832  001204  6F7F               	movwf	strcat@from& (0+255),b
 13833  001206  0EFF               	movlw	high STR_24
 13834  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13835  00120A  EC8F  F028         	call	_strcat	;wreg free
 13836                           
 13837                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13838  00120E  0E54               	movlw	low Term_MainSm@Data
 13839  001210  0100               	movlb	0	; () banked
 13840  001212  6F7D               	movwf	strcat@to& (0+255),b
 13841  001214  0E04               	movlw	high Term_MainSm@Data
 13842  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13843  001218  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13844  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13845  00121C  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13846  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13847  001220  EC8F  F028         	call	_strcat	;wreg free
 13848                           
 13849                           ;term.c: 786: strcat(Data,".");
 13850  001224  0E54               	movlw	low Term_MainSm@Data
 13851  001226  0100               	movlb	0	; () banked
 13852  001228  6F7D               	movwf	strcat@to& (0+255),b
 13853  00122A  0E04               	movlw	high Term_MainSm@Data
 13854  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13855  00122E  0EF4               	movlw	low STR_24
 13856  001230  6F7F               	movwf	strcat@from& (0+255),b
 13857  001232  0EFF               	movlw	high STR_24
 13858  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13859  001236  EC8F  F028         	call	_strcat	;wreg free
 13860                           
 13861                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13862  00123A  0E54               	movlw	low Term_MainSm@Data
 13863  00123C  0100               	movlb	0	; () banked
 13864  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13865  001240  0E04               	movlw	high Term_MainSm@Data
 13866  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13867  001244  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13868  001246  6F7F               	movwf	strcat@from& (0+255),b
 13869  001248  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13870  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13871  00124C  EC8F  F028         	call	_strcat	;wreg free
 13872                           
 13873                           ;term.c: 788: strcat(Data,"\r\n");
 13874  001250  0E54               	movlw	low Term_MainSm@Data
 13875  001252  0100               	movlb	0	; () banked
 13876  001254  6F7D               	movwf	strcat@to& (0+255),b
 13877  001256  0E04               	movlw	high Term_MainSm@Data
 13878  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13879  00125A  0E91               	movlw	low (STR_21+39)
 13880  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13881  00125E  0EFE               	movlw	high (STR_21+39)
 13882  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13883  001262  EC8F  F028         	call	_strcat	;wreg free
 13884                           
 13885                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13886  001266  0E54               	movlw	low Term_MainSm@Data
 13887  001268  0100               	movlb	0	; () banked
 13888  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13889  00126C  0E04               	movlw	high Term_MainSm@Data
 13890  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13891  001270  0E54               	movlw	low Term_MainSm@Data
 13892  001272  6F7D               	movwf	strlen@s& (0+255),b
 13893  001274  0E04               	movlw	high Term_MainSm@Data
 13894  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13895  001278  ECA3  F02C         	call	_strlen	;wreg free
 13896  00127C  0100               	movlb	0	; () banked
 13897  00127E  517D               	movf	?_strlen& (0+255),w,b
 13898  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13899  001282  EC4C  F02F         	call	_putUSBUSART	;wreg free
 13900                           
 13901                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13902  001286  0E06               	movlw	6
 13903  001288  0102               	movlb	2	; () banked
 13904  00128A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13905                           
 13906                           ; BSR set to: 2
 13907                           ;term.c: 793: }
 13908                           ;term.c: 794: break;
 13909  00128C  0012               	return	
 13910  00128E                     
 13911                           ; BSR set to: 2
 13912                           ;term.c: 798: if((cdc_trf_state == 0))
 13913                           
 13914                           ; BSR set to: 2
 13915  00128E  0100               	movlb	0	; () banked
 13916  001290  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13917  001292  A4D8               	btfss	status,2,c
 13918  001294  0012               	return	
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;term.c: 799: {
 13922                           ;term.c: 801: memset(Data,0,50);
 13923  001296  0E54               	movlw	low Term_MainSm@Data
 13924  001298  6F7D               	movwf	memset@p1& (0+255),b
 13925  00129A  0E04               	movlw	high Term_MainSm@Data
 13926  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13927  00129E  0E00               	movlw	0
 13928  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13929  0012A2  0E00               	movlw	0
 13930  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13931  0012A6  0E00               	movlw	0
 13932  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13933  0012AA  0E32               	movlw	50
 13934  0012AC  6F81               	movwf	memset@n& (0+255),b
 13935  0012AE  ECF4  F02D         	call	_memset	;wreg free
 13936                           
 13937                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 13 2022");
 13938  0012B2  0E54               	movlw	low Term_MainSm@Data
 13939  0012B4  0100               	movlb	0	; () banked
 13940  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13941  0012B8  0E04               	movlw	high Term_MainSm@Data
 13942  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13943  0012BC  0E18               	movlw	low STR_27
 13944  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13945  0012C0  0EFF               	movlw	high STR_27
 13946  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13947  0012C4  0EB5               	movlw	low STR_28
 13948  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13949  0012C8  0EFF               	movlw	high STR_28
 13950  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13951  0012CC  EC7C  F01C         	call	_sprintf	;wreg free
 13952                           
 13953                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13954  0012D0  0E54               	movlw	low Term_MainSm@Data
 13955  0012D2  0100               	movlb	0	; () banked
 13956  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13957  0012D6  0E04               	movlw	high Term_MainSm@Data
 13958  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13959  0012DA  0E54               	movlw	low Term_MainSm@Data
 13960  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13961  0012DE  0E04               	movlw	high Term_MainSm@Data
 13962  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13963  0012E2  ECA3  F02C         	call	_strlen	;wreg free
 13964  0012E6  0100               	movlb	0	; () banked
 13965  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13966  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13967  0012EC  EC4C  F02F         	call	_putUSBUSART	;wreg free
 13968                           
 13969                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13970  0012F0  0E07               	movlw	7
 13971  0012F2  0102               	movlb	2	; () banked
 13972  0012F4  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13973                           
 13974                           ; BSR set to: 2
 13975                           ;term.c: 808: }
 13976                           ;term.c: 809: break;
 13977  0012F6  0012               	return	
 13978  0012F8                     
 13979                           ; BSR set to: 2
 13980                           ;term.c: 813: if((cdc_trf_state == 0))
 13981                           
 13982                           ; BSR set to: 2
 13983  0012F8  0100               	movlb	0	; () banked
 13984  0012FA  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13985  0012FC  A4D8               	btfss	status,2,c
 13986  0012FE  0012               	return	
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;term.c: 814: {
 13990                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13991  001300  0E3D               	movlw	low _MsgReady
 13992  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13993  001304  0EFE               	movlw	high _MsgReady
 13994  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13995  001308  0E16               	movlw	22
 13996  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13997  00130C  EC4C  F02F         	call	_putUSBUSART	;wreg free
 13998                           
 13999                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14000  001310  0E08               	movlw	8
 14001  001312  0102               	movlb	2	; () banked
 14002  001314  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14003                           
 14004                           ; BSR set to: 2
 14005                           ;term.c: 819: }
 14006                           ;term.c: 820: break;
 14007  001316  0012               	return	
 14008  001318                     
 14009                           ; BSR set to: 2
 14010                           ;term.c: 824: Terminal();
 14011                           
 14012                           ; BSR set to: 2
 14013  001318  EC68  F000         	call	_Terminal	;wreg free
 14014                           
 14015                           ;term.c: 829: }
 14016                           
 14017                           ;term.c: 828: break;
 14018                           
 14019                           ;term.c: 827: default:
 14020                           
 14021                           ;term.c: 825: break;
 14022  00131C  0012               	return	
 14023  00131E                     l2415:
 14024  00131E  0102               	movlb	2	; () banked
 14025  001320  51EA               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14026                           
 14027                           ; Switch size 1, requested type "space"
 14028                           ; Number of cases is 9, Range of values is 0 to 8
 14029                           ; switch strategies available:
 14030                           ; Name         Instructions Cycles
 14031                           ; simple_byte           28    15 (average)
 14032                           ;	Chosen strategy is simple_byte
 14033  001322  0A00               	xorlw	0	; case 0
 14034  001324  B4D8               	btfsc	status,2,c
 14035  001326  D6C8               	goto	l2416
 14036  001328  0A01               	xorlw	1	; case 1
 14037  00132A  B4D8               	btfsc	status,2,c
 14038  00132C  D6D8               	goto	l2418
 14039  00132E  0A03               	xorlw	3	; case 2
 14040  001330  B4D8               	btfsc	status,2,c
 14041  001332  D6E3               	goto	l2420
 14042  001334  0A01               	xorlw	1	; case 3
 14043  001336  B4D8               	btfsc	status,2,c
 14044  001338  D6EA               	goto	l2425
 14045  00133A  0A07               	xorlw	7	; case 4
 14046  00133C  B4D8               	btfsc	status,2,c
 14047  00133E  D6F7               	goto	l2427
 14048  001340  0A01               	xorlw	1	; case 5
 14049  001342  B4D8               	btfsc	status,2,c
 14050  001344  D704               	goto	l2429
 14051  001346  0A03               	xorlw	3	; case 6
 14052  001348  B4D8               	btfsc	status,2,c
 14053  00134A  D7A1               	goto	l2431
 14054  00134C  0A01               	xorlw	1	; case 7
 14055  00134E  B4D8               	btfsc	status,2,c
 14056  001350  D7D3               	goto	l2433
 14057  001352  0A0F               	xorlw	15	; case 8
 14058  001354  A4D8               	btfss	status,2,c
 14059  001356  0012               	return	
 14060  001358  D7DF               	goto	l2435
 14061  00135A                     __end_of_Term_MainSm:
 14062                           	opt stack 0
 14063                           tosu	equ	0xFFF
 14064                           tosh	equ	0xFFE
 14065                           tosl	equ	0xFFD
 14066                           pclath	equ	0xFFA
 14067                           tblptru	equ	0xFF8
 14068                           tblptrh	equ	0xFF7
 14069                           tblptrl	equ	0xFF6
 14070                           tablat	equ	0xFF5
 14071                           prodh	equ	0xFF4
 14072                           prodl	equ	0xFF3
 14073                           intcon	equ	0xFF2
 14074                           intcon2	equ	0xFF1
 14075                           intcon3	equ	0xFF0
 14076                           indf0	equ	0xFEF
 14077                           postinc0	equ	0xFEE
 14078                           plusw0	equ	0xFEB
 14079                           fsr0h	equ	0xFEA
 14080                           fsr0l	equ	0xFE9
 14081                           wreg	equ	0xFE8
 14082                           indf1	equ	0xFE7
 14083                           postinc1	equ	0xFE6
 14084                           postdec1	equ	0xFE5
 14085                           plusw1	equ	0xFE3
 14086                           fsr1h	equ	0xFE2
 14087                           fsr1l	equ	0xFE1
 14088                           indf2	equ	0xFDF
 14089                           postinc2	equ	0xFDE
 14090                           postdec2	equ	0xFDD
 14091                           plusw2	equ	0xFDB
 14092                           fsr2h	equ	0xFDA
 14093                           fsr2l	equ	0xFD9
 14094                           status	equ	0xFD8
 14095                           
 14096 ;; *************** function _strlen *****************
 14097 ;; Defined at:
 14098 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14101 ;;		 -> Term_MainSm@Data(50), 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14104 ;;		 -> Term_MainSm@Data(50), 
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  2   29[BANK0 ] unsigned int 
 14107 ;; Registers used:
 14108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14109 ;; Tracked objects:
 14110 ;;		On entry : 0/0
 14111 ;;		On exit  : 0/0
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14118 ;;Total ram usage:        6 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; Hardware stack levels required when called:   11
 14121 ;; This function calls:
 14122 ;;		Nothing
 14123 ;; This function is called by:
 14124 ;;		_Term_MainSm
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           
 14128                           	psect	text56
 14129  005946                     __ptext56:
 14130                           	opt stack 0
 14131  005946                     _strlen:
 14132                           	opt stack 15
 14133                           
 14134                           ;incstack = 0
 14135  005946  C07D  F081         	movff	strlen@s,strlen@cp
 14136  00594A  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14137  00594E  D003               	goto	l3221
 14138  005950  0100               	movlb	0	; () banked
 14139  005952  4B81               	infsnz	strlen@cp& (0+255),f,b
 14140  005954  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14141  005956                     l3221:
 14142                           
 14143                           ; BSR set to: 0
 14144  005956  C081  FFD9         	movff	strlen@cp,fsr2l
 14145  00595A  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14146  00595E  50DF               	movf	indf2,w,c
 14147  005960  A4D8               	btfss	status,2,c
 14148  005962  D7F6               	goto	l3222
 14149  005964  C07D  F07F         	movff	strlen@s,??_strlen
 14150  005968  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14151  00596C  0100               	movlb	0	; () banked
 14152  00596E  1F7F               	comf	??_strlen& (0+255),f,b
 14153  005970  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14154  005972  4B7F               	infsnz	??_strlen& (0+255),f,b
 14155  005974  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14156  005976  5181               	movf	strlen@cp& (0+255),w,b
 14157  005978  257F               	addwf	??_strlen& (0+255),w,b
 14158  00597A  6F7D               	movwf	?_strlen& (0+255),b
 14159  00597C  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14160  00597E  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14161  005980  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14162  005982  0012               	return	
 14163  005984                     __end_of_strlen:
 14164                           	opt stack 0
 14165                           tosu	equ	0xFFF
 14166                           tosh	equ	0xFFE
 14167                           tosl	equ	0xFFD
 14168                           pclath	equ	0xFFA
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon2	equ	0xFF1
 14177                           intcon3	equ	0xFF0
 14178                           indf0	equ	0xFEF
 14179                           postinc0	equ	0xFEE
 14180                           plusw0	equ	0xFEB
 14181                           fsr0h	equ	0xFEA
 14182                           fsr0l	equ	0xFE9
 14183                           wreg	equ	0xFE8
 14184                           indf1	equ	0xFE7
 14185                           postinc1	equ	0xFE6
 14186                           postdec1	equ	0xFE5
 14187                           plusw1	equ	0xFE3
 14188                           fsr1h	equ	0xFE2
 14189                           fsr1l	equ	0xFE1
 14190                           indf2	equ	0xFDF
 14191                           postinc2	equ	0xFDE
 14192                           postdec2	equ	0xFDD
 14193                           plusw2	equ	0xFDB
 14194                           fsr2h	equ	0xFDA
 14195                           fsr2l	equ	0xFD9
 14196                           status	equ	0xFD8
 14197                           
 14198 ;; *************** function _strcat *****************
 14199 ;; Defined at:
 14200 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14203 ;;		 -> Term_MainSm@Data(50), 
 14204 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14205 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14206 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14209 ;;		 -> Term_MainSm@Data(50), 
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  2   29[BANK0 ] PTR unsigned char 
 14212 ;; Registers used:
 14213 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14223 ;;Total ram usage:        6 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:   11
 14226 ;; This function calls:
 14227 ;;		Nothing
 14228 ;; This function is called by:
 14229 ;;		_Term_MainSm
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text57
 14234  00511E                     __ptext57:
 14235                           	opt stack 0
 14236  00511E                     _strcat:
 14237                           	opt stack 15
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;incstack = 0
 14241  00511E  C07D  F081         	movff	strcat@to,strcat@cp
 14242  005122  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14243  005126  D003               	goto	l3206
 14244  005128  0100               	movlb	0	; () banked
 14245  00512A  4B81               	infsnz	strcat@cp& (0+255),f,b
 14246  00512C  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14247  00512E                     l3206:
 14248                           
 14249                           ; BSR set to: 0
 14250  00512E  C081  FFD9         	movff	strcat@cp,fsr2l
 14251  005132  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14252  005136  50DF               	movf	indf2,w,c
 14253  005138  B4D8               	btfsc	status,2,c
 14254  00513A  D006               	goto	l3209
 14255  00513C  D7F5               	goto	l3207
 14256  00513E  0100               	movlb	0	; () banked
 14257  005140  4B81               	infsnz	strcat@cp& (0+255),f,b
 14258  005142  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14259  005144  4B7F               	infsnz	strcat@from& (0+255),f,b
 14260  005146  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14261  005148                     l3209:
 14262                           
 14263                           ; BSR set to: 0
 14264  005148  C07F  FFF6         	movff	strcat@from,tblptrl
 14265  00514C  C080  FFF7         	movff	strcat@from+1,tblptrh
 14266  005150  6AF8               	clrf	tblptru,c
 14267  005152  C081  FFD9         	movff	strcat@cp,fsr2l
 14268  005156  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14269  00515A  0E0E               	movlw	(high __ramtop+-1)
 14270  00515C  64F7               	cpfsgt	tblptrh,c
 14271  00515E  D003               	bra	u7887
 14272  005160  0008               	tblrd		*
 14273  005162  50F5               	movf	tablat,w,c
 14274  005164  D005               	bra	u7880
 14275  005166                     u7887:
 14276  005166  CFF6 FFE9          	movff	tblptrl,fsr0l
 14277  00516A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14278  00516E  50EF               	movf	indf0,w,c
 14279  005170                     u7880:
 14280  005170  6EDF               	movwf	indf2,c
 14281  005172  50DF               	movf	indf2,w,c
 14282  005174  B4D8               	btfsc	status,2,c
 14283  005176  0012               	return	
 14284  005178  D7E2               	goto	l3210
 14285  00517A                     __end_of_strcat:
 14286                           	opt stack 0
 14287                           tosu	equ	0xFFF
 14288                           tosh	equ	0xFFE
 14289                           tosl	equ	0xFFD
 14290                           pclath	equ	0xFFA
 14291                           tblptru	equ	0xFF8
 14292                           tblptrh	equ	0xFF7
 14293                           tblptrl	equ	0xFF6
 14294                           tablat	equ	0xFF5
 14295                           prodh	equ	0xFF4
 14296                           prodl	equ	0xFF3
 14297                           intcon	equ	0xFF2
 14298                           intcon2	equ	0xFF1
 14299                           intcon3	equ	0xFF0
 14300                           indf0	equ	0xFEF
 14301                           postinc0	equ	0xFEE
 14302                           plusw0	equ	0xFEB
 14303                           fsr0h	equ	0xFEA
 14304                           fsr0l	equ	0xFE9
 14305                           wreg	equ	0xFE8
 14306                           indf1	equ	0xFE7
 14307                           postinc1	equ	0xFE6
 14308                           postdec1	equ	0xFE5
 14309                           plusw1	equ	0xFE3
 14310                           fsr1h	equ	0xFE2
 14311                           fsr1l	equ	0xFE1
 14312                           indf2	equ	0xFDF
 14313                           postinc2	equ	0xFDE
 14314                           postdec2	equ	0xFDD
 14315                           plusw2	equ	0xFDB
 14316                           fsr2h	equ	0xFDA
 14317                           fsr2l	equ	0xFD9
 14318                           status	equ	0xFD8
 14319                           
 14320 ;; *************** function _sprintf *****************
 14321 ;; Defined at:
 14322 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14325 ;;		 -> Term_MainSm@Data(50), 
 14326 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14327 ;;		 -> STR_27(17), 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  tmpval          4    0        struct .
 14330 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14331 ;;		 -> STR_31(7), STR_28(12), 
 14332 ;;  ap              2   36[BANK0 ] PTR void [1]
 14333 ;;		 -> ?_sprintf(2), 
 14334 ;;  len             2    0        unsigned int 
 14335 ;;  val             2    0        unsigned int 
 14336 ;;  c               1   38[BANK0 ] char 
 14337 ;;  flag            1   35[BANK0 ] unsigned char 
 14338 ;;  prec            1    0        char 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  2   29[BANK0 ] int 
 14341 ;; Registers used:
 14342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14348 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14349 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14351 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14352 ;;Total ram usage:       12 bytes
 14353 ;; Hardware stack levels used:    1
 14354 ;; Hardware stack levels required when called:   11
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_Term_MainSm
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362                           	psect	text58
 14363  0038F8                     __ptext58:
 14364                           	opt stack 0
 14365  0038F8                     _sprintf:
 14366                           	opt stack 15
 14367                           
 14368                           ;doprnt.c: 494: va_list ap;
 14369                           ;doprnt.c: 499: signed char c;
 14370                           ;doprnt.c: 506: signed char prec;
 14371                           ;doprnt.c: 508: unsigned char flag;
 14372                           ;doprnt.c: 523: union {
 14373                           ;doprnt.c: 524: unsigned long vd;
 14374                           ;doprnt.c: 525: double integ;
 14375                           ;doprnt.c: 526: } tmpval;
 14376                           ;doprnt.c: 528: unsigned int val;
 14377                           ;doprnt.c: 529: unsigned len;
 14378                           ;doprnt.c: 530: const char * cp;
 14379                           ;doprnt.c: 533: *ap = __va_start();
 14380                           
 14381                           ;incstack = 0
 14382  0038F8  0E81               	movlw	low (?_sprintf+4)
 14383  0038FA  0100               	movlb	0	; () banked
 14384  0038FC  6F84               	movwf	sprintf@ap& (0+255),b
 14385  0038FE  0E00               	movlw	high (?_sprintf+4)
 14386  003900  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14387                           
 14388                           ;doprnt.c: 536: while(c = *f++) {
 14389  003902  D04E               	goto	l2610
 14390  003904                     
 14391                           ; BSR set to: 0
 14392                           ;doprnt.c: 538: if(c != '%')
 14393                           
 14394                           ; BSR set to: 0
 14395  003904  0E25               	movlw	37
 14396  003906  1986               	xorwf	sprintf@c& (0+255),w,b
 14397  003908  B4D8               	btfsc	status,2,c
 14398  00390A  D009               	goto	l2600
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;doprnt.c: 540: {
 14402                           ;doprnt.c: 541: ((*sp++ = (c)));
 14403  00390C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14404  003910  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14405  003914  C086  FFDF         	movff	sprintf@c,indf2
 14406                           
 14407                           ; BSR set to: 0
 14408  003918  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14409  00391A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14410                           
 14411                           ;doprnt.c: 542: continue;
 14412  00391C  D041               	goto	l2610
 14413  00391E                     l2600:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;doprnt.c: 543: }
 14417                           ;doprnt.c: 548: flag = 0;
 14418                           
 14419                           ; BSR set to: 0
 14420  00391E  0E00               	movlw	0
 14421  003920  6F83               	movwf	sprintf@flag& (0+255),b
 14422                           
 14423                           ;doprnt.c: 635: switch(c = *f++) {
 14424  003922  D02E               	goto	l2601
 14425  003924                     
 14426                           ; BSR set to: 0
 14427                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14428                           
 14429                           ; BSR set to: 0
 14430  003924  C084  FFD9         	movff	sprintf@ap,fsr2l
 14431  003928  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14432  00392C  CFDE F087          	movff	postinc2,sprintf@cp
 14433  003930  CFDD F088          	movff	postdec2,sprintf@cp+1
 14434                           
 14435                           ; BSR set to: 0
 14436  003934  0E02               	movlw	2
 14437  003936  2784               	addwf	sprintf@ap& (0+255),f,b
 14438  003938  0E00               	movlw	0
 14439  00393A  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;doprnt.c: 740: if(!cp)
 14443  00393C  5187               	movf	sprintf@cp& (0+255),w,b
 14444  00393E  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14445  003940  A4D8               	btfss	status,2,c
 14446  003942  D014               	goto	l2606
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;doprnt.c: 741: cp = "(null)";
 14450  003944  0ED7               	movlw	low STR_31
 14451  003946  6F87               	movwf	sprintf@cp& (0+255),b
 14452  003948  0EFF               	movlw	high STR_31
 14453  00394A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;doprnt.c: 777: while(*cp)
 14457  00394C  D00F               	goto	l2606
 14458  00394E                     
 14459                           ; BSR set to: 0
 14460                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14461                           
 14462                           ; BSR set to: 0
 14463  00394E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14464  003952  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14465  003956                     	if	0	;tblptru may be non-zero
 14466  003956                     	endif
 14467  003956                     	if	0	;tblptru may be non-zero
 14468  003956                     	endif
 14469  003956  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14470  00395A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14471  00395E  0008               	tblrd		*
 14472  003960  CFF5 FFDF          	movff	tablat,indf2
 14473                           
 14474                           ; BSR set to: 0
 14475  003964  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14476  003966  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14477                           
 14478                           ; BSR set to: 0
 14479  003968  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14480  00396A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14481  00396C                     l2606:
 14482                           
 14483                           ; BSR set to: 0
 14484                           
 14485                           ; BSR set to: 0
 14486  00396C  C087  FFF6         	movff	sprintf@cp,tblptrl
 14487  003970  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14488  003974                     	if	0	;tblptru may be non-zero
 14489  003974                     	endif
 14490  003974                     	if	0	;tblptru may be non-zero
 14491  003974                     	endif
 14492  003974  0008               	tblrd		*
 14493  003976  50F5               	movf	tablat,w,c
 14494  003978  0900               	iorlw	0
 14495  00397A  B4D8               	btfsc	status,2,c
 14496  00397C  D011               	goto	l2610
 14497  00397E  D7E7               	goto	l2607
 14498  003980                     l2601:
 14499                           
 14500                           ; BSR set to: 0
 14501                           
 14502                           ; BSR set to: 0
 14503  003980  C07F  FFF6         	movff	sprintf@f,tblptrl
 14504  003984  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14505  003988  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14506  00398A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14507  00398C                     	if	0	;tblptru may be non-zero
 14508  00398C                     	endif
 14509  00398C                     	if	0	;tblptru may be non-zero
 14510  00398C                     	endif
 14511  00398C  0008               	tblrd		*
 14512  00398E  CFF5 F086          	movff	tablat,sprintf@c
 14513  003992  5186               	movf	sprintf@c& (0+255),w,b
 14514                           
 14515                           ; Switch size 1, requested type "space"
 14516                           ; Number of cases is 2, Range of values is 0 to 115
 14517                           ; switch strategies available:
 14518                           ; Name         Instructions Cycles
 14519                           ; simple_byte            7     4 (average)
 14520                           ;	Chosen strategy is simple_byte
 14521  003994  0A00               	xorlw	0	; case 0
 14522  003996  B4D8               	btfsc	status,2,c
 14523  003998  D00F               	goto	u7940
 14524  00399A  0A73               	xorlw	115	; case 115
 14525  00399C  B4D8               	btfsc	status,2,c
 14526  00399E  D7C2               	goto	l2604
 14527  0039A0                     l2610:
 14528                           
 14529                           ; BSR set to: 0
 14530                           
 14531                           ; BSR set to: 0
 14532                           
 14533                           ;doprnt.c: 1422: {
 14534                           
 14535                           ; BSR set to: 0
 14536  0039A0  C07F  FFF6         	movff	sprintf@f,tblptrl
 14537  0039A4  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14538  0039A8  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14539  0039AA  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14540  0039AC                     	if	0	;tblptru may be non-zero
 14541  0039AC                     	endif
 14542  0039AC                     	if	0	;tblptru may be non-zero
 14543  0039AC                     	endif
 14544  0039AC  0008               	tblrd		*
 14545  0039AE  CFF5 F086          	movff	tablat,sprintf@c
 14546  0039B2  5186               	movf	sprintf@c& (0+255),w,b
 14547  0039B4  A4D8               	btfss	status,2,c
 14548  0039B6  D7A6               	goto	l2599
 14549  0039B8                     u7940:
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;doprnt.c: 1538: *sp = 0;
 14553                           
 14554                           ; BSR set to: 0
 14555                           
 14556                           ;doprnt.c: 1469: }
 14557                           ;doprnt.c: 1533: }
 14558                           ;doprnt.c: 1535: alldone:
 14559                           
 14560                           ; BSR set to: 0
 14561  0039B8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14562  0039BC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14563  0039C0  0E00               	movlw	0
 14564  0039C2  6EDF               	movwf	indf2,c
 14565  0039C4  0012               	return	
 14566  0039C6                     __end_of_sprintf:
 14567                           	opt stack 0
 14568                           tosu	equ	0xFFF
 14569                           tosh	equ	0xFFE
 14570                           tosl	equ	0xFFD
 14571                           pclath	equ	0xFFA
 14572                           tblptru	equ	0xFF8
 14573                           tblptrh	equ	0xFF7
 14574                           tblptrl	equ	0xFF6
 14575                           tablat	equ	0xFF5
 14576                           prodh	equ	0xFF4
 14577                           prodl	equ	0xFF3
 14578                           intcon	equ	0xFF2
 14579                           intcon2	equ	0xFF1
 14580                           intcon3	equ	0xFF0
 14581                           indf0	equ	0xFEF
 14582                           postinc0	equ	0xFEE
 14583                           plusw0	equ	0xFEB
 14584                           fsr0h	equ	0xFEA
 14585                           fsr0l	equ	0xFE9
 14586                           wreg	equ	0xFE8
 14587                           indf1	equ	0xFE7
 14588                           postinc1	equ	0xFE6
 14589                           postdec1	equ	0xFE5
 14590                           plusw1	equ	0xFE3
 14591                           fsr1h	equ	0xFE2
 14592                           fsr1l	equ	0xFE1
 14593                           indf2	equ	0xFDF
 14594                           postinc2	equ	0xFDE
 14595                           postdec2	equ	0xFDD
 14596                           plusw2	equ	0xFDB
 14597                           fsr2h	equ	0xFDA
 14598                           fsr2l	equ	0xFD9
 14599                           status	equ	0xFD8
 14600                           
 14601 ;; *************** function _memset *****************
 14602 ;; Defined at:
 14603 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;  p1              2   29[BANK0 ] PTR void 
 14606 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14607 ;;  c               2   31[BANK0 ] int 
 14608 ;;  n               2   33[BANK0 ] unsigned int 
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14611 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  2   29[BANK0 ] PTR void 
 14614 ;; Registers used:
 14615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14621 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14625 ;;Total ram usage:        8 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:   11
 14628 ;; This function calls:
 14629 ;;		Nothing
 14630 ;; This function is called by:
 14631 ;;		_USBDeviceInit
 14632 ;;		_USBStdSetCfgHandler
 14633 ;;		_Term_MainSm
 14634 ;; This function uses a non-reentrant model
 14635 ;;
 14636                           
 14637                           	psect	text59
 14638  005BE8                     __ptext59:
 14639                           	opt stack 0
 14640  005BE8                     _memset:
 14641                           	opt stack 14
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;incstack = 0
 14645  005BE8  C07D  F083         	movff	memset@p1,memset@p
 14646  005BEC  C07E  F084         	movff	memset@p1+1,memset@p+1
 14647  005BF0  D009               	goto	l3080
 14648  005BF2                     l7669:
 14649  005BF2  C083  FFD9         	movff	memset@p,fsr2l
 14650  005BF6  C084  FFDA         	movff	memset@p+1,fsr2h
 14651  005BFA  C07F  FFDF         	movff	memset@c,indf2
 14652  005BFE  0100               	movlb	0	; () banked
 14653  005C00  4B83               	infsnz	memset@p& (0+255),f,b
 14654  005C02  2B84               	incf	(memset@p+1)& (0+255),f,b
 14655  005C04                     l3080:
 14656                           
 14657                           ; BSR set to: 0
 14658  005C04  0100               	movlb	0	; () banked
 14659  005C06  0781               	decf	memset@n& (0+255),f,b
 14660  005C08  A0D8               	btfss	status,0,c
 14661  005C0A  0782               	decf	(memset@n+1)& (0+255),f,b
 14662  005C0C  2981               	incf	memset@n& (0+255),w,b
 14663  005C0E  E1F1               	bnz	l7669
 14664  005C10  2982               	incf	(memset@n+1)& (0+255),w,b
 14665  005C12  B4D8               	btfsc	status,2,c
 14666  005C14  0012               	return	
 14667  005C16  D7ED               	goto	l3081
 14668  005C18                     __end_of_memset:
 14669                           	opt stack 0
 14670                           tosu	equ	0xFFF
 14671                           tosh	equ	0xFFE
 14672                           tosl	equ	0xFFD
 14673                           pclath	equ	0xFFA
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           intcon	equ	0xFF2
 14681                           intcon2	equ	0xFF1
 14682                           intcon3	equ	0xFF0
 14683                           indf0	equ	0xFEF
 14684                           postinc0	equ	0xFEE
 14685                           plusw0	equ	0xFEB
 14686                           fsr0h	equ	0xFEA
 14687                           fsr0l	equ	0xFE9
 14688                           wreg	equ	0xFE8
 14689                           indf1	equ	0xFE7
 14690                           postinc1	equ	0xFE6
 14691                           postdec1	equ	0xFE5
 14692                           plusw1	equ	0xFE3
 14693                           fsr1h	equ	0xFE2
 14694                           fsr1l	equ	0xFE1
 14695                           indf2	equ	0xFDF
 14696                           postinc2	equ	0xFDE
 14697                           postdec2	equ	0xFDD
 14698                           plusw2	equ	0xFDB
 14699                           fsr2h	equ	0xFDA
 14700                           fsr2l	equ	0xFD9
 14701                           status	equ	0xFD8
 14702                           
 14703 ;; *************** function _Terminal *****************
 14704 ;; Defined at:
 14705 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;		None
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;  i               1   68[BANK0 ] unsigned char 
 14710 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14711 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14712 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14713 ;;  Index           1   70[BANK0 ] unsigned char 
 14714 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  1    wreg      void 
 14717 ;; Registers used:
 14718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14725 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14728 ;;Total ram usage:      455 bytes
 14729 ;; Hardware stack levels used:    1
 14730 ;; Hardware stack levels required when called:   15
 14731 ;; This function calls:
 14732 ;;		_I2cSlv_I2cReadMsgSts
 14733 ;;		_I2cSlv_ReceiveI2cMsg
 14734 ;;		_I2cSlv_SendI2cMsg
 14735 ;;		_OsTmr_Wait
 14736 ;;		_atoi
 14737 ;;		_getsUSBUSART
 14738 ;;		_itoa
 14739 ;;		_putUSBUSART
 14740 ;;		_strcpy
 14741 ;;		_strtol
 14742 ;;		_xtoi
 14743 ;; This function is called by:
 14744 ;;		_Term_MainSm
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text60
 14749  0000D0                     __ptext60:
 14750                           	opt stack 0
 14751  0000D0                     _Terminal:
 14752                           	opt stack 11
 14753                           
 14754                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14755                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14756                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14757                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14758                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14759                           ;term.c: 435: UINT8 Index;
 14760                           ;term.c: 436: static UINT8 Len[4];
 14761                           ;term.c: 437: static UINT8 PackageLen;
 14762                           ;term.c: 438: static UINT8 Addr[4];
 14763                           ;term.c: 439: static UINT8 SlaveAddr;
 14764                           ;term.c: 440: static PayloadType Payload[20u];
 14765                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;incstack = 0
 14769  0000D0  0E00               	movlw	0
 14770  0000D2  0100               	movlb	0	; () banked
 14771  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14772                           
 14773                           ; BSR set to: 0
 14774                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14775                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14776                           ;term.c: 445: static SwTimerType SwTimer;
 14777                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14778  0000D6  0E1F               	movlw	31
 14779  0000D8  65D3               	cpfsgt	_USBDeviceState& (0+255),b
 14780  0000DA  0012               	return	
 14781                           
 14782                           ; BSR set to: 0
 14783  0000DC  B265               	btfsc	3941,1,c	;volatile
 14784  0000DE  0012               	return	
 14785  0000E0  D278               	goto	l2355
 14786  0000E2                     
 14787                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14788                           
 14789                           ; BSR set to: 0
 14790  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14791  0000E4  0100               	movlb	0	; () banked
 14792  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14793  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14794  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14795  0000EC  0EC8               	movlw	200
 14796  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14797  0000F0  EC8E  F023         	call	_getsUSBUSART	;wreg free
 14798  0000F4  0100               	movlb	0	; () banked
 14799  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;term.c: 458: if (ReceivedBytes > 0)
 14803  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14804  0000FA  B4D8               	btfsc	status,2,c
 14805  0000FC  0012               	return	
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;term.c: 459: {
 14809                           ;term.c: 461: if (EchoOption == 1u)
 14810  0000FE  0102               	movlb	2	; () banked
 14811  000100  05F2               	decf	Terminal@EchoOption& (0+255),w,b
 14812  000102  A4D8               	btfss	status,2,c
 14813  000104  D026               	goto	l2359
 14814                           
 14815                           ; BSR set to: 2
 14816                           ;term.c: 462: {
 14817                           ;term.c: 464: if((cdc_trf_state == 0))
 14818  000106  0100               	movlb	0	; () banked
 14819  000108  51CD               	movf	_cdc_trf_state& (0+255),w,b
 14820  00010A  A4D8               	btfss	status,2,c
 14821  00010C  D022               	goto	l2359
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;term.c: 465: {
 14825                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14826  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14827  000110  0D01               	mullw	1
 14828  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14829  000114  24F3               	addwf	prodl,w,c
 14830  000116  6ED9               	movwf	fsr2l,c
 14831  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14832  00011A  20F4               	addwfc	prodh,w,c
 14833  00011C  6EDA               	movwf	fsr2h,c
 14834  00011E  0E0D               	movlw	13
 14835  000120  6EDF               	movwf	indf2,c
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14839  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14840  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14841  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14842  000128  0E01               	movlw	1
 14843  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14844  00012C  0E00               	movlw	0
 14845  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14846  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14847  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14848  000134  6ED9               	movwf	fsr2l,c
 14849  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14850  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14851  00013A  6EDA               	movwf	fsr2h,c
 14852  00013C  0E0A               	movlw	10
 14853  00013E  6EDF               	movwf	indf2,c
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14857  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14858  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14859  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14860  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14861  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14862  00014A  0F02               	addlw	2
 14863  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14864  00014E  EC4C  F02F         	call	_putUSBUSART	;wreg free
 14865  000152                     l2359:
 14866                           
 14867                           ;term.c: 469: }
 14868                           ;term.c: 470: }
 14869                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14870                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14871                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14872  000152  0E53               	movlw	83
 14873  000154  010A               	movlb	10	; () banked
 14874  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14875  000158  A4D8               	btfss	status,2,c
 14876  00015A  D043               	goto	l2360
 14877                           
 14878                           ; BSR set to: 10
 14879  00015C  0E4F               	movlw	79
 14880  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14881  000160  A4D8               	btfss	status,2,c
 14882  000162  D03F               	goto	l2360
 14883                           
 14884                           ; BSR set to: 10
 14885  000164  0E3A               	movlw	58
 14886  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14887  000168  A4D8               	btfss	status,2,c
 14888  00016A  D03B               	goto	l2360
 14889                           
 14890                           ; BSR set to: 10
 14891                           ;term.c: 476: {
 14892                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14893  00016C  0E47               	movlw	71
 14894  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14895  000170  A4D8               	btfss	status,2,c
 14896  000172  0012               	return	
 14897                           
 14898                           ; BSR set to: 10
 14899  000174  0E3A               	movlw	58
 14900  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14901  000178  A4D8               	btfss	status,2,c
 14902  00017A  0012               	return	
 14903                           
 14904                           ; BSR set to: 10
 14905                           ;term.c: 479: {
 14906                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14907  00017C  0E44               	movlw	68
 14908  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14909  000180  A4D8               	btfss	status,2,c
 14910  000182  D015               	goto	l2362
 14911                           
 14912                           ; BSR set to: 10
 14913  000184  0E46               	movlw	70
 14914  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14915  000188  A4D8               	btfss	status,2,c
 14916  00018A  D011               	goto	l2362
 14917                           
 14918                           ; BSR set to: 10
 14919                           ;term.c: 482: {
 14920                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14921  00018C  0E41               	movlw	65
 14922  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14923  000190  A4D8               	btfss	status,2,c
 14924  000192  D004               	goto	l2363
 14925                           
 14926                           ; BSR set to: 10
 14927                           ;term.c: 484: {
 14928                           ;term.c: 485: FormatOption = 1u;
 14929  000194  0E01               	movlw	1
 14930  000196  0102               	movlb	2	; () banked
 14931  000198  6FEB               	movwf	Terminal@FormatOption& (0+255),b
 14932                           
 14933                           ;term.c: 486: }
 14934  00019A  0012               	return	
 14935  00019C                     l2363:
 14936                           
 14937                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14938                           
 14939                           ; BSR set to: 2
 14940  00019C  0E42               	movlw	66
 14941  00019E  010A               	movlb	10	; () banked
 14942  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14943  0001A2  A4D8               	btfss	status,2,c
 14944  0001A4  0012               	return	
 14945                           
 14946                           ; BSR set to: 10
 14947                           ;term.c: 488: {
 14948                           ;term.c: 489: FormatOption = 0u;
 14949  0001A6  0E00               	movlw	0
 14950  0001A8  0102               	movlb	2	; () banked
 14951  0001AA  6FEB               	movwf	Terminal@FormatOption& (0+255),b
 14952                           
 14953                           ; BSR set to: 2
 14954                           ;term.c: 490: }
 14955                           ;term.c: 491: }
 14956                           
 14957                           ; BSR set to: 2
 14958  0001AC  0012               	return	
 14959  0001AE                     l2362:
 14960                           
 14961                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14962                           
 14963                           ; BSR set to: 2
 14964  0001AE  0E45               	movlw	69
 14965  0001B0  010A               	movlb	10	; () banked
 14966  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14967  0001B4  A4D8               	btfss	status,2,c
 14968  0001B6  0012               	return	
 14969                           
 14970                           ; BSR set to: 10
 14971  0001B8  0E4D               	movlw	77
 14972  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14973  0001BC  A4D8               	btfss	status,2,c
 14974  0001BE  0012               	return	
 14975                           
 14976                           ; BSR set to: 10
 14977                           ;term.c: 494: {
 14978                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14979  0001C0  0E31               	movlw	49
 14980  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14981  0001C4  A4D8               	btfss	status,2,c
 14982  0001C6  D004               	goto	l2368
 14983                           
 14984                           ; BSR set to: 10
 14985                           ;term.c: 496: {
 14986                           ;term.c: 497: EchoOption = 1u;
 14987  0001C8  0E01               	movlw	1
 14988  0001CA  0102               	movlb	2	; () banked
 14989  0001CC  6FF2               	movwf	Terminal@EchoOption& (0+255),b
 14990                           
 14991                           ;term.c: 498: }
 14992  0001CE  0012               	return	
 14993  0001D0                     l2368:
 14994                           
 14995                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14996                           
 14997                           ; BSR set to: 2
 14998  0001D0  0E30               	movlw	48
 14999  0001D2  010A               	movlb	10	; () banked
 15000  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15001  0001D6  A4D8               	btfss	status,2,c
 15002  0001D8  0012               	return	
 15003                           
 15004                           ; BSR set to: 10
 15005                           ;term.c: 500: {
 15006                           ;term.c: 501: EchoOption = 0u;
 15007  0001DA  0E00               	movlw	0
 15008  0001DC  0102               	movlb	2	; () banked
 15009  0001DE  6FF2               	movwf	Terminal@EchoOption& (0+255),b
 15010                           
 15011                           ; BSR set to: 2
 15012                           ;term.c: 507: }
 15013                           ;term.c: 508: }
 15014                           ;term.c: 509: }
 15015                           
 15016                           ; BSR set to: 2
 15017                           
 15018                           ; BSR set to: 2
 15019                           
 15020                           ;term.c: 504: else
 15021                           ;term.c: 505: {
 15022                           
 15023                           ; BSR set to: 2
 15024                           
 15025                           ; BSR set to: 2
 15026                           ;term.c: 502: }
 15027                           ;term.c: 503: }
 15028                           
 15029                           ; BSR set to: 2
 15030  0001E0  0012               	return	
 15031  0001E2                     l2360:
 15032                           
 15033                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15034                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15035                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15036                           
 15037                           ; BSR set to: 2
 15038  0001E2  0E53               	movlw	83
 15039  0001E4  010A               	movlb	10	; () banked
 15040  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15041  0001E8  A4D8               	btfss	status,2,c
 15042  0001EA  D0D3               	goto	l2373
 15043                           
 15044                           ; BSR set to: 10
 15045  0001EC  0E42               	movlw	66
 15046  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15047  0001F0  A4D8               	btfss	status,2,c
 15048  0001F2  D0CF               	goto	l2373
 15049                           
 15050                           ; BSR set to: 10
 15051  0001F4  0E3A               	movlw	58
 15052  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15053  0001F8  A4D8               	btfss	status,2,c
 15054  0001FA  D0CB               	goto	l2373
 15055                           
 15056                           ; BSR set to: 10
 15057                           ;term.c: 513: {
 15058                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15059  0001FC  0E57               	movlw	87
 15060  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15061  000200  A4D8               	btfss	status,2,c
 15062  000202  D091               	goto	l2374
 15063                           
 15064                           ; BSR set to: 10
 15065  000204  0E3A               	movlw	58
 15066  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15067  000208  A4D8               	btfss	status,2,c
 15068  00020A  D08D               	goto	l2374
 15069                           
 15070                           ; BSR set to: 10
 15071                           ;term.c: 515: {
 15072                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15073  00020C  CA05  F3AE         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15074                           
 15075                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15076  000210  CA06  F3AF         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15077                           
 15078                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15079  000214  CA08  F3AA         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15080                           
 15081                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15082  000218  CA09  F3AB         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15083                           
 15084                           ; BSR set to: 10
 15085                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15086  00021C  0EAE               	movlw	low Terminal@Len
 15087  00021E  0100               	movlb	0	; () banked
 15088  000220  6F83               	movwf	atoi@s& (0+255),b
 15089  000222  0E03               	movlw	high Terminal@Len
 15090  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15091  000226  EC3E  F01B         	call	_atoi	;wreg free
 15092  00022A  0100               	movlb	0	; () banked
 15093  00022C  5183               	movf	?_atoi& (0+255),w,b
 15094  00022E  0102               	movlb	2	; () banked
 15095  000230  6FED               	movwf	Terminal@PackageLen& (0+255),b
 15096                           
 15097                           ; BSR set to: 2
 15098                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15099  000232  0EAA               	movlw	low Terminal@Addr
 15100  000234  0100               	movlb	0	; () banked
 15101  000236  6F83               	movwf	xtoi@s& (0+255),b
 15102  000238  0E03               	movlw	high Terminal@Addr
 15103  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15104  00023C  ECED  F019         	call	_xtoi	;wreg free
 15105  000240  0100               	movlb	0	; () banked
 15106  000242  5183               	movf	?_xtoi& (0+255),w,b
 15107  000244  0102               	movlb	2	; () banked
 15108  000246  6FEC               	movwf	Terminal@SlaveAddr& (0+255),b
 15109                           
 15110                           ; BSR set to: 2
 15111                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15112  000248  0E00               	movlw	0
 15113  00024A  0100               	movlb	0	; () banked
 15114  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15115  00024E  D032               	goto	l2375
 15116  000250                     
 15117                           ;term.c: 527: {
 15118                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15119                           
 15120                           ; BSR set to: 0
 15121  000250  0100               	movlb	0	; () banked
 15122  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15123  000254  0D02               	mullw	2
 15124  000256  0E0B               	movlw	11
 15125  000258  26F3               	addwf	prodl,f,c
 15126  00025A  0E00               	movlw	0
 15127  00025C  22F4               	addwfc	prodh,f,c
 15128  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15129  000260  24F3               	addwf	prodl,w,c
 15130  000262  6ED9               	movwf	fsr2l,c
 15131  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15132  000266  20F4               	addwfc	prodh,w,c
 15133  000268  6EDA               	movwf	fsr2h,c
 15134  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15135  00026C  0D04               	mullw	4
 15136  00026E  0E00               	movlw	low Terminal@Payload
 15137  000270  24F3               	addwf	prodl,w,c
 15138  000272  6EE1               	movwf	fsr1l,c
 15139  000274  0E05               	movlw	high Terminal@Payload
 15140  000276  20F4               	addwfc	prodh,w,c
 15141  000278  6EE2               	movwf	fsr1h,c
 15142  00027A  CFDF FFE7          	movff	indf2,indf1
 15143                           
 15144                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15145  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15146  000280  0D02               	mullw	2
 15147  000282  0E0C               	movlw	12
 15148  000284  26F3               	addwf	prodl,f,c
 15149  000286  0E00               	movlw	0
 15150  000288  22F4               	addwfc	prodh,f,c
 15151  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15152  00028C  24F3               	addwf	prodl,w,c
 15153  00028E  6ED9               	movwf	fsr2l,c
 15154  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15155  000292  20F4               	addwfc	prodh,w,c
 15156  000294  6EDA               	movwf	fsr2h,c
 15157  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15158  000298  0D04               	mullw	4
 15159  00029A  0E01               	movlw	1
 15160  00029C  26F3               	addwf	prodl,f,c
 15161  00029E  0E00               	movlw	0
 15162  0002A0  22F4               	addwfc	prodh,f,c
 15163  0002A2  0E00               	movlw	low Terminal@Payload
 15164  0002A4  24F3               	addwf	prodl,w,c
 15165  0002A6  6EE1               	movwf	fsr1l,c
 15166  0002A8  0E05               	movlw	high Terminal@Payload
 15167  0002AA  20F4               	addwfc	prodh,w,c
 15168  0002AC  6EE2               	movwf	fsr1h,c
 15169  0002AE  CFDF FFE7          	movff	indf2,indf1
 15170                           
 15171                           ; BSR set to: 0
 15172  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15173  0002B4                     l2375:
 15174                           
 15175                           ; BSR set to: 0
 15176                           
 15177                           ; BSR set to: 0
 15178  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15179  0002B6  0102               	movlb	2	; () banked
 15180  0002B8  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15181  0002BA  B0D8               	btfsc	status,0,c
 15182  0002BC  D7C9               	goto	l2376
 15183                           
 15184                           ; BSR set to: 2
 15185                           ;term.c: 530: }
 15186                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15187                           
 15188                           ; BSR set to: 2
 15189  0002BE  0E00               	movlw	0
 15190  0002C0  0100               	movlb	0	; () banked
 15191  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15192  0002C4  D01F               	goto	l2378
 15193  0002C6                     
 15194                           ;term.c: 533: {
 15195                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15196                           
 15197                           ; BSR set to: 0
 15198  0002C6  0100               	movlb	0	; () banked
 15199  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15200  0002CA  0D04               	mullw	4
 15201  0002CC  0E00               	movlw	low Terminal@Payload
 15202  0002CE  24F3               	addwf	prodl,w,c
 15203  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15204  0002D2  0E05               	movlw	high Terminal@Payload
 15205  0002D4  20F4               	addwfc	prodh,w,c
 15206  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15207  0002D8  0E00               	movlw	0
 15208  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15209  0002DC  0E00               	movlw	0
 15210  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15211  0002E0  0E00               	movlw	0
 15212  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15213  0002E4  0E10               	movlw	16
 15214  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15215  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15216  0002EC  0100               	movlb	0	; () banked
 15217  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15218  0002F0  0D01               	mullw	1
 15219  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15220  0002F4  24F3               	addwf	prodl,w,c
 15221  0002F6  6ED9               	movwf	fsr2l,c
 15222  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15223  0002FA  20F4               	addwfc	prodh,w,c
 15224  0002FC  6EDA               	movwf	fsr2h,c
 15225  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15226                           
 15227                           ; BSR set to: 0
 15228  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15229  000304                     l2378:
 15230                           
 15231                           ; BSR set to: 0
 15232                           
 15233                           ; BSR set to: 0
 15234  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15235  000306  0102               	movlb	2	; () banked
 15236  000308  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15237  00030A  B0D8               	btfsc	status,0,c
 15238  00030C  D7DC               	goto	l2379
 15239                           
 15240                           ; BSR set to: 2
 15241                           ;term.c: 539: }
 15242                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15243                           
 15244                           ; BSR set to: 2
 15245  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15246  000310  0100               	movlb	0	; () banked
 15247  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15248  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15249  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15250  000318  C2EC  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15251  00031C  C2ED  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15252  000320  ECC2  F02C         	call	_I2cSlv_SendI2cMsg	;wreg free
 15253                           
 15254                           ;term.c: 543: }
 15255  000324  0012               	return	
 15256  000326                     l2374:
 15257                           
 15258                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15259  000326  0E52               	movlw	82
 15260  000328  010A               	movlb	10	; () banked
 15261  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15262  00032C  A4D8               	btfss	status,2,c
 15263  00032E  0012               	return	
 15264                           
 15265                           ; BSR set to: 10
 15266  000330  0E3A               	movlw	58
 15267  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15268  000334  A4D8               	btfss	status,2,c
 15269  000336  0012               	return	
 15270                           
 15271                           ; BSR set to: 10
 15272                           ;term.c: 545: {
 15273                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15274  000338  CA05  F3AE         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15275                           
 15276                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15277  00033C  CA06  F3AF         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15278                           
 15279                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15280  000340  CA08  F3AA         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15281                           
 15282                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15283  000344  CA09  F3AB         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15284                           
 15285                           ; BSR set to: 10
 15286                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15287  000348  0EAE               	movlw	low Terminal@Len
 15288  00034A  0100               	movlb	0	; () banked
 15289  00034C  6F83               	movwf	atoi@s& (0+255),b
 15290  00034E  0E03               	movlw	high Terminal@Len
 15291  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15292  000352  EC3E  F01B         	call	_atoi	;wreg free
 15293  000356  0100               	movlb	0	; () banked
 15294  000358  5183               	movf	?_atoi& (0+255),w,b
 15295  00035A  0102               	movlb	2	; () banked
 15296  00035C  6FED               	movwf	Terminal@PackageLen& (0+255),b
 15297                           
 15298                           ; BSR set to: 2
 15299                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15300  00035E  0EAA               	movlw	low Terminal@Addr
 15301  000360  0100               	movlb	0	; () banked
 15302  000362  6F83               	movwf	xtoi@s& (0+255),b
 15303  000364  0E03               	movlw	high Terminal@Addr
 15304  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15305  000368  ECED  F019         	call	_xtoi	;wreg free
 15306  00036C  0100               	movlb	0	; () banked
 15307  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15308  000370  0102               	movlb	2	; () banked
 15309  000372  6FEC               	movwf	Terminal@SlaveAddr& (0+255),b
 15310                           
 15311                           ; BSR set to: 2
 15312                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15313  000374  0E86               	movlw	low Terminal@TermRxBuffer
 15314  000376  0100               	movlb	0	; () banked
 15315  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15316  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 15317  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15318  00037E  C2EC  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15319  000382  C2ED  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15320  000386  EC63  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15321                           
 15322                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15323  00038A  0E01               	movlw	1
 15324  00038C  0102               	movlb	2	; () banked
 15325  00038E  6FEE               	movwf	Terminal@TermState& (0+255),b
 15326                           
 15327                           ; BSR set to: 2
 15328                           ;term.c: 561: }
 15329                           ;term.c: 562: }
 15330                           
 15331                           ; BSR set to: 2
 15332  000390  0012               	return	
 15333  000392                     l2373:
 15334                           
 15335                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15336                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15337                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15338                           
 15339                           ; BSR set to: 2
 15340  000392  0E54               	movlw	84
 15341  000394  010A               	movlb	10	; () banked
 15342  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15343  000398  A4D8               	btfss	status,2,c
 15344  00039A  0012               	return	
 15345                           
 15346                           ; BSR set to: 10
 15347  00039C  0E45               	movlw	69
 15348  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15349  0003A0  A4D8               	btfss	status,2,c
 15350  0003A2  0012               	return	
 15351                           
 15352                           ; BSR set to: 10
 15353  0003A4  0E4C               	movlw	76
 15354  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15355  0003A8  A4D8               	btfss	status,2,c
 15356  0003AA  0012               	return	
 15357                           
 15358                           ; BSR set to: 10
 15359                           ;term.c: 566: {
 15360                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15361  0003AC  CA03  F3AE         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15362                           
 15363                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15364  0003B0  CA04  F3AF         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15365                           
 15366                           ; BSR set to: 10
 15367                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15368  0003B4  0EAE               	movlw	low Terminal@Len
 15369  0003B6  0100               	movlb	0	; () banked
 15370  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15371  0003BA  0E03               	movlw	high Terminal@Len
 15372  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15373  0003BE  EC3E  F01B         	call	_atoi	;wreg free
 15374  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15375  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15376                           
 15377                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15378  0003CA  0E00               	movlw	0
 15379  0003CC  0100               	movlb	0	; () banked
 15380  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15381  0003D0  D018               	goto	l2385
 15382  0003D2                     
 15383                           ; BSR set to: 0
 15384                           ;term.c: 573: {
 15385                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15386                           
 15387                           ; BSR set to: 0
 15388  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15389  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15390  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15391  0003D8  0E05               	movlw	5
 15392  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15393  0003DC  0E00               	movlw	0
 15394  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15395  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15396  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15397  0003E4  6ED9               	movwf	fsr2l,c
 15398  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15399  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15400  0003EA  6EDA               	movwf	fsr2h,c
 15401  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15402  0003EE  0D01               	mullw	1
 15403  0003F0  0EB8               	movlw	low _PhoneNumber
 15404  0003F2  24F3               	addwf	prodl,w,c
 15405  0003F4  6EE1               	movwf	fsr1l,c
 15406  0003F6  0E04               	movlw	high _PhoneNumber
 15407  0003F8  20F4               	addwfc	prodh,w,c
 15408  0003FA  6EE2               	movwf	fsr1h,c
 15409  0003FC  CFDF FFE7          	movff	indf2,indf1
 15410                           
 15411                           ; BSR set to: 0
 15412  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15413  000402                     l2385:
 15414                           
 15415                           ; BSR set to: 0
 15416                           
 15417                           ; BSR set to: 0
 15418  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15419  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15420  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15421  000408  0103               	movlb	3	; () banked
 15422  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15423  00040C  0100               	movlb	0	; () banked
 15424  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15425  000410  0103               	movlb	3	; () banked
 15426  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15427  000414  0100               	movlb	0	; () banked
 15428  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15429  000418  B0D8               	btfsc	status,0,c
 15430  00041A  0012               	return	
 15431  00041C  D7DA               	goto	l2386
 15432  00041E                     
 15433                           ;term.c: 619: if((cdc_trf_state == 0))
 15434                           
 15435                           ; BSR set to: 0
 15436  00041E  0100               	movlb	0	; () banked
 15437  000420  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15438  000422  A4D8               	btfss	status,2,c
 15439  000424  0012               	return	
 15440                           
 15441                           ; BSR set to: 0
 15442                           ;term.c: 620: {
 15443                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15444  000426  0E53               	movlw	83
 15445  000428  0102               	movlb	2	; () banked
 15446  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15447                           
 15448                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15449  00042C  0E42               	movlw	66
 15450  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15451                           
 15452                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15453  000430  0E5B               	movlw	91
 15454  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15455                           
 15456                           ; BSR set to: 2
 15457                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15458  000434  C3AA  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15459                           
 15460                           ; BSR set to: 2
 15461                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15462  000438  C3AB  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15463                           
 15464                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15465  00043C  0E5D               	movlw	93
 15466  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15467                           
 15468                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15469  000440  0E3A               	movlw	58
 15470  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15471                           
 15472                           ; BSR set to: 2
 15473                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15474  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15475  000446  0100               	movlb	0	; () banked
 15476  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15477  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15478  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15479  00044E  0E07               	movlw	7
 15480  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15481  000452  EC4C  F02F         	call	_putUSBUSART	;wreg free
 15482                           
 15483                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15484  000456  0E02               	movlw	2
 15485  000458  0102               	movlb	2	; () banked
 15486  00045A  6FEE               	movwf	Terminal@TermState& (0+255),b
 15487                           
 15488                           ; BSR set to: 2
 15489                           ;term.c: 632: }
 15490                           ;term.c: 633: break;
 15491  00045C  0012               	return	
 15492  00045E                     
 15493                           ; BSR set to: 2
 15494                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15495                           
 15496                           ; BSR set to: 2
 15497  00045E  EC6E  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15498  000462  06E8               	decf	wreg,f,c
 15499  000464  A4D8               	btfss	status,2,c
 15500  000466  D088               	goto	l2394
 15501                           
 15502                           ;term.c: 638: {
 15503                           ;term.c: 640: if (FormatOption == 1u)
 15504  000468  0102               	movlb	2	; () banked
 15505  00046A  05EB               	decf	Terminal@FormatOption& (0+255),w,b
 15506  00046C  A4D8               	btfss	status,2,c
 15507  00046E  D027               	goto	u12020
 15508                           
 15509                           ; BSR set to: 2
 15510                           ;term.c: 641: {
 15511                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15512  000470  0E00               	movlw	0
 15513  000472  0100               	movlb	0	; () banked
 15514  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15515  000476  D01E               	goto	l2396
 15516  000478                     
 15517                           ;term.c: 644: {
 15518                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15519                           
 15520                           ; BSR set to: 0
 15521  000478  0100               	movlb	0	; () banked
 15522  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15523  00047C  0D04               	mullw	4
 15524  00047E  0E00               	movlw	low Terminal@Payload
 15525  000480  24F3               	addwf	prodl,w,c
 15526  000482  6F93               	movwf	itoa@buf& (0+255),b
 15527  000484  0E05               	movlw	high Terminal@Payload
 15528  000486  20F4               	addwfc	prodh,w,c
 15529  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15530  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15531  00048C  0D01               	mullw	1
 15532  00048E  0E86               	movlw	low Terminal@TermRxBuffer
 15533  000490  24F3               	addwf	prodl,w,c
 15534  000492  6ED9               	movwf	fsr2l,c
 15535  000494  0E04               	movlw	high Terminal@TermRxBuffer
 15536  000496  20F4               	addwfc	prodh,w,c
 15537  000498  6EDA               	movwf	fsr2h,c
 15538  00049A  50DF               	movf	indf2,w,c
 15539  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15540  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15541  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15542  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15543  0004A4  0E00               	movlw	0
 15544  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15545  0004A8  0E0A               	movlw	10
 15546  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15547  0004AC  ECDC  F02B         	call	_itoa	;wreg free
 15548  0004B0  0100               	movlb	0	; () banked
 15549  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15550  0004B4                     l2396:
 15551                           
 15552                           ; BSR set to: 0
 15553                           
 15554                           ; BSR set to: 0
 15555  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15556  0004B6  0102               	movlb	2	; () banked
 15557  0004B8  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15558  0004BA  B0D8               	btfsc	status,0,c
 15559  0004BC  D7DD               	goto	l2397
 15560  0004BE                     u12020:
 15561                           
 15562                           ; BSR set to: 2
 15563                           ;term.c: 646: }
 15564                           ;term.c: 647: }
 15565                           ;term.c: 650: if((cdc_trf_state == 0))
 15566                           
 15567                           ; BSR set to: 2
 15568                           
 15569                           ; BSR set to: 2
 15570  0004BE  0100               	movlb	0	; () banked
 15571  0004C0  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15572  0004C2  A4D8               	btfss	status,2,c
 15573  0004C4  0012               	return	
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;term.c: 651: {
 15577                           ;term.c: 653: if (FormatOption == 1u)
 15578  0004C6  0102               	movlb	2	; () banked
 15579  0004C8  05EB               	decf	Terminal@FormatOption& (0+255),w,b
 15580  0004CA  A4D8               	btfss	status,2,c
 15581  0004CC  D02B               	goto	l2400
 15582                           
 15583                           ; BSR set to: 2
 15584                           ;term.c: 654: {
 15585                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15586  0004CE  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15587  0004D0  0D08               	mullw	8
 15588  0004D2  0E03               	movlw	3
 15589  0004D4  26F3               	addwf	prodl,f,c
 15590  0004D6  0E00               	movlw	0
 15591  0004D8  22F4               	addwfc	prodh,f,c
 15592  0004DA  0E00               	movlw	low Terminal@Payload
 15593  0004DC  24F3               	addwf	prodl,w,c
 15594  0004DE  6ED9               	movwf	fsr2l,c
 15595  0004E0  0E05               	movlw	high Terminal@Payload
 15596  0004E2  20F4               	addwfc	prodh,w,c
 15597  0004E4  6EDA               	movwf	fsr2h,c
 15598  0004E6  0E0D               	movlw	13
 15599  0004E8  6EDF               	movwf	indf2,c
 15600                           
 15601                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15602  0004EA  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15603  0004EC  0D08               	mullw	8
 15604  0004EE  0E02               	movlw	2
 15605  0004F0  26F3               	addwf	prodl,f,c
 15606  0004F2  0E00               	movlw	0
 15607  0004F4  22F4               	addwfc	prodh,f,c
 15608  0004F6  0E00               	movlw	low Terminal@Payload
 15609  0004F8  24F3               	addwf	prodl,w,c
 15610  0004FA  6ED9               	movwf	fsr2l,c
 15611  0004FC  0E05               	movlw	high Terminal@Payload
 15612  0004FE  20F4               	addwfc	prodh,w,c
 15613  000500  6EDA               	movwf	fsr2h,c
 15614  000502  0E0A               	movlw	10
 15615  000504  6EDF               	movwf	indf2,c
 15616                           
 15617                           ; BSR set to: 2
 15618                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15619  000506  0E00               	movlw	low Terminal@Payload
 15620  000508  0100               	movlb	0	; () banked
 15621  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15622  00050C  0E05               	movlw	high Terminal@Payload
 15623  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15624  000510  0102               	movlb	2	; () banked
 15625  000512  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15626  000514  0D02               	mullw	2
 15627  000516  50F3               	movf	prodl,w,c
 15628  000518  0F04               	addlw	4
 15629  00051A  0100               	movlb	0	; () banked
 15630  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15631  00051E  EC4C  F02F         	call	_putUSBUSART	;wreg free
 15632                           
 15633                           ;term.c: 659: }
 15634  000522  D026               	goto	l2401
 15635  000524                     l2400:
 15636                           
 15637                           ;term.c: 660: else
 15638                           ;term.c: 661: {
 15639                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15640  000524  0102               	movlb	2	; () banked
 15641  000526  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15642  000528  0D01               	mullw	1
 15643  00052A  0E86               	movlw	low Terminal@TermRxBuffer
 15644  00052C  24F3               	addwf	prodl,w,c
 15645  00052E  6ED9               	movwf	fsr2l,c
 15646  000530  0E04               	movlw	high Terminal@TermRxBuffer
 15647  000532  20F4               	addwfc	prodh,w,c
 15648  000534  6EDA               	movwf	fsr2h,c
 15649  000536  0E0D               	movlw	13
 15650  000538  6EDF               	movwf	indf2,c
 15651                           
 15652                           ; BSR set to: 2
 15653                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15654  00053A  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15655  00053C  0100               	movlb	0	; () banked
 15656  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15657  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15658  000542  0E01               	movlw	1
 15659  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15660  000546  0E00               	movlw	0
 15661  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15662  00054A  0E86               	movlw	low Terminal@TermRxBuffer
 15663  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15664  00054E  6ED9               	movwf	fsr2l,c
 15665  000550  0E04               	movlw	high Terminal@TermRxBuffer
 15666  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15667  000554  6EDA               	movwf	fsr2h,c
 15668  000556  0E0A               	movlw	10
 15669  000558  6EDF               	movwf	indf2,c
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15673  00055A  0E86               	movlw	low Terminal@TermRxBuffer
 15674  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15675  00055E  0E04               	movlw	high Terminal@TermRxBuffer
 15676  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15677  000562  0102               	movlb	2	; () banked
 15678  000564  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15679  000566  0F02               	addlw	2
 15680  000568  0100               	movlb	0	; () banked
 15681  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15682  00056C  EC4C  F02F         	call	_putUSBUSART	;wreg free
 15683  000570                     l2401:
 15684                           
 15685                           ;term.c: 666: }
 15686                           ;term.c: 668: TermState = Term_GetData;
 15687  000570  0E00               	movlw	0
 15688  000572  0102               	movlb	2	; () banked
 15689  000574  6FEE               	movwf	Terminal@TermState& (0+255),b
 15690                           
 15691                           ; BSR set to: 2
 15692                           ;term.c: 669: }
 15693                           ;term.c: 670: }
 15694  000576  0012               	return	
 15695  000578                     l2394:
 15696                           
 15697                           ;term.c: 671: else
 15698                           ;term.c: 672: {
 15699                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15700                           
 15701                           ; BSR set to: 2
 15702  000578  0ECC               	movlw	low Terminal@SwTimer
 15703  00057A  0100               	movlb	0	; () banked
 15704  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15705  00057E  0E04               	movlw	high Terminal@SwTimer
 15706  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15707  000582  0EB8               	movlw	184
 15708  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15709  000586  0E0B               	movlw	11
 15710  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15711  00058A  0E00               	movlw	0
 15712  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15713  00058E  0E00               	movlw	0
 15714  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15715  000592  ECC7  F025         	call	_OsTmr_Wait	;wreg free
 15716  000596  06E8               	decf	wreg,f,c
 15717  000598  A4D8               	btfss	status,2,c
 15718  00059A  0012               	return	
 15719                           
 15720                           ;term.c: 675: {
 15721                           ;term.c: 677: if((cdc_trf_state == 0))
 15722  00059C  0100               	movlb	0	; () banked
 15723  00059E  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15724  0005A0  A4D8               	btfss	status,2,c
 15725  0005A2  0012               	return	
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;term.c: 678: {
 15729                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15730  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15731  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15732  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15733  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15734  0005AC  0E6A               	movlw	low STR_21
 15735  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15736  0005B0  0EFE               	movlw	high STR_21
 15737  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15738  0005B4  ECC3  F02D         	call	_strcpy	;wreg free
 15739                           
 15740                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15741  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15742  0005BA  0100               	movlb	0	; () banked
 15743  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15744  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15745  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15746  0005C2  0E29               	movlw	41
 15747  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15748  0005C6  EC4C  F02F         	call	_putUSBUSART	;wreg free
 15749                           
 15750                           ;term.c: 682: TermState = Term_GetData;
 15751  0005CA  0E00               	movlw	0
 15752  0005CC  0102               	movlb	2	; () banked
 15753  0005CE  6FEE               	movwf	Terminal@TermState& (0+255),b
 15754                           
 15755                           ; BSR set to: 2
 15756                           ;term.c: 693: }
 15757                           
 15758                           ; BSR set to: 2
 15759                           ;term.c: 692: break;
 15760                           
 15761                           ;term.c: 691: default:
 15762                           
 15763                           ; BSR set to: 2
 15764                           ;term.c: 689: break;
 15765                           
 15766                           ;term.c: 688: case Term_ReadSlvUartData:
 15767                           
 15768                           ; BSR set to: 2
 15769                           ;term.c: 683: }
 15770                           ;term.c: 684: }
 15771                           ;term.c: 685: }
 15772                           ;term.c: 686: break;
 15773                           
 15774                           ; BSR set to: 2
 15775                           
 15776                           ; BSR set to: 2
 15777  0005D0  0012               	return	
 15778  0005D2                     l2355:
 15779                           
 15780                           ; BSR set to: 2
 15781  0005D2  0102               	movlb	2	; () banked
 15782  0005D4  51EE               	movf	Terminal@TermState& (0+255),w,b
 15783                           
 15784                           ; Switch size 1, requested type "space"
 15785                           ; Number of cases is 4, Range of values is 0 to 3
 15786                           ; switch strategies available:
 15787                           ; Name         Instructions Cycles
 15788                           ; simple_byte           13     7 (average)
 15789                           ;	Chosen strategy is simple_byte
 15790  0005D6  0A00               	xorlw	0	; case 0
 15791  0005D8  B4D8               	btfsc	status,2,c
 15792  0005DA  D583               	goto	l2356
 15793  0005DC  0A01               	xorlw	1	; case 1
 15794  0005DE  B4D8               	btfsc	status,2,c
 15795  0005E0  D71E               	goto	l2391
 15796  0005E2  0A03               	xorlw	3	; case 2
 15797  0005E4  B4D8               	btfsc	status,2,c
 15798  0005E6  D73B               	goto	l2393
 15799  0005E8  0A01               	xorlw	1	; case 3
 15800  0005EA  0012               	return	
 15801  0005EC                     __end_of_Terminal:
 15802                           	opt stack 0
 15803                           tosu	equ	0xFFF
 15804                           tosh	equ	0xFFE
 15805                           tosl	equ	0xFFD
 15806                           pclath	equ	0xFFA
 15807                           tblptru	equ	0xFF8
 15808                           tblptrh	equ	0xFF7
 15809                           tblptrl	equ	0xFF6
 15810                           tablat	equ	0xFF5
 15811                           prodh	equ	0xFF4
 15812                           prodl	equ	0xFF3
 15813                           intcon	equ	0xFF2
 15814                           intcon2	equ	0xFF1
 15815                           intcon3	equ	0xFF0
 15816                           indf0	equ	0xFEF
 15817                           postinc0	equ	0xFEE
 15818                           plusw0	equ	0xFEB
 15819                           fsr0h	equ	0xFEA
 15820                           fsr0l	equ	0xFE9
 15821                           wreg	equ	0xFE8
 15822                           indf1	equ	0xFE7
 15823                           postinc1	equ	0xFE6
 15824                           postdec1	equ	0xFE5
 15825                           plusw1	equ	0xFE3
 15826                           fsr1h	equ	0xFE2
 15827                           fsr1l	equ	0xFE1
 15828                           indf2	equ	0xFDF
 15829                           postinc2	equ	0xFDE
 15830                           postdec2	equ	0xFDD
 15831                           plusw2	equ	0xFDB
 15832                           fsr2h	equ	0xFDA
 15833                           fsr2l	equ	0xFD9
 15834                           status	equ	0xFD8
 15835                           
 15836 ;; *************** function _xtoi *****************
 15837 ;; Defined at:
 15838 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15841 ;;		 -> Terminal@Addr(4), 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  val             2   40[BANK0 ] unsigned int 
 15844 ;;  c               1   42[BANK0 ] unsigned char 
 15845 ;;  sign            1   39[BANK0 ] unsigned char 
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  2   35[BANK0 ] unsigned int 
 15848 ;; Registers used:
 15849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15859 ;;Total ram usage:        8 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:   13
 15862 ;; This function calls:
 15863 ;;		_isdigit
 15864 ;;		_isspace
 15865 ;;		_isupper
 15866 ;;		_isxdigit
 15867 ;;		_tolower
 15868 ;; This function is called by:
 15869 ;;		_Terminal
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           	psect	text61
 15874  0033DA                     __ptext61:
 15875                           	opt stack 0
 15876  0033DA                     _xtoi:
 15877                           	opt stack 12
 15878                           
 15879                           ;incstack = 0
 15880  0033DA  0E00               	movlw	0
 15881  0033DC  0100               	movlb	0	; () banked
 15882  0033DE  6F87               	movwf	xtoi@sign& (0+255),b
 15883  0033E0  0E00               	movlw	0
 15884  0033E2  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15885  0033E4  0E00               	movlw	0
 15886  0033E6  6F88               	movwf	xtoi@val& (0+255),b
 15887  0033E8  D003               	goto	l3275
 15888  0033EA                     
 15889                           ; BSR set to: 0
 15890  0033EA  0100               	movlb	0	; () banked
 15891  0033EC  4B83               	infsnz	xtoi@s& (0+255),f,b
 15892  0033EE  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15893  0033F0                     l3275:
 15894                           
 15895                           ; BSR set to: 0
 15896                           
 15897                           ; BSR set to: 0
 15898  0033F0  C083  FFD9         	movff	xtoi@s,fsr2l
 15899  0033F4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15900  0033F8  50DF               	movf	indf2,w,c
 15901  0033FA  EC95  F02E         	call	_isspace
 15902  0033FE  B0D8               	btfsc	status,0,c
 15903  003400  D7F4               	goto	l3276
 15904  003402  C083  FFD9         	movff	xtoi@s,fsr2l
 15905  003406  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15906  00340A  0E2D               	movlw	45
 15907  00340C  18DE               	xorwf	postinc2,w,c
 15908  00340E  A4D8               	btfss	status,2,c
 15909  003410  D003               	goto	l3278
 15910  003412  0100               	movlb	0	; () banked
 15911  003414  2B87               	incf	xtoi@sign& (0+255),f,b
 15912  003416  D009               	goto	L15
 15913  003418                     l3278:
 15914                           
 15915                           ; BSR set to: 0
 15916  003418  C083  FFD9         	movff	xtoi@s,fsr2l
 15917  00341C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15918  003420  0E2B               	movlw	43
 15919  003422  18DE               	xorwf	postinc2,w,c
 15920  003424  A4D8               	btfss	status,2,c
 15921  003426  D028               	goto	l3281
 15922  003428  0100               	movlb	0	; () banked
 15923  00342A                     L15:
 15924  00342A  4B83               	infsnz	xtoi@s& (0+255),f,b
 15925  00342C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15926                           
 15927                           ; BSR set to: 0
 15928                           
 15929                           ; BSR set to: 0
 15930  00342E  D024               	goto	l3281
 15931  003430                     
 15932                           ; BSR set to: 0
 15933  003430  0100               	movlb	0	; () banked
 15934  003432  518A               	movf	xtoi@c& (0+255),w,b
 15935  003434  EC3B  F02F         	call	_isupper
 15936  003438  A0D8               	btfss	status,0,c
 15937  00343A  D006               	goto	l3283
 15938  00343C  0100               	movlb	0	; () banked
 15939  00343E  518A               	movf	xtoi@c& (0+255),w,b
 15940  003440  EC00  F030         	call	_tolower
 15941  003444  0100               	movlb	0	; () banked
 15942  003446  6F8A               	movwf	xtoi@c& (0+255),b
 15943  003448                     l3283:
 15944  003448  0100               	movlb	0	; () banked
 15945  00344A  518A               	movf	xtoi@c& (0+255),w,b
 15946  00344C  EC5D  F02F         	call	_isdigit
 15947  003450  A0D8               	btfss	status,0,c
 15948  003452  D002               	goto	l3284
 15949  003454  0E30               	movlw	48
 15950  003456  D001               	goto	L14
 15951  003458                     l3284:
 15952                           
 15953                           ; BSR set to: 0
 15954  003458  0E57               	movlw	87
 15955  00345A                     L14:
 15956  00345A  0100               	movlb	0	; () banked
 15957  00345C  5F8A               	subwf	xtoi@c& (0+255),f,b
 15958                           
 15959                           ; BSR set to: 0
 15960  00345E  3B88               	swapf	xtoi@val& (0+255),f,b
 15961  003460  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15962  003462  0EF0               	movlw	240
 15963  003464  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15964  003466  5188               	movf	xtoi@val& (0+255),w,b
 15965  003468  0B0F               	andlw	15
 15966  00346A  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15967  00346C  0EF0               	movlw	240
 15968  00346E  1788               	andwf	xtoi@val& (0+255),f,b
 15969  003470  518A               	movf	xtoi@c& (0+255),w,b
 15970  003472  2788               	addwf	xtoi@val& (0+255),f,b
 15971  003474  0E00               	movlw	0
 15972  003476  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15973  003478                     l3281:
 15974                           
 15975                           ; BSR set to: 0
 15976  003478  C083  FFD9         	movff	xtoi@s,fsr2l
 15977  00347C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15978  003480  0100               	movlb	0	; () banked
 15979  003482  4B83               	infsnz	xtoi@s& (0+255),f,b
 15980  003484  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15981  003486  50DF               	movf	indf2,w,c
 15982  003488  6F8A               	movwf	xtoi@c& (0+255),b
 15983  00348A  518A               	movf	xtoi@c& (0+255),w,b
 15984  00348C  EC00  F02D         	call	_isxdigit
 15985  003490  B0D8               	btfsc	status,0,c
 15986  003492  D7CE               	goto	l3282
 15987  003494  0100               	movlb	0	; () banked
 15988  003496  5187               	movf	xtoi@sign& (0+255),w,b
 15989  003498  B4D8               	btfsc	status,2,c
 15990  00349A  D00D               	goto	l3287
 15991                           
 15992                           ; BSR set to: 0
 15993  00349C  C088  F085         	movff	xtoi@val,??_xtoi
 15994  0034A0  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15995  0034A4  1F85               	comf	??_xtoi& (0+255),f,b
 15996  0034A6  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15997  0034A8  4B85               	infsnz	??_xtoi& (0+255),f,b
 15998  0034AA  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15999  0034AC  C085  F083         	movff	??_xtoi,?_xtoi
 16000  0034B0  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16001  0034B4  0012               	return	
 16002  0034B6                     l3287:
 16003                           
 16004                           ; BSR set to: 0
 16005  0034B6  C088  F083         	movff	xtoi@val,?_xtoi
 16006  0034BA  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16007                           
 16008                           ; BSR set to: 0
 16009  0034BE  0012               	return		;funcret
 16010  0034C0                     __end_of_xtoi:
 16011                           	opt stack 0
 16012                           tosu	equ	0xFFF
 16013                           tosh	equ	0xFFE
 16014                           tosl	equ	0xFFD
 16015                           pclath	equ	0xFFA
 16016                           tblptru	equ	0xFF8
 16017                           tblptrh	equ	0xFF7
 16018                           tblptrl	equ	0xFF6
 16019                           tablat	equ	0xFF5
 16020                           prodh	equ	0xFF4
 16021                           prodl	equ	0xFF3
 16022                           intcon	equ	0xFF2
 16023                           intcon2	equ	0xFF1
 16024                           intcon3	equ	0xFF0
 16025                           indf0	equ	0xFEF
 16026                           postinc0	equ	0xFEE
 16027                           plusw0	equ	0xFEB
 16028                           fsr0h	equ	0xFEA
 16029                           fsr0l	equ	0xFE9
 16030                           wreg	equ	0xFE8
 16031                           indf1	equ	0xFE7
 16032                           postinc1	equ	0xFE6
 16033                           postdec1	equ	0xFE5
 16034                           plusw1	equ	0xFE3
 16035                           fsr1h	equ	0xFE2
 16036                           fsr1l	equ	0xFE1
 16037                           indf2	equ	0xFDF
 16038                           postinc2	equ	0xFDE
 16039                           postdec2	equ	0xFDD
 16040                           plusw2	equ	0xFDB
 16041                           fsr2h	equ	0xFDA
 16042                           fsr2l	equ	0xFD9
 16043                           status	equ	0xFD8
 16044                           
 16045 ;; *************** function _tolower *****************
 16046 ;; Defined at:
 16047 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16048 ;; Parameters:    Size  Location     Type
 16049 ;;  c               1    wreg     unsigned char 
 16050 ;; Auto vars:     Size  Location     Type
 16051 ;;  c               1   29[BANK0 ] unsigned char 
 16052 ;; Return value:  Size  Location     Type
 16053 ;;                  1    wreg      unsigned char 
 16054 ;; Registers used:
 16055 ;;		wreg, status,2, status,0
 16056 ;; Tracked objects:
 16057 ;;		On entry : 0/0
 16058 ;;		On exit  : 0/0
 16059 ;;		Unchanged: 0/0
 16060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16065 ;;Total ram usage:        1 bytes
 16066 ;; Hardware stack levels used:    1
 16067 ;; Hardware stack levels required when called:   11
 16068 ;; This function calls:
 16069 ;;		Nothing
 16070 ;; This function is called by:
 16071 ;;		_xtoi
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           	psect	text62
 16076  006000                     __ptext62:
 16077                           	opt stack 0
 16078  006000                     _tolower:
 16079                           	opt stack 13
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;incstack = 0
 16083                           ;tolower@c stored from wreg
 16084  006000  0100               	movlb	0	; () banked
 16085  006002  6F7D               	movwf	tolower@c& (0+255),b
 16086  006004  0E5B               	movlw	91
 16087  006006  0100               	movlb	0	; () banked
 16088  006008  617D               	cpfslt	tolower@c& (0+255),b
 16089  00600A  D004               	goto	l3334
 16090                           
 16091                           ; BSR set to: 0
 16092  00600C  0E40               	movlw	64
 16093  00600E  657D               	cpfsgt	tolower@c& (0+255),b
 16094  006010  D001               	goto	l3334
 16095                           
 16096                           ; BSR set to: 0
 16097  006012  8B7D               	bsf	tolower@c& (0+255),5,b
 16098  006014                     l3334:
 16099                           
 16100                           ; BSR set to: 0
 16101                           
 16102                           ; BSR set to: 0
 16103  006014  517D               	movf	tolower@c& (0+255),w,b
 16104  006016  0012               	return	
 16105  006018                     __end_of_tolower:
 16106                           	opt stack 0
 16107                           tosu	equ	0xFFF
 16108                           tosh	equ	0xFFE
 16109                           tosl	equ	0xFFD
 16110                           pclath	equ	0xFFA
 16111                           tblptru	equ	0xFF8
 16112                           tblptrh	equ	0xFF7
 16113                           tblptrl	equ	0xFF6
 16114                           tablat	equ	0xFF5
 16115                           prodh	equ	0xFF4
 16116                           prodl	equ	0xFF3
 16117                           intcon	equ	0xFF2
 16118                           intcon2	equ	0xFF1
 16119                           intcon3	equ	0xFF0
 16120                           indf0	equ	0xFEF
 16121                           postinc0	equ	0xFEE
 16122                           plusw0	equ	0xFEB
 16123                           fsr0h	equ	0xFEA
 16124                           fsr0l	equ	0xFE9
 16125                           wreg	equ	0xFE8
 16126                           indf1	equ	0xFE7
 16127                           postinc1	equ	0xFE6
 16128                           postdec1	equ	0xFE5
 16129                           plusw1	equ	0xFE3
 16130                           fsr1h	equ	0xFE2
 16131                           fsr1l	equ	0xFE1
 16132                           indf2	equ	0xFDF
 16133                           postinc2	equ	0xFDE
 16134                           postdec2	equ	0xFDD
 16135                           plusw2	equ	0xFDB
 16136                           fsr2h	equ	0xFDA
 16137                           fsr2l	equ	0xFD9
 16138                           status	equ	0xFD8
 16139                           
 16140 ;; *************** function _isxdigit *****************
 16141 ;; Defined at:
 16142 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  c               1    wreg     unsigned char 
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;  c               1   34[BANK0 ] unsigned char 
 16147 ;; Return value:  Size  Location     Type
 16148 ;;		None               void
 16149 ;; Registers used:
 16150 ;;		wreg, status,2, status,0, cstack
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;Total ram usage:        3 bytes
 16161 ;; Hardware stack levels used:    1
 16162 ;; Hardware stack levels required when called:   12
 16163 ;; This function calls:
 16164 ;;		_isdigit
 16165 ;; This function is called by:
 16166 ;;		_xtoi
 16167 ;; This function uses a non-reentrant model
 16168 ;;
 16169                           
 16170                           	psect	text63
 16171  005A00                     __ptext63:
 16172                           	opt stack 0
 16173  005A00                     _isxdigit:
 16174                           	opt stack 12
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;incstack = 0
 16178                           ;isxdigit@c stored from wreg
 16179  005A00  0100               	movlb	0	; () banked
 16180  005A02  6F82               	movwf	isxdigit@c& (0+255),b
 16181  005A04  0E01               	movlw	1
 16182  005A06  0100               	movlb	0	; () banked
 16183  005A08  6F81               	movwf	_isxdigit$6426& (0+255),b
 16184                           
 16185                           ; BSR set to: 0
 16186  005A0A  0E67               	movlw	103
 16187  005A0C  6182               	cpfslt	isxdigit@c& (0+255),b
 16188  005A0E  D003               	goto	u10750
 16189                           
 16190                           ; BSR set to: 0
 16191  005A10  0E61               	movlw	97
 16192  005A12  6182               	cpfslt	isxdigit@c& (0+255),b
 16193  005A14  D00E               	goto	l3330
 16194  005A16                     u10750:
 16195                           
 16196                           ; BSR set to: 0
 16197                           
 16198                           ; BSR set to: 0
 16199  005A16  0E47               	movlw	71
 16200  005A18  6182               	cpfslt	isxdigit@c& (0+255),b
 16201  005A1A  D003               	goto	u10770
 16202                           
 16203                           ; BSR set to: 0
 16204  005A1C  0E41               	movlw	65
 16205  005A1E  6182               	cpfslt	isxdigit@c& (0+255),b
 16206  005A20  D008               	goto	l3330
 16207  005A22                     u10770:
 16208                           
 16209                           ; BSR set to: 0
 16210                           
 16211                           ; BSR set to: 0
 16212  005A22  5182               	movf	isxdigit@c& (0+255),w,b
 16213  005A24  EC5D  F02F         	call	_isdigit
 16214  005A28  B0D8               	btfsc	status,0,c
 16215  005A2A  D003               	goto	l3330
 16216  005A2C  0E00               	movlw	0
 16217  005A2E  0100               	movlb	0	; () banked
 16218  005A30  6F81               	movwf	_isxdigit$6426& (0+255),b
 16219  005A32                     l3330:
 16220                           
 16221                           ; BSR set to: 0
 16222  005A32  C081  F080         	movff	_isxdigit$6426,??_isxdigit
 16223  005A36  0100               	movlb	0	; () banked
 16224  005A38  3180               	rrcf	??_isxdigit& (0+255),w,b
 16225  005A3A  0012               	return	
 16226  005A3C                     __end_of_isxdigit:
 16227                           	opt stack 0
 16228                           tosu	equ	0xFFF
 16229                           tosh	equ	0xFFE
 16230                           tosl	equ	0xFFD
 16231                           pclath	equ	0xFFA
 16232                           tblptru	equ	0xFF8
 16233                           tblptrh	equ	0xFF7
 16234                           tblptrl	equ	0xFF6
 16235                           tablat	equ	0xFF5
 16236                           prodh	equ	0xFF4
 16237                           prodl	equ	0xFF3
 16238                           intcon	equ	0xFF2
 16239                           intcon2	equ	0xFF1
 16240                           intcon3	equ	0xFF0
 16241                           indf0	equ	0xFEF
 16242                           postinc0	equ	0xFEE
 16243                           plusw0	equ	0xFEB
 16244                           fsr0h	equ	0xFEA
 16245                           fsr0l	equ	0xFE9
 16246                           wreg	equ	0xFE8
 16247                           indf1	equ	0xFE7
 16248                           postinc1	equ	0xFE6
 16249                           postdec1	equ	0xFE5
 16250                           plusw1	equ	0xFE3
 16251                           fsr1h	equ	0xFE2
 16252                           fsr1l	equ	0xFE1
 16253                           indf2	equ	0xFDF
 16254                           postinc2	equ	0xFDE
 16255                           postdec2	equ	0xFDD
 16256                           plusw2	equ	0xFDB
 16257                           fsr2h	equ	0xFDA
 16258                           fsr2l	equ	0xFD9
 16259                           status	equ	0xFD8
 16260                           
 16261 ;; *************** function _strtol *****************
 16262 ;; Defined at:
 16263 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16266 ;;		 -> Terminal@Payload(80), 
 16267 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16268 ;;		 -> NULL(0), 
 16269 ;;  base            2   45[BANK0 ] int 
 16270 ;; Auto vars:     Size  Location     Type
 16271 ;;  a               4   52[BANK0 ] long 
 16272 ;;  c               1   56[BANK0 ] unsigned char 
 16273 ;;  sign            1   51[BANK0 ] unsigned char 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  4   41[BANK0 ] long 
 16276 ;; Registers used:
 16277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16283 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16284 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16285 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16286 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;Total ram usage:       16 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:   13
 16290 ;; This function calls:
 16291 ;;		___lmul
 16292 ;;		_isalpha
 16293 ;;		_isdigit
 16294 ;;		_isspace
 16295 ;;		_toupper
 16296 ;; This function is called by:
 16297 ;;		_Terminal
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           	psect	text64
 16302  00181C                     __ptext64:
 16303                           	opt stack 0
 16304  00181C                     _strtol:
 16305                           	opt stack 12
 16306                           
 16307                           ; BSR set to: 0
 16308                           ;incstack = 0
 16309  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16310  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16311  001824  50DF               	movf	indf2,w,c
 16312  001826  0100               	movlb	0	; () banked
 16313  001828  6F98               	movwf	strtol@c& (0+255),b
 16314                           
 16315                           ; BSR set to: 0
 16316  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16317  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16318                           
 16319                           ; BSR set to: 0
 16320  00182E  5198               	movf	strtol@c& (0+255),w,b
 16321  001830  EC95  F02E         	call	_isspace
 16322  001834  B0D8               	btfsc	status,0,c
 16323  001836  D7F2               	goto	_strtol
 16324  001838  0E00               	movlw	0
 16325  00183A  0100               	movlb	0	; () banked
 16326  00183C  6F94               	movwf	strtol@a& (0+255),b
 16327  00183E  0E00               	movlw	0
 16328  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16329  001842  0E00               	movlw	0
 16330  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16331  001846  0E00               	movlw	0
 16332  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16333  00184A  0E00               	movlw	0
 16334  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16335                           
 16336                           ; BSR set to: 0
 16337  00184E  0E2D               	movlw	45
 16338  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16339  001852  A4D8               	btfss	status,2,c
 16340  001854  D003               	goto	l3237
 16341                           
 16342                           ; BSR set to: 0
 16343  001856  0E01               	movlw	1
 16344  001858  6F93               	movwf	strtol@sign& (0+255),b
 16345  00185A  D004               	goto	u11150
 16346  00185C                     l3237:
 16347                           
 16348                           ; BSR set to: 0
 16349                           
 16350                           ; BSR set to: 0
 16351  00185C  0E2B               	movlw	43
 16352  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16353  001860  A4D8               	btfss	status,2,c
 16354  001862  D008               	goto	l3239
 16355  001864                     u11150:
 16356                           
 16357                           ; BSR set to: 0
 16358  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16359  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16360  00186C  50DF               	movf	indf2,w,c
 16361  00186E  6F98               	movwf	strtol@c& (0+255),b
 16362                           
 16363                           ; BSR set to: 0
 16364  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16365  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16366  001874                     l3239:
 16367                           
 16368                           ; BSR set to: 0
 16369                           
 16370                           ; BSR set to: 0
 16371                           
 16372                           ; BSR set to: 0
 16373  001874  0E30               	movlw	48
 16374  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16375  001878  A4D8               	btfss	status,2,c
 16376  00187A  D02E               	goto	l3247
 16377                           
 16378                           ; BSR set to: 0
 16379  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16380  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16381  001884  50DF               	movf	indf2,w,c
 16382  001886  6F98               	movwf	strtol@c& (0+255),b
 16383                           
 16384                           ; BSR set to: 0
 16385  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16386  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16387                           
 16388                           ; BSR set to: 0
 16389  00188C  518D               	movf	strtol@base& (0+255),w,b
 16390  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16391  001890  B4D8               	btfsc	status,2,c
 16392  001892  D005               	goto	u11180
 16393                           
 16394                           ; BSR set to: 0
 16395  001894  0E10               	movlw	16
 16396  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16397  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16398  00189A  A4D8               	btfss	status,2,c
 16399  00189C  D015               	goto	l3241
 16400  00189E                     u11180:
 16401                           
 16402                           ; BSR set to: 0
 16403                           
 16404                           ; BSR set to: 0
 16405  00189E  0E78               	movlw	120
 16406  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16407  0018A2  B4D8               	btfsc	status,2,c
 16408  0018A4  D004               	goto	u11200
 16409                           
 16410                           ; BSR set to: 0
 16411  0018A6  0E58               	movlw	88
 16412  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16413  0018AA  A4D8               	btfss	status,2,c
 16414  0018AC  D00D               	goto	l3241
 16415  0018AE                     u11200:
 16416                           
 16417                           ; BSR set to: 0
 16418                           
 16419                           ; BSR set to: 0
 16420  0018AE  0E00               	movlw	0
 16421  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16422  0018B2  0E10               	movlw	16
 16423  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16424                           
 16425                           ; BSR set to: 0
 16426  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16427  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16428  0018BE  50DF               	movf	indf2,w,c
 16429  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16430                           
 16431                           ; BSR set to: 0
 16432  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16433  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16434  0018C6  D008               	goto	l3247
 16435  0018C8                     l3241:
 16436                           
 16437                           ; BSR set to: 0
 16438                           
 16439                           ; BSR set to: 0
 16440  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16441  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16442  0018CC  A4D8               	btfss	status,2,c
 16443  0018CE  D004               	goto	l3247
 16444                           
 16445                           ; BSR set to: 0
 16446  0018D0  0E00               	movlw	0
 16447  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16448  0018D4  0E08               	movlw	8
 16449  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16450  0018D8                     l3247:
 16451                           
 16452                           ; BSR set to: 0
 16453                           
 16454                           ; BSR set to: 0
 16455                           
 16456                           ; BSR set to: 0
 16457                           
 16458                           ; BSR set to: 0
 16459  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16460  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16461  0018DC  A4D8               	btfss	status,2,c
 16462  0018DE  D004               	goto	l3248
 16463                           
 16464                           ; BSR set to: 0
 16465  0018E0  0E00               	movlw	0
 16466  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16467  0018E4  0E0A               	movlw	10
 16468  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16469  0018E8                     l3248:
 16470                           
 16471                           ; BSR set to: 0
 16472                           
 16473                           ; BSR set to: 0
 16474                           
 16475                           ; BSR set to: 0
 16476  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16477  0018EA  EC0C  F02E         	call	_isalpha
 16478  0018EE  A0D8               	btfss	status,0,c
 16479  0018F0  D008               	goto	l3250
 16480  0018F2  0100               	movlb	0	; () banked
 16481  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16482  0018F6  EC0C  F030         	call	_toupper
 16483  0018FA  0FC9               	addlw	201
 16484  0018FC  0100               	movlb	0	; () banked
 16485  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16486  001900  D009               	goto	l3253
 16487  001902                     l3250:
 16488                           
 16489                           ; BSR set to: 0
 16490  001902  0100               	movlb	0	; () banked
 16491  001904  5198               	movf	strtol@c& (0+255),w,b
 16492  001906  EC5D  F02F         	call	_isdigit
 16493  00190A  A0D8               	btfss	status,0,c
 16494  00190C  D039               	goto	l3254
 16495  00190E  0E30               	movlw	48
 16496  001910  0100               	movlb	0	; () banked
 16497  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16498  001914                     l3253:
 16499                           
 16500                           ; BSR set to: 0
 16501                           
 16502                           ; BSR set to: 0
 16503                           
 16504                           ; BSR set to: 0
 16505  001914  5198               	movf	strtol@c& (0+255),w,b
 16506  001916  6F8F               	movwf	??_strtol& (0+255),b
 16507  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16508  00191A  518D               	movf	strtol@base& (0+255),w,b
 16509  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16510  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16511  001920  0A80               	xorlw	128
 16512  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16513  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16514  001926  0A80               	xorlw	128
 16515  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16516  00192A  B0D8               	btfsc	status,0,c
 16517  00192C  D029               	goto	l3254
 16518                           
 16519                           ; BSR set to: 0
 16520                           
 16521                           ; BSR set to: 0
 16522                           
 16523                           ; BSR set to: 0
 16524  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16525  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16526  001936  0E00               	movlw	0
 16527  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16528  00193A  0EFF               	movlw	-1
 16529  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16530  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16531  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16532  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16533  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16534  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16535  001950  ECE9  F028         	call	___lmul	;wreg free
 16536  001954  0100               	movlb	0	; () banked
 16537  001956  5198               	movf	strtol@c& (0+255),w,b
 16538  001958  257D               	addwf	?___lmul& (0+255),w,b
 16539  00195A  6F94               	movwf	strtol@a& (0+255),b
 16540  00195C  0E00               	movlw	0
 16541  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16542  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16543  001962  0E00               	movlw	0
 16544  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16545  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16546  001968  0E00               	movlw	0
 16547  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16548  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16549                           
 16550                           ; BSR set to: 0
 16551  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16552  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16553  001976  50DF               	movf	indf2,w,c
 16554  001978  6F98               	movwf	strtol@c& (0+255),b
 16555                           
 16556                           ; BSR set to: 0
 16557  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16558  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16559  00197E  D7B4               	goto	l3248
 16560  001980                     l3254:
 16561                           
 16562                           ; BSR set to: 0
 16563  001980  0100               	movlb	0	; () banked
 16564  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16565  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16566  001986  B4D8               	btfsc	status,2,c
 16567  001988  D00E               	goto	l3256
 16568                           
 16569                           ; BSR set to: 0
 16570  00198A  0EFF               	movlw	255
 16571  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16572  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16573  001990  0EFF               	movlw	255
 16574  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16575  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16576  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16577  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16578  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16579  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16580  0019A6                     l3256:
 16581                           
 16582                           ; BSR set to: 0
 16583                           
 16584                           ; BSR set to: 0
 16585  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16586  0019A8  B4D8               	btfsc	status,2,c
 16587  0019AA  D01A               	goto	l3257
 16588                           
 16589                           ; BSR set to: 0
 16590  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16591  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16592  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16593  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16594  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16595  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16596  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16597  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16598  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16599  0019C6  0E00               	movlw	0
 16600  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16601  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16602  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16603  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16604  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16605  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16606  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16607                           
 16608                           ; BSR set to: 0
 16609  0019DE  0012               	return	
 16610  0019E0                     l3257:
 16611                           
 16612                           ; BSR set to: 0
 16613  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16614  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16615  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16616  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16617                           
 16618                           ; BSR set to: 0
 16619  0019F0  0012               	return		;funcret
 16620  0019F2                     __end_of_strtol:
 16621                           	opt stack 0
 16622                           tosu	equ	0xFFF
 16623                           tosh	equ	0xFFE
 16624                           tosl	equ	0xFFD
 16625                           pclath	equ	0xFFA
 16626                           tblptru	equ	0xFF8
 16627                           tblptrh	equ	0xFF7
 16628                           tblptrl	equ	0xFF6
 16629                           tablat	equ	0xFF5
 16630                           prodh	equ	0xFF4
 16631                           prodl	equ	0xFF3
 16632                           intcon	equ	0xFF2
 16633                           intcon2	equ	0xFF1
 16634                           intcon3	equ	0xFF0
 16635                           indf0	equ	0xFEF
 16636                           postinc0	equ	0xFEE
 16637                           plusw0	equ	0xFEB
 16638                           fsr0h	equ	0xFEA
 16639                           fsr0l	equ	0xFE9
 16640                           wreg	equ	0xFE8
 16641                           indf1	equ	0xFE7
 16642                           postinc1	equ	0xFE6
 16643                           postdec1	equ	0xFE5
 16644                           plusw1	equ	0xFE3
 16645                           fsr1h	equ	0xFE2
 16646                           fsr1l	equ	0xFE1
 16647                           indf2	equ	0xFDF
 16648                           postinc2	equ	0xFDE
 16649                           postdec2	equ	0xFDD
 16650                           plusw2	equ	0xFDB
 16651                           fsr2h	equ	0xFDA
 16652                           fsr2l	equ	0xFD9
 16653                           status	equ	0xFD8
 16654                           
 16655 ;; *************** function _toupper *****************
 16656 ;; Defined at:
 16657 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  c               1    wreg     unsigned char 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  c               1   29[BANK0 ] unsigned char 
 16662 ;; Return value:  Size  Location     Type
 16663 ;;                  1    wreg      unsigned char 
 16664 ;; Registers used:
 16665 ;;		wreg, status,2, status,0
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;Total ram usage:        1 bytes
 16676 ;; Hardware stack levels used:    1
 16677 ;; Hardware stack levels required when called:   11
 16678 ;; This function calls:
 16679 ;;		Nothing
 16680 ;; This function is called by:
 16681 ;;		_strtol
 16682 ;; This function uses a non-reentrant model
 16683 ;;
 16684                           
 16685                           	psect	text65
 16686  006018                     __ptext65:
 16687                           	opt stack 0
 16688  006018                     _toupper:
 16689                           	opt stack 13
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;incstack = 0
 16693                           ;toupper@c stored from wreg
 16694  006018  0100               	movlb	0	; () banked
 16695  00601A  6F7D               	movwf	toupper@c& (0+255),b
 16696  00601C  0E7B               	movlw	123
 16697  00601E  0100               	movlb	0	; () banked
 16698  006020  617D               	cpfslt	toupper@c& (0+255),b
 16699  006022  D004               	goto	l3261
 16700                           
 16701                           ; BSR set to: 0
 16702  006024  0E60               	movlw	96
 16703  006026  657D               	cpfsgt	toupper@c& (0+255),b
 16704  006028  D001               	goto	l3261
 16705                           
 16706                           ; BSR set to: 0
 16707  00602A  9B7D               	bcf	toupper@c& (0+255),5,b
 16708  00602C                     l3261:
 16709                           
 16710                           ; BSR set to: 0
 16711                           
 16712                           ; BSR set to: 0
 16713  00602C  517D               	movf	toupper@c& (0+255),w,b
 16714  00602E  0012               	return	
 16715  006030                     __end_of_toupper:
 16716                           	opt stack 0
 16717                           tosu	equ	0xFFF
 16718                           tosh	equ	0xFFE
 16719                           tosl	equ	0xFFD
 16720                           pclath	equ	0xFFA
 16721                           tblptru	equ	0xFF8
 16722                           tblptrh	equ	0xFF7
 16723                           tblptrl	equ	0xFF6
 16724                           tablat	equ	0xFF5
 16725                           prodh	equ	0xFF4
 16726                           prodl	equ	0xFF3
 16727                           intcon	equ	0xFF2
 16728                           intcon2	equ	0xFF1
 16729                           intcon3	equ	0xFF0
 16730                           indf0	equ	0xFEF
 16731                           postinc0	equ	0xFEE
 16732                           plusw0	equ	0xFEB
 16733                           fsr0h	equ	0xFEA
 16734                           fsr0l	equ	0xFE9
 16735                           wreg	equ	0xFE8
 16736                           indf1	equ	0xFE7
 16737                           postinc1	equ	0xFE6
 16738                           postdec1	equ	0xFE5
 16739                           plusw1	equ	0xFE3
 16740                           fsr1h	equ	0xFE2
 16741                           fsr1l	equ	0xFE1
 16742                           indf2	equ	0xFDF
 16743                           postinc2	equ	0xFDE
 16744                           postdec2	equ	0xFDD
 16745                           plusw2	equ	0xFDB
 16746                           fsr2h	equ	0xFDA
 16747                           fsr2l	equ	0xFD9
 16748                           status	equ	0xFD8
 16749                           
 16750 ;; *************** function _isspace *****************
 16751 ;; Defined at:
 16752 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16753 ;; Parameters:    Size  Location     Type
 16754 ;;  c               1    wreg     unsigned char 
 16755 ;; Auto vars:     Size  Location     Type
 16756 ;;  c               1   31[BANK0 ] unsigned char 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;		None               void
 16759 ;; Registers used:
 16760 ;;		wreg, status,2, status,0
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/0
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;Total ram usage:        3 bytes
 16771 ;; Hardware stack levels used:    1
 16772 ;; Hardware stack levels required when called:   11
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_strtol
 16777 ;;		_xtoi
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781                           	psect	text66
 16782  005D2A                     __ptext66:
 16783                           	opt stack 0
 16784  005D2A                     _isspace:
 16785                           	opt stack 13
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;incstack = 0
 16789                           ;isspace@c stored from wreg
 16790  005D2A  0100               	movlb	0	; () banked
 16791  005D2C  6F7F               	movwf	isspace@c& (0+255),b
 16792  005D2E  0E01               	movlw	1
 16793  005D30  0100               	movlb	0	; () banked
 16794  005D32  6F7E               	movwf	_isspace$6419& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797  005D34  0E20               	movlw	32
 16798  005D36  197F               	xorwf	isspace@c& (0+255),w,b
 16799  005D38  B4D8               	btfsc	status,2,c
 16800  005D3A  D008               	goto	l3318
 16801                           
 16802                           ; BSR set to: 0
 16803  005D3C  0E0E               	movlw	14
 16804  005D3E  617F               	cpfslt	isspace@c& (0+255),b
 16805  005D40  D003               	goto	u10660
 16806                           
 16807                           ; BSR set to: 0
 16808  005D42  0E09               	movlw	9
 16809  005D44  617F               	cpfslt	isspace@c& (0+255),b
 16810  005D46  D002               	goto	l3318
 16811  005D48                     u10660:
 16812                           
 16813                           ; BSR set to: 0
 16814                           
 16815                           ; BSR set to: 0
 16816  005D48  0E00               	movlw	0
 16817  005D4A  6F7E               	movwf	_isspace$6419& (0+255),b
 16818  005D4C                     l3318:
 16819                           
 16820                           ; BSR set to: 0
 16821                           
 16822                           ; BSR set to: 0
 16823  005D4C  C07E  F07D         	movff	_isspace$6419,??_isspace
 16824  005D50  317D               	rrcf	??_isspace& (0+255),w,b
 16825  005D52  0012               	return	
 16826  005D54                     __end_of_isspace:
 16827                           	opt stack 0
 16828                           tosu	equ	0xFFF
 16829                           tosh	equ	0xFFE
 16830                           tosl	equ	0xFFD
 16831                           pclath	equ	0xFFA
 16832                           tblptru	equ	0xFF8
 16833                           tblptrh	equ	0xFF7
 16834                           tblptrl	equ	0xFF6
 16835                           tablat	equ	0xFF5
 16836                           prodh	equ	0xFF4
 16837                           prodl	equ	0xFF3
 16838                           intcon	equ	0xFF2
 16839                           intcon2	equ	0xFF1
 16840                           intcon3	equ	0xFF0
 16841                           indf0	equ	0xFEF
 16842                           postinc0	equ	0xFEE
 16843                           plusw0	equ	0xFEB
 16844                           fsr0h	equ	0xFEA
 16845                           fsr0l	equ	0xFE9
 16846                           wreg	equ	0xFE8
 16847                           indf1	equ	0xFE7
 16848                           postinc1	equ	0xFE6
 16849                           postdec1	equ	0xFE5
 16850                           plusw1	equ	0xFE3
 16851                           fsr1h	equ	0xFE2
 16852                           fsr1l	equ	0xFE1
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           postdec2	equ	0xFDD
 16856                           plusw2	equ	0xFDB
 16857                           fsr2h	equ	0xFDA
 16858                           fsr2l	equ	0xFD9
 16859                           status	equ	0xFD8
 16860                           
 16861 ;; *************** function _isalpha *****************
 16862 ;; Defined at:
 16863 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;  c               1    wreg     unsigned char 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  c               1   34[BANK0 ] unsigned char 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;		None               void
 16870 ;; Registers used:
 16871 ;;		wreg, status,2, status,0, cstack
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;Total ram usage:        3 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; Hardware stack levels required when called:   12
 16884 ;; This function calls:
 16885 ;;		_isupper
 16886 ;; This function is called by:
 16887 ;;		_strtol
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text67
 16892  005C18                     __ptext67:
 16893                           	opt stack 0
 16894  005C18                     _isalpha:
 16895                           	opt stack 12
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;incstack = 0
 16899                           ;isalpha@c stored from wreg
 16900  005C18  0100               	movlb	0	; () banked
 16901  005C1A  6F82               	movwf	isalpha@c& (0+255),b
 16902  005C1C  0E01               	movlw	1
 16903  005C1E  0100               	movlb	0	; () banked
 16904  005C20  6F81               	movwf	_isalpha$6416& (0+255),b
 16905                           
 16906                           ; BSR set to: 0
 16907  005C22  0E7B               	movlw	123
 16908  005C24  6182               	cpfslt	isalpha@c& (0+255),b
 16909  005C26  D003               	goto	u10680
 16910                           
 16911                           ; BSR set to: 0
 16912  005C28  0E61               	movlw	97
 16913  005C2A  6182               	cpfslt	isalpha@c& (0+255),b
 16914  005C2C  D008               	goto	l3313
 16915  005C2E                     u10680:
 16916                           
 16917                           ; BSR set to: 0
 16918                           
 16919                           ; BSR set to: 0
 16920  005C2E  5182               	movf	isalpha@c& (0+255),w,b
 16921  005C30  EC3B  F02F         	call	_isupper
 16922  005C34  B0D8               	btfsc	status,0,c
 16923  005C36  D003               	goto	l3313
 16924  005C38  0E00               	movlw	0
 16925  005C3A  0100               	movlb	0	; () banked
 16926  005C3C  6F81               	movwf	_isalpha$6416& (0+255),b
 16927  005C3E                     l3313:
 16928                           
 16929                           ; BSR set to: 0
 16930  005C3E  C081  F080         	movff	_isalpha$6416,??_isalpha
 16931  005C42  0100               	movlb	0	; () banked
 16932  005C44  3180               	rrcf	??_isalpha& (0+255),w,b
 16933  005C46  0012               	return	
 16934  005C48                     __end_of_isalpha:
 16935                           	opt stack 0
 16936                           tosu	equ	0xFFF
 16937                           tosh	equ	0xFFE
 16938                           tosl	equ	0xFFD
 16939                           pclath	equ	0xFFA
 16940                           tblptru	equ	0xFF8
 16941                           tblptrh	equ	0xFF7
 16942                           tblptrl	equ	0xFF6
 16943                           tablat	equ	0xFF5
 16944                           prodh	equ	0xFF4
 16945                           prodl	equ	0xFF3
 16946                           intcon	equ	0xFF2
 16947                           intcon2	equ	0xFF1
 16948                           intcon3	equ	0xFF0
 16949                           indf0	equ	0xFEF
 16950                           postinc0	equ	0xFEE
 16951                           plusw0	equ	0xFEB
 16952                           fsr0h	equ	0xFEA
 16953                           fsr0l	equ	0xFE9
 16954                           wreg	equ	0xFE8
 16955                           indf1	equ	0xFE7
 16956                           postinc1	equ	0xFE6
 16957                           postdec1	equ	0xFE5
 16958                           plusw1	equ	0xFE3
 16959                           fsr1h	equ	0xFE2
 16960                           fsr1l	equ	0xFE1
 16961                           indf2	equ	0xFDF
 16962                           postinc2	equ	0xFDE
 16963                           postdec2	equ	0xFDD
 16964                           plusw2	equ	0xFDB
 16965                           fsr2h	equ	0xFDA
 16966                           fsr2l	equ	0xFD9
 16967                           status	equ	0xFD8
 16968                           
 16969 ;; *************** function _isupper *****************
 16970 ;; Defined at:
 16971 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  c               1    wreg     unsigned char 
 16974 ;; Auto vars:     Size  Location     Type
 16975 ;;  c               1   31[BANK0 ] unsigned char 
 16976 ;; Return value:  Size  Location     Type
 16977 ;;		None               void
 16978 ;; Registers used:
 16979 ;;		wreg, status,2, status,0
 16980 ;; Tracked objects:
 16981 ;;		On entry : 0/0
 16982 ;;		On exit  : 0/0
 16983 ;;		Unchanged: 0/0
 16984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;Total ram usage:        3 bytes
 16990 ;; Hardware stack levels used:    1
 16991 ;; Hardware stack levels required when called:   11
 16992 ;; This function calls:
 16993 ;;		Nothing
 16994 ;; This function is called by:
 16995 ;;		_xtoi
 16996 ;;		_isalpha
 16997 ;; This function uses a non-reentrant model
 16998 ;;
 16999                           
 17000                           	psect	text68
 17001  005E76                     __ptext68:
 17002                           	opt stack 0
 17003  005E76                     _isupper:
 17004                           	opt stack 13
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;incstack = 0
 17008                           ;isupper@c stored from wreg
 17009  005E76  0100               	movlb	0	; () banked
 17010  005E78  6F7F               	movwf	isupper@c& (0+255),b
 17011  005E7A  0E00               	movlw	0
 17012  005E7C  0100               	movlb	0	; () banked
 17013  005E7E  6F7E               	movwf	_isupper$6422& (0+255),b
 17014                           
 17015                           ; BSR set to: 0
 17016  005E80  0E5B               	movlw	91
 17017  005E82  617F               	cpfslt	isupper@c& (0+255),b
 17018  005E84  D005               	goto	l3323
 17019                           
 17020                           ; BSR set to: 0
 17021  005E86  0E40               	movlw	64
 17022  005E88  657F               	cpfsgt	isupper@c& (0+255),b
 17023  005E8A  D002               	goto	l3323
 17024                           
 17025                           ; BSR set to: 0
 17026  005E8C  0E01               	movlw	1
 17027  005E8E  6F7E               	movwf	_isupper$6422& (0+255),b
 17028  005E90                     l3323:
 17029                           
 17030                           ; BSR set to: 0
 17031                           
 17032                           ; BSR set to: 0
 17033  005E90  C07E  F07D         	movff	_isupper$6422,??_isupper
 17034  005E94  317D               	rrcf	??_isupper& (0+255),w,b
 17035  005E96  0012               	return	
 17036  005E98                     __end_of_isupper:
 17037                           	opt stack 0
 17038                           tosu	equ	0xFFF
 17039                           tosh	equ	0xFFE
 17040                           tosl	equ	0xFFD
 17041                           pclath	equ	0xFFA
 17042                           tblptru	equ	0xFF8
 17043                           tblptrh	equ	0xFF7
 17044                           tblptrl	equ	0xFF6
 17045                           tablat	equ	0xFF5
 17046                           prodh	equ	0xFF4
 17047                           prodl	equ	0xFF3
 17048                           intcon	equ	0xFF2
 17049                           intcon2	equ	0xFF1
 17050                           intcon3	equ	0xFF0
 17051                           indf0	equ	0xFEF
 17052                           postinc0	equ	0xFEE
 17053                           plusw0	equ	0xFEB
 17054                           fsr0h	equ	0xFEA
 17055                           fsr0l	equ	0xFE9
 17056                           wreg	equ	0xFE8
 17057                           indf1	equ	0xFE7
 17058                           postinc1	equ	0xFE6
 17059                           postdec1	equ	0xFE5
 17060                           plusw1	equ	0xFE3
 17061                           fsr1h	equ	0xFE2
 17062                           fsr1l	equ	0xFE1
 17063                           indf2	equ	0xFDF
 17064                           postinc2	equ	0xFDE
 17065                           postdec2	equ	0xFDD
 17066                           plusw2	equ	0xFDB
 17067                           fsr2h	equ	0xFDA
 17068                           fsr2l	equ	0xFD9
 17069                           status	equ	0xFD8
 17070                           
 17071 ;; *************** function _strcpy *****************
 17072 ;; Defined at:
 17073 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17076 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17077 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17078 ;;		 -> STR_23(20), STR_21(42), 
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17081 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17082 ;; Return value:  Size  Location     Type
 17083 ;;                  2   29[BANK0 ] PTR unsigned char 
 17084 ;; Registers used:
 17085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17086 ;; Tracked objects:
 17087 ;;		On entry : 0/0
 17088 ;;		On exit  : 0/0
 17089 ;;		Unchanged: 0/0
 17090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;Total ram usage:        6 bytes
 17096 ;; Hardware stack levels used:    1
 17097 ;; Hardware stack levels required when called:   11
 17098 ;; This function calls:
 17099 ;;		Nothing
 17100 ;; This function is called by:
 17101 ;;		_Terminal
 17102 ;;		_Term_MainSm
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text69
 17107  005B86                     __ptext69:
 17108                           	opt stack 0
 17109  005B86                     _strcpy:
 17110                           	opt stack 15
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;incstack = 0
 17114  005B86  C07D  F081         	movff	strcpy@to,strcpy@cp
 17115  005B8A  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17116  005B8E  D005               	goto	l3215
 17117  005B90  0100               	movlb	0	; () banked
 17118  005B92  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17119  005B94  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17120  005B96  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17121  005B98  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17122  005B9A                     l3215:
 17123                           
 17124                           ; BSR set to: 0
 17125  005B9A  C07F  FFF6         	movff	strcpy@from,tblptrl
 17126  005B9E  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17127  005BA2                     	if	0	;tblptru may be non-zero
 17128  005BA2                     	endif
 17129  005BA2                     	if	0	;tblptru may be non-zero
 17130  005BA2                     	endif
 17131  005BA2  C081  FFD9         	movff	strcpy@cp,fsr2l
 17132  005BA6  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17133  005BAA  0008               	tblrd		*
 17134  005BAC  CFF5 FFDF          	movff	tablat,indf2
 17135  005BB0  50DF               	movf	indf2,w,c
 17136  005BB2  B4D8               	btfsc	status,2,c
 17137  005BB4  0012               	return	
 17138  005BB6  D7EC               	goto	l3216
 17139  005BB8                     __end_of_strcpy:
 17140                           	opt stack 0
 17141                           tosu	equ	0xFFF
 17142                           tosh	equ	0xFFE
 17143                           tosl	equ	0xFFD
 17144                           pclath	equ	0xFFA
 17145                           tblptru	equ	0xFF8
 17146                           tblptrh	equ	0xFF7
 17147                           tblptrl	equ	0xFF6
 17148                           tablat	equ	0xFF5
 17149                           prodh	equ	0xFF4
 17150                           prodl	equ	0xFF3
 17151                           intcon	equ	0xFF2
 17152                           intcon2	equ	0xFF1
 17153                           intcon3	equ	0xFF0
 17154                           indf0	equ	0xFEF
 17155                           postinc0	equ	0xFEE
 17156                           plusw0	equ	0xFEB
 17157                           fsr0h	equ	0xFEA
 17158                           fsr0l	equ	0xFE9
 17159                           wreg	equ	0xFE8
 17160                           indf1	equ	0xFE7
 17161                           postinc1	equ	0xFE6
 17162                           postdec1	equ	0xFE5
 17163                           plusw1	equ	0xFE3
 17164                           fsr1h	equ	0xFE2
 17165                           fsr1l	equ	0xFE1
 17166                           indf2	equ	0xFDF
 17167                           postinc2	equ	0xFDE
 17168                           postdec2	equ	0xFDD
 17169                           plusw2	equ	0xFDB
 17170                           fsr2h	equ	0xFDA
 17171                           fsr2l	equ	0xFD9
 17172                           status	equ	0xFD8
 17173                           
 17174 ;; *************** function _putUSBUSART *****************
 17175 ;; Defined at:
 17176 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17179 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17180 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17181 ;;		 -> RxBuffer(400), 
 17182 ;;  length          1   37[BANK0 ] unsigned char 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      void 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17194 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17198 ;;Total ram usage:        3 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   11
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		_Terminal
 17205 ;;		_Term_MainSm
 17206 ;;		_GsmGprsTerminal
 17207 ;; This function uses a non-reentrant model
 17208 ;;
 17209                           
 17210                           	psect	text70
 17211  005E98                     __ptext70:
 17212                           	opt stack 0
 17213  005E98                     _putUSBUSART:
 17214                           	opt stack 15
 17215                           
 17216                           ;usb_device_cdc.c: 584: ;
 17217                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17218                           
 17219                           ;incstack = 0
 17220  005E98  0100               	movlb	0	; () banked
 17221  005E9A  51CD               	movf	_cdc_trf_state& (0+255),w,b
 17222  005E9C  A4D8               	btfss	status,2,c
 17223  005E9E  0012               	return	
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;usb_device_cdc.c: 586: {
 17227                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17228  005EA0  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17229  005EA4  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17230                           
 17231                           ; BSR set to: 0
 17232  005EA8  C085  F0CC         	movff	putUSBUSART@length,_cdc_tx_len
 17233                           
 17234                           ; BSR set to: 0
 17235  005EAC  0E01               	movlw	1
 17236  005EAE  0101               	movlb	1	; () banked
 17237  005EB0  6FDA               	movwf	_cdc_mem_type& (0+255),b
 17238                           
 17239                           ; BSR set to: 1
 17240  005EB2  0E01               	movlw	1
 17241  005EB4  0100               	movlb	0	; () banked
 17242  005EB6  6FCD               	movwf	_cdc_trf_state& (0+255),b
 17243  005EB8  0012               	return	
 17244  005EBA                     __end_of_putUSBUSART:
 17245                           	opt stack 0
 17246                           tosu	equ	0xFFF
 17247                           tosh	equ	0xFFE
 17248                           tosl	equ	0xFFD
 17249                           pclath	equ	0xFFA
 17250                           tblptru	equ	0xFF8
 17251                           tblptrh	equ	0xFF7
 17252                           tblptrl	equ	0xFF6
 17253                           tablat	equ	0xFF5
 17254                           prodh	equ	0xFF4
 17255                           prodl	equ	0xFF3
 17256                           intcon	equ	0xFF2
 17257                           intcon2	equ	0xFF1
 17258                           intcon3	equ	0xFF0
 17259                           indf0	equ	0xFEF
 17260                           postinc0	equ	0xFEE
 17261                           plusw0	equ	0xFEB
 17262                           fsr0h	equ	0xFEA
 17263                           fsr0l	equ	0xFE9
 17264                           wreg	equ	0xFE8
 17265                           indf1	equ	0xFE7
 17266                           postinc1	equ	0xFE6
 17267                           postdec1	equ	0xFE5
 17268                           plusw1	equ	0xFE3
 17269                           fsr1h	equ	0xFE2
 17270                           fsr1l	equ	0xFE1
 17271                           indf2	equ	0xFDF
 17272                           postinc2	equ	0xFDE
 17273                           postdec2	equ	0xFDD
 17274                           plusw2	equ	0xFDB
 17275                           fsr2h	equ	0xFDA
 17276                           fsr2l	equ	0xFD9
 17277                           status	equ	0xFD8
 17278                           
 17279 ;; *************** function _itoa *****************
 17280 ;; Defined at:
 17281 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17282 ;; Parameters:    Size  Location     Type
 17283 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17284 ;;		 -> Terminal@Payload(80), 
 17285 ;;  val             2   53[BANK0 ] int 
 17286 ;;  base            2   55[BANK0 ] int 
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17289 ;;		 -> Terminal@Payload(80), 
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  2   51[BANK0 ] PTR unsigned char 
 17292 ;; Registers used:
 17293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;Total ram usage:        8 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:   13
 17306 ;; This function calls:
 17307 ;;		_utoa
 17308 ;; This function is called by:
 17309 ;;		_Terminal
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           	psect	text71
 17314  0057B8                     __ptext71:
 17315                           	opt stack 0
 17316  0057B8                     _itoa:
 17317                           	opt stack 12
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;incstack = 0
 17321  0057B8  C093  F099         	movff	itoa@buf,itoa@cp
 17322  0057BC  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17323  0057C0  0100               	movlb	0	; () banked
 17324  0057C2  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17325  0057C4  D00C               	goto	l2963
 17326                           
 17327                           ; BSR set to: 0
 17328  0057C6  C093  FFD9         	movff	itoa@buf,fsr2l
 17329  0057CA  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17330  0057CE  0E2D               	movlw	45
 17331  0057D0  6EDF               	movwf	indf2,c
 17332                           
 17333                           ; BSR set to: 0
 17334  0057D2  4B93               	infsnz	itoa@buf& (0+255),f,b
 17335  0057D4  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17336                           
 17337                           ; BSR set to: 0
 17338  0057D6  6D95               	negf	itoa@val& (0+255),b
 17339  0057D8  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17340  0057DA  B0D8               	btfsc	status,0,c
 17341  0057DC  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17342  0057DE                     l2963:
 17343                           
 17344                           ; BSR set to: 0
 17345                           
 17346                           ; BSR set to: 0
 17347  0057DE  C093  F08A         	movff	itoa@buf,utoa@buf
 17348  0057E2  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17349  0057E6  C095  F08C         	movff	itoa@val,utoa@val
 17350  0057EA  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17351  0057EE  C097  F08E         	movff	itoa@base,utoa@base
 17352  0057F2  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17353  0057F6  EC5E  F021         	call	_utoa	;wreg free
 17354  0057FA  0012               	return	
 17355  0057FC                     __end_of_itoa:
 17356                           	opt stack 0
 17357                           tosu	equ	0xFFF
 17358                           tosh	equ	0xFFE
 17359                           tosl	equ	0xFFD
 17360                           pclath	equ	0xFFA
 17361                           tblptru	equ	0xFF8
 17362                           tblptrh	equ	0xFF7
 17363                           tblptrl	equ	0xFF6
 17364                           tablat	equ	0xFF5
 17365                           prodh	equ	0xFF4
 17366                           prodl	equ	0xFF3
 17367                           intcon	equ	0xFF2
 17368                           intcon2	equ	0xFF1
 17369                           intcon3	equ	0xFF0
 17370                           indf0	equ	0xFEF
 17371                           postinc0	equ	0xFEE
 17372                           plusw0	equ	0xFEB
 17373                           fsr0h	equ	0xFEA
 17374                           fsr0l	equ	0xFE9
 17375                           wreg	equ	0xFE8
 17376                           indf1	equ	0xFE7
 17377                           postinc1	equ	0xFE6
 17378                           postdec1	equ	0xFE5
 17379                           plusw1	equ	0xFE3
 17380                           fsr1h	equ	0xFE2
 17381                           fsr1l	equ	0xFE1
 17382                           indf2	equ	0xFDF
 17383                           postinc2	equ	0xFDE
 17384                           postdec2	equ	0xFDD
 17385                           plusw2	equ	0xFDB
 17386                           fsr2h	equ	0xFDA
 17387                           fsr2l	equ	0xFD9
 17388                           status	equ	0xFD8
 17389                           
 17390 ;; *************** function _utoa *****************
 17391 ;; Defined at:
 17392 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17395 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17396 ;;  val             2   44[BANK0 ] unsigned int 
 17397 ;;  base            2   46[BANK0 ] int 
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;  v               2   48[BANK0 ] unsigned int 
 17400 ;;  c               1   50[BANK0 ] unsigned char 
 17401 ;; Return value:  Size  Location     Type
 17402 ;;                  2   42[BANK0 ] PTR unsigned char 
 17403 ;; Registers used:
 17404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17405 ;; Tracked objects:
 17406 ;;		On entry : 0/0
 17407 ;;		On exit  : 0/0
 17408 ;;		Unchanged: 0/0
 17409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17410 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17414 ;;Total ram usage:        9 bytes
 17415 ;; Hardware stack levels used:    1
 17416 ;; Hardware stack levels required when called:   12
 17417 ;; This function calls:
 17418 ;;		___lwdiv
 17419 ;;		___lwmod
 17420 ;; This function is called by:
 17421 ;;		_Term_MainSm
 17422 ;;		_itoa
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426                           	psect	text72
 17427  0042BC                     __ptext72:
 17428                           	opt stack 0
 17429  0042BC                     _utoa:
 17430                           	opt stack 14
 17431                           
 17432                           ;incstack = 0
 17433  0042BC  C08C  F090         	movff	utoa@val,utoa@v
 17434  0042C0  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17435  0042C4  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17436  0042C8  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17437  0042CC  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17438  0042D0  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17439  0042D4  ECEB  F029         	call	___lwdiv	;wreg free
 17440  0042D8  C083  F090         	movff	?___lwdiv,utoa@v
 17441  0042DC  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17442  0042E0  0100               	movlb	0	; () banked
 17443  0042E2  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17444  0042E4  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17445                           
 17446                           ; BSR set to: 0
 17447  0042E6  5190               	movf	utoa@v& (0+255),w,b
 17448  0042E8  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17449  0042EA  A4D8               	btfss	status,2,c
 17450  0042EC  D7EB               	goto	l2967
 17451                           
 17452                           ; BSR set to: 0
 17453                           
 17454                           ; BSR set to: 0
 17455  0042EE  C08A  FFD9         	movff	utoa@buf,fsr2l
 17456  0042F2  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17457  0042F6  0E00               	movlw	0
 17458  0042F8  6EDF               	movwf	indf2,c
 17459                           
 17460                           ; BSR set to: 0
 17461  0042FA  078A               	decf	utoa@buf& (0+255),f,b
 17462  0042FC  A0D8               	btfss	status,0,c
 17463  0042FE  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17464  004300                     
 17465                           ; BSR set to: 0
 17466                           
 17467                           ; BSR set to: 0
 17468  004300  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17469  004304  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17470  004308  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17471  00430C  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17472  004310  ECFE  F02B         	call	___lwmod	;wreg free
 17473  004314  0100               	movlb	0	; () banked
 17474  004316  517D               	movf	?___lwmod& (0+255),w,b
 17475  004318  6F92               	movwf	utoa@c& (0+255),b
 17476                           
 17477                           ; BSR set to: 0
 17478  00431A  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17479  00431E  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17480  004322  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17481  004326  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17482  00432A  ECEB  F029         	call	___lwdiv	;wreg free
 17483  00432E  C083  F08C         	movff	?___lwdiv,utoa@val
 17484  004332  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17485  004336  0E09               	movlw	9
 17486  004338  0100               	movlb	0	; () banked
 17487  00433A  6592               	cpfsgt	utoa@c& (0+255),b
 17488  00433C  D002               	goto	l2970
 17489                           
 17490                           ; BSR set to: 0
 17491  00433E  0E07               	movlw	7
 17492  004340  2792               	addwf	utoa@c& (0+255),f,b
 17493  004342                     l2970:
 17494                           
 17495                           ; BSR set to: 0
 17496  004342  0E30               	movlw	48
 17497  004344  2792               	addwf	utoa@c& (0+255),f,b
 17498                           
 17499                           ; BSR set to: 0
 17500  004346  C08A  FFD9         	movff	utoa@buf,fsr2l
 17501  00434A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17502  00434E  C092  FFDF         	movff	utoa@c,indf2
 17503                           
 17504                           ; BSR set to: 0
 17505  004352  078A               	decf	utoa@buf& (0+255),f,b
 17506  004354  A0D8               	btfss	status,0,c
 17507  004356  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17508                           
 17509                           ; BSR set to: 0
 17510  004358  518C               	movf	utoa@val& (0+255),w,b
 17511  00435A  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17512  00435C  A4D8               	btfss	status,2,c
 17513  00435E  D7D0               	goto	l2969
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;	Return value of _utoa is never used
 17517                           
 17518                           ; BSR set to: 0
 17519  004360  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17520  004362  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17521  004364  0012               	return	
 17522  004366                     __end_of_utoa:
 17523                           	opt stack 0
 17524                           tosu	equ	0xFFF
 17525                           tosh	equ	0xFFE
 17526                           tosl	equ	0xFFD
 17527                           pclath	equ	0xFFA
 17528                           tblptru	equ	0xFF8
 17529                           tblptrh	equ	0xFF7
 17530                           tblptrl	equ	0xFF6
 17531                           tablat	equ	0xFF5
 17532                           prodh	equ	0xFF4
 17533                           prodl	equ	0xFF3
 17534                           intcon	equ	0xFF2
 17535                           intcon2	equ	0xFF1
 17536                           intcon3	equ	0xFF0
 17537                           indf0	equ	0xFEF
 17538                           postinc0	equ	0xFEE
 17539                           plusw0	equ	0xFEB
 17540                           fsr0h	equ	0xFEA
 17541                           fsr0l	equ	0xFE9
 17542                           wreg	equ	0xFE8
 17543                           indf1	equ	0xFE7
 17544                           postinc1	equ	0xFE6
 17545                           postdec1	equ	0xFE5
 17546                           plusw1	equ	0xFE3
 17547                           fsr1h	equ	0xFE2
 17548                           fsr1l	equ	0xFE1
 17549                           indf2	equ	0xFDF
 17550                           postinc2	equ	0xFDE
 17551                           postdec2	equ	0xFDD
 17552                           plusw2	equ	0xFDB
 17553                           fsr2h	equ	0xFDA
 17554                           fsr2l	equ	0xFD9
 17555                           status	equ	0xFD8
 17556                           
 17557 ;; *************** function ___lwmod *****************
 17558 ;; Defined at:
 17559 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;  dividend        2   29[BANK0 ] unsigned int 
 17562 ;;  divisor         2   31[BANK0 ] unsigned int 
 17563 ;; Auto vars:     Size  Location     Type
 17564 ;;  counter         1   33[BANK0 ] unsigned char 
 17565 ;; Return value:  Size  Location     Type
 17566 ;;                  2   29[BANK0 ] unsigned int 
 17567 ;; Registers used:
 17568 ;;		wreg, status,2, status,0
 17569 ;; Tracked objects:
 17570 ;;		On entry : 0/0
 17571 ;;		On exit  : 0/0
 17572 ;;		Unchanged: 0/0
 17573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;Total ram usage:        5 bytes
 17579 ;; Hardware stack levels used:    1
 17580 ;; Hardware stack levels required when called:   11
 17581 ;; This function calls:
 17582 ;;		Nothing
 17583 ;; This function is called by:
 17584 ;;		_utoa
 17585 ;; This function uses a non-reentrant model
 17586 ;;
 17587                           
 17588                           	psect	text73
 17589  0057FC                     __ptext73:
 17590                           	opt stack 0
 17591  0057FC                     ___lwmod:
 17592                           	opt stack 14
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;incstack = 0
 17596  0057FC  0100               	movlb	0	; () banked
 17597  0057FE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17598  005800  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17599  005802  B4D8               	btfsc	status,2,c
 17600  005804  D018               	goto	l3065
 17601                           
 17602                           ; BSR set to: 0
 17603  005806  0E01               	movlw	1
 17604  005808  6F81               	movwf	___lwmod@counter& (0+255),b
 17605  00580A  D004               	goto	l3060
 17606  00580C                     
 17607                           ; BSR set to: 0
 17608                           
 17609                           ; BSR set to: 0
 17610  00580C  90D8               	bcf	status,0,c
 17611  00580E  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17612  005810  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17613  005812  2B81               	incf	___lwmod@counter& (0+255),f,b
 17614  005814                     l3060:
 17615                           
 17616                           ; BSR set to: 0
 17617                           
 17618                           ; BSR set to: 0
 17619  005814  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17620  005816  D7FA               	goto	l3061
 17621  005818                     u10430:
 17622                           
 17623                           ; BSR set to: 0
 17624                           
 17625                           ; BSR set to: 0
 17626                           
 17627                           ; BSR set to: 0
 17628  005818  517F               	movf	___lwmod@divisor& (0+255),w,b
 17629  00581A  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17630  00581C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17631  00581E  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17632  005820  A0D8               	btfss	status,0,c
 17633  005822  D004               	goto	l3064
 17634                           
 17635                           ; BSR set to: 0
 17636  005824  517F               	movf	___lwmod@divisor& (0+255),w,b
 17637  005826  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17638  005828  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17639  00582A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17640  00582C                     l3064:
 17641                           
 17642                           ; BSR set to: 0
 17643                           
 17644                           ; BSR set to: 0
 17645  00582C  90D8               	bcf	status,0,c
 17646  00582E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17647  005830  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17648                           
 17649                           ; BSR set to: 0
 17650  005832  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17651  005834  D7F1               	goto	u10430
 17652  005836                     l3065:
 17653                           
 17654                           ; BSR set to: 0
 17655                           
 17656                           ; BSR set to: 0
 17657  005836  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17658  00583A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17659                           
 17660                           ; BSR set to: 0
 17661  00583E  0012               	return		;funcret
 17662  005840                     __end_of___lwmod:
 17663                           	opt stack 0
 17664                           tosu	equ	0xFFF
 17665                           tosh	equ	0xFFE
 17666                           tosl	equ	0xFFD
 17667                           pclath	equ	0xFFA
 17668                           tblptru	equ	0xFF8
 17669                           tblptrh	equ	0xFF7
 17670                           tblptrl	equ	0xFF6
 17671                           tablat	equ	0xFF5
 17672                           prodh	equ	0xFF4
 17673                           prodl	equ	0xFF3
 17674                           intcon	equ	0xFF2
 17675                           intcon2	equ	0xFF1
 17676                           intcon3	equ	0xFF0
 17677                           indf0	equ	0xFEF
 17678                           postinc0	equ	0xFEE
 17679                           plusw0	equ	0xFEB
 17680                           fsr0h	equ	0xFEA
 17681                           fsr0l	equ	0xFE9
 17682                           wreg	equ	0xFE8
 17683                           indf1	equ	0xFE7
 17684                           postinc1	equ	0xFE6
 17685                           postdec1	equ	0xFE5
 17686                           plusw1	equ	0xFE3
 17687                           fsr1h	equ	0xFE2
 17688                           fsr1l	equ	0xFE1
 17689                           indf2	equ	0xFDF
 17690                           postinc2	equ	0xFDE
 17691                           postdec2	equ	0xFDD
 17692                           plusw2	equ	0xFDB
 17693                           fsr2h	equ	0xFDA
 17694                           fsr2l	equ	0xFD9
 17695                           status	equ	0xFD8
 17696                           
 17697 ;; *************** function _getsUSBUSART *****************
 17698 ;; Defined at:
 17699 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17702 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17703 ;;  len             1   38[BANK0 ] unsigned char 
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;		None
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  1    wreg      unsigned char 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17715 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;Total ram usage:        4 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:   12
 17722 ;; This function calls:
 17723 ;;		_USBTransferOnePacket
 17724 ;; This function is called by:
 17725 ;;		_Terminal
 17726 ;;		_GsmGprsTerminal
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text74
 17731  00471C                     __ptext74:
 17732                           	opt stack 0
 17733  00471C                     _getsUSBUSART:
 17734                           	opt stack 13
 17735                           
 17736                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;incstack = 0
 17740  00471C  0E00               	movlw	0
 17741  00471E  0100               	movlb	0	; () banked
 17742  004720  6FCE               	movwf	_cdc_rx_len& (0+255),b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17746  004722  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17747  004724  11C5               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17748  004726  B4D8               	btfsc	status,2,c
 17749  004728  D006               	goto	u10960
 17750                           
 17751                           ; BSR set to: 0
 17752  00472A  C0C4  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17753  00472E  C0C5  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17754  004732  BEDF               	btfsc	indf2,7,c
 17755  004734  D03B               	goto	l1909
 17756  004736                     u10960:
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;usb_device_cdc.c: 493: {
 17760                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17761                           
 17762                           ; BSR set to: 0
 17763  004736  EE20 F001          	lfsr	2,1
 17764  00473A  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17765  00473C  26D9               	addwf	fsr2l,f,c
 17766  00473E  51C5               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17767  004740  22DA               	addwfc	fsr2h,f,c
 17768  004742  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17769  004744  5CDE               	subwf	postinc2,w,c
 17770  004746  B0D8               	btfsc	status,0,c
 17771  004748  D008               	goto	l1912
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17775  00474A  EE20 F001          	lfsr	2,1
 17776  00474E  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17777  004750  26D9               	addwf	fsr2l,f,c
 17778  004752  51C5               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17779  004754  22DA               	addwfc	fsr2h,f,c
 17780  004756  50DF               	movf	indf2,w,c
 17781  004758  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17782  00475A                     l1912:
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17786                           
 17787                           ; BSR set to: 0
 17788  00475A  0E00               	movlw	0
 17789  00475C  6FCE               	movwf	_cdc_rx_len& (0+255),b
 17790  00475E  D013               	goto	l1913
 17791  004760                     
 17792                           ; BSR set to: 0
 17793                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17794                           
 17795                           ; BSR set to: 0
 17796  004760  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17797  004762  0D01               	mullw	1
 17798  004764  0E50               	movlw	low _cdc_data_rx
 17799  004766  24F3               	addwf	prodl,w,c
 17800  004768  6ED9               	movwf	fsr2l,c
 17801  00476A  0E05               	movlw	high _cdc_data_rx
 17802  00476C  20F4               	addwfc	prodh,w,c
 17803  00476E  6EDA               	movwf	fsr2h,c
 17804  004770  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17805  004772  0D01               	mullw	1
 17806  004774  50F3               	movf	prodl,w,c
 17807  004776  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17808  004778  6EE1               	movwf	fsr1l,c
 17809  00477A  50F4               	movf	prodh,w,c
 17810  00477C  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17811  00477E  6EE2               	movwf	fsr1h,c
 17812  004780  CFDF FFE7          	movff	indf2,indf1
 17813                           
 17814                           ; BSR set to: 0
 17815  004784  2BCE               	incf	_cdc_rx_len& (0+255),f,b
 17816  004786                     l1913:
 17817                           
 17818                           ; BSR set to: 0
 17819                           
 17820                           ; BSR set to: 0
 17821  004786  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17822  004788  5DCE               	subwf	_cdc_rx_len& (0+255),w,b
 17823  00478A  A0D8               	btfss	status,0,c
 17824  00478C  D7E9               	goto	l1914
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17828                           
 17829                           ; BSR set to: 0
 17830  00478E  0E00               	movlw	0
 17831  004790  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17832  004792  0E50               	movlw	low _cdc_data_rx
 17833  004794  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17834  004796  0E05               	movlw	high _cdc_data_rx
 17835  004798  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17836  00479A  0E40               	movlw	64
 17837  00479C  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17838  00479E  0E02               	movlw	2
 17839  0047A0  EC9E  F01F         	call	_USBTransferOnePacket
 17840  0047A4  C07D  F0C4         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17841  0047A8  C07E  F0C5         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17842  0047AC                     l1909:
 17843                           
 17844                           ;usb_device_cdc.c: 513: }
 17845                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17846  0047AC  0100               	movlb	0	; () banked
 17847  0047AE  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17848  0047B0  0012               	return	
 17849  0047B2                     __end_of_getsUSBUSART:
 17850                           	opt stack 0
 17851                           tosu	equ	0xFFF
 17852                           tosh	equ	0xFFE
 17853                           tosl	equ	0xFFD
 17854                           pclath	equ	0xFFA
 17855                           tblptru	equ	0xFF8
 17856                           tblptrh	equ	0xFF7
 17857                           tblptrl	equ	0xFF6
 17858                           tablat	equ	0xFF5
 17859                           prodh	equ	0xFF4
 17860                           prodl	equ	0xFF3
 17861                           intcon	equ	0xFF2
 17862                           intcon2	equ	0xFF1
 17863                           intcon3	equ	0xFF0
 17864                           indf0	equ	0xFEF
 17865                           postinc0	equ	0xFEE
 17866                           plusw0	equ	0xFEB
 17867                           fsr0h	equ	0xFEA
 17868                           fsr0l	equ	0xFE9
 17869                           wreg	equ	0xFE8
 17870                           indf1	equ	0xFE7
 17871                           postinc1	equ	0xFE6
 17872                           postdec1	equ	0xFE5
 17873                           plusw1	equ	0xFE3
 17874                           fsr1h	equ	0xFE2
 17875                           fsr1l	equ	0xFE1
 17876                           indf2	equ	0xFDF
 17877                           postinc2	equ	0xFDE
 17878                           postdec2	equ	0xFDD
 17879                           plusw2	equ	0xFDB
 17880                           fsr2h	equ	0xFDA
 17881                           fsr2l	equ	0xFD9
 17882                           status	equ	0xFD8
 17883                           
 17884 ;; *************** function _USBTransferOnePacket *****************
 17885 ;; Defined at:
 17886 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17887 ;; Parameters:    Size  Location     Type
 17888 ;;  ep              1    wreg     unsigned char 
 17889 ;;  dir             1   29[BANK0 ] unsigned char 
 17890 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17891 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17892 ;;  len             1   32[BANK0 ] unsigned char 
 17893 ;; Auto vars:     Size  Location     Type
 17894 ;;  ep              1   33[BANK0 ] unsigned char 
 17895 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17896 ;;		 -> NULL(0), BDT(48), 
 17897 ;; Return value:  Size  Location     Type
 17898 ;;                  2   29[BANK0 ] PTR void 
 17899 ;; Registers used:
 17900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17901 ;; Tracked objects:
 17902 ;;		On entry : 0/0
 17903 ;;		On exit  : 0/0
 17904 ;;		Unchanged: 0/0
 17905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;Total ram usage:        7 bytes
 17911 ;; Hardware stack levels used:    1
 17912 ;; Hardware stack levels required when called:   11
 17913 ;; This function calls:
 17914 ;;		Nothing
 17915 ;; This function is called by:
 17916 ;;		_CDCInitEP
 17917 ;;		_getsUSBUSART
 17918 ;;		_CDCTxService
 17919 ;;		_USBCDCEventHandler
 17920 ;; This function uses a non-reentrant model
 17921 ;;
 17922                           
 17923                           	psect	text75
 17924  003F3C                     __ptext75:
 17925                           	opt stack 0
 17926  003F3C                     _USBTransferOnePacket:
 17927                           	opt stack 13
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;incstack = 0
 17931                           ;USBTransferOnePacket@ep stored from wreg
 17932  003F3C  0100               	movlb	0	; () banked
 17933  003F3E  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17934                           
 17935                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17936                           ;usb_device.c: 1018: if(dir != 0)
 17937  003F40  0100               	movlb	0	; () banked
 17938  003F42  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17939  003F44  B4D8               	btfsc	status,2,c
 17940  003F46  D007               	goto	l1633
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;usb_device.c: 1019: {
 17944                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17945  003F48  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17946  003F4A  0D02               	mullw	2
 17947  003F4C  0EBE               	movlw	low _pBDTEntryIn
 17948  003F4E  24F3               	addwf	prodl,w,c
 17949  003F50  6ED9               	movwf	fsr2l,c
 17950  003F52  0E00               	movlw	high _pBDTEntryIn
 17951  003F54  D006               	goto	L16
 17952  003F56                     l1633:
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;usb_device.c: 1023: else
 17956                           ;usb_device.c: 1024: {
 17957                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17958                           
 17959                           ; BSR set to: 0
 17960  003F56  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17961  003F58  0D02               	mullw	2
 17962  003F5A  0E0E               	movlw	low _pBDTEntryOut
 17963  003F5C  24F3               	addwf	prodl,w,c
 17964  003F5E  6ED9               	movwf	fsr2l,c
 17965  003F60  0E03               	movlw	high _pBDTEntryOut
 17966  003F62                     L16:
 17967  003F62  20F4               	addwfc	prodh,w,c
 17968  003F64  6EDA               	movwf	fsr2h,c
 17969  003F66  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17970  003F6A  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;usb_device.c: 1027: }
 17974                           ;usb_device.c: 1031: if(handle == 0)
 17975                           
 17976                           ; BSR set to: 0
 17977  003F6E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17978  003F70  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17979  003F72  A4D8               	btfss	status,2,c
 17980  003F74  D005               	goto	l1635
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;usb_device.c: 1032: {
 17984                           ;usb_device.c: 1033: return 0;
 17985  003F76  0E00               	movlw	0
 17986  003F78  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17987  003F7A  0E00               	movlw	0
 17988  003F7C  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17989                           
 17990                           ; BSR set to: 0
 17991  003F7E  0012               	return	
 17992  003F80                     l1635:
 17993                           
 17994                           ; BSR set to: 0
 17995                           ;usb_device.c: 1034: }
 17996                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17997                           
 17998                           ; BSR set to: 0
 17999  003F80  EE20 F002          	lfsr	2,2
 18000  003F84  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18001  003F86  26D9               	addwf	fsr2l,f,c
 18002  003F88  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18003  003F8A  22DA               	addwfc	fsr2h,f,c
 18004  003F8C  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18005  003F90  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18006                           
 18007                           ;usb_device.c: 1048: handle->CNT = len;
 18008  003F94  EE20 F001          	lfsr	2,1
 18009  003F98  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18010  003F9A  26D9               	addwf	fsr2l,f,c
 18011  003F9C  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18012  003F9E  22DA               	addwfc	fsr2h,f,c
 18013  003FA0  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18017  003FA4  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18018  003FA8  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18019  003FAC  0E40               	movlw	64
 18020  003FAE  16DF               	andwf	indf2,f,c
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18024  003FB0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18025  003FB4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18026  003FB8  0E00               	movlw	0
 18027  003FBA  86DB               	bsf	plusw2,3,c
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18031  003FBC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18032  003FC0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18033  003FC4  0E00               	movlw	0
 18034  003FC6  8EDB               	bsf	plusw2,7,c
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;usb_device.c: 1054: if(dir != 0)
 18038  003FC8  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18039  003FCA  B4D8               	btfsc	status,2,c
 18040  003FCC  D007               	goto	l1637
 18041                           
 18042                           ; BSR set to: 0
 18043                           ;usb_device.c: 1055: {
 18044                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18045  003FCE  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18046  003FD0  0D02               	mullw	2
 18047  003FD2  0EBE               	movlw	low _pBDTEntryIn
 18048  003FD4  24F3               	addwf	prodl,w,c
 18049  003FD6  6ED9               	movwf	fsr2l,c
 18050  003FD8  0E00               	movlw	high _pBDTEntryIn
 18051  003FDA  D006               	goto	L17
 18052  003FDC                     l1637:
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;usb_device.c: 1059: else
 18056                           ;usb_device.c: 1060: {
 18057                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18058                           
 18059                           ; BSR set to: 0
 18060  003FDC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18061  003FDE  0D02               	mullw	2
 18062  003FE0  0E0E               	movlw	low _pBDTEntryOut
 18063  003FE2  24F3               	addwf	prodl,w,c
 18064  003FE4  6ED9               	movwf	fsr2l,c
 18065  003FE6  0E03               	movlw	high _pBDTEntryOut
 18066  003FE8                     L17:
 18067  003FE8  20F4               	addwfc	prodh,w,c
 18068  003FEA  6EDA               	movwf	fsr2h,c
 18069  003FEC  0E04               	movlw	4
 18070  003FEE  1ADF               	xorwf	indf2,f,c
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;usb_device.c: 1063: }
 18074                           ;usb_device.c: 1064: return (void*)handle;
 18075                           
 18076                           ; BSR set to: 0
 18077  003FF0  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18078  003FF4  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18079  003FF8  0012               	return	
 18080  003FFA                     __end_of_USBTransferOnePacket:
 18081                           	opt stack 0
 18082                           tosu	equ	0xFFF
 18083                           tosh	equ	0xFFE
 18084                           tosl	equ	0xFFD
 18085                           pclath	equ	0xFFA
 18086                           tblptru	equ	0xFF8
 18087                           tblptrh	equ	0xFF7
 18088                           tblptrl	equ	0xFF6
 18089                           tablat	equ	0xFF5
 18090                           prodh	equ	0xFF4
 18091                           prodl	equ	0xFF3
 18092                           intcon	equ	0xFF2
 18093                           intcon2	equ	0xFF1
 18094                           intcon3	equ	0xFF0
 18095                           indf0	equ	0xFEF
 18096                           postinc0	equ	0xFEE
 18097                           plusw0	equ	0xFEB
 18098                           fsr0h	equ	0xFEA
 18099                           fsr0l	equ	0xFE9
 18100                           wreg	equ	0xFE8
 18101                           indf1	equ	0xFE7
 18102                           postinc1	equ	0xFE6
 18103                           postdec1	equ	0xFE5
 18104                           plusw1	equ	0xFE3
 18105                           fsr1h	equ	0xFE2
 18106                           fsr1l	equ	0xFE1
 18107                           indf2	equ	0xFDF
 18108                           postinc2	equ	0xFDE
 18109                           postdec2	equ	0xFDD
 18110                           plusw2	equ	0xFDB
 18111                           fsr2h	equ	0xFDA
 18112                           fsr2l	equ	0xFD9
 18113                           status	equ	0xFD8
 18114                           
 18115 ;; *************** function _atoi *****************
 18116 ;; Defined at:
 18117 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18120 ;;		 -> Terminal@Len(4), 
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;  a               2   40[BANK0 ] int 
 18123 ;;  sign            1   39[BANK0 ] unsigned char 
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  2   35[BANK0 ] int 
 18126 ;; Registers used:
 18127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18137 ;;Total ram usage:        7 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; Hardware stack levels required when called:   12
 18140 ;; This function calls:
 18141 ;;		___wmul
 18142 ;;		_isdigit
 18143 ;; This function is called by:
 18144 ;;		_Terminal
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           	psect	text76
 18149  00367C                     __ptext76:
 18150                           	opt stack 0
 18151  00367C                     _atoi:
 18152                           	opt stack 13
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;incstack = 0
 18156  00367C  D003               	goto	l2776
 18157  00367E  0100               	movlb	0	; () banked
 18158  003680  4B83               	infsnz	atoi@s& (0+255),f,b
 18159  003682  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18160  003684                     l2776:
 18161                           
 18162                           ; BSR set to: 0
 18163  003684  C083  FFD9         	movff	atoi@s,fsr2l
 18164  003688  C084  FFDA         	movff	atoi@s+1,fsr2h
 18165  00368C  0E20               	movlw	32
 18166  00368E  18DE               	xorwf	postinc2,w,c
 18167  003690  B4D8               	btfsc	status,2,c
 18168  003692  D7F5               	goto	l2777
 18169  003694  C083  FFD9         	movff	atoi@s,fsr2l
 18170  003698  C084  FFDA         	movff	atoi@s+1,fsr2h
 18171  00369C  0E09               	movlw	9
 18172  00369E  18DE               	xorwf	postinc2,w,c
 18173  0036A0  B4D8               	btfsc	status,2,c
 18174  0036A2  D7ED               	goto	l2777
 18175  0036A4  0E00               	movlw	0
 18176  0036A6  0100               	movlb	0	; () banked
 18177  0036A8  6F89               	movwf	(atoi@a+1)& (0+255),b
 18178  0036AA  0E00               	movlw	0
 18179  0036AC  6F88               	movwf	atoi@a& (0+255),b
 18180  0036AE  0E00               	movlw	0
 18181  0036B0  6F87               	movwf	atoi@sign& (0+255),b
 18182                           
 18183                           ; BSR set to: 0
 18184  0036B2  C083  FFD9         	movff	atoi@s,fsr2l
 18185  0036B6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18186  0036BA  0E2D               	movlw	45
 18187  0036BC  18DE               	xorwf	postinc2,w,c
 18188  0036BE  A4D8               	btfss	status,2,c
 18189  0036C0  D002               	goto	l2779
 18190                           
 18191                           ; BSR set to: 0
 18192  0036C2  2B87               	incf	atoi@sign& (0+255),f,b
 18193  0036C4  D026               	goto	l12239
 18194  0036C6                     l2779:
 18195                           
 18196                           ; BSR set to: 0
 18197                           
 18198                           ; BSR set to: 0
 18199  0036C6  C083  FFD9         	movff	atoi@s,fsr2l
 18200  0036CA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18201  0036CE  0E2B               	movlw	43
 18202  0036D0  18DE               	xorwf	postinc2,w,c
 18203  0036D2  A4D8               	btfss	status,2,c
 18204  0036D4  D020               	goto	l2782
 18205  0036D6  D01D               	goto	l12239
 18206  0036D8                     
 18207                           ; BSR set to: 0
 18208  0036D8  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18209  0036DC  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18210  0036E0  0E00               	movlw	0
 18211  0036E2  0100               	movlb	0	; () banked
 18212  0036E4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18213  0036E6  0E0A               	movlw	10
 18214  0036E8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18215  0036EA  ECAA  F02E         	call	___wmul	;wreg free
 18216  0036EE  C083  FFD9         	movff	atoi@s,fsr2l
 18217  0036F2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18218  0036F6  50DF               	movf	indf2,w,c
 18219  0036F8  0100               	movlb	0	; () banked
 18220  0036FA  6F85               	movwf	??_atoi& (0+255),b
 18221  0036FC  6B86               	clrf	(??_atoi+1)& (0+255),b
 18222  0036FE  517D               	movf	?___wmul& (0+255),w,b
 18223  003700  2785               	addwf	??_atoi& (0+255),f,b
 18224  003702  517E               	movf	(?___wmul+1)& (0+255),w,b
 18225  003704  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18226  003706  0ED0               	movlw	208
 18227  003708  2585               	addwf	??_atoi& (0+255),w,b
 18228  00370A  6F88               	movwf	atoi@a& (0+255),b
 18229  00370C  0EFF               	movlw	255
 18230  00370E  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18231  003710  6F89               	movwf	(atoi@a+1)& (0+255),b
 18232  003712                     l12239:
 18233                           
 18234                           ; BSR set to: 0
 18235  003712  4B83               	infsnz	atoi@s& (0+255),f,b
 18236  003714  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18237  003716                     l2782:
 18238                           
 18239                           ; BSR set to: 0
 18240                           
 18241                           ; BSR set to: 0
 18242  003716  C083  FFD9         	movff	atoi@s,fsr2l
 18243  00371A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18244  00371E  50DF               	movf	indf2,w,c
 18245  003720  EC5D  F02F         	call	_isdigit
 18246  003724  B0D8               	btfsc	status,0,c
 18247  003726  D7D8               	goto	l2783
 18248  003728  0100               	movlb	0	; () banked
 18249  00372A  5187               	movf	atoi@sign& (0+255),w,b
 18250  00372C  B4D8               	btfsc	status,2,c
 18251  00372E  D00D               	goto	l2785
 18252                           
 18253                           ; BSR set to: 0
 18254  003730  C088  F085         	movff	atoi@a,??_atoi
 18255  003734  C089  F086         	movff	atoi@a+1,??_atoi+1
 18256  003738  1F85               	comf	??_atoi& (0+255),f,b
 18257  00373A  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18258  00373C  4B85               	infsnz	??_atoi& (0+255),f,b
 18259  00373E  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18260  003740  C085  F083         	movff	??_atoi,?_atoi
 18261  003744  C086  F084         	movff	??_atoi+1,?_atoi+1
 18262  003748  0012               	return	
 18263  00374A                     l2785:
 18264                           
 18265                           ; BSR set to: 0
 18266  00374A  C088  F083         	movff	atoi@a,?_atoi
 18267  00374E  C089  F084         	movff	atoi@a+1,?_atoi+1
 18268                           
 18269                           ; BSR set to: 0
 18270  003752  0012               	return		;funcret
 18271  003754                     __end_of_atoi:
 18272                           	opt stack 0
 18273                           tosu	equ	0xFFF
 18274                           tosh	equ	0xFFE
 18275                           tosl	equ	0xFFD
 18276                           pclath	equ	0xFFA
 18277                           tblptru	equ	0xFF8
 18278                           tblptrh	equ	0xFF7
 18279                           tblptrl	equ	0xFF6
 18280                           tablat	equ	0xFF5
 18281                           prodh	equ	0xFF4
 18282                           prodl	equ	0xFF3
 18283                           intcon	equ	0xFF2
 18284                           intcon2	equ	0xFF1
 18285                           intcon3	equ	0xFF0
 18286                           indf0	equ	0xFEF
 18287                           postinc0	equ	0xFEE
 18288                           plusw0	equ	0xFEB
 18289                           fsr0h	equ	0xFEA
 18290                           fsr0l	equ	0xFE9
 18291                           wreg	equ	0xFE8
 18292                           indf1	equ	0xFE7
 18293                           postinc1	equ	0xFE6
 18294                           postdec1	equ	0xFE5
 18295                           plusw1	equ	0xFE3
 18296                           fsr1h	equ	0xFE2
 18297                           fsr1l	equ	0xFE1
 18298                           indf2	equ	0xFDF
 18299                           postinc2	equ	0xFDE
 18300                           postdec2	equ	0xFDD
 18301                           plusw2	equ	0xFDB
 18302                           fsr2h	equ	0xFDA
 18303                           fsr2l	equ	0xFD9
 18304                           status	equ	0xFD8
 18305                           
 18306 ;; *************** function _isdigit *****************
 18307 ;; Defined at:
 18308 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18309 ;; Parameters:    Size  Location     Type
 18310 ;;  c               1    wreg     unsigned char 
 18311 ;; Auto vars:     Size  Location     Type
 18312 ;;  c               1   31[BANK0 ] unsigned char 
 18313 ;; Return value:  Size  Location     Type
 18314 ;;		None               void
 18315 ;; Registers used:
 18316 ;;		wreg, status,2, status,0
 18317 ;; Tracked objects:
 18318 ;;		On entry : 0/0
 18319 ;;		On exit  : 0/0
 18320 ;;		Unchanged: 0/0
 18321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18326 ;;Total ram usage:        3 bytes
 18327 ;; Hardware stack levels used:    1
 18328 ;; Hardware stack levels required when called:   11
 18329 ;; This function calls:
 18330 ;;		Nothing
 18331 ;; This function is called by:
 18332 ;;		_atoi
 18333 ;;		_strtol
 18334 ;;		_xtoi
 18335 ;;		_isxdigit
 18336 ;; This function uses a non-reentrant model
 18337 ;;
 18338                           
 18339                           	psect	text77
 18340  005EBA                     __ptext77:
 18341                           	opt stack 0
 18342  005EBA                     _isdigit:
 18343                           	opt stack 12
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;incstack = 0
 18347                           ;isdigit@c stored from wreg
 18348  005EBA  0100               	movlb	0	; () banked
 18349  005EBC  6F7F               	movwf	isdigit@c& (0+255),b
 18350  005EBE  0E00               	movlw	0
 18351  005EC0  0100               	movlb	0	; () banked
 18352  005EC2  6F7E               	movwf	_isdigit$6150& (0+255),b
 18353                           
 18354                           ; BSR set to: 0
 18355  005EC4  0E3A               	movlw	58
 18356  005EC6  617F               	cpfslt	isdigit@c& (0+255),b
 18357  005EC8  D005               	goto	l2957
 18358                           
 18359                           ; BSR set to: 0
 18360  005ECA  0E2F               	movlw	47
 18361  005ECC  657F               	cpfsgt	isdigit@c& (0+255),b
 18362  005ECE  D002               	goto	l2957
 18363                           
 18364                           ; BSR set to: 0
 18365  005ED0  0E01               	movlw	1
 18366  005ED2  6F7E               	movwf	_isdigit$6150& (0+255),b
 18367  005ED4                     l2957:
 18368                           
 18369                           ; BSR set to: 0
 18370                           
 18371                           ; BSR set to: 0
 18372  005ED4  C07E  F07D         	movff	_isdigit$6150,??_isdigit
 18373  005ED8  317D               	rrcf	??_isdigit& (0+255),w,b
 18374  005EDA  0012               	return	
 18375  005EDC                     __end_of_isdigit:
 18376                           	opt stack 0
 18377                           tosu	equ	0xFFF
 18378                           tosh	equ	0xFFE
 18379                           tosl	equ	0xFFD
 18380                           pclath	equ	0xFFA
 18381                           tblptru	equ	0xFF8
 18382                           tblptrh	equ	0xFF7
 18383                           tblptrl	equ	0xFF6
 18384                           tablat	equ	0xFF5
 18385                           prodh	equ	0xFF4
 18386                           prodl	equ	0xFF3
 18387                           intcon	equ	0xFF2
 18388                           intcon2	equ	0xFF1
 18389                           intcon3	equ	0xFF0
 18390                           indf0	equ	0xFEF
 18391                           postinc0	equ	0xFEE
 18392                           plusw0	equ	0xFEB
 18393                           fsr0h	equ	0xFEA
 18394                           fsr0l	equ	0xFE9
 18395                           wreg	equ	0xFE8
 18396                           indf1	equ	0xFE7
 18397                           postinc1	equ	0xFE6
 18398                           postdec1	equ	0xFE5
 18399                           plusw1	equ	0xFE3
 18400                           fsr1h	equ	0xFE2
 18401                           fsr1l	equ	0xFE1
 18402                           indf2	equ	0xFDF
 18403                           postinc2	equ	0xFDE
 18404                           postdec2	equ	0xFDD
 18405                           plusw2	equ	0xFDB
 18406                           fsr2h	equ	0xFDA
 18407                           fsr2l	equ	0xFD9
 18408                           status	equ	0xFD8
 18409                           
 18410 ;; *************** function _OsTmr_Wait *****************
 18411 ;; Defined at:
 18412 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18415 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18416 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18417 ;; Auto vars:     Size  Location     Type
 18418 ;;  Ret             1   65[BANK0 ] enum E7749
 18419 ;; Return value:  Size  Location     Type
 18420 ;;                  1    wreg      enum E7749
 18421 ;; Registers used:
 18422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18423 ;; Tracked objects:
 18424 ;;		On entry : 0/0
 18425 ;;		On exit  : 0/0
 18426 ;;		Unchanged: 0/0
 18427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18428 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18431 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18432 ;;Total ram usage:        7 bytes
 18433 ;; Hardware stack levels used:    1
 18434 ;; Hardware stack levels required when called:   14
 18435 ;; This function calls:
 18436 ;;		_OsTmr_GetTimerStatus
 18437 ;;		_OsTmr_StartTimer
 18438 ;; This function is called by:
 18439 ;;		_Terminal
 18440 ;;		_I2cSlv_QueryI2cData
 18441 ;; This function uses a non-reentrant model
 18442 ;;
 18443                           
 18444                           	psect	text78
 18445  004B8E                     __ptext78:
 18446                           	opt stack 0
 18447  004B8E                     _OsTmr_Wait:
 18448                           	opt stack 11
 18449                           
 18450                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;incstack = 0
 18454  004B8E  0E00               	movlw	0
 18455  004B90  0100               	movlb	0	; () banked
 18456  004B92  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18457                           
 18458                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18459  004B94  D02D               	goto	l855
 18460  004B96                     
 18461                           ; BSR set to: 0
 18462                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18463                           
 18464                           ; BSR set to: 0
 18465  004B96  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18466  004B9A  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18467  004B9E  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18468  004BA2  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18469  004BA6  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18470  004BAA  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18471  004BAE  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 18472                           
 18473                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18474  004BB2  0100               	movlb	0	; () banked
 18475  004BB4  EE20 F00A          	lfsr	2,10
 18476  004BB8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18477  004BBA  26D9               	addwf	fsr2l,f,c
 18478  004BBC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18479  004BBE  22DA               	addwfc	fsr2h,f,c
 18480  004BC0  0E01               	movlw	1
 18481  004BC2  6EDF               	movwf	indf2,c
 18482                           
 18483                           ;os_timers.c: 165: break;
 18484  004BC4  D022               	goto	l857
 18485  004BC6                     
 18486                           ; BSR set to: 0
 18487                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18488                           
 18489                           ; BSR set to: 0
 18490  004BC6  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18491  004BCA  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18492  004BCE  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 18493  004BD2  06E8               	decf	wreg,f,c
 18494  004BD4  A4D8               	btfss	status,2,c
 18495  004BD6  D019               	goto	l857
 18496                           
 18497                           ;os_timers.c: 170: {
 18498                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18499  004BD8  0100               	movlb	0	; () banked
 18500  004BDA  EE20 F00A          	lfsr	2,10
 18501  004BDE  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18502  004BE0  26D9               	addwf	fsr2l,f,c
 18503  004BE2  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18504  004BE4  22DA               	addwfc	fsr2h,f,c
 18505  004BE6  0E00               	movlw	0
 18506  004BE8  6EDF               	movwf	indf2,c
 18507                           
 18508                           ; BSR set to: 0
 18509                           ;os_timers.c: 174: Ret = DelayExpired;
 18510  004BEA  0E01               	movlw	1
 18511  004BEC  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;os_timers.c: 180: }
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;os_timers.c: 179: break;
 18518                           
 18519                           ;os_timers.c: 178: default:
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;os_timers.c: 175: }
 18523                           ;os_timers.c: 176: break;
 18524  004BEE  D00D               	goto	l857
 18525  004BF0                     l855:
 18526                           
 18527                           ; BSR set to: 0
 18528                           
 18529                           ; BSR set to: 0
 18530  004BF0  EE20 F00A          	lfsr	2,10
 18531  004BF4  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18532  004BF6  26D9               	addwf	fsr2l,f,c
 18533  004BF8  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18534  004BFA  22DA               	addwfc	fsr2h,f,c
 18535  004BFC  50DF               	movf	indf2,w,c
 18536                           
 18537                           ; Switch size 1, requested type "space"
 18538                           ; Number of cases is 2, Range of values is 0 to 1
 18539                           ; switch strategies available:
 18540                           ; Name         Instructions Cycles
 18541                           ; simple_byte            7     4 (average)
 18542                           ;	Chosen strategy is simple_byte
 18543  004BFE  0A00               	xorlw	0	; case 0
 18544  004C00  B4D8               	btfsc	status,2,c
 18545  004C02  D7C9               	goto	l856
 18546  004C04  0A01               	xorlw	1	; case 1
 18547  004C06  B4D8               	btfsc	status,2,c
 18548  004C08  D7DE               	goto	l858
 18549  004C0A                     l857:
 18550                           
 18551                           ;os_timers.c: 182: return Ret;
 18552                           
 18553                           ; BSR set to: 0
 18554  004C0A  0100               	movlb	0	; () banked
 18555  004C0C  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18556  004C0E  0012               	return	
 18557  004C10                     __end_of_OsTmr_Wait:
 18558                           	opt stack 0
 18559                           tosu	equ	0xFFF
 18560                           tosh	equ	0xFFE
 18561                           tosl	equ	0xFFD
 18562                           pclath	equ	0xFFA
 18563                           tblptru	equ	0xFF8
 18564                           tblptrh	equ	0xFF7
 18565                           tblptrl	equ	0xFF6
 18566                           tablat	equ	0xFF5
 18567                           prodh	equ	0xFF4
 18568                           prodl	equ	0xFF3
 18569                           intcon	equ	0xFF2
 18570                           intcon2	equ	0xFF1
 18571                           intcon3	equ	0xFF0
 18572                           indf0	equ	0xFEF
 18573                           postinc0	equ	0xFEE
 18574                           plusw0	equ	0xFEB
 18575                           fsr0h	equ	0xFEA
 18576                           fsr0l	equ	0xFE9
 18577                           wreg	equ	0xFE8
 18578                           indf1	equ	0xFE7
 18579                           postinc1	equ	0xFE6
 18580                           postdec1	equ	0xFE5
 18581                           plusw1	equ	0xFE3
 18582                           fsr1h	equ	0xFE2
 18583                           fsr1l	equ	0xFE1
 18584                           indf2	equ	0xFDF
 18585                           postinc2	equ	0xFDE
 18586                           postdec2	equ	0xFDD
 18587                           plusw2	equ	0xFDB
 18588                           fsr2h	equ	0xFDA
 18589                           fsr2l	equ	0xFD9
 18590                           status	equ	0xFD8
 18591                           
 18592 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18593 ;; Defined at:
 18594 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18595 ;; Parameters:    Size  Location     Type
 18596 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18597 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18598 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18599 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18600 ;; Auto vars:     Size  Location     Type
 18601 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18602 ;; Return value:  Size  Location     Type
 18603 ;;                  1    wreg      unsigned char 
 18604 ;; Registers used:
 18605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18606 ;; Tracked objects:
 18607 ;;		On entry : 0/0
 18608 ;;		On exit  : 0/0
 18609 ;;		Unchanged: 0/0
 18610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18615 ;;Total ram usage:        5 bytes
 18616 ;; Hardware stack levels used:    1
 18617 ;; Hardware stack levels required when called:   12
 18618 ;; This function calls:
 18619 ;;		_GenerateEvt
 18620 ;; This function is called by:
 18621 ;;		_Terminal
 18622 ;;		_I2cSlv_QueryI2cData
 18623 ;;		_triggerRelay
 18624 ;; This function uses a non-reentrant model
 18625 ;;
 18626                           
 18627                           	psect	text79
 18628  005984                     __ptext79:
 18629                           	opt stack 0
 18630  005984                     _I2cSlv_SendI2cMsg:
 18631                           	opt stack 13
 18632                           
 18633                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;incstack = 0
 18637  005984  0E00               	movlw	0
 18638  005986  0100               	movlb	0	; () banked
 18639  005988  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18643  00598A  05D4               	decf	_I2cComSts& (0+255),w,b
 18644  00598C  B4D8               	btfsc	status,2,c
 18645  00598E  D015               	goto	l1397
 18646                           
 18647                           ; BSR set to: 0
 18648                           ;i2c_slv.c: 257: {
 18649                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18650  005990  C082  F3A0         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18654  005994  0E00               	movlw	0
 18655  005996  0103               	movlb	3	; () banked
 18656  005998  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 18657                           
 18658                           ; BSR set to: 3
 18659                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18660  00599A  C083  F3A4         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18661                           
 18662                           ; BSR set to: 3
 18663                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18664  00599E  C080  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18665  0059A2  C081  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18666                           
 18667                           ; BSR set to: 3
 18668                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18669  0059A6  0EDC               	movlw	low _I2cWriteDataEvt
 18670  0059A8  0100               	movlb	0	; () banked
 18671  0059AA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18672  0059AC  0E00               	movlw	high _I2cWriteDataEvt
 18673  0059AE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18674  0059B0  EC18  F030         	call	_GenerateEvt	;wreg free
 18675                           
 18676                           ;i2c_slv.c: 267: TxSts = 1u;
 18677  0059B4  0E01               	movlw	1
 18678  0059B6  0100               	movlb	0	; () banked
 18679  0059B8  D001               	goto	L18
 18680  0059BA                     l1397:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;i2c_slv.c: 269: else
 18684                           ;i2c_slv.c: 270: {
 18685                           ;i2c_slv.c: 272: TxSts = 0u;
 18686                           
 18687                           ; BSR set to: 0
 18688  0059BA  0E00               	movlw	0
 18689  0059BC                     L18:
 18690  0059BC  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;i2c_slv.c: 273: }
 18694                           ;i2c_slv.c: 275: return TxSts;
 18695  0059BE  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18696  0059C0  0012               	return	
 18697  0059C2                     __end_of_I2cSlv_SendI2cMsg:
 18698                           	opt stack 0
 18699                           tosu	equ	0xFFF
 18700                           tosh	equ	0xFFE
 18701                           tosl	equ	0xFFD
 18702                           pclath	equ	0xFFA
 18703                           tblptru	equ	0xFF8
 18704                           tblptrh	equ	0xFF7
 18705                           tblptrl	equ	0xFF6
 18706                           tablat	equ	0xFF5
 18707                           prodh	equ	0xFF4
 18708                           prodl	equ	0xFF3
 18709                           intcon	equ	0xFF2
 18710                           intcon2	equ	0xFF1
 18711                           intcon3	equ	0xFF0
 18712                           indf0	equ	0xFEF
 18713                           postinc0	equ	0xFEE
 18714                           plusw0	equ	0xFEB
 18715                           fsr0h	equ	0xFEA
 18716                           fsr0l	equ	0xFE9
 18717                           wreg	equ	0xFE8
 18718                           indf1	equ	0xFE7
 18719                           postinc1	equ	0xFE6
 18720                           postdec1	equ	0xFE5
 18721                           plusw1	equ	0xFE3
 18722                           fsr1h	equ	0xFE2
 18723                           fsr1l	equ	0xFE1
 18724                           indf2	equ	0xFDF
 18725                           postinc2	equ	0xFDE
 18726                           postdec2	equ	0xFDD
 18727                           plusw2	equ	0xFDB
 18728                           fsr2h	equ	0xFDA
 18729                           fsr2l	equ	0xFD9
 18730                           status	equ	0xFD8
 18731                           
 18732 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18733 ;; Defined at:
 18734 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18737 ;;		 -> Terminal@TermRxBuffer(50), 
 18738 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18739 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18740 ;; Auto vars:     Size  Location     Type
 18741 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18742 ;; Return value:  Size  Location     Type
 18743 ;;                  1    wreg      unsigned char 
 18744 ;; Registers used:
 18745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18746 ;; Tracked objects:
 18747 ;;		On entry : 0/0
 18748 ;;		On exit  : 0/0
 18749 ;;		Unchanged: 0/0
 18750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;Total ram usage:        5 bytes
 18756 ;; Hardware stack levels used:    1
 18757 ;; Hardware stack levels required when called:   12
 18758 ;; This function calls:
 18759 ;;		_GenerateEvt
 18760 ;; This function is called by:
 18761 ;;		_Terminal
 18762 ;;		_I2cSlv_QueryI2cData
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766                           	psect	text80
 18767  0058C6                     __ptext80:
 18768                           	opt stack 0
 18769  0058C6                     _I2cSlv_ReceiveI2cMsg:
 18770                           	opt stack 13
 18771                           
 18772                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;incstack = 0
 18776  0058C6  0E00               	movlw	0
 18777  0058C8  0100               	movlb	0	; () banked
 18778  0058CA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18782  0058CC  0E02               	movlw	2
 18783  0058CE  19D4               	xorwf	_I2cComSts& (0+255),w,b
 18784  0058D0  B4D8               	btfsc	status,2,c
 18785  0058D2  D016               	goto	l1402
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;i2c_slv.c: 294: {
 18789                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18790  0058D4  C082  F39A         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18794  0058D8  0E01               	movlw	1
 18795  0058DA  0103               	movlb	3	; () banked
 18796  0058DC  6F9B               	movwf	(_I2cRxPacket+1)& (0+255),b
 18797                           
 18798                           ; BSR set to: 3
 18799                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18800  0058DE  C083  F39E         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18801                           
 18802                           ; BSR set to: 3
 18803                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18804  0058E2  C080  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18805  0058E6  C081  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18806                           
 18807                           ; BSR set to: 3
 18808                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18809  0058EA  0E35               	movlw	low _I2cReadDataEvt
 18810  0058EC  0100               	movlb	0	; () banked
 18811  0058EE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18812  0058F0  0E00               	movlw	high _I2cReadDataEvt
 18813  0058F2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18814  0058F4  EC18  F030         	call	_GenerateEvt	;wreg free
 18815                           
 18816                           ;i2c_slv.c: 304: RxSts = 1u;
 18817  0058F8  0E01               	movlw	1
 18818  0058FA  0100               	movlb	0	; () banked
 18819  0058FC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18820                           
 18821                           ;i2c_slv.c: 305: }
 18822  0058FE  0012               	return	
 18823  005900                     l1402:
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;i2c_slv.c: 306: else
 18827                           ;i2c_slv.c: 307: {
 18828                           ;i2c_slv.c: 309: RxSts = 0u;
 18829                           
 18830                           ; BSR set to: 0
 18831  005900  0E00               	movlw	0
 18832  005902  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18833                           
 18834                           ; BSR set to: 0
 18835  005904  0012               	return	
 18836  005906                     __end_of_I2cSlv_ReceiveI2cMsg:
 18837                           	opt stack 0
 18838                           tosu	equ	0xFFF
 18839                           tosh	equ	0xFFE
 18840                           tosl	equ	0xFFD
 18841                           pclath	equ	0xFFA
 18842                           tblptru	equ	0xFF8
 18843                           tblptrh	equ	0xFF7
 18844                           tblptrl	equ	0xFF6
 18845                           tablat	equ	0xFF5
 18846                           prodh	equ	0xFF4
 18847                           prodl	equ	0xFF3
 18848                           intcon	equ	0xFF2
 18849                           intcon2	equ	0xFF1
 18850                           intcon3	equ	0xFF0
 18851                           indf0	equ	0xFEF
 18852                           postinc0	equ	0xFEE
 18853                           plusw0	equ	0xFEB
 18854                           fsr0h	equ	0xFEA
 18855                           fsr0l	equ	0xFE9
 18856                           wreg	equ	0xFE8
 18857                           indf1	equ	0xFE7
 18858                           postinc1	equ	0xFE6
 18859                           postdec1	equ	0xFE5
 18860                           plusw1	equ	0xFE3
 18861                           fsr1h	equ	0xFE2
 18862                           fsr1l	equ	0xFE1
 18863                           indf2	equ	0xFDF
 18864                           postinc2	equ	0xFDE
 18865                           postdec2	equ	0xFDD
 18866                           plusw2	equ	0xFDB
 18867                           fsr2h	equ	0xFDA
 18868                           fsr2l	equ	0xFD9
 18869                           status	equ	0xFD8
 18870                           
 18871 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18872 ;; Defined at:
 18873 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;		None
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;  Result          1   33[BANK0 ] enum E8916
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  1    wreg      enum E8916
 18880 ;; Registers used:
 18881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18890 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18891 ;;Total ram usage:        1 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; Hardware stack levels required when called:   12
 18894 ;; This function calls:
 18895 ;;		_ReceiveEvt
 18896 ;; This function is called by:
 18897 ;;		_Terminal
 18898 ;;		_I2cSlv_QueryI2cData
 18899 ;; This function uses a non-reentrant model
 18900 ;;
 18901                           
 18902                           	psect	text81
 18903  005EDC                     __ptext81:
 18904                           	opt stack 0
 18905  005EDC                     _I2cSlv_I2cReadMsgSts:
 18906                           	opt stack 13
 18907                           
 18908                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18909                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;incstack = 0
 18913  005EDC  0E9F               	movlw	low (_I2cRxPacket+5)
 18914  005EDE  0100               	movlb	0	; () banked
 18915  005EE0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18916  005EE2  0E03               	movlw	high (_I2cRxPacket+5)
 18917  005EE4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18918  005EE6  EC53  F02E         	call	_ReceiveEvt	;wreg free
 18919  005EEA  0900               	iorlw	0
 18920  005EEC  B4D8               	btfsc	status,2,c
 18921  005EEE  D002               	goto	l1407
 18922                           
 18923                           ;i2c_slv.c: 331: {
 18924                           ;i2c_slv.c: 332: Result = MessageReceived;
 18925  005EF0  0E01               	movlw	1
 18926  005EF2  D001               	goto	L19
 18927  005EF4                     l1407:
 18928                           
 18929                           ;i2c_slv.c: 334: else
 18930                           ;i2c_slv.c: 335: {
 18931                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18932                           
 18933                           ; BSR set to: 0
 18934  005EF4  0E00               	movlw	0
 18935  005EF6                     L19:
 18936  005EF6  0100               	movlb	0	; () banked
 18937  005EF8  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;i2c_slv.c: 337: }
 18941                           ;i2c_slv.c: 339: return Result;
 18942  005EFA  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18943  005EFC  0012               	return	
 18944  005EFE                     __end_of_I2cSlv_I2cReadMsgSts:
 18945                           	opt stack 0
 18946                           tosu	equ	0xFFF
 18947                           tosh	equ	0xFFE
 18948                           tosl	equ	0xFFD
 18949                           pclath	equ	0xFFA
 18950                           tblptru	equ	0xFF8
 18951                           tblptrh	equ	0xFF7
 18952                           tblptrl	equ	0xFF6
 18953                           tablat	equ	0xFF5
 18954                           prodh	equ	0xFF4
 18955                           prodl	equ	0xFF3
 18956                           intcon	equ	0xFF2
 18957                           intcon2	equ	0xFF1
 18958                           intcon3	equ	0xFF0
 18959                           indf0	equ	0xFEF
 18960                           postinc0	equ	0xFEE
 18961                           plusw0	equ	0xFEB
 18962                           fsr0h	equ	0xFEA
 18963                           fsr0l	equ	0xFE9
 18964                           wreg	equ	0xFE8
 18965                           indf1	equ	0xFE7
 18966                           postinc1	equ	0xFE6
 18967                           postdec1	equ	0xFE5
 18968                           plusw1	equ	0xFE3
 18969                           fsr1h	equ	0xFE2
 18970                           fsr1l	equ	0xFE1
 18971                           indf2	equ	0xFDF
 18972                           postinc2	equ	0xFDE
 18973                           postdec2	equ	0xFDD
 18974                           plusw2	equ	0xFDB
 18975                           fsr2h	equ	0xFDA
 18976                           fsr2l	equ	0xFD9
 18977                           status	equ	0xFD8
 18978                           
 18979 ;; *************** function _Rtcm_SetRtccDate *****************
 18980 ;; Defined at:
 18981 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18982 ;; Parameters:    Size  Location     Type
 18983 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18984 ;; Auto vars:     Size  Location     Type
 18985 ;;		None
 18986 ;; Return value:  Size  Location     Type
 18987 ;;                  1    wreg      void 
 18988 ;; Registers used:
 18989 ;;		wreg, status,2, status,0, cstack
 18990 ;; Tracked objects:
 18991 ;;		On entry : 0/0
 18992 ;;		On exit  : 0/0
 18993 ;;		Unchanged: 0/0
 18994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18995 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18998 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18999 ;;Total ram usage:        8 bytes
 19000 ;; Hardware stack levels used:    1
 19001 ;; Hardware stack levels required when called:   13
 19002 ;; This function calls:
 19003 ;;		_Rtcc_LockRtc
 19004 ;;		_Rtcc_SetRtccValue
 19005 ;;		_Rtcc_UnlockRtc
 19006 ;; This function is called by:
 19007 ;;		_Rtcm_MainTask
 19008 ;; This function uses a non-reentrant model
 19009 ;;
 19010                           
 19011                           	psect	text82
 19012  00532E                     __ptext82:
 19013                           	opt stack 0
 19014  00532E                     _Rtcm_SetRtccDate:
 19015                           	opt stack 14
 19016                           
 19017                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;incstack = 0
 19021  00532E  EC6C  F030         	call	_Rtcc_UnlockRtc	;wreg free
 19022                           
 19023                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19024  005332  0100               	movlb	0	; () banked
 19025  005334  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19026  005336  0F30               	addlw	48
 19027  005338  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19028  00533A  0E00               	movlw	0
 19029  00533C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19030                           
 19031                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19032  005340  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19033  005344  0E01               	movlw	1
 19034  005346  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19035                           
 19036                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19037  00534A  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19038  00534E  0E02               	movlw	2
 19039  005350  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19040                           
 19041                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19042  005354  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19043  005358  0E03               	movlw	3
 19044  00535A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19045                           
 19046                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19047  00535E  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19048  005362  0E04               	movlw	4
 19049  005364  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19050                           
 19051                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19052  005368  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19053  00536C  0E05               	movlw	5
 19054  00536E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19055                           
 19056                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19057  005372  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19058  005376  0E06               	movlw	6
 19059  005378  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19060                           
 19061                           ;rtcm.c: 191: Rtcc_LockRtc();
 19062  00537C  EC74  F030         	call	_Rtcc_LockRtc	;wreg free
 19063  005380  0012               	return		;funcret
 19064  005382                     __end_of_Rtcm_SetRtccDate:
 19065                           	opt stack 0
 19066                           tosu	equ	0xFFF
 19067                           tosh	equ	0xFFE
 19068                           tosl	equ	0xFFD
 19069                           pclath	equ	0xFFA
 19070                           tblptru	equ	0xFF8
 19071                           tblptrh	equ	0xFF7
 19072                           tblptrl	equ	0xFF6
 19073                           tablat	equ	0xFF5
 19074                           prodh	equ	0xFF4
 19075                           prodl	equ	0xFF3
 19076                           intcon	equ	0xFF2
 19077                           intcon2	equ	0xFF1
 19078                           intcon3	equ	0xFF0
 19079                           indf0	equ	0xFEF
 19080                           postinc0	equ	0xFEE
 19081                           plusw0	equ	0xFEB
 19082                           fsr0h	equ	0xFEA
 19083                           fsr0l	equ	0xFE9
 19084                           wreg	equ	0xFE8
 19085                           indf1	equ	0xFE7
 19086                           postinc1	equ	0xFE6
 19087                           postdec1	equ	0xFE5
 19088                           plusw1	equ	0xFE3
 19089                           fsr1h	equ	0xFE2
 19090                           fsr1l	equ	0xFE1
 19091                           indf2	equ	0xFDF
 19092                           postinc2	equ	0xFDE
 19093                           postdec2	equ	0xFDD
 19094                           plusw2	equ	0xFDB
 19095                           fsr2h	equ	0xFDA
 19096                           fsr2l	equ	0xFD9
 19097                           status	equ	0xFD8
 19098                           
 19099 ;; *************** function _Rtcc_UnlockRtc *****************
 19100 ;; Defined at:
 19101 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;		None
 19104 ;; Auto vars:     Size  Location     Type
 19105 ;;		None
 19106 ;; Return value:  Size  Location     Type
 19107 ;;                  1    wreg      void 
 19108 ;; Registers used:
 19109 ;;		None
 19110 ;; Tracked objects:
 19111 ;;		On entry : 0/0
 19112 ;;		On exit  : 0/0
 19113 ;;		Unchanged: 0/0
 19114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;Total ram usage:        0 bytes
 19120 ;; Hardware stack levels used:    1
 19121 ;; Hardware stack levels required when called:   11
 19122 ;; This function calls:
 19123 ;;		Nothing
 19124 ;; This function is called by:
 19125 ;;		_Rtcm_MainTask
 19126 ;;		_Rtcm_SetRtccDate
 19127 ;;		_Rtcm_SetRtccAlarm
 19128 ;; This function uses a non-reentrant model
 19129 ;;
 19130                           
 19131                           	psect	text83
 19132  0060D8                     __ptext83:
 19133                           	opt stack 0
 19134  0060D8                     _Rtcc_UnlockRtc:
 19135                           	opt stack 15
 19136                           
 19137                           ;incstack = 0
 19138  0060D8  010F               	movlb	15	;# 
 19139  0060DA  0E55               	movlw	85	;# 
 19140  0060DC  6EA7               	movwf	4007,c	;# 
 19141  0060DE  0EAA               	movlw	170	;# 
 19142  0060E0  6EA7               	movwf	4007,c	;# 
 19143                           
 19144                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19145  0060E2  010F               	movlb	15	; () banked
 19146  0060E4  8B3F               	bsf	63,5,b	;volatile
 19147                           
 19148                           ; BSR set to: 15
 19149  0060E6  0012               	return		;funcret
 19150  0060E8                     __end_of_Rtcc_UnlockRtc:
 19151                           	opt stack 0
 19152                           tosu	equ	0xFFF
 19153                           tosh	equ	0xFFE
 19154                           tosl	equ	0xFFD
 19155                           pclath	equ	0xFFA
 19156                           tblptru	equ	0xFF8
 19157                           tblptrh	equ	0xFF7
 19158                           tblptrl	equ	0xFF6
 19159                           tablat	equ	0xFF5
 19160                           prodh	equ	0xFF4
 19161                           prodl	equ	0xFF3
 19162                           intcon	equ	0xFF2
 19163                           intcon2	equ	0xFF1
 19164                           intcon3	equ	0xFF0
 19165                           indf0	equ	0xFEF
 19166                           postinc0	equ	0xFEE
 19167                           plusw0	equ	0xFEB
 19168                           fsr0h	equ	0xFEA
 19169                           fsr0l	equ	0xFE9
 19170                           wreg	equ	0xFE8
 19171                           indf1	equ	0xFE7
 19172                           postinc1	equ	0xFE6
 19173                           postdec1	equ	0xFE5
 19174                           plusw1	equ	0xFE3
 19175                           fsr1h	equ	0xFE2
 19176                           fsr1l	equ	0xFE1
 19177                           indf2	equ	0xFDF
 19178                           postinc2	equ	0xFDE
 19179                           postdec2	equ	0xFDD
 19180                           plusw2	equ	0xFDB
 19181                           fsr2h	equ	0xFDA
 19182                           fsr2l	equ	0xFD9
 19183                           status	equ	0xFD8
 19184                           
 19185 ;; *************** function _Rtcc_SetRtccValue *****************
 19186 ;; Defined at:
 19187 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19188 ;; Parameters:    Size  Location     Type
 19189 ;;  RtccPtrVal      1    wreg     enum E7757
 19190 ;;  Value           1   37[BANK0 ] unsigned char 
 19191 ;; Auto vars:     Size  Location     Type
 19192 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19193 ;; Return value:  Size  Location     Type
 19194 ;;                  1    wreg      void 
 19195 ;; Registers used:
 19196 ;;		wreg, status,2, status,0, cstack
 19197 ;; Tracked objects:
 19198 ;;		On entry : 0/0
 19199 ;;		On exit  : 0/0
 19200 ;;		Unchanged: 0/0
 19201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19202 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19206 ;;Total ram usage:        4 bytes
 19207 ;; Hardware stack levels used:    1
 19208 ;; Hardware stack levels required when called:   12
 19209 ;; This function calls:
 19210 ;;		___awdiv
 19211 ;;		___awmod
 19212 ;; This function is called by:
 19213 ;;		_Rtcm_SetRtccDate
 19214 ;; This function uses a non-reentrant model
 19215 ;;
 19216                           
 19217                           	psect	text84
 19218  0015EE                     __ptext84:
 19219                           	opt stack 0
 19220  0015EE                     _Rtcc_SetRtccValue:
 19221                           	opt stack 14
 19222                           
 19223                           ; BSR set to: 15
 19224                           ;incstack = 0
 19225                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19226  0015EE  0100               	movlb	0	; () banked
 19227  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19228                           
 19229                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19230  0015F2  D0FC               	goto	l441
 19231  0015F4                     l442:
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19235  0015F4  010F               	movlb	15	; () banked
 19236  0015F6  833F               	bsf	63,1,b	;volatile
 19237                           
 19238                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19239  0015F8  813F               	bsf	63,0,b	;volatile
 19240                           
 19241                           ; BSR set to: 15
 19242                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19243  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19244  0015FE  0100               	movlb	0	; () banked
 19245  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19246  001602  0E00               	movlw	0
 19247  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19248  001606  0E0A               	movlw	10
 19249  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19250  00160A  EC84  F026         	call	___awmod	;wreg free
 19251  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19252  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19253  001616  0E0F               	movlw	15
 19254  001618  0100               	movlb	0	; () banked
 19255  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19256  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19257  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19258  001622  0E00               	movlw	0
 19259  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19260  001626  0E0A               	movlw	10
 19261  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19262  00162A  EC42  F025         	call	___awdiv	;wreg free
 19263  00162E  0100               	movlb	0	; () banked
 19264  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19265  001632  0BF0               	andlw	240
 19266  001634  0BF0               	andlw	240
 19267  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19268  001638  6E98               	movwf	3992,c	;volatile
 19269                           
 19270                           ;rtcc_drv.c: 393: break;
 19271  00163A  0012               	return	
 19272  00163C                     l444:
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19276  00163C  010F               	movlb	15	; () banked
 19277  00163E  833F               	bsf	63,1,b	;volatile
 19278                           
 19279                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19280  001640  913F               	bcf	63,0,b	;volatile
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19284  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19285  001646  0100               	movlb	0	; () banked
 19286  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19287  00164A  0E00               	movlw	0
 19288  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19289  00164E  0E0A               	movlw	10
 19290  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19291  001652  EC84  F026         	call	___awmod	;wreg free
 19292  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19293  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19294  00165E  0E0F               	movlw	15
 19295  001660  0100               	movlb	0	; () banked
 19296  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19297  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19298  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19299  00166A  0E00               	movlw	0
 19300  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19301  00166E  0E0A               	movlw	10
 19302  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19303  001672  EC42  F025         	call	___awdiv	;wreg free
 19304  001676  0100               	movlb	0	; () banked
 19305  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19306  00167A  0BF0               	andlw	240
 19307  00167C  0BF0               	andlw	240
 19308  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19309  001680  6E99               	movwf	3993,c	;volatile
 19310                           
 19311                           ;rtcc_drv.c: 401: break;
 19312  001682  0012               	return	
 19313  001684                     l445:
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19317  001684  010F               	movlb	15	; () banked
 19318  001686  833F               	bsf	63,1,b	;volatile
 19319                           
 19320                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19321  001688  913F               	bcf	63,0,b	;volatile
 19322                           
 19323                           ; BSR set to: 15
 19324                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19325  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19326  00168E  0100               	movlb	0	; () banked
 19327  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19328  001692  0E00               	movlw	0
 19329  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19330  001696  0E0A               	movlw	10
 19331  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19332  00169A  EC84  F026         	call	___awmod	;wreg free
 19333  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19334  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19335  0016A6  0E0F               	movlw	15
 19336  0016A8  0100               	movlb	0	; () banked
 19337  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19338  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19339  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19340  0016B2  0E00               	movlw	0
 19341  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19342  0016B6  0E0A               	movlw	10
 19343  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19344  0016BA  EC42  F025         	call	___awdiv	;wreg free
 19345  0016BE  0100               	movlb	0	; () banked
 19346  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19347  0016C2  0BF0               	andlw	240
 19348  0016C4  0BF0               	andlw	240
 19349  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19350  0016C8  6E98               	movwf	3992,c	;volatile
 19351                           
 19352                           ;rtcc_drv.c: 409: break;
 19353  0016CA  0012               	return	
 19354  0016CC                     l446:
 19355                           
 19356                           ; BSR set to: 0
 19357                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19358  0016CC  010F               	movlb	15	; () banked
 19359  0016CE  933F               	bcf	63,1,b	;volatile
 19360                           
 19361                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19362  0016D0  813F               	bsf	63,0,b	;volatile
 19363                           
 19364                           ; BSR set to: 15
 19365                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19366  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19367  0016D6  0100               	movlb	0	; () banked
 19368  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19369  0016DA  0E00               	movlw	0
 19370  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19371  0016DE  0E0A               	movlw	10
 19372  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19373  0016E2  EC84  F026         	call	___awmod	;wreg free
 19374  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19375  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19376  0016EE  0E0F               	movlw	15
 19377  0016F0  0100               	movlb	0	; () banked
 19378  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19379  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19380  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19381  0016FA  0E00               	movlw	0
 19382  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19383  0016FE  0E0A               	movlw	10
 19384  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19385  001702  EC42  F025         	call	___awdiv	;wreg free
 19386  001706  0100               	movlb	0	; () banked
 19387  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19388  00170A  0BF0               	andlw	240
 19389  00170C  0BF0               	andlw	240
 19390  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19391  001710  6E99               	movwf	3993,c	;volatile
 19392                           
 19393                           ;rtcc_drv.c: 417: break;
 19394  001712  0012               	return	
 19395  001714                     l447:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19399  001714  010F               	movlb	15	; () banked
 19400  001716  933F               	bcf	63,1,b	;volatile
 19401                           
 19402                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19403  001718  813F               	bsf	63,0,b	;volatile
 19404                           
 19405                           ; BSR set to: 15
 19406                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19407  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19408  00171E  0100               	movlb	0	; () banked
 19409  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19410  001722  0E00               	movlw	0
 19411  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19412  001726  0E0A               	movlw	10
 19413  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19414  00172A  EC84  F026         	call	___awmod	;wreg free
 19415  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19416  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19417  001736  0E0F               	movlw	15
 19418  001738  0100               	movlb	0	; () banked
 19419  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19420  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19421  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19422  001742  0E00               	movlw	0
 19423  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19424  001746  0E0A               	movlw	10
 19425  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19426  00174A  EC42  F025         	call	___awdiv	;wreg free
 19427  00174E  0100               	movlb	0	; () banked
 19428  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19429  001752  0BF0               	andlw	240
 19430  001754  0BF0               	andlw	240
 19431  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19432  001758  6E98               	movwf	3992,c	;volatile
 19433                           
 19434                           ;rtcc_drv.c: 425: break;
 19435  00175A  0012               	return	
 19436  00175C                     l448:
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19440  00175C  010F               	movlb	15	; () banked
 19441  00175E  933F               	bcf	63,1,b	;volatile
 19442                           
 19443                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19444  001760  913F               	bcf	63,0,b	;volatile
 19445                           
 19446                           ; BSR set to: 15
 19447                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19448  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19449  001766  0100               	movlb	0	; () banked
 19450  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19451  00176A  0E00               	movlw	0
 19452  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19453  00176E  0E0A               	movlw	10
 19454  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19455  001772  EC84  F026         	call	___awmod	;wreg free
 19456  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19457  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19458  00177E  0E0F               	movlw	15
 19459  001780  0100               	movlb	0	; () banked
 19460  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19461  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19462  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19463  00178A  0E00               	movlw	0
 19464  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19465  00178E  0E0A               	movlw	10
 19466  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19467  001792  EC42  F025         	call	___awdiv	;wreg free
 19468  001796  0100               	movlb	0	; () banked
 19469  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19470  00179A  0BF0               	andlw	240
 19471  00179C  0BF0               	andlw	240
 19472  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19473  0017A0  6E99               	movwf	3993,c	;volatile
 19474                           
 19475                           ;rtcc_drv.c: 433: break;
 19476  0017A2  0012               	return	
 19477  0017A4                     l449:
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19481  0017A4  010F               	movlb	15	; () banked
 19482  0017A6  933F               	bcf	63,1,b	;volatile
 19483                           
 19484                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19485  0017A8  913F               	bcf	63,0,b	;volatile
 19486                           
 19487                           ; BSR set to: 15
 19488                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19489  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19490  0017AE  0100               	movlb	0	; () banked
 19491  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19492  0017B2  0E00               	movlw	0
 19493  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19494  0017B6  0E0A               	movlw	10
 19495  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19496  0017BA  EC84  F026         	call	___awmod	;wreg free
 19497  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19498  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19499  0017C6  0E0F               	movlw	15
 19500  0017C8  0100               	movlb	0	; () banked
 19501  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19502  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19503  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19504  0017D2  0E00               	movlw	0
 19505  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19506  0017D6  0E0A               	movlw	10
 19507  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19508  0017DA  EC42  F025         	call	___awdiv	;wreg free
 19509  0017DE  0100               	movlb	0	; () banked
 19510  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19511  0017E2  0BF0               	andlw	240
 19512  0017E4  0BF0               	andlw	240
 19513  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19514  0017E8  6E98               	movwf	3992,c	;volatile
 19515                           
 19516                           ; BSR set to: 0
 19517                           ;rtcc_drv.c: 445: }
 19518                           
 19519                           ; BSR set to: 0
 19520                           ;rtcc_drv.c: 444: break;
 19521                           
 19522                           ;rtcc_drv.c: 443: default:
 19523                           
 19524                           ;rtcc_drv.c: 441: break;
 19525  0017EA  0012               	return	
 19526  0017EC                     l441:
 19527                           
 19528                           ; BSR set to: 0
 19529  0017EC  0100               	movlb	0	; () banked
 19530  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19531                           
 19532                           ; Switch size 1, requested type "space"
 19533                           ; Number of cases is 7, Range of values is 0 to 6
 19534                           ; switch strategies available:
 19535                           ; Name         Instructions Cycles
 19536                           ; simple_byte           22    12 (average)
 19537                           ;	Chosen strategy is simple_byte
 19538  0017F0  0A00               	xorlw	0	; case 0
 19539  0017F2  B4D8               	btfsc	status,2,c
 19540  0017F4  D6FF               	goto	l442
 19541  0017F6  0A01               	xorlw	1	; case 1
 19542  0017F8  B4D8               	btfsc	status,2,c
 19543  0017FA  D720               	goto	l444
 19544  0017FC  0A03               	xorlw	3	; case 2
 19545  0017FE  B4D8               	btfsc	status,2,c
 19546  001800  D741               	goto	l445
 19547  001802  0A01               	xorlw	1	; case 3
 19548  001804  B4D8               	btfsc	status,2,c
 19549  001806  D762               	goto	l446
 19550  001808  0A07               	xorlw	7	; case 4
 19551  00180A  B4D8               	btfsc	status,2,c
 19552  00180C  D783               	goto	l447
 19553  00180E  0A01               	xorlw	1	; case 5
 19554  001810  B4D8               	btfsc	status,2,c
 19555  001812  D7A4               	goto	l448
 19556  001814  0A03               	xorlw	3	; case 6
 19557  001816  A4D8               	btfss	status,2,c
 19558  001818  0012               	return	
 19559  00181A  D7C4               	goto	l449
 19560  00181C                     __end_of_Rtcc_SetRtccValue:
 19561                           	opt stack 0
 19562                           tosu	equ	0xFFF
 19563                           tosh	equ	0xFFE
 19564                           tosl	equ	0xFFD
 19565                           pclath	equ	0xFFA
 19566                           tblptru	equ	0xFF8
 19567                           tblptrh	equ	0xFF7
 19568                           tblptrl	equ	0xFF6
 19569                           tablat	equ	0xFF5
 19570                           prodh	equ	0xFF4
 19571                           prodl	equ	0xFF3
 19572                           intcon	equ	0xFF2
 19573                           intcon2	equ	0xFF1
 19574                           intcon3	equ	0xFF0
 19575                           indf0	equ	0xFEF
 19576                           postinc0	equ	0xFEE
 19577                           plusw0	equ	0xFEB
 19578                           fsr0h	equ	0xFEA
 19579                           fsr0l	equ	0xFE9
 19580                           wreg	equ	0xFE8
 19581                           indf1	equ	0xFE7
 19582                           postinc1	equ	0xFE6
 19583                           postdec1	equ	0xFE5
 19584                           plusw1	equ	0xFE3
 19585                           fsr1h	equ	0xFE2
 19586                           fsr1l	equ	0xFE1
 19587                           indf2	equ	0xFDF
 19588                           postinc2	equ	0xFDE
 19589                           postdec2	equ	0xFDD
 19590                           plusw2	equ	0xFDB
 19591                           fsr2h	equ	0xFDA
 19592                           fsr2l	equ	0xFD9
 19593                           status	equ	0xFD8
 19594                           
 19595 ;; *************** function ___awmod *****************
 19596 ;; Defined at:
 19597 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;  dividend        2   29[BANK0 ] int 
 19600 ;;  divisor         2   31[BANK0 ] int 
 19601 ;; Auto vars:     Size  Location     Type
 19602 ;;  sign            1   34[BANK0 ] unsigned char 
 19603 ;;  counter         1   33[BANK0 ] unsigned char 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  2   29[BANK0 ] int 
 19606 ;; Registers used:
 19607 ;;		wreg, status,2, status,0
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19616 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19617 ;;Total ram usage:        6 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:   11
 19620 ;; This function calls:
 19621 ;;		Nothing
 19622 ;; This function is called by:
 19623 ;;		_Rtcc_SetRtccValue
 19624 ;;		_Rtcc_SetRtccAlarm
 19625 ;; This function uses a non-reentrant model
 19626 ;;
 19627                           
 19628                           	psect	text85
 19629  004D08                     __ptext85:
 19630                           	opt stack 0
 19631  004D08                     ___awmod:
 19632                           	opt stack 14
 19633                           
 19634                           ; BSR set to: 0
 19635                           ;incstack = 0
 19636  004D08  0E00               	movlw	0
 19637  004D0A  0100               	movlb	0	; () banked
 19638  004D0C  6F82               	movwf	___awmod@sign& (0+255),b
 19639                           
 19640                           ; BSR set to: 0
 19641  004D0E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19642  004D10  D006               	goto	l2808
 19643                           
 19644                           ; BSR set to: 0
 19645  004D12  6D7D               	negf	___awmod@dividend& (0+255),b
 19646  004D14  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19647  004D16  B0D8               	btfsc	status,0,c
 19648  004D18  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19649                           
 19650                           ; BSR set to: 0
 19651  004D1A  0E01               	movlw	1
 19652  004D1C  6F82               	movwf	___awmod@sign& (0+255),b
 19653  004D1E                     l2808:
 19654                           
 19655                           ; BSR set to: 0
 19656                           
 19657                           ; BSR set to: 0
 19658  004D1E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19659  004D20  D004               	goto	l2809
 19660                           
 19661                           ; BSR set to: 0
 19662  004D22  6D7F               	negf	___awmod@divisor& (0+255),b
 19663  004D24  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19664  004D26  B0D8               	btfsc	status,0,c
 19665  004D28  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19666  004D2A                     l2809:
 19667                           
 19668                           ; BSR set to: 0
 19669                           
 19670                           ; BSR set to: 0
 19671  004D2A  517F               	movf	___awmod@divisor& (0+255),w,b
 19672  004D2C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19673  004D2E  B4D8               	btfsc	status,2,c
 19674  004D30  D018               	goto	l2816
 19675                           
 19676                           ; BSR set to: 0
 19677  004D32  0E01               	movlw	1
 19678  004D34  6F81               	movwf	___awmod@counter& (0+255),b
 19679  004D36  D004               	goto	l2811
 19680  004D38                     
 19681                           ; BSR set to: 0
 19682                           
 19683                           ; BSR set to: 0
 19684  004D38  90D8               	bcf	status,0,c
 19685  004D3A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19686  004D3C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19687  004D3E  2B81               	incf	___awmod@counter& (0+255),f,b
 19688  004D40                     l2811:
 19689                           
 19690                           ; BSR set to: 0
 19691                           
 19692                           ; BSR set to: 0
 19693  004D40  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19694  004D42  D7FA               	goto	l2812
 19695  004D44                     u6930:
 19696                           
 19697                           ; BSR set to: 0
 19698                           
 19699                           ; BSR set to: 0
 19700                           
 19701                           ; BSR set to: 0
 19702  004D44  517F               	movf	___awmod@divisor& (0+255),w,b
 19703  004D46  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19704  004D48  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19705  004D4A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19706  004D4C  A0D8               	btfss	status,0,c
 19707  004D4E  D004               	goto	l2815
 19708                           
 19709                           ; BSR set to: 0
 19710  004D50  517F               	movf	___awmod@divisor& (0+255),w,b
 19711  004D52  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19712  004D54  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19713  004D56  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19714  004D58                     l2815:
 19715                           
 19716                           ; BSR set to: 0
 19717                           
 19718                           ; BSR set to: 0
 19719  004D58  90D8               	bcf	status,0,c
 19720  004D5A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19721  004D5C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19722                           
 19723                           ; BSR set to: 0
 19724  004D5E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19725  004D60  D7F1               	goto	u6930
 19726  004D62                     l2816:
 19727                           
 19728                           ; BSR set to: 0
 19729                           
 19730                           ; BSR set to: 0
 19731                           
 19732                           ; BSR set to: 0
 19733  004D62  5182               	movf	___awmod@sign& (0+255),w,b
 19734  004D64  B4D8               	btfsc	status,2,c
 19735  004D66  D004               	goto	l2817
 19736                           
 19737                           ; BSR set to: 0
 19738  004D68  6D7D               	negf	___awmod@dividend& (0+255),b
 19739  004D6A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19740  004D6C  B0D8               	btfsc	status,0,c
 19741  004D6E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19742  004D70                     l2817:
 19743                           
 19744                           ; BSR set to: 0
 19745                           
 19746                           ; BSR set to: 0
 19747  004D70  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19748  004D74  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19749  004D78  0012               	return	
 19750  004D7A                     __end_of___awmod:
 19751                           	opt stack 0
 19752                           tosu	equ	0xFFF
 19753                           tosh	equ	0xFFE
 19754                           tosl	equ	0xFFD
 19755                           pclath	equ	0xFFA
 19756                           tblptru	equ	0xFF8
 19757                           tblptrh	equ	0xFF7
 19758                           tblptrl	equ	0xFF6
 19759                           tablat	equ	0xFF5
 19760                           prodh	equ	0xFF4
 19761                           prodl	equ	0xFF3
 19762                           intcon	equ	0xFF2
 19763                           intcon2	equ	0xFF1
 19764                           intcon3	equ	0xFF0
 19765                           indf0	equ	0xFEF
 19766                           postinc0	equ	0xFEE
 19767                           plusw0	equ	0xFEB
 19768                           fsr0h	equ	0xFEA
 19769                           fsr0l	equ	0xFE9
 19770                           wreg	equ	0xFE8
 19771                           indf1	equ	0xFE7
 19772                           postinc1	equ	0xFE6
 19773                           postdec1	equ	0xFE5
 19774                           plusw1	equ	0xFE3
 19775                           fsr1h	equ	0xFE2
 19776                           fsr1l	equ	0xFE1
 19777                           indf2	equ	0xFDF
 19778                           postinc2	equ	0xFDE
 19779                           postdec2	equ	0xFDD
 19780                           plusw2	equ	0xFDB
 19781                           fsr2h	equ	0xFDA
 19782                           fsr2l	equ	0xFD9
 19783                           status	equ	0xFD8
 19784                           
 19785 ;; *************** function ___awdiv *****************
 19786 ;; Defined at:
 19787 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;  dividend        2   29[BANK0 ] int 
 19790 ;;  divisor         2   31[BANK0 ] int 
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;  quotient        2   35[BANK0 ] int 
 19793 ;;  sign            1   34[BANK0 ] unsigned char 
 19794 ;;  counter         1   33[BANK0 ] unsigned char 
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  2   29[BANK0 ] int 
 19797 ;; Registers used:
 19798 ;;		wreg, status,2, status,0
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19804 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19805 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;Total ram usage:        8 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:   11
 19811 ;; This function calls:
 19812 ;;		Nothing
 19813 ;; This function is called by:
 19814 ;;		_Rtcc_SetRtccValue
 19815 ;;		_Rtcc_SetRtccAlarm
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819                           	psect	text86
 19820  004A84                     __ptext86:
 19821                           	opt stack 0
 19822  004A84                     ___awdiv:
 19823                           	opt stack 14
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;incstack = 0
 19827  004A84  0E00               	movlw	0
 19828  004A86  0100               	movlb	0	; () banked
 19829  004A88  6F82               	movwf	___awdiv@sign& (0+255),b
 19830                           
 19831                           ; BSR set to: 0
 19832  004A8A  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19833  004A8C  D006               	goto	l2795
 19834                           
 19835                           ; BSR set to: 0
 19836  004A8E  6D7F               	negf	___awdiv@divisor& (0+255),b
 19837  004A90  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19838  004A92  B0D8               	btfsc	status,0,c
 19839  004A94  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19840                           
 19841                           ; BSR set to: 0
 19842  004A96  0E01               	movlw	1
 19843  004A98  6F82               	movwf	___awdiv@sign& (0+255),b
 19844  004A9A                     l2795:
 19845                           
 19846                           ; BSR set to: 0
 19847                           
 19848                           ; BSR set to: 0
 19849  004A9A  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19850  004A9C  D006               	goto	l2796
 19851                           
 19852                           ; BSR set to: 0
 19853  004A9E  6D7D               	negf	___awdiv@dividend& (0+255),b
 19854  004AA0  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19855  004AA2  B0D8               	btfsc	status,0,c
 19856  004AA4  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19857                           
 19858                           ; BSR set to: 0
 19859  004AA6  0E01               	movlw	1
 19860  004AA8  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19861  004AAA                     l2796:
 19862                           
 19863                           ; BSR set to: 0
 19864                           
 19865                           ; BSR set to: 0
 19866  004AAA  0E00               	movlw	0
 19867  004AAC  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19868  004AAE  0E00               	movlw	0
 19869  004AB0  6F83               	movwf	___awdiv@quotient& (0+255),b
 19870                           
 19871                           ; BSR set to: 0
 19872  004AB2  517F               	movf	___awdiv@divisor& (0+255),w,b
 19873  004AB4  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19874  004AB6  B4D8               	btfsc	status,2,c
 19875  004AB8  D01C               	goto	l2803
 19876                           
 19877                           ; BSR set to: 0
 19878  004ABA  0E01               	movlw	1
 19879  004ABC  6F81               	movwf	___awdiv@counter& (0+255),b
 19880  004ABE  D004               	goto	l2798
 19881  004AC0                     
 19882                           ; BSR set to: 0
 19883                           
 19884                           ; BSR set to: 0
 19885  004AC0  90D8               	bcf	status,0,c
 19886  004AC2  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19887  004AC4  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19888  004AC6  2B81               	incf	___awdiv@counter& (0+255),f,b
 19889  004AC8                     l2798:
 19890                           
 19891                           ; BSR set to: 0
 19892                           
 19893                           ; BSR set to: 0
 19894  004AC8  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19895  004ACA  D7FA               	goto	l2799
 19896  004ACC                     u6870:
 19897                           
 19898                           ; BSR set to: 0
 19899                           
 19900                           ; BSR set to: 0
 19901                           
 19902                           ; BSR set to: 0
 19903  004ACC  90D8               	bcf	status,0,c
 19904  004ACE  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19905  004AD0  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19906                           
 19907                           ; BSR set to: 0
 19908  004AD2  517F               	movf	___awdiv@divisor& (0+255),w,b
 19909  004AD4  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19910  004AD6  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19911  004AD8  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19912  004ADA  A0D8               	btfss	status,0,c
 19913  004ADC  D005               	goto	l2802
 19914                           
 19915                           ; BSR set to: 0
 19916  004ADE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19917  004AE0  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19918  004AE2  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19919  004AE4  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19920                           
 19921                           ; BSR set to: 0
 19922  004AE6  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19923  004AE8                     l2802:
 19924                           
 19925                           ; BSR set to: 0
 19926                           
 19927                           ; BSR set to: 0
 19928  004AE8  90D8               	bcf	status,0,c
 19929  004AEA  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19930  004AEC  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 0
 19933  004AEE  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19934  004AF0  D7ED               	goto	u6870
 19935  004AF2                     l2803:
 19936                           
 19937                           ; BSR set to: 0
 19938                           
 19939                           ; BSR set to: 0
 19940                           
 19941                           ; BSR set to: 0
 19942  004AF2  5182               	movf	___awdiv@sign& (0+255),w,b
 19943  004AF4  B4D8               	btfsc	status,2,c
 19944  004AF6  D004               	goto	l2804
 19945                           
 19946                           ; BSR set to: 0
 19947  004AF8  6D83               	negf	___awdiv@quotient& (0+255),b
 19948  004AFA  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19949  004AFC  B0D8               	btfsc	status,0,c
 19950  004AFE  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19951  004B00                     l2804:
 19952                           
 19953                           ; BSR set to: 0
 19954                           
 19955                           ; BSR set to: 0
 19956  004B00  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19957  004B04  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19958  004B08  0012               	return	
 19959  004B0A                     __end_of___awdiv:
 19960                           	opt stack 0
 19961                           tosu	equ	0xFFF
 19962                           tosh	equ	0xFFE
 19963                           tosl	equ	0xFFD
 19964                           pclath	equ	0xFFA
 19965                           tblptru	equ	0xFF8
 19966                           tblptrh	equ	0xFF7
 19967                           tblptrl	equ	0xFF6
 19968                           tablat	equ	0xFF5
 19969                           prodh	equ	0xFF4
 19970                           prodl	equ	0xFF3
 19971                           intcon	equ	0xFF2
 19972                           intcon2	equ	0xFF1
 19973                           intcon3	equ	0xFF0
 19974                           indf0	equ	0xFEF
 19975                           postinc0	equ	0xFEE
 19976                           plusw0	equ	0xFEB
 19977                           fsr0h	equ	0xFEA
 19978                           fsr0l	equ	0xFE9
 19979                           wreg	equ	0xFE8
 19980                           indf1	equ	0xFE7
 19981                           postinc1	equ	0xFE6
 19982                           postdec1	equ	0xFE5
 19983                           plusw1	equ	0xFE3
 19984                           fsr1h	equ	0xFE2
 19985                           fsr1l	equ	0xFE1
 19986                           indf2	equ	0xFDF
 19987                           postinc2	equ	0xFDE
 19988                           postdec2	equ	0xFDD
 19989                           plusw2	equ	0xFDB
 19990                           fsr2h	equ	0xFDA
 19991                           fsr2l	equ	0xFD9
 19992                           status	equ	0xFD8
 19993                           
 19994 ;; *************** function _Rtcc_LockRtc *****************
 19995 ;; Defined at:
 19996 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;		None
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;		None
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  1    wreg      void 
 20003 ;; Registers used:
 20004 ;;		None
 20005 ;; Tracked objects:
 20006 ;;		On entry : 0/0
 20007 ;;		On exit  : 0/0
 20008 ;;		Unchanged: 0/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20014 ;;Total ram usage:        0 bytes
 20015 ;; Hardware stack levels used:    1
 20016 ;; Hardware stack levels required when called:   11
 20017 ;; This function calls:
 20018 ;;		Nothing
 20019 ;; This function is called by:
 20020 ;;		_Rtcm_MainTask
 20021 ;;		_Rtcm_SetRtccDate
 20022 ;;		_Rtcm_SetRtccAlarm
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text87
 20027  0060E8                     __ptext87:
 20028                           	opt stack 0
 20029  0060E8                     _Rtcc_LockRtc:
 20030                           	opt stack 15
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;incstack = 0
 20034  0060E8  010F               	movlb	15	;# 
 20035  0060EA  0E55               	movlw	85	;# 
 20036  0060EC  6EA7               	movwf	4007,c	;# 
 20037  0060EE  0EAA               	movlw	170	;# 
 20038  0060F0  6EA7               	movwf	4007,c	;# 
 20039                           
 20040                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20041  0060F2  010F               	movlb	15	; () banked
 20042  0060F4  9B3F               	bcf	63,5,b	;volatile
 20043                           
 20044                           ; BSR set to: 15
 20045  0060F6  0012               	return		;funcret
 20046  0060F8                     __end_of_Rtcc_LockRtc:
 20047                           	opt stack 0
 20048                           tosu	equ	0xFFF
 20049                           tosh	equ	0xFFE
 20050                           tosl	equ	0xFFD
 20051                           pclath	equ	0xFFA
 20052                           tblptru	equ	0xFF8
 20053                           tblptrh	equ	0xFF7
 20054                           tblptrl	equ	0xFF6
 20055                           tablat	equ	0xFF5
 20056                           prodh	equ	0xFF4
 20057                           prodl	equ	0xFF3
 20058                           intcon	equ	0xFF2
 20059                           intcon2	equ	0xFF1
 20060                           intcon3	equ	0xFF0
 20061                           indf0	equ	0xFEF
 20062                           postinc0	equ	0xFEE
 20063                           plusw0	equ	0xFEB
 20064                           fsr0h	equ	0xFEA
 20065                           fsr0l	equ	0xFE9
 20066                           wreg	equ	0xFE8
 20067                           indf1	equ	0xFE7
 20068                           postinc1	equ	0xFE6
 20069                           postdec1	equ	0xFE5
 20070                           plusw1	equ	0xFE3
 20071                           fsr1h	equ	0xFE2
 20072                           fsr1l	equ	0xFE1
 20073                           indf2	equ	0xFDF
 20074                           postinc2	equ	0xFDE
 20075                           postdec2	equ	0xFDD
 20076                           plusw2	equ	0xFDB
 20077                           fsr2h	equ	0xFDA
 20078                           fsr2l	equ	0xFD9
 20079                           status	equ	0xFD8
 20080                           
 20081 ;; *************** function _Rtcm_GetRtccDate *****************
 20082 ;; Defined at:
 20083 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;		None
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20088 ;; Return value:  Size  Location     Type
 20089 ;;                  8   33[BANK0 ] struct _RtccDateType
 20090 ;; Registers used:
 20091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20092 ;; Tracked objects:
 20093 ;;		On entry : 0/0
 20094 ;;		On exit  : 0/0
 20095 ;;		Unchanged: 0/0
 20096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20097 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20098 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20100 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20101 ;;Total ram usage:       17 bytes
 20102 ;; Hardware stack levels used:    1
 20103 ;; Hardware stack levels required when called:   12
 20104 ;; This function calls:
 20105 ;;		_Rtcc_GetRtccValue
 20106 ;; This function is called by:
 20107 ;;		_Rtcm_MainTask
 20108 ;; This function uses a non-reentrant model
 20109 ;;
 20110                           
 20111                           	psect	text88
 20112  004F9A                     __ptext88:
 20113                           	opt stack 0
 20114  004F9A                     _Rtcm_GetRtccDate:
 20115                           	opt stack 15
 20116                           
 20117                           ;rtcm.c: 204: RtccDateType LocalDate;
 20118                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20119                           
 20120                           ; BSR set to: 15
 20121                           ;incstack = 0
 20122  004F9A  0E00               	movlw	0
 20123  004F9C  EC23  F024         	call	_Rtcc_GetRtccValue
 20124  004FA0  0100               	movlb	0	; () banked
 20125  004FA2  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20126  004FA4  0ED0               	movlw	208
 20127  004FA6  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20128  004FA8  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20129  004FAA  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20130  004FAC  0E07               	movlw	7
 20131  004FAE  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20132                           
 20133                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20134  004FB0  0E01               	movlw	1
 20135  004FB2  EC23  F024         	call	_Rtcc_GetRtccValue
 20136  004FB6  0100               	movlb	0	; () banked
 20137  004FB8  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20138                           
 20139                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20140  004FBA  0E02               	movlw	2
 20141  004FBC  EC23  F024         	call	_Rtcc_GetRtccValue
 20142  004FC0  0100               	movlb	0	; () banked
 20143  004FC2  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20144                           
 20145                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20146  004FC4  0E03               	movlw	3
 20147  004FC6  EC23  F024         	call	_Rtcc_GetRtccValue
 20148  004FCA  0100               	movlb	0	; () banked
 20149  004FCC  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20150                           
 20151                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20152  004FCE  0E04               	movlw	4
 20153  004FD0  EC23  F024         	call	_Rtcc_GetRtccValue
 20154  004FD4  0100               	movlb	0	; () banked
 20155  004FD6  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20156                           
 20157                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20158  004FD8  0E05               	movlw	5
 20159  004FDA  EC23  F024         	call	_Rtcc_GetRtccValue
 20160  004FDE  0100               	movlb	0	; () banked
 20161  004FE0  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20162                           
 20163                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20164  004FE2  0E06               	movlw	6
 20165  004FE4  EC23  F024         	call	_Rtcc_GetRtccValue
 20166  004FE8  0100               	movlb	0	; () banked
 20167  004FEA  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;rtcm.c: 216: return LocalDate;
 20171  004FEC  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20172  004FF0  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20173  004FF4  0E07               	movlw	7
 20174  004FF6                     u9171:
 20175  004FF6  CFDB FFEB          	movff	plusw2,plusw0
 20176  004FFA  06E8               	decf	wreg,f,c
 20177  004FFC  E2FC               	bc	u9171
 20178  004FFE  0012               	return	
 20179  005000                     __end_of_Rtcm_GetRtccDate:
 20180                           	opt stack 0
 20181                           tosu	equ	0xFFF
 20182                           tosh	equ	0xFFE
 20183                           tosl	equ	0xFFD
 20184                           pclath	equ	0xFFA
 20185                           tblptru	equ	0xFF8
 20186                           tblptrh	equ	0xFF7
 20187                           tblptrl	equ	0xFF6
 20188                           tablat	equ	0xFF5
 20189                           prodh	equ	0xFF4
 20190                           prodl	equ	0xFF3
 20191                           intcon	equ	0xFF2
 20192                           intcon2	equ	0xFF1
 20193                           intcon3	equ	0xFF0
 20194                           indf0	equ	0xFEF
 20195                           postinc0	equ	0xFEE
 20196                           plusw0	equ	0xFEB
 20197                           fsr0h	equ	0xFEA
 20198                           fsr0l	equ	0xFE9
 20199                           wreg	equ	0xFE8
 20200                           indf1	equ	0xFE7
 20201                           postinc1	equ	0xFE6
 20202                           postdec1	equ	0xFE5
 20203                           plusw1	equ	0xFE3
 20204                           fsr1h	equ	0xFE2
 20205                           fsr1l	equ	0xFE1
 20206                           indf2	equ	0xFDF
 20207                           postinc2	equ	0xFDE
 20208                           postdec2	equ	0xFDD
 20209                           plusw2	equ	0xFDB
 20210                           fsr2h	equ	0xFDA
 20211                           fsr2l	equ	0xFD9
 20212                           status	equ	0xFD8
 20213                           
 20214 ;; *************** function _Rtcc_GetRtccValue *****************
 20215 ;; Defined at:
 20216 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20217 ;; Parameters:    Size  Location     Type
 20218 ;;  RtccPtrVal      1    wreg     enum E7757
 20219 ;; Auto vars:     Size  Location     Type
 20220 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20221 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20222 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20223 ;; Return value:  Size  Location     Type
 20224 ;;                  1    wreg      unsigned char 
 20225 ;; Registers used:
 20226 ;;		wreg, status,2, status,0, prodl, prodh
 20227 ;; Tracked objects:
 20228 ;;		On entry : 0/0
 20229 ;;		On exit  : 0/0
 20230 ;;		Unchanged: 0/0
 20231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20233 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20236 ;;Total ram usage:        4 bytes
 20237 ;; Hardware stack levels used:    1
 20238 ;; Hardware stack levels required when called:   11
 20239 ;; This function calls:
 20240 ;;		Nothing
 20241 ;; This function is called by:
 20242 ;;		_Rtcm_GetRtccDate
 20243 ;; This function uses a non-reentrant model
 20244 ;;
 20245                           
 20246                           	psect	text89
 20247  004846                     __ptext89:
 20248                           	opt stack 0
 20249  004846                     _Rtcc_GetRtccValue:
 20250                           	opt stack 15
 20251                           
 20252                           ; BSR set to: 0
 20253                           ;incstack = 0
 20254                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20255  004846  0100               	movlb	0	; () banked
 20256  004848  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20257                           
 20258                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20259                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20260                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20261  00484A  D02D               	goto	l416
 20262  00484C                     l417:
 20263                           
 20264                           ; BSR set to: 0
 20265                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20266  00484C  010F               	movlb	15	; () banked
 20267  00484E  833F               	bsf	63,1,b	;volatile
 20268  004850                     
 20269                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20270  004850  813F               	bsf	63,0,b	;volatile
 20271  004852  D01C               	goto	L20
 20272  004854                     l419:
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20276  004854  010F               	movlb	15	; () banked
 20277  004856  833F               	bsf	63,1,b	;volatile
 20278  004858  D01E               	goto	L21
 20279  00485A                     l420:
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20283  00485A  010F               	movlb	15	; () banked
 20284  00485C  833F               	bsf	63,1,b	;volatile
 20285  00485E  D021               	goto	L24
 20286  004860                     l9059:
 20287                           
 20288                           ; BSR set to: 15
 20289                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20290  004860  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20291  004864  0E0F               	movlw	15
 20292  004866  0100               	movlb	0	; () banked
 20293  004868  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20294  00486A  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20295  00486C  0B0F               	andlw	15
 20296  00486E  0B0F               	andlw	15
 20297  004870  0D0A               	mullw	10
 20298  004872  50F3               	movf	prodl,w,c
 20299  004874  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20300  004876  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20301                           
 20302                           ;rtcc_drv.c: 241: break;
 20303  004878  D02D               	goto	l418
 20304  00487A                     l421:
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20308  00487A  010F               	movlb	15	; () banked
 20309  00487C  933F               	bcf	63,1,b	;volatile
 20310                           
 20311                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20312  00487E  813F               	bsf	63,0,b	;volatile
 20313                           
 20314                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20315  004880  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20316                           
 20317                           ;rtcc_drv.c: 249: break;
 20318  004884  D027               	goto	l418
 20319  004886                     l422:
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20323  004886  010F               	movlb	15	; () banked
 20324  004888  933F               	bcf	63,1,b	;volatile
 20325  00488A  D7E2               	goto	L22
 20326  00488C                     L20:
 20327                           
 20328                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20329  00488C  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20330  004890  D7E7               	goto	l9059
 20331  004892                     l423:
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20335  004892  010F               	movlb	15	; () banked
 20336  004894  933F               	bcf	63,1,b	;volatile
 20337  004896                     L21:
 20338                           
 20339                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20340  004896  913F               	bcf	63,0,b	;volatile
 20341                           
 20342                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20343  004898  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20344  00489C  D7E1               	goto	l9059
 20345  00489E                     l424:
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20349  00489E  010F               	movlb	15	; () banked
 20350  0048A0  933F               	bcf	63,1,b	;volatile
 20351  0048A2                     L24:
 20352                           
 20353                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20354  0048A2  913F               	bcf	63,0,b	;volatile
 20355  0048A4  D7F3               	goto	L20
 20356  0048A6                     l416:
 20357                           
 20358                           ; BSR set to: 0
 20359  0048A6  0100               	movlb	0	; () banked
 20360  0048A8  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20361                           
 20362                           ; Switch size 1, requested type "space"
 20363                           ; Number of cases is 7, Range of values is 0 to 6
 20364                           ; switch strategies available:
 20365                           ; Name         Instructions Cycles
 20366                           ; simple_byte           22    12 (average)
 20367                           ;	Chosen strategy is simple_byte
 20368  0048AA  0A00               	xorlw	0	; case 0
 20369  0048AC  B4D8               	btfsc	status,2,c
 20370  0048AE  D7CE               	goto	l417
 20371  0048B0  0A01               	xorlw	1	; case 1
 20372  0048B2  B4D8               	btfsc	status,2,c
 20373  0048B4  D7CF               	goto	l419
 20374  0048B6  0A03               	xorlw	3	; case 2
 20375  0048B8  B4D8               	btfsc	status,2,c
 20376  0048BA  D7CF               	goto	l420
 20377  0048BC  0A01               	xorlw	1	; case 3
 20378  0048BE  B4D8               	btfsc	status,2,c
 20379  0048C0  D7DC               	goto	l421
 20380  0048C2  0A07               	xorlw	7	; case 4
 20381  0048C4  B4D8               	btfsc	status,2,c
 20382  0048C6  D7DF               	goto	l422
 20383  0048C8  0A01               	xorlw	1	; case 5
 20384  0048CA  B4D8               	btfsc	status,2,c
 20385  0048CC  D7E2               	goto	l423
 20386  0048CE  0A03               	xorlw	3	; case 6
 20387  0048D0  B4D8               	btfsc	status,2,c
 20388  0048D2  D7E5               	goto	l424
 20389  0048D4                     l418:
 20390                           
 20391                           ;rtcc_drv.c: 286: return RetValue;
 20392                           
 20393                           ; BSR set to: 0
 20394  0048D4  0100               	movlb	0	; () banked
 20395  0048D6  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20396  0048D8  0012               	return	
 20397  0048DA                     __end_of_Rtcc_GetRtccValue:
 20398                           	opt stack 0
 20399                           tosu	equ	0xFFF
 20400                           tosh	equ	0xFFE
 20401                           tosl	equ	0xFFD
 20402                           pclath	equ	0xFFA
 20403                           tblptru	equ	0xFF8
 20404                           tblptrh	equ	0xFF7
 20405                           tblptrl	equ	0xFF6
 20406                           tablat	equ	0xFF5
 20407                           prodh	equ	0xFF4
 20408                           prodl	equ	0xFF3
 20409                           intcon	equ	0xFF2
 20410                           intcon2	equ	0xFF1
 20411                           intcon3	equ	0xFF0
 20412                           indf0	equ	0xFEF
 20413                           postinc0	equ	0xFEE
 20414                           plusw0	equ	0xFEB
 20415                           fsr0h	equ	0xFEA
 20416                           fsr0l	equ	0xFE9
 20417                           wreg	equ	0xFE8
 20418                           indf1	equ	0xFE7
 20419                           postinc1	equ	0xFE6
 20420                           postdec1	equ	0xFE5
 20421                           plusw1	equ	0xFE3
 20422                           fsr1h	equ	0xFE2
 20423                           fsr1l	equ	0xFE1
 20424                           indf2	equ	0xFDF
 20425                           postinc2	equ	0xFDE
 20426                           postdec2	equ	0xFDD
 20427                           plusw2	equ	0xFDB
 20428                           fsr2h	equ	0xFDA
 20429                           fsr2l	equ	0xFD9
 20430                           status	equ	0xFD8
 20431                           
 20432 ;; *************** function _Rtcc_SetRtcStatus *****************
 20433 ;; Defined at:
 20434 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20435 ;; Parameters:    Size  Location     Type
 20436 ;;  Status          1    wreg     unsigned char 
 20437 ;; Auto vars:     Size  Location     Type
 20438 ;;  Status          1   29[BANK0 ] unsigned char 
 20439 ;; Return value:  Size  Location     Type
 20440 ;;                  1    wreg      void 
 20441 ;; Registers used:
 20442 ;;		wreg
 20443 ;; Tracked objects:
 20444 ;;		On entry : 0/0
 20445 ;;		On exit  : 0/0
 20446 ;;		Unchanged: 0/0
 20447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20452 ;;Total ram usage:        1 bytes
 20453 ;; Hardware stack levels used:    1
 20454 ;; Hardware stack levels required when called:   11
 20455 ;; This function calls:
 20456 ;;		Nothing
 20457 ;; This function is called by:
 20458 ;;		_Rtcm_MainTask
 20459 ;; This function uses a non-reentrant model
 20460 ;;
 20461                           
 20462                           	psect	text90
 20463  006048                     __ptext90:
 20464                           	opt stack 0
 20465  006048                     _Rtcc_SetRtcStatus:
 20466                           	opt stack 16
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;incstack = 0
 20470                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20471  006048  0100               	movlb	0	; () banked
 20472  00604A  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20473                           
 20474                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20475  00604C  0100               	movlb	0	; () banked
 20476  00604E  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20477  006050  D003               	bra	u8065
 20478  006052  010F               	movlb	15	; () banked
 20479  006054  9F3F               	bcf	63,7,b	;volatile
 20480  006056  D002               	bra	u8066
 20481  006058                     u8065:
 20482  006058  010F               	movlb	15	; () banked
 20483  00605A  8F3F               	bsf	63,7,b	;volatile
 20484  00605C                     u8066:
 20485                           
 20486                           ; BSR set to: 15
 20487  00605C  0012               	return		;funcret
 20488  00605E                     __end_of_Rtcc_SetRtcStatus:
 20489                           	opt stack 0
 20490                           tosu	equ	0xFFF
 20491                           tosh	equ	0xFFE
 20492                           tosl	equ	0xFFD
 20493                           pclath	equ	0xFFA
 20494                           tblptru	equ	0xFF8
 20495                           tblptrh	equ	0xFF7
 20496                           tblptrl	equ	0xFF6
 20497                           tablat	equ	0xFF5
 20498                           prodh	equ	0xFF4
 20499                           prodl	equ	0xFF3
 20500                           intcon	equ	0xFF2
 20501                           intcon2	equ	0xFF1
 20502                           intcon3	equ	0xFF0
 20503                           indf0	equ	0xFEF
 20504                           postinc0	equ	0xFEE
 20505                           plusw0	equ	0xFEB
 20506                           fsr0h	equ	0xFEA
 20507                           fsr0l	equ	0xFE9
 20508                           wreg	equ	0xFE8
 20509                           indf1	equ	0xFE7
 20510                           postinc1	equ	0xFE6
 20511                           postdec1	equ	0xFE5
 20512                           plusw1	equ	0xFE3
 20513                           fsr1h	equ	0xFE2
 20514                           fsr1l	equ	0xFE1
 20515                           indf2	equ	0xFDF
 20516                           postinc2	equ	0xFDE
 20517                           postdec2	equ	0xFDD
 20518                           plusw2	equ	0xFDB
 20519                           fsr2h	equ	0xFDA
 20520                           fsr2l	equ	0xFD9
 20521                           status	equ	0xFD8
 20522                           
 20523 ;; *************** function _Rtcc_RtcConfig *****************
 20524 ;; Defined at:
 20525 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20526 ;; Parameters:    Size  Location     Type
 20527 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20528 ;;		 -> RtcConfig(4), 
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;		None
 20531 ;; Return value:  Size  Location     Type
 20532 ;;                  1    wreg      void 
 20533 ;; Registers used:
 20534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20535 ;; Tracked objects:
 20536 ;;		On entry : 0/0
 20537 ;;		On exit  : 0/0
 20538 ;;		Unchanged: 0/0
 20539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20544 ;;Total ram usage:        3 bytes
 20545 ;; Hardware stack levels used:    1
 20546 ;; Hardware stack levels required when called:   12
 20547 ;; This function calls:
 20548 ;;		_RtccIrqInit
 20549 ;; This function is called by:
 20550 ;;		_Rtcm_MainTask
 20551 ;; This function uses a non-reentrant model
 20552 ;;
 20553                           
 20554                           	psect	text91
 20555  0044B0                     __ptext91:
 20556                           	opt stack 0
 20557  0044B0                     _Rtcc_RtcConfig:
 20558                           	opt stack 15
 20559                           
 20560                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20561                           
 20562                           ; BSR set to: 15
 20563                           ;incstack = 0
 20564  0044B0  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20565  0044B4  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20566  0044B8  50DF               	movf	indf2,w,c
 20567  0044BA  0100               	movlb	0	; () banked
 20568  0044BC  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20569  0044BE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20570  0044C0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20571  0044C2  010F               	movlb	15	; () banked
 20572  0044C4  513F               	movf	63,w,b	;volatile
 20573  0044C6  0100               	movlb	0	; () banked
 20574  0044C8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20575  0044CA  0BFB               	andlw	-5
 20576  0044CC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20577  0044CE  010F               	movlb	15	; () banked
 20578  0044D0  6F3F               	movwf	63,b	;volatile
 20579                           
 20580                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20581  0044D2  0100               	movlb	0	; () banked
 20582  0044D4  EE20 F001          	lfsr	2,1
 20583  0044D8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20584  0044DA  26D9               	addwf	fsr2l,f,c
 20585  0044DC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20586  0044DE  22DA               	addwfc	fsr2h,f,c
 20587  0044E0  50DF               	movf	indf2,w,c
 20588  0044E2  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20589  0044E4  0E01               	movlw	1
 20590  0044E6  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20591  0044E8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20592  0044EA  010F               	movlb	15	; () banked
 20593  0044EC  513C               	movf	60,w,b	;volatile
 20594  0044EE  0100               	movlb	0	; () banked
 20595  0044F0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20596  0044F2  0BFD               	andlw	-3
 20597  0044F4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20598  0044F6  010F               	movlb	15	; () banked
 20599  0044F8  6F3C               	movwf	60,b	;volatile
 20600                           
 20601                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20602  0044FA  0100               	movlb	0	; () banked
 20603  0044FC  EE20 F001          	lfsr	2,1
 20604  004500  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20605  004502  26D9               	addwf	fsr2l,f,c
 20606  004504  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20607  004506  22DA               	addwfc	fsr2h,f,c
 20608  004508  50DF               	movf	indf2,w,c
 20609  00450A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20610  00450C  90D8               	bcf	status,0,c
 20611  00450E  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20612  004510  0E01               	movlw	1
 20613  004512  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20614  004514  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20615  004516  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20616  004518  010F               	movlb	15	; () banked
 20617  00451A  513C               	movf	60,w,b	;volatile
 20618  00451C  0100               	movlb	0	; () banked
 20619  00451E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20620  004520  0BFB               	andlw	-5
 20621  004522  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20622  004524  010F               	movlb	15	; () banked
 20623  004526  6F3C               	movwf	60,b	;volatile
 20624                           
 20625                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20626  004528  0100               	movlb	0	; () banked
 20627  00452A  EE20 F002          	lfsr	2,2
 20628  00452E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20629  004530  26D9               	addwf	fsr2l,f,c
 20630  004532  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20631  004534  22DA               	addwfc	fsr2h,f,c
 20632  004536  04DE               	decf	postinc2,w,c
 20633  004538  A4D8               	btfss	status,2,c
 20634  00453A  0012               	return	
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;rtcc_drv.c: 115: {
 20638                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20639  00453C  EE20 F003          	lfsr	2,3
 20640  004540  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20641  004542  26D9               	addwf	fsr2l,f,c
 20642  004544  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20643  004546  22DA               	addwfc	fsr2h,f,c
 20644  004548  50DF               	movf	indf2,w,c
 20645  00454A  EC2F  F030         	call	_RtccIrqInit
 20646  00454E  0012               	return	
 20647  004550                     __end_of_Rtcc_RtcConfig:
 20648                           	opt stack 0
 20649                           tosu	equ	0xFFF
 20650                           tosh	equ	0xFFE
 20651                           tosl	equ	0xFFD
 20652                           pclath	equ	0xFFA
 20653                           tblptru	equ	0xFF8
 20654                           tblptrh	equ	0xFF7
 20655                           tblptrl	equ	0xFF6
 20656                           tablat	equ	0xFF5
 20657                           prodh	equ	0xFF4
 20658                           prodl	equ	0xFF3
 20659                           intcon	equ	0xFF2
 20660                           intcon2	equ	0xFF1
 20661                           intcon3	equ	0xFF0
 20662                           indf0	equ	0xFEF
 20663                           postinc0	equ	0xFEE
 20664                           plusw0	equ	0xFEB
 20665                           fsr0h	equ	0xFEA
 20666                           fsr0l	equ	0xFE9
 20667                           wreg	equ	0xFE8
 20668                           indf1	equ	0xFE7
 20669                           postinc1	equ	0xFE6
 20670                           postdec1	equ	0xFE5
 20671                           plusw1	equ	0xFE3
 20672                           fsr1h	equ	0xFE2
 20673                           fsr1l	equ	0xFE1
 20674                           indf2	equ	0xFDF
 20675                           postinc2	equ	0xFDE
 20676                           postdec2	equ	0xFDD
 20677                           plusw2	equ	0xFDB
 20678                           fsr2h	equ	0xFDA
 20679                           fsr2l	equ	0xFD9
 20680                           status	equ	0xFD8
 20681                           
 20682 ;; *************** function _RtccIrqInit *****************
 20683 ;; Defined at:
 20684 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20685 ;; Parameters:    Size  Location     Type
 20686 ;;  Priority        1    wreg     enum E7716
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;  Priority        1   29[BANK0 ] enum E7716
 20689 ;; Return value:  Size  Location     Type
 20690 ;;                  1    wreg      void 
 20691 ;; Registers used:
 20692 ;;		wreg
 20693 ;; Tracked objects:
 20694 ;;		On entry : 0/0
 20695 ;;		On exit  : 0/0
 20696 ;;		Unchanged: 0/0
 20697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20702 ;;Total ram usage:        1 bytes
 20703 ;; Hardware stack levels used:    1
 20704 ;; Hardware stack levels required when called:   11
 20705 ;; This function calls:
 20706 ;;		Nothing
 20707 ;; This function is called by:
 20708 ;;		_Rtcc_RtcConfig
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text92
 20713  00605E                     __ptext92:
 20714                           	opt stack 0
 20715  00605E                     _RtccIrqInit:
 20716                           	opt stack 15
 20717                           
 20718                           ;incstack = 0
 20719                           ;RtccIrqInit@Priority stored from wreg
 20720  00605E  0100               	movlb	0	; () banked
 20721  006060  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20722                           
 20723                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20724  006062  90A4               	bcf	4004,0,c	;volatile
 20725                           
 20726                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20727  006064  0100               	movlb	0	; () banked
 20728  006066  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20729  006068  D002               	bra	u7085
 20730  00606A  90A5               	bcf	4005,0,c	;volatile
 20731  00606C  D001               	bra	u7086
 20732  00606E                     u7085:
 20733  00606E  80A5               	bsf	4005,0,c	;volatile
 20734  006070                     u7086:
 20735                           
 20736                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20737  006070  80A3               	bsf	4003,0,c	;volatile
 20738  006072  0012               	return		;funcret
 20739  006074                     __end_of_RtccIrqInit:
 20740                           	opt stack 0
 20741                           tosu	equ	0xFFF
 20742                           tosh	equ	0xFFE
 20743                           tosl	equ	0xFFD
 20744                           pclath	equ	0xFFA
 20745                           tblptru	equ	0xFF8
 20746                           tblptrh	equ	0xFF7
 20747                           tblptrl	equ	0xFF6
 20748                           tablat	equ	0xFF5
 20749                           prodh	equ	0xFF4
 20750                           prodl	equ	0xFF3
 20751                           intcon	equ	0xFF2
 20752                           intcon2	equ	0xFF1
 20753                           intcon3	equ	0xFF0
 20754                           indf0	equ	0xFEF
 20755                           postinc0	equ	0xFEE
 20756                           plusw0	equ	0xFEB
 20757                           fsr0h	equ	0xFEA
 20758                           fsr0l	equ	0xFE9
 20759                           wreg	equ	0xFE8
 20760                           indf1	equ	0xFE7
 20761                           postinc1	equ	0xFE6
 20762                           postdec1	equ	0xFE5
 20763                           plusw1	equ	0xFE3
 20764                           fsr1h	equ	0xFE2
 20765                           fsr1l	equ	0xFE1
 20766                           indf2	equ	0xFDF
 20767                           postinc2	equ	0xFDE
 20768                           postdec2	equ	0xFDD
 20769                           plusw2	equ	0xFDB
 20770                           fsr2h	equ	0xFDA
 20771                           fsr2l	equ	0xFD9
 20772                           status	equ	0xFD8
 20773                           
 20774 ;; *************** function _Rtcc_AlarmConfig *****************
 20775 ;; Defined at:
 20776 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20779 ;;		 -> AlCfg(4), 
 20780 ;; Auto vars:     Size  Location     Type
 20781 ;;		None
 20782 ;; Return value:  Size  Location     Type
 20783 ;;                  1    wreg      void 
 20784 ;; Registers used:
 20785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20786 ;; Tracked objects:
 20787 ;;		On entry : 0/0
 20788 ;;		On exit  : 0/0
 20789 ;;		Unchanged: 0/0
 20790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20795 ;;Total ram usage:        3 bytes
 20796 ;; Hardware stack levels used:    1
 20797 ;; Hardware stack levels required when called:   11
 20798 ;; This function calls:
 20799 ;;		Nothing
 20800 ;; This function is called by:
 20801 ;;		_Rtcm_MainTask
 20802 ;; This function uses a non-reentrant model
 20803 ;;
 20804                           
 20805                           	psect	text93
 20806  004EC8                     __ptext93:
 20807                           	opt stack 0
 20808  004EC8                     _Rtcc_AlarmConfig:
 20809                           	opt stack 16
 20810                           
 20811                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20812                           
 20813                           ;incstack = 0
 20814  004EC8  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20815  004ECC  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20816  004ED0  50DF               	movf	indf2,w,c
 20817  004ED2  0100               	movlb	0	; () banked
 20818  004ED4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20819  004ED6  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20820  004ED8  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20821  004EDA  5091               	movf	3985,w,c	;volatile
 20822  004EDC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20823  004EDE  0B7F               	andlw	-129
 20824  004EE0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20825  004EE2  6E91               	movwf	3985,c	;volatile
 20826                           
 20827                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20828  004EE4  EE20 F001          	lfsr	2,1
 20829  004EE8  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20830  004EEA  26D9               	addwf	fsr2l,f,c
 20831  004EEC  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20832  004EEE  22DA               	addwfc	fsr2h,f,c
 20833  004EF0  50DF               	movf	indf2,w,c
 20834  004EF2  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20835  004EF4  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20836  004EF6  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20837  004EF8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20838  004EFA  5091               	movf	3985,w,c	;volatile
 20839  004EFC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20840  004EFE  0BBF               	andlw	-65
 20841  004F00  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20842  004F02  6E91               	movwf	3985,c	;volatile
 20843                           
 20844                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20845  004F04  EE20 F002          	lfsr	2,2
 20846  004F08  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20847  004F0A  26D9               	addwf	fsr2l,f,c
 20848  004F0C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20849  004F0E  22DA               	addwfc	fsr2h,f,c
 20850  004F10  50DF               	movf	indf2,w,c
 20851  004F12  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20852  004F14  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20853  004F16  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20854  004F18  5091               	movf	3985,w,c	;volatile
 20855  004F1A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20856  004F1C  0BC3               	andlw	-61
 20857  004F1E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20858  004F20  6E91               	movwf	3985,c	;volatile
 20859                           
 20860                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20861  004F22  EE20 F003          	lfsr	2,3
 20862  004F26  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20863  004F28  26D9               	addwf	fsr2l,f,c
 20864  004F2A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20865  004F2C  22DA               	addwfc	fsr2h,f,c
 20866  004F2E  50DF               	movf	indf2,w,c
 20867  004F30  6E90               	movwf	3984,c	;volatile
 20868                           
 20869                           ; BSR set to: 0
 20870  004F32  0012               	return		;funcret
 20871  004F34                     __end_of_Rtcc_AlarmConfig:
 20872                           	opt stack 0
 20873                           tosu	equ	0xFFF
 20874                           tosh	equ	0xFFE
 20875                           tosl	equ	0xFFD
 20876                           pclath	equ	0xFFA
 20877                           tblptru	equ	0xFF8
 20878                           tblptrh	equ	0xFF7
 20879                           tblptrl	equ	0xFF6
 20880                           tablat	equ	0xFF5
 20881                           prodh	equ	0xFF4
 20882                           prodl	equ	0xFF3
 20883                           intcon	equ	0xFF2
 20884                           intcon2	equ	0xFF1
 20885                           intcon3	equ	0xFF0
 20886                           indf0	equ	0xFEF
 20887                           postinc0	equ	0xFEE
 20888                           plusw0	equ	0xFEB
 20889                           fsr0h	equ	0xFEA
 20890                           fsr0l	equ	0xFE9
 20891                           wreg	equ	0xFE8
 20892                           indf1	equ	0xFE7
 20893                           postinc1	equ	0xFE6
 20894                           postdec1	equ	0xFE5
 20895                           plusw1	equ	0xFE3
 20896                           fsr1h	equ	0xFE2
 20897                           fsr1l	equ	0xFE1
 20898                           indf2	equ	0xFDF
 20899                           postinc2	equ	0xFDE
 20900                           postdec2	equ	0xFDD
 20901                           plusw2	equ	0xFDB
 20902                           fsr2h	equ	0xFDA
 20903                           fsr2l	equ	0xFD9
 20904                           status	equ	0xFD8
 20905                           
 20906 ;; *************** function _initGprsModem *****************
 20907 ;; Defined at:
 20908 ;;		line 109 in file "../Source/c/04_App/app.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;		None
 20911 ;; Auto vars:     Size  Location     Type
 20912 ;;		None
 20913 ;; Return value:  Size  Location     Type
 20914 ;;                  1    wreg      unsigned char 
 20915 ;; Registers used:
 20916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20917 ;; Tracked objects:
 20918 ;;		On entry : 0/0
 20919 ;;		On exit  : 0/0
 20920 ;;		Unchanged: 0/0
 20921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;Total ram usage:        0 bytes
 20927 ;; Hardware stack levels used:    1
 20928 ;; Hardware stack levels required when called:   14
 20929 ;; This function calls:
 20930 ;;		_Led_SetLedStatus
 20931 ;;		_Mdm_SetSmsFormat
 20932 ;;		_Uart_WriteConstString
 20933 ;;		_secondsAppTimer
 20934 ;; This function is called by:
 20935 ;;		_MyApp_Task
 20936 ;; This function uses a non-reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text94
 20940  004C10                     __ptext94:
 20941                           	opt stack 0
 20942  004C10                     _initGprsModem:
 20943                           	opt stack 13
 20944                           
 20945                           ;app.c: 111: static uint16_t modemCounter = 0;
 20946                           ;app.c: 112: static bool isInitialized = 0;
 20947                           ;app.c: 113: static uint8_t initMdm = 0;
 20948                           ;app.c: 115: switch(initMdm)
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;incstack = 0
 20952  004C10  D034               	goto	l2537
 20953  004C12                     
 20954                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20955  004C12  0E03               	movlw	3
 20956  004C14  0100               	movlb	0	; () banked
 20957  004C16  19D6               	xorwf	_MdmStatus& (0+255),w,b
 20958  004C18  B4D8               	btfsc	status,2,c
 20959  004C1A  D003               	goto	u13290
 20960                           
 20961                           ; BSR set to: 0
 20962  004C1C  05D6               	decf	_MdmStatus& (0+255),w,b
 20963  004C1E  A4D8               	btfss	status,2,c
 20964  004C20  D034               	goto	l2543
 20965  004C22                     u13290:
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;app.c: 119: {
 20969                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20970                           
 20971                           ; BSR set to: 0
 20972  004C22  0EBA               	movlw	low initGprsModem@modemCounter
 20973  004C24  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20974  004C26  0E03               	movlw	high initGprsModem@modemCounter
 20975  004C28  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20976  004C2A  0E00               	movlw	0
 20977  004C2C  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20978  004C2E  0E05               	movlw	5
 20979  004C30  EC07  F022         	call	_secondsAppTimer
 20980  004C34  0900               	iorlw	0
 20981  004C36  B4D8               	btfsc	status,2,c
 20982  004C38  D028               	goto	l2543
 20983                           
 20984                           ;app.c: 121: {
 20985                           ;app.c: 122: Mdm_SetSmsFormat(1);
 20986  004C3A  0E01               	movlw	1
 20987  004C3C  EC8F  F02A         	call	_Mdm_SetSmsFormat
 20988                           
 20989                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 20990  004C40  0E01               	movlw	1
 20991  004C42  0100               	movlb	0	; () banked
 20992  004C44  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20993  004C46  0E01               	movlw	1
 20994  004C48  EC24  F02E         	call	_Led_SetLedStatus
 20995                           
 20996                           ;app.c: 124: initMdm = 1;
 20997  004C4C  0E01               	movlw	1
 20998  004C4E  0101               	movlb	1	; () banked
 20999  004C50  D012               	goto	L25
 21000  004C52                     
 21001                           ; BSR set to: 1
 21002                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21003                           
 21004                           ; BSR set to: 1
 21005  004C52  0E05               	movlw	low STR_29
 21006  004C54  0100               	movlb	0	; () banked
 21007  004C56  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21008  004C58  0EFF               	movlw	high STR_29
 21009  004C5A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21010  004C5C  0E01               	movlw	1
 21011  004C5E  EC20  F02C         	call	_Uart_WriteConstString
 21012                           
 21013                           ;app.c: 130: Led_SetLedStatus(1u, LED_STS_ON);
 21014  004C62  0E01               	movlw	1
 21015  004C64  0100               	movlb	0	; () banked
 21016  004C66  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21017  004C68  0E01               	movlw	1
 21018  004C6A  EC24  F02E         	call	_Led_SetLedStatus
 21019                           
 21020                           ;app.c: 131: isInitialized = 1;
 21021  004C6E  0E01               	movlw	1
 21022  004C70  0101               	movlb	1	; () banked
 21023  004C72  6FD5               	movwf	initGprsModem@isInitialized& (0+255),b
 21024                           
 21025                           ; BSR set to: 1
 21026                           ;app.c: 132: initMdm = 2;
 21027  004C74  0E02               	movlw	2
 21028  004C76                     L25:
 21029  004C76  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21030                           
 21031                           ; BSR set to: 1
 21032                           ;app.c: 137: }
 21033                           
 21034                           ; BSR set to: 1
 21035                           ;app.c: 136: break;
 21036                           
 21037                           ;app.c: 135: default:
 21038                           
 21039                           ;app.c: 133: break;
 21040  004C78  D008               	goto	l2543
 21041  004C7A                     l2537:
 21042                           
 21043                           ; BSR set to: 1
 21044  004C7A  0101               	movlb	1	; () banked
 21045  004C7C  51D4               	movf	initGprsModem@initMdm& (0+255),w,b
 21046                           
 21047                           ; Switch size 1, requested type "space"
 21048                           ; Number of cases is 2, Range of values is 0 to 1
 21049                           ; switch strategies available:
 21050                           ; Name         Instructions Cycles
 21051                           ; simple_byte            7     4 (average)
 21052                           ;	Chosen strategy is simple_byte
 21053  004C7E  0A00               	xorlw	0	; case 0
 21054  004C80  B4D8               	btfsc	status,2,c
 21055  004C82  D7C7               	goto	l2538
 21056  004C84  0A01               	xorlw	1	; case 1
 21057  004C86  B4D8               	btfsc	status,2,c
 21058  004C88  D7E4               	goto	l2544
 21059  004C8A                     l2543:
 21060                           
 21061                           ;app.c: 139: return isInitialized;
 21062                           
 21063                           ; BSR set to: 1
 21064  004C8A  0101               	movlb	1	; () banked
 21065  004C8C  51D5               	movf	initGprsModem@isInitialized& (0+255),w,b
 21066  004C8E  0012               	return	
 21067  004C90                     __end_of_initGprsModem:
 21068                           	opt stack 0
 21069                           tosu	equ	0xFFF
 21070                           tosh	equ	0xFFE
 21071                           tosl	equ	0xFFD
 21072                           pclath	equ	0xFFA
 21073                           tblptru	equ	0xFF8
 21074                           tblptrh	equ	0xFF7
 21075                           tblptrl	equ	0xFF6
 21076                           tablat	equ	0xFF5
 21077                           prodh	equ	0xFF4
 21078                           prodl	equ	0xFF3
 21079                           intcon	equ	0xFF2
 21080                           intcon2	equ	0xFF1
 21081                           intcon3	equ	0xFF0
 21082                           indf0	equ	0xFEF
 21083                           postinc0	equ	0xFEE
 21084                           plusw0	equ	0xFEB
 21085                           fsr0h	equ	0xFEA
 21086                           fsr0l	equ	0xFE9
 21087                           wreg	equ	0xFE8
 21088                           indf1	equ	0xFE7
 21089                           postinc1	equ	0xFE6
 21090                           postdec1	equ	0xFE5
 21091                           plusw1	equ	0xFE3
 21092                           fsr1h	equ	0xFE2
 21093                           fsr1l	equ	0xFE1
 21094                           indf2	equ	0xFDF
 21095                           postinc2	equ	0xFDE
 21096                           postdec2	equ	0xFDD
 21097                           plusw2	equ	0xFDB
 21098                           fsr2h	equ	0xFDA
 21099                           fsr2l	equ	0xFD9
 21100                           status	equ	0xFD8
 21101                           
 21102 ;; *************** function _Mdm_SetSmsFormat *****************
 21103 ;; Defined at:
 21104 ;;		line 819 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21105 ;; Parameters:    Size  Location     Type
 21106 ;;  TextFormat      1    wreg     unsigned char 
 21107 ;; Auto vars:     Size  Location     Type
 21108 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21109 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21110 ;;  Index           1   35[BANK0 ] unsigned char 
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  1    wreg      void 
 21113 ;; Registers used:
 21114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21124 ;;Total ram usage:       22 bytes
 21125 ;; Hardware stack levels used:    1
 21126 ;; Hardware stack levels required when called:   13
 21127 ;; This function calls:
 21128 ;;		_Uart_WriteString
 21129 ;; This function is called by:
 21130 ;;		_initGprsModem
 21131 ;; This function uses a non-reentrant model
 21132 ;;
 21133                           
 21134                           	psect	text95
 21135  00551E                     __ptext95:
 21136                           	opt stack 0
 21137  00551E                     _Mdm_SetSmsFormat:
 21138                           	opt stack 13
 21139                           
 21140                           ; BSR set to: 1
 21141                           ;incstack = 0
 21142                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21143  00551E  0100               	movlb	0	; () banked
 21144  005520  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21145                           
 21146                           ;mdm_gsm_gprs.c: 821: UINT8 UartMessage[20];
 21147                           ;mdm_gsm_gprs.c: 822: UINT8 Index = 0;
 21148  005522  0E00               	movlw	0
 21149  005524  0100               	movlb	0	; () banked
 21150  005526  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21151                           
 21152                           ;mdm_gsm_gprs.c: 825: UartMessage[0] = 'A';
 21153  005528  0E41               	movlw	65
 21154  00552A  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21155                           
 21156                           ;mdm_gsm_gprs.c: 826: UartMessage[1] = 'T';
 21157  00552C  0E54               	movlw	84
 21158  00552E  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21159                           
 21160                           ;mdm_gsm_gprs.c: 827: UartMessage[2] = '+';
 21161  005530  0E2B               	movlw	43
 21162  005532  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21163                           
 21164                           ;mdm_gsm_gprs.c: 828: UartMessage[3] = 'C';
 21165  005534  0E43               	movlw	67
 21166  005536  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21167                           
 21168                           ;mdm_gsm_gprs.c: 829: UartMessage[4] = 'M';
 21169  005538  0E4D               	movlw	77
 21170  00553A  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21171                           
 21172                           ;mdm_gsm_gprs.c: 830: UartMessage[5] = 'G';
 21173  00553C  0E47               	movlw	71
 21174  00553E  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21175                           
 21176                           ;mdm_gsm_gprs.c: 831: UartMessage[6] = 'F';
 21177  005540  0E46               	movlw	70
 21178  005542  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21179                           
 21180                           ;mdm_gsm_gprs.c: 832: UartMessage[7] = '=';
 21181  005544  0E3D               	movlw	61
 21182  005546  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21183                           
 21184                           ; BSR set to: 0
 21185                           ;mdm_gsm_gprs.c: 835: if (TextFormat == 1u)
 21186  005548  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21187  00554A  A4D8               	btfss	status,2,c
 21188  00554C  D002               	goto	l1113
 21189                           
 21190                           ; BSR set to: 0
 21191                           ;mdm_gsm_gprs.c: 836: {
 21192                           ;mdm_gsm_gprs.c: 837: UartMessage[8] = '1';
 21193  00554E  0E31               	movlw	49
 21194  005550  D001               	goto	L26
 21195  005552                     l1113:
 21196                           
 21197                           ; BSR set to: 0
 21198                           ;mdm_gsm_gprs.c: 839: else
 21199                           ;mdm_gsm_gprs.c: 840: {
 21200                           ;mdm_gsm_gprs.c: 841: UartMessage[8] = '0';
 21201                           
 21202                           ; BSR set to: 0
 21203  005552  0E30               	movlw	48
 21204  005554                     L26:
 21205  005554  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;mdm_gsm_gprs.c: 842: }
 21209                           ;mdm_gsm_gprs.c: 844: UartMessage[9] = '\r';
 21210  005556  0E0D               	movlw	13
 21211  005558  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21212                           
 21213                           ;mdm_gsm_gprs.c: 845: UartMessage[10] = (0);
 21214  00555A  0E00               	movlw	0
 21215  00555C  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21216                           
 21217                           ; BSR set to: 0
 21218                           ;mdm_gsm_gprs.c: 848: Uart_WriteString(1, UartMessage);
 21219  00555E  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21220  005560  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21221  005562  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21222  005564  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21223  005566  0E01               	movlw	1
 21224  005568  ECE1  F02C         	call	_Uart_WriteString
 21225  00556C  0012               	return		;funcret
 21226  00556E                     __end_of_Mdm_SetSmsFormat:
 21227                           	opt stack 0
 21228                           tosu	equ	0xFFF
 21229                           tosh	equ	0xFFE
 21230                           tosl	equ	0xFFD
 21231                           pclath	equ	0xFFA
 21232                           tblptru	equ	0xFF8
 21233                           tblptrh	equ	0xFF7
 21234                           tblptrl	equ	0xFF6
 21235                           tablat	equ	0xFF5
 21236                           prodh	equ	0xFF4
 21237                           prodl	equ	0xFF3
 21238                           intcon	equ	0xFF2
 21239                           intcon2	equ	0xFF1
 21240                           intcon3	equ	0xFF0
 21241                           indf0	equ	0xFEF
 21242                           postinc0	equ	0xFEE
 21243                           plusw0	equ	0xFEB
 21244                           fsr0h	equ	0xFEA
 21245                           fsr0l	equ	0xFE9
 21246                           wreg	equ	0xFE8
 21247                           indf1	equ	0xFE7
 21248                           postinc1	equ	0xFE6
 21249                           postdec1	equ	0xFE5
 21250                           plusw1	equ	0xFE3
 21251                           fsr1h	equ	0xFE2
 21252                           fsr1l	equ	0xFE1
 21253                           indf2	equ	0xFDF
 21254                           postinc2	equ	0xFDE
 21255                           postdec2	equ	0xFDD
 21256                           plusw2	equ	0xFDB
 21257                           fsr2h	equ	0xFDA
 21258                           fsr2l	equ	0xFD9
 21259                           status	equ	0xFD8
 21260                           
 21261 ;; *************** function _blinkForSeconds *****************
 21262 ;; Defined at:
 21263 ;;		line 142 in file "../Source/c/04_App/app.c"
 21264 ;; Parameters:    Size  Location     Type
 21265 ;;  seconds         1    wreg     unsigned char 
 21266 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 21267 ;;		 -> MyApp_Task@blickTicks(2), 
 21268 ;; Auto vars:     Size  Location     Type
 21269 ;;  seconds         1   53[BANK0 ] unsigned char 
 21270 ;; Return value:  Size  Location     Type
 21271 ;;                  1    wreg      void 
 21272 ;; Registers used:
 21273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21274 ;; Tracked objects:
 21275 ;;		On entry : 0/0
 21276 ;;		On exit  : 0/0
 21277 ;;		Unchanged: 0/0
 21278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21282 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21283 ;;Total ram usage:        3 bytes
 21284 ;; Hardware stack levels used:    1
 21285 ;; Hardware stack levels required when called:   13
 21286 ;; This function calls:
 21287 ;;		_Led_SetLedStatus
 21288 ;;		_secondsAppTimer
 21289 ;; This function is called by:
 21290 ;;		_MyApp_Task
 21291 ;; This function uses a non-reentrant model
 21292 ;;
 21293                           
 21294                           	psect	text96
 21295  005A76                     __ptext96:
 21296                           	opt stack 0
 21297  005A76                     _blinkForSeconds:
 21298                           	opt stack 14
 21299                           
 21300                           ;incstack = 0
 21301                           ;blinkForSeconds@seconds stored from wreg
 21302  005A76  0100               	movlb	0	; () banked
 21303  005A78  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 21304                           
 21305                           ;app.c: 144: if (secondsAppTimer(seconds, blickTicks, 0))
 21306  005A7A  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 21307  005A7E  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 21308  005A82  0E00               	movlw	0
 21309  005A84  0100               	movlb	0	; () banked
 21310  005A86  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21311  005A88  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 21312  005A8A  EC07  F022         	call	_secondsAppTimer
 21313  005A8E  0900               	iorlw	0
 21314  005A90  B4D8               	btfsc	status,2,c
 21315  005A92  D007               	goto	l2549
 21316                           
 21317                           ;app.c: 145: {
 21318                           ;app.c: 146: Led_SetLedStatus(1u, LED_STS_ON);
 21319  005A94  0E01               	movlw	1
 21320  005A96  0100               	movlb	0	; () banked
 21321  005A98  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21322  005A9A  0E01               	movlw	1
 21323  005A9C  EC24  F02E         	call	_Led_SetLedStatus
 21324                           
 21325                           ;app.c: 147: }
 21326  005AA0  0012               	return	
 21327  005AA2                     l2549:
 21328                           
 21329                           ;app.c: 148: else
 21330                           ;app.c: 149: {
 21331                           ;app.c: 150: Led_SetLedStatus(1u, LED_STS_BLINK);
 21332  005AA2  0E03               	movlw	3
 21333  005AA4  0100               	movlb	0	; () banked
 21334  005AA6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21335  005AA8  0E01               	movlw	1
 21336  005AAA  EC24  F02E         	call	_Led_SetLedStatus
 21337  005AAE  0012               	return	
 21338  005AB0                     __end_of_blinkForSeconds:
 21339                           	opt stack 0
 21340                           tosu	equ	0xFFF
 21341                           tosh	equ	0xFFE
 21342                           tosl	equ	0xFFD
 21343                           pclath	equ	0xFFA
 21344                           tblptru	equ	0xFF8
 21345                           tblptrh	equ	0xFF7
 21346                           tblptrl	equ	0xFF6
 21347                           tablat	equ	0xFF5
 21348                           prodh	equ	0xFF4
 21349                           prodl	equ	0xFF3
 21350                           intcon	equ	0xFF2
 21351                           intcon2	equ	0xFF1
 21352                           intcon3	equ	0xFF0
 21353                           indf0	equ	0xFEF
 21354                           postinc0	equ	0xFEE
 21355                           plusw0	equ	0xFEB
 21356                           fsr0h	equ	0xFEA
 21357                           fsr0l	equ	0xFE9
 21358                           wreg	equ	0xFE8
 21359                           indf1	equ	0xFE7
 21360                           postinc1	equ	0xFE6
 21361                           postdec1	equ	0xFE5
 21362                           plusw1	equ	0xFE3
 21363                           fsr1h	equ	0xFE2
 21364                           fsr1l	equ	0xFE1
 21365                           indf2	equ	0xFDF
 21366                           postinc2	equ	0xFDE
 21367                           postdec2	equ	0xFDD
 21368                           plusw2	equ	0xFDB
 21369                           fsr2h	equ	0xFDA
 21370                           fsr2l	equ	0xFD9
 21371                           status	equ	0xFD8
 21372                           
 21373 ;; *************** function _secondsAppTimer *****************
 21374 ;; Defined at:
 21375 ;;		line 85 in file "../Source/c/04_App/app.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;  seconds         1    wreg     unsigned char 
 21378 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21379 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21380 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21381 ;; Auto vars:     Size  Location     Type
 21382 ;;  seconds         1   47[BANK0 ] unsigned char 
 21383 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21384 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21385 ;; Return value:  Size  Location     Type
 21386 ;;                  1    wreg      unsigned char 
 21387 ;; Registers used:
 21388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21389 ;; Tracked objects:
 21390 ;;		On entry : 0/0
 21391 ;;		On exit  : 0/0
 21392 ;;		Unchanged: 0/0
 21393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21394 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21398 ;;Total ram usage:        9 bytes
 21399 ;; Hardware stack levels used:    1
 21400 ;; Hardware stack levels required when called:   12
 21401 ;; This function calls:
 21402 ;;		___lwdiv
 21403 ;;		___wmul
 21404 ;; This function is called by:
 21405 ;;		_initGprsModem
 21406 ;;		_blinkForSeconds
 21407 ;; This function uses a non-reentrant model
 21408 ;;
 21409                           
 21410                           	psect	text97
 21411  00440E                     __ptext97:
 21412                           	opt stack 0
 21413  00440E                     _secondsAppTimer:
 21414                           	opt stack 14
 21415                           
 21416                           ;incstack = 0
 21417                           ;secondsAppTimer@seconds stored from wreg
 21418  00440E  0100               	movlb	0	; () banked
 21419  004410  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21420                           
 21421                           ;app.c: 87: bool isExpired = 1;
 21422  004412  0E01               	movlw	1
 21423  004414  0100               	movlb	0	; () banked
 21424  004416  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21428  004418  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21429  00441C  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21430  00441E  0E03               	movlw	3
 21431  004420  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21432  004422  0EE8               	movlw	232
 21433  004424  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21434  004426  ECAA  F02E         	call	___wmul	;wreg free
 21435  00442A  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21436  00442E  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21437  004432  0E00               	movlw	0
 21438  004434  0100               	movlb	0	; () banked
 21439  004436  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21440  004438  0E64               	movlw	100
 21441  00443A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21442  00443C  ECEB  F029         	call	___lwdiv	;wreg free
 21443  004440  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21444  004444  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21445                           
 21446                           ;app.c: 90: if (*counter < destinationTicks)
 21447  004448  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21448  00444C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21449  004450  0100               	movlb	0	; () banked
 21450  004452  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21451  004454  5CDE               	subwf	postinc2,w,c
 21452  004456  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21453  004458  58DE               	subwfb	postinc2,w,c
 21454  00445A  B0D8               	btfsc	status,0,c
 21455  00445C  D009               	goto	l2524
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;app.c: 91: {
 21459                           ;app.c: 92: *counter += 1;
 21460  00445E  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21461  004462  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21462  004466  2ADE               	incf	postinc2,f,c
 21463  004468  0E00               	movlw	0
 21464  00446A  22DD               	addwfc	postdec2,f,c
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;app.c: 93: isExpired = 0;
 21468  00446C  0E00               	movlw	0
 21469  00446E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21470  004470                     l2524:
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;app.c: 94: }
 21474                           ;app.c: 95: if (*counter == destinationTicks)
 21475                           
 21476                           ; BSR set to: 0
 21477  004470  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21478  004474  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21479  004478  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21480  00447A  18DE               	xorwf	postinc2,w,c
 21481  00447C  E117               	bnz	l12943
 21482  00447E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21483  004480  18DE               	xorwf	postinc2,w,c
 21484  004482  A4D8               	btfss	status,2,c
 21485  004484  D013               	goto	l2527
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;app.c: 96: {
 21489                           ;app.c: 97: if (isCyclic)
 21490  004486  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21491  004488  B4D8               	btfsc	status,2,c
 21492  00448A  D008               	goto	l2526
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;app.c: 98: {
 21496                           ;app.c: 99: *counter = 0;
 21497  00448C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21498  004490  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21499  004494  0E00               	movlw	0
 21500  004496  6EDE               	movwf	postinc2,c
 21501  004498  0E00               	movlw	0
 21502  00449A  D007               	goto	L27
 21503  00449C                     l2526:
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;app.c: 101: else
 21507                           ;app.c: 102: {
 21508                           ;app.c: 103: *counter = 0xFFFF;
 21509                           
 21510                           ; BSR set to: 0
 21511  00449C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21512  0044A0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21513  0044A4  0EFF               	movlw	255
 21514  0044A6  6EDE               	movwf	postinc2,c
 21515  0044A8  0EFF               	movlw	255
 21516  0044AA                     L27:
 21517  0044AA  6EDD               	movwf	postdec2,c
 21518  0044AC                     l2527:
 21519  0044AC                     l12943:
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;app.c: 104: }
 21523                           ;app.c: 105: }
 21524                           ;app.c: 106: return isExpired;
 21525  0044AC  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21526  0044AE  0012               	return	
 21527  0044B0                     __end_of_secondsAppTimer:
 21528                           	opt stack 0
 21529                           tosu	equ	0xFFF
 21530                           tosh	equ	0xFFE
 21531                           tosl	equ	0xFFD
 21532                           pclath	equ	0xFFA
 21533                           tblptru	equ	0xFF8
 21534                           tblptrh	equ	0xFF7
 21535                           tblptrl	equ	0xFF6
 21536                           tablat	equ	0xFF5
 21537                           prodh	equ	0xFF4
 21538                           prodl	equ	0xFF3
 21539                           intcon	equ	0xFF2
 21540                           intcon2	equ	0xFF1
 21541                           intcon3	equ	0xFF0
 21542                           indf0	equ	0xFEF
 21543                           postinc0	equ	0xFEE
 21544                           plusw0	equ	0xFEB
 21545                           fsr0h	equ	0xFEA
 21546                           fsr0l	equ	0xFE9
 21547                           wreg	equ	0xFE8
 21548                           indf1	equ	0xFE7
 21549                           postinc1	equ	0xFE6
 21550                           postdec1	equ	0xFE5
 21551                           plusw1	equ	0xFE3
 21552                           fsr1h	equ	0xFE2
 21553                           fsr1l	equ	0xFE1
 21554                           indf2	equ	0xFDF
 21555                           postinc2	equ	0xFDE
 21556                           postdec2	equ	0xFDD
 21557                           plusw2	equ	0xFDB
 21558                           fsr2h	equ	0xFDA
 21559                           fsr2l	equ	0xFD9
 21560                           status	equ	0xFD8
 21561                           
 21562 ;; *************** function _Mdm_RequestSmsData *****************
 21563 ;; Defined at:
 21564 ;;		line 859 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21565 ;; Parameters:    Size  Location     Type
 21566 ;;		None
 21567 ;; Auto vars:     Size  Location     Type
 21568 ;;		None
 21569 ;; Return value:  Size  Location     Type
 21570 ;;                  1    wreg      void 
 21571 ;; Registers used:
 21572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21573 ;; Tracked objects:
 21574 ;;		On entry : 0/0
 21575 ;;		On exit  : 0/0
 21576 ;;		Unchanged: 0/0
 21577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21582 ;;Total ram usage:        0 bytes
 21583 ;; Hardware stack levels used:    1
 21584 ;; Hardware stack levels required when called:   12
 21585 ;; This function calls:
 21586 ;;		_GenerateEvt
 21587 ;; This function is called by:
 21588 ;;		_MyApp_Task
 21589 ;; This function uses a non-reentrant model
 21590 ;;
 21591                           
 21592                           	psect	text98
 21593  0060F8                     __ptext98:
 21594                           	opt stack 0
 21595  0060F8                     _Mdm_RequestSmsData:
 21596                           	opt stack 15
 21597                           
 21598                           ;mdm_gsm_gprs.c: 862: GenerateEvt(&GetSmsText);
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;incstack = 0
 21602  0060F8  0E38               	movlw	low _GetSmsText
 21603  0060FA  0100               	movlb	0	; () banked
 21604  0060FC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21605  0060FE  0E00               	movlw	high _GetSmsText
 21606  006100  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21607  006102  EC18  F030         	call	_GenerateEvt	;wreg free
 21608  006106  0012               	return		;funcret
 21609  006108                     __end_of_Mdm_RequestSmsData:
 21610                           	opt stack 0
 21611                           tosu	equ	0xFFF
 21612                           tosh	equ	0xFFE
 21613                           tosl	equ	0xFFD
 21614                           pclath	equ	0xFFA
 21615                           tblptru	equ	0xFF8
 21616                           tblptrh	equ	0xFF7
 21617                           tblptrl	equ	0xFF6
 21618                           tablat	equ	0xFF5
 21619                           prodh	equ	0xFF4
 21620                           prodl	equ	0xFF3
 21621                           intcon	equ	0xFF2
 21622                           intcon2	equ	0xFF1
 21623                           intcon3	equ	0xFF0
 21624                           indf0	equ	0xFEF
 21625                           postinc0	equ	0xFEE
 21626                           plusw0	equ	0xFEB
 21627                           fsr0h	equ	0xFEA
 21628                           fsr0l	equ	0xFE9
 21629                           wreg	equ	0xFE8
 21630                           indf1	equ	0xFE7
 21631                           postinc1	equ	0xFE6
 21632                           postdec1	equ	0xFE5
 21633                           plusw1	equ	0xFE3
 21634                           fsr1h	equ	0xFE2
 21635                           fsr1l	equ	0xFE1
 21636                           indf2	equ	0xFDF
 21637                           postinc2	equ	0xFDE
 21638                           postdec2	equ	0xFDD
 21639                           plusw2	equ	0xFDB
 21640                           fsr2h	equ	0xFDA
 21641                           fsr2l	equ	0xFD9
 21642                           status	equ	0xFD8
 21643                           
 21644 ;; *************** function _Mdm_IsSmsReceived *****************
 21645 ;; Defined at:
 21646 ;;		line 924 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;		None
 21649 ;; Auto vars:     Size  Location     Type
 21650 ;;  Ret             1   33[BANK0 ] enum E8914
 21651 ;; Return value:  Size  Location     Type
 21652 ;;                  1    wreg      enum E8914
 21653 ;; Registers used:
 21654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21655 ;; Tracked objects:
 21656 ;;		On entry : 0/0
 21657 ;;		On exit  : 0/0
 21658 ;;		Unchanged: 0/0
 21659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21664 ;;Total ram usage:        1 bytes
 21665 ;; Hardware stack levels used:    1
 21666 ;; Hardware stack levels required when called:   12
 21667 ;; This function calls:
 21668 ;;		_ReceiveEvt
 21669 ;; This function is called by:
 21670 ;;		_MyApp_Task
 21671 ;; This function uses a non-reentrant model
 21672 ;;
 21673                           
 21674                           	psect	text99
 21675  005DC6                     __ptext99:
 21676                           	opt stack 0
 21677  005DC6                     _Mdm_IsSmsReceived:
 21678                           	opt stack 15
 21679                           
 21680                           ;mdm_gsm_gprs.c: 926: SmsRxStsType Ret = SmsNotReceived;
 21681                           
 21682                           ;incstack = 0
 21683  005DC6  0E00               	movlw	0
 21684  005DC8  0100               	movlb	0	; () banked
 21685  005DCA  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21686                           
 21687                           ; BSR set to: 0
 21688                           ;mdm_gsm_gprs.c: 929: if (ReceiveEvt(&SmsEvent))
 21689  005DCC  0E39               	movlw	low _SmsEvent
 21690  005DCE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21691  005DD0  0E00               	movlw	high _SmsEvent
 21692  005DD2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21693  005DD4  EC53  F02E         	call	_ReceiveEvt	;wreg free
 21694  005DD8  0900               	iorlw	0
 21695  005DDA  B4D8               	btfsc	status,2,c
 21696  005DDC  D003               	goto	l1128
 21697                           
 21698                           ;mdm_gsm_gprs.c: 930: {
 21699                           ;mdm_gsm_gprs.c: 931: Ret = SmsReceived;
 21700  005DDE  0E01               	movlw	1
 21701  005DE0  0100               	movlb	0	; () banked
 21702  005DE2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21703  005DE4                     l1128:
 21704                           
 21705                           ;mdm_gsm_gprs.c: 932: }
 21706                           ;mdm_gsm_gprs.c: 934: return Ret;
 21707  005DE4  0100               	movlb	0	; () banked
 21708  005DE6  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21709  005DE8  0012               	return	
 21710  005DEA                     __end_of_Mdm_IsSmsReceived:
 21711                           	opt stack 0
 21712                           tosu	equ	0xFFF
 21713                           tosh	equ	0xFFE
 21714                           tosl	equ	0xFFD
 21715                           pclath	equ	0xFFA
 21716                           tblptru	equ	0xFF8
 21717                           tblptrh	equ	0xFF7
 21718                           tblptrl	equ	0xFF6
 21719                           tablat	equ	0xFF5
 21720                           prodh	equ	0xFF4
 21721                           prodl	equ	0xFF3
 21722                           intcon	equ	0xFF2
 21723                           intcon2	equ	0xFF1
 21724                           intcon3	equ	0xFF0
 21725                           indf0	equ	0xFEF
 21726                           postinc0	equ	0xFEE
 21727                           plusw0	equ	0xFEB
 21728                           fsr0h	equ	0xFEA
 21729                           fsr0l	equ	0xFE9
 21730                           wreg	equ	0xFE8
 21731                           indf1	equ	0xFE7
 21732                           postinc1	equ	0xFE6
 21733                           postdec1	equ	0xFE5
 21734                           plusw1	equ	0xFE3
 21735                           fsr1h	equ	0xFE2
 21736                           fsr1l	equ	0xFE1
 21737                           indf2	equ	0xFDF
 21738                           postinc2	equ	0xFDE
 21739                           postdec2	equ	0xFDD
 21740                           plusw2	equ	0xFDB
 21741                           fsr2h	equ	0xFDA
 21742                           fsr2l	equ	0xFD9
 21743                           status	equ	0xFD8
 21744                           
 21745 ;; *************** function _Mdm_IsRinging *****************
 21746 ;; Defined at:
 21747 ;;		line 1007 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21748 ;; Parameters:    Size  Location     Type
 21749 ;;		None
 21750 ;; Auto vars:     Size  Location     Type
 21751 ;;  Ret             1   33[BANK0 ] enum E8910
 21752 ;; Return value:  Size  Location     Type
 21753 ;;                  1    wreg      enum E8910
 21754 ;; Registers used:
 21755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21756 ;; Tracked objects:
 21757 ;;		On entry : 0/0
 21758 ;;		On exit  : 0/0
 21759 ;;		Unchanged: 0/0
 21760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21765 ;;Total ram usage:        1 bytes
 21766 ;; Hardware stack levels used:    1
 21767 ;; Hardware stack levels required when called:   12
 21768 ;; This function calls:
 21769 ;;		_ReceiveEvt
 21770 ;; This function is called by:
 21771 ;;		_MyApp_Task
 21772 ;; This function uses a non-reentrant model
 21773 ;;
 21774                           
 21775                           	psect	text100
 21776  005DEA                     __ptext100:
 21777                           	opt stack 0
 21778  005DEA                     _Mdm_IsRinging:
 21779                           	opt stack 15
 21780                           
 21781                           ;mdm_gsm_gprs.c: 1009: RingStsType Ret = PhoneNotRinging;
 21782                           
 21783                           ; BSR set to: 0
 21784                           ;incstack = 0
 21785  005DEA  0E00               	movlw	0
 21786  005DEC  0100               	movlb	0	; () banked
 21787  005DEE  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;mdm_gsm_gprs.c: 1012: if (ReceiveEvt(&RingEvent))
 21791  005DF0  0EDD               	movlw	low _RingEvent
 21792  005DF2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21793  005DF4  0E00               	movlw	high _RingEvent
 21794  005DF6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21795  005DF8  EC53  F02E         	call	_ReceiveEvt	;wreg free
 21796  005DFC  0900               	iorlw	0
 21797  005DFE  B4D8               	btfsc	status,2,c
 21798  005E00  D003               	goto	l1144
 21799                           
 21800                           ;mdm_gsm_gprs.c: 1013: {
 21801                           ;mdm_gsm_gprs.c: 1014: Ret = PhoneRinging;
 21802  005E02  0E01               	movlw	1
 21803  005E04  0100               	movlb	0	; () banked
 21804  005E06  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21805  005E08                     l1144:
 21806                           
 21807                           ;mdm_gsm_gprs.c: 1015: }
 21808                           ;mdm_gsm_gprs.c: 1017: return Ret;
 21809  005E08  0100               	movlb	0	; () banked
 21810  005E0A  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21811  005E0C  0012               	return	
 21812  005E0E                     __end_of_Mdm_IsRinging:
 21813                           	opt stack 0
 21814                           tosu	equ	0xFFF
 21815                           tosh	equ	0xFFE
 21816                           tosl	equ	0xFFD
 21817                           pclath	equ	0xFFA
 21818                           tblptru	equ	0xFF8
 21819                           tblptrh	equ	0xFF7
 21820                           tblptrl	equ	0xFF6
 21821                           tablat	equ	0xFF5
 21822                           prodh	equ	0xFF4
 21823                           prodl	equ	0xFF3
 21824                           intcon	equ	0xFF2
 21825                           intcon2	equ	0xFF1
 21826                           intcon3	equ	0xFF0
 21827                           indf0	equ	0xFEF
 21828                           postinc0	equ	0xFEE
 21829                           plusw0	equ	0xFEB
 21830                           fsr0h	equ	0xFEA
 21831                           fsr0l	equ	0xFE9
 21832                           wreg	equ	0xFE8
 21833                           indf1	equ	0xFE7
 21834                           postinc1	equ	0xFE6
 21835                           postdec1	equ	0xFE5
 21836                           plusw1	equ	0xFE3
 21837                           fsr1h	equ	0xFE2
 21838                           fsr1l	equ	0xFE1
 21839                           indf2	equ	0xFDF
 21840                           postinc2	equ	0xFDE
 21841                           postdec2	equ	0xFDD
 21842                           plusw2	equ	0xFDB
 21843                           fsr2h	equ	0xFDA
 21844                           fsr2l	equ	0xFD9
 21845                           status	equ	0xFD8
 21846                           
 21847 ;; *************** function _Mdm_GetSmsData *****************
 21848 ;; Defined at:
 21849 ;;		line 874 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21852 ;;		 -> MyApp_Task@smsText(50), 
 21853 ;;  MessageHeade    2   41[BANK0 ] PTR unsigned char 
 21854 ;;		 -> MyApp_Task@smsNumber(14), 
 21855 ;; Auto vars:     Size  Location     Type
 21856 ;;  GetSmsStatus    1   43[BANK0 ] enum E8906
 21857 ;; Return value:  Size  Location     Type
 21858 ;;                  1    wreg      enum E8906
 21859 ;; Registers used:
 21860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21861 ;; Tracked objects:
 21862 ;;		On entry : 0/0
 21863 ;;		On exit  : 0/0
 21864 ;;		Unchanged: 0/0
 21865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21866 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21869 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21870 ;;Total ram usage:        5 bytes
 21871 ;; Hardware stack levels used:    1
 21872 ;; Hardware stack levels required when called:   12
 21873 ;; This function calls:
 21874 ;;		_ReceiveEvt
 21875 ;;		_StringCopy
 21876 ;; This function is called by:
 21877 ;;		_MyApp_Task
 21878 ;; This function uses a non-reentrant model
 21879 ;;
 21880                           
 21881                           	psect	text101
 21882  004C90                     __ptext101:
 21883                           	opt stack 0
 21884  004C90                     _Mdm_GetSmsData:
 21885                           	opt stack 15
 21886                           
 21887                           ;mdm_gsm_gprs.c: 876: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;incstack = 0
 21891  004C90  0E00               	movlw	0
 21892  004C92  0100               	movlb	0	; () banked
 21893  004C94  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;mdm_gsm_gprs.c: 879: if (ReceiveEvt(&SmsTxtReady))
 21897  004C96  0E37               	movlw	low _SmsTxtReady
 21898  004C98  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21899  004C9A  0E00               	movlw	high _SmsTxtReady
 21900  004C9C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21901  004C9E  EC53  F02E         	call	_ReceiveEvt	;wreg free
 21902  004CA2  0900               	iorlw	0
 21903  004CA4  B4D8               	btfsc	status,2,c
 21904  004CA6  D02D               	goto	l1121
 21905                           
 21906                           ;mdm_gsm_gprs.c: 880: {
 21907                           ;mdm_gsm_gprs.c: 882: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen +
      +                           1);
 21908  004CA8  0E50               	movlw	low (_Mdm_SmsRx+80)
 21909  004CAA  0100               	movlb	0	; () banked
 21910  004CAC  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21911  004CAE  0E07               	movlw	high (_Mdm_SmsRx+80)
 21912  004CB0  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21913  004CB2  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 21914  004CB6  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 21915  004CBA  0E01               	movlw	1
 21916  004CBC  0107               	movlb	7	; () banked
 21917  004CBE  2583               	addwf	(_Mdm_SmsRx+131)& (0+255),w,b
 21918  004CC0  0100               	movlb	0	; () banked
 21919  004CC2  6F81               	movwf	StringCopy@Len& (0+255),b
 21920  004CC4  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21921  004CC6  0E00               	movlw	0
 21922  004CC8  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 21923  004CCA  EC00  F028         	call	_StringCopy	;wreg free
 21924                           
 21925                           ;mdm_gsm_gprs.c: 883: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, MessageHeader,14);
 21926  004CCE  0E15               	movlw	low (_Mdm_SmsRx+21)
 21927  004CD0  0100               	movlb	0	; () banked
 21928  004CD2  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21929  004CD4  0E07               	movlw	high (_Mdm_SmsRx+21)
 21930  004CD6  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21931  004CD8  C089  F07F         	movff	Mdm_GetSmsData@MessageHeader,StringCopy@DestStr
 21932  004CDC  C08A  F080         	movff	Mdm_GetSmsData@MessageHeader+1,StringCopy@DestStr+1
 21933  004CE0  0E00               	movlw	0
 21934  004CE2  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21935  004CE4  0E0E               	movlw	14
 21936  004CE6  6F81               	movwf	StringCopy@Len& (0+255),b
 21937  004CE8  EC00  F028         	call	_StringCopy	;wreg free
 21938                           
 21939                           ;mdm_gsm_gprs.c: 884: MessageHeader[13] = '\0';
 21940  004CEC  0100               	movlb	0	; () banked
 21941  004CEE  EE20 F00D          	lfsr	2,13
 21942  004CF2  5189               	movf	Mdm_GetSmsData@MessageHeader& (0+255),w,b
 21943  004CF4  26D9               	addwf	fsr2l,f,c
 21944  004CF6  518A               	movf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),w,b
 21945  004CF8  22DA               	addwfc	fsr2h,f,c
 21946  004CFA  0E00               	movlw	0
 21947  004CFC  6EDF               	movwf	indf2,c
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;mdm_gsm_gprs.c: 886: GetSmsStatus = SmsDataReady;
 21951  004CFE  0E01               	movlw	1
 21952  004D00  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21953  004D02                     l1121:
 21954                           
 21955                           ;mdm_gsm_gprs.c: 887: }
 21956                           ;mdm_gsm_gprs.c: 890: return GetSmsStatus;
 21957                           
 21958                           ; BSR set to: 0
 21959  004D02  0100               	movlb	0	; () banked
 21960  004D04  518B               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 21961  004D06  0012               	return	
 21962  004D08                     __end_of_Mdm_GetSmsData:
 21963                           	opt stack 0
 21964                           tosu	equ	0xFFF
 21965                           tosh	equ	0xFFE
 21966                           tosl	equ	0xFFD
 21967                           pclath	equ	0xFFA
 21968                           tblptru	equ	0xFF8
 21969                           tblptrh	equ	0xFF7
 21970                           tblptrl	equ	0xFF6
 21971                           tablat	equ	0xFF5
 21972                           prodh	equ	0xFF4
 21973                           prodl	equ	0xFF3
 21974                           intcon	equ	0xFF2
 21975                           intcon2	equ	0xFF1
 21976                           intcon3	equ	0xFF0
 21977                           indf0	equ	0xFEF
 21978                           postinc0	equ	0xFEE
 21979                           plusw0	equ	0xFEB
 21980                           fsr0h	equ	0xFEA
 21981                           fsr0l	equ	0xFE9
 21982                           wreg	equ	0xFE8
 21983                           indf1	equ	0xFE7
 21984                           postinc1	equ	0xFE6
 21985                           postdec1	equ	0xFE5
 21986                           plusw1	equ	0xFE3
 21987                           fsr1h	equ	0xFE2
 21988                           fsr1l	equ	0xFE1
 21989                           indf2	equ	0xFDF
 21990                           postinc2	equ	0xFDE
 21991                           postdec2	equ	0xFDD
 21992                           plusw2	equ	0xFDB
 21993                           fsr2h	equ	0xFDA
 21994                           fsr2l	equ	0xFD9
 21995                           status	equ	0xFD8
 21996                           
 21997 ;; *************** function _Led_SetLedBlinkTime *****************
 21998 ;; Defined at:
 21999 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 22000 ;; Parameters:    Size  Location     Type
 22001 ;;  Led             1    wreg     unsigned char 
 22002 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22003 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22004 ;; Auto vars:     Size  Location     Type
 22005 ;;  Led             1   33[BANK0 ] unsigned char 
 22006 ;; Return value:  Size  Location     Type
 22007 ;;                  1    wreg      void 
 22008 ;; Registers used:
 22009 ;;		wreg, status,2, status,0
 22010 ;; Tracked objects:
 22011 ;;		On entry : 0/0
 22012 ;;		On exit  : 0/0
 22013 ;;		Unchanged: 0/0
 22014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22018 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22019 ;;Total ram usage:        5 bytes
 22020 ;; Hardware stack levels used:    1
 22021 ;; Hardware stack levels required when called:   11
 22022 ;; This function calls:
 22023 ;;		Nothing
 22024 ;; This function is called by:
 22025 ;;		_MyApp_Task
 22026 ;; This function uses a non-reentrant model
 22027 ;;
 22028                           
 22029                           	psect	text102
 22030  005382                     __ptext102:
 22031                           	opt stack 0
 22032  005382                     _Led_SetLedBlinkTime:
 22033                           	opt stack 16
 22034                           
 22035                           ; BSR set to: 0
 22036                           ;incstack = 0
 22037                           ;Led_SetLedBlinkTime@Led stored from wreg
 22038  005382  0100               	movlb	0	; () banked
 22039  005384  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 22040                           
 22041                           ;led.c: 374: switch (Led)
 22042  005386  D01B               	goto	l2101
 22043  005388                     l2102:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 22047  005388  C07D  F374         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 22048  00538C  C07E  F375         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 22049                           
 22050                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 22051  005390  C07F  F376         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 22052  005394  C080  F377         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 22053                           
 22054                           ;led.c: 379: break;
 22055  005398  0012               	return	
 22056  00539A                     l2104:
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 22060  00539A  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22061  00539E  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22062                           
 22063                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 22064  0053A2  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22065  0053A6  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22066                           
 22067                           ;led.c: 384: break;
 22068  0053AA  0012               	return	
 22069  0053AC                     l2105:
 22070                           
 22071                           ; BSR set to: 0
 22072                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 22073  0053AC  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22074  0053B0  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22075                           
 22076                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 22077  0053B4  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22078  0053B8  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;led.c: 393: }
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;led.c: 392: break;
 22085                           
 22086                           ;led.c: 391: default:
 22087                           
 22088                           ;led.c: 389: break;
 22089  0053BC  0012               	return	
 22090  0053BE                     l2101:
 22091                           
 22092                           ; BSR set to: 0
 22093  0053BE  0100               	movlb	0	; () banked
 22094  0053C0  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 22095                           
 22096                           ; Switch size 1, requested type "space"
 22097                           ; Number of cases is 3, Range of values is 1 to 3
 22098                           ; switch strategies available:
 22099                           ; Name         Instructions Cycles
 22100                           ; simple_byte           10     6 (average)
 22101                           ;	Chosen strategy is simple_byte
 22102  0053C2  0A01               	xorlw	1	; case 1
 22103  0053C4  B4D8               	btfsc	status,2,c
 22104  0053C6  D7E0               	goto	l2102
 22105  0053C8  0A03               	xorlw	3	; case 2
 22106  0053CA  B4D8               	btfsc	status,2,c
 22107  0053CC  D7E6               	goto	l2104
 22108  0053CE  0A01               	xorlw	1	; case 3
 22109  0053D0  A4D8               	btfss	status,2,c
 22110  0053D2  0012               	return	
 22111  0053D4  D7EB               	goto	l2105
 22112  0053D6                     __end_of_Led_SetLedBlinkTime:
 22113                           	opt stack 0
 22114                           tosu	equ	0xFFF
 22115                           tosh	equ	0xFFE
 22116                           tosl	equ	0xFFD
 22117                           pclath	equ	0xFFA
 22118                           tblptru	equ	0xFF8
 22119                           tblptrh	equ	0xFF7
 22120                           tblptrl	equ	0xFF6
 22121                           tablat	equ	0xFF5
 22122                           prodh	equ	0xFF4
 22123                           prodl	equ	0xFF3
 22124                           intcon	equ	0xFF2
 22125                           intcon2	equ	0xFF1
 22126                           intcon3	equ	0xFF0
 22127                           indf0	equ	0xFEF
 22128                           postinc0	equ	0xFEE
 22129                           plusw0	equ	0xFEB
 22130                           fsr0h	equ	0xFEA
 22131                           fsr0l	equ	0xFE9
 22132                           wreg	equ	0xFE8
 22133                           indf1	equ	0xFE7
 22134                           postinc1	equ	0xFE6
 22135                           postdec1	equ	0xFE5
 22136                           plusw1	equ	0xFE3
 22137                           fsr1h	equ	0xFE2
 22138                           fsr1l	equ	0xFE1
 22139                           indf2	equ	0xFDF
 22140                           postinc2	equ	0xFDE
 22141                           postdec2	equ	0xFDD
 22142                           plusw2	equ	0xFDB
 22143                           fsr2h	equ	0xFDA
 22144                           fsr2l	equ	0xFD9
 22145                           status	equ	0xFD8
 22146                           
 22147 ;; *************** function _UartSetConfig *****************
 22148 ;; Defined at:
 22149 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;		None
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;		None
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  1    wreg      void 
 22156 ;; Registers used:
 22157 ;;		wreg, status,2
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22167 ;;Total ram usage:        0 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:   11
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_Mdm_MainTask
 22174 ;; This function uses a non-reentrant model
 22175 ;;
 22176                           
 22177                           	psect	text103
 22178  00517A                     __ptext103:
 22179                           	opt stack 0
 22180  00517A                     _UartSetConfig:
 22181                           	opt stack 16
 22182                           
 22183                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 22184                           
 22185                           ; BSR set to: 0
 22186                           ;incstack = 0
 22187  00517A  0E01               	movlw	1
 22188  00517C  0103               	movlb	3	; () banked
 22189  00517E  6F34               	movwf	_UartConfig& (0+255),b
 22190                           
 22191                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 22192  005180  0E00               	movlw	0
 22193  005182  6F35               	movwf	(_UartConfig+1)& (0+255),b
 22194                           
 22195                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 22196  005184  0E00               	movlw	0
 22197  005186  6F36               	movwf	(_UartConfig+2)& (0+255),b
 22198                           
 22199                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 22200  005188  0E00               	movlw	0
 22201  00518A  6F37               	movwf	(_UartConfig+3)& (0+255),b
 22202                           
 22203                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 22204  00518C  0E00               	movlw	0
 22205  00518E  6F38               	movwf	(_UartConfig+4)& (0+255),b
 22206                           
 22207                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 22208  005190  0E00               	movlw	0
 22209  005192  6F39               	movwf	(_UartConfig+5)& (0+255),b
 22210                           
 22211                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 22212  005194  0E01               	movlw	1
 22213  005196  6F3A               	movwf	(_UartConfig+6)& (0+255),b
 22214                           
 22215                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 22216  005198  0E01               	movlw	1
 22217  00519A  6F3B               	movwf	(_UartConfig+7)& (0+255),b
 22218                           
 22219                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 22220  00519C  0E00               	movlw	0
 22221  00519E  6F3C               	movwf	(_UartConfig+8)& (0+255),b
 22222                           
 22223                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 22224  0051A0  0E00               	movlw	0
 22225  0051A2  6F3D               	movwf	(_UartConfig+9)& (0+255),b
 22226                           
 22227                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 22228  0051A4  0E00               	movlw	0
 22229  0051A6  6F3E               	movwf	(_UartConfig+10)& (0+255),b
 22230                           
 22231                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22232  0051A8  0E00               	movlw	0
 22233  0051AA  6F3F               	movwf	(_UartConfig+11)& (0+255),b
 22234                           
 22235                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22236  0051AC  0E01               	movlw	1
 22237  0051AE  6F40               	movwf	(_UartConfig+12)& (0+255),b
 22238                           
 22239                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 22240  0051B0  0E00               	movlw	0
 22241  0051B2  6F41               	movwf	(_UartConfig+13)& (0+255),b
 22242  0051B4  0E6C               	movlw	108
 22243  0051B6  6F42               	movwf	(_UartConfig+14)& (0+255),b
 22244  0051B8  0EDC               	movlw	220
 22245  0051BA  6F43               	movwf	(_UartConfig+15)& (0+255),b
 22246  0051BC  0E02               	movlw	2
 22247  0051BE  6F44               	movwf	(_UartConfig+16)& (0+255),b
 22248                           
 22249                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22250  0051C0  0E80               	movlw	128
 22251  0051C2  6F45               	movwf	(_UartConfig+17)& (0+255),b
 22252  0051C4  0E25               	movlw	37
 22253  0051C6  6F46               	movwf	(_UartConfig+18)& (0+255),b
 22254  0051C8  0E00               	movlw	0
 22255  0051CA  6F47               	movwf	(_UartConfig+19)& (0+255),b
 22256  0051CC  0E00               	movlw	0
 22257  0051CE  6F48               	movwf	(_UartConfig+20)& (0+255),b
 22258                           
 22259                           ; BSR set to: 3
 22260  0051D0  0012               	return		;funcret
 22261  0051D2                     __end_of_UartSetConfig:
 22262                           	opt stack 0
 22263                           tosu	equ	0xFFF
 22264                           tosh	equ	0xFFE
 22265                           tosl	equ	0xFFD
 22266                           pclath	equ	0xFFA
 22267                           tblptru	equ	0xFF8
 22268                           tblptrh	equ	0xFF7
 22269                           tblptrl	equ	0xFF6
 22270                           tablat	equ	0xFF5
 22271                           prodh	equ	0xFF4
 22272                           prodl	equ	0xFF3
 22273                           intcon	equ	0xFF2
 22274                           intcon2	equ	0xFF1
 22275                           intcon3	equ	0xFF0
 22276                           indf0	equ	0xFEF
 22277                           postinc0	equ	0xFEE
 22278                           plusw0	equ	0xFEB
 22279                           fsr0h	equ	0xFEA
 22280                           fsr0l	equ	0xFE9
 22281                           wreg	equ	0xFE8
 22282                           indf1	equ	0xFE7
 22283                           postinc1	equ	0xFE6
 22284                           postdec1	equ	0xFE5
 22285                           plusw1	equ	0xFE3
 22286                           fsr1h	equ	0xFE2
 22287                           fsr1l	equ	0xFE1
 22288                           indf2	equ	0xFDF
 22289                           postinc2	equ	0xFDE
 22290                           postdec2	equ	0xFDD
 22291                           plusw2	equ	0xFDB
 22292                           fsr2h	equ	0xFDA
 22293                           fsr2l	equ	0xFD9
 22294                           status	equ	0xFD8
 22295                           
 22296 ;; *************** function _TurnOnModem *****************
 22297 ;; Defined at:
 22298 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;		None
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;		None
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  1    wreg      void 
 22305 ;; Registers used:
 22306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/0
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22316 ;;Total ram usage:        0 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:   12
 22319 ;; This function calls:
 22320 ;;		_GenerateEvt
 22321 ;; This function is called by:
 22322 ;;		_Mdm_MainTask
 22323 ;; This function uses a non-reentrant model
 22324 ;;
 22325                           
 22326                           	psect	text104
 22327  005656                     __ptext104:
 22328                           	opt stack 0
 22329  005656                     _TurnOnModem:
 22330                           	opt stack 15
 22331                           
 22332                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22333                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 22334                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 22335                           
 22336                           ; BSR set to: 3
 22337                           ;incstack = 0
 22338  005656  D01B               	goto	l1005
 22339  005658                     
 22340                           ;mdm_gsm_gprs.c: 380: Counter++;
 22341  005658  0103               	movlb	3	; () banked
 22342  00565A  4B2C               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22343  00565C  2B2D               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22344                           
 22345                           ; BSR set to: 3
 22346                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22347  00565E  0EB8               	movlw	184
 22348  005660  5D2C               	subwf	TurnOnModem@Counter& (0+255),w,b
 22349  005662  0E0B               	movlw	11
 22350  005664  592D               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22351  005666  A0D8               	btfss	status,0,c
 22352  005668  0012               	return	
 22353                           
 22354                           ; BSR set to: 3
 22355                           ;mdm_gsm_gprs.c: 383: {
 22356                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 22357  00566A  0E01               	movlw	1
 22358  00566C  0101               	movlb	1	; () banked
 22359  00566E  6FEF               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22360                           
 22361                           ; BSR set to: 1
 22362                           ;mdm_gsm_gprs.c: 386: }
 22363                           ;mdm_gsm_gprs.c: 387: break;
 22364  005670  0012               	return	
 22365  005672                     
 22366                           ; BSR set to: 1
 22367                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 22368                           
 22369                           ; BSR set to: 1
 22370  005672  0EDF               	movlw	low _MdmOnOffPulseRequest
 22371  005674  0100               	movlb	0	; () banked
 22372  005676  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22373  005678  0E00               	movlw	high _MdmOnOffPulseRequest
 22374  00567A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22375  00567C  EC18  F030         	call	_GenerateEvt	;wreg free
 22376                           
 22377                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 22378  005680  0E01               	movlw	1
 22379  005682  0100               	movlb	0	; () banked
 22380  005684  6FD6               	movwf	_MdmStatus& (0+255),b
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 22384  005686  0E02               	movlw	2
 22385  005688  0101               	movlb	1	; () banked
 22386  00568A  6FEF               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22387                           
 22388                           ; BSR set to: 1
 22389                           ;mdm_gsm_gprs.c: 403: }
 22390                           
 22391                           ; BSR set to: 1
 22392                           ;mdm_gsm_gprs.c: 402: break;
 22393                           
 22394                           ;mdm_gsm_gprs.c: 401: default:
 22395                           
 22396                           ; BSR set to: 1
 22397                           ;mdm_gsm_gprs.c: 399: break;
 22398                           
 22399                           ;mdm_gsm_gprs.c: 398: case Stop:
 22400                           
 22401                           ;mdm_gsm_gprs.c: 396: break;
 22402  00568C  0012               	return	
 22403  00568E                     l1005:
 22404                           
 22405                           ; BSR set to: 1
 22406  00568E  0101               	movlb	1	; () banked
 22407  005690  51EF               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 22408                           
 22409                           ; Switch size 1, requested type "space"
 22410                           ; Number of cases is 3, Range of values is 0 to 2
 22411                           ; switch strategies available:
 22412                           ; Name         Instructions Cycles
 22413                           ; simple_byte           10     6 (average)
 22414                           ;	Chosen strategy is simple_byte
 22415  005692  0A00               	xorlw	0	; case 0
 22416  005694  B4D8               	btfsc	status,2,c
 22417  005696  D7E0               	goto	l1006
 22418  005698  0A01               	xorlw	1	; case 1
 22419  00569A  B4D8               	btfsc	status,2,c
 22420  00569C  D7EA               	goto	l1009
 22421  00569E  0A03               	xorlw	3	; case 2
 22422  0056A0  0012               	return	
 22423  0056A2                     __end_of_TurnOnModem:
 22424                           	opt stack 0
 22425                           tosu	equ	0xFFF
 22426                           tosh	equ	0xFFE
 22427                           tosl	equ	0xFFD
 22428                           pclath	equ	0xFFA
 22429                           tblptru	equ	0xFF8
 22430                           tblptrh	equ	0xFF7
 22431                           tblptrl	equ	0xFF6
 22432                           tablat	equ	0xFF5
 22433                           prodh	equ	0xFF4
 22434                           prodl	equ	0xFF3
 22435                           intcon	equ	0xFF2
 22436                           intcon2	equ	0xFF1
 22437                           intcon3	equ	0xFF0
 22438                           indf0	equ	0xFEF
 22439                           postinc0	equ	0xFEE
 22440                           plusw0	equ	0xFEB
 22441                           fsr0h	equ	0xFEA
 22442                           fsr0l	equ	0xFE9
 22443                           wreg	equ	0xFE8
 22444                           indf1	equ	0xFE7
 22445                           postinc1	equ	0xFE6
 22446                           postdec1	equ	0xFE5
 22447                           plusw1	equ	0xFE3
 22448                           fsr1h	equ	0xFE2
 22449                           fsr1l	equ	0xFE1
 22450                           indf2	equ	0xFDF
 22451                           postinc2	equ	0xFDE
 22452                           postdec2	equ	0xFDD
 22453                           plusw2	equ	0xFDB
 22454                           fsr2h	equ	0xFDA
 22455                           fsr2l	equ	0xFD9
 22456                           status	equ	0xFD8
 22457                           
 22458 ;; *************** function _SendSmsSm *****************
 22459 ;; Defined at:
 22460 ;;		line 638 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22461 ;; Parameters:    Size  Location     Type
 22462 ;;		None
 22463 ;; Auto vars:     Size  Location     Type
 22464 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22465 ;; Return value:  Size  Location     Type
 22466 ;;                  1    wreg      void 
 22467 ;; Registers used:
 22468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22469 ;; Tracked objects:
 22470 ;;		On entry : 0/0
 22471 ;;		On exit  : 0/0
 22472 ;;		Unchanged: 0/0
 22473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22475 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22477 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22478 ;;Total ram usage:       52 bytes
 22479 ;; Hardware stack levels used:    1
 22480 ;; Hardware stack levels required when called:   14
 22481 ;; This function calls:
 22482 ;;		_OsTmr_GetTimerStatus
 22483 ;;		_OsTmr_StartTimer
 22484 ;;		_ReceiveEvt
 22485 ;;		_StringCopy
 22486 ;;		_Uart_WriteStringLen
 22487 ;; This function is called by:
 22488 ;;		_Mdm_MainTask
 22489 ;; This function uses a non-reentrant model
 22490 ;;
 22491                           
 22492                           	psect	text105
 22493  0019F2                     __ptext105:
 22494                           	opt stack 0
 22495  0019F2                     _SendSmsSm:
 22496                           	opt stack 13
 22497                           
 22498                           ;mdm_gsm_gprs.c: 640: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22499                           ;mdm_gsm_gprs.c: 641: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22500                           ;mdm_gsm_gprs.c: 642: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22501                           ;mdm_gsm_gprs.c: 643: UINT8 UartMessage[50];
 22502                           ;mdm_gsm_gprs.c: 646: if (MdmStatus == ModemConfigured)
 22503                           
 22504                           ;incstack = 0
 22505  0019F2  0E03               	movlw	3
 22506  0019F4  0100               	movlb	0	; () banked
 22507  0019F6  19D6               	xorwf	_MdmStatus& (0+255),w,b
 22508  0019F8  A4D8               	btfss	status,2,c
 22509  0019FA  0012               	return	
 22510  0019FC  D0C1               	goto	l1083
 22511  0019FE                     
 22512                           ;mdm_gsm_gprs.c: 652: if (ReceiveEvt(&SendSmsEvent))
 22513                           
 22514                           ; BSR set to: 0
 22515  0019FE  0EDE               	movlw	low _SendSmsEvent
 22516  001A00  0100               	movlb	0	; () banked
 22517  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22518  001A04  0E00               	movlw	high _SendSmsEvent
 22519  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22520  001A08  EC53  F02E         	call	_ReceiveEvt	;wreg free
 22521  001A0C  0900               	iorlw	0
 22522  001A0E  B4D8               	btfsc	status,2,c
 22523  001A10  0012               	return	
 22524                           
 22525                           ;mdm_gsm_gprs.c: 653: {
 22526                           ;mdm_gsm_gprs.c: 655: SendSms_State = SendSms_CmgsCmd;
 22527  001A12  0E01               	movlw	1
 22528  001A14  0101               	movlb	1	; () banked
 22529  001A16  6FEB               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;mdm_gsm_gprs.c: 656: }
 22533                           ;mdm_gsm_gprs.c: 657: break;
 22534  001A18  0012               	return	
 22535  001A1A                     
 22536                           ; BSR set to: 1
 22537                           ;mdm_gsm_gprs.c: 661: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22538                           
 22539                           ; BSR set to: 1
 22540  001A1A  0ECD               	movlw	low STR_5
 22541  001A1C  0100               	movlb	0	; () banked
 22542  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22543  001A20  0EFF               	movlw	high STR_5
 22544  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22545  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22546  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22547  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22548  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22549  001A2C  0E00               	movlw	0
 22550  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22551  001A30  0E09               	movlw	9
 22552  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22553  001A34  EC00  F028         	call	_StringCopy	;wreg free
 22554                           
 22555                           ;mdm_gsm_gprs.c: 663: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22556  001A38  0EB8               	movlw	low _PhoneNumber
 22557  001A3A  0100               	movlb	0	; () banked
 22558  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22559  001A3E  0E04               	movlw	high _PhoneNumber
 22560  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22561  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22562  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22563  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22564  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22565  001A4A  C0D7  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22566  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22567  001A50  EC00  F028         	call	_StringCopy	;wreg free
 22568                           
 22569                           ;mdm_gsm_gprs.c: 665: UartMessage[PhoneNumbLen + 9] = '"';
 22570  001A54  0100               	movlb	0	; () banked
 22571  001A56  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22572  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22573  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22574  001A5C  0E09               	movlw	9
 22575  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22576  001A60  0E00               	movlw	0
 22577  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22578  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22579  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22580  001A68  6ED9               	movwf	fsr2l,c
 22581  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22582  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22583  001A6E  6EDA               	movwf	fsr2h,c
 22584  001A70  0E22               	movlw	34
 22585  001A72  6EDF               	movwf	indf2,c
 22586                           
 22587                           ; BSR set to: 0
 22588                           ;mdm_gsm_gprs.c: 666: UartMessage[PhoneNumbLen + 10] = '\r';
 22589  001A74  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22590  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22591  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22592  001A7A  0E0A               	movlw	10
 22593  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22594  001A7E  0E00               	movlw	0
 22595  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22596  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22597  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22598  001A86  6ED9               	movwf	fsr2l,c
 22599  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22600  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22601  001A8C  6EDA               	movwf	fsr2h,c
 22602  001A8E  0E0D               	movlw	13
 22603  001A90  6EDF               	movwf	indf2,c
 22604                           
 22605                           ; BSR set to: 0
 22606                           ;mdm_gsm_gprs.c: 668: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22607  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22608  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22609  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22610  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22611  001A9A  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22612  001A9C  0F0B               	addlw	11
 22613  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22614  001AA0  0E01               	movlw	1
 22615  001AA2  EC83  F02C         	call	_Uart_WriteStringLen
 22616                           
 22617                           ;mdm_gsm_gprs.c: 670: OsTmr_StartTimer(&SwTimer,2500);
 22618  001AA6  0EE6               	movlw	low SendSmsSm@SwTimer
 22619  001AA8  0100               	movlb	0	; () banked
 22620  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22621  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22622  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22623  001AB0  0EC4               	movlw	196
 22624  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22625  001AB4  0E09               	movlw	9
 22626  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22627  001AB8  0E00               	movlw	0
 22628  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22629  001ABC  0E00               	movlw	0
 22630  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22631  001AC0  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 22632                           
 22633                           ;mdm_gsm_gprs.c: 671: SendSms_State = SendSms_Delay;
 22634  001AC4  0E05               	movlw	5
 22635  001AC6  0101               	movlb	1	; () banked
 22636  001AC8  6FEB               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22637                           
 22638                           ; BSR set to: 1
 22639                           ;mdm_gsm_gprs.c: 672: SendSms_NextState = SendSms_EnterCmd;
 22640  001ACA  0E02               	movlw	2
 22641  001ACC  6FEA               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22642                           
 22643                           ;mdm_gsm_gprs.c: 673: break;
 22644  001ACE  0012               	return	
 22645  001AD0                     
 22646                           ; BSR set to: 1
 22647                           ;mdm_gsm_gprs.c: 677: UartMessage[0] = '\n';
 22648                           
 22649                           ; BSR set to: 1
 22650  001AD0  0E0A               	movlw	10
 22651  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22652                           
 22653                           ;mdm_gsm_gprs.c: 678: UartMessage[1] = '\r';
 22654  001AD4  0E0D               	movlw	13
 22655  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;mdm_gsm_gprs.c: 680: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22659  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22660  001ADA  0100               	movlb	0	; () banked
 22661  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22662  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22663  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22664  001AE2  0E02               	movlw	2
 22665  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22666  001AE6  0E01               	movlw	1
 22667  001AE8  EC83  F02C         	call	_Uart_WriteStringLen
 22668                           
 22669                           ;mdm_gsm_gprs.c: 682: SendSms_State = SendSms_WaitConf;
 22670  001AEC  0E03               	movlw	3
 22671  001AEE  0101               	movlb	1	; () banked
 22672  001AF0  6FEB               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22673                           
 22674                           ;mdm_gsm_gprs.c: 683: break;
 22675  001AF2  0012               	return	
 22676  001AF4                     
 22677                           ; BSR set to: 1
 22678                           ;mdm_gsm_gprs.c: 687: if (ReceiveEvt(&NewStringReceived))
 22679                           
 22680                           ; BSR set to: 1
 22681  001AF4  0E3C               	movlw	low _NewStringReceived
 22682  001AF6  0100               	movlb	0	; () banked
 22683  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22684  001AFA  0E00               	movlw	high _NewStringReceived
 22685  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22686  001AFE  EC53  F02E         	call	_ReceiveEvt	;wreg free
 22687  001B02  0900               	iorlw	0
 22688  001B04  B4D8               	btfsc	status,2,c
 22689  001B06  0012               	return	
 22690                           
 22691                           ;mdm_gsm_gprs.c: 688: {
 22692                           ;mdm_gsm_gprs.c: 690: if (RxBuffer[0] == '>')
 22693  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22694  001B0C  0A3E               	xorlw	62
 22695  001B0E  A4D8               	btfss	status,2,c
 22696  001B10  0012               	return	
 22697                           
 22698                           ;mdm_gsm_gprs.c: 691: {
 22699                           ;mdm_gsm_gprs.c: 693: SendSms_State = SendSms_SendSmsText;
 22700  001B12  0E04               	movlw	4
 22701  001B14  0101               	movlb	1	; () banked
 22702  001B16  6FEB               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;mdm_gsm_gprs.c: 694: }
 22706                           ;mdm_gsm_gprs.c: 695: }
 22707                           ;mdm_gsm_gprs.c: 696: break;
 22708                           
 22709                           ; BSR set to: 1
 22710  001B18  0012               	return	
 22711  001B1A                     
 22712                           ; BSR set to: 1
 22713                           ;mdm_gsm_gprs.c: 700: StringCopy(MessageText,UartMessage,SmsLen);
 22714                           
 22715                           ; BSR set to: 1
 22716  001B1A  0EC4               	movlw	low _MessageText
 22717  001B1C  0100               	movlb	0	; () banked
 22718  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22719  001B20  0E07               	movlw	high _MessageText
 22720  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22721  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22722  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22723  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22724  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22725  001B2C  C0D8  F081         	movff	_SmsLen,StringCopy@Len
 22726  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22727  001B32  EC00  F028         	call	_StringCopy	;wreg free
 22728                           
 22729                           ;mdm_gsm_gprs.c: 702: UartMessage[SmsLen] = 0x1A;
 22730  001B36  0100               	movlb	0	; () banked
 22731  001B38  51D8               	movf	_SmsLen& (0+255),w,b
 22732  001B3A  0D01               	mullw	1
 22733  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22734  001B3E  24F3               	addwf	prodl,w,c
 22735  001B40  6ED9               	movwf	fsr2l,c
 22736  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22737  001B44  20F4               	addwfc	prodh,w,c
 22738  001B46  6EDA               	movwf	fsr2h,c
 22739  001B48  0E1A               	movlw	26
 22740  001B4A  6EDF               	movwf	indf2,c
 22741                           
 22742                           ; BSR set to: 0
 22743                           ;mdm_gsm_gprs.c: 704: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22744  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22745  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22746  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22747  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22748  001B54  29D8               	incf	_SmsLen& (0+255),w,b
 22749  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22750  001B58  0E01               	movlw	1
 22751  001B5A  EC83  F02C         	call	_Uart_WriteStringLen
 22752                           
 22753                           ;mdm_gsm_gprs.c: 706: SendSms_State = SendSms_WaitEvt;
 22754  001B5E  0E00               	movlw	0
 22755  001B60  0101               	movlb	1	; () banked
 22756  001B62  6FEB               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22757                           
 22758                           ;mdm_gsm_gprs.c: 707: break;
 22759  001B64  0012               	return	
 22760  001B66                     
 22761                           ; BSR set to: 1
 22762                           ;mdm_gsm_gprs.c: 711: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22763                           
 22764                           ; BSR set to: 1
 22765  001B66  0EE6               	movlw	low SendSmsSm@SwTimer
 22766  001B68  0100               	movlb	0	; () banked
 22767  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22768  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 22769  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22770  001B70  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 22771  001B74  06E8               	decf	wreg,f,c
 22772  001B76  A4D8               	btfss	status,2,c
 22773  001B78  0012               	return	
 22774                           
 22775                           ;mdm_gsm_gprs.c: 712: {
 22776                           ;mdm_gsm_gprs.c: 714: SendSms_State = SendSms_NextState;
 22777  001B7A  C1EA  F1EB         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22778                           
 22779                           ;mdm_gsm_gprs.c: 720: }
 22780                           
 22781                           ;mdm_gsm_gprs.c: 719: break;
 22782                           
 22783                           ;mdm_gsm_gprs.c: 718: default:
 22784                           
 22785                           ;mdm_gsm_gprs.c: 715: }
 22786                           ;mdm_gsm_gprs.c: 716: break;
 22787  001B7E  0012               	return	
 22788  001B80                     l1083:
 22789  001B80  0101               	movlb	1	; () banked
 22790  001B82  51EB               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22791                           
 22792                           ; Switch size 1, requested type "space"
 22793                           ; Number of cases is 6, Range of values is 0 to 5
 22794                           ; switch strategies available:
 22795                           ; Name         Instructions Cycles
 22796                           ; simple_byte           19    10 (average)
 22797                           ;	Chosen strategy is simple_byte
 22798  001B84  0A00               	xorlw	0	; case 0
 22799  001B86  B4D8               	btfsc	status,2,c
 22800  001B88  D73A               	goto	l1084
 22801  001B8A  0A01               	xorlw	1	; case 1
 22802  001B8C  B4D8               	btfsc	status,2,c
 22803  001B8E  D745               	goto	l1087
 22804  001B90  0A03               	xorlw	3	; case 2
 22805  001B92  B4D8               	btfsc	status,2,c
 22806  001B94  D79D               	goto	l1088
 22807  001B96  0A01               	xorlw	1	; case 3
 22808  001B98  B4D8               	btfsc	status,2,c
 22809  001B9A  D7AC               	goto	l1089
 22810  001B9C  0A07               	xorlw	7	; case 4
 22811  001B9E  B4D8               	btfsc	status,2,c
 22812  001BA0  D7BC               	goto	l1092
 22813  001BA2  0A01               	xorlw	1	; case 5
 22814  001BA4  A4D8               	btfss	status,2,c
 22815                           
 22816                           ; BSR set to: 1
 22817  001BA6  0012               	return	
 22818  001BA8  D7DE               	goto	l1093
 22819  001BAA                     __end_of_SendSmsSm:
 22820                           	opt stack 0
 22821                           tosu	equ	0xFFF
 22822                           tosh	equ	0xFFE
 22823                           tosl	equ	0xFFD
 22824                           pclath	equ	0xFFA
 22825                           tblptru	equ	0xFF8
 22826                           tblptrh	equ	0xFF7
 22827                           tblptrl	equ	0xFF6
 22828                           tablat	equ	0xFF5
 22829                           prodh	equ	0xFF4
 22830                           prodl	equ	0xFF3
 22831                           intcon	equ	0xFF2
 22832                           intcon2	equ	0xFF1
 22833                           intcon3	equ	0xFF0
 22834                           indf0	equ	0xFEF
 22835                           postinc0	equ	0xFEE
 22836                           plusw0	equ	0xFEB
 22837                           fsr0h	equ	0xFEA
 22838                           fsr0l	equ	0xFE9
 22839                           wreg	equ	0xFE8
 22840                           indf1	equ	0xFE7
 22841                           postinc1	equ	0xFE6
 22842                           postdec1	equ	0xFE5
 22843                           plusw1	equ	0xFE3
 22844                           fsr1h	equ	0xFE2
 22845                           fsr1l	equ	0xFE1
 22846                           indf2	equ	0xFDF
 22847                           postinc2	equ	0xFDE
 22848                           postdec2	equ	0xFDD
 22849                           plusw2	equ	0xFDB
 22850                           fsr2h	equ	0xFDA
 22851                           fsr2l	equ	0xFD9
 22852                           status	equ	0xFD8
 22853                           
 22854 ;; *************** function _Uart_WriteStringLen *****************
 22855 ;; Defined at:
 22856 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22857 ;; Parameters:    Size  Location     Type
 22858 ;;  Module          1    wreg     unsigned char 
 22859 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 22860 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 22861 ;;  Len             1   34[BANK0 ] unsigned char 
 22862 ;; Auto vars:     Size  Location     Type
 22863 ;;  Module          1   36[BANK0 ] unsigned char 
 22864 ;;  Index           1   35[BANK0 ] unsigned char 
 22865 ;; Return value:  Size  Location     Type
 22866 ;;                  1    wreg      void 
 22867 ;; Registers used:
 22868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22869 ;; Tracked objects:
 22870 ;;		On entry : 0/0
 22871 ;;		On exit  : 0/0
 22872 ;;		Unchanged: 0/0
 22873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22877 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22878 ;;Total ram usage:        5 bytes
 22879 ;; Hardware stack levels used:    1
 22880 ;; Hardware stack levels required when called:   12
 22881 ;; This function calls:
 22882 ;;		_UartTxBufferStatus
 22883 ;;		_UartWriteByte
 22884 ;; This function is called by:
 22885 ;;		_SendSmsSm
 22886 ;;		_GsmGprsTerminal
 22887 ;; This function uses a non-reentrant model
 22888 ;;
 22889                           
 22890                           	psect	text106
 22891  005906                     __ptext106:
 22892                           	opt stack 0
 22893  005906                     _Uart_WriteStringLen:
 22894                           	opt stack 14
 22895                           
 22896                           ;incstack = 0
 22897                           ;Uart_WriteStringLen@Module stored from wreg
 22898  005906  0100               	movlb	0	; () banked
 22899  005908  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 22900                           
 22901                           ;uart_drv.c: 544: UINT8 Index;
 22902                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 22903  00590A  0E00               	movlw	0
 22904  00590C  0100               	movlb	0	; () banked
 22905  00590E  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 22906  005910  D015               	goto	l715
 22907  005912                     
 22908                           ; BSR set to: 0
 22909                           ;uart_drv.c: 547: {
 22910                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 22911                           
 22912                           ; BSR set to: 0
 22913  005912  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 22914  005916  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 22915  00591A  50DF               	movf	indf2,w,c
 22916  00591C  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22917  00591E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22918  005920  EC8F  F02F         	call	_UartWriteByte
 22919                           
 22920                           ;uart_drv.c: 551: StringToWrite++;
 22921  005924  0100               	movlb	0	; () banked
 22922  005926  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 22923  005928  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 22924  00592A                     
 22925                           ; BSR set to: 0
 22926                           
 22927                           ; BSR set to: 0
 22928  00592A  0100               	movlb	0	; () banked
 22929  00592C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22930  00592E  ECB7  F02A         	call	_UartTxBufferStatus
 22931  005932  06E8               	decf	wreg,f,c
 22932  005934  B4D8               	btfsc	status,2,c
 22933  005936  D7F9               	goto	l718
 22934  005938  0100               	movlb	0	; () banked
 22935  00593A  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 22936  00593C                     l715:
 22937                           
 22938                           ; BSR set to: 0
 22939                           
 22940                           ; BSR set to: 0
 22941  00593C  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 22942  00593E  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 22943  005940  B0D8               	btfsc	status,0,c
 22944  005942  0012               	return	
 22945  005944  D7E6               	goto	l716
 22946  005946                     __end_of_Uart_WriteStringLen:
 22947                           	opt stack 0
 22948                           tosu	equ	0xFFF
 22949                           tosh	equ	0xFFE
 22950                           tosl	equ	0xFFD
 22951                           pclath	equ	0xFFA
 22952                           tblptru	equ	0xFF8
 22953                           tblptrh	equ	0xFF7
 22954                           tblptrl	equ	0xFF6
 22955                           tablat	equ	0xFF5
 22956                           prodh	equ	0xFF4
 22957                           prodl	equ	0xFF3
 22958                           intcon	equ	0xFF2
 22959                           intcon2	equ	0xFF1
 22960                           intcon3	equ	0xFF0
 22961                           indf0	equ	0xFEF
 22962                           postinc0	equ	0xFEE
 22963                           plusw0	equ	0xFEB
 22964                           fsr0h	equ	0xFEA
 22965                           fsr0l	equ	0xFE9
 22966                           wreg	equ	0xFE8
 22967                           indf1	equ	0xFE7
 22968                           postinc1	equ	0xFE6
 22969                           postdec1	equ	0xFE5
 22970                           plusw1	equ	0xFE3
 22971                           fsr1h	equ	0xFE2
 22972                           fsr1l	equ	0xFE1
 22973                           indf2	equ	0xFDF
 22974                           postinc2	equ	0xFDE
 22975                           postdec2	equ	0xFDD
 22976                           plusw2	equ	0xFDB
 22977                           fsr2h	equ	0xFDA
 22978                           fsr2l	equ	0xFD9
 22979                           status	equ	0xFD8
 22980                           
 22981 ;; *************** function _ModemEvtParser *****************
 22982 ;; Defined at:
 22983 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22984 ;; Parameters:    Size  Location     Type
 22985 ;;		None
 22986 ;; Auto vars:     Size  Location     Type
 22987 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 22988 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 22989 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 22990 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 22991 ;;  Match           1   59[BANK0 ] unsigned char 
 22992 ;; Return value:  Size  Location     Type
 22993 ;;                  1    wreg      void 
 22994 ;; Registers used:
 22995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22996 ;; Tracked objects:
 22997 ;;		On entry : 0/0
 22998 ;;		On exit  : 0/0
 22999 ;;		Unchanged: 0/0
 23000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23002 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23004 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23005 ;;Total ram usage:       21 bytes
 23006 ;; Hardware stack levels used:    1
 23007 ;; Hardware stack levels required when called:   12
 23008 ;; This function calls:
 23009 ;;		_GenerateEvt
 23010 ;;		_ReceiveEvt
 23011 ;;		_StringCompare
 23012 ;;		_Uart_ClearRxBuffer
 23013 ;; This function is called by:
 23014 ;;		_Mdm_MainTask
 23015 ;; This function uses a non-reentrant model
 23016 ;;
 23017                           
 23018                           	psect	text107
 23019  002F06                     __ptext107:
 23020                           	opt stack 0
 23021  002F06                     _ModemEvtParser:
 23022                           	opt stack 15
 23023                           
 23024                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;incstack = 0
 23028  002F06  C3C1  F097         	movff	ModemEvtParser@F9087,ModemEvtParser@RingString
 23029  002F0A  C3C2  F098         	movff	ModemEvtParser@F9087+1,ModemEvtParser@RingString+1
 23030  002F0E  C3C3  F099         	movff	ModemEvtParser@F9087+2,ModemEvtParser@RingString+2
 23031  002F12  C3C4  F09A         	movff	ModemEvtParser@F9087+3,ModemEvtParser@RingString+3
 23032                           
 23033                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 23034  002F16  EE23  F0BC         	lfsr	2,ModemEvtParser@F9089
 23035  002F1A  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 23036  002F1E  0E04               	movlw	4
 23037  002F20                     u12261:
 23038  002F20  CFDB FFE3          	movff	plusw2,plusw1
 23039  002F24  06E8               	decf	wreg,f,c
 23040  002F26  E2FC               	bc	u12261
 23041                           
 23042                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23043  002F28  EE24  F0F0         	lfsr	2,ModemEvtParser@F9091
 23044  002F2C  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 23045  002F30  0E09               	movlw	9
 23046  002F32                     u12271:
 23047  002F32  CFDB FFE3          	movff	plusw2,plusw1
 23048  002F36  06E8               	decf	wreg,f,c
 23049  002F38  E2FC               	bc	u12271
 23050                           
 23051                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 23052  002F3A  0E00               	movlw	0
 23053  002F3C  0100               	movlb	0	; () banked
 23054  002F3E  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23055                           
 23056                           ; BSR set to: 0
 23057                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 23058  002F40  0E00               	movlw	0
 23059  002F42  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23063  002F44  0E3B               	movlw	low _NewMdmEvtParserRequest
 23064  002F46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23065  002F48  0E00               	movlw	high _NewMdmEvtParserRequest
 23066  002F4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23067  002F4C  EC53  F02E         	call	_ReceiveEvt	;wreg free
 23068  002F50  0900               	iorlw	0
 23069  002F52  B4D8               	btfsc	status,2,c
 23070  002F54  0012               	return	
 23071                           
 23072                           ;mdm_gsm_gprs.c: 504: {
 23073                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 23074  002F56  0E00               	movlw	0
 23075  002F58  0100               	movlb	0	; () banked
 23076  002F5A  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23077  002F5C                     l13127:
 23078                           
 23079                           ; BSR set to: 0
 23080  002F5C  0E02               	movlw	2
 23081  002F5E  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23082  002F60  D04C               	goto	l1046
 23083  002F62  D058               	goto	u12330
 23084  002F64                     
 23085                           ; BSR set to: 0
 23086                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23087                           
 23088                           ; BSR set to: 0
 23089  002F64  0E97               	movlw	low ModemEvtParser@RingString
 23090  002F66  6F7D               	movwf	StringCompare@String1& (0+255),b
 23091  002F68  0E00               	movlw	high ModemEvtParser@RingString
 23092  002F6A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23093  002F6C  0E58               	movlw	low _RxBuffer
 23094  002F6E  6F7F               	movwf	StringCompare@String2& (0+255),b
 23095  002F70  0E0C               	movlw	high _RxBuffer
 23096  002F72  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23097  002F74  0E00               	movlw	0
 23098  002F76  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23099  002F78  0E04               	movlw	4
 23100  002F7A  6F81               	movwf	StringCompare@Len& (0+255),b
 23101  002F7C  EC3E  F02A         	call	_StringCompare	;wreg free
 23102  002F80  0900               	iorlw	0
 23103  002F82  B4D8               	btfsc	status,2,c
 23104  002F84  D044               	goto	l1049
 23105                           
 23106                           ;mdm_gsm_gprs.c: 512: {
 23107                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 23108  002F86  0EDD               	movlw	low _RingEvent
 23109  002F88  0100               	movlb	0	; () banked
 23110  002F8A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23111  002F8C  0E00               	movlw	high _RingEvent
 23112  002F8E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23113  002F90  EC18  F030         	call	_GenerateEvt	;wreg free
 23114  002F94  D018               	goto	l13141
 23115  002F96                     
 23116                           ; BSR set to: 0
 23117                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23118                           
 23119                           ; BSR set to: 0
 23120  002F96  0E92               	movlw	low ModemEvtParser@SmsString
 23121  002F98  6F7D               	movwf	StringCompare@String1& (0+255),b
 23122  002F9A  0E00               	movlw	high ModemEvtParser@SmsString
 23123  002F9C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23124  002F9E  0E58               	movlw	low _RxBuffer
 23125  002FA0  6F7F               	movwf	StringCompare@String2& (0+255),b
 23126  002FA2  0E0C               	movlw	high _RxBuffer
 23127  002FA4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23128  002FA6  0E00               	movlw	0
 23129  002FA8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23130  002FAA  0E05               	movlw	5
 23131  002FAC  6F81               	movwf	StringCompare@Len& (0+255),b
 23132  002FAE  EC3E  F02A         	call	_StringCompare	;wreg free
 23133  002FB2  0900               	iorlw	0
 23134  002FB4  B4D8               	btfsc	status,2,c
 23135  002FB6  D02B               	goto	l1049
 23136                           
 23137                           ;mdm_gsm_gprs.c: 523: {
 23138                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 23139  002FB8  0E39               	movlw	low _SmsEvent
 23140  002FBA  0100               	movlb	0	; () banked
 23141  002FBC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23142  002FBE  0E00               	movlw	high _SmsEvent
 23143  002FC0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23144  002FC2  EC18  F030         	call	_GenerateEvt	;wreg free
 23145  002FC6                     l13141:
 23146                           
 23147                           ;mdm_gsm_gprs.c: 527: Match = 1;
 23148  002FC6  0E01               	movlw	1
 23149  002FC8  0100               	movlb	0	; () banked
 23150  002FCA  D015               	goto	L28
 23151  002FCC                     
 23152                           ; BSR set to: 0
 23153                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23154                           
 23155                           ; BSR set to: 0
 23156  002FCC  0E88               	movlw	low ModemEvtParser@CallReadyString
 23157  002FCE  6F7D               	movwf	StringCompare@String1& (0+255),b
 23158  002FD0  0E00               	movlw	high ModemEvtParser@CallReadyString
 23159  002FD2  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23160  002FD4  0E58               	movlw	low _RxBuffer
 23161  002FD6  6F7F               	movwf	StringCompare@String2& (0+255),b
 23162  002FD8  0E0C               	movlw	high _RxBuffer
 23163  002FDA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23164  002FDC  0E00               	movlw	0
 23165  002FDE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23166  002FE0  0E0A               	movlw	10
 23167  002FE2  6F81               	movwf	StringCompare@Len& (0+255),b
 23168  002FE4  EC3E  F02A         	call	_StringCompare	;wreg free
 23169  002FE8  0900               	iorlw	0
 23170  002FEA  B4D8               	btfsc	status,2,c
 23171  002FEC  D010               	goto	l1049
 23172                           
 23173                           ;mdm_gsm_gprs.c: 534: {
 23174                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 23175  002FEE  0E02               	movlw	2
 23176  002FF0  0100               	movlb	0	; () banked
 23177  002FF2  6FD6               	movwf	_MdmStatus& (0+255),b
 23178                           
 23179                           ;mdm_gsm_gprs.c: 538: Match = 1;
 23180  002FF4  0E01               	movlw	1
 23181  002FF6                     L28:
 23182  002FF6  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 23183                           
 23184                           ; BSR set to: 0
 23185                           ;mdm_gsm_gprs.c: 544: }
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;mdm_gsm_gprs.c: 543: break;
 23189                           
 23190                           ;mdm_gsm_gprs.c: 542: default:
 23191                           
 23192                           ; BSR set to: 0
 23193                           ;mdm_gsm_gprs.c: 539: }
 23194                           ;mdm_gsm_gprs.c: 540: break;
 23195  002FF8  D00A               	goto	l1049
 23196  002FFA                     l1046:
 23197                           
 23198                           ; BSR set to: 0
 23199                           
 23200                           ; BSR set to: 0
 23201  002FFA  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23202                           
 23203                           ; Switch size 1, requested type "space"
 23204                           ; Number of cases is 3, Range of values is 0 to 2
 23205                           ; switch strategies available:
 23206                           ; Name         Instructions Cycles
 23207                           ; simple_byte           10     6 (average)
 23208                           ;	Chosen strategy is simple_byte
 23209  002FFC  0A00               	xorlw	0	; case 0
 23210  002FFE  B4D8               	btfsc	status,2,c
 23211  003000  D7B1               	goto	l1047
 23212  003002  0A01               	xorlw	1	; case 1
 23213  003004  B4D8               	btfsc	status,2,c
 23214  003006  D7C7               	goto	l1050
 23215  003008  0A03               	xorlw	3	; case 2
 23216  00300A  B4D8               	btfsc	status,2,c
 23217  00300C  D7DF               	goto	l1052
 23218  00300E                     l1049:
 23219                           
 23220                           ; BSR set to: 0
 23221  00300E  0100               	movlb	0	; () banked
 23222  003010  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23223  003012  D7A4               	goto	l13127
 23224  003014                     u12330:
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;mdm_gsm_gprs.c: 545: }
 23228                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 23229                           
 23230                           ; BSR set to: 0
 23231  003014  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 23232  003016  A4D8               	btfss	status,2,c
 23233  003018  0012               	return	
 23234                           
 23235                           ; BSR set to: 0
 23236                           ;mdm_gsm_gprs.c: 549: {
 23237                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 23238  00301A  EC90  F02D         	call	_Uart_ClearRxBuffer	;wreg free
 23239  00301E  0012               	return	
 23240  003020                     __end_of_ModemEvtParser:
 23241                           	opt stack 0
 23242                           tosu	equ	0xFFF
 23243                           tosh	equ	0xFFE
 23244                           tosl	equ	0xFFD
 23245                           pclath	equ	0xFFA
 23246                           tblptru	equ	0xFF8
 23247                           tblptrh	equ	0xFF7
 23248                           tblptrl	equ	0xFF6
 23249                           tablat	equ	0xFF5
 23250                           prodh	equ	0xFF4
 23251                           prodl	equ	0xFF3
 23252                           intcon	equ	0xFF2
 23253                           intcon2	equ	0xFF1
 23254                           intcon3	equ	0xFF0
 23255                           indf0	equ	0xFEF
 23256                           postinc0	equ	0xFEE
 23257                           plusw0	equ	0xFEB
 23258                           fsr0h	equ	0xFEA
 23259                           fsr0l	equ	0xFE9
 23260                           wreg	equ	0xFE8
 23261                           indf1	equ	0xFE7
 23262                           postinc1	equ	0xFE6
 23263                           postdec1	equ	0xFE5
 23264                           plusw1	equ	0xFE3
 23265                           fsr1h	equ	0xFE2
 23266                           fsr1l	equ	0xFE1
 23267                           indf2	equ	0xFDF
 23268                           postinc2	equ	0xFDE
 23269                           postdec2	equ	0xFDD
 23270                           plusw2	equ	0xFDB
 23271                           fsr2h	equ	0xFDA
 23272                           fsr2l	equ	0xFD9
 23273                           status	equ	0xFD8
 23274                           
 23275 ;; *************** function _Uart_ClearRxBuffer *****************
 23276 ;; Defined at:
 23277 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23278 ;; Parameters:    Size  Location     Type
 23279 ;;		None
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;  Index           2   29[BANK0 ] unsigned short 
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1    wreg      void 
 23284 ;; Registers used:
 23285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23295 ;;Total ram usage:        2 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:   11
 23298 ;; This function calls:
 23299 ;;		Nothing
 23300 ;; This function is called by:
 23301 ;;		_ModemEvtParser
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text108
 23306  005B20                     __ptext108:
 23307                           	opt stack 0
 23308  005B20                     _Uart_ClearRxBuffer:
 23309                           	opt stack 15
 23310                           
 23311                           ;uart_drv.c: 567: UINT16 Index = 0;
 23312                           
 23313                           ;incstack = 0
 23314  005B20  0E00               	movlw	0
 23315  005B22  0100               	movlb	0	; () banked
 23316  005B24  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23317  005B26  0E00               	movlw	0
 23318  005B28  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23319                           
 23320                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23321  005B2A  0E00               	movlw	0
 23322  005B2C  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23323  005B2E  0E00               	movlw	0
 23324  005B30  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23325  005B32                     l9195:
 23326                           
 23327                           ; BSR set to: 0
 23328  005B32  0E90               	movlw	144
 23329  005B34  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23330  005B36  0E01               	movlw	1
 23331  005B38  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23332  005B3A  B0D8               	btfsc	status,0,c
 23333  005B3C  0012               	return	
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;uart_drv.c: 571: {
 23337                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23338                           
 23339                           ; BSR set to: 0
 23340                           
 23341                           ; BSR set to: 0
 23342  005B3E  0E58               	movlw	low _RxBuffer
 23343  005B40  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23344  005B42  6ED9               	movwf	fsr2l,c
 23345  005B44  0E0C               	movlw	high _RxBuffer
 23346  005B46  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23347  005B48  6EDA               	movwf	fsr2h,c
 23348  005B4A  0E00               	movlw	0
 23349  005B4C  6EDF               	movwf	indf2,c
 23350                           
 23351                           ; BSR set to: 0
 23352  005B4E  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23353  005B50  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23354  005B52  D7EF               	goto	l9195
 23355  005B54                     __end_of_Uart_ClearRxBuffer:
 23356                           	opt stack 0
 23357                           tosu	equ	0xFFF
 23358                           tosh	equ	0xFFE
 23359                           tosl	equ	0xFFD
 23360                           pclath	equ	0xFFA
 23361                           tblptru	equ	0xFF8
 23362                           tblptrh	equ	0xFF7
 23363                           tblptrl	equ	0xFF6
 23364                           tablat	equ	0xFF5
 23365                           prodh	equ	0xFF4
 23366                           prodl	equ	0xFF3
 23367                           intcon	equ	0xFF2
 23368                           intcon2	equ	0xFF1
 23369                           intcon3	equ	0xFF0
 23370                           indf0	equ	0xFEF
 23371                           postinc0	equ	0xFEE
 23372                           plusw0	equ	0xFEB
 23373                           fsr0h	equ	0xFEA
 23374                           fsr0l	equ	0xFE9
 23375                           wreg	equ	0xFE8
 23376                           indf1	equ	0xFE7
 23377                           postinc1	equ	0xFE6
 23378                           postdec1	equ	0xFE5
 23379                           plusw1	equ	0xFE3
 23380                           fsr1h	equ	0xFE2
 23381                           fsr1l	equ	0xFE1
 23382                           indf2	equ	0xFDF
 23383                           postinc2	equ	0xFDE
 23384                           postdec2	equ	0xFDD
 23385                           plusw2	equ	0xFDB
 23386                           fsr2h	equ	0xFDA
 23387                           fsr2l	equ	0xFD9
 23388                           status	equ	0xFD8
 23389                           
 23390 ;; *************** function _StringCompare *****************
 23391 ;; Defined at:
 23392 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 23395 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5
      +), 
 23396 ;;		 -> ModemEvtParser@RingString(4), 
 23397 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 23398 ;;		 -> MyApp_Task@cmpString(3), MyApp_Task@phone(14), RxBuffer(400), 
 23399 ;;  Len             2   33[BANK0 ] unsigned short 
 23400 ;; Auto vars:     Size  Location     Type
 23401 ;;  Index           2   38[BANK0 ] unsigned short 
 23402 ;;  Result          1   37[BANK0 ] unsigned char 
 23403 ;; Return value:  Size  Location     Type
 23404 ;;                  1    wreg      unsigned char 
 23405 ;; Registers used:
 23406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23407 ;; Tracked objects:
 23408 ;;		On entry : 0/0
 23409 ;;		On exit  : 0/0
 23410 ;;		Unchanged: 0/0
 23411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23412 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;Total ram usage:       11 bytes
 23417 ;; Hardware stack levels used:    1
 23418 ;; Hardware stack levels required when called:   11
 23419 ;; This function calls:
 23420 ;;		Nothing
 23421 ;; This function is called by:
 23422 ;;		_ModemEvtParser
 23423 ;;		_MyApp_Task
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text109
 23428  00547C                     __ptext109:
 23429                           	opt stack 0
 23430  00547C                     _StringCompare:
 23431                           	opt stack 16
 23432                           
 23433                           ;sf.c: 77: UINT16 Index = 0;
 23434                           
 23435                           ; BSR set to: 0
 23436                           ;incstack = 0
 23437  00547C  0E00               	movlw	0
 23438  00547E  0100               	movlb	0	; () banked
 23439  005480  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23440  005482  0E00               	movlw	0
 23441  005484  6F86               	movwf	StringCompare@Index& (0+255),b
 23442                           
 23443                           ;sf.c: 78: UINT8 Result = 1;
 23444  005486  0E01               	movlw	1
 23445  005488  6F85               	movwf	StringCompare@Result& (0+255),b
 23446                           
 23447                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23448  00548A  0E00               	movlw	0
 23449  00548C  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23450  00548E  0E00               	movlw	0
 23451  005490  6F86               	movwf	StringCompare@Index& (0+255),b
 23452  005492  D015               	goto	l2199
 23453  005494                     
 23454                           ; BSR set to: 0
 23455                           ;sf.c: 82: {
 23456                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23457                           
 23458                           ; BSR set to: 0
 23459  005494  5186               	movf	StringCompare@Index& (0+255),w,b
 23460  005496  257F               	addwf	StringCompare@String2& (0+255),w,b
 23461  005498  6ED9               	movwf	fsr2l,c
 23462  00549A  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23463  00549C  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23464  00549E  6EDA               	movwf	fsr2h,c
 23465  0054A0  5186               	movf	StringCompare@Index& (0+255),w,b
 23466  0054A2  257D               	addwf	StringCompare@String1& (0+255),w,b
 23467  0054A4  6EE1               	movwf	fsr1l,c
 23468  0054A6  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23469  0054A8  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23470  0054AA  6EE2               	movwf	fsr1h,c
 23471  0054AC  50DE               	movf	postinc2,w,c
 23472  0054AE  18E6               	xorwf	postinc1,w,c
 23473  0054B0  B4D8               	btfsc	status,2,c
 23474  0054B2  D003               	goto	l2201
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;sf.c: 84: {
 23478                           ;sf.c: 85: Result = 0;
 23479  0054B4  0E00               	movlw	0
 23480  0054B6  6F85               	movwf	StringCompare@Result& (0+255),b
 23481                           
 23482                           ;sf.c: 86: break;
 23483  0054B8  D008               	goto	u11540
 23484  0054BA                     l2201:
 23485                           
 23486                           ; BSR set to: 0
 23487                           
 23488                           ; BSR set to: 0
 23489  0054BA  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 23490  0054BC  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 23491  0054BE                     l2199:
 23492                           
 23493                           ; BSR set to: 0
 23494                           
 23495                           ; BSR set to: 0
 23496  0054BE  5181               	movf	StringCompare@Len& (0+255),w,b
 23497  0054C0  5D86               	subwf	StringCompare@Index& (0+255),w,b
 23498  0054C2  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 23499  0054C4  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23500  0054C6  A0D8               	btfss	status,0,c
 23501  0054C8  D7E5               	goto	l2200
 23502  0054CA                     u11540:
 23503                           
 23504                           ; BSR set to: 0
 23505                           ;sf.c: 87: }
 23506                           ;sf.c: 88: }
 23507                           ;sf.c: 91: return Result;
 23508                           
 23509                           ; BSR set to: 0
 23510  0054CA  5185               	movf	StringCompare@Result& (0+255),w,b
 23511  0054CC  0012               	return	
 23512  0054CE                     __end_of_StringCompare:
 23513                           	opt stack 0
 23514                           tosu	equ	0xFFF
 23515                           tosh	equ	0xFFE
 23516                           tosl	equ	0xFFD
 23517                           pclath	equ	0xFFA
 23518                           tblptru	equ	0xFF8
 23519                           tblptrh	equ	0xFF7
 23520                           tblptrl	equ	0xFF6
 23521                           tablat	equ	0xFF5
 23522                           prodh	equ	0xFF4
 23523                           prodl	equ	0xFF3
 23524                           intcon	equ	0xFF2
 23525                           intcon2	equ	0xFF1
 23526                           intcon3	equ	0xFF0
 23527                           indf0	equ	0xFEF
 23528                           postinc0	equ	0xFEE
 23529                           plusw0	equ	0xFEB
 23530                           fsr0h	equ	0xFEA
 23531                           fsr0l	equ	0xFE9
 23532                           wreg	equ	0xFE8
 23533                           indf1	equ	0xFE7
 23534                           postinc1	equ	0xFE6
 23535                           postdec1	equ	0xFE5
 23536                           plusw1	equ	0xFE3
 23537                           fsr1h	equ	0xFE2
 23538                           fsr1l	equ	0xFE1
 23539                           indf2	equ	0xFDF
 23540                           postinc2	equ	0xFDE
 23541                           postdec2	equ	0xFDD
 23542                           plusw2	equ	0xFDB
 23543                           fsr2h	equ	0xFDA
 23544                           fsr2l	equ	0xFD9
 23545                           status	equ	0xFD8
 23546                           
 23547 ;; *************** function _GetSmsSm *****************
 23548 ;; Defined at:
 23549 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23550 ;; Parameters:    Size  Location     Type
 23551 ;;		None
 23552 ;; Auto vars:     Size  Location     Type
 23553 ;;		None
 23554 ;; Return value:  Size  Location     Type
 23555 ;;                  1    wreg      void 
 23556 ;; Registers used:
 23557 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23558 ;; Tracked objects:
 23559 ;;		On entry : 0/0
 23560 ;;		On exit  : 0/0
 23561 ;;		Unchanged: 0/0
 23562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23567 ;;Total ram usage:        0 bytes
 23568 ;; Hardware stack levels used:    1
 23569 ;; Hardware stack levels required when called:   13
 23570 ;; This function calls:
 23571 ;;		_ClearBuffer
 23572 ;;		_GenerateEvt
 23573 ;;		_ReceiveEvt
 23574 ;;		_StringCopy
 23575 ;;		_Uart_WriteConstString
 23576 ;; This function is called by:
 23577 ;;		_Mdm_MainTask
 23578 ;; This function uses a non-reentrant model
 23579 ;;
 23580                           
 23581                           	psect	text110
 23582  002A60                     __ptext110:
 23583                           	opt stack 0
 23584  002A60                     _GetSmsSm:
 23585                           	opt stack 14
 23586                           
 23587                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23588                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;incstack = 0
 23592  002A60  0E03               	movlw	3
 23593  002A62  0100               	movlb	0	; () banked
 23594  002A64  19D6               	xorwf	_MdmStatus& (0+255),w,b
 23595  002A66  A4D8               	btfss	status,2,c
 23596  002A68  0012               	return	
 23597  002A6A  D084               	goto	l1062
 23598  002A6C                     
 23599                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 23600                           
 23601                           ; BSR set to: 0
 23602  002A6C  0E38               	movlw	low _GetSmsText
 23603  002A6E  0100               	movlb	0	; () banked
 23604  002A70  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23605  002A72  0E00               	movlw	high _GetSmsText
 23606  002A74  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23607  002A76  EC53  F02E         	call	_ReceiveEvt	;wreg free
 23608  002A7A  0900               	iorlw	0
 23609  002A7C  B4D8               	btfsc	status,2,c
 23610  002A7E  0012               	return	
 23611                           
 23612                           ;mdm_gsm_gprs.c: 578: {
 23613                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 23614  002A80  0E01               	movlw	1
 23615  002A82  0101               	movlb	1	; () banked
 23616  002A84  6FEC               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23617                           
 23618                           ; BSR set to: 1
 23619                           ;mdm_gsm_gprs.c: 581: }
 23620                           ;mdm_gsm_gprs.c: 582: break;
 23621  002A86  0012               	return	
 23622  002A88                     
 23623                           ; BSR set to: 1
 23624                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 23625                           
 23626                           ; BSR set to: 1
 23627  002A88  0EC1               	movlw	low STR_4
 23628  002A8A  0100               	movlb	0	; () banked
 23629  002A8C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23630  002A8E  0EFF               	movlw	high STR_4
 23631  002A90  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23632  002A92  0E01               	movlw	1
 23633  002A94  EC20  F02C         	call	_Uart_WriteConstString
 23634                           
 23635                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 23636  002A98  0E02               	movlw	2
 23637  002A9A  0101               	movlb	1	; () banked
 23638  002A9C  6FEC               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23639                           
 23640                           ;mdm_gsm_gprs.c: 589: break;
 23641  002A9E  0012               	return	
 23642  002AA0                     
 23643                           ; BSR set to: 1
 23644                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 23645                           
 23646                           ; BSR set to: 1
 23647  002AA0  0E3C               	movlw	low _NewStringReceived
 23648  002AA2  0100               	movlb	0	; () banked
 23649  002AA4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23650  002AA6  0E00               	movlw	high _NewStringReceived
 23651  002AA8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23652  002AAA  EC53  F02E         	call	_ReceiveEvt	;wreg free
 23653  002AAE  0900               	iorlw	0
 23654  002AB0  B4D8               	btfsc	status,2,c
 23655  002AB2  0012               	return	
 23656                           
 23657                           ;mdm_gsm_gprs.c: 594: {
 23658                           ;mdm_gsm_gprs.c: 595: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 23659  002AB4  CC58  FFE8         	movff	_RxBuffer,wreg
 23660  002AB8  0A2B               	xorlw	43
 23661  002ABA  A4D8               	btfss	status,2,c
 23662  002ABC  0012               	return	
 23663  002ABE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 23664  002AC2  0A43               	xorlw	67
 23665  002AC4  A4D8               	btfss	status,2,c
 23666  002AC6  0012               	return	
 23667  002AC8  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 23668  002ACC  0A4D               	xorlw	77
 23669  002ACE  A4D8               	btfss	status,2,c
 23670  002AD0  0012               	return	
 23671                           
 23672                           ;mdm_gsm_gprs.c: 596: {
 23673                           ;mdm_gsm_gprs.c: 598: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 23674  002AD2  0E00               	movlw	low _Mdm_SmsRx
 23675  002AD4  0100               	movlb	0	; () banked
 23676  002AD6  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23677  002AD8  0E07               	movlw	high _Mdm_SmsRx
 23678  002ADA  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23679  002ADC  0E00               	movlw	0
 23680  002ADE  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23681  002AE0  0E50               	movlw	80
 23682  002AE2  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23683  002AE4  EC75  F02D         	call	_ClearBuffer	;wreg free
 23684                           
 23685                           ;mdm_gsm_gprs.c: 599: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23686  002AE8  0E58               	movlw	low _RxBuffer
 23687  002AEA  0100               	movlb	0	; () banked
 23688  002AEC  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23689  002AEE  0E0C               	movlw	high _RxBuffer
 23690  002AF0  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23691  002AF2  0E00               	movlw	low _Mdm_SmsRx
 23692  002AF4  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23693  002AF6  0E07               	movlw	high _Mdm_SmsRx
 23694  002AF8  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23695  002AFA  C0CA  F081         	movff	_RxLen,StringCopy@Len
 23696  002AFE  C0CB  F082         	movff	_RxLen+1,StringCopy@Len+1
 23697  002B02  EC00  F028         	call	_StringCopy	;wreg free
 23698                           
 23699                           ;mdm_gsm_gprs.c: 601: Mdm_SmsRx.HeadLen = RxLen;
 23700  002B06  C0CA  F782         	movff	_RxLen,_Mdm_SmsRx+130
 23701                           
 23702                           ;mdm_gsm_gprs.c: 603: GetSmsState = GetSms_StoreText;
 23703  002B0A  0E03               	movlw	3
 23704  002B0C  0101               	movlb	1	; () banked
 23705  002B0E  6FEC               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23706                           
 23707                           ; BSR set to: 1
 23708                           ;mdm_gsm_gprs.c: 604: }
 23709                           ;mdm_gsm_gprs.c: 605: }
 23710                           ;mdm_gsm_gprs.c: 606: break;
 23711                           
 23712                           ; BSR set to: 1
 23713  002B10  0012               	return	
 23714  002B12                     
 23715                           ; BSR set to: 1
 23716                           ;mdm_gsm_gprs.c: 610: if (ReceiveEvt(&NewStringReceived))
 23717                           
 23718                           ; BSR set to: 1
 23719  002B12  0E3C               	movlw	low _NewStringReceived
 23720  002B14  0100               	movlb	0	; () banked
 23721  002B16  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23722  002B18  0E00               	movlw	high _NewStringReceived
 23723  002B1A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23724  002B1C  EC53  F02E         	call	_ReceiveEvt	;wreg free
 23725  002B20  0900               	iorlw	0
 23726  002B22  B4D8               	btfsc	status,2,c
 23727  002B24  0012               	return	
 23728                           
 23729                           ;mdm_gsm_gprs.c: 611: {
 23730                           ;mdm_gsm_gprs.c: 613: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 23731  002B26  0E50               	movlw	low (_Mdm_SmsRx+80)
 23732  002B28  0100               	movlb	0	; () banked
 23733  002B2A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23734  002B2C  0E07               	movlw	high (_Mdm_SmsRx+80)
 23735  002B2E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23736  002B30  0E00               	movlw	0
 23737  002B32  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23738  002B34  0E32               	movlw	50
 23739  002B36  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23740  002B38  EC75  F02D         	call	_ClearBuffer	;wreg free
 23741                           
 23742                           ;mdm_gsm_gprs.c: 614: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 23743  002B3C  0E58               	movlw	low _RxBuffer
 23744  002B3E  0100               	movlb	0	; () banked
 23745  002B40  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23746  002B42  0E0C               	movlw	high _RxBuffer
 23747  002B44  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23748  002B46  0E50               	movlw	low (_Mdm_SmsRx+80)
 23749  002B48  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23750  002B4A  0E07               	movlw	high (_Mdm_SmsRx+80)
 23751  002B4C  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23752  002B4E  C0CA  F081         	movff	_RxLen,StringCopy@Len
 23753  002B52  C0CB  F082         	movff	_RxLen+1,StringCopy@Len+1
 23754  002B56  EC00  F028         	call	_StringCopy	;wreg free
 23755                           
 23756                           ;mdm_gsm_gprs.c: 616: Mdm_SmsRx.TextLen = RxLen;
 23757  002B5A  C0CA  F783         	movff	_RxLen,_Mdm_SmsRx+131
 23758                           
 23759                           ;mdm_gsm_gprs.c: 618: GetSmsState = GetSms_CheckReq;
 23760  002B5E  0E00               	movlw	0
 23761  002B60  0101               	movlb	1	; () banked
 23762  002B62  6FEC               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23763                           
 23764                           ; BSR set to: 1
 23765                           ;mdm_gsm_gprs.c: 620: GenerateEvt(&SmsTxtReady);
 23766  002B64  0E37               	movlw	low _SmsTxtReady
 23767  002B66  0100               	movlb	0	; () banked
 23768  002B68  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23769  002B6A  0E00               	movlw	high _SmsTxtReady
 23770  002B6C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23771  002B6E  EC18  F030         	call	_GenerateEvt	;wreg free
 23772                           
 23773                           ;mdm_gsm_gprs.c: 626: }
 23774                           
 23775                           ;mdm_gsm_gprs.c: 625: break;
 23776                           
 23777                           ;mdm_gsm_gprs.c: 624: default:
 23778                           
 23779                           ;mdm_gsm_gprs.c: 621: }
 23780                           ;mdm_gsm_gprs.c: 622: break;
 23781  002B72  0012               	return	
 23782  002B74                     l1062:
 23783  002B74  0101               	movlb	1	; () banked
 23784  002B76  51EC               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 23785                           
 23786                           ; Switch size 1, requested type "space"
 23787                           ; Number of cases is 4, Range of values is 0 to 3
 23788                           ; switch strategies available:
 23789                           ; Name         Instructions Cycles
 23790                           ; simple_byte           13     7 (average)
 23791                           ;	Chosen strategy is simple_byte
 23792  002B78  0A00               	xorlw	0	; case 0
 23793  002B7A  B4D8               	btfsc	status,2,c
 23794  002B7C  D777               	goto	l1063
 23795  002B7E  0A01               	xorlw	1	; case 1
 23796  002B80  B4D8               	btfsc	status,2,c
 23797  002B82  D782               	goto	l1066
 23798  002B84  0A03               	xorlw	3	; case 2
 23799  002B86  B4D8               	btfsc	status,2,c
 23800  002B88  D78B               	goto	l1067
 23801  002B8A  0A01               	xorlw	1	; case 3
 23802  002B8C  A4D8               	btfss	status,2,c
 23803                           
 23804                           ; BSR set to: 1
 23805  002B8E  0012               	return	
 23806  002B90  D7C0               	goto	l1070
 23807  002B92                     __end_of_GetSmsSm:
 23808                           	opt stack 0
 23809                           tosu	equ	0xFFF
 23810                           tosh	equ	0xFFE
 23811                           tosl	equ	0xFFD
 23812                           pclath	equ	0xFFA
 23813                           tblptru	equ	0xFF8
 23814                           tblptrh	equ	0xFF7
 23815                           tblptrl	equ	0xFF6
 23816                           tablat	equ	0xFF5
 23817                           prodh	equ	0xFF4
 23818                           prodl	equ	0xFF3
 23819                           intcon	equ	0xFF2
 23820                           intcon2	equ	0xFF1
 23821                           intcon3	equ	0xFF0
 23822                           indf0	equ	0xFEF
 23823                           postinc0	equ	0xFEE
 23824                           plusw0	equ	0xFEB
 23825                           fsr0h	equ	0xFEA
 23826                           fsr0l	equ	0xFE9
 23827                           wreg	equ	0xFE8
 23828                           indf1	equ	0xFE7
 23829                           postinc1	equ	0xFE6
 23830                           postdec1	equ	0xFE5
 23831                           plusw1	equ	0xFE3
 23832                           fsr1h	equ	0xFE2
 23833                           fsr1l	equ	0xFE1
 23834                           indf2	equ	0xFDF
 23835                           postinc2	equ	0xFDE
 23836                           postdec2	equ	0xFDD
 23837                           plusw2	equ	0xFDB
 23838                           fsr2h	equ	0xFDA
 23839                           fsr2l	equ	0xFD9
 23840                           status	equ	0xFD8
 23841                           
 23842 ;; *************** function _ConfigureModem *****************
 23843 ;; Defined at:
 23844 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23845 ;; Parameters:    Size  Location     Type
 23846 ;;		None
 23847 ;; Auto vars:     Size  Location     Type
 23848 ;;		None
 23849 ;; Return value:  Size  Location     Type
 23850 ;;                  1    wreg      void 
 23851 ;; Registers used:
 23852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23853 ;; Tracked objects:
 23854 ;;		On entry : 0/0
 23855 ;;		On exit  : 0/0
 23856 ;;		Unchanged: 0/0
 23857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23862 ;;Total ram usage:        0 bytes
 23863 ;; Hardware stack levels used:    1
 23864 ;; Hardware stack levels required when called:   14
 23865 ;; This function calls:
 23866 ;;		_GenerateEvt
 23867 ;;		_UartSetConfigLow
 23868 ;;		_Uart_InitUartModule
 23869 ;;		_Uart_WriteConstString
 23870 ;; This function is called by:
 23871 ;;		_Mdm_MainTask
 23872 ;; This function uses a non-reentrant model
 23873 ;;
 23874                           
 23875                           	psect	text111
 23876  003754                     __ptext111:
 23877                           	opt stack 0
 23878  003754                     _ConfigureModem:
 23879                           	opt stack 13
 23880                           
 23881                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 23882                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 23883                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 23884                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 23885                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 23886                           
 23887                           ;incstack = 0
 23888  003754  D056               	goto	l1023
 23889  003756                     
 23890                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 23891  003756  0E02               	movlw	2
 23892  003758  0100               	movlb	0	; () banked
 23893  00375A  19D6               	xorwf	_MdmStatus& (0+255),w,b
 23894  00375C  A4D8               	btfss	status,2,c
 23895  00375E  0012               	return	
 23896                           
 23897                           ; BSR set to: 0
 23898                           ;mdm_gsm_gprs.c: 426: {
 23899                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 23900  003760  0E01               	movlw	1
 23901  003762  0101               	movlb	1	; () banked
 23902  003764  6FEE               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23903                           
 23904                           ; BSR set to: 1
 23905                           ;mdm_gsm_gprs.c: 429: }
 23906                           ;mdm_gsm_gprs.c: 430: break;
 23907  003766  0012               	return	
 23908  003768                     
 23909                           ; BSR set to: 1
 23910                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 23911                           
 23912                           ; BSR set to: 1
 23913  003768  0E80               	movlw	low STR_2
 23914  00376A  0100               	movlb	0	; () banked
 23915  00376C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23916  00376E  0EFF               	movlw	high STR_2
 23917  003770  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23918  003772  0E01               	movlw	1
 23919  003774  EC20  F02C         	call	_Uart_WriteConstString
 23920                           
 23921                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 23922  003778  EC15  F029         	call	_UartSetConfigLow	;wreg free
 23923                           
 23924                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 23925  00377C  0E34               	movlw	low _UartConfig
 23926  00377E  0100               	movlb	0	; () banked
 23927  003780  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 23928  003782  0E03               	movlw	high _UartConfig
 23929  003784  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 23930  003786  0E01               	movlw	1
 23931  003788  EC5E  F005         	call	_Uart_InitUartModule
 23932                           
 23933                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23934  00378C  0E03               	movlw	3
 23935  00378E  0103               	movlb	3	; () banked
 23936  003790  6F2B               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23937  003792  0EE8               	movlw	232
 23938  003794  6F2A               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23939                           
 23940                           ; BSR set to: 3
 23941                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 23942  003796  0E02               	movlw	2
 23943  003798  0101               	movlb	1	; () banked
 23944  00379A  6FED               	movwf	ConfigureModem@NextState& (0+255),b
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 23948  00379C  0E04               	movlw	4
 23949  00379E  6FEE               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23950                           
 23951                           ;mdm_gsm_gprs.c: 444: break;
 23952  0037A0  0012               	return	
 23953  0037A2                     
 23954                           ; BSR set to: 1
 23955                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 23956                           
 23957                           ; BSR set to: 1
 23958  0037A2  0EDE               	movlw	low STR_3
 23959  0037A4  0100               	movlb	0	; () banked
 23960  0037A6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23961  0037A8  0EFF               	movlw	high STR_3
 23962  0037AA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23963  0037AC  0E01               	movlw	1
 23964  0037AE  EC20  F02C         	call	_Uart_WriteConstString
 23965                           
 23966                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23967  0037B2  0E03               	movlw	3
 23968  0037B4  0103               	movlb	3	; () banked
 23969  0037B6  6F2B               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23970  0037B8  0EE8               	movlw	232
 23971  0037BA  6F2A               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23972                           
 23973                           ; BSR set to: 3
 23974                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 23975  0037BC  0E05               	movlw	5
 23976  0037BE  0101               	movlb	1	; () banked
 23977  0037C0  6FED               	movwf	ConfigureModem@NextState& (0+255),b
 23978                           
 23979                           ; BSR set to: 1
 23980                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 23981  0037C2  0E04               	movlw	4
 23982  0037C4  6FEE               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23983                           
 23984                           ;mdm_gsm_gprs.c: 454: break;
 23985  0037C6  0012               	return	
 23986  0037C8                     
 23987                           ; BSR set to: 1
 23988                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 23989                           
 23990                           ; BSR set to: 1
 23991  0037C8  0103               	movlb	3	; () banked
 23992  0037CA  4B28               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 23993  0037CC  2B29               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 23994                           
 23995                           ; BSR set to: 3
 23996                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 23997  0037CE  512A               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 23998  0037D0  5D28               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 23999  0037D2  512B               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24000  0037D4  5929               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24001  0037D6  A0D8               	btfss	status,0,c
 24002  0037D8  0012               	return	
 24003                           
 24004                           ; BSR set to: 3
 24005                           ;mdm_gsm_gprs.c: 461: {
 24006                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 24007  0037DA  0E00               	movlw	0
 24008  0037DC  6F29               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24009  0037DE  0E00               	movlw	0
 24010  0037E0  6F28               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24011                           
 24012                           ; BSR set to: 3
 24013                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 24014  0037E2  C1ED  F1EE         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24015                           
 24016                           ; BSR set to: 3
 24017                           ;mdm_gsm_gprs.c: 466: }
 24018                           ;mdm_gsm_gprs.c: 467: break;
 24019  0037E6  0012               	return	
 24020  0037E8                     
 24021                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 24022                           
 24023                           ; BSR set to: 3
 24024  0037E8  0E03               	movlw	3
 24025  0037EA  0100               	movlb	0	; () banked
 24026  0037EC  6FD6               	movwf	_MdmStatus& (0+255),b
 24027                           
 24028                           ; BSR set to: 0
 24029                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 24030  0037EE  0EFE               	movlw	low _MdmStsReady
 24031  0037F0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24032  0037F2  0E01               	movlw	high _MdmStsReady
 24033  0037F4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24034  0037F6  EC18  F030         	call	_GenerateEvt	;wreg free
 24035                           
 24036                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 24037  0037FA  0E06               	movlw	6
 24038  0037FC  0101               	movlb	1	; () banked
 24039  0037FE  6FEE               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24040                           
 24041                           ; BSR set to: 1
 24042                           ;mdm_gsm_gprs.c: 483: }
 24043                           
 24044                           ; BSR set to: 1
 24045                           ;mdm_gsm_gprs.c: 482: break;
 24046                           
 24047                           ;mdm_gsm_gprs.c: 481: default:
 24048                           
 24049                           ; BSR set to: 1
 24050                           ;mdm_gsm_gprs.c: 479: break;
 24051                           
 24052                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 24053                           
 24054                           ;mdm_gsm_gprs.c: 476: break;
 24055  003800  0012               	return	
 24056  003802                     l1023:
 24057                           
 24058                           ; BSR set to: 1
 24059  003802  0101               	movlb	1	; () banked
 24060  003804  51EE               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 24061                           
 24062                           ; Switch size 1, requested type "space"
 24063                           ; Number of cases is 6, Range of values is 0 to 6
 24064                           ; switch strategies available:
 24065                           ; Name         Instructions Cycles
 24066                           ; simple_byte           19    10 (average)
 24067                           ;	Chosen strategy is simple_byte
 24068  003806  0A00               	xorlw	0	; case 0
 24069  003808  B4D8               	btfsc	status,2,c
 24070  00380A  D7A5               	goto	l1024
 24071  00380C  0A01               	xorlw	1	; case 1
 24072  00380E  B4D8               	btfsc	status,2,c
 24073  003810  D7AB               	goto	l1027
 24074  003812  0A03               	xorlw	3	; case 2
 24075  003814  B4D8               	btfsc	status,2,c
 24076  003816  D7C5               	goto	l1028
 24077  003818  0A06               	xorlw	6	; case 4
 24078  00381A  B4D8               	btfsc	status,2,c
 24079  00381C  D7D5               	goto	l1029
 24080  00381E  0A01               	xorlw	1	; case 5
 24081  003820  B4D8               	btfsc	status,2,c
 24082  003822  D7E2               	goto	l1031
 24083  003824  0A03               	xorlw	3	; case 6
 24084  003826  0012               	return	
 24085  003828                     __end_of_ConfigureModem:
 24086                           	opt stack 0
 24087                           tosu	equ	0xFFF
 24088                           tosh	equ	0xFFE
 24089                           tosl	equ	0xFFD
 24090                           pclath	equ	0xFFA
 24091                           tblptru	equ	0xFF8
 24092                           tblptrh	equ	0xFF7
 24093                           tblptrl	equ	0xFF6
 24094                           tablat	equ	0xFF5
 24095                           prodh	equ	0xFF4
 24096                           prodl	equ	0xFF3
 24097                           intcon	equ	0xFF2
 24098                           intcon2	equ	0xFF1
 24099                           intcon3	equ	0xFF0
 24100                           indf0	equ	0xFEF
 24101                           postinc0	equ	0xFEE
 24102                           plusw0	equ	0xFEB
 24103                           fsr0h	equ	0xFEA
 24104                           fsr0l	equ	0xFE9
 24105                           wreg	equ	0xFE8
 24106                           indf1	equ	0xFE7
 24107                           postinc1	equ	0xFE6
 24108                           postdec1	equ	0xFE5
 24109                           plusw1	equ	0xFE3
 24110                           fsr1h	equ	0xFE2
 24111                           fsr1l	equ	0xFE1
 24112                           indf2	equ	0xFDF
 24113                           postinc2	equ	0xFDE
 24114                           postdec2	equ	0xFDD
 24115                           plusw2	equ	0xFDB
 24116                           fsr2h	equ	0xFDA
 24117                           fsr2l	equ	0xFD9
 24118                           status	equ	0xFD8
 24119                           
 24120 ;; *************** function _Uart_InitUartModule *****************
 24121 ;; Defined at:
 24122 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24123 ;; Parameters:    Size  Location     Type
 24124 ;;  Module          1    wreg     unsigned char 
 24125 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24126 ;;		 -> UartConfig(21), 
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;  Module          1   65[BANK0 ] unsigned char 
 24129 ;; Return value:  Size  Location     Type
 24130 ;;                  1    wreg      void 
 24131 ;; Registers used:
 24132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24133 ;; Tracked objects:
 24134 ;;		On entry : 0/0
 24135 ;;		On exit  : 0/0
 24136 ;;		Unchanged: 0/0
 24137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24142 ;;Total ram usage:        5 bytes
 24143 ;; Hardware stack levels used:    1
 24144 ;; Hardware stack levels required when called:   13
 24145 ;; This function calls:
 24146 ;;		_SetUartBaudRate
 24147 ;; This function is called by:
 24148 ;;		_ConfigureModem
 24149 ;;		_Mdm_MainTask
 24150 ;; This function uses a non-reentrant model
 24151 ;;
 24152                           
 24153                           	psect	text112
 24154  000ABC                     __ptext112:
 24155                           	opt stack 0
 24156  000ABC                     _Uart_InitUartModule:
 24157                           	opt stack 14
 24158                           
 24159                           ;incstack = 0
 24160                           ;Uart_InitUartModule@Module stored from wreg
 24161  000ABC  0100               	movlb	0	; () banked
 24162  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24163                           
 24164                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24165  000AC0  0100               	movlb	0	; () banked
 24166  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24167  000AC4  A4D8               	btfss	status,2,c
 24168  000AC6  D0BE               	goto	l668
 24169                           
 24170                           ; BSR set to: 0
 24171                           ;uart_drv.c: 291: {
 24172                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24173  000AC8  9C94               	bcf	3988,6,c	;volatile
 24174                           
 24175                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24176  000ACA  8E94               	bsf	3988,7,c	;volatile
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24180  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24181  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24182  000AD4  0E01               	movlw	1
 24183  000AD6  EC94  F014         	call	_SetUartBaudRate
 24184                           
 24185                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24186  000ADA  0E00               	movlw	0
 24187  000ADC  6EAD               	movwf	4013,c	;volatile
 24188                           
 24189                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24190  000ADE  0100               	movlb	0	; () banked
 24191  000AE0  EE20 F004          	lfsr	2,4
 24192  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24193  000AE6  26D9               	addwf	fsr2l,f,c
 24194  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24195  000AEA  22DA               	addwfc	fsr2h,f,c
 24196  000AEC  50DF               	movf	indf2,w,c
 24197  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24198  000AF0  0E06               	movlw	6
 24199  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24200  000AF4                     u11425:
 24201  000AF4  90D8               	bcf	status,0,c
 24202  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24203  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24204  000AFA  D7FC               	goto	u11425
 24205  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24206  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24207                           
 24208                           ; BSR set to: 0
 24209                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24210  000B00  EE20 F006          	lfsr	2,6
 24211  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24212  000B06  26D9               	addwf	fsr2l,f,c
 24213  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24214  000B0A  22DA               	addwfc	fsr2h,f,c
 24215  000B0C  50DF               	movf	indf2,w,c
 24216  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24217  000B10  0E05               	movlw	5
 24218  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24219  000B14                     u11435:
 24220  000B14  90D8               	bcf	status,0,c
 24221  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24222  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24223  000B1A  D7FC               	goto	u11435
 24224  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24225  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24226                           
 24227                           ; BSR set to: 0
 24228                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24229  000B20  EE20 F001          	lfsr	2,1
 24230  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24231  000B26  26D9               	addwf	fsr2l,f,c
 24232  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24233  000B2A  22DA               	addwfc	fsr2h,f,c
 24234  000B2C  50DF               	movf	indf2,w,c
 24235  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24236  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24237  000B32  0BF0               	andlw	240
 24238  000B34  12AD               	iorwf	4013,f,c	;volatile
 24239                           
 24240                           ; BSR set to: 0
 24241                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24242  000B36  EE20 F008          	lfsr	2,8
 24243  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24244  000B3C  26D9               	addwf	fsr2l,f,c
 24245  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24246  000B40  22DA               	addwfc	fsr2h,f,c
 24247  000B42  50DF               	movf	indf2,w,c
 24248  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24249  000B46  90D8               	bcf	status,0,c
 24250  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24251  000B4A  90D8               	bcf	status,0,c
 24252  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24253  000B4E  90D8               	bcf	status,0,c
 24254  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24255  000B52  12AD               	iorwf	4013,f,c	;volatile
 24256                           
 24257                           ; BSR set to: 0
 24258                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24259  000B54  EE20 F003          	lfsr	2,3
 24260  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24261  000B5A  26D9               	addwf	fsr2l,f,c
 24262  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24263  000B5E  22DA               	addwfc	fsr2h,f,c
 24264  000B60  50DF               	movf	indf2,w,c
 24265  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24266  000B64  90D8               	bcf	status,0,c
 24267  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24268  000B68  90D8               	bcf	status,0,c
 24269  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24270  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24271                           
 24272                           ; BSR set to: 0
 24273                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24274  000B6E  0E00               	movlw	0
 24275  000B70  6EAC               	movwf	4012,c	;volatile
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24279  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24280  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24281  000B7A  50DF               	movf	indf2,w,c
 24282  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24283  000B7E  0E00               	movlw	0
 24284  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24285  000B82  0E80               	movlw	128
 24286  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24287  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24288  000B88  12AC               	iorwf	4012,f,c	;volatile
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24292  000B8A  EE20 F005          	lfsr	2,5
 24293  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24294  000B90  26D9               	addwf	fsr2l,f,c
 24295  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24296  000B94  22DA               	addwfc	fsr2h,f,c
 24297  000B96  50DF               	movf	indf2,w,c
 24298  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24299  000B9A  0E06               	movlw	6
 24300  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24301  000B9E                     u11445:
 24302  000B9E  90D8               	bcf	status,0,c
 24303  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24304  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24305  000BA4  D7FC               	goto	u11445
 24306  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24307  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24308                           
 24309                           ; BSR set to: 0
 24310                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24311  000BAA  EE20 F007          	lfsr	2,7
 24312  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24313  000BB0  26D9               	addwf	fsr2l,f,c
 24314  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24315  000BB4  22DA               	addwfc	fsr2h,f,c
 24316  000BB6  50DF               	movf	indf2,w,c
 24317  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24318  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24319  000BBC  0BF0               	andlw	240
 24320  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24321                           
 24322                           ; BSR set to: 0
 24323                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24324  000BC0  0E00               	movlw	0
 24325  000BC2  6E7E               	movwf	3966,c	;volatile
 24326                           
 24327                           ; BSR set to: 0
 24328                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24329  000BC4  EE20 F002          	lfsr	2,2
 24330  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24331  000BCA  26D9               	addwf	fsr2l,f,c
 24332  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24333  000BCE  22DA               	addwfc	fsr2h,f,c
 24334  000BD0  50DF               	movf	indf2,w,c
 24335  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24336  000BD4  90D8               	bcf	status,0,c
 24337  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24338  000BD8  90D8               	bcf	status,0,c
 24339  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24340  000BDC  90D8               	bcf	status,0,c
 24341  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24342  000BE0  127E               	iorwf	3966,f,c	;volatile
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24346  000BE2  EE20 F00A          	lfsr	2,10
 24347  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24348  000BE8  26D9               	addwf	fsr2l,f,c
 24349  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24350  000BEC  22DA               	addwfc	fsr2h,f,c
 24351  000BEE  50DF               	movf	indf2,w,c
 24352  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24353  000BF2  90D8               	bcf	status,0,c
 24354  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24355  000BF6  127E               	iorwf	3966,f,c	;volatile
 24356                           
 24357                           ; BSR set to: 0
 24358                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24359  000BF8  EE20 F009          	lfsr	2,9
 24360  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24361  000BFE  26D9               	addwf	fsr2l,f,c
 24362  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24363  000C02  22DA               	addwfc	fsr2h,f,c
 24364  000C04  50DF               	movf	indf2,w,c
 24365  000C06  127E               	iorwf	3966,f,c	;volatile
 24366                           
 24367                           ; BSR set to: 0
 24368                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24369  000C08  EE20 F00B          	lfsr	2,11
 24370  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24371  000C0E  26D9               	addwf	fsr2l,f,c
 24372  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24373  000C12  22DA               	addwfc	fsr2h,f,c
 24374  000C14  50DF               	movf	indf2,w,c
 24375  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24376  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24377  000C1A  509D               	movf	3997,w,c	;volatile
 24378  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24379  000C1E  0BEF               	andlw	-17
 24380  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24381  000C22  6E9D               	movwf	3997,c	;volatile
 24382                           
 24383                           ; BSR set to: 0
 24384                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24385  000C24  EE20 F00C          	lfsr	2,12
 24386  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24387  000C2A  26D9               	addwf	fsr2l,f,c
 24388  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24389  000C2E  22DA               	addwfc	fsr2h,f,c
 24390  000C30  50DF               	movf	indf2,w,c
 24391  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24392  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24393  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24394  000C38  509D               	movf	3997,w,c	;volatile
 24395  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24396  000C3C  0BDF               	andlw	-33
 24397  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24398  000C40  6E9D               	movwf	3997,c	;volatile
 24399                           
 24400                           ;uart_drv.c: 326: }
 24401  000C42  0012               	return	
 24402  000C44                     l668:
 24403                           
 24404                           ; BSR set to: 0
 24405                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24406                           
 24407                           ; BSR set to: 0
 24408  000C44  0E02               	movlw	2
 24409  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24410  000C48  A4D8               	btfss	status,2,c
 24411  000C4A  0012               	return	
 24412                           
 24413                           ; BSR set to: 0
 24414                           ;uart_drv.c: 328: {
 24415                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24416  000C4C  9094               	bcf	3988,0,c	;volatile
 24417                           
 24418                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24419  000C4E  8294               	bsf	3988,1,c	;volatile
 24420                           
 24421                           ; BSR set to: 0
 24422                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24423  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24424  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24425  000C58  0E02               	movlw	2
 24426  000C5A  EC94  F014         	call	_SetUartBaudRate
 24427                           
 24428                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24429  000C5E  0E00               	movlw	0
 24430  000C60  6EA8               	movwf	4008,c	;volatile
 24431                           
 24432                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24433  000C62  0100               	movlb	0	; () banked
 24434  000C64  EE20 F004          	lfsr	2,4
 24435  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24436  000C6A  26D9               	addwf	fsr2l,f,c
 24437  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24438  000C6E  22DA               	addwfc	fsr2h,f,c
 24439  000C70  50DF               	movf	indf2,w,c
 24440  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24441  000C74  0E06               	movlw	6
 24442  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24443  000C78                     u11465:
 24444  000C78  90D8               	bcf	status,0,c
 24445  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24446  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24447  000C7E  D7FC               	goto	u11465
 24448  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24449  000C82  12A8               	iorwf	4008,f,c	;volatile
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24453  000C84  EE20 F006          	lfsr	2,6
 24454  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24455  000C8A  26D9               	addwf	fsr2l,f,c
 24456  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24457  000C8E  22DA               	addwfc	fsr2h,f,c
 24458  000C90  50DF               	movf	indf2,w,c
 24459  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24460  000C94  0E05               	movlw	5
 24461  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24462  000C98                     u11475:
 24463  000C98  90D8               	bcf	status,0,c
 24464  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24465  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24466  000C9E  D7FC               	goto	u11475
 24467  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24468  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24469                           
 24470                           ; BSR set to: 0
 24471                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24472  000CA4  EE20 F001          	lfsr	2,1
 24473  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24474  000CAA  26D9               	addwf	fsr2l,f,c
 24475  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24476  000CAE  22DA               	addwfc	fsr2h,f,c
 24477  000CB0  50DF               	movf	indf2,w,c
 24478  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24479  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24480  000CB6  0BF0               	andlw	240
 24481  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24482                           
 24483                           ; BSR set to: 0
 24484                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24485  000CBA  EE20 F008          	lfsr	2,8
 24486  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24487  000CC0  26D9               	addwf	fsr2l,f,c
 24488  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24489  000CC4  22DA               	addwfc	fsr2h,f,c
 24490  000CC6  50DF               	movf	indf2,w,c
 24491  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24492  000CCA  90D8               	bcf	status,0,c
 24493  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24494  000CCE  90D8               	bcf	status,0,c
 24495  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24496  000CD2  90D8               	bcf	status,0,c
 24497  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24498  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24499                           
 24500                           ; BSR set to: 0
 24501                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24502  000CD8  EE20 F003          	lfsr	2,3
 24503  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24504  000CDE  26D9               	addwf	fsr2l,f,c
 24505  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24506  000CE2  22DA               	addwfc	fsr2h,f,c
 24507  000CE4  50DF               	movf	indf2,w,c
 24508  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24509  000CE8  90D8               	bcf	status,0,c
 24510  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24511  000CEC  90D8               	bcf	status,0,c
 24512  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24513  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24514                           
 24515                           ; BSR set to: 0
 24516                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24517  000CF2  0E00               	movlw	0
 24518  000CF4  6E9C               	movwf	3996,c	;volatile
 24519                           
 24520                           ; BSR set to: 0
 24521                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24522  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24523  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24524  000CFE  50DF               	movf	indf2,w,c
 24525  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24526  000D02  0E00               	movlw	0
 24527  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24528  000D06  0E80               	movlw	128
 24529  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24530  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24531  000D0C  129C               	iorwf	3996,f,c	;volatile
 24532                           
 24533                           ; BSR set to: 0
 24534                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24535  000D0E  EE20 F005          	lfsr	2,5
 24536  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24537  000D14  26D9               	addwf	fsr2l,f,c
 24538  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24539  000D18  22DA               	addwfc	fsr2h,f,c
 24540  000D1A  50DF               	movf	indf2,w,c
 24541  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24542  000D1E  0E06               	movlw	6
 24543  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24544  000D22                     u11485:
 24545  000D22  90D8               	bcf	status,0,c
 24546  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24547  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24548  000D28  D7FC               	goto	u11485
 24549  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24550  000D2C  129C               	iorwf	3996,f,c	;volatile
 24551                           
 24552                           ; BSR set to: 0
 24553                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24554  000D2E  EE20 F007          	lfsr	2,7
 24555  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24556  000D34  26D9               	addwf	fsr2l,f,c
 24557  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24558  000D38  22DA               	addwfc	fsr2h,f,c
 24559  000D3A  50DF               	movf	indf2,w,c
 24560  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24561  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24562  000D40  0BF0               	andlw	240
 24563  000D42  129C               	iorwf	3996,f,c	;volatile
 24564                           
 24565                           ; BSR set to: 0
 24566                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24567  000D44  0E00               	movlw	0
 24568  000D46  6E7C               	movwf	3964,c	;volatile
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24572  000D48  EE20 F002          	lfsr	2,2
 24573  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24574  000D4E  26D9               	addwf	fsr2l,f,c
 24575  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24576  000D52  22DA               	addwfc	fsr2h,f,c
 24577  000D54  50DF               	movf	indf2,w,c
 24578  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24579  000D58  90D8               	bcf	status,0,c
 24580  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24581  000D5C  90D8               	bcf	status,0,c
 24582  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24583  000D60  90D8               	bcf	status,0,c
 24584  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24585  000D64  127C               	iorwf	3964,f,c	;volatile
 24586                           
 24587                           ; BSR set to: 0
 24588                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24589  000D66  EE20 F00A          	lfsr	2,10
 24590  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24591  000D6C  26D9               	addwf	fsr2l,f,c
 24592  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24593  000D70  22DA               	addwfc	fsr2h,f,c
 24594  000D72  50DF               	movf	indf2,w,c
 24595  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24596  000D76  90D8               	bcf	status,0,c
 24597  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24598  000D7A  127C               	iorwf	3964,f,c	;volatile
 24599                           
 24600                           ; BSR set to: 0
 24601                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24602  000D7C  EE20 F009          	lfsr	2,9
 24603  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24604  000D82  26D9               	addwf	fsr2l,f,c
 24605  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24606  000D86  22DA               	addwfc	fsr2h,f,c
 24607  000D88  50DF               	movf	indf2,w,c
 24608  000D8A  127C               	iorwf	3964,f,c	;volatile
 24609                           
 24610                           ; BSR set to: 0
 24611                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24612  000D8C  EE20 F00B          	lfsr	2,11
 24613  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24614  000D92  26D9               	addwf	fsr2l,f,c
 24615  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24616  000D96  22DA               	addwfc	fsr2h,f,c
 24617  000D98  50DF               	movf	indf2,w,c
 24618  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24619  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24620  000D9E  50A3               	movf	4003,w,c	;volatile
 24621  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24622  000DA2  0BEF               	andlw	-17
 24623  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24624  000DA6  6EA3               	movwf	4003,c	;volatile
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24628  000DA8  EE20 F00C          	lfsr	2,12
 24629  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24630  000DAE  26D9               	addwf	fsr2l,f,c
 24631  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24632  000DB2  22DA               	addwfc	fsr2h,f,c
 24633  000DB4  50DF               	movf	indf2,w,c
 24634  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24635  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24636  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24637  000DBC  50A3               	movf	4003,w,c	;volatile
 24638  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24639  000DC0  0BDF               	andlw	-33
 24640  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24641  000DC4  6EA3               	movwf	4003,c	;volatile
 24642                           
 24643                           ; BSR set to: 0
 24644  000DC6  0012               	return	
 24645  000DC8                     __end_of_Uart_InitUartModule:
 24646                           	opt stack 0
 24647                           tosu	equ	0xFFF
 24648                           tosh	equ	0xFFE
 24649                           tosl	equ	0xFFD
 24650                           pclath	equ	0xFFA
 24651                           tblptru	equ	0xFF8
 24652                           tblptrh	equ	0xFF7
 24653                           tblptrl	equ	0xFF6
 24654                           tablat	equ	0xFF5
 24655                           prodh	equ	0xFF4
 24656                           prodl	equ	0xFF3
 24657                           intcon	equ	0xFF2
 24658                           intcon2	equ	0xFF1
 24659                           intcon3	equ	0xFF0
 24660                           indf0	equ	0xFEF
 24661                           postinc0	equ	0xFEE
 24662                           plusw0	equ	0xFEB
 24663                           fsr0h	equ	0xFEA
 24664                           fsr0l	equ	0xFE9
 24665                           wreg	equ	0xFE8
 24666                           indf1	equ	0xFE7
 24667                           postinc1	equ	0xFE6
 24668                           postdec1	equ	0xFE5
 24669                           plusw1	equ	0xFE3
 24670                           fsr1h	equ	0xFE2
 24671                           fsr1l	equ	0xFE1
 24672                           indf2	equ	0xFDF
 24673                           postinc2	equ	0xFDE
 24674                           postdec2	equ	0xFDD
 24675                           plusw2	equ	0xFDB
 24676                           fsr2h	equ	0xFDA
 24677                           fsr2l	equ	0xFD9
 24678                           status	equ	0xFD8
 24679                           
 24680 ;; *************** function _SetUartBaudRate *****************
 24681 ;; Defined at:
 24682 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24683 ;; Parameters:    Size  Location     Type
 24684 ;;  Module          1    wreg     unsigned char 
 24685 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24686 ;;		 -> UartConfig(21), 
 24687 ;; Auto vars:     Size  Location     Type
 24688 ;;  Module          1   57[BANK0 ] unsigned char 
 24689 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24690 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  1    wreg      void 
 24693 ;; Registers used:
 24694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24695 ;; Tracked objects:
 24696 ;;		On entry : 0/0
 24697 ;;		On exit  : 0/0
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24701 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24703 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24704 ;;Total ram usage:        7 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:   12
 24707 ;; This function calls:
 24708 ;;		___lldiv
 24709 ;;		___lmul
 24710 ;; This function is called by:
 24711 ;;		_Uart_InitUartModule
 24712 ;; This function uses a non-reentrant model
 24713 ;;
 24714                           
 24715                           	psect	text113
 24716  002928                     __ptext113:
 24717                           	opt stack 0
 24718  002928                     _SetUartBaudRate:
 24719                           	opt stack 14
 24720                           
 24721                           ; BSR set to: 0
 24722                           ;incstack = 0
 24723                           ;SetUartBaudRate@Module stored from wreg
 24724  002928  0100               	movlb	0	; () banked
 24725  00292A  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 24726                           
 24727                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 24728  00292C  0E00               	movlw	0
 24729  00292E  0100               	movlb	0	; () banked
 24730  002930  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24731  002932  0E00               	movlw	0
 24732  002934  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24733                           
 24734                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 24735  002936  0E00               	movlw	0
 24736  002938  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24737                           
 24738                           ; BSR set to: 0
 24739                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 24740  00293A  EE20 F002          	lfsr	2,2
 24741  00293E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24742  002940  26D9               	addwf	fsr2l,f,c
 24743  002942  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24744  002944  22DA               	addwfc	fsr2h,f,c
 24745  002946  50DF               	movf	indf2,w,c
 24746  002948  A4D8               	btfss	status,2,c
 24747  00294A  D00B               	goto	l625
 24748                           
 24749                           ; BSR set to: 0
 24750  00294C  EE20 F002          	lfsr	2,2
 24751  002950  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24752  002952  26D9               	addwf	fsr2l,f,c
 24753  002954  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24754  002956  22DA               	addwfc	fsr2h,f,c
 24755  002958  50DF               	movf	indf2,w,c
 24756  00295A  A4D8               	btfss	status,2,c
 24757  00295C  D002               	goto	l625
 24758                           
 24759                           ; BSR set to: 0
 24760                           ;uart_drv.c: 128: {
 24761                           ;uart_drv.c: 129: DivisionFactor = 64;
 24762  00295E  0E40               	movlw	64
 24763  002960  D039               	goto	L30
 24764  002962                     l625:
 24765                           
 24766                           ; BSR set to: 0
 24767                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 24768                           
 24769                           ; BSR set to: 0
 24770  002962  EE20 F002          	lfsr	2,2
 24771  002966  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24772  002968  26D9               	addwf	fsr2l,f,c
 24773  00296A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24774  00296C  22DA               	addwfc	fsr2h,f,c
 24775  00296E  04DE               	decf	postinc2,w,c
 24776  002970  A4D8               	btfss	status,2,c
 24777  002972  D009               	goto	l627
 24778                           
 24779                           ; BSR set to: 0
 24780  002974  EE20 F002          	lfsr	2,2
 24781  002978  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24782  00297A  26D9               	addwf	fsr2l,f,c
 24783  00297C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24784  00297E  22DA               	addwfc	fsr2h,f,c
 24785  002980  50DF               	movf	indf2,w,c
 24786  002982  B4D8               	btfsc	status,2,c
 24787  002984  D012               	goto	u10840
 24788  002986                     l627:
 24789                           
 24790                           ; BSR set to: 0
 24791                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24792                           
 24793                           ; BSR set to: 0
 24794  002986  EE20 F002          	lfsr	2,2
 24795  00298A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24796  00298C  26D9               	addwf	fsr2l,f,c
 24797  00298E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24798  002990  22DA               	addwfc	fsr2h,f,c
 24799  002992  50DF               	movf	indf2,w,c
 24800  002994  A4D8               	btfss	status,2,c
 24801  002996  D00B               	goto	l629
 24802                           
 24803                           ; BSR set to: 0
 24804  002998  EE20 F002          	lfsr	2,2
 24805  00299C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24806  00299E  26D9               	addwf	fsr2l,f,c
 24807  0029A0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24808  0029A2  22DA               	addwfc	fsr2h,f,c
 24809  0029A4  04DE               	decf	postinc2,w,c
 24810  0029A6  A4D8               	btfss	status,2,c
 24811  0029A8  D002               	goto	l629
 24812  0029AA                     u10840:
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;uart_drv.c: 136: {
 24816                           ;uart_drv.c: 137: DivisionFactor = 16;
 24817  0029AA  0E10               	movlw	16
 24818  0029AC  D013               	goto	L30
 24819  0029AE                     l629:
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24823                           
 24824                           ; BSR set to: 0
 24825  0029AE  EE20 F002          	lfsr	2,2
 24826  0029B2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24827  0029B4  26D9               	addwf	fsr2l,f,c
 24828  0029B6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24829  0029B8  22DA               	addwfc	fsr2h,f,c
 24830  0029BA  04DE               	decf	postinc2,w,c
 24831  0029BC  A4D8               	btfss	status,2,c
 24832  0029BE  D00B               	goto	l631
 24833                           
 24834                           ; BSR set to: 0
 24835  0029C0  EE20 F002          	lfsr	2,2
 24836  0029C4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24837  0029C6  26D9               	addwf	fsr2l,f,c
 24838  0029C8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24839  0029CA  22DA               	addwfc	fsr2h,f,c
 24840  0029CC  04DE               	decf	postinc2,w,c
 24841  0029CE  A4D8               	btfss	status,2,c
 24842  0029D0  D002               	goto	l631
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;uart_drv.c: 140: {
 24846                           ;uart_drv.c: 141: DivisionFactor = 4;
 24847  0029D2  0E04               	movlw	4
 24848  0029D4                     L30:
 24849  0029D4  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24850  0029D6                     l631:
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;uart_drv.c: 146: }
 24854                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 24855                           
 24856                           ; BSR set to: 0
 24857                           
 24858                           ; BSR set to: 0
 24859                           
 24860                           ; BSR set to: 0
 24861                           
 24862                           ; BSR set to: 0
 24863                           
 24864                           ;uart_drv.c: 143: else
 24865                           ;uart_drv.c: 144: {
 24866                           
 24867                           ; BSR set to: 0
 24868  0029D6  EE20 F00D          	lfsr	2,13
 24869  0029DA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24870  0029DC  26D9               	addwf	fsr2l,f,c
 24871  0029DE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24872  0029E0  22DA               	addwfc	fsr2h,f,c
 24873  0029E2  CFDE F089          	movff	postinc2,___lldiv@dividend
 24874  0029E6  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 24875  0029EA  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 24876  0029EE  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 24877  0029F2  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 24878  0029F4  6F7D               	movwf	___lmul@multiplier& (0+255),b
 24879  0029F6  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24880  0029F8  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24881  0029FA  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 24882  0029FC  EE20 F011          	lfsr	2,17
 24883  002A00  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24884  002A02  26D9               	addwf	fsr2l,f,c
 24885  002A04  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24886  002A06  22DA               	addwfc	fsr2h,f,c
 24887  002A08  CFDE F081          	movff	postinc2,___lmul@multiplicand
 24888  002A0C  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 24889  002A10  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 24890  002A14  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 24891  002A18  ECE9  F028         	call	___lmul	;wreg free
 24892  002A1C  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 24893  002A20  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 24894  002A24  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 24895  002A28  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 24896  002A2C  EC85  F025         	call	___lldiv	;wreg free
 24897  002A30  0EFF               	movlw	255
 24898  002A32  0100               	movlb	0	; () banked
 24899  002A34  2589               	addwf	?___lldiv& (0+255),w,b
 24900  002A36  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24901  002A38  0EFF               	movlw	255
 24902  002A3A  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 24903  002A3C  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 24907  002A3E  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 24908  002A40  A4D8               	btfss	status,2,c
 24909  002A42  D005               	goto	l633
 24910                           
 24911                           ; BSR set to: 0
 24912                           ;uart_drv.c: 152: {
 24913                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24914  002A44  0E00               	movlw	0
 24915  002A46  6E7F               	movwf	3967,c	;volatile
 24916                           
 24917                           ; BSR set to: 0
 24918                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24919  002A48  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 24920                           
 24921                           ;uart_drv.c: 156: }
 24922  002A4C  0012               	return	
 24923  002A4E                     l633:
 24924                           
 24925                           ; BSR set to: 0
 24926                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 24927                           
 24928                           ; BSR set to: 0
 24929  002A4E  0E02               	movlw	2
 24930  002A50  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 24931  002A52  A4D8               	btfss	status,2,c
 24932  002A54  0012               	return	
 24933                           
 24934                           ; BSR set to: 0
 24935                           ;uart_drv.c: 158: {
 24936                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24937  002A56  0E00               	movlw	0
 24938  002A58  6E7D               	movwf	3965,c	;volatile
 24939                           
 24940                           ; BSR set to: 0
 24941                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24942  002A5A  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 24943                           
 24944                           ; BSR set to: 0
 24945  002A5E  0012               	return	
 24946  002A60                     __end_of_SetUartBaudRate:
 24947                           	opt stack 0
 24948                           tosu	equ	0xFFF
 24949                           tosh	equ	0xFFE
 24950                           tosl	equ	0xFFD
 24951                           pclath	equ	0xFFA
 24952                           tblptru	equ	0xFF8
 24953                           tblptrh	equ	0xFF7
 24954                           tblptrl	equ	0xFF6
 24955                           tablat	equ	0xFF5
 24956                           prodh	equ	0xFF4
 24957                           prodl	equ	0xFF3
 24958                           intcon	equ	0xFF2
 24959                           intcon2	equ	0xFF1
 24960                           intcon3	equ	0xFF0
 24961                           indf0	equ	0xFEF
 24962                           postinc0	equ	0xFEE
 24963                           plusw0	equ	0xFEB
 24964                           fsr0h	equ	0xFEA
 24965                           fsr0l	equ	0xFE9
 24966                           wreg	equ	0xFE8
 24967                           indf1	equ	0xFE7
 24968                           postinc1	equ	0xFE6
 24969                           postdec1	equ	0xFE5
 24970                           plusw1	equ	0xFE3
 24971                           fsr1h	equ	0xFE2
 24972                           fsr1l	equ	0xFE1
 24973                           indf2	equ	0xFDF
 24974                           postinc2	equ	0xFDE
 24975                           postdec2	equ	0xFDD
 24976                           plusw2	equ	0xFDB
 24977                           fsr2h	equ	0xFDA
 24978                           fsr2l	equ	0xFD9
 24979                           status	equ	0xFD8
 24980                           
 24981 ;; *************** function ___lmul *****************
 24982 ;; Defined at:
 24983 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;  multiplier      4   29[BANK0 ] unsigned long 
 24986 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 24987 ;; Auto vars:     Size  Location     Type
 24988 ;;  product         4   37[BANK0 ] unsigned long 
 24989 ;; Return value:  Size  Location     Type
 24990 ;;                  4   29[BANK0 ] unsigned long 
 24991 ;; Registers used:
 24992 ;;		wreg, status,2, status,0
 24993 ;; Tracked objects:
 24994 ;;		On entry : 0/0
 24995 ;;		On exit  : 0/0
 24996 ;;		Unchanged: 0/0
 24997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24998 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25001 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25002 ;;Total ram usage:       12 bytes
 25003 ;; Hardware stack levels used:    1
 25004 ;; Hardware stack levels required when called:   11
 25005 ;; This function calls:
 25006 ;;		Nothing
 25007 ;; This function is called by:
 25008 ;;		_Tmr_TmrBPrSet
 25009 ;;		_SetUartBaudRate
 25010 ;;		_strtol
 25011 ;; This function uses a non-reentrant model
 25012 ;;
 25013                           
 25014                           	psect	text114
 25015  0051D2                     __ptext114:
 25016                           	opt stack 0
 25017  0051D2                     ___lmul:
 25018                           	opt stack 15
 25019                           
 25020                           ; BSR set to: 0
 25021                           ;incstack = 0
 25022  0051D2  0E00               	movlw	0
 25023  0051D4  0100               	movlb	0	; () banked
 25024  0051D6  6F85               	movwf	___lmul@product& (0+255),b
 25025  0051D8  0E00               	movlw	0
 25026  0051DA  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25027  0051DC  0E00               	movlw	0
 25028  0051DE  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25029  0051E0  0E00               	movlw	0
 25030  0051E2  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25031  0051E4                     
 25032                           ; BSR set to: 0
 25033                           
 25034                           ; BSR set to: 0
 25035  0051E4  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25036  0051E6  D008               	goto	l2625
 25037                           
 25038                           ; BSR set to: 0
 25039  0051E8  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25040  0051EA  2785               	addwf	___lmul@product& (0+255),f,b
 25041  0051EC  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25042  0051EE  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25043  0051F0  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25044  0051F2  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25045  0051F4  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25046  0051F6  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25047  0051F8                     l2625:
 25048                           
 25049                           ; BSR set to: 0
 25050                           
 25051                           ; BSR set to: 0
 25052  0051F8  90D8               	bcf	status,0,c
 25053  0051FA  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25054  0051FC  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25055  0051FE  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25056  005200  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25057                           
 25058                           ; BSR set to: 0
 25059  005202  90D8               	bcf	status,0,c
 25060  005204  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25061  005206  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25062  005208  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25063  00520A  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25064  00520C  517D               	movf	___lmul@multiplier& (0+255),w,b
 25065  00520E  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25066  005210  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25067  005212  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25068  005214  A4D8               	btfss	status,2,c
 25069  005216  D7E6               	goto	l2624
 25070                           
 25071                           ; BSR set to: 0
 25072  005218  C085  F07D         	movff	___lmul@product,?___lmul
 25073  00521C  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25074  005220  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25075  005224  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25076                           
 25077                           ; BSR set to: 0
 25078  005228  0012               	return		;funcret
 25079  00522A                     __end_of___lmul:
 25080                           	opt stack 0
 25081                           tosu	equ	0xFFF
 25082                           tosh	equ	0xFFE
 25083                           tosl	equ	0xFFD
 25084                           pclath	equ	0xFFA
 25085                           tblptru	equ	0xFF8
 25086                           tblptrh	equ	0xFF7
 25087                           tblptrl	equ	0xFF6
 25088                           tablat	equ	0xFF5
 25089                           prodh	equ	0xFF4
 25090                           prodl	equ	0xFF3
 25091                           intcon	equ	0xFF2
 25092                           intcon2	equ	0xFF1
 25093                           intcon3	equ	0xFF0
 25094                           indf0	equ	0xFEF
 25095                           postinc0	equ	0xFEE
 25096                           plusw0	equ	0xFEB
 25097                           fsr0h	equ	0xFEA
 25098                           fsr0l	equ	0xFE9
 25099                           wreg	equ	0xFE8
 25100                           indf1	equ	0xFE7
 25101                           postinc1	equ	0xFE6
 25102                           postdec1	equ	0xFE5
 25103                           plusw1	equ	0xFE3
 25104                           fsr1h	equ	0xFE2
 25105                           fsr1l	equ	0xFE1
 25106                           indf2	equ	0xFDF
 25107                           postinc2	equ	0xFDE
 25108                           postdec2	equ	0xFDD
 25109                           plusw2	equ	0xFDB
 25110                           fsr2h	equ	0xFDA
 25111                           fsr2l	equ	0xFD9
 25112                           status	equ	0xFD8
 25113                           
 25114 ;; *************** function _UartSetConfigLow *****************
 25115 ;; Defined at:
 25116 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25117 ;; Parameters:    Size  Location     Type
 25118 ;;		None
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;		None
 25121 ;; Return value:  Size  Location     Type
 25122 ;;                  1    wreg      void 
 25123 ;; Registers used:
 25124 ;;		wreg, status,2
 25125 ;; Tracked objects:
 25126 ;;		On entry : 0/0
 25127 ;;		On exit  : 0/0
 25128 ;;		Unchanged: 0/0
 25129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25134 ;;Total ram usage:        0 bytes
 25135 ;; Hardware stack levels used:    1
 25136 ;; Hardware stack levels required when called:   11
 25137 ;; This function calls:
 25138 ;;		Nothing
 25139 ;; This function is called by:
 25140 ;;		_ConfigureModem
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144                           	psect	text115
 25145  00522A                     __ptext115:
 25146                           	opt stack 0
 25147  00522A                     _UartSetConfigLow:
 25148                           	opt stack 15
 25149                           
 25150                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;incstack = 0
 25154  00522A  0E01               	movlw	1
 25155  00522C  0103               	movlb	3	; () banked
 25156  00522E  6F34               	movwf	_UartConfig& (0+255),b
 25157                           
 25158                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 25159  005230  0E00               	movlw	0
 25160  005232  6F35               	movwf	(_UartConfig+1)& (0+255),b
 25161                           
 25162                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 25163  005234  0E00               	movlw	0
 25164  005236  6F36               	movwf	(_UartConfig+2)& (0+255),b
 25165                           
 25166                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 25167  005238  0E00               	movlw	0
 25168  00523A  6F37               	movwf	(_UartConfig+3)& (0+255),b
 25169                           
 25170                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 25171  00523C  0E00               	movlw	0
 25172  00523E  6F38               	movwf	(_UartConfig+4)& (0+255),b
 25173                           
 25174                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 25175  005240  0E00               	movlw	0
 25176  005242  6F39               	movwf	(_UartConfig+5)& (0+255),b
 25177                           
 25178                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 25179  005244  0E01               	movlw	1
 25180  005246  6F3A               	movwf	(_UartConfig+6)& (0+255),b
 25181                           
 25182                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 25183  005248  0E01               	movlw	1
 25184  00524A  6F3B               	movwf	(_UartConfig+7)& (0+255),b
 25185                           
 25186                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 25187  00524C  0E00               	movlw	0
 25188  00524E  6F3C               	movwf	(_UartConfig+8)& (0+255),b
 25189                           
 25190                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 25191  005250  0E00               	movlw	0
 25192  005252  6F3D               	movwf	(_UartConfig+9)& (0+255),b
 25193                           
 25194                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 25195  005254  0E00               	movlw	0
 25196  005256  6F3E               	movwf	(_UartConfig+10)& (0+255),b
 25197                           
 25198                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25199  005258  0E00               	movlw	0
 25200  00525A  6F3F               	movwf	(_UartConfig+11)& (0+255),b
 25201                           
 25202                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25203  00525C  0E01               	movlw	1
 25204  00525E  6F40               	movwf	(_UartConfig+12)& (0+255),b
 25205                           
 25206                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 25207  005260  0E00               	movlw	0
 25208  005262  6F41               	movwf	(_UartConfig+13)& (0+255),b
 25209  005264  0E6C               	movlw	108
 25210  005266  6F42               	movwf	(_UartConfig+14)& (0+255),b
 25211  005268  0EDC               	movlw	220
 25212  00526A  6F43               	movwf	(_UartConfig+15)& (0+255),b
 25213  00526C  0E02               	movlw	2
 25214  00526E  6F44               	movwf	(_UartConfig+16)& (0+255),b
 25215                           
 25216                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25217  005270  0E80               	movlw	128
 25218  005272  6F45               	movwf	(_UartConfig+17)& (0+255),b
 25219  005274  0E25               	movlw	37
 25220  005276  6F46               	movwf	(_UartConfig+18)& (0+255),b
 25221  005278  0E00               	movlw	0
 25222  00527A  6F47               	movwf	(_UartConfig+19)& (0+255),b
 25223  00527C  0E00               	movlw	0
 25224  00527E  6F48               	movwf	(_UartConfig+20)& (0+255),b
 25225                           
 25226                           ; BSR set to: 3
 25227  005280  0012               	return		;funcret
 25228  005282                     __end_of_UartSetConfigLow:
 25229                           	opt stack 0
 25230                           tosu	equ	0xFFF
 25231                           tosh	equ	0xFFE
 25232                           tosl	equ	0xFFD
 25233                           pclath	equ	0xFFA
 25234                           tblptru	equ	0xFF8
 25235                           tblptrh	equ	0xFF7
 25236                           tblptrl	equ	0xFF6
 25237                           tablat	equ	0xFF5
 25238                           prodh	equ	0xFF4
 25239                           prodl	equ	0xFF3
 25240                           intcon	equ	0xFF2
 25241                           intcon2	equ	0xFF1
 25242                           intcon3	equ	0xFF0
 25243                           indf0	equ	0xFEF
 25244                           postinc0	equ	0xFEE
 25245                           plusw0	equ	0xFEB
 25246                           fsr0h	equ	0xFEA
 25247                           fsr0l	equ	0xFE9
 25248                           wreg	equ	0xFE8
 25249                           indf1	equ	0xFE7
 25250                           postinc1	equ	0xFE6
 25251                           postdec1	equ	0xFE5
 25252                           plusw1	equ	0xFE3
 25253                           fsr1h	equ	0xFE2
 25254                           fsr1l	equ	0xFE1
 25255                           indf2	equ	0xFDF
 25256                           postinc2	equ	0xFDE
 25257                           postdec2	equ	0xFDD
 25258                           plusw2	equ	0xFDB
 25259                           fsr2h	equ	0xFDA
 25260                           fsr2l	equ	0xFD9
 25261                           status	equ	0xFD8
 25262                           
 25263 ;; *************** function _CheckModem *****************
 25264 ;; Defined at:
 25265 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25266 ;; Parameters:    Size  Location     Type
 25267 ;;		None
 25268 ;; Auto vars:     Size  Location     Type
 25269 ;;		None
 25270 ;; Return value:  Size  Location     Type
 25271 ;;                  1    wreg      void 
 25272 ;; Registers used:
 25273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25274 ;; Tracked objects:
 25275 ;;		On entry : 0/0
 25276 ;;		On exit  : 0/0
 25277 ;;		Unchanged: 0/0
 25278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25283 ;;Total ram usage:        0 bytes
 25284 ;; Hardware stack levels used:    1
 25285 ;; Hardware stack levels required when called:   14
 25286 ;; This function calls:
 25287 ;;		_GenerateEvt
 25288 ;;		_OsTmr_GetTimerStatus
 25289 ;;		_OsTmr_StartTimer
 25290 ;;		_ReceiveEvt
 25291 ;;		_Uart_WriteConstString
 25292 ;; This function is called by:
 25293 ;;		_Mdm_MainTask
 25294 ;; This function uses a non-reentrant model
 25295 ;;
 25296                           
 25297                           	psect	text116
 25298  001E9E                     __ptext116:
 25299                           	opt stack 0
 25300  001E9E                     _CheckModem:
 25301                           	opt stack 13
 25302                           
 25303                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25304                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25305                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 25306                           
 25307                           ; BSR set to: 3
 25308                           ;incstack = 0
 25309  001E9E  D09C               	goto	l978
 25310  001EA0                     
 25311                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 25312  001EA0  0EF1               	movlw	low CheckModem@Timeout
 25313  001EA2  0100               	movlb	0	; () banked
 25314  001EA4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25315  001EA6  0E03               	movlw	high CheckModem@Timeout
 25316  001EA8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25317  001EAA  0ED0               	movlw	208
 25318  001EAC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25319  001EAE  0E07               	movlw	7
 25320  001EB0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25321  001EB2  0E00               	movlw	0
 25322  001EB4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25323  001EB6  0E00               	movlw	0
 25324  001EB8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25325  001EBA  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 25326                           
 25327                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 25328  001EBE  0E01               	movlw	1
 25329  001EC0  0101               	movlb	1	; () banked
 25330  001EC2  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25331                           
 25332                           ;mdm_gsm_gprs.c: 290: break;
 25333  001EC4  0012               	return	
 25334  001EC6                     
 25335                           ; BSR set to: 1
 25336                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25337                           
 25338                           ; BSR set to: 1
 25339  001EC6  0EF1               	movlw	low CheckModem@Timeout
 25340  001EC8  0100               	movlb	0	; () banked
 25341  001ECA  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25342  001ECC  0E03               	movlw	high CheckModem@Timeout
 25343  001ECE  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25344  001ED0  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25345  001ED4  06E8               	decf	wreg,f,c
 25346  001ED6  A4D8               	btfss	status,2,c
 25347  001ED8  0012               	return	
 25348                           
 25349                           ;mdm_gsm_gprs.c: 295: {
 25350                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 25351  001EDA  0E02               	movlw	2
 25352  001EDC  0101               	movlb	1	; () banked
 25353  001EDE  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25354                           
 25355                           ; BSR set to: 1
 25356                           ;mdm_gsm_gprs.c: 298: }
 25357                           ;mdm_gsm_gprs.c: 299: break;
 25358  001EE0  0012               	return	
 25359  001EE2                     
 25360                           ; BSR set to: 1
 25361                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 25362                           
 25363                           ; BSR set to: 1
 25364  001EE2  0EE5               	movlw	low STR_1
 25365  001EE4  0100               	movlb	0	; () banked
 25366  001EE6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25367  001EE8  0EFF               	movlw	high STR_1
 25368  001EEA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25369  001EEC  0E01               	movlw	1
 25370  001EEE  EC20  F02C         	call	_Uart_WriteConstString
 25371                           
 25372                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 25373  001EF2  0EF1               	movlw	low CheckModem@Timeout
 25374  001EF4  0100               	movlb	0	; () banked
 25375  001EF6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25376  001EF8  0E03               	movlw	high CheckModem@Timeout
 25377  001EFA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25378  001EFC  0ED0               	movlw	208
 25379  001EFE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25380  001F00  0E07               	movlw	7
 25381  001F02  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25382  001F04  0E00               	movlw	0
 25383  001F06  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25384  001F08  0E00               	movlw	0
 25385  001F0A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25386  001F0C  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 25387                           
 25388                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 25389  001F10  0E03               	movlw	3
 25390  001F12  0101               	movlb	1	; () banked
 25391  001F14  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25392                           
 25393                           ;mdm_gsm_gprs.c: 308: break;
 25394  001F16  0012               	return	
 25395  001F18                     
 25396                           ; BSR set to: 1
 25397                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 25398                           
 25399                           ; BSR set to: 1
 25400  001F18  0E3C               	movlw	low _NewStringReceived
 25401  001F1A  0100               	movlb	0	; () banked
 25402  001F1C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25403  001F1E  0E00               	movlw	high _NewStringReceived
 25404  001F20  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25405  001F22  EC53  F02E         	call	_ReceiveEvt	;wreg free
 25406  001F26  0900               	iorlw	0
 25407  001F28  B4D8               	btfsc	status,2,c
 25408  001F2A  D030               	goto	l985
 25409                           
 25410                           ;mdm_gsm_gprs.c: 313: {
 25411                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25412  001F2C  CC58  FFE8         	movff	_RxBuffer,wreg
 25413  001F30  0A4F               	xorlw	79
 25414  001F32  A4D8               	btfss	status,2,c
 25415  001F34  D005               	goto	u12180
 25416  001F36  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25417  001F3A  0A4B               	xorlw	75
 25418  001F3C  B4D8               	btfsc	status,2,c
 25419  001F3E  D00A               	goto	u12200
 25420  001F40                     u12180:
 25421  001F40  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25422  001F44  0A4F               	xorlw	79
 25423  001F46  A4D8               	btfss	status,2,c
 25424  001F48  0012               	return	
 25425  001F4A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25426  001F4E  0A4B               	xorlw	75
 25427  001F50  A4D8               	btfss	status,2,c
 25428  001F52  0012               	return	
 25429  001F54                     u12200:
 25430                           
 25431                           ;mdm_gsm_gprs.c: 316: {
 25432                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 25433  001F54  0E02               	movlw	2
 25434  001F56  0100               	movlb	0	; () banked
 25435  001F58  6FD6               	movwf	_MdmStatus& (0+255),b
 25436                           
 25437                           ; BSR set to: 0
 25438                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 25439  001F5A  0EDF               	movlw	low _MdmOnOffPulseRequest
 25440  001F5C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25441  001F5E  0E00               	movlw	high _MdmOnOffPulseRequest
 25442  001F60  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25443  001F62  EC18  F030         	call	_GenerateEvt	;wreg free
 25444                           
 25445                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 25446  001F66  0EF1               	movlw	low CheckModem@Timeout
 25447  001F68  0100               	movlb	0	; () banked
 25448  001F6A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25449  001F6C  0E03               	movlw	high CheckModem@Timeout
 25450  001F6E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25451  001F70  0EE8               	movlw	232
 25452  001F72  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25453  001F74  0E03               	movlw	3
 25454  001F76  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25455  001F78  0E00               	movlw	0
 25456  001F7A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25457  001F7C  0E00               	movlw	0
 25458  001F7E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25459  001F80  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 25460                           
 25461                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 25462  001F84  0E04               	movlw	4
 25463  001F86  0101               	movlb	1	; () banked
 25464  001F88  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25465                           
 25466                           ; BSR set to: 1
 25467                           ;mdm_gsm_gprs.c: 324: }
 25468                           ;mdm_gsm_gprs.c: 325: }
 25469  001F8A  0012               	return	
 25470  001F8C                     l985:
 25471                           
 25472                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25473                           
 25474                           ; BSR set to: 1
 25475  001F8C  0EF1               	movlw	low CheckModem@Timeout
 25476  001F8E  0100               	movlb	0	; () banked
 25477  001F90  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25478  001F92  0E03               	movlw	high CheckModem@Timeout
 25479  001F94  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25480  001F96  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25481  001F9A  06E8               	decf	wreg,f,c
 25482  001F9C  A4D8               	btfss	status,2,c
 25483  001F9E  0012               	return	
 25484                           
 25485                           ;mdm_gsm_gprs.c: 327: {
 25486                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 25487  001FA0  0E00               	movlw	0
 25488  001FA2  0100               	movlb	0	; () banked
 25489  001FA4  6FD6               	movwf	_MdmStatus& (0+255),b
 25490                           
 25491                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 25492  001FA6  0E01               	movlw	1
 25493  001FA8  0101               	movlb	1	; () banked
 25494  001FAA  6FF1               	movwf	_ComChecCompleted& (0+255),b
 25495                           
 25496                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 25497  001FAC  0E05               	movlw	5
 25498  001FAE  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25499                           
 25500                           ; BSR set to: 1
 25501                           ;mdm_gsm_gprs.c: 338: }
 25502                           ;mdm_gsm_gprs.c: 339: break;
 25503                           
 25504                           ; BSR set to: 1
 25505                           
 25506                           ;mdm_gsm_gprs.c: 335: else
 25507                           ;mdm_gsm_gprs.c: 336: {
 25508                           
 25509                           ; BSR set to: 1
 25510                           
 25511                           ;mdm_gsm_gprs.c: 334: }
 25512  001FB0  0012               	return	
 25513  001FB2                     
 25514                           ; BSR set to: 1
 25515                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25516                           
 25517                           ; BSR set to: 1
 25518  001FB2  0EF1               	movlw	low CheckModem@Timeout
 25519  001FB4  0100               	movlb	0	; () banked
 25520  001FB6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25521  001FB8  0E03               	movlw	high CheckModem@Timeout
 25522  001FBA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25523  001FBC  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25524  001FC0  06E8               	decf	wreg,f,c
 25525  001FC2  A4D8               	btfss	status,2,c
 25526  001FC4  0012               	return	
 25527                           
 25528                           ;mdm_gsm_gprs.c: 344: {
 25529                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 25530  001FC6  0E00               	movlw	0
 25531  001FC8  0100               	movlb	0	; () banked
 25532  001FCA  6FD6               	movwf	_MdmStatus& (0+255),b
 25533                           
 25534                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 25535  001FCC  0E01               	movlw	1
 25536  001FCE  0101               	movlb	1	; () banked
 25537  001FD0  6FF1               	movwf	_ComChecCompleted& (0+255),b
 25538                           
 25539                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 25540  001FD2  0E05               	movlw	5
 25541  001FD4  6FF0               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25542                           
 25543                           ; BSR set to: 1
 25544                           ;mdm_gsm_gprs.c: 360: }
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;mdm_gsm_gprs.c: 359: break;
 25548                           
 25549                           ;mdm_gsm_gprs.c: 358: default:
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;mdm_gsm_gprs.c: 356: break;
 25553                           
 25554                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 25555                           
 25556                           ; BSR set to: 1
 25557                           ;mdm_gsm_gprs.c: 351: }
 25558                           ;mdm_gsm_gprs.c: 352: break;
 25559  001FD6  0012               	return	
 25560  001FD8                     l978:
 25561                           
 25562                           ; BSR set to: 1
 25563  001FD8  0101               	movlb	1	; () banked
 25564  001FDA  51F0               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 25565                           
 25566                           ; Switch size 1, requested type "space"
 25567                           ; Number of cases is 6, Range of values is 0 to 5
 25568                           ; switch strategies available:
 25569                           ; Name         Instructions Cycles
 25570                           ; simple_byte           19    10 (average)
 25571                           ;	Chosen strategy is simple_byte
 25572  001FDC  0A00               	xorlw	0	; case 0
 25573  001FDE  B4D8               	btfsc	status,2,c
 25574  001FE0  D75F               	goto	l979
 25575  001FE2  0A01               	xorlw	1	; case 1
 25576  001FE4  B4D8               	btfsc	status,2,c
 25577  001FE6  D76F               	goto	l981
 25578  001FE8  0A03               	xorlw	3	; case 2
 25579  001FEA  B4D8               	btfsc	status,2,c
 25580  001FEC  D77A               	goto	l983
 25581  001FEE  0A01               	xorlw	1	; case 3
 25582  001FF0  B4D8               	btfsc	status,2,c
 25583  001FF2  D792               	goto	l984
 25584  001FF4  0A07               	xorlw	7	; case 4
 25585  001FF6  B4D8               	btfsc	status,2,c
 25586  001FF8  D7DC               	goto	l994
 25587  001FFA  0A01               	xorlw	1	; case 5
 25588  001FFC  0012               	return	
 25589  001FFE                     __end_of_CheckModem:
 25590                           	opt stack 0
 25591                           tosu	equ	0xFFF
 25592                           tosh	equ	0xFFE
 25593                           tosl	equ	0xFFD
 25594                           pclath	equ	0xFFA
 25595                           tblptru	equ	0xFF8
 25596                           tblptrh	equ	0xFF7
 25597                           tblptrl	equ	0xFF6
 25598                           tablat	equ	0xFF5
 25599                           prodh	equ	0xFF4
 25600                           prodl	equ	0xFF3
 25601                           intcon	equ	0xFF2
 25602                           intcon2	equ	0xFF1
 25603                           intcon3	equ	0xFF0
 25604                           indf0	equ	0xFEF
 25605                           postinc0	equ	0xFEE
 25606                           plusw0	equ	0xFEB
 25607                           fsr0h	equ	0xFEA
 25608                           fsr0l	equ	0xFE9
 25609                           wreg	equ	0xFE8
 25610                           indf1	equ	0xFE7
 25611                           postinc1	equ	0xFE6
 25612                           postdec1	equ	0xFE5
 25613                           plusw1	equ	0xFE3
 25614                           fsr1h	equ	0xFE2
 25615                           fsr1l	equ	0xFE1
 25616                           indf2	equ	0xFDF
 25617                           postinc2	equ	0xFDE
 25618                           postdec2	equ	0xFDD
 25619                           plusw2	equ	0xFDB
 25620                           fsr2h	equ	0xFDA
 25621                           fsr2l	equ	0xFD9
 25622                           status	equ	0xFD8
 25623                           
 25624 ;; *************** function _MdmCntSm *****************
 25625 ;; Defined at:
 25626 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25627 ;; Parameters:    Size  Location     Type
 25628 ;;		None
 25629 ;; Auto vars:     Size  Location     Type
 25630 ;;		None
 25631 ;; Return value:  Size  Location     Type
 25632 ;;                  1    wreg      void 
 25633 ;; Registers used:
 25634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25635 ;; Tracked objects:
 25636 ;;		On entry : 0/0
 25637 ;;		On exit  : 0/0
 25638 ;;		Unchanged: 0/0
 25639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25644 ;;Total ram usage:        0 bytes
 25645 ;; Hardware stack levels used:    1
 25646 ;; Hardware stack levels required when called:   12
 25647 ;; This function calls:
 25648 ;;		_InitModemInterface
 25649 ;;		_ReceiveEvt
 25650 ;; This function is called by:
 25651 ;;		_Mdm_DrvMainFn
 25652 ;; This function uses a non-reentrant model
 25653 ;;
 25654                           
 25655                           	psect	text117
 25656  003FFA                     __ptext117:
 25657                           	opt stack 0
 25658  003FFA                     _MdmCntSm:
 25659                           	opt stack 15
 25660                           
 25661                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25662                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25663                           ;mdm_drv.c: 204: switch (MdmCntState)
 25664                           
 25665                           ;incstack = 0
 25666  003FFA  D04A               	goto	l315
 25667  003FFC                     
 25668                           ;mdm_drv.c: 208: InitModemInterface();
 25669  003FFC  ECC1  F030         	call	_InitModemInterface	;wreg free
 25670                           
 25671                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25672  004000  0E01               	movlw	1
 25673  004002  0101               	movlb	1	; () banked
 25674  004004  6FF4               	movwf	MdmCntSm@MdmCntState& (0+255),b
 25675                           
 25676                           ;mdm_drv.c: 211: break;
 25677  004006  0012               	return	
 25678  004008                     
 25679                           ; BSR set to: 1
 25680                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25681                           
 25682                           ; BSR set to: 1
 25683  004008  0EDF               	movlw	low _MdmOnOffPulseRequest
 25684  00400A  0100               	movlb	0	; () banked
 25685  00400C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25686  00400E  0E00               	movlw	high _MdmOnOffPulseRequest
 25687  004010  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25688  004012  EC53  F02E         	call	_ReceiveEvt	;wreg free
 25689  004016  0900               	iorlw	0
 25690  004018  B4D8               	btfsc	status,2,c
 25691  00401A  D00A               	goto	l319
 25692                           
 25693                           ;mdm_drv.c: 216: {
 25694                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25695  00401C  0E02               	movlw	2
 25696  00401E  0101               	movlb	1	; () banked
 25697  004020  6FF4               	movwf	MdmCntSm@MdmCntState& (0+255),b
 25698                           
 25699                           ; BSR set to: 1
 25700                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 25701  004022  8284               	bsf	3972,1,c	;volatile
 25702                           
 25703                           ;mdm_drv.c: 222: Counter = 0;
 25704  004024  0E00               	movlw	0
 25705  004026  0102               	movlb	2	; () banked
 25706  004028  6FD7               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25707  00402A  0E00               	movlw	0
 25708  00402C  6FD6               	movwf	MdmCntSm@Counter& (0+255),b
 25709                           
 25710                           ;mdm_drv.c: 223: }
 25711  00402E  0012               	return	
 25712  004030                     l319:
 25713                           
 25714                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 25715                           
 25716                           ; BSR set to: 2
 25717  004030  0E3D               	movlw	low _MdmResetRequest
 25718  004032  0100               	movlb	0	; () banked
 25719  004034  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25720  004036  0E00               	movlw	high _MdmResetRequest
 25721  004038  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25722  00403A  EC53  F02E         	call	_ReceiveEvt	;wreg free
 25723  00403E  0900               	iorlw	0
 25724  004040  B4D8               	btfsc	status,2,c
 25725  004042  0012               	return	
 25726                           
 25727                           ;mdm_drv.c: 225: {
 25728                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 25729  004044  0E03               	movlw	3
 25730  004046  0101               	movlb	1	; () banked
 25731  004048  6FF4               	movwf	MdmCntSm@MdmCntState& (0+255),b
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 25735  00404A  8084               	bsf	3972,0,c	;volatile
 25736                           
 25737                           ;mdm_drv.c: 231: Counter = 0;
 25738  00404C  0E00               	movlw	0
 25739  00404E  0102               	movlb	2	; () banked
 25740  004050  6FD7               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25741  004052  0E00               	movlw	0
 25742  004054  6FD6               	movwf	MdmCntSm@Counter& (0+255),b
 25743                           
 25744                           ; BSR set to: 2
 25745                           ;mdm_drv.c: 236: }
 25746                           ;mdm_drv.c: 237: break;
 25747                           
 25748                           ; BSR set to: 2
 25749                           
 25750                           ;mdm_drv.c: 233: else
 25751                           ;mdm_drv.c: 234: {
 25752                           
 25753                           ; BSR set to: 2
 25754                           
 25755                           ;mdm_drv.c: 232: }
 25756  004056  0012               	return	
 25757  004058                     
 25758                           ;mdm_drv.c: 241: Counter++;
 25759                           
 25760                           ; BSR set to: 2
 25761  004058  0102               	movlb	2	; () banked
 25762  00405A  4BD6               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25763  00405C  2BD7               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25764                           
 25765                           ; BSR set to: 2
 25766                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 25767  00405E  51D7               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25768  004060  E104               	bnz	u12120
 25769  004062  0E96               	movlw	150
 25770  004064  5DD6               	subwf	MdmCntSm@Counter& (0+255),w,b
 25771  004066  A0D8               	btfss	status,0,c
 25772  004068  0012               	return	
 25773  00406A                     u12120:
 25774                           
 25775                           ; BSR set to: 2
 25776                           ;mdm_drv.c: 244: {
 25777                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 25778  00406A  9284               	bcf	3972,1,c	;volatile
 25779                           
 25780                           ; BSR set to: 2
 25781                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 25782  00406C  0E01               	movlw	1
 25783  00406E  0101               	movlb	1	; () banked
 25784  004070  6FF4               	movwf	MdmCntSm@MdmCntState& (0+255),b
 25785                           
 25786                           ; BSR set to: 1
 25787                           ;mdm_drv.c: 249: }
 25788                           ;mdm_drv.c: 250: break;
 25789  004072  0012               	return	
 25790  004074                     
 25791                           ; BSR set to: 1
 25792                           ;mdm_drv.c: 254: Counter++;
 25793                           
 25794                           ; BSR set to: 1
 25795  004074  0102               	movlb	2	; () banked
 25796  004076  4BD6               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25797  004078  2BD7               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25798                           
 25799                           ; BSR set to: 2
 25800                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 25801  00407A  51D7               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25802  00407C  E104               	bnz	u12130
 25803  00407E  0E0A               	movlw	10
 25804  004080  5DD6               	subwf	MdmCntSm@Counter& (0+255),w,b
 25805  004082  A0D8               	btfss	status,0,c
 25806  004084  0012               	return	
 25807  004086                     u12130:
 25808                           
 25809                           ; BSR set to: 2
 25810                           ;mdm_drv.c: 257: {
 25811                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 25812  004086  9084               	bcf	3972,0,c	;volatile
 25813                           
 25814                           ; BSR set to: 2
 25815                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 25816  004088  0E01               	movlw	1
 25817  00408A  0101               	movlb	1	; () banked
 25818  00408C  6FF4               	movwf	MdmCntSm@MdmCntState& (0+255),b
 25819                           
 25820                           ; BSR set to: 1
 25821                           ;mdm_drv.c: 267: }
 25822                           
 25823                           ; BSR set to: 1
 25824                           ;mdm_drv.c: 266: break;
 25825                           
 25826                           ;mdm_drv.c: 265: default:
 25827                           
 25828                           ; BSR set to: 1
 25829                           ;mdm_drv.c: 262: }
 25830                           ;mdm_drv.c: 263: break;
 25831  00408E  0012               	return	
 25832  004090                     l315:
 25833                           
 25834                           ; BSR set to: 1
 25835  004090  0101               	movlb	1	; () banked
 25836  004092  51F4               	movf	MdmCntSm@MdmCntState& (0+255),w,b
 25837                           
 25838                           ; Switch size 1, requested type "space"
 25839                           ; Number of cases is 4, Range of values is 0 to 3
 25840                           ; switch strategies available:
 25841                           ; Name         Instructions Cycles
 25842                           ; simple_byte           13     7 (average)
 25843                           ;	Chosen strategy is simple_byte
 25844  004094  0A00               	xorlw	0	; case 0
 25845  004096  B4D8               	btfsc	status,2,c
 25846  004098  D7B1               	goto	l316
 25847  00409A  0A01               	xorlw	1	; case 1
 25848  00409C  B4D8               	btfsc	status,2,c
 25849  00409E  D7B4               	goto	l318
 25850  0040A0  0A03               	xorlw	3	; case 2
 25851  0040A2  B4D8               	btfsc	status,2,c
 25852  0040A4  D7D9               	goto	l323
 25853  0040A6  0A01               	xorlw	1	; case 3
 25854  0040A8  A4D8               	btfss	status,2,c
 25855  0040AA  0012               	return	
 25856  0040AC  D7E3               	goto	l325
 25857  0040AE                     __end_of_MdmCntSm:
 25858                           	opt stack 0
 25859                           tosu	equ	0xFFF
 25860                           tosh	equ	0xFFE
 25861                           tosl	equ	0xFFD
 25862                           pclath	equ	0xFFA
 25863                           tblptru	equ	0xFF8
 25864                           tblptrh	equ	0xFF7
 25865                           tblptrl	equ	0xFF6
 25866                           tablat	equ	0xFF5
 25867                           prodh	equ	0xFF4
 25868                           prodl	equ	0xFF3
 25869                           intcon	equ	0xFF2
 25870                           intcon2	equ	0xFF1
 25871                           intcon3	equ	0xFF0
 25872                           indf0	equ	0xFEF
 25873                           postinc0	equ	0xFEE
 25874                           plusw0	equ	0xFEB
 25875                           fsr0h	equ	0xFEA
 25876                           fsr0l	equ	0xFE9
 25877                           wreg	equ	0xFE8
 25878                           indf1	equ	0xFE7
 25879                           postinc1	equ	0xFE6
 25880                           postdec1	equ	0xFE5
 25881                           plusw1	equ	0xFE3
 25882                           fsr1h	equ	0xFE2
 25883                           fsr1l	equ	0xFE1
 25884                           indf2	equ	0xFDF
 25885                           postinc2	equ	0xFDE
 25886                           postdec2	equ	0xFDD
 25887                           plusw2	equ	0xFDB
 25888                           fsr2h	equ	0xFDA
 25889                           fsr2l	equ	0xFD9
 25890                           status	equ	0xFD8
 25891                           
 25892 ;; *************** function _InitModemInterface *****************
 25893 ;; Defined at:
 25894 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25895 ;; Parameters:    Size  Location     Type
 25896 ;;		None
 25897 ;; Auto vars:     Size  Location     Type
 25898 ;;		None
 25899 ;; Return value:  Size  Location     Type
 25900 ;;                  1    wreg      void 
 25901 ;; Registers used:
 25902 ;;		None
 25903 ;; Tracked objects:
 25904 ;;		On entry : 0/0
 25905 ;;		On exit  : 0/0
 25906 ;;		Unchanged: 0/0
 25907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25912 ;;Total ram usage:        0 bytes
 25913 ;; Hardware stack levels used:    1
 25914 ;; Hardware stack levels required when called:   11
 25915 ;; This function calls:
 25916 ;;		Nothing
 25917 ;; This function is called by:
 25918 ;;		_MdmCntSm
 25919 ;; This function uses a non-reentrant model
 25920 ;;
 25921                           
 25922                           	psect	text118
 25923  006182                     __ptext118:
 25924                           	opt stack 0
 25925  006182                     _InitModemInterface:
 25926                           	opt stack 15
 25927                           
 25928                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 25929                           
 25930                           ;incstack = 0
 25931  006182  9096               	bcf	3990,0,c	;volatile
 25932                           
 25933                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 25934  006184  9296               	bcf	3990,1,c	;volatile
 25935                           
 25936                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 25937  006186  8496               	bsf	3990,2,c	;volatile
 25938  006188  0012               	return		;funcret
 25939  00618A                     __end_of_InitModemInterface:
 25940                           	opt stack 0
 25941                           tosu	equ	0xFFF
 25942                           tosh	equ	0xFFE
 25943                           tosl	equ	0xFFD
 25944                           pclath	equ	0xFFA
 25945                           tblptru	equ	0xFF8
 25946                           tblptrh	equ	0xFF7
 25947                           tblptrl	equ	0xFF6
 25948                           tablat	equ	0xFF5
 25949                           prodh	equ	0xFF4
 25950                           prodl	equ	0xFF3
 25951                           intcon	equ	0xFF2
 25952                           intcon2	equ	0xFF1
 25953                           intcon3	equ	0xFF0
 25954                           indf0	equ	0xFEF
 25955                           postinc0	equ	0xFEE
 25956                           plusw0	equ	0xFEB
 25957                           fsr0h	equ	0xFEA
 25958                           fsr0l	equ	0xFE9
 25959                           wreg	equ	0xFE8
 25960                           indf1	equ	0xFE7
 25961                           postinc1	equ	0xFE6
 25962                           postdec1	equ	0xFE5
 25963                           plusw1	equ	0xFE3
 25964                           fsr1h	equ	0xFE2
 25965                           fsr1l	equ	0xFE1
 25966                           indf2	equ	0xFDF
 25967                           postinc2	equ	0xFDE
 25968                           postdec2	equ	0xFDD
 25969                           plusw2	equ	0xFDB
 25970                           fsr2h	equ	0xFDA
 25971                           fsr2l	equ	0xFD9
 25972                           status	equ	0xFD8
 25973                           
 25974 ;; *************** function _InitGprsNetwork *****************
 25975 ;; Defined at:
 25976 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25977 ;; Parameters:    Size  Location     Type
 25978 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 25979 ;;		 -> NULL(0), 
 25980 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25983 ;;  Index           1   50[BANK1 ] unsigned char 
 25984 ;; Return value:  Size  Location     Type
 25985 ;;                  1    wreg      enum E8906
 25986 ;; Registers used:
 25987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25988 ;; Tracked objects:
 25989 ;;		On entry : 0/0
 25990 ;;		On exit  : 0/0
 25991 ;;		Unchanged: 0/0
 25992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25993 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25994 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25996 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25997 ;;Total ram usage:       56 bytes
 25998 ;; Hardware stack levels used:    1
 25999 ;; Hardware stack levels required when called:   14
 26000 ;; This function calls:
 26001 ;;		_ClearBuffer
 26002 ;;		_OsTmr_GetTimerStatus
 26003 ;;		_OsTmr_StartTimer
 26004 ;;		_ReceiveEvt
 26005 ;;		_StringCopy
 26006 ;;		_Uart_WriteConstString
 26007 ;;		_Uart_WriteString
 26008 ;; This function is called by:
 26009 ;;		_MdmHttp_MainTask
 26010 ;; This function uses a non-reentrant model
 26011 ;;
 26012                           
 26013                           	psect	text119
 26014  000DC8                     __ptext119:
 26015                           	opt stack 0
 26016  000DC8                     _InitGprsNetwork:
 26017                           	opt stack 13
 26018                           
 26019                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26020                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26021                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26022                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26023                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26024                           
 26025                           ;incstack = 0
 26026  000DC8  0E00               	movlw	0
 26027  000DCA  0101               	movlb	1	; () banked
 26028  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26029                           
 26030                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26031  000DCE  D154               	goto	l1204
 26032  000DD0                     
 26033                           ; BSR set to: 1
 26034                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26035                           
 26036                           ; BSR set to: 1
 26037  000DD0  0E36               	movlw	low _InitNetwork
 26038  000DD2  0100               	movlb	0	; () banked
 26039  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26040  000DD6  0E00               	movlw	high _InitNetwork
 26041  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26042  000DDA  EC53  F02E         	call	_ReceiveEvt	;wreg free
 26043  000DDE  0900               	iorlw	0
 26044  000DE0  B4D8               	btfsc	status,2,c
 26045  000DE2  D166               	goto	l1207
 26046                           
 26047                           ;mdm_gsm_gprs_http.c: 137: {
 26048                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26049  000DE4  0E01               	movlw	1
 26050  000DE6  D141               	goto	L70
 26051  000DE8                     
 26052                           ; BSR set to: 1
 26053                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26054                           
 26055                           ; BSR set to: 1
 26056  000DE8  0E94               	movlw	low STR_8
 26057  000DEA  0100               	movlb	0	; () banked
 26058  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26059  000DEE  0EFE               	movlw	high STR_8
 26060  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26061  000DF2  0E01               	movlw	1
 26062  000DF4  EC20  F02C         	call	_Uart_WriteConstString
 26063                           
 26064                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26065  000DF8  0E07               	movlw	7
 26066  000DFA  0101               	movlb	1	; () banked
 26067  000DFC  6FE5               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26068                           
 26069                           ; BSR set to: 1
 26070                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26071  000DFE  0E02               	movlw	2
 26072  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26073                           
 26074                           ; BSR set to: 1
 26075                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26076  000E02  0EF4               	movlw	low _ConnTimeout
 26077  000E04  0100               	movlb	0	; () banked
 26078  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26079  000E08  0E02               	movlw	high _ConnTimeout
 26080  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26081  000E0C  0E20               	movlw	32
 26082  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26083  000E10  0E4E               	movlw	78
 26084  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26085  000E14  0E00               	movlw	0
 26086  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26087  000E18  0E00               	movlw	0
 26088  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26089  000E1C  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26090  000E20  D0C7               	goto	l13343
 26091  000E22                     
 26092                           ; BSR set to: 1
 26093                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26094                           
 26095                           ; BSR set to: 1
 26096  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26097  000E24  0100               	movlb	0	; () banked
 26098  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26099  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26100  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26101  000E2C  0E00               	movlw	0
 26102  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26103  000E30  0E32               	movlw	50
 26104  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26105  000E34  EC75  F02D         	call	_ClearBuffer	;wreg free
 26106                           
 26107                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26108  000E38  0EC8               	movlw	low STR_9
 26109  000E3A  0100               	movlb	0	; () banked
 26110  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26111  000E3E  0EFE               	movlw	high STR_9
 26112  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26113  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26114  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26115  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26116  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26117  000E4A  0E00               	movlw	0
 26118  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26119  000E4E  0E14               	movlw	20
 26120  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26121  000E52  EC00  F028         	call	_StringCopy	;wreg free
 26122                           
 26123                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26124  000E56  0E00               	movlw	0
 26125  000E58  0101               	movlb	1	; () banked
 26126  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26127  000E5C  D01C               	goto	l1210
 26128  000E5E                     
 26129                           ; BSR set to: 1
 26130                           ;mdm_gsm_gprs_http.c: 161: {
 26131                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26132                           
 26133                           ; BSR set to: 1
 26134  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26135  000E60  0D01               	mullw	1
 26136  000E62  50F3               	movf	prodl,w,c
 26137  000E64  0100               	movlb	0	; () banked
 26138  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26139  000E68  6ED9               	movwf	fsr2l,c
 26140  000E6A  50F4               	movf	prodh,w,c
 26141  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26142  000E6E  6EDA               	movwf	fsr2h,c
 26143  000E70  0101               	movlb	1	; () banked
 26144  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26145  000E74  0100               	movlb	0	; () banked
 26146  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26147  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26148  000E7A  0E14               	movlw	20
 26149  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26150  000E7E  0E00               	movlw	0
 26151  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26152  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26153  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26154  000E86  6EE1               	movwf	fsr1l,c
 26155  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26156  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26157  000E8C  6EE2               	movwf	fsr1h,c
 26158  000E8E  CFDF FFE7          	movff	indf2,indf1
 26159                           
 26160                           ; BSR set to: 0
 26161  000E92  0101               	movlb	1	; () banked
 26162  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26163  000E96                     l1210:
 26164                           
 26165                           ; BSR set to: 1
 26166                           
 26167                           ; BSR set to: 1
 26168  000E96  0100               	movlb	0	; () banked
 26169  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26170  000E9A  0101               	movlb	1	; () banked
 26171  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26172  000E9E  A0D8               	btfss	status,0,c
 26173  000EA0  D7DE               	goto	l1211
 26174                           
 26175                           ; BSR set to: 1
 26176                           ;mdm_gsm_gprs_http.c: 163: }
 26177                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26178                           
 26179                           ; BSR set to: 1
 26180  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26181  000EA4  0100               	movlb	0	; () banked
 26182  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26183  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26184  000EAA  0E14               	movlw	20
 26185  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26186  000EAE  0E00               	movlw	0
 26187  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26188  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26189  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26190  000EB6  6ED9               	movwf	fsr2l,c
 26191  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26192  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26193  000EBC  6EDA               	movwf	fsr2h,c
 26194  000EBE  0E22               	movlw	34
 26195  000EC0  6EDF               	movwf	indf2,c
 26196                           
 26197                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26198  000EC2  0101               	movlb	1	; () banked
 26199  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26200  000EC6  0100               	movlb	0	; () banked
 26201  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26202  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26203  000ECC  0E15               	movlw	21
 26204  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26205  000ED0  0E00               	movlw	0
 26206  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26207  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26208  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26209  000ED8  6ED9               	movwf	fsr2l,c
 26210  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26211  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26212  000EDE  6EDA               	movwf	fsr2h,c
 26213  000EE0  0E0D               	movlw	13
 26214  000EE2  6EDF               	movwf	indf2,c
 26215                           
 26216                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26217  000EE4  0101               	movlb	1	; () banked
 26218  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26219  000EE8  0100               	movlb	0	; () banked
 26220  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26221  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26222  000EEE  0E16               	movlw	22
 26223  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26224  000EF2  0E00               	movlw	0
 26225  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26226  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26227  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26228  000EFA  6ED9               	movwf	fsr2l,c
 26229  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26230  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26231  000F00  6EDA               	movwf	fsr2h,c
 26232  000F02  0E00               	movlw	0
 26233  000F04  6EDF               	movwf	indf2,c
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26237  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26238  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26239  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26240  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26241  000F0E  0E01               	movlw	1
 26242  000F10  ECE1  F02C         	call	_Uart_WriteString
 26243                           
 26244                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26245  000F14  0E07               	movlw	7
 26246  000F16  0101               	movlb	1	; () banked
 26247  000F18  6FE5               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26248                           
 26249                           ; BSR set to: 1
 26250                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26251  000F1A  0E03               	movlw	3
 26252  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26253                           
 26254                           ; BSR set to: 1
 26255                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26256  000F1E  0EF4               	movlw	low _ConnTimeout
 26257  000F20  0100               	movlb	0	; () banked
 26258  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26259  000F24  0E02               	movlw	high _ConnTimeout
 26260  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26261  000F28  0E20               	movlw	32
 26262  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26263  000F2C  0E4E               	movlw	78
 26264  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26265  000F30  0E00               	movlw	0
 26266  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26267  000F34  0E00               	movlw	0
 26268  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26269  000F38  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26270  000F3C  D039               	goto	l13343
 26271  000F3E                     
 26272                           ; BSR set to: 1
 26273                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26274                           
 26275                           ; BSR set to: 1
 26276  000F3E  0E56               	movlw	low STR_10
 26277  000F40  0100               	movlb	0	; () banked
 26278  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26279  000F44  0EFF               	movlw	high STR_10
 26280  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26281  000F48  0E01               	movlw	1
 26282  000F4A  EC20  F02C         	call	_Uart_WriteConstString
 26283                           
 26284                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26285  000F4E  0E07               	movlw	7
 26286  000F50  0101               	movlb	1	; () banked
 26287  000F52  6FE5               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26288                           
 26289                           ; BSR set to: 1
 26290                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26291  000F54  0E05               	movlw	5
 26292  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26293                           
 26294                           ; BSR set to: 1
 26295                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26296  000F58  0EF4               	movlw	low _ConnTimeout
 26297  000F5A  0100               	movlb	0	; () banked
 26298  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26299  000F5E  0E02               	movlw	high _ConnTimeout
 26300  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26301  000F62  0E20               	movlw	32
 26302  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26303  000F66  0E4E               	movlw	78
 26304  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26305  000F6A  0E00               	movlw	0
 26306  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26307  000F6E  0E00               	movlw	0
 26308  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26309  000F72  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26310  000F76  D01C               	goto	l13343
 26311  000F78                     
 26312                           ; BSR set to: 1
 26313                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26314                           
 26315                           ; BSR set to: 1
 26316  000F78  0E64               	movlw	low STR_11
 26317  000F7A  0100               	movlb	0	; () banked
 26318  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26319  000F7E  0EFF               	movlw	high STR_11
 26320  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26321  000F82  0E01               	movlw	1
 26322  000F84  EC20  F02C         	call	_Uart_WriteConstString
 26323                           
 26324                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26325  000F88  0E08               	movlw	8
 26326  000F8A  0101               	movlb	1	; () banked
 26327  000F8C  6FE5               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26328                           
 26329                           ; BSR set to: 1
 26330                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26331  000F8E  0E05               	movlw	5
 26332  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26333                           
 26334                           ; BSR set to: 1
 26335                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26336  000F92  0EF4               	movlw	low _ConnTimeout
 26337  000F94  0100               	movlb	0	; () banked
 26338  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26339  000F98  0E02               	movlw	high _ConnTimeout
 26340  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26341  000F9C  0E20               	movlw	32
 26342  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26343  000FA0  0E4E               	movlw	78
 26344  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26345  000FA4  0E00               	movlw	0
 26346  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26347  000FA8  0E00               	movlw	0
 26348  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26349  000FAC  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26350  000FB0                     l13343:
 26351                           
 26352                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26353  000FB0  0E01               	movlw	1
 26354  000FB2  0101               	movlb	1	; () banked
 26355  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26356                           
 26357                           ;mdm_gsm_gprs_http.c: 201: break;
 26358  000FB6  D07C               	goto	l1207
 26359  000FB8                     
 26360                           ; BSR set to: 1
 26361                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26362                           
 26363                           ; BSR set to: 1
 26364  000FB8  0E02               	movlw	2
 26365  000FBA  D05A               	goto	L69
 26366  000FBC                     
 26367                           ; BSR set to: 1
 26368                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26369                           
 26370                           ; BSR set to: 1
 26371  000FBC  0E3C               	movlw	low _NewStringReceived
 26372  000FBE  0100               	movlb	0	; () banked
 26373  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26374  000FC2  0E00               	movlw	high _NewStringReceived
 26375  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26376  000FC6  EC53  F02E         	call	_ReceiveEvt	;wreg free
 26377  000FCA  0900               	iorlw	0
 26378  000FCC  B4D8               	btfsc	status,2,c
 26379  000FCE  D018               	goto	l1217
 26380                           
 26381                           ;mdm_gsm_gprs_http.c: 212: {
 26382                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26383  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26384  000FD4  0A4F               	xorlw	79
 26385  000FD6  A4D8               	btfss	status,2,c
 26386  000FD8  D06B               	goto	l1207
 26387  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26388  000FDE  0A4B               	xorlw	75
 26389  000FE0  A4D8               	btfss	status,2,c
 26390  000FE2  D066               	goto	l1207
 26391                           
 26392                           ;mdm_gsm_gprs_http.c: 215: {
 26393                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26394  000FE4  C02A  F1E5         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26395                           
 26396                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26397  000FE8  0E58               	movlw	low _RxBuffer
 26398  000FEA  0100               	movlb	0	; () banked
 26399  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26400  000FEE  0E0C               	movlw	high _RxBuffer
 26401  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26402  000FF2  0E01               	movlw	1
 26403  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26404  000FF6  0E90               	movlw	144
 26405  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26406  000FFA  EC75  F02D         	call	_ClearBuffer	;wreg free
 26407                           
 26408                           ;mdm_gsm_gprs_http.c: 220: }
 26409                           ;mdm_gsm_gprs_http.c: 221: }
 26410  000FFE  D058               	goto	l1207
 26411  001000                     l1217:
 26412                           
 26413                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26414  001000  0EF4               	movlw	low _ConnTimeout
 26415  001002  0100               	movlb	0	; () banked
 26416  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26417  001006  0E02               	movlw	high _ConnTimeout
 26418  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26419  00100A  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26420  00100E  D029               	goto	L34
 26421  001010                     
 26422                           ; BSR set to: 1
 26423                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26424                           
 26425                           ; BSR set to: 1
 26426  001010  0E3C               	movlw	low _NewStringReceived
 26427  001012  0100               	movlb	0	; () banked
 26428  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26429  001016  0E00               	movlw	high _NewStringReceived
 26430  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26431  00101A  EC53  F02E         	call	_ReceiveEvt	;wreg free
 26432  00101E  0900               	iorlw	0
 26433  001020  B4D8               	btfsc	status,2,c
 26434  001022  D018               	goto	l1222
 26435                           
 26436                           ;mdm_gsm_gprs_http.c: 232: {
 26437                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26438  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26439  001028  0A2B               	xorlw	43
 26440  00102A  A4D8               	btfss	status,2,c
 26441  00102C  D041               	goto	l1207
 26442  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26443  001032  0A53               	xorlw	83
 26444  001034  A4D8               	btfss	status,2,c
 26445  001036  D03C               	goto	l1207
 26446                           
 26447                           ;mdm_gsm_gprs_http.c: 235: {
 26448                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26449  001038  C02A  F1E5         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26450                           
 26451                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26452  00103C  0E58               	movlw	low _RxBuffer
 26453  00103E  0100               	movlb	0	; () banked
 26454  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26455  001042  0E0C               	movlw	high _RxBuffer
 26456  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26457  001046  0E01               	movlw	1
 26458  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26459  00104A  0E90               	movlw	144
 26460  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26461  00104E  EC75  F02D         	call	_ClearBuffer	;wreg free
 26462                           
 26463                           ;mdm_gsm_gprs_http.c: 240: }
 26464                           ;mdm_gsm_gprs_http.c: 241: }
 26465  001052  D02E               	goto	l1207
 26466  001054                     l1222:
 26467                           
 26468                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26469  001054  0EF4               	movlw	low _ConnTimeout
 26470  001056  0100               	movlb	0	; () banked
 26471  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26472  00105A  0E02               	movlw	high _ConnTimeout
 26473  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26474  00105E  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26475  001062                     L34:
 26476  001062  06E8               	decf	wreg,f,c
 26477  001064  A4D8               	btfss	status,2,c
 26478  001066  D024               	goto	l1207
 26479                           
 26480                           ;mdm_gsm_gprs_http.c: 243: {
 26481                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26482  001068  0E06               	movlw	6
 26483  00106A                     L70:
 26484  00106A  0101               	movlb	1	; () banked
 26485  00106C  D003               	goto	L33
 26486  00106E                     
 26487                           ; BSR set to: 1
 26488                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26489                           
 26490                           ; BSR set to: 1
 26491  00106E  0E03               	movlw	3
 26492  001070                     L69:
 26493  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26494                           
 26495                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26496  001072  0E00               	movlw	0
 26497  001074                     L33:
 26498  001074  6FE5               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26499                           
 26500                           ; BSR set to: 1
 26501                           ;mdm_gsm_gprs_http.c: 257: }
 26502                           
 26503                           ; BSR set to: 1
 26504                           ;mdm_gsm_gprs_http.c: 256: break;
 26505                           
 26506                           ;mdm_gsm_gprs_http.c: 255: default:
 26507                           
 26508                           ;mdm_gsm_gprs_http.c: 253: break;
 26509  001076  D01C               	goto	l1207
 26510  001078                     l1204:
 26511                           
 26512                           ; BSR set to: 1
 26513                           
 26514                           ; BSR set to: 1
 26515  001078  51E5               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26516                           
 26517                           ; Switch size 1, requested type "space"
 26518                           ; Number of cases is 9, Range of values is 0 to 8
 26519                           ; switch strategies available:
 26520                           ; Name         Instructions Cycles
 26521                           ; simple_byte           28    15 (average)
 26522                           ;	Chosen strategy is simple_byte
 26523  00107A  0A00               	xorlw	0	; case 0
 26524  00107C  B4D8               	btfsc	status,2,c
 26525  00107E  D6A8               	goto	l1205
 26526  001080  0A01               	xorlw	1	; case 1
 26527  001082  B4D8               	btfsc	status,2,c
 26528  001084  D6B1               	goto	l1208
 26529  001086  0A03               	xorlw	3	; case 2
 26530  001088  B4D8               	btfsc	status,2,c
 26531  00108A  D6CB               	goto	l1209
 26532  00108C  0A01               	xorlw	1	; case 3
 26533  00108E  B4D8               	btfsc	status,2,c
 26534  001090  D756               	goto	l1213
 26535  001092  0A07               	xorlw	7	; case 4
 26536  001094  B4D8               	btfsc	status,2,c
 26537  001096  D770               	goto	l1214
 26538  001098  0A01               	xorlw	1	; case 5
 26539  00109A  B4D8               	btfsc	status,2,c
 26540  00109C  D78D               	goto	l1215
 26541  00109E  0A03               	xorlw	3	; case 6
 26542  0010A0  B4D8               	btfsc	status,2,c
 26543  0010A2  D7E5               	goto	l1226
 26544  0010A4  0A01               	xorlw	1	; case 7
 26545  0010A6  B4D8               	btfsc	status,2,c
 26546  0010A8  D789               	goto	l1216
 26547  0010AA  0A0F               	xorlw	15	; case 8
 26548  0010AC  B4D8               	btfsc	status,2,c
 26549  0010AE  D7B0               	goto	l1221
 26550  0010B0                     l1207:
 26551                           
 26552                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26553                           
 26554                           ; BSR set to: 1
 26555  0010B0  0101               	movlb	1	; () banked
 26556  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26557  0010B4  0012               	return	
 26558  0010B6                     __end_of_InitGprsNetwork:
 26559                           	opt stack 0
 26560                           tosu	equ	0xFFF
 26561                           tosh	equ	0xFFE
 26562                           tosl	equ	0xFFD
 26563                           pclath	equ	0xFFA
 26564                           tblptru	equ	0xFF8
 26565                           tblptrh	equ	0xFF7
 26566                           tblptrl	equ	0xFF6
 26567                           tablat	equ	0xFF5
 26568                           prodh	equ	0xFF4
 26569                           prodl	equ	0xFF3
 26570                           intcon	equ	0xFF2
 26571                           intcon2	equ	0xFF1
 26572                           intcon3	equ	0xFF0
 26573                           indf0	equ	0xFEF
 26574                           postinc0	equ	0xFEE
 26575                           plusw0	equ	0xFEB
 26576                           fsr0h	equ	0xFEA
 26577                           fsr0l	equ	0xFE9
 26578                           wreg	equ	0xFE8
 26579                           indf1	equ	0xFE7
 26580                           postinc1	equ	0xFE6
 26581                           postdec1	equ	0xFE5
 26582                           plusw1	equ	0xFE3
 26583                           fsr1h	equ	0xFE2
 26584                           fsr1l	equ	0xFE1
 26585                           indf2	equ	0xFDF
 26586                           postinc2	equ	0xFDE
 26587                           postdec2	equ	0xFDD
 26588                           plusw2	equ	0xFDB
 26589                           fsr2h	equ	0xFDA
 26590                           fsr2l	equ	0xFD9
 26591                           status	equ	0xFD8
 26592                           
 26593 ;; *************** function _HttpGetMethod *****************
 26594 ;; Defined at:
 26595 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26596 ;; Parameters:    Size  Location     Type
 26597 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26598 ;;		 -> HttpGetDataLocal(5), 
 26599 ;; Auto vars:     Size  Location     Type
 26600 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26601 ;;  Index           1  200[BANK1 ] unsigned char 
 26602 ;; Return value:  Size  Location     Type
 26603 ;;                  1    wreg      enum E8906
 26604 ;; Registers used:
 26605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26606 ;; Tracked objects:
 26607 ;;		On entry : 0/0
 26608 ;;		On exit  : 0/0
 26609 ;;		Unchanged: 0/0
 26610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26612 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26614 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26615 ;;Total ram usage:      207 bytes
 26616 ;; Hardware stack levels used:    1
 26617 ;; Hardware stack levels required when called:   14
 26618 ;; This function calls:
 26619 ;;		_ClearBuffer
 26620 ;;		_OsTmr_GetTimerStatus
 26621 ;;		_OsTmr_StartTimer
 26622 ;;		_ReceiveEvt
 26623 ;;		_StringCopy
 26624 ;;		_Uart_WriteConstString
 26625 ;;		_Uart_WriteString
 26626 ;; This function is called by:
 26627 ;;		_MdmHttp_MainTask
 26628 ;; This function uses a non-reentrant model
 26629 ;;
 26630                           
 26631                           	psect	text120
 26632  0005EC                     __ptext120:
 26633                           	opt stack 0
 26634  0005EC                     _HttpGetMethod:
 26635                           	opt stack 13
 26636                           
 26637                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26638                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26639                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26640                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26641                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26642                           
 26643                           ; BSR set to: 1
 26644                           ;incstack = 0
 26645  0005EC  0E00               	movlw	0
 26646  0005EE  0101               	movlb	1	; () banked
 26647  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26648                           
 26649                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26650  0005F2  D230               	goto	l1237
 26651  0005F4                     
 26652                           ; BSR set to: 1
 26653                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26654                           
 26655                           ; BSR set to: 1
 26656  0005F4  0EFD               	movlw	low _GetMethod
 26657  0005F6  0100               	movlb	0	; () banked
 26658  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26659  0005FA  0E01               	movlw	high _GetMethod
 26660  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26661  0005FE  EC53  F02E         	call	_ReceiveEvt	;wreg free
 26662  000602  0900               	iorlw	0
 26663  000604  B4D8               	btfsc	status,2,c
 26664  000606  D257               	goto	l1240
 26665                           
 26666                           ;mdm_gsm_gprs_http.c: 284: {
 26667                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26668  000608  0E01               	movlw	1
 26669  00060A  D18C               	goto	L36
 26670  00060C                     
 26671                           ; BSR set to: 1
 26672                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26673                           
 26674                           ; BSR set to: 1
 26675  00060C  0EA8               	movlw	low STR_12
 26676  00060E  0100               	movlb	0	; () banked
 26677  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26678  000612  0EFF               	movlw	high STR_12
 26679  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26680  000616  0E01               	movlw	1
 26681  000618  EC20  F02C         	call	_Uart_WriteConstString
 26682                           
 26683                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26684  00061C  0E0A               	movlw	10
 26685  00061E  0101               	movlb	1	; () banked
 26686  000620  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26687                           
 26688                           ; BSR set to: 1
 26689                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26690  000622  0E02               	movlw	2
 26691  000624  0100               	movlb	0	; () banked
 26692  000626  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26696  000628  0EF4               	movlw	low _ConnTimeout
 26697  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26698  00062C  0E02               	movlw	high _ConnTimeout
 26699  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26700  000630  0E20               	movlw	32
 26701  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26702  000634  0E4E               	movlw	78
 26703  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26704  000638  0E00               	movlw	0
 26705  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26706  00063C  0E00               	movlw	0
 26707  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26708  000640  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26709  000644  D1AF               	goto	l13509
 26710  000646                     
 26711                           ; BSR set to: 1
 26712                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 26713                           
 26714                           ; BSR set to: 1
 26715  000646  0E72               	movlw	low STR_13
 26716  000648  0100               	movlb	0	; () banked
 26717  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26718  00064C  0EFF               	movlw	high STR_13
 26719  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26720  000650  0E01               	movlw	1
 26721  000652  EC20  F02C         	call	_Uart_WriteConstString
 26722                           
 26723                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 26724  000656  0E0A               	movlw	10
 26725  000658  0101               	movlb	1	; () banked
 26726  00065A  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26727                           
 26728                           ; BSR set to: 1
 26729                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 26730  00065C  0E03               	movlw	3
 26731  00065E  0100               	movlb	0	; () banked
 26732  000660  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26733                           
 26734                           ; BSR set to: 0
 26735                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 26736  000662  0EF4               	movlw	low _ConnTimeout
 26737  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26738  000666  0E02               	movlw	high _ConnTimeout
 26739  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26740  00066A  0E20               	movlw	32
 26741  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26742  00066E  0E4E               	movlw	78
 26743  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26744  000672  0E00               	movlw	0
 26745  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26746  000676  0E00               	movlw	0
 26747  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26748  00067A  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26749  00067E  D192               	goto	l13509
 26750  000680                     
 26751                           ; BSR set to: 1
 26752                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 26753                           
 26754                           ; BSR set to: 1
 26755  000680  0EB3               	movlw	low STR_14
 26756  000682  0100               	movlb	0	; () banked
 26757  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26758  000686  0EFE               	movlw	high STR_14
 26759  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26760  00068A  0E01               	movlw	1
 26761  00068C  EC20  F02C         	call	_Uart_WriteConstString
 26762                           
 26763                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 26764  000690  0E0A               	movlw	10
 26765  000692  0101               	movlb	1	; () banked
 26766  000694  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26767                           
 26768                           ; BSR set to: 1
 26769                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 26770  000696  0E04               	movlw	4
 26771  000698  0100               	movlb	0	; () banked
 26772  00069A  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26773                           
 26774                           ; BSR set to: 0
 26775                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 26776  00069C  0EF4               	movlw	low _ConnTimeout
 26777  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26778  0006A0  0E02               	movlw	high _ConnTimeout
 26779  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26780  0006A4  0E20               	movlw	32
 26781  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26782  0006A8  0E4E               	movlw	78
 26783  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26784  0006AC  0E00               	movlw	0
 26785  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26786  0006B0  0E00               	movlw	0
 26787  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26788  0006B4  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26789  0006B8  D175               	goto	l13509
 26790  0006BA                     
 26791                           ; BSR set to: 1
 26792                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 26793                           
 26794                           ; BSR set to: 1
 26795  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26796  0006BC  0100               	movlb	0	; () banked
 26797  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26798  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 26799  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26800  0006C4  0E00               	movlw	0
 26801  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26802  0006C8  0EC8               	movlw	200
 26803  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26804  0006CC  EC75  F02D         	call	_ClearBuffer	;wreg free
 26805                           
 26806                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 26807  0006D0  0EF1               	movlw	low STR_15
 26808  0006D2  0100               	movlb	0	; () banked
 26809  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26810  0006D6  0EFE               	movlw	high STR_15
 26811  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26812  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 26813  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26814  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 26815  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26816  0006E2  0E00               	movlw	0
 26817  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26818  0006E6  0E13               	movlw	19
 26819  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 26820  0006EA  EC00  F028         	call	_StringCopy	;wreg free
 26821                           
 26822                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 26823  0006EE  0E00               	movlw	0
 26824  0006F0  0101               	movlb	1	; () banked
 26825  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26826  0006F4  D024               	goto	l1245
 26827  0006F6                     
 26828                           ; BSR set to: 1
 26829                           ;mdm_gsm_gprs_http.c: 332: {
 26830                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 26831                           
 26832                           ; BSR set to: 1
 26833  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26834  0006F8  0D01               	mullw	1
 26835  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 26836  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 26837  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 26838  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 26839  00070A  50F3               	movf	prodl,w,c
 26840  00070C  0100               	movlb	0	; () banked
 26841  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26842  000710  6ED9               	movwf	fsr2l,c
 26843  000712  50F4               	movf	prodh,w,c
 26844  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26845  000716  6EDA               	movwf	fsr2h,c
 26846  000718  0101               	movlb	1	; () banked
 26847  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26848  00071C  0100               	movlb	0	; () banked
 26849  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 26850  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 26851  000722  0E13               	movlw	19
 26852  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 26853  000726  0E00               	movlw	0
 26854  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 26855  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 26856  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 26857  00072E  6EE1               	movwf	fsr1l,c
 26858  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 26859  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 26860  000734  6EE2               	movwf	fsr1h,c
 26861  000736  CFDF FFE7          	movff	indf2,indf1
 26862                           
 26863                           ; BSR set to: 0
 26864  00073A  0101               	movlb	1	; () banked
 26865  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 26866  00073E                     l1245:
 26867                           
 26868                           ; BSR set to: 1
 26869                           
 26870                           ; BSR set to: 1
 26871  00073E  0100               	movlb	0	; () banked
 26872  000740  EE20 F002          	lfsr	2,2
 26873  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26874  000746  26D9               	addwf	fsr2l,f,c
 26875  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26876  00074A  22DA               	addwfc	fsr2h,f,c
 26877  00074C  50DE               	movf	postinc2,w,c
 26878  00074E  0101               	movlb	1	; () banked
 26879  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 26880  000752  A0D8               	btfss	status,0,c
 26881  000754  D7D0               	goto	l1246
 26882                           
 26883                           ; BSR set to: 1
 26884                           ;mdm_gsm_gprs_http.c: 334: }
 26885                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 26886                           
 26887                           ; BSR set to: 1
 26888  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26889  000758  0100               	movlb	0	; () banked
 26890  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26891  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26892  00075E  0E13               	movlw	19
 26893  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26894  000762  0E00               	movlw	0
 26895  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26896  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 26897  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26898  00076A  6ED9               	movwf	fsr2l,c
 26899  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 26900  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26901  000770  6EDA               	movwf	fsr2h,c
 26902  000772  0E22               	movlw	34
 26903  000774  6EDF               	movwf	indf2,c
 26904                           
 26905                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 26906  000776  0101               	movlb	1	; () banked
 26907  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26908  00077A  0100               	movlb	0	; () banked
 26909  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26910  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26911  000780  0E14               	movlw	20
 26912  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26913  000784  0E00               	movlw	0
 26914  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26915  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 26916  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26917  00078C  6ED9               	movwf	fsr2l,c
 26918  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 26919  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26920  000792  6EDA               	movwf	fsr2h,c
 26921  000794  0E0D               	movlw	13
 26922  000796  6EDF               	movwf	indf2,c
 26923                           
 26924                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 26925  000798  0101               	movlb	1	; () banked
 26926  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26927  00079C  0100               	movlb	0	; () banked
 26928  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26929  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26930  0007A2  0E15               	movlw	21
 26931  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26932  0007A6  0E00               	movlw	0
 26933  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26934  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 26935  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26936  0007AE  6ED9               	movwf	fsr2l,c
 26937  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 26938  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26939  0007B4  6EDA               	movwf	fsr2h,c
 26940  0007B6  0E00               	movlw	0
 26941  0007B8  6EDF               	movwf	indf2,c
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 26945  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26946  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26947  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 26948  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26949  0007C2  0E01               	movlw	1
 26950  0007C4  ECE1  F02C         	call	_Uart_WriteString
 26951                           
 26952                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 26953  0007C8  0E0A               	movlw	10
 26954  0007CA  0101               	movlb	1	; () banked
 26955  0007CC  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 26959  0007CE  0E05               	movlw	5
 26960  0007D0  0100               	movlb	0	; () banked
 26961  0007D2  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26962                           
 26963                           ; BSR set to: 0
 26964                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 26965  0007D4  0EF4               	movlw	low _ConnTimeout
 26966  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26967  0007D8  0E02               	movlw	high _ConnTimeout
 26968  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26969  0007DC  0E20               	movlw	32
 26970  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26971  0007E0  0E4E               	movlw	78
 26972  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26973  0007E4  0E00               	movlw	0
 26974  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26975  0007E8  0E00               	movlw	0
 26976  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26977  0007EC  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 26978  0007F0  D0D9               	goto	l13509
 26979  0007F2                     
 26980                           ; BSR set to: 1
 26981                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 26982                           
 26983                           ; BSR set to: 1
 26984  0007F2  0E29               	movlw	low STR_16
 26985  0007F4  0100               	movlb	0	; () banked
 26986  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26987  0007F8  0EFF               	movlw	high STR_16
 26988  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26989  0007FC  0E01               	movlw	1
 26990  0007FE  EC20  F02C         	call	_Uart_WriteConstString
 26991                           
 26992                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 26993  000802  0E0A               	movlw	10
 26994  000804  0101               	movlb	1	; () banked
 26995  000806  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26996                           
 26997                           ; BSR set to: 1
 26998                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 26999  000808  0E06               	movlw	6
 27000  00080A  0100               	movlb	0	; () banked
 27001  00080C  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27002                           
 27003                           ; BSR set to: 0
 27004                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27005  00080E  0EF4               	movlw	low _ConnTimeout
 27006  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27007  000812  0E02               	movlw	high _ConnTimeout
 27008  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27009  000816  0E20               	movlw	32
 27010  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27011  00081A  0E4E               	movlw	78
 27012  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27013  00081E  0E00               	movlw	0
 27014  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27015  000822  0E00               	movlw	0
 27016  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27017  000826  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 27018                           
 27019                           ;mdm_gsm_gprs_http.c: 358: break;
 27020  00082A  D145               	goto	l1240
 27021  00082C                     
 27022                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27023  00082C  0E07               	movlw	7
 27024  00082E  0101               	movlb	1	; () banked
 27025  000830  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27026                           
 27027                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27028  000832  0E09               	movlw	9
 27029  000834  0100               	movlb	0	; () banked
 27030  000836  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27031                           
 27032                           ; BSR set to: 0
 27033                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27034  000838  0EF4               	movlw	low _ConnTimeout
 27035  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27036  00083C  0E02               	movlw	high _ConnTimeout
 27037  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27038  000840  0E20               	movlw	32
 27039  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27040  000844  0E4E               	movlw	78
 27041  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27042  000848  0E00               	movlw	0
 27043  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27044  00084C  0E00               	movlw	0
 27045  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27046  000850  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 27047                           
 27048                           ;mdm_gsm_gprs_http.c: 371: break;
 27049  000854  D130               	goto	l1240
 27050  000856                     
 27051                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27052  000856  0E8E               	movlw	low STR_17
 27053  000858  0100               	movlb	0	; () banked
 27054  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27055  00085C  0EFF               	movlw	high STR_17
 27056  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27057  000860  0E01               	movlw	1
 27058  000862  EC20  F02C         	call	_Uart_WriteConstString
 27059                           
 27060                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27061  000866  0E0D               	movlw	13
 27062  000868  0101               	movlb	1	; () banked
 27063  00086A  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27064                           
 27065                           ; BSR set to: 1
 27066                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27067  00086C  0E09               	movlw	9
 27068  00086E  0100               	movlb	0	; () banked
 27069  000870  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27070                           
 27071                           ; BSR set to: 0
 27072                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27073  000872  0EF4               	movlw	low _ConnTimeout
 27074  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27075  000876  0E02               	movlw	high _ConnTimeout
 27076  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27077  00087A  0E20               	movlw	32
 27078  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27079  00087E  0E4E               	movlw	78
 27080  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27081  000882  0E00               	movlw	0
 27082  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27083  000886  0E00               	movlw	0
 27084  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27085  00088A  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 27086  00088E  D08A               	goto	l13509
 27087  000890                     
 27088                           ; BSR set to: 1
 27089                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27090                           
 27091                           ; BSR set to: 1
 27092  000890  0E9B               	movlw	low STR_18
 27093  000892  0100               	movlb	0	; () banked
 27094  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27095  000896  0EFF               	movlw	high STR_18
 27096  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27097  00089A  0E01               	movlw	1
 27098  00089C  EC20  F02C         	call	_Uart_WriteConstString
 27099                           
 27100                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27101  0008A0  0E0A               	movlw	10
 27102  0008A2  0101               	movlb	1	; () banked
 27103  0008A4  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27104                           
 27105                           ; BSR set to: 1
 27106                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27107  0008A6  0E0E               	movlw	14
 27108  0008A8  0100               	movlb	0	; () banked
 27109  0008AA  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27110                           
 27111                           ; BSR set to: 0
 27112                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27113  0008AC  0EF4               	movlw	low _ConnTimeout
 27114  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27115  0008B0  0E02               	movlw	high _ConnTimeout
 27116  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27117  0008B4  0E20               	movlw	32
 27118  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27119  0008B8  0E4E               	movlw	78
 27120  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27121  0008BC  0E00               	movlw	0
 27122  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27123  0008C0  0E00               	movlw	0
 27124  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27125  0008C4  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 27126  0008C8  D06D               	goto	l13509
 27127  0008CA                     
 27128                           ; BSR set to: 1
 27129                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27130                           
 27131                           ; BSR set to: 1
 27132  0008CA  0E3C               	movlw	low _NewStringReceived
 27133  0008CC  0100               	movlb	0	; () banked
 27134  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27135  0008D0  0E00               	movlw	high _NewStringReceived
 27136  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27137  0008D4  EC53  F02E         	call	_ReceiveEvt	;wreg free
 27138  0008D8  0900               	iorlw	0
 27139  0008DA  B4D8               	btfsc	status,2,c
 27140  0008DC  D018               	goto	l1253
 27141                           
 27142                           ;mdm_gsm_gprs_http.c: 400: {
 27143                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27144  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27145  0008E2  0A4F               	xorlw	79
 27146  0008E4  A4D8               	btfss	status,2,c
 27147  0008E6  D0E7               	goto	l1240
 27148  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27149  0008EC  0A4B               	xorlw	75
 27150  0008EE  A4D8               	btfss	status,2,c
 27151  0008F0  D0E2               	goto	l1240
 27152                           
 27153                           ;mdm_gsm_gprs_http.c: 403: {
 27154                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27155  0008F2  C0D5  F1E4         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27156                           
 27157                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27158  0008F6  0E58               	movlw	low _RxBuffer
 27159  0008F8  0100               	movlb	0	; () banked
 27160  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27161  0008FC  0E0C               	movlw	high _RxBuffer
 27162  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27163  000900  0E01               	movlw	1
 27164  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27165  000904  0E90               	movlw	144
 27166  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27167  000908  EC75  F02D         	call	_ClearBuffer	;wreg free
 27168                           
 27169                           ;mdm_gsm_gprs_http.c: 408: }
 27170                           ;mdm_gsm_gprs_http.c: 409: }
 27171  00090C  D0D4               	goto	l1240
 27172  00090E                     l1253:
 27173                           
 27174                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27175  00090E  0EF4               	movlw	low _ConnTimeout
 27176  000910  0100               	movlb	0	; () banked
 27177  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27178  000914  0E02               	movlw	high _ConnTimeout
 27179  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27180  000918  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27181  00091C                     L37:
 27182  00091C  06E8               	decf	wreg,f,c
 27183  00091E  A4D8               	btfss	status,2,c
 27184  000920  D0CA               	goto	l1240
 27185                           
 27186                           ;mdm_gsm_gprs_http.c: 411: {
 27187                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27188  000922  0E0F               	movlw	15
 27189  000924                     L36:
 27190  000924  0101               	movlb	1	; () banked
 27191  000926  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27192                           
 27193                           ; BSR set to: 1
 27194                           ;mdm_gsm_gprs_http.c: 414: }
 27195                           ;mdm_gsm_gprs_http.c: 415: break;
 27196                           
 27197                           ; BSR set to: 1
 27198  000928  D0C6               	goto	l1240
 27199  00092A                     
 27200                           ; BSR set to: 1
 27201                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27202                           
 27203                           ; BSR set to: 1
 27204  00092A  0E3C               	movlw	low _NewStringReceived
 27205  00092C  0100               	movlb	0	; () banked
 27206  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27207  000930  0E00               	movlw	high _NewStringReceived
 27208  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27209  000934  EC53  F02E         	call	_ReceiveEvt	;wreg free
 27210  000938  0900               	iorlw	0
 27211  00093A  B4D8               	btfsc	status,2,c
 27212  00093C  D018               	goto	l1258
 27213                           
 27214                           ;mdm_gsm_gprs_http.c: 420: {
 27215                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27216  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27217  000942  0A2B               	xorlw	43
 27218  000944  A4D8               	btfss	status,2,c
 27219  000946  D0B7               	goto	l1240
 27220  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27221  00094C  0A48               	xorlw	72
 27222  00094E  A4D8               	btfss	status,2,c
 27223  000950  D0B2               	goto	l1240
 27224                           
 27225                           ;mdm_gsm_gprs_http.c: 423: {
 27226                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27227  000952  C0D5  F1E4         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27228                           
 27229                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27230  000956  0E58               	movlw	low _RxBuffer
 27231  000958  0100               	movlb	0	; () banked
 27232  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27233  00095C  0E0C               	movlw	high _RxBuffer
 27234  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27235  000960  0E01               	movlw	1
 27236  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27237  000964  0E90               	movlw	144
 27238  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27239  000968  EC75  F02D         	call	_ClearBuffer	;wreg free
 27240                           
 27241                           ;mdm_gsm_gprs_http.c: 428: }
 27242                           ;mdm_gsm_gprs_http.c: 429: }
 27243  00096C  D0A4               	goto	l1240
 27244  00096E                     l1258:
 27245                           
 27246                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27247  00096E  0EF4               	movlw	low _ConnTimeout
 27248  000970  0100               	movlb	0	; () banked
 27249  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27250  000974  0E02               	movlw	high _ConnTimeout
 27251  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27252  000978  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27253  00097C  D7CF               	goto	L37
 27254  00097E                     
 27255                           ; BSR set to: 1
 27256                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27257                           
 27258                           ; BSR set to: 1
 27259  00097E  0E0C               	movlw	12
 27260  000980  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27261                           
 27262                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27263  000982  0E05               	movlw	5
 27264  000984  0100               	movlb	0	; () banked
 27265  000986  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27269  000988  0EDB               	movlw	low _ConnWait
 27270  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27271  00098C  0E03               	movlw	high _ConnWait
 27272  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27273  000990  0EE8               	movlw	232
 27274  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27275  000994  0E03               	movlw	3
 27276  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27277  000998  0E00               	movlw	0
 27278  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27279  00099C  0E00               	movlw	0
 27280  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27281  0009A0  EC60  F028         	call	_OsTmr_StartTimer	;wreg free
 27282  0009A4                     l13509:
 27283                           
 27284                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27285  0009A4  0E01               	movlw	1
 27286  0009A6  0101               	movlb	1	; () banked
 27287  0009A8  D053               	goto	L39
 27288  0009AA                     
 27289                           ; BSR set to: 1
 27290                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27291                           
 27292                           ; BSR set to: 1
 27293  0009AA  0EDB               	movlw	low _ConnWait
 27294  0009AC  0100               	movlb	0	; () banked
 27295  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27296  0009B0  0E03               	movlw	high _ConnWait
 27297  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27298  0009B4  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27299  0009B8  06E8               	decf	wreg,f,c
 27300  0009BA  A4D8               	btfss	status,2,c
 27301  0009BC  D07C               	goto	l1240
 27302                           
 27303                           ;mdm_gsm_gprs_http.c: 450: {
 27304                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27305  0009BE  C0D5  F1E4         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27306                           
 27307                           ;mdm_gsm_gprs_http.c: 453: }
 27308                           ;mdm_gsm_gprs_http.c: 454: break;
 27309  0009C2  D079               	goto	l1240
 27310  0009C4                     
 27311                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27312  0009C4  0E3C               	movlw	low _NewStringReceived
 27313  0009C6  0100               	movlb	0	; () banked
 27314  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27315  0009CA  0E00               	movlw	high _NewStringReceived
 27316  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27317  0009CE  EC53  F02E         	call	_ReceiveEvt	;wreg free
 27318  0009D2  0900               	iorlw	0
 27319  0009D4  B4D8               	btfsc	status,2,c
 27320  0009D6  D02D               	goto	l1266
 27321                           
 27322                           ;mdm_gsm_gprs_http.c: 459: {
 27323                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27324  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27325  0009DC  0A2B               	xorlw	43
 27326  0009DE  A4D8               	btfss	status,2,c
 27327  0009E0  D06A               	goto	l1240
 27328  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27329  0009E6  0A48               	xorlw	72
 27330  0009E8  A4D8               	btfss	status,2,c
 27331  0009EA  D065               	goto	l1240
 27332                           
 27333                           ;mdm_gsm_gprs_http.c: 462: {
 27334                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27335  0009EC  C0D5  F1E4         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27336                           
 27337                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27338  0009F0  0E58               	movlw	low _RxBuffer
 27339  0009F2  0100               	movlb	0	; () banked
 27340  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27341  0009F6  0E0C               	movlw	high _RxBuffer
 27342  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27343  0009FA  EE20 F003          	lfsr	2,3
 27344  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27345  000A00  26D9               	addwf	fsr2l,f,c
 27346  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27347  000A04  22DA               	addwfc	fsr2h,f,c
 27348  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27349  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27350  000A0E  0E01               	movlw	1
 27351  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27352  000A12  0E90               	movlw	144
 27353  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27354  000A16  EC00  F028         	call	_StringCopy	;wreg free
 27355                           
 27356                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27357  000A1A  0E58               	movlw	low _RxBuffer
 27358  000A1C  0100               	movlb	0	; () banked
 27359  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27360  000A20  0E0C               	movlw	high _RxBuffer
 27361  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27362  000A24  0E01               	movlw	1
 27363  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27364  000A28  0E90               	movlw	144
 27365  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27366  000A2C  EC75  F02D         	call	_ClearBuffer	;wreg free
 27367                           
 27368                           ;mdm_gsm_gprs_http.c: 469: }
 27369                           ;mdm_gsm_gprs_http.c: 470: }
 27370  000A30  D042               	goto	l1240
 27371  000A32                     l1266:
 27372                           
 27373                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27374  000A32  0EF4               	movlw	low _ConnTimeout
 27375  000A34  0100               	movlb	0	; () banked
 27376  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27377  000A38  0E02               	movlw	high _ConnTimeout
 27378  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27379  000A3C  EC6D  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27380  000A40  D76D               	goto	L37
 27381  000A42                     
 27382                           ; BSR set to: 1
 27383                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27384                           
 27385                           ; BSR set to: 1
 27386  000A42  0E00               	movlw	0
 27387  000A44  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27388                           
 27389                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27390  000A46  0E02               	movlw	2
 27391  000A48  D003               	goto	L39
 27392  000A4A                     
 27393                           ; BSR set to: 1
 27394                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27395                           
 27396                           ; BSR set to: 1
 27397  000A4A  0E00               	movlw	0
 27398  000A4C  6FE4               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27399                           
 27400                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27401  000A4E  0E03               	movlw	3
 27402  000A50                     L39:
 27403  000A50  6FE3               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27404                           
 27405                           ; BSR set to: 1
 27406                           ;mdm_gsm_gprs_http.c: 494: }
 27407                           
 27408                           ; BSR set to: 1
 27409                           ;mdm_gsm_gprs_http.c: 493: break;
 27410                           
 27411                           ;mdm_gsm_gprs_http.c: 492: default:
 27412                           
 27413                           ;mdm_gsm_gprs_http.c: 490: break;
 27414  000A52  D031               	goto	l1240
 27415  000A54                     l1237:
 27416                           
 27417                           ; BSR set to: 1
 27418                           
 27419                           ; BSR set to: 1
 27420  000A54  51E4               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27421                           
 27422                           ; Switch size 1, requested type "space"
 27423                           ; Number of cases is 16, Range of values is 0 to 15
 27424                           ; switch strategies available:
 27425                           ; Name         Instructions Cycles
 27426                           ; simple_byte           49    25 (average)
 27427                           ;	Chosen strategy is simple_byte
 27428  000A56  0A00               	xorlw	0	; case 0
 27429  000A58  B4D8               	btfsc	status,2,c
 27430  000A5A  D5CC               	goto	l1238
 27431  000A5C  0A01               	xorlw	1	; case 1
 27432  000A5E  B4D8               	btfsc	status,2,c
 27433  000A60  D5D5               	goto	l1241
 27434  000A62  0A03               	xorlw	3	; case 2
 27435  000A64  B4D8               	btfsc	status,2,c
 27436  000A66  D5EF               	goto	l1242
 27437  000A68  0A01               	xorlw	1	; case 3
 27438  000A6A  B4D8               	btfsc	status,2,c
 27439  000A6C  D609               	goto	l1243
 27440  000A6E  0A07               	xorlw	7	; case 4
 27441  000A70  B4D8               	btfsc	status,2,c
 27442  000A72  D623               	goto	l1244
 27443  000A74  0A01               	xorlw	1	; case 5
 27444  000A76  B4D8               	btfsc	status,2,c
 27445  000A78  D6BC               	goto	l1248
 27446  000A7A  0A03               	xorlw	3	; case 6
 27447  000A7C  B4D8               	btfsc	status,2,c
 27448  000A7E  D6D6               	goto	l1249
 27449  000A80  0A01               	xorlw	1	; case 7
 27450  000A82  B4D8               	btfsc	status,2,c
 27451  000A84  D752               	goto	l1257
 27452  000A86  0A0F               	xorlw	15	; case 8
 27453  000A88  B4D8               	btfsc	status,2,c
 27454  000A8A  D6E5               	goto	l1250
 27455  000A8C  0A01               	xorlw	1	; case 9
 27456  000A8E  B4D8               	btfsc	status,2,c
 27457  000A90  D6FF               	goto	l1251
 27458  000A92  0A03               	xorlw	3	; case 10
 27459  000A94  B4D8               	btfsc	status,2,c
 27460  000A96  D719               	goto	l1252
 27461  000A98  0A01               	xorlw	1	; case 11
 27462  000A9A  B4D8               	btfsc	status,2,c
 27463  000A9C  D770               	goto	l1262
 27464  000A9E  0A07               	xorlw	7	; case 12
 27465  000AA0  B4D8               	btfsc	status,2,c
 27466  000AA2  D783               	goto	l1263
 27467  000AA4  0A01               	xorlw	1	; case 13
 27468  000AA6  B4D8               	btfsc	status,2,c
 27469  000AA8  D78D               	goto	l1265
 27470  000AAA  0A03               	xorlw	3	; case 14
 27471  000AAC  B4D8               	btfsc	status,2,c
 27472  000AAE  D7C9               	goto	l1270
 27473  000AB0  0A01               	xorlw	1	; case 15
 27474  000AB2  B4D8               	btfsc	status,2,c
 27475  000AB4  D7CA               	goto	l1271
 27476  000AB6                     l1240:
 27477                           
 27478                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27479                           
 27480                           ; BSR set to: 1
 27481  000AB6  0101               	movlb	1	; () banked
 27482  000AB8  51E3               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27483  000ABA  0012               	return	
 27484  000ABC                     __end_of_HttpGetMethod:
 27485                           	opt stack 0
 27486                           tosu	equ	0xFFF
 27487                           tosh	equ	0xFFE
 27488                           tosl	equ	0xFFD
 27489                           pclath	equ	0xFFA
 27490                           tblptru	equ	0xFF8
 27491                           tblptrh	equ	0xFF7
 27492                           tblptrl	equ	0xFF6
 27493                           tablat	equ	0xFF5
 27494                           prodh	equ	0xFF4
 27495                           prodl	equ	0xFF3
 27496                           intcon	equ	0xFF2
 27497                           intcon2	equ	0xFF1
 27498                           intcon3	equ	0xFF0
 27499                           indf0	equ	0xFEF
 27500                           postinc0	equ	0xFEE
 27501                           plusw0	equ	0xFEB
 27502                           fsr0h	equ	0xFEA
 27503                           fsr0l	equ	0xFE9
 27504                           wreg	equ	0xFE8
 27505                           indf1	equ	0xFE7
 27506                           postinc1	equ	0xFE6
 27507                           postdec1	equ	0xFE5
 27508                           plusw1	equ	0xFE3
 27509                           fsr1h	equ	0xFE2
 27510                           fsr1l	equ	0xFE1
 27511                           indf2	equ	0xFDF
 27512                           postinc2	equ	0xFDE
 27513                           postdec2	equ	0xFDD
 27514                           plusw2	equ	0xFDB
 27515                           fsr2h	equ	0xFDA
 27516                           fsr2l	equ	0xFD9
 27517                           status	equ	0xFD8
 27518                           
 27519 ;; *************** function _Uart_WriteString *****************
 27520 ;; Defined at:
 27521 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27522 ;; Parameters:    Size  Location     Type
 27523 ;;  Module          1    wreg     unsigned char 
 27524 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27525 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27526 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27527 ;; Auto vars:     Size  Location     Type
 27528 ;;  Module          1   34[BANK0 ] unsigned char 
 27529 ;; Return value:  Size  Location     Type
 27530 ;;                  1    wreg      void 
 27531 ;; Registers used:
 27532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27533 ;; Tracked objects:
 27534 ;;		On entry : 0/0
 27535 ;;		On exit  : 0/0
 27536 ;;		Unchanged: 0/0
 27537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27541 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27542 ;;Total ram usage:        3 bytes
 27543 ;; Hardware stack levels used:    1
 27544 ;; Hardware stack levels required when called:   12
 27545 ;; This function calls:
 27546 ;;		_UartTxBufferStatus
 27547 ;;		_UartWriteByte
 27548 ;; This function is called by:
 27549 ;;		_Mdm_SetSmsFormat
 27550 ;;		_InitGprsNetwork
 27551 ;;		_HttpGetMethod
 27552 ;;		_Mdm_PinUnlock
 27553 ;;		_Mdm_MakePhoneCall
 27554 ;; This function uses a non-reentrant model
 27555 ;;
 27556                           
 27557                           	psect	text121
 27558  0059C2                     __ptext121:
 27559                           	opt stack 0
 27560  0059C2                     _Uart_WriteString:
 27561                           	opt stack 13
 27562                           
 27563                           ; BSR set to: 1
 27564                           ;incstack = 0
 27565                           ;Uart_WriteString@Module stored from wreg
 27566  0059C2  0100               	movlb	0	; () banked
 27567  0059C4  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27568                           
 27569                           ;uart_drv.c: 521: while (*StringToWrite)
 27570  0059C6  D014               	goto	u10890
 27571  0059C8                     
 27572                           ;uart_drv.c: 522: {
 27573                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27574  0059C8  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27575  0059CC  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27576  0059D0  50DF               	movf	indf2,w,c
 27577  0059D2  0100               	movlb	0	; () banked
 27578  0059D4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27579  0059D6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27580  0059D8  EC8F  F02F         	call	_UartWriteByte
 27581                           
 27582                           ;uart_drv.c: 526: StringToWrite++;
 27583  0059DC  0100               	movlb	0	; () banked
 27584  0059DE  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27585  0059E0  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27586  0059E2                     
 27587                           ; BSR set to: 0
 27588                           
 27589                           ; BSR set to: 0
 27590  0059E2  0100               	movlb	0	; () banked
 27591  0059E4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27592  0059E6  ECB7  F02A         	call	_UartTxBufferStatus
 27593  0059EA  06E8               	decf	wreg,f,c
 27594  0059EC  B4D8               	btfsc	status,2,c
 27595  0059EE  D7F9               	goto	l709
 27596  0059F0                     u10890:
 27597  0059F0  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27598  0059F4  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27599  0059F8  50DF               	movf	indf2,w,c
 27600  0059FA  B4D8               	btfsc	status,2,c
 27601  0059FC  0012               	return	
 27602  0059FE  D7E4               	goto	l707
 27603  005A00                     __end_of_Uart_WriteString:
 27604                           	opt stack 0
 27605                           tosu	equ	0xFFF
 27606                           tosh	equ	0xFFE
 27607                           tosl	equ	0xFFD
 27608                           pclath	equ	0xFFA
 27609                           tblptru	equ	0xFF8
 27610                           tblptrh	equ	0xFF7
 27611                           tblptrl	equ	0xFF6
 27612                           tablat	equ	0xFF5
 27613                           prodh	equ	0xFF4
 27614                           prodl	equ	0xFF3
 27615                           intcon	equ	0xFF2
 27616                           intcon2	equ	0xFF1
 27617                           intcon3	equ	0xFF0
 27618                           indf0	equ	0xFEF
 27619                           postinc0	equ	0xFEE
 27620                           plusw0	equ	0xFEB
 27621                           fsr0h	equ	0xFEA
 27622                           fsr0l	equ	0xFE9
 27623                           wreg	equ	0xFE8
 27624                           indf1	equ	0xFE7
 27625                           postinc1	equ	0xFE6
 27626                           postdec1	equ	0xFE5
 27627                           plusw1	equ	0xFE3
 27628                           fsr1h	equ	0xFE2
 27629                           fsr1l	equ	0xFE1
 27630                           indf2	equ	0xFDF
 27631                           postinc2	equ	0xFDE
 27632                           postdec2	equ	0xFDD
 27633                           plusw2	equ	0xFDB
 27634                           fsr2h	equ	0xFDA
 27635                           fsr2l	equ	0xFD9
 27636                           status	equ	0xFD8
 27637                           
 27638 ;; *************** function _Uart_WriteConstString *****************
 27639 ;; Defined at:
 27640 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27641 ;; Parameters:    Size  Location     Type
 27642 ;;  Module          1    wreg     unsigned char 
 27643 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27644 ;;		 -> STR_30(14), STR_29(19), STR_20(14), STR_19(14), 
 27645 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 27646 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 27647 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 27648 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 27649 ;; Auto vars:     Size  Location     Type
 27650 ;;  Module          1   34[BANK0 ] unsigned char 
 27651 ;; Return value:  Size  Location     Type
 27652 ;;                  1    wreg      void 
 27653 ;; Registers used:
 27654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27655 ;; Tracked objects:
 27656 ;;		On entry : 0/0
 27657 ;;		On exit  : 0/0
 27658 ;;		Unchanged: 0/0
 27659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27663 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27664 ;;Total ram usage:        3 bytes
 27665 ;; Hardware stack levels used:    1
 27666 ;; Hardware stack levels required when called:   12
 27667 ;; This function calls:
 27668 ;;		_UartTxBufferStatus
 27669 ;;		_UartWriteByte
 27670 ;; This function is called by:
 27671 ;;		_CheckModem
 27672 ;;		_ConfigureModem
 27673 ;;		_GetSmsSm
 27674 ;;		_InitGprsNetwork
 27675 ;;		_HttpGetMethod
 27676 ;;		_initGprsModem
 27677 ;;		_MyApp_Task
 27678 ;;		_Mdm_HangPhoneCall
 27679 ;;		_Mdm_GetPhoneCall
 27680 ;;		_MdmHttp_SetSsl
 27681 ;; This function uses a non-reentrant model
 27682 ;;
 27683                           
 27684                           	psect	text122
 27685  005840                     __ptext122:
 27686                           	opt stack 0
 27687  005840                     _Uart_WriteConstString:
 27688                           	opt stack 14
 27689                           
 27690                           ;incstack = 0
 27691                           ;Uart_WriteConstString@Module stored from wreg
 27692  005840  0100               	movlb	0	; () banked
 27693  005842  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27694                           
 27695                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27696  005844  D015               	goto	u11490
 27697  005846                     
 27698                           ;uart_drv.c: 500: {
 27699                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27700  005846  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27701  00584A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27702  00584E                     	if	0	;tblptru may be non-zero
 27703  00584E                     	endif
 27704  00584E                     	if	0	;tblptru may be non-zero
 27705  00584E                     	endif
 27706  00584E  0008               	tblrd		*
 27707  005850  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 27708  005854  0100               	movlb	0	; () banked
 27709  005856  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27710  005858  EC8F  F02F         	call	_UartWriteByte
 27711                           
 27712                           ;uart_drv.c: 504: ConstStringToWrite++;
 27713  00585C  0100               	movlb	0	; () banked
 27714  00585E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 27715  005860  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 27716  005862                     
 27717                           ; BSR set to: 0
 27718                           
 27719                           ; BSR set to: 0
 27720  005862  0100               	movlb	0	; () banked
 27721  005864  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27722  005866  ECB7  F02A         	call	_UartTxBufferStatus
 27723  00586A  06E8               	decf	wreg,f,c
 27724  00586C  B4D8               	btfsc	status,2,c
 27725  00586E  D7F9               	goto	l700
 27726  005870                     u11490:
 27727  005870  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27728  005874  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27729  005878                     	if	0	;tblptru may be non-zero
 27730  005878                     	endif
 27731  005878                     	if	0	;tblptru may be non-zero
 27732  005878                     	endif
 27733  005878  0008               	tblrd		*
 27734  00587A  50F5               	movf	tablat,w,c
 27735  00587C  0900               	iorlw	0
 27736  00587E  B4D8               	btfsc	status,2,c
 27737  005880  0012               	return	
 27738  005882  D7E1               	goto	l698
 27739  005884                     __end_of_Uart_WriteConstString:
 27740                           	opt stack 0
 27741                           tosu	equ	0xFFF
 27742                           tosh	equ	0xFFE
 27743                           tosl	equ	0xFFD
 27744                           pclath	equ	0xFFA
 27745                           tblptru	equ	0xFF8
 27746                           tblptrh	equ	0xFF7
 27747                           tblptrl	equ	0xFF6
 27748                           tablat	equ	0xFF5
 27749                           prodh	equ	0xFF4
 27750                           prodl	equ	0xFF3
 27751                           intcon	equ	0xFF2
 27752                           intcon2	equ	0xFF1
 27753                           intcon3	equ	0xFF0
 27754                           indf0	equ	0xFEF
 27755                           postinc0	equ	0xFEE
 27756                           plusw0	equ	0xFEB
 27757                           fsr0h	equ	0xFEA
 27758                           fsr0l	equ	0xFE9
 27759                           wreg	equ	0xFE8
 27760                           indf1	equ	0xFE7
 27761                           postinc1	equ	0xFE6
 27762                           postdec1	equ	0xFE5
 27763                           plusw1	equ	0xFE3
 27764                           fsr1h	equ	0xFE2
 27765                           fsr1l	equ	0xFE1
 27766                           indf2	equ	0xFDF
 27767                           postinc2	equ	0xFDE
 27768                           postdec2	equ	0xFDD
 27769                           plusw2	equ	0xFDB
 27770                           fsr2h	equ	0xFDA
 27771                           fsr2l	equ	0xFD9
 27772                           status	equ	0xFD8
 27773                           
 27774 ;; *************** function _UartWriteByte *****************
 27775 ;; Defined at:
 27776 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27777 ;; Parameters:    Size  Location     Type
 27778 ;;  Module          1    wreg     unsigned char 
 27779 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 27780 ;; Auto vars:     Size  Location     Type
 27781 ;;  Module          1   30[BANK0 ] unsigned char 
 27782 ;; Return value:  Size  Location     Type
 27783 ;;                  1    wreg      void 
 27784 ;; Registers used:
 27785 ;;		wreg, status,2, status,0
 27786 ;; Tracked objects:
 27787 ;;		On entry : 0/0
 27788 ;;		On exit  : 0/0
 27789 ;;		Unchanged: 0/0
 27790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27791 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27795 ;;Total ram usage:        2 bytes
 27796 ;; Hardware stack levels used:    1
 27797 ;; Hardware stack levels required when called:   11
 27798 ;; This function calls:
 27799 ;;		Nothing
 27800 ;; This function is called by:
 27801 ;;		_Uart_WriteConstString
 27802 ;;		_Uart_WriteString
 27803 ;;		_Uart_WriteStringLen
 27804 ;; This function uses a non-reentrant model
 27805 ;;
 27806                           
 27807                           	psect	text123
 27808  005F1E                     __ptext123:
 27809                           	opt stack 0
 27810  005F1E                     _UartWriteByte:
 27811                           	opt stack 14
 27812                           
 27813                           ;incstack = 0
 27814                           ;UartWriteByte@Module stored from wreg
 27815  005F1E  0100               	movlb	0	; () banked
 27816  005F20  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 27817                           
 27818                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 27819  005F22  0100               	movlb	0	; () banked
 27820  005F24  057E               	decf	UartWriteByte@Module& (0+255),w,b
 27821  005F26  A4D8               	btfss	status,2,c
 27822  005F28  D003               	goto	l639
 27823                           
 27824                           ; BSR set to: 0
 27825                           ;uart_drv.c: 176: {
 27826                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 27827  005F2A  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 27828                           
 27829                           ;uart_drv.c: 179: }
 27830  005F2E  0012               	return	
 27831  005F30                     l639:
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 27835                           
 27836                           ; BSR set to: 0
 27837  005F30  0E02               	movlw	2
 27838  005F32  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 27839  005F34  A4D8               	btfss	status,2,c
 27840  005F36  0012               	return	
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;uart_drv.c: 181: {
 27844                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 27845  005F38  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 27846                           
 27847                           ; BSR set to: 0
 27848  005F3C  0012               	return	
 27849  005F3E                     __end_of_UartWriteByte:
 27850                           	opt stack 0
 27851                           tosu	equ	0xFFF
 27852                           tosh	equ	0xFFE
 27853                           tosl	equ	0xFFD
 27854                           pclath	equ	0xFFA
 27855                           tblptru	equ	0xFF8
 27856                           tblptrh	equ	0xFF7
 27857                           tblptrl	equ	0xFF6
 27858                           tablat	equ	0xFF5
 27859                           prodh	equ	0xFF4
 27860                           prodl	equ	0xFF3
 27861                           intcon	equ	0xFF2
 27862                           intcon2	equ	0xFF1
 27863                           intcon3	equ	0xFF0
 27864                           indf0	equ	0xFEF
 27865                           postinc0	equ	0xFEE
 27866                           plusw0	equ	0xFEB
 27867                           fsr0h	equ	0xFEA
 27868                           fsr0l	equ	0xFE9
 27869                           wreg	equ	0xFE8
 27870                           indf1	equ	0xFE7
 27871                           postinc1	equ	0xFE6
 27872                           postdec1	equ	0xFE5
 27873                           plusw1	equ	0xFE3
 27874                           fsr1h	equ	0xFE2
 27875                           fsr1l	equ	0xFE1
 27876                           indf2	equ	0xFDF
 27877                           postinc2	equ	0xFDE
 27878                           postdec2	equ	0xFDD
 27879                           plusw2	equ	0xFDB
 27880                           fsr2h	equ	0xFDA
 27881                           fsr2l	equ	0xFD9
 27882                           status	equ	0xFD8
 27883                           
 27884 ;; *************** function _UartTxBufferStatus *****************
 27885 ;; Defined at:
 27886 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27887 ;; Parameters:    Size  Location     Type
 27888 ;;  Module          1    wreg     unsigned char 
 27889 ;; Auto vars:     Size  Location     Type
 27890 ;;  Module          1   30[BANK0 ] unsigned char 
 27891 ;;  TxBufferStat    1   31[BANK0 ] enum E9018
 27892 ;; Return value:  Size  Location     Type
 27893 ;;                  1    wreg      enum E9018
 27894 ;; Registers used:
 27895 ;;		wreg, status,2, status,0
 27896 ;; Tracked objects:
 27897 ;;		On entry : 0/0
 27898 ;;		On exit  : 0/0
 27899 ;;		Unchanged: 0/0
 27900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27902 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27903 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27904 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27905 ;;Total ram usage:        3 bytes
 27906 ;; Hardware stack levels used:    1
 27907 ;; Hardware stack levels required when called:   11
 27908 ;; This function calls:
 27909 ;;		Nothing
 27910 ;; This function is called by:
 27911 ;;		_Uart_WriteConstString
 27912 ;;		_Uart_WriteString
 27913 ;;		_Uart_WriteStringLen
 27914 ;; This function uses a non-reentrant model
 27915 ;;
 27916                           
 27917                           	psect	text124
 27918  00556E                     __ptext124:
 27919                           	opt stack 0
 27920  00556E                     _UartTxBufferStatus:
 27921                           	opt stack 14
 27922                           
 27923                           ; BSR set to: 0
 27924                           ;incstack = 0
 27925                           ;UartTxBufferStatus@Module stored from wreg
 27926  00556E  0100               	movlb	0	; () banked
 27927  005570  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 27928                           
 27929                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 27930  005572  0E00               	movlw	0
 27931  005574  0100               	movlb	0	; () banked
 27932  005576  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 27936  005578  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 27937  00557A  A4D8               	btfss	status,2,c
 27938  00557C  D00B               	goto	l651
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;uart_drv.c: 228: {
 27942                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27943  00557E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27944  005582  90D8               	bcf	status,0,c
 27945  005584  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27946  005586  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 27947  005588  D002               	goto	l652
 27948  00558A                     u10510:
 27949                           
 27950                           ; BSR set to: 0
 27951                           ;uart_drv.c: 231: {
 27952                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 27953  00558A  0E01               	movlw	1
 27954  00558C  D014               	goto	L42
 27955  00558E                     l652:
 27956                           
 27957                           ; BSR set to: 0
 27958                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27959                           
 27960                           ; BSR set to: 0
 27961  00558E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27962  005592  D00C               	goto	L71
 27963  005594                     l651:
 27964                           
 27965                           ; BSR set to: 0
 27966                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 27967                           
 27968                           ; BSR set to: 0
 27969  005594  0E02               	movlw	2
 27970  005596  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 27971  005598  A4D8               	btfss	status,2,c
 27972  00559A  D00E               	goto	l660
 27973                           
 27974                           ; BSR set to: 0
 27975                           ;uart_drv.c: 244: {
 27976                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27977  00559C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27978  0055A0  90D8               	bcf	status,0,c
 27979  0055A2  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27980  0055A4  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27981  0055A6  D7F1               	goto	u10510
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27985                           
 27986                           ; BSR set to: 0
 27987                           
 27988                           ;uart_drv.c: 249: }
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;uart_drv.c: 247: {
 27992                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 27993  0055A8  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27994  0055AC                     L71:
 27995  0055AC  90D8               	bcf	status,0,c
 27996  0055AE  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27997  0055B0  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27998  0055B2  D002               	goto	l660
 27999                           
 28000                           ; BSR set to: 0
 28001                           ;uart_drv.c: 251: {
 28002                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28003  0055B4  0E02               	movlw	2
 28004  0055B6                     L42:
 28005  0055B6  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28006  0055B8                     l660:
 28007                           
 28008                           ; BSR set to: 0
 28009                           ;uart_drv.c: 257: }
 28010                           ;uart_drv.c: 258: }
 28011                           ;uart_drv.c: 260: return TxBufferStatus;
 28012                           
 28013                           ; BSR set to: 0
 28014                           
 28015                           ; BSR set to: 0
 28016                           
 28017                           ; BSR set to: 0
 28018                           
 28019                           ; BSR set to: 0
 28020                           
 28021                           ;uart_drv.c: 254: else
 28022                           ;uart_drv.c: 255: {
 28023                           
 28024                           ; BSR set to: 0
 28025  0055B8  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28026  0055BA  0012               	return	
 28027  0055BC                     __end_of_UartTxBufferStatus:
 28028                           	opt stack 0
 28029                           tosu	equ	0xFFF
 28030                           tosh	equ	0xFFE
 28031                           tosl	equ	0xFFD
 28032                           pclath	equ	0xFFA
 28033                           tblptru	equ	0xFF8
 28034                           tblptrh	equ	0xFF7
 28035                           tblptrl	equ	0xFF6
 28036                           tablat	equ	0xFF5
 28037                           prodh	equ	0xFF4
 28038                           prodl	equ	0xFF3
 28039                           intcon	equ	0xFF2
 28040                           intcon2	equ	0xFF1
 28041                           intcon3	equ	0xFF0
 28042                           indf0	equ	0xFEF
 28043                           postinc0	equ	0xFEE
 28044                           plusw0	equ	0xFEB
 28045                           fsr0h	equ	0xFEA
 28046                           fsr0l	equ	0xFE9
 28047                           wreg	equ	0xFE8
 28048                           indf1	equ	0xFE7
 28049                           postinc1	equ	0xFE6
 28050                           postdec1	equ	0xFE5
 28051                           plusw1	equ	0xFE3
 28052                           fsr1h	equ	0xFE2
 28053                           fsr1l	equ	0xFE1
 28054                           indf2	equ	0xFDF
 28055                           postinc2	equ	0xFDE
 28056                           postdec2	equ	0xFDD
 28057                           plusw2	equ	0xFDB
 28058                           fsr2h	equ	0xFDA
 28059                           fsr2l	equ	0xFD9
 28060                           status	equ	0xFD8
 28061                           
 28062 ;; *************** function _StringCopy *****************
 28063 ;; Defined at:
 28064 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28065 ;; Parameters:    Size  Location     Type
 28066 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28067 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28068 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(132), RxBuffer(400), 
 28069 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28070 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50
      +), 
 28071 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 28072 ;;  Len             2   33[BANK0 ] unsigned short 
 28073 ;; Auto vars:     Size  Location     Type
 28074 ;;  Index           2   37[BANK0 ] unsigned short 
 28075 ;; Return value:  Size  Location     Type
 28076 ;;                  1    wreg      void 
 28077 ;; Registers used:
 28078 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28079 ;; Tracked objects:
 28080 ;;		On entry : 0/0
 28081 ;;		On exit  : 0/0
 28082 ;;		Unchanged: 0/0
 28083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28084 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28087 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28088 ;;Total ram usage:       10 bytes
 28089 ;; Hardware stack levels used:    1
 28090 ;; Hardware stack levels required when called:   11
 28091 ;; This function calls:
 28092 ;;		Nothing
 28093 ;; This function is called by:
 28094 ;;		_GetSmsSm
 28095 ;;		_SendSmsSm
 28096 ;;		_Mdm_GetSmsData
 28097 ;;		_InitGprsNetwork
 28098 ;;		_HttpGetMethod
 28099 ;;		_Mdm_SendSmsData
 28100 ;; This function uses a non-reentrant model
 28101 ;;
 28102                           
 28103                           	psect	text125
 28104  005000                     __ptext125:
 28105                           	opt stack 0
 28106  005000                     _StringCopy:
 28107                           	opt stack 15
 28108                           
 28109                           ;sf.c: 106: UINT16 Index = 0;
 28110                           
 28111                           ; BSR set to: 0
 28112                           ;incstack = 0
 28113  005000  0E00               	movlw	0
 28114  005002  0100               	movlb	0	; () banked
 28115  005004  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28116  005006  0E00               	movlw	0
 28117  005008  6F85               	movwf	StringCopy@Index& (0+255),b
 28118                           
 28119                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28120  00500A  0E00               	movlw	0
 28121  00500C  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28122  00500E  0E00               	movlw	0
 28123  005010  6F85               	movwf	StringCopy@Index& (0+255),b
 28124  005012  D020               	goto	l2206
 28125  005014                     
 28126                           ; BSR set to: 0
 28127                           ;sf.c: 110: {
 28128                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28129                           
 28130                           ; BSR set to: 0
 28131  005014  5185               	movf	StringCopy@Index& (0+255),w,b
 28132  005016  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28133  005018  6F83               	movwf	??_StringCopy& (0+255),b
 28134  00501A  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28135  00501C  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28136  00501E  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28137  005020  C083  FFF6         	movff	??_StringCopy,tblptrl
 28138  005024  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28139  005028  6AF8               	clrf	tblptru,c
 28140  00502A  5185               	movf	StringCopy@Index& (0+255),w,b
 28141  00502C  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28142  00502E  6ED9               	movwf	fsr2l,c
 28143  005030  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28144  005032  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28145  005034  6EDA               	movwf	fsr2h,c
 28146  005036  0E0E               	movlw	(high __ramtop+-1)
 28147  005038  64F7               	cpfsgt	tblptrh,c
 28148  00503A  D003               	bra	u11567
 28149  00503C  0008               	tblrd		*
 28150  00503E  50F5               	movf	tablat,w,c
 28151  005040  D005               	bra	u11560
 28152  005042                     u11567:
 28153  005042  CFF6 FFE9          	movff	tblptrl,fsr0l
 28154  005046  CFF7 FFEA          	movff	tblptrh,fsr0h
 28155  00504A  50EF               	movf	indf0,w,c
 28156  00504C                     u11560:
 28157  00504C  6EDF               	movwf	indf2,c
 28158  00504E  0100               	movlb	0	; () banked
 28159  005050  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28160  005052  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28161  005054                     l2206:
 28162                           
 28163                           ; BSR set to: 0
 28164                           
 28165                           ; BSR set to: 0
 28166  005054  5181               	movf	StringCopy@Len& (0+255),w,b
 28167  005056  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28168  005058  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28169  00505A  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28170  00505C  B0D8               	btfsc	status,0,c
 28171  00505E  0012               	return	
 28172  005060  D7D9               	goto	l2207
 28173  005062                     __end_of_StringCopy:
 28174                           	opt stack 0
 28175                           tosu	equ	0xFFF
 28176                           tosh	equ	0xFFE
 28177                           tosl	equ	0xFFD
 28178                           pclath	equ	0xFFA
 28179                           tblptru	equ	0xFF8
 28180                           tblptrh	equ	0xFF7
 28181                           tblptrl	equ	0xFF6
 28182                           tablat	equ	0xFF5
 28183                           prodh	equ	0xFF4
 28184                           prodl	equ	0xFF3
 28185                           intcon	equ	0xFF2
 28186                           intcon2	equ	0xFF1
 28187                           intcon3	equ	0xFF0
 28188                           indf0	equ	0xFEF
 28189                           postinc0	equ	0xFEE
 28190                           plusw0	equ	0xFEB
 28191                           fsr0h	equ	0xFEA
 28192                           fsr0l	equ	0xFE9
 28193                           wreg	equ	0xFE8
 28194                           indf1	equ	0xFE7
 28195                           postinc1	equ	0xFE6
 28196                           postdec1	equ	0xFE5
 28197                           plusw1	equ	0xFE3
 28198                           fsr1h	equ	0xFE2
 28199                           fsr1l	equ	0xFE1
 28200                           indf2	equ	0xFDF
 28201                           postinc2	equ	0xFDE
 28202                           postdec2	equ	0xFDD
 28203                           plusw2	equ	0xFDB
 28204                           fsr2h	equ	0xFDA
 28205                           fsr2l	equ	0xFD9
 28206                           status	equ	0xFD8
 28207                           
 28208 ;; *************** function _OsTmr_StartTimer *****************
 28209 ;; Defined at:
 28210 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28211 ;; Parameters:    Size  Location     Type
 28212 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28213 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28214 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28215 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28216 ;; Auto vars:     Size  Location     Type
 28217 ;;		None
 28218 ;; Return value:  Size  Location     Type
 28219 ;;                  1    wreg      void 
 28220 ;; Registers used:
 28221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28222 ;; Tracked objects:
 28223 ;;		On entry : 0/0
 28224 ;;		On exit  : 0/0
 28225 ;;		Unchanged: 0/0
 28226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28227 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28231 ;;Total ram usage:        6 bytes
 28232 ;; Hardware stack levels used:    1
 28233 ;; Hardware stack levels required when called:   12
 28234 ;; This function calls:
 28235 ;;		_GetOsTickCounter
 28236 ;; This function is called by:
 28237 ;;		_OsTmr_Wait
 28238 ;;		_CheckModem
 28239 ;;		_SendSmsSm
 28240 ;;		_InitGprsNetwork
 28241 ;;		_HttpGetMethod
 28242 ;;		_Term_MainSm
 28243 ;;		_I2cSlv_QueryI2cData
 28244 ;; This function uses a non-reentrant model
 28245 ;;
 28246                           
 28247                           	psect	text126
 28248  0050C0                     __ptext126:
 28249                           	opt stack 0
 28250  0050C0                     _OsTmr_StartTimer:
 28251                           	opt stack 12
 28252                           
 28253                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28254                           
 28255                           ; BSR set to: 0
 28256                           ;incstack = 0
 28257  0050C0  0100               	movlb	0	; () banked
 28258  0050C2  EE20 F001          	lfsr	2,1
 28259  0050C6  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28260  0050C8  26D9               	addwf	fsr2l,f,c
 28261  0050CA  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28262  0050CC  22DA               	addwfc	fsr2h,f,c
 28263  0050CE  0E00               	movlw	0
 28264  0050D0  6EDF               	movwf	indf2,c
 28265                           
 28266                           ; BSR set to: 0
 28267                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28268  0050D2  EC63  F030         	call	_GetOsTickCounter	;wreg free
 28269  0050D6  0100               	movlb	0	; () banked
 28270  0050D8  EE20 F002          	lfsr	2,2
 28271  0050DC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28272  0050DE  26D9               	addwf	fsr2l,f,c
 28273  0050E0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28274  0050E2  22DA               	addwfc	fsr2h,f,c
 28275  0050E4  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28276  0050E8  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28277  0050EC  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28278  0050F0  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28282  0050F4  EE20 F006          	lfsr	2,6
 28283  0050F8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28284  0050FA  26D9               	addwf	fsr2l,f,c
 28285  0050FC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28286  0050FE  22DA               	addwfc	fsr2h,f,c
 28287  005100  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28288  005104  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28289  005108  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28290  00510C  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28291                           
 28292                           ; BSR set to: 0
 28293                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28294  005110  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28295  005114  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28296  005118  0E01               	movlw	1
 28297  00511A  6EDF               	movwf	indf2,c
 28298                           
 28299                           ; BSR set to: 0
 28300  00511C  0012               	return		;funcret
 28301  00511E                     __end_of_OsTmr_StartTimer:
 28302                           	opt stack 0
 28303                           tosu	equ	0xFFF
 28304                           tosh	equ	0xFFE
 28305                           tosl	equ	0xFFD
 28306                           pclath	equ	0xFFA
 28307                           tblptru	equ	0xFF8
 28308                           tblptrh	equ	0xFF7
 28309                           tblptrl	equ	0xFF6
 28310                           tablat	equ	0xFF5
 28311                           prodh	equ	0xFF4
 28312                           prodl	equ	0xFF3
 28313                           intcon	equ	0xFF2
 28314                           intcon2	equ	0xFF1
 28315                           intcon3	equ	0xFF0
 28316                           indf0	equ	0xFEF
 28317                           postinc0	equ	0xFEE
 28318                           plusw0	equ	0xFEB
 28319                           fsr0h	equ	0xFEA
 28320                           fsr0l	equ	0xFE9
 28321                           wreg	equ	0xFE8
 28322                           indf1	equ	0xFE7
 28323                           postinc1	equ	0xFE6
 28324                           postdec1	equ	0xFE5
 28325                           plusw1	equ	0xFE3
 28326                           fsr1h	equ	0xFE2
 28327                           fsr1l	equ	0xFE1
 28328                           indf2	equ	0xFDF
 28329                           postinc2	equ	0xFDE
 28330                           postdec2	equ	0xFDD
 28331                           plusw2	equ	0xFDB
 28332                           fsr2h	equ	0xFDA
 28333                           fsr2l	equ	0xFD9
 28334                           status	equ	0xFD8
 28335                           
 28336 ;; *************** function _OsTmr_GetTimerStatus *****************
 28337 ;; Defined at:
 28338 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28339 ;; Parameters:    Size  Location     Type
 28340 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28341 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28342 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28343 ;; Auto vars:     Size  Location     Type
 28344 ;;		None
 28345 ;; Return value:  Size  Location     Type
 28346 ;;                  1    wreg      enum E7740
 28347 ;; Registers used:
 28348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28349 ;; Tracked objects:
 28350 ;;		On entry : 0/0
 28351 ;;		On exit  : 0/0
 28352 ;;		Unchanged: 0/0
 28353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28357 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28358 ;;Total ram usage:        6 bytes
 28359 ;; Hardware stack levels used:    1
 28360 ;; Hardware stack levels required when called:   13
 28361 ;; This function calls:
 28362 ;;		_GetElapsedTime
 28363 ;; This function is called by:
 28364 ;;		_OsTmr_Wait
 28365 ;;		_CheckModem
 28366 ;;		_SendSmsSm
 28367 ;;		_InitGprsNetwork
 28368 ;;		_HttpGetMethod
 28369 ;;		_Term_MainSm
 28370 ;;		_I2cSlv_QueryI2cData
 28371 ;; This function uses a non-reentrant model
 28372 ;;
 28373                           
 28374                           	psect	text127
 28375  0048DA                     __ptext127:
 28376                           	opt stack 0
 28377  0048DA                     _OsTmr_GetTimerStatus:
 28378                           	opt stack 11
 28379                           
 28380                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28381                           
 28382                           ; BSR set to: 0
 28383                           ;incstack = 0
 28384  0048DA  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28385  0048DE  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28386  0048E2  04DE               	decf	postinc2,w,c
 28387  0048E4  A4D8               	btfss	status,2,c
 28388  0048E6  D030               	goto	l864
 28389                           
 28390                           ;os_timers.c: 197: {
 28391                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28392  0048E8  0100               	movlb	0	; () banked
 28393  0048EA  EE20 F006          	lfsr	2,6
 28394  0048EE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28395  0048F0  26D9               	addwf	fsr2l,f,c
 28396  0048F2  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28397  0048F4  22DA               	addwfc	fsr2h,f,c
 28398  0048F6  EE10 F002          	lfsr	1,2
 28399  0048FA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28400  0048FC  26E1               	addwf	fsr1l,f,c
 28401  0048FE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28402  004900  22E2               	addwfc	fsr1h,f,c
 28403  004902  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28404  004906  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28405  00490A  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28406  00490E  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28407  004912  EC13  F01E         	call	_GetElapsedTime	;wreg free
 28408  004916  50DE               	movf	postinc2,w,c
 28409  004918  0100               	movlb	0	; () banked
 28410  00491A  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28411  00491C  50DE               	movf	postinc2,w,c
 28412  00491E  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28413  004920  50DE               	movf	postinc2,w,c
 28414  004922  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28415  004924  50DE               	movf	postinc2,w,c
 28416  004926  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28417  004928  A0D8               	btfss	status,0,c
 28418  00492A  D017               	goto	l867
 28419                           
 28420                           ; BSR set to: 0
 28421                           ;os_timers.c: 200: {
 28422                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28423  00492C  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28424  004930  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28425  004934  0E00               	movlw	0
 28426  004936  6EDF               	movwf	indf2,c
 28427                           
 28428                           ; BSR set to: 0
 28429                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28430  004938  EE20 F001          	lfsr	2,1
 28431  00493C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28432  00493E  26D9               	addwf	fsr2l,f,c
 28433  004940  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28434  004942  22DA               	addwfc	fsr2h,f,c
 28435  004944  0E01               	movlw	1
 28436  004946  D008               	goto	L72
 28437  004948                     l864:
 28438                           
 28439                           ;os_timers.c: 211: else
 28440                           ;os_timers.c: 212: {
 28441                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28442                           
 28443                           ; BSR set to: 0
 28444  004948  0100               	movlb	0	; () banked
 28445  00494A  EE20 F001          	lfsr	2,1
 28446  00494E  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28447  004950  26D9               	addwf	fsr2l,f,c
 28448  004952  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28449  004954  22DA               	addwfc	fsr2h,f,c
 28450  004956  0E02               	movlw	2
 28451  004958                     L72:
 28452  004958  6EDF               	movwf	indf2,c
 28453  00495A                     l867:
 28454                           
 28455                           ; BSR set to: 0
 28456                           ;os_timers.c: 215: }
 28457                           ;os_timers.c: 218: return Timer->Status;
 28458  00495A  EE20 F001          	lfsr	2,1
 28459  00495E  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28460  004960  26D9               	addwf	fsr2l,f,c
 28461  004962  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28462  004964  22DA               	addwfc	fsr2h,f,c
 28463  004966  50DF               	movf	indf2,w,c
 28464  004968  0012               	return	
 28465  00496A                     __end_of_OsTmr_GetTimerStatus:
 28466                           	opt stack 0
 28467                           tosu	equ	0xFFF
 28468                           tosh	equ	0xFFE
 28469                           tosl	equ	0xFFD
 28470                           pclath	equ	0xFFA
 28471                           tblptru	equ	0xFF8
 28472                           tblptrh	equ	0xFF7
 28473                           tblptrl	equ	0xFF6
 28474                           tablat	equ	0xFF5
 28475                           prodh	equ	0xFF4
 28476                           prodl	equ	0xFF3
 28477                           intcon	equ	0xFF2
 28478                           intcon2	equ	0xFF1
 28479                           intcon3	equ	0xFF0
 28480                           indf0	equ	0xFEF
 28481                           postinc0	equ	0xFEE
 28482                           plusw0	equ	0xFEB
 28483                           fsr0h	equ	0xFEA
 28484                           fsr0l	equ	0xFE9
 28485                           wreg	equ	0xFE8
 28486                           indf1	equ	0xFE7
 28487                           postinc1	equ	0xFE6
 28488                           postdec1	equ	0xFE5
 28489                           plusw1	equ	0xFE3
 28490                           fsr1h	equ	0xFE2
 28491                           fsr1l	equ	0xFE1
 28492                           indf2	equ	0xFDF
 28493                           postinc2	equ	0xFDE
 28494                           postdec2	equ	0xFDD
 28495                           plusw2	equ	0xFDB
 28496                           fsr2h	equ	0xFDA
 28497                           fsr2l	equ	0xFD9
 28498                           status	equ	0xFD8
 28499                           
 28500 ;; *************** function _GetElapsedTime *****************
 28501 ;; Defined at:
 28502 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28503 ;; Parameters:    Size  Location     Type
 28504 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28505 ;; Auto vars:     Size  Location     Type
 28506 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28507 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28508 ;; Return value:  Size  Location     Type
 28509 ;;                  4   33[BANK0 ] unsigned long 
 28510 ;; Registers used:
 28511 ;;		wreg, status,2, status,0, cstack
 28512 ;; Tracked objects:
 28513 ;;		On entry : 0/0
 28514 ;;		On exit  : 0/0
 28515 ;;		Unchanged: 0/0
 28516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28517 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28518 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28519 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28520 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28521 ;;Total ram usage:       20 bytes
 28522 ;; Hardware stack levels used:    1
 28523 ;; Hardware stack levels required when called:   12
 28524 ;; This function calls:
 28525 ;;		_GetOsTickCounter
 28526 ;; This function is called by:
 28527 ;;		_OsTmr_GetTimerStatus
 28528 ;;		_OsTmr_GetRemainingTime
 28529 ;; This function uses a non-reentrant model
 28530 ;;
 28531                           
 28532                           	psect	text128
 28533  003C26                     __ptext128:
 28534                           	opt stack 0
 28535  003C26                     _GetElapsedTime:
 28536                           	opt stack 11
 28537                           
 28538                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28539                           ;os_timers.c: 87: UINT32 TimeValue;
 28540                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;incstack = 0
 28544  003C26  EC63  F030         	call	_GetOsTickCounter	;wreg free
 28545  003C2A  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28546  003C2E  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28547  003C32  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28548  003C36  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28549                           
 28550                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28551  003C3A  0100               	movlb	0	; () banked
 28552  003C3C  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28553  003C3E  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28554  003C40  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28555  003C42  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28556  003C44  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28557  003C46  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28558  003C48  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28559  003C4A  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28560  003C4C  A0D8               	btfss	status,0,c
 28561  003C4E  D01D               	goto	l844
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;os_timers.c: 94: {
 28565                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28566  003C50  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28567  003C54  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28568  003C58  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28569  003C5C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28570  003C60  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28571  003C62  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28572  003C64  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28573  003C66  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28574  003C68  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28575  003C6A  0E00               	movlw	0
 28576  003C6C  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28577  003C6E  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28578  003C70  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28579  003C72  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28580  003C74  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28581  003C76  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28582  003C78  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28583  003C7A  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28584  003C7C  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28585  003C7E  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28586  003C80  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28587  003C82  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28588  003C84  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28589  003C86  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28590  003C88  D028               	goto	L43
 28591  003C8A                     l844:
 28592                           
 28593                           ; BSR set to: 0
 28594                           ;os_timers.c: 97: else
 28595                           ;os_timers.c: 98: {
 28596                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28597                           
 28598                           ; BSR set to: 0
 28599  003C8A  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28600  003C8E  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28601  003C92  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28602  003C96  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28603  003C9A  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28604  003C9C  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28605  003C9E  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28606  003CA0  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28607  003CA2  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28608  003CA4  0E00               	movlw	0
 28609  003CA6  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28610  003CA8  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28611  003CAA  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28612  003CAC  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28613  003CAE  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28614  003CB0  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28615  003CB2  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28616  003CB4  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28617  003CB6  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28618  003CB8  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28619  003CBA  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28620  003CBC  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28621  003CBE  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28622  003CC0  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28623  003CC2  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28624  003CC4  0EFF               	movlw	255
 28625  003CC6  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28626  003CC8  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28627  003CCA  0EFF               	movlw	255
 28628  003CCC  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28629  003CCE  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28630  003CD0  0EFF               	movlw	255
 28631  003CD2  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28632  003CD4  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28633  003CD6  0EFF               	movlw	255
 28634  003CD8  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28635  003CDA                     L43:
 28636  003CDA  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28637                           
 28638                           ; BSR set to: 0
 28639                           ;os_timers.c: 100: }
 28640                           ;os_timers.c: 102: return TimeValue;
 28641                           
 28642                           ; BSR set to: 0
 28643  003CDC  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28644  003CE0  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28645  003CE4  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28646  003CE8  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28647  003CEC  0012               	return	
 28648  003CEE                     __end_of_GetElapsedTime:
 28649                           	opt stack 0
 28650                           tosu	equ	0xFFF
 28651                           tosh	equ	0xFFE
 28652                           tosl	equ	0xFFD
 28653                           pclath	equ	0xFFA
 28654                           tblptru	equ	0xFF8
 28655                           tblptrh	equ	0xFF7
 28656                           tblptrl	equ	0xFF6
 28657                           tablat	equ	0xFF5
 28658                           prodh	equ	0xFF4
 28659                           prodl	equ	0xFF3
 28660                           intcon	equ	0xFF2
 28661                           intcon2	equ	0xFF1
 28662                           intcon3	equ	0xFF0
 28663                           indf0	equ	0xFEF
 28664                           postinc0	equ	0xFEE
 28665                           plusw0	equ	0xFEB
 28666                           fsr0h	equ	0xFEA
 28667                           fsr0l	equ	0xFE9
 28668                           wreg	equ	0xFE8
 28669                           indf1	equ	0xFE7
 28670                           postinc1	equ	0xFE6
 28671                           postdec1	equ	0xFE5
 28672                           plusw1	equ	0xFE3
 28673                           fsr1h	equ	0xFE2
 28674                           fsr1l	equ	0xFE1
 28675                           indf2	equ	0xFDF
 28676                           postinc2	equ	0xFDE
 28677                           postdec2	equ	0xFDD
 28678                           plusw2	equ	0xFDB
 28679                           fsr2h	equ	0xFDA
 28680                           fsr2l	equ	0xFD9
 28681                           status	equ	0xFD8
 28682                           
 28683 ;; *************** function _GetOsTickCounter *****************
 28684 ;; Defined at:
 28685 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28686 ;; Parameters:    Size  Location     Type
 28687 ;;		None
 28688 ;; Auto vars:     Size  Location     Type
 28689 ;;		None
 28690 ;; Return value:  Size  Location     Type
 28691 ;;                  4   29[BANK0 ] unsigned long 
 28692 ;; Registers used:
 28693 ;;		None
 28694 ;; Tracked objects:
 28695 ;;		On entry : 0/0
 28696 ;;		On exit  : 0/0
 28697 ;;		Unchanged: 0/0
 28698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28699 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28703 ;;Total ram usage:        4 bytes
 28704 ;; Hardware stack levels used:    1
 28705 ;; Hardware stack levels required when called:   11
 28706 ;; This function calls:
 28707 ;;		Nothing
 28708 ;; This function is called by:
 28709 ;;		_GetElapsedTime
 28710 ;;		_OsTmr_StartTimer
 28711 ;;		_OsTmr_GetElapsedTime
 28712 ;; This function uses a non-reentrant model
 28713 ;;
 28714                           
 28715                           	psect	text129
 28716  0060C6                     __ptext129:
 28717                           	opt stack 0
 28718  0060C6                     _GetOsTickCounter:
 28719                           	opt stack 12
 28720                           
 28721                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;incstack = 0
 28725  0060C6  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 28726  0060CA  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 28727  0060CE  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 28728  0060D2  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 28729  0060D6  0012               	return		;funcret
 28730  0060D8                     __end_of_GetOsTickCounter:
 28731                           	opt stack 0
 28732                           tosu	equ	0xFFF
 28733                           tosh	equ	0xFFE
 28734                           tosl	equ	0xFFD
 28735                           pclath	equ	0xFFA
 28736                           tblptru	equ	0xFF8
 28737                           tblptrh	equ	0xFF7
 28738                           tblptrl	equ	0xFF6
 28739                           tablat	equ	0xFF5
 28740                           prodh	equ	0xFF4
 28741                           prodl	equ	0xFF3
 28742                           intcon	equ	0xFF2
 28743                           intcon2	equ	0xFF1
 28744                           intcon3	equ	0xFF0
 28745                           indf0	equ	0xFEF
 28746                           postinc0	equ	0xFEE
 28747                           plusw0	equ	0xFEB
 28748                           fsr0h	equ	0xFEA
 28749                           fsr0l	equ	0xFE9
 28750                           wreg	equ	0xFE8
 28751                           indf1	equ	0xFE7
 28752                           postinc1	equ	0xFE6
 28753                           postdec1	equ	0xFE5
 28754                           plusw1	equ	0xFE3
 28755                           fsr1h	equ	0xFE2
 28756                           fsr1l	equ	0xFE1
 28757                           indf2	equ	0xFDF
 28758                           postinc2	equ	0xFDE
 28759                           postdec2	equ	0xFDD
 28760                           plusw2	equ	0xFDB
 28761                           fsr2h	equ	0xFDA
 28762                           fsr2l	equ	0xFD9
 28763                           status	equ	0xFD8
 28764                           
 28765 ;; *************** function _ClearBuffer *****************
 28766 ;; Defined at:
 28767 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28768 ;; Parameters:    Size  Location     Type
 28769 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 28770 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200
      +), 
 28771 ;;		 -> InitGprsNetwork@UartMessage(50), Mdm_SmsRx(132), RxBuffer(400), 
 28772 ;;  Len             2   31[BANK0 ] unsigned short 
 28773 ;; Auto vars:     Size  Location     Type
 28774 ;;  Index           2   33[BANK0 ] unsigned short 
 28775 ;; Return value:  Size  Location     Type
 28776 ;;                  1    wreg      void 
 28777 ;; Registers used:
 28778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28779 ;; Tracked objects:
 28780 ;;		On entry : 0/0
 28781 ;;		On exit  : 0/0
 28782 ;;		Unchanged: 0/0
 28783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28787 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28788 ;;Total ram usage:        6 bytes
 28789 ;; Hardware stack levels used:    1
 28790 ;; Hardware stack levels required when called:   11
 28791 ;; This function calls:
 28792 ;;		Nothing
 28793 ;; This function is called by:
 28794 ;;		_GetSmsSm
 28795 ;;		_InitGprsNetwork
 28796 ;;		_HttpGetMethod
 28797 ;;		_MyApp_Task
 28798 ;;		_GsmGprsTerminal
 28799 ;; This function uses a non-reentrant model
 28800 ;;
 28801                           
 28802                           	psect	text130
 28803  005AEA                     __ptext130:
 28804                           	opt stack 0
 28805  005AEA                     _ClearBuffer:
 28806                           	opt stack 16
 28807                           
 28808                           ;sf.c: 126: UINT16 Index = 0;
 28809                           
 28810                           ;incstack = 0
 28811  005AEA  0E00               	movlw	0
 28812  005AEC  0100               	movlb	0	; () banked
 28813  005AEE  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28814  005AF0  0E00               	movlw	0
 28815  005AF2  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28816                           
 28817                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 28818  005AF4  0E00               	movlw	0
 28819  005AF6  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28820  005AF8  0E00               	movlw	0
 28821  005AFA  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28822  005AFC  D00A               	goto	l2212
 28823  005AFE                     
 28824                           ; BSR set to: 0
 28825                           ;sf.c: 130: {
 28826                           ;sf.c: 131: *(Buffer + Index) = 0;
 28827                           
 28828                           ; BSR set to: 0
 28829  005AFE  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28830  005B00  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 28831  005B02  6ED9               	movwf	fsr2l,c
 28832  005B04  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28833  005B06  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 28834  005B08  6EDA               	movwf	fsr2h,c
 28835  005B0A  0E00               	movlw	0
 28836  005B0C  6EDF               	movwf	indf2,c
 28837                           
 28838                           ; BSR set to: 0
 28839  005B0E  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 28840  005B10  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 28841  005B12                     l2212:
 28842                           
 28843                           ; BSR set to: 0
 28844                           
 28845                           ; BSR set to: 0
 28846  005B12  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28847  005B14  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 28848  005B16  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28849  005B18  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 28850  005B1A  A0D8               	btfss	status,0,c
 28851  005B1C  0012               	return	
 28852  005B1E  D7EF               	goto	l2213
 28853  005B20                     __end_of_ClearBuffer:
 28854                           	opt stack 0
 28855                           tosu	equ	0xFFF
 28856                           tosh	equ	0xFFE
 28857                           tosl	equ	0xFFD
 28858                           pclath	equ	0xFFA
 28859                           tblptru	equ	0xFF8
 28860                           tblptrh	equ	0xFF7
 28861                           tblptrl	equ	0xFF6
 28862                           tablat	equ	0xFF5
 28863                           prodh	equ	0xFF4
 28864                           prodl	equ	0xFF3
 28865                           intcon	equ	0xFF2
 28866                           intcon2	equ	0xFF1
 28867                           intcon3	equ	0xFF0
 28868                           indf0	equ	0xFEF
 28869                           postinc0	equ	0xFEE
 28870                           plusw0	equ	0xFEB
 28871                           fsr0h	equ	0xFEA
 28872                           fsr0l	equ	0xFE9
 28873                           wreg	equ	0xFE8
 28874                           indf1	equ	0xFE7
 28875                           postinc1	equ	0xFE6
 28876                           postdec1	equ	0xFE5
 28877                           plusw1	equ	0xFE3
 28878                           fsr1h	equ	0xFE2
 28879                           fsr1l	equ	0xFE1
 28880                           indf2	equ	0xFDF
 28881                           postinc2	equ	0xFDE
 28882                           postdec2	equ	0xFDD
 28883                           plusw2	equ	0xFDB
 28884                           fsr2h	equ	0xFDA
 28885                           fsr2l	equ	0xFD9
 28886                           status	equ	0xFD8
 28887                           
 28888 ;; *************** function _LedStateMachine *****************
 28889 ;; Defined at:
 28890 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28891 ;; Parameters:    Size  Location     Type
 28892 ;;  Led             1    wreg     unsigned char 
 28893 ;;  LedSts          2   47[BANK0 ] PTR enum E8935
 28894 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 28895 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 28896 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 28897 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 28898 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28899 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 28900 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;  Led             1   57[BANK0 ] unsigned char 
 28903 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 28904 ;; Return value:  Size  Location     Type
 28905 ;;                  1    wreg      unsigned char 
 28906 ;; Registers used:
 28907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28908 ;; Tracked objects:
 28909 ;;		On entry : 0/0
 28910 ;;		On exit  : 0/0
 28911 ;;		Unchanged: 0/0
 28912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28913 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28916 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28917 ;;Total ram usage:       11 bytes
 28918 ;; Hardware stack levels used:    1
 28919 ;; Hardware stack levels required when called:   13
 28920 ;; This function calls:
 28921 ;;		_LedBlinkStateMachine
 28922 ;;		_LedPulseStateMachine
 28923 ;;		_Led_SetLedStatus
 28924 ;; This function is called by:
 28925 ;;		_Led_MainTask
 28926 ;; This function uses a non-reentrant model
 28927 ;;
 28928                           
 28929                           	psect	text131
 28930  004366                     __ptext131:
 28931                           	opt stack 0
 28932  004366                     _LedStateMachine:
 28933                           	opt stack 14
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;incstack = 0
 28937                           ;LedStateMachine@Led stored from wreg
 28938  004366  0100               	movlb	0	; () banked
 28939  004368  6F99               	movwf	LedStateMachine@Led& (0+255),b
 28940                           
 28941                           ;led.c: 238: UINT8 LedOutSts = 0u;
 28942  00436A  0E00               	movlw	0
 28943  00436C  0100               	movlb	0	; () banked
 28944  00436E  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28945                           
 28946                           ;led.c: 241: switch (*LedSts)
 28947  004370  D037               	goto	l2071
 28948  004372                     
 28949                           ; BSR set to: 0
 28950                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 28951                           
 28952                           ; BSR set to: 0
 28953  004372  0E00               	movlw	0
 28954  004374  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28955                           
 28956                           ; BSR set to: 0
 28957                           ;led.c: 246: *LedOut = ((UINT8)(0));
 28958  004376  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28959  00437A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28960  00437E  0E00               	movlw	0
 28961  004380  D007               	goto	L44
 28962  004382                     
 28963                           ; BSR set to: 0
 28964                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 28965                           
 28966                           ; BSR set to: 0
 28967  004382  0E01               	movlw	1
 28968  004384  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28969                           
 28970                           ; BSR set to: 0
 28971                           ;led.c: 252: *LedOut = ((UINT8)(1));
 28972  004386  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28973  00438A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28974  00438E  0E01               	movlw	1
 28975  004390                     L44:
 28976  004390  6EDF               	movwf	indf2,c
 28977                           
 28978                           ;led.c: 253: break;
 28979  004392  D03A               	goto	l2073
 28980  004394                     
 28981                           ; BSR set to: 0
 28982                           ;led.c: 257: if (*LedOut == 1)
 28983                           
 28984                           ; BSR set to: 0
 28985  004394  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28986  004398  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28987  00439C  04DE               	decf	postinc2,w,c
 28988  00439E  A4D8               	btfss	status,2,c
 28989  0043A0  D006               	goto	l2076
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;led.c: 258: {
 28993                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 28994  0043A2  0E00               	movlw	0
 28995  0043A4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28996  0043A6  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28997  0043A8  EC24  F02E         	call	_Led_SetLedStatus
 28998                           
 28999                           ;led.c: 261: }
 29000  0043AC  D02D               	goto	l2073
 29001  0043AE                     l2076:
 29002                           
 29003                           ;led.c: 262: else
 29004                           ;led.c: 263: {
 29005                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29006  0043AE  0E01               	movlw	1
 29007  0043B0  0100               	movlb	0	; () banked
 29008  0043B2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29009  0043B4  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29010  0043B6  EC24  F02E         	call	_Led_SetLedStatus
 29011                           
 29012                           ;led.c: 266: }
 29013                           ;led.c: 267: break;
 29014  0043BA  D026               	goto	l2073
 29015  0043BC                     
 29016                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29017  0043BC  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29018  0043C0  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29019  0043C4  ECB1  F012         	call	_LedBlinkStateMachine	;wreg free
 29020  0043C8  D008               	goto	L45
 29021  0043CA                     
 29022                           ; BSR set to: 0
 29023                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29024                           
 29025                           ; BSR set to: 0
 29026  0043CA  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29027  0043CE  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29028  0043D2  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29029  0043D6  EC06  F019         	call	_LedPulseStateMachine	;wreg free
 29030  0043DA                     L45:
 29031  0043DA  0100               	movlb	0	; () banked
 29032  0043DC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29033                           
 29034                           ; BSR set to: 0
 29035                           ;led.c: 281: }
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;led.c: 280: break;
 29039                           
 29040                           ;led.c: 279: default:
 29041                           
 29042                           ;led.c: 277: break;
 29043  0043DE  D014               	goto	l2073
 29044  0043E0                     l2071:
 29045                           
 29046                           ; BSR set to: 0
 29047                           
 29048                           ; BSR set to: 0
 29049  0043E0  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29050  0043E4  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29051  0043E8  50DF               	movf	indf2,w,c
 29052                           
 29053                           ; Switch size 1, requested type "space"
 29054                           ; Number of cases is 5, Range of values is 0 to 4
 29055                           ; switch strategies available:
 29056                           ; Name         Instructions Cycles
 29057                           ; simple_byte           16     9 (average)
 29058                           ;	Chosen strategy is simple_byte
 29059  0043EA  0A00               	xorlw	0	; case 0
 29060  0043EC  B4D8               	btfsc	status,2,c
 29061  0043EE  D7C1               	goto	l2072
 29062  0043F0  0A01               	xorlw	1	; case 1
 29063  0043F2  B4D8               	btfsc	status,2,c
 29064  0043F4  D7C6               	goto	l2074
 29065  0043F6  0A03               	xorlw	3	; case 2
 29066  0043F8  B4D8               	btfsc	status,2,c
 29067  0043FA  D7CC               	goto	l2075
 29068  0043FC  0A01               	xorlw	1	; case 3
 29069  0043FE  B4D8               	btfsc	status,2,c
 29070  004400  D7DD               	goto	l2078
 29071  004402  0A07               	xorlw	7	; case 4
 29072  004404  B4D8               	btfsc	status,2,c
 29073  004406  D7E1               	goto	l2079
 29074  004408                     l2073:
 29075                           
 29076                           ;led.c: 283: return LedOutSts;
 29077                           
 29078                           ; BSR set to: 0
 29079  004408  0100               	movlb	0	; () banked
 29080  00440A  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29081  00440C  0012               	return	
 29082  00440E                     __end_of_LedStateMachine:
 29083                           	opt stack 0
 29084                           tosu	equ	0xFFF
 29085                           tosh	equ	0xFFE
 29086                           tosl	equ	0xFFD
 29087                           pclath	equ	0xFFA
 29088                           tblptru	equ	0xFF8
 29089                           tblptrh	equ	0xFF7
 29090                           tblptrl	equ	0xFF6
 29091                           tablat	equ	0xFF5
 29092                           prodh	equ	0xFF4
 29093                           prodl	equ	0xFF3
 29094                           intcon	equ	0xFF2
 29095                           intcon2	equ	0xFF1
 29096                           intcon3	equ	0xFF0
 29097                           indf0	equ	0xFEF
 29098                           postinc0	equ	0xFEE
 29099                           plusw0	equ	0xFEB
 29100                           fsr0h	equ	0xFEA
 29101                           fsr0l	equ	0xFE9
 29102                           wreg	equ	0xFE8
 29103                           indf1	equ	0xFE7
 29104                           postinc1	equ	0xFE6
 29105                           postdec1	equ	0xFE5
 29106                           plusw1	equ	0xFE3
 29107                           fsr1h	equ	0xFE2
 29108                           fsr1l	equ	0xFE1
 29109                           indf2	equ	0xFDF
 29110                           postinc2	equ	0xFDE
 29111                           postdec2	equ	0xFDD
 29112                           plusw2	equ	0xFDB
 29113                           fsr2h	equ	0xFDA
 29114                           fsr2l	equ	0xFD9
 29115                           status	equ	0xFD8
 29116                           
 29117 ;; *************** function _LedPulseStateMachine *****************
 29118 ;; Defined at:
 29119 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29120 ;; Parameters:    Size  Location     Type
 29121 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29122 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29123 ;;  Led             1   44[BANK0 ] unsigned char 
 29124 ;; Auto vars:     Size  Location     Type
 29125 ;;		None
 29126 ;; Return value:  Size  Location     Type
 29127 ;;                  1    wreg      unsigned char 
 29128 ;; Registers used:
 29129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29130 ;; Tracked objects:
 29131 ;;		On entry : 0/0
 29132 ;;		On exit  : 0/0
 29133 ;;		Unchanged: 0/0
 29134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29135 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29139 ;;Total ram usage:        5 bytes
 29140 ;; Hardware stack levels used:    1
 29141 ;; Hardware stack levels required when called:   12
 29142 ;; This function calls:
 29143 ;;		_Led_SetLedStatus
 29144 ;;		___lwdiv
 29145 ;; This function is called by:
 29146 ;;		_LedStateMachine
 29147 ;; This function uses a non-reentrant model
 29148 ;;
 29149                           
 29150                           	psect	text132
 29151  00320C                     __ptext132:
 29152                           	opt stack 0
 29153  00320C                     _LedPulseStateMachine:
 29154                           	opt stack 14
 29155                           
 29156                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29157                           
 29158                           ; BSR set to: 0
 29159                           ;incstack = 0
 29160  00320C  D05C               	goto	l2061
 29161  00320E                     
 29162                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29163  00320E  0100               	movlb	0	; () banked
 29164  003210  EE20 F001          	lfsr	2,1
 29165  003214  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29166  003216  26D9               	addwf	fsr2l,f,c
 29167  003218  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29168  00321A  22DA               	addwfc	fsr2h,f,c
 29169  00321C  0E01               	movlw	1
 29170  00321E  6EDF               	movwf	indf2,c
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29174  003220  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29175  003224  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29176  003228  0E01               	movlw	1
 29177  00322A  D036               	goto	L46
 29178  00322C                     
 29179                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29180                           
 29181                           ; BSR set to: 0
 29182  00322C  0100               	movlb	0	; () banked
 29183  00322E  EE20 F002          	lfsr	2,2
 29184  003232  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29185  003234  26D9               	addwf	fsr2l,f,c
 29186  003236  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29187  003238  22DA               	addwfc	fsr2h,f,c
 29188  00323A  2ADE               	incf	postinc2,f,c
 29189  00323C  0E00               	movlw	0
 29190  00323E  22DD               	addwfc	postdec2,f,c
 29191                           
 29192                           ; BSR set to: 0
 29193                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29194  003240  EE20 F004          	lfsr	2,4
 29195  003244  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29196  003246  26D9               	addwf	fsr2l,f,c
 29197  003248  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29198  00324A  22DA               	addwfc	fsr2h,f,c
 29199  00324C  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29200  003250  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29201  003254  0E00               	movlw	0
 29202  003256  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29203  003258  0E32               	movlw	50
 29204  00325A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29205  00325C  ECEB  F029         	call	___lwdiv	;wreg free
 29206  003260  0100               	movlb	0	; () banked
 29207  003262  EE20 F002          	lfsr	2,2
 29208  003266  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29209  003268  26D9               	addwf	fsr2l,f,c
 29210  00326A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29211  00326C  22DA               	addwfc	fsr2h,f,c
 29212  00326E  5183               	movf	?___lwdiv& (0+255),w,b
 29213  003270  5CDE               	subwf	postinc2,w,c
 29214  003272  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29215  003274  58DE               	subwfb	postinc2,w,c
 29216  003276  A0D8               	btfss	status,0,c
 29217  003278  D034               	goto	l2063
 29218                           
 29219                           ; BSR set to: 0
 29220                           ;led.c: 199: {
 29221                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29222  00327A  EE20 F002          	lfsr	2,2
 29223  00327E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29224  003280  26D9               	addwf	fsr2l,f,c
 29225  003282  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29226  003284  22DA               	addwfc	fsr2h,f,c
 29227  003286  0E00               	movlw	0
 29228  003288  6EDE               	movwf	postinc2,c
 29229  00328A  0E00               	movlw	0
 29230  00328C  6EDD               	movwf	postdec2,c
 29231                           
 29232                           ; BSR set to: 0
 29233                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29234  00328E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29235  003292  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29236  003296  0E02               	movlw	2
 29237  003298                     L46:
 29238  003298  6EDF               	movwf	indf2,c
 29239                           
 29240                           ; BSR set to: 0
 29241                           ;led.c: 204: }
 29242                           ;led.c: 205: break;
 29243  00329A  D023               	goto	l2063
 29244  00329C                     
 29245                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29246                           
 29247                           ; BSR set to: 0
 29248  00329C  0100               	movlb	0	; () banked
 29249  00329E  EE20 F001          	lfsr	2,1
 29250  0032A2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29251  0032A4  26D9               	addwf	fsr2l,f,c
 29252  0032A6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29253  0032A8  22DA               	addwfc	fsr2h,f,c
 29254  0032AA  0E00               	movlw	0
 29255  0032AC  6EDF               	movwf	indf2,c
 29256                           
 29257                           ; BSR set to: 0
 29258                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29259  0032AE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29260  0032B2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29261  0032B6  0E00               	movlw	0
 29262  0032B8  6EDF               	movwf	indf2,c
 29263                           
 29264                           ; BSR set to: 0
 29265                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29266  0032BA  0E00               	movlw	0
 29267  0032BC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29268  0032BE  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29269  0032C0  EC24  F02E         	call	_Led_SetLedStatus
 29270                           
 29271                           ;led.c: 218: }
 29272                           
 29273                           ;led.c: 217: break;
 29274                           
 29275                           ;led.c: 216: default:
 29276                           
 29277                           ;led.c: 214: break;
 29278  0032C4  D00E               	goto	l2063
 29279  0032C6                     l2061:
 29280  0032C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29281  0032CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29282  0032CE  50DF               	movf	indf2,w,c
 29283                           
 29284                           ; Switch size 1, requested type "space"
 29285                           ; Number of cases is 3, Range of values is 0 to 2
 29286                           ; switch strategies available:
 29287                           ; Name         Instructions Cycles
 29288                           ; simple_byte           10     6 (average)
 29289                           ;	Chosen strategy is simple_byte
 29290  0032D0  0A00               	xorlw	0	; case 0
 29291  0032D2  B4D8               	btfsc	status,2,c
 29292  0032D4  D79C               	goto	l2062
 29293  0032D6  0A01               	xorlw	1	; case 1
 29294  0032D8  B4D8               	btfsc	status,2,c
 29295  0032DA  D7A8               	goto	l2064
 29296  0032DC  0A03               	xorlw	3	; case 2
 29297  0032DE  B4D8               	btfsc	status,2,c
 29298  0032E0  D7DD               	goto	l2066
 29299  0032E2                     l2063:
 29300                           
 29301                           ;led.c: 221: return (LedPulse->LedOutState);
 29302  0032E2  0100               	movlb	0	; () banked
 29303  0032E4  EE20 F001          	lfsr	2,1
 29304  0032E8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29305  0032EA  26D9               	addwf	fsr2l,f,c
 29306  0032EC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29307  0032EE  22DA               	addwfc	fsr2h,f,c
 29308  0032F0  50DF               	movf	indf2,w,c
 29309  0032F2  0012               	return	
 29310  0032F4                     __end_of_LedPulseStateMachine:
 29311                           	opt stack 0
 29312                           tosu	equ	0xFFF
 29313                           tosh	equ	0xFFE
 29314                           tosl	equ	0xFFD
 29315                           pclath	equ	0xFFA
 29316                           tblptru	equ	0xFF8
 29317                           tblptrh	equ	0xFF7
 29318                           tblptrl	equ	0xFF6
 29319                           tablat	equ	0xFF5
 29320                           prodh	equ	0xFF4
 29321                           prodl	equ	0xFF3
 29322                           intcon	equ	0xFF2
 29323                           intcon2	equ	0xFF1
 29324                           intcon3	equ	0xFF0
 29325                           indf0	equ	0xFEF
 29326                           postinc0	equ	0xFEE
 29327                           plusw0	equ	0xFEB
 29328                           fsr0h	equ	0xFEA
 29329                           fsr0l	equ	0xFE9
 29330                           wreg	equ	0xFE8
 29331                           indf1	equ	0xFE7
 29332                           postinc1	equ	0xFE6
 29333                           postdec1	equ	0xFE5
 29334                           plusw1	equ	0xFE3
 29335                           fsr1h	equ	0xFE2
 29336                           fsr1l	equ	0xFE1
 29337                           indf2	equ	0xFDF
 29338                           postinc2	equ	0xFDE
 29339                           postdec2	equ	0xFDD
 29340                           plusw2	equ	0xFDB
 29341                           fsr2h	equ	0xFDA
 29342                           fsr2l	equ	0xFD9
 29343                           status	equ	0xFD8
 29344                           
 29345 ;; *************** function _Led_SetLedStatus *****************
 29346 ;; Defined at:
 29347 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29348 ;; Parameters:    Size  Location     Type
 29349 ;;  Led             1    wreg     unsigned char 
 29350 ;;  LedSts          1   29[BANK0 ] enum E8935
 29351 ;; Auto vars:     Size  Location     Type
 29352 ;;  Led             1   30[BANK0 ] unsigned char 
 29353 ;; Return value:  Size  Location     Type
 29354 ;;                  1    wreg      void 
 29355 ;; Registers used:
 29356 ;;		wreg, status,2, status,0
 29357 ;; Tracked objects:
 29358 ;;		On entry : 0/0
 29359 ;;		On exit  : 0/0
 29360 ;;		Unchanged: 0/0
 29361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29366 ;;Total ram usage:        2 bytes
 29367 ;; Hardware stack levels used:    1
 29368 ;; Hardware stack levels required when called:   11
 29369 ;; This function calls:
 29370 ;;		Nothing
 29371 ;; This function is called by:
 29372 ;;		_LedPulseStateMachine
 29373 ;;		_LedStateMachine
 29374 ;;		_initGprsModem
 29375 ;;		_blinkForSeconds
 29376 ;; This function uses a non-reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text133
 29380  005C48                     __ptext133:
 29381                           	opt stack 0
 29382  005C48                     _Led_SetLedStatus:
 29383                           	opt stack 15
 29384                           
 29385                           ; BSR set to: 0
 29386                           ;incstack = 0
 29387                           ;Led_SetLedStatus@Led stored from wreg
 29388  005C48  0100               	movlb	0	; () banked
 29389  005C4A  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29390                           
 29391                           ;led.c: 341: switch (Led)
 29392  005C4C  D009               	goto	l2092
 29393  005C4E                     l2093:
 29394                           
 29395                           ; BSR set to: 0
 29396                           ;led.c: 344: Led1Sts = LedSts;
 29397  005C4E  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29398                           
 29399                           ;led.c: 345: break;
 29400  005C52  0012               	return	
 29401  005C54                     l2095:
 29402                           
 29403                           ; BSR set to: 0
 29404                           ;led.c: 348: Led2Sts = LedSts;
 29405  005C54  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29406                           
 29407                           ;led.c: 349: break;
 29408  005C58  0012               	return	
 29409  005C5A                     l2096:
 29410                           
 29411                           ; BSR set to: 0
 29412                           ;led.c: 352: Led3Sts = LedSts;
 29413  005C5A  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29414                           
 29415                           ; BSR set to: 0
 29416                           ;led.c: 357: }
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;led.c: 356: break;
 29420                           
 29421                           ;led.c: 355: default:
 29422                           
 29423                           ;led.c: 353: break;
 29424  005C5E  0012               	return	
 29425  005C60                     l2092:
 29426                           
 29427                           ; BSR set to: 0
 29428  005C60  0100               	movlb	0	; () banked
 29429  005C62  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29430                           
 29431                           ; Switch size 1, requested type "space"
 29432                           ; Number of cases is 3, Range of values is 1 to 3
 29433                           ; switch strategies available:
 29434                           ; Name         Instructions Cycles
 29435                           ; simple_byte           10     6 (average)
 29436                           ;	Chosen strategy is simple_byte
 29437  005C64  0A01               	xorlw	1	; case 1
 29438  005C66  B4D8               	btfsc	status,2,c
 29439  005C68  D7F2               	goto	l2093
 29440  005C6A  0A03               	xorlw	3	; case 2
 29441  005C6C  B4D8               	btfsc	status,2,c
 29442  005C6E  D7F2               	goto	l2095
 29443  005C70  0A01               	xorlw	1	; case 3
 29444  005C72  A4D8               	btfss	status,2,c
 29445  005C74  0012               	return	
 29446  005C76  D7F1               	goto	l2096
 29447  005C78                     __end_of_Led_SetLedStatus:
 29448                           	opt stack 0
 29449                           tosu	equ	0xFFF
 29450                           tosh	equ	0xFFE
 29451                           tosl	equ	0xFFD
 29452                           pclath	equ	0xFFA
 29453                           tblptru	equ	0xFF8
 29454                           tblptrh	equ	0xFF7
 29455                           tblptrl	equ	0xFF6
 29456                           tablat	equ	0xFF5
 29457                           prodh	equ	0xFF4
 29458                           prodl	equ	0xFF3
 29459                           intcon	equ	0xFF2
 29460                           intcon2	equ	0xFF1
 29461                           intcon3	equ	0xFF0
 29462                           indf0	equ	0xFEF
 29463                           postinc0	equ	0xFEE
 29464                           plusw0	equ	0xFEB
 29465                           fsr0h	equ	0xFEA
 29466                           fsr0l	equ	0xFE9
 29467                           wreg	equ	0xFE8
 29468                           indf1	equ	0xFE7
 29469                           postinc1	equ	0xFE6
 29470                           postdec1	equ	0xFE5
 29471                           plusw1	equ	0xFE3
 29472                           fsr1h	equ	0xFE2
 29473                           fsr1l	equ	0xFE1
 29474                           indf2	equ	0xFDF
 29475                           postinc2	equ	0xFDE
 29476                           postdec2	equ	0xFDD
 29477                           plusw2	equ	0xFDB
 29478                           fsr2h	equ	0xFDA
 29479                           fsr2l	equ	0xFD9
 29480                           status	equ	0xFD8
 29481                           
 29482 ;; *************** function _LedBlinkStateMachine *****************
 29483 ;; Defined at:
 29484 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29485 ;; Parameters:    Size  Location     Type
 29486 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29487 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29488 ;; Auto vars:     Size  Location     Type
 29489 ;;		None
 29490 ;; Return value:  Size  Location     Type
 29491 ;;                  1    wreg      unsigned char 
 29492 ;; Registers used:
 29493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29494 ;; Tracked objects:
 29495 ;;		On entry : 0/0
 29496 ;;		On exit  : 0/0
 29497 ;;		Unchanged: 0/0
 29498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;Total ram usage:        4 bytes
 29504 ;; Hardware stack levels used:    1
 29505 ;; Hardware stack levels required when called:   12
 29506 ;; This function calls:
 29507 ;;		___lwdiv
 29508 ;; This function is called by:
 29509 ;;		_LedStateMachine
 29510 ;; This function uses a non-reentrant model
 29511 ;;
 29512                           
 29513                           	psect	text134
 29514  002562                     __ptext134:
 29515                           	opt stack 0
 29516  002562                     _LedBlinkStateMachine:
 29517                           	opt stack 14
 29518                           
 29519                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29520                           
 29521                           ; BSR set to: 0
 29522                           ;incstack = 0
 29523  002562  D08F               	goto	l2048
 29524  002564                     
 29525                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29526  002564  0100               	movlb	0	; () banked
 29527  002566  EE20 F008          	lfsr	2,8
 29528  00256A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29529  00256C  26D9               	addwf	fsr2l,f,c
 29530  00256E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29531  002570  22DA               	addwfc	fsr2h,f,c
 29532  002572  EE10 F001          	lfsr	1,1
 29533  002576  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29534  002578  26E1               	addwf	fsr1l,f,c
 29535  00257A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29536  00257C  22E2               	addwfc	fsr1h,f,c
 29537  00257E  CFDF FFE7          	movff	indf2,indf1
 29538                           
 29539                           ; BSR set to: 0
 29540                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29541  002582  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29542  002586  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29543  00258A  D040               	goto	L47
 29544  00258C                     
 29545                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29546                           
 29547                           ; BSR set to: 0
 29548  00258C  0100               	movlb	0	; () banked
 29549  00258E  EE20 F002          	lfsr	2,2
 29550  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29551  002594  26D9               	addwf	fsr2l,f,c
 29552  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29553  002598  22DA               	addwfc	fsr2h,f,c
 29554  00259A  2ADE               	incf	postinc2,f,c
 29555  00259C  0E00               	movlw	0
 29556  00259E  22DD               	addwfc	postdec2,f,c
 29557                           
 29558                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29559  0025A0  EE20 F001          	lfsr	2,1
 29560  0025A4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29561  0025A6  26D9               	addwf	fsr2l,f,c
 29562  0025A8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29563  0025AA  22DA               	addwfc	fsr2h,f,c
 29564  0025AC  50DF               	movf	indf2,w,c
 29565  0025AE  A4D8               	btfss	status,2,c
 29566  0025B0  D02F               	goto	l2052
 29567                           
 29568                           ; BSR set to: 0
 29569                           ;led.c: 142: {
 29570                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29571  0025B2  EE20 F006          	lfsr	2,6
 29572  0025B6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29573  0025B8  26D9               	addwf	fsr2l,f,c
 29574  0025BA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29575  0025BC  22DA               	addwfc	fsr2h,f,c
 29576  0025BE  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29577  0025C2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29578  0025C6  0E00               	movlw	0
 29579  0025C8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29580  0025CA  0E32               	movlw	50
 29581  0025CC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29582  0025CE  ECEB  F029         	call	___lwdiv	;wreg free
 29583  0025D2  0100               	movlb	0	; () banked
 29584  0025D4  EE20 F002          	lfsr	2,2
 29585  0025D8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29586  0025DA  26D9               	addwf	fsr2l,f,c
 29587  0025DC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29588  0025DE  22DA               	addwfc	fsr2h,f,c
 29589  0025E0  5183               	movf	?___lwdiv& (0+255),w,b
 29590  0025E2  5CDE               	subwf	postinc2,w,c
 29591  0025E4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29592  0025E6  58DE               	subwfb	postinc2,w,c
 29593  0025E8  A0D8               	btfss	status,0,c
 29594  0025EA  D056               	goto	l2050
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;led.c: 145: {
 29598                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29599  0025EC  EE20 F002          	lfsr	2,2
 29600  0025F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29601  0025F2  26D9               	addwf	fsr2l,f,c
 29602  0025F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29603  0025F6  22DA               	addwfc	fsr2h,f,c
 29604  0025F8  0E00               	movlw	0
 29605  0025FA  6EDE               	movwf	postinc2,c
 29606  0025FC  0E00               	movlw	0
 29607  0025FE  6EDD               	movwf	postdec2,c
 29608                           
 29609                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29610  002600  EE20 F001          	lfsr	2,1
 29611  002604  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29612  002606  26D9               	addwf	fsr2l,f,c
 29613  002608  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29614  00260A  22DA               	addwfc	fsr2h,f,c
 29615  00260C                     L47:
 29616  00260C  0E01               	movlw	1
 29617  00260E  D037               	goto	L48
 29618  002610                     l2052:
 29619                           
 29620                           ; BSR set to: 0
 29621                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29622                           
 29623                           ; BSR set to: 0
 29624  002610  EE20 F001          	lfsr	2,1
 29625  002614  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29626  002616  26D9               	addwf	fsr2l,f,c
 29627  002618  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29628  00261A  22DA               	addwfc	fsr2h,f,c
 29629  00261C  04DE               	decf	postinc2,w,c
 29630  00261E  A4D8               	btfss	status,2,c
 29631  002620  D03B               	goto	l2050
 29632                           
 29633                           ; BSR set to: 0
 29634                           ;led.c: 153: {
 29635                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29636  002622  EE20 F004          	lfsr	2,4
 29637  002626  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29638  002628  26D9               	addwf	fsr2l,f,c
 29639  00262A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29640  00262C  22DA               	addwfc	fsr2h,f,c
 29641  00262E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29642  002632  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29643  002636  0E00               	movlw	0
 29644  002638  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29645  00263A  0E32               	movlw	50
 29646  00263C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29647  00263E  ECEB  F029         	call	___lwdiv	;wreg free
 29648  002642  0100               	movlb	0	; () banked
 29649  002644  EE20 F002          	lfsr	2,2
 29650  002648  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29651  00264A  26D9               	addwf	fsr2l,f,c
 29652  00264C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29653  00264E  22DA               	addwfc	fsr2h,f,c
 29654  002650  5183               	movf	?___lwdiv& (0+255),w,b
 29655  002652  5CDE               	subwf	postinc2,w,c
 29656  002654  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29657  002656  58DE               	subwfb	postinc2,w,c
 29658  002658  A0D8               	btfss	status,0,c
 29659  00265A  D01E               	goto	l2050
 29660                           
 29661                           ; BSR set to: 0
 29662                           ;led.c: 156: {
 29663                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29664  00265C  EE20 F002          	lfsr	2,2
 29665  002660  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29666  002662  26D9               	addwf	fsr2l,f,c
 29667  002664  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29668  002666  22DA               	addwfc	fsr2h,f,c
 29669  002668  0E00               	movlw	0
 29670  00266A  6EDE               	movwf	postinc2,c
 29671  00266C  0E00               	movlw	0
 29672  00266E  6EDD               	movwf	postdec2,c
 29673                           
 29674                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29675  002670  EE20 F001          	lfsr	2,1
 29676  002674  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29677  002676  26D9               	addwf	fsr2l,f,c
 29678  002678  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29679  00267A  22DA               	addwfc	fsr2h,f,c
 29680  00267C  0E00               	movlw	0
 29681  00267E                     L48:
 29682  00267E  6EDF               	movwf	indf2,c
 29683                           
 29684                           ; BSR set to: 0
 29685                           ;led.c: 167: }
 29686                           
 29687                           ; BSR set to: 0
 29688                           ;led.c: 166: break;
 29689                           
 29690                           ;led.c: 165: default:
 29691                           
 29692                           ; BSR set to: 0
 29693                           ;led.c: 161: }
 29694                           ;led.c: 162: }
 29695                           ;led.c: 163: break;
 29696                           
 29697                           ; BSR set to: 0
 29698                           
 29699                           ; BSR set to: 0
 29700  002680  D00B               	goto	l2050
 29701  002682                     l2048:
 29702                           
 29703                           ; BSR set to: 0
 29704  002682  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29705  002686  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29706  00268A  50DF               	movf	indf2,w,c
 29707                           
 29708                           ; Switch size 1, requested type "space"
 29709                           ; Number of cases is 2, Range of values is 0 to 1
 29710                           ; switch strategies available:
 29711                           ; Name         Instructions Cycles
 29712                           ; simple_byte            7     4 (average)
 29713                           ;	Chosen strategy is simple_byte
 29714  00268C  0A00               	xorlw	0	; case 0
 29715  00268E  B4D8               	btfsc	status,2,c
 29716  002690  D769               	goto	l2049
 29717  002692  0A01               	xorlw	1	; case 1
 29718  002694  B4D8               	btfsc	status,2,c
 29719  002696  D77A               	goto	l2051
 29720  002698                     l2050:
 29721                           
 29722                           ;led.c: 170: return (LedBlink->LedOutState);
 29723  002698  0100               	movlb	0	; () banked
 29724  00269A  EE20 F001          	lfsr	2,1
 29725  00269E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29726  0026A0  26D9               	addwf	fsr2l,f,c
 29727  0026A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29728  0026A4  22DA               	addwfc	fsr2h,f,c
 29729  0026A6  50DF               	movf	indf2,w,c
 29730  0026A8  0012               	return	
 29731  0026AA                     __end_of_LedBlinkStateMachine:
 29732                           	opt stack 0
 29733                           tosu	equ	0xFFF
 29734                           tosh	equ	0xFFE
 29735                           tosl	equ	0xFFD
 29736                           pclath	equ	0xFFA
 29737                           tblptru	equ	0xFF8
 29738                           tblptrh	equ	0xFF7
 29739                           tblptrl	equ	0xFF6
 29740                           tablat	equ	0xFF5
 29741                           prodh	equ	0xFF4
 29742                           prodl	equ	0xFF3
 29743                           intcon	equ	0xFF2
 29744                           intcon2	equ	0xFF1
 29745                           intcon3	equ	0xFF0
 29746                           indf0	equ	0xFEF
 29747                           postinc0	equ	0xFEE
 29748                           plusw0	equ	0xFEB
 29749                           fsr0h	equ	0xFEA
 29750                           fsr0l	equ	0xFE9
 29751                           wreg	equ	0xFE8
 29752                           indf1	equ	0xFE7
 29753                           postinc1	equ	0xFE6
 29754                           postdec1	equ	0xFE5
 29755                           plusw1	equ	0xFE3
 29756                           fsr1h	equ	0xFE2
 29757                           fsr1l	equ	0xFE1
 29758                           indf2	equ	0xFDF
 29759                           postinc2	equ	0xFDE
 29760                           postdec2	equ	0xFDD
 29761                           plusw2	equ	0xFDB
 29762                           fsr2h	equ	0xFDA
 29763                           fsr2l	equ	0xFD9
 29764                           status	equ	0xFD8
 29765                           
 29766 ;; *************** function ___lwdiv *****************
 29767 ;; Defined at:
 29768 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 29769 ;; Parameters:    Size  Location     Type
 29770 ;;  dividend        2   35[BANK0 ] unsigned int 
 29771 ;;  divisor         2   37[BANK0 ] unsigned int 
 29772 ;; Auto vars:     Size  Location     Type
 29773 ;;  quotient        2   40[BANK0 ] unsigned int 
 29774 ;;  counter         1   39[BANK0 ] unsigned char 
 29775 ;; Return value:  Size  Location     Type
 29776 ;;                  2   35[BANK0 ] unsigned int 
 29777 ;; Registers used:
 29778 ;;		wreg, status,2, status,0
 29779 ;; Tracked objects:
 29780 ;;		On entry : 0/0
 29781 ;;		On exit  : 0/0
 29782 ;;		Unchanged: 0/0
 29783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29787 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29788 ;;Total ram usage:        7 bytes
 29789 ;; Hardware stack levels used:    1
 29790 ;; Hardware stack levels required when called:   11
 29791 ;; This function calls:
 29792 ;;		Nothing
 29793 ;; This function is called by:
 29794 ;;		_LedBlinkStateMachine
 29795 ;;		_LedPulseStateMachine
 29796 ;;		_secondsAppTimer
 29797 ;;		_utoa
 29798 ;; This function uses a non-reentrant model
 29799 ;;
 29800                           
 29801                           	psect	text135
 29802  0053D6                     __ptext135:
 29803                           	opt stack 0
 29804  0053D6                     ___lwdiv:
 29805                           	opt stack 14
 29806                           
 29807                           ; BSR set to: 0
 29808                           ;incstack = 0
 29809  0053D6  0E00               	movlw	0
 29810  0053D8  0100               	movlb	0	; () banked
 29811  0053DA  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29812  0053DC  0E00               	movlw	0
 29813  0053DE  6F88               	movwf	___lwdiv@quotient& (0+255),b
 29814                           
 29815                           ; BSR set to: 0
 29816  0053E0  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29817  0053E2  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29818  0053E4  B4D8               	btfsc	status,2,c
 29819  0053E6  D01C               	goto	l3055
 29820                           
 29821                           ; BSR set to: 0
 29822  0053E8  0E01               	movlw	1
 29823  0053EA  6F87               	movwf	___lwdiv@counter& (0+255),b
 29824  0053EC  D004               	goto	l3050
 29825  0053EE                     
 29826                           ; BSR set to: 0
 29827                           
 29828                           ; BSR set to: 0
 29829  0053EE  90D8               	bcf	status,0,c
 29830  0053F0  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 29831  0053F2  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29832  0053F4  2B87               	incf	___lwdiv@counter& (0+255),f,b
 29833  0053F6                     l3050:
 29834                           
 29835                           ; BSR set to: 0
 29836                           
 29837                           ; BSR set to: 0
 29838  0053F6  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29839  0053F8  D7FA               	goto	l3051
 29840  0053FA                     u10400:
 29841                           
 29842                           ; BSR set to: 0
 29843                           
 29844                           ; BSR set to: 0
 29845                           
 29846                           ; BSR set to: 0
 29847  0053FA  90D8               	bcf	status,0,c
 29848  0053FC  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 29849  0053FE  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29850                           
 29851                           ; BSR set to: 0
 29852  005400  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29853  005402  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 29854  005404  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29855  005406  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29856  005408  A0D8               	btfss	status,0,c
 29857  00540A  D005               	goto	l3054
 29858                           
 29859                           ; BSR set to: 0
 29860  00540C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29861  00540E  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 29862  005410  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29863  005412  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29864                           
 29865                           ; BSR set to: 0
 29866  005414  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 29867  005416                     l3054:
 29868                           
 29869                           ; BSR set to: 0
 29870                           
 29871                           ; BSR set to: 0
 29872  005416  90D8               	bcf	status,0,c
 29873  005418  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29874  00541A  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 29875                           
 29876                           ; BSR set to: 0
 29877  00541C  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 29878  00541E  D7ED               	goto	u10400
 29879  005420                     l3055:
 29880                           
 29881                           ; BSR set to: 0
 29882                           
 29883                           ; BSR set to: 0
 29884  005420  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 29885  005424  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29886                           
 29887                           ; BSR set to: 0
 29888  005428  0012               	return		;funcret
 29889  00542A                     __end_of___lwdiv:
 29890                           	opt stack 0
 29891                           tosu	equ	0xFFF
 29892                           tosh	equ	0xFFE
 29893                           tosl	equ	0xFFD
 29894                           pclath	equ	0xFFA
 29895                           tblptru	equ	0xFF8
 29896                           tblptrh	equ	0xFF7
 29897                           tblptrl	equ	0xFF6
 29898                           tablat	equ	0xFF5
 29899                           prodh	equ	0xFF4
 29900                           prodl	equ	0xFF3
 29901                           intcon	equ	0xFF2
 29902                           intcon2	equ	0xFF1
 29903                           intcon3	equ	0xFF0
 29904                           indf0	equ	0xFEF
 29905                           postinc0	equ	0xFEE
 29906                           plusw0	equ	0xFEB
 29907                           fsr0h	equ	0xFEA
 29908                           fsr0l	equ	0xFE9
 29909                           wreg	equ	0xFE8
 29910                           indf1	equ	0xFE7
 29911                           postinc1	equ	0xFE6
 29912                           postdec1	equ	0xFE5
 29913                           plusw1	equ	0xFE3
 29914                           fsr1h	equ	0xFE2
 29915                           fsr1l	equ	0xFE1
 29916                           indf2	equ	0xFDF
 29917                           postinc2	equ	0xFDE
 29918                           postdec2	equ	0xFDD
 29919                           plusw2	equ	0xFDB
 29920                           fsr2h	equ	0xFDA
 29921                           fsr2l	equ	0xFD9
 29922                           status	equ	0xFD8
 29923                           
 29924 ;; *************** function _OsAlrm_SetOsAlarm *****************
 29925 ;; Defined at:
 29926 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 29927 ;; Parameters:    Size  Location     Type
 29928 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 29929 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 29930 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 29931 ;;		 -> I2cDummyTx(1), 
 29932 ;; Auto vars:     Size  Location     Type
 29933 ;;		None
 29934 ;; Return value:  Size  Location     Type
 29935 ;;                  1    wreg      void 
 29936 ;; Registers used:
 29937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29938 ;; Tracked objects:
 29939 ;;		On entry : 0/0
 29940 ;;		On exit  : 0/0
 29941 ;;		Unchanged: 0/0
 29942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29946 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29947 ;;Total ram usage:        8 bytes
 29948 ;; Hardware stack levels used:    1
 29949 ;; Hardware stack levels required when called:   12
 29950 ;; This function calls:
 29951 ;;		___wmul
 29952 ;; This function is called by:
 29953 ;;		_I2cSlv_MainTask
 29954 ;; This function uses a non-reentrant model
 29955 ;;
 29956                           
 29957                           	psect	text136
 29958  003CEE                     __ptext136:
 29959                           	opt stack 0
 29960  003CEE                     _OsAlrm_SetOsAlarm:
 29961                           	opt stack 15
 29962                           
 29963                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 29964                           
 29965                           ; BSR set to: 0
 29966                           ;incstack = 0
 29967  003CEE  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29968  003CF2  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29969  003CF6  0E00               	movlw	0
 29970  003CF8  0100               	movlb	0	; () banked
 29971  003CFA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29972  003CFC  0E0B               	movlw	11
 29973  003CFE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29974  003D00  ECAA  F02E         	call	___wmul	;wreg free
 29975  003D04  0E00               	movlw	low _OsAlarms
 29976  003D06  0100               	movlb	0	; () banked
 29977  003D08  257D               	addwf	?___wmul& (0+255),w,b
 29978  003D0A  6ED9               	movwf	fsr2l,c
 29979  003D0C  0E06               	movlw	high _OsAlarms
 29980  003D0E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29981  003D10  6EDA               	movwf	fsr2h,c
 29982  003D12  0E01               	movlw	1
 29983  003D14  6EDF               	movwf	indf2,c
 29984                           
 29985                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 29986  003D16  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29987  003D1A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29988  003D1E  0E00               	movlw	0
 29989  003D20  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29990  003D22  0E0B               	movlw	11
 29991  003D24  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29992  003D26  ECAA  F02E         	call	___wmul	;wreg free
 29993  003D2A  0E01               	movlw	1
 29994  003D2C  0100               	movlb	0	; () banked
 29995  003D2E  277D               	addwf	?___wmul& (0+255),f,b
 29996  003D30  0E00               	movlw	0
 29997  003D32  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29998  003D34  0E00               	movlw	low _OsAlarms
 29999  003D36  257D               	addwf	?___wmul& (0+255),w,b
 30000  003D38  6ED9               	movwf	fsr2l,c
 30001  003D3A  0E06               	movlw	high _OsAlarms
 30002  003D3C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30003  003D3E  6EDA               	movwf	fsr2h,c
 30004  003D40  6ADE               	clrf	postinc2,c
 30005  003D42  6ADE               	clrf	postinc2,c
 30006  003D44  6ADE               	clrf	postinc2,c
 30007  003D46  6ADD               	clrf	postdec2,c
 30008                           
 30009                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30010  003D48  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30011  003D4C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30012  003D50  0E00               	movlw	0
 30013  003D52  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30014  003D54  0E0B               	movlw	11
 30015  003D56  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30016  003D58  ECAA  F02E         	call	___wmul	;wreg free
 30017  003D5C  0E05               	movlw	5
 30018  003D5E  0100               	movlb	0	; () banked
 30019  003D60  277D               	addwf	?___wmul& (0+255),f,b
 30020  003D62  0E00               	movlw	0
 30021  003D64  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30022  003D66  0E00               	movlw	low _OsAlarms
 30023  003D68  257D               	addwf	?___wmul& (0+255),w,b
 30024  003D6A  6ED9               	movwf	fsr2l,c
 30025  003D6C  0E06               	movlw	high _OsAlarms
 30026  003D6E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30027  003D70  6EDA               	movwf	fsr2h,c
 30028  003D72  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30029  003D76  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30030  003D7A  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30031  003D7E  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30032                           
 30033                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30034  003D82  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30035  003D86  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30036  003D8A  0E00               	movlw	0
 30037  003D8C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30038  003D8E  0E0B               	movlw	11
 30039  003D90  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30040  003D92  ECAA  F02E         	call	___wmul	;wreg free
 30041  003D96  0E09               	movlw	9
 30042  003D98  0100               	movlb	0	; () banked
 30043  003D9A  277D               	addwf	?___wmul& (0+255),f,b
 30044  003D9C  0E00               	movlw	0
 30045  003D9E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30046  003DA0  0E00               	movlw	low _OsAlarms
 30047  003DA2  257D               	addwf	?___wmul& (0+255),w,b
 30048  003DA4  6ED9               	movwf	fsr2l,c
 30049  003DA6  0E06               	movlw	high _OsAlarms
 30050  003DA8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30051  003DAA  6EDA               	movwf	fsr2h,c
 30052  003DAC  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30053  003DB0  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30054                           
 30055                           ; BSR set to: 0
 30056  003DB4  0012               	return		;funcret
 30057  003DB6                     __end_of_OsAlrm_SetOsAlarm:
 30058                           	opt stack 0
 30059                           tosu	equ	0xFFF
 30060                           tosh	equ	0xFFE
 30061                           tosl	equ	0xFFD
 30062                           pclath	equ	0xFFA
 30063                           tblptru	equ	0xFF8
 30064                           tblptrh	equ	0xFF7
 30065                           tblptrl	equ	0xFF6
 30066                           tablat	equ	0xFF5
 30067                           prodh	equ	0xFF4
 30068                           prodl	equ	0xFF3
 30069                           intcon	equ	0xFF2
 30070                           intcon2	equ	0xFF1
 30071                           intcon3	equ	0xFF0
 30072                           indf0	equ	0xFEF
 30073                           postinc0	equ	0xFEE
 30074                           plusw0	equ	0xFEB
 30075                           fsr0h	equ	0xFEA
 30076                           fsr0l	equ	0xFE9
 30077                           wreg	equ	0xFE8
 30078                           indf1	equ	0xFE7
 30079                           postinc1	equ	0xFE6
 30080                           postdec1	equ	0xFE5
 30081                           plusw1	equ	0xFE3
 30082                           fsr1h	equ	0xFE2
 30083                           fsr1l	equ	0xFE1
 30084                           indf2	equ	0xFDF
 30085                           postinc2	equ	0xFDE
 30086                           postdec2	equ	0xFDD
 30087                           plusw2	equ	0xFDB
 30088                           fsr2h	equ	0xFDA
 30089                           fsr2l	equ	0xFD9
 30090                           status	equ	0xFD8
 30091                           
 30092 ;; *************** function ___wmul *****************
 30093 ;; Defined at:
 30094 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30095 ;; Parameters:    Size  Location     Type
 30096 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30097 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30098 ;; Auto vars:     Size  Location     Type
 30099 ;;  product         2   33[BANK0 ] unsigned int 
 30100 ;; Return value:  Size  Location     Type
 30101 ;;                  2   29[BANK0 ] unsigned int 
 30102 ;; Registers used:
 30103 ;;		wreg, status,2, status,0, prodl, prodh
 30104 ;; Tracked objects:
 30105 ;;		On entry : 0/0
 30106 ;;		On exit  : 0/0
 30107 ;;		Unchanged: 0/0
 30108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30112 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30113 ;;Total ram usage:        6 bytes
 30114 ;; Hardware stack levels used:    1
 30115 ;; Hardware stack levels required when called:   11
 30116 ;; This function calls:
 30117 ;;		Nothing
 30118 ;; This function is called by:
 30119 ;;		_OsAlrm_SetOsAlarm
 30120 ;;		_secondsAppTimer
 30121 ;;		_atoi
 30122 ;; This function uses a non-reentrant model
 30123 ;;
 30124                           
 30125                           	psect	text137
 30126  005D54                     __ptext137:
 30127                           	opt stack 0
 30128  005D54                     ___wmul:
 30129                           	opt stack 13
 30130                           
 30131                           ; BSR set to: 0
 30132                           ;incstack = 0
 30133  005D54  0100               	movlb	0	; () banked
 30134  005D56  517D               	movf	___wmul@multiplier& (0+255),w,b
 30135  005D58  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30136  005D5A  CFF3 F081          	movff	prodl,___wmul@product
 30137  005D5E  CFF4 F082          	movff	prodh,___wmul@product+1
 30138  005D62  517D               	movf	___wmul@multiplier& (0+255),w,b
 30139  005D64  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30140  005D66  50F3               	movf	prodl,w,c
 30141  005D68  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30142  005D6A  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30143  005D6C  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30144  005D6E  50F3               	movf	prodl,w,c
 30145  005D70  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30146                           
 30147                           ; BSR set to: 0
 30148  005D72  C081  F07D         	movff	___wmul@product,?___wmul
 30149  005D76  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30150  005D7A  0012               	return	
 30151  005D7C                     __end_of___wmul:
 30152                           	opt stack 0
 30153                           tosu	equ	0xFFF
 30154                           tosh	equ	0xFFE
 30155                           tosl	equ	0xFFD
 30156                           pclath	equ	0xFFA
 30157                           tblptru	equ	0xFF8
 30158                           tblptrh	equ	0xFF7
 30159                           tblptrl	equ	0xFF6
 30160                           tablat	equ	0xFF5
 30161                           prodh	equ	0xFF4
 30162                           prodl	equ	0xFF3
 30163                           intcon	equ	0xFF2
 30164                           intcon2	equ	0xFF1
 30165                           intcon3	equ	0xFF0
 30166                           indf0	equ	0xFEF
 30167                           postinc0	equ	0xFEE
 30168                           plusw0	equ	0xFEB
 30169                           fsr0h	equ	0xFEA
 30170                           fsr0l	equ	0xFE9
 30171                           wreg	equ	0xFE8
 30172                           indf1	equ	0xFE7
 30173                           postinc1	equ	0xFE6
 30174                           postdec1	equ	0xFE5
 30175                           plusw1	equ	0xFE3
 30176                           fsr1h	equ	0xFE2
 30177                           fsr1l	equ	0xFE1
 30178                           indf2	equ	0xFDF
 30179                           postinc2	equ	0xFDE
 30180                           postdec2	equ	0xFDD
 30181                           plusw2	equ	0xFDB
 30182                           fsr2h	equ	0xFDA
 30183                           fsr2l	equ	0xFD9
 30184                           status	equ	0xFD8
 30185                           
 30186 ;; *************** function _I2c_InitI2cModule *****************
 30187 ;; Defined at:
 30188 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30189 ;; Parameters:    Size  Location     Type
 30190 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30191 ;;		 -> I2cConfig(10), 
 30192 ;; Auto vars:     Size  Location     Type
 30193 ;;		None
 30194 ;; Return value:  Size  Location     Type
 30195 ;;                  1    wreg      void 
 30196 ;; Registers used:
 30197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30198 ;; Tracked objects:
 30199 ;;		On entry : 0/0
 30200 ;;		On exit  : 0/0
 30201 ;;		Unchanged: 0/0
 30202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30206 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30207 ;;Total ram usage:        4 bytes
 30208 ;; Hardware stack levels used:    1
 30209 ;; Hardware stack levels required when called:   13
 30210 ;; This function calls:
 30211 ;;		_SetBaudRate
 30212 ;; This function is called by:
 30213 ;;		_I2cSlv_MainTask
 30214 ;; This function uses a non-reentrant model
 30215 ;;
 30216                           
 30217                           	psect	text138
 30218  004D7A                     __ptext138:
 30219                           	opt stack 0
 30220  004D7A                     _I2c_InitI2cModule:
 30221                           	opt stack 14
 30222                           
 30223                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30224                           
 30225                           ; BSR set to: 0
 30226                           ;incstack = 0
 30227  004D7A  8295               	bsf	3989,1,c	;volatile
 30228                           
 30229                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30230  004D7C  8095               	bsf	3989,0,c	;volatile
 30231                           
 30232                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30233  004D7E  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30234  004D82  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30235  004D86  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30236  004D8A  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30237  004D8E  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30238  004D92  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30239  004D96  0100               	movlb	0	; () banked
 30240  004D98  EE20 F004          	lfsr	2,4
 30241  004D9C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30242  004D9E  26D9               	addwf	fsr2l,f,c
 30243  004DA0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30244  004DA2  22DA               	addwfc	fsr2h,f,c
 30245  004DA4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30246  004DA8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30247  004DAC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30248  004DB0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30249  004DB4  ECDE  F02A         	call	_SetBaudRate	;wreg free
 30250                           
 30251                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30252  004DB8  0100               	movlb	0	; () banked
 30253  004DBA  EE20 F008          	lfsr	2,8
 30254  004DBE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30255  004DC0  26D9               	addwf	fsr2l,f,c
 30256  004DC2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30257  004DC4  22DA               	addwfc	fsr2h,f,c
 30258  004DC6  50DF               	movf	indf2,w,c
 30259  004DC8  1272               	iorwf	3954,f,c	;volatile
 30260                           
 30261                           ; BSR set to: 0
 30262                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30263  004DCA  EE20 F009          	lfsr	2,9
 30264  004DCE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30265  004DD0  26D9               	addwf	fsr2l,f,c
 30266  004DD2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30267  004DD4  22DA               	addwfc	fsr2h,f,c
 30268  004DD6  50DF               	movf	indf2,w,c
 30269  004DD8  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30270  004DDA  0E05               	movlw	5
 30271  004DDC  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30272  004DDE                     u7995:
 30273  004DDE  90D8               	bcf	status,0,c
 30274  004DE0  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30275  004DE2  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30276  004DE4  D7FC               	goto	u7995
 30277  004DE6  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30278  004DE8  1272               	iorwf	3954,f,c	;volatile
 30279                           
 30280                           ; BSR set to: 0
 30281  004DEA  0012               	return		;funcret
 30282  004DEC                     __end_of_I2c_InitI2cModule:
 30283                           	opt stack 0
 30284                           tosu	equ	0xFFF
 30285                           tosh	equ	0xFFE
 30286                           tosl	equ	0xFFD
 30287                           pclath	equ	0xFFA
 30288                           tblptru	equ	0xFF8
 30289                           tblptrh	equ	0xFF7
 30290                           tblptrl	equ	0xFF6
 30291                           tablat	equ	0xFF5
 30292                           prodh	equ	0xFF4
 30293                           prodl	equ	0xFF3
 30294                           intcon	equ	0xFF2
 30295                           intcon2	equ	0xFF1
 30296                           intcon3	equ	0xFF0
 30297                           indf0	equ	0xFEF
 30298                           postinc0	equ	0xFEE
 30299                           plusw0	equ	0xFEB
 30300                           fsr0h	equ	0xFEA
 30301                           fsr0l	equ	0xFE9
 30302                           wreg	equ	0xFE8
 30303                           indf1	equ	0xFE7
 30304                           postinc1	equ	0xFE6
 30305                           postdec1	equ	0xFE5
 30306                           plusw1	equ	0xFE3
 30307                           fsr1h	equ	0xFE2
 30308                           fsr1l	equ	0xFE1
 30309                           indf2	equ	0xFDF
 30310                           postinc2	equ	0xFDE
 30311                           postdec2	equ	0xFDD
 30312                           plusw2	equ	0xFDB
 30313                           fsr2h	equ	0xFDA
 30314                           fsr2l	equ	0xFD9
 30315                           status	equ	0xFD8
 30316                           
 30317 ;; *************** function _SetBaudRate *****************
 30318 ;; Defined at:
 30319 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30320 ;; Parameters:    Size  Location     Type
 30321 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30322 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30323 ;; Auto vars:     Size  Location     Type
 30324 ;;		None
 30325 ;; Return value:  Size  Location     Type
 30326 ;;                  1    wreg      void 
 30327 ;; Registers used:
 30328 ;;		wreg, status,2, status,0, cstack
 30329 ;; Tracked objects:
 30330 ;;		On entry : 0/0
 30331 ;;		On exit  : 0/0
 30332 ;;		Unchanged: 0/0
 30333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30337 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30338 ;;Total ram usage:       12 bytes
 30339 ;; Hardware stack levels used:    1
 30340 ;; Hardware stack levels required when called:   12
 30341 ;; This function calls:
 30342 ;;		___lldiv
 30343 ;; This function is called by:
 30344 ;;		_I2c_InitI2cModule
 30345 ;; This function uses a non-reentrant model
 30346 ;;
 30347                           
 30348                           	psect	text139
 30349  0055BC                     __ptext139:
 30350                           	opt stack 0
 30351  0055BC                     _SetBaudRate:
 30352                           	opt stack 14
 30353                           
 30354                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;incstack = 0
 30358  0055BC  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30359  0055C0  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30360  0055C4  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30361  0055C8  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30362  0055CC  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30363  0055D0  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30364  0055D4  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30365  0055D8  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30366  0055DC  0E02               	movlw	2
 30367  0055DE                     u6965:
 30368  0055DE  90D8               	bcf	status,0,c
 30369  0055E0  0100               	movlb	0	; () banked
 30370  0055E2  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30371  0055E4  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30372  0055E6  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30373  0055E8  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30374  0055EA  2EE8               	decfsz	wreg,f,c
 30375  0055EC  D7F8               	goto	u6965
 30376  0055EE  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30377  0055F2  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30378  0055F6  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30379  0055FA  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30380  0055FE  EC85  F025         	call	___lldiv	;wreg free
 30381  005602  0100               	movlb	0	; () banked
 30382  005604  0589               	decf	?___lldiv& (0+255),w,b
 30383  005606  6E74               	movwf	3956,c	;volatile
 30384                           
 30385                           ; BSR set to: 0
 30386  005608  0012               	return		;funcret
 30387  00560A                     __end_of_SetBaudRate:
 30388                           	opt stack 0
 30389                           tosu	equ	0xFFF
 30390                           tosh	equ	0xFFE
 30391                           tosl	equ	0xFFD
 30392                           pclath	equ	0xFFA
 30393                           tblptru	equ	0xFF8
 30394                           tblptrh	equ	0xFF7
 30395                           tblptrl	equ	0xFF6
 30396                           tablat	equ	0xFF5
 30397                           prodh	equ	0xFF4
 30398                           prodl	equ	0xFF3
 30399                           intcon	equ	0xFF2
 30400                           intcon2	equ	0xFF1
 30401                           intcon3	equ	0xFF0
 30402                           indf0	equ	0xFEF
 30403                           postinc0	equ	0xFEE
 30404                           plusw0	equ	0xFEB
 30405                           fsr0h	equ	0xFEA
 30406                           fsr0l	equ	0xFE9
 30407                           wreg	equ	0xFE8
 30408                           indf1	equ	0xFE7
 30409                           postinc1	equ	0xFE6
 30410                           postdec1	equ	0xFE5
 30411                           plusw1	equ	0xFE3
 30412                           fsr1h	equ	0xFE2
 30413                           fsr1l	equ	0xFE1
 30414                           indf2	equ	0xFDF
 30415                           postinc2	equ	0xFDE
 30416                           postdec2	equ	0xFDD
 30417                           plusw2	equ	0xFDB
 30418                           fsr2h	equ	0xFDA
 30419                           fsr2l	equ	0xFD9
 30420                           status	equ	0xFD8
 30421                           
 30422 ;; *************** function ___lldiv *****************
 30423 ;; Defined at:
 30424 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30425 ;; Parameters:    Size  Location     Type
 30426 ;;  dividend        4   41[BANK0 ] unsigned long 
 30427 ;;  divisor         4   45[BANK0 ] unsigned long 
 30428 ;; Auto vars:     Size  Location     Type
 30429 ;;  quotient        4   49[BANK0 ] unsigned long 
 30430 ;;  counter         1   53[BANK0 ] unsigned char 
 30431 ;; Return value:  Size  Location     Type
 30432 ;;                  4   41[BANK0 ] unsigned long 
 30433 ;; Registers used:
 30434 ;;		wreg, status,2, status,0
 30435 ;; Tracked objects:
 30436 ;;		On entry : 0/0
 30437 ;;		On exit  : 0/0
 30438 ;;		Unchanged: 0/0
 30439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30441 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30443 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30444 ;;Total ram usage:       13 bytes
 30445 ;; Hardware stack levels used:    1
 30446 ;; Hardware stack levels required when called:   11
 30447 ;; This function calls:
 30448 ;;		Nothing
 30449 ;; This function is called by:
 30450 ;;		_SetBaudRate
 30451 ;;		_Tmr_TmrBPrSet
 30452 ;;		_SetUartBaudRate
 30453 ;; This function uses a non-reentrant model
 30454 ;;
 30455                           
 30456                           	psect	text140
 30457  004B0A                     __ptext140:
 30458                           	opt stack 0
 30459  004B0A                     ___lldiv:
 30460                           	opt stack 15
 30461                           
 30462                           ; BSR set to: 0
 30463                           ;incstack = 0
 30464  004B0A  0E00               	movlw	0
 30465  004B0C  0100               	movlb	0	; () banked
 30466  004B0E  6F91               	movwf	___lldiv@quotient& (0+255),b
 30467  004B10  0E00               	movlw	0
 30468  004B12  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30469  004B14  0E00               	movlw	0
 30470  004B16  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30471  004B18  0E00               	movlw	0
 30472  004B1A  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30473                           
 30474                           ; BSR set to: 0
 30475  004B1C  518D               	movf	___lldiv@divisor& (0+255),w,b
 30476  004B1E  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30477  004B20  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30478  004B22  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30479  004B24  B4D8               	btfsc	status,2,c
 30480  004B26  D02A               	goto	l3002
 30481                           
 30482                           ; BSR set to: 0
 30483  004B28  0E01               	movlw	1
 30484  004B2A  6F95               	movwf	___lldiv@counter& (0+255),b
 30485  004B2C  D006               	goto	l2997
 30486  004B2E                     
 30487                           ; BSR set to: 0
 30488                           
 30489                           ; BSR set to: 0
 30490  004B2E  90D8               	bcf	status,0,c
 30491  004B30  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30492  004B32  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30493  004B34  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30494  004B36  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30495  004B38  2B95               	incf	___lldiv@counter& (0+255),f,b
 30496  004B3A                     l2997:
 30497                           
 30498                           ; BSR set to: 0
 30499                           
 30500                           ; BSR set to: 0
 30501  004B3A  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30502  004B3C  D7F8               	goto	l2998
 30503  004B3E                     u6060:
 30504                           
 30505                           ; BSR set to: 0
 30506                           
 30507                           ; BSR set to: 0
 30508                           
 30509                           ; BSR set to: 0
 30510  004B3E  90D8               	bcf	status,0,c
 30511  004B40  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30512  004B42  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30513  004B44  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30514  004B46  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30515                           
 30516                           ; BSR set to: 0
 30517  004B48  518D               	movf	___lldiv@divisor& (0+255),w,b
 30518  004B4A  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30519  004B4C  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30520  004B4E  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30521  004B50  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30522  004B52  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30523  004B54  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30524  004B56  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30525  004B58  A0D8               	btfss	status,0,c
 30526  004B5A  D009               	goto	l3001
 30527                           
 30528                           ; BSR set to: 0
 30529  004B5C  518D               	movf	___lldiv@divisor& (0+255),w,b
 30530  004B5E  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30531  004B60  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30532  004B62  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30533  004B64  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30534  004B66  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30535  004B68  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30536  004B6A  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30537                           
 30538                           ; BSR set to: 0
 30539  004B6C  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30540  004B6E                     l3001:
 30541                           
 30542                           ; BSR set to: 0
 30543                           
 30544                           ; BSR set to: 0
 30545  004B6E  90D8               	bcf	status,0,c
 30546  004B70  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30547  004B72  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30548  004B74  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30549  004B76  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30550                           
 30551                           ; BSR set to: 0
 30552  004B78  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30553  004B7A  D7E1               	goto	u6060
 30554  004B7C                     l3002:
 30555                           
 30556                           ; BSR set to: 0
 30557                           
 30558                           ; BSR set to: 0
 30559  004B7C  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30560  004B80  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30561  004B84  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30562  004B88  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30563                           
 30564                           ; BSR set to: 0
 30565  004B8C  0012               	return		;funcret
 30566  004B8E                     __end_of___lldiv:
 30567                           	opt stack 0
 30568                           tosu	equ	0xFFF
 30569                           tosh	equ	0xFFE
 30570                           tosl	equ	0xFFD
 30571                           pclath	equ	0xFFA
 30572                           tblptru	equ	0xFF8
 30573                           tblptrh	equ	0xFF7
 30574                           tblptrl	equ	0xFF6
 30575                           tablat	equ	0xFF5
 30576                           prodh	equ	0xFF4
 30577                           prodl	equ	0xFF3
 30578                           intcon	equ	0xFF2
 30579                           intcon2	equ	0xFF1
 30580                           intcon3	equ	0xFF0
 30581                           indf0	equ	0xFEF
 30582                           postinc0	equ	0xFEE
 30583                           plusw0	equ	0xFEB
 30584                           fsr0h	equ	0xFEA
 30585                           fsr0l	equ	0xFE9
 30586                           wreg	equ	0xFE8
 30587                           indf1	equ	0xFE7
 30588                           postinc1	equ	0xFE6
 30589                           postdec1	equ	0xFE5
 30590                           plusw1	equ	0xFE3
 30591                           fsr1h	equ	0xFE2
 30592                           fsr1l	equ	0xFE1
 30593                           indf2	equ	0xFDF
 30594                           postinc2	equ	0xFDE
 30595                           postdec2	equ	0xFDD
 30596                           plusw2	equ	0xFDB
 30597                           fsr2h	equ	0xFDA
 30598                           fsr2l	equ	0xFD9
 30599                           status	equ	0xFD8
 30600                           
 30601 ;; *************** function _I2cSetConfig *****************
 30602 ;; Defined at:
 30603 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30604 ;; Parameters:    Size  Location     Type
 30605 ;;		None
 30606 ;; Auto vars:     Size  Location     Type
 30607 ;;		None
 30608 ;; Return value:  Size  Location     Type
 30609 ;;                  1    wreg      void 
 30610 ;; Registers used:
 30611 ;;		wreg, status,2
 30612 ;; Tracked objects:
 30613 ;;		On entry : 0/0
 30614 ;;		On exit  : 0/0
 30615 ;;		Unchanged: 0/0
 30616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30621 ;;Total ram usage:        0 bytes
 30622 ;; Hardware stack levels used:    1
 30623 ;; Hardware stack levels required when called:   11
 30624 ;; This function calls:
 30625 ;;		Nothing
 30626 ;; This function is called by:
 30627 ;;		_I2cSlv_MainTask
 30628 ;; This function uses a non-reentrant model
 30629 ;;
 30630                           
 30631                           	psect	text141
 30632  005CD4                     __ptext141:
 30633                           	opt stack 0
 30634  005CD4                     _I2cSetConfig:
 30635                           	opt stack 16
 30636                           
 30637                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30638                           
 30639                           ; BSR set to: 0
 30640                           ;incstack = 0
 30641  005CD4  0E80               	movlw	128
 30642  005CD6  0103               	movlb	3	; () banked
 30643  005CD8  6F54               	movwf	_I2cConfig& (0+255),b
 30644  005CDA  0E1A               	movlw	26
 30645  005CDC  6F55               	movwf	(_I2cConfig+1)& (0+255),b
 30646  005CDE  0E06               	movlw	6
 30647  005CE0  6F56               	movwf	(_I2cConfig+2)& (0+255),b
 30648  005CE2  0E00               	movlw	0
 30649  005CE4  6F57               	movwf	(_I2cConfig+3)& (0+255),b
 30650                           
 30651                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30652  005CE6  0E00               	movlw	0
 30653  005CE8  6F58               	movwf	(_I2cConfig+4)& (0+255),b
 30654  005CEA  0E6C               	movlw	108
 30655  005CEC  6F59               	movwf	(_I2cConfig+5)& (0+255),b
 30656  005CEE  0EDC               	movlw	220
 30657  005CF0  6F5A               	movwf	(_I2cConfig+6)& (0+255),b
 30658  005CF2  0E02               	movlw	2
 30659  005CF4  6F5B               	movwf	(_I2cConfig+7)& (0+255),b
 30660                           
 30661                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30662  005CF6  0E08               	movlw	8
 30663  005CF8  6F5C               	movwf	(_I2cConfig+8)& (0+255),b
 30664                           
 30665                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30666  005CFA  0E01               	movlw	1
 30667  005CFC  6F5D               	movwf	(_I2cConfig+9)& (0+255),b
 30668                           
 30669                           ; BSR set to: 3
 30670  005CFE  0012               	return		;funcret
 30671  005D00                     __end_of_I2cSetConfig:
 30672                           	opt stack 0
 30673                           tosu	equ	0xFFF
 30674                           tosh	equ	0xFFE
 30675                           tosl	equ	0xFFD
 30676                           pclath	equ	0xFFA
 30677                           tblptru	equ	0xFF8
 30678                           tblptrh	equ	0xFF7
 30679                           tblptrl	equ	0xFF6
 30680                           tablat	equ	0xFF5
 30681                           prodh	equ	0xFF4
 30682                           prodl	equ	0xFF3
 30683                           intcon	equ	0xFF2
 30684                           intcon2	equ	0xFF1
 30685                           intcon3	equ	0xFF0
 30686                           indf0	equ	0xFEF
 30687                           postinc0	equ	0xFEE
 30688                           plusw0	equ	0xFEB
 30689                           fsr0h	equ	0xFEA
 30690                           fsr0l	equ	0xFE9
 30691                           wreg	equ	0xFE8
 30692                           indf1	equ	0xFE7
 30693                           postinc1	equ	0xFE6
 30694                           postdec1	equ	0xFE5
 30695                           plusw1	equ	0xFE3
 30696                           fsr1h	equ	0xFE2
 30697                           fsr1l	equ	0xFE1
 30698                           indf2	equ	0xFDF
 30699                           postinc2	equ	0xFDE
 30700                           postdec2	equ	0xFDD
 30701                           plusw2	equ	0xFDB
 30702                           fsr2h	equ	0xFDA
 30703                           fsr2l	equ	0xFD9
 30704                           status	equ	0xFD8
 30705                           
 30706 ;; *************** function _I2cSendMsgSm *****************
 30707 ;; Defined at:
 30708 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30709 ;; Parameters:    Size  Location     Type
 30710 ;;		None
 30711 ;; Auto vars:     Size  Location     Type
 30712 ;;		None
 30713 ;; Return value:  Size  Location     Type
 30714 ;;                  1    wreg      void 
 30715 ;; Registers used:
 30716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30717 ;; Tracked objects:
 30718 ;;		On entry : 0/0
 30719 ;;		On exit  : 0/0
 30720 ;;		Unchanged: 0/0
 30721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30726 ;;Total ram usage:        0 bytes
 30727 ;; Hardware stack levels used:    1
 30728 ;; Hardware stack levels required when called:   13
 30729 ;; This function calls:
 30730 ;;		_I2c_ReadData
 30731 ;;		_I2c_WriteData
 30732 ;;		_ReceiveEvt
 30733 ;; This function is called by:
 30734 ;;		_I2cSlv_MainTask
 30735 ;; This function uses a non-reentrant model
 30736 ;;
 30737                           
 30738                           	psect	text142
 30739  003DB6                     __ptext142:
 30740                           	opt stack 0
 30741  003DB6                     _I2cSendMsgSm:
 30742                           	opt stack 14
 30743                           
 30744                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 30745                           ;i2c_slv.c: 122: switch(I2cComState)
 30746                           
 30747                           ; BSR set to: 3
 30748                           ;incstack = 0
 30749  003DB6  D04F               	goto	l1367
 30750  003DB8                     
 30751                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 30752  003DB8  0EDC               	movlw	low _I2cWriteDataEvt
 30753  003DBA  0100               	movlb	0	; () banked
 30754  003DBC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30755  003DBE  0E00               	movlw	high _I2cWriteDataEvt
 30756  003DC0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30757  003DC2  EC53  F02E         	call	_ReceiveEvt	;wreg free
 30758  003DC6  0900               	iorlw	0
 30759  003DC8  B4D8               	btfsc	status,2,c
 30760  003DCA  D007               	goto	l1369
 30761                           
 30762                           ;i2c_slv.c: 127: {
 30763                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 30764  003DCC  0E01               	movlw	1
 30765  003DCE  0101               	movlb	1	; () banked
 30766  003DD0  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30767                           
 30768                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 30769  003DD2  0E01               	movlw	1
 30770  003DD4  0100               	movlb	0	; () banked
 30771  003DD6  6FD4               	movwf	_I2cComSts& (0+255),b
 30772                           
 30773                           ;i2c_slv.c: 132: }
 30774  003DD8  0012               	return	
 30775  003DDA                     l1369:
 30776                           
 30777                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 30778                           
 30779                           ; BSR set to: 0
 30780  003DDA  0E35               	movlw	low _I2cReadDataEvt
 30781  003DDC  0100               	movlb	0	; () banked
 30782  003DDE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30783  003DE0  0E00               	movlw	high _I2cReadDataEvt
 30784  003DE2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30785  003DE4  EC53  F02E         	call	_ReceiveEvt	;wreg free
 30786  003DE8  0900               	iorlw	0
 30787  003DEA  B4D8               	btfsc	status,2,c
 30788  003DEC  D007               	goto	l1371
 30789                           
 30790                           ;i2c_slv.c: 134: {
 30791                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 30792  003DEE  0E02               	movlw	2
 30793  003DF0  0101               	movlb	1	; () banked
 30794  003DF2  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30795                           
 30796                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 30797  003DF4  0E02               	movlw	2
 30798  003DF6  0100               	movlb	0	; () banked
 30799  003DF8  6FD4               	movwf	_I2cComSts& (0+255),b
 30800                           
 30801                           ;i2c_slv.c: 139: }
 30802  003DFA  0012               	return	
 30803  003DFC                     l1371:
 30804                           
 30805                           ;i2c_slv.c: 140: else
 30806                           ;i2c_slv.c: 141: {
 30807                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 30808                           
 30809                           ; BSR set to: 0
 30810  003DFC  0E00               	movlw	0
 30811  003DFE  0100               	movlb	0	; () banked
 30812  003E00  6FD4               	movwf	_I2cComSts& (0+255),b
 30813                           
 30814                           ; BSR set to: 0
 30815                           ;i2c_slv.c: 144: }
 30816                           ;i2c_slv.c: 145: break;
 30817                           
 30818                           ; BSR set to: 0
 30819  003E02  0012               	return	
 30820  003E04                     
 30821                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 30822                           
 30823                           ; BSR set to: 0
 30824  003E04  0EA0               	movlw	low _I2cTxPacket
 30825  003E06  0100               	movlb	0	; () banked
 30826  003E08  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 30827  003E0A  0E03               	movlw	high _I2cTxPacket
 30828  003E0C  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 30829  003E0E  EC98  F00E         	call	_I2c_WriteData	;wreg free
 30830  003E12  0900               	iorlw	0
 30831  003E14  B4D8               	btfsc	status,2,c
 30832  003E16  0012               	return	
 30833                           
 30834                           ;i2c_slv.c: 150: {
 30835                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 30836  003E18  0E03               	movlw	3
 30837  003E1A  0101               	movlb	1	; () banked
 30838  003E1C  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30839                           
 30840                           ; BSR set to: 1
 30841                           ;i2c_slv.c: 153: }
 30842                           ;i2c_slv.c: 154: break;
 30843  003E1E  0012               	return	
 30844  003E20                     
 30845                           ; BSR set to: 1
 30846                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 30847                           
 30848                           ; BSR set to: 1
 30849  003E20  0E9A               	movlw	low _I2cRxPacket
 30850  003E22  0100               	movlb	0	; () banked
 30851  003E24  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 30852  003E26  0E03               	movlw	high _I2cRxPacket
 30853  003E28  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 30854  003E2A  ECAE  F010         	call	_I2c_ReadData	;wreg free
 30855  003E2E  0900               	iorlw	0
 30856  003E30  B4D8               	btfsc	status,2,c
 30857  003E32  0012               	return	
 30858                           
 30859                           ;i2c_slv.c: 159: {
 30860                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 30861  003E34  0E04               	movlw	4
 30862  003E36  0101               	movlb	1	; () banked
 30863  003E38  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30864                           
 30865                           ; BSR set to: 1
 30866                           ;i2c_slv.c: 162: }
 30867                           ;i2c_slv.c: 164: break;
 30868  003E3A  0012               	return	
 30869  003E3C                     
 30870                           ; BSR set to: 1
 30871                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 30872                           
 30873                           ; BSR set to: 1
 30874  003E3C  0E00               	movlw	0
 30875  003E3E  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30876                           
 30877                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 30878  003E40  0E00               	movlw	0
 30879  003E42  0100               	movlb	0	; () banked
 30880  003E44  6FD4               	movwf	_I2cComSts& (0+255),b
 30881                           
 30882                           ;i2c_slv.c: 171: break;
 30883  003E46  0012               	return	
 30884  003E48                     
 30885                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 30886                           
 30887                           ; BSR set to: 0
 30888  003E48  0E00               	movlw	0
 30889  003E4A  0101               	movlb	1	; () banked
 30890  003E4C  6FE1               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30891                           
 30892                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 30893  003E4E  0E00               	movlw	0
 30894  003E50  0100               	movlb	0	; () banked
 30895  003E52  6FD4               	movwf	_I2cComSts& (0+255),b
 30896                           
 30897                           ; BSR set to: 0
 30898                           ;i2c_slv.c: 182: }
 30899                           
 30900                           ; BSR set to: 0
 30901                           ;i2c_slv.c: 181: break;
 30902                           
 30903                           ;i2c_slv.c: 180: default:
 30904                           
 30905                           ;i2c_slv.c: 178: break;
 30906  003E54  0012               	return	
 30907  003E56                     l1367:
 30908                           
 30909                           ; BSR set to: 0
 30910  003E56  0101               	movlb	1	; () banked
 30911  003E58  51E1               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 30912                           
 30913                           ; Switch size 1, requested type "space"
 30914                           ; Number of cases is 5, Range of values is 0 to 4
 30915                           ; switch strategies available:
 30916                           ; Name         Instructions Cycles
 30917                           ; simple_byte           16     9 (average)
 30918                           ;	Chosen strategy is simple_byte
 30919  003E5A  0A00               	xorlw	0	; case 0
 30920  003E5C  B4D8               	btfsc	status,2,c
 30921  003E5E  D7AC               	goto	l1368
 30922  003E60  0A01               	xorlw	1	; case 1
 30923  003E62  B4D8               	btfsc	status,2,c
 30924  003E64  D7CF               	goto	l1374
 30925  003E66  0A03               	xorlw	3	; case 2
 30926  003E68  B4D8               	btfsc	status,2,c
 30927  003E6A  D7DA               	goto	l1376
 30928  003E6C  0A01               	xorlw	1	; case 3
 30929  003E6E  B4D8               	btfsc	status,2,c
 30930  003E70  D7E5               	goto	l1378
 30931  003E72  0A07               	xorlw	7	; case 4
 30932  003E74  A4D8               	btfss	status,2,c
 30933  003E76  0012               	return	
 30934  003E78  D7E7               	goto	l1379
 30935  003E7A                     __end_of_I2cSendMsgSm:
 30936                           	opt stack 0
 30937                           tosu	equ	0xFFF
 30938                           tosh	equ	0xFFE
 30939                           tosl	equ	0xFFD
 30940                           pclath	equ	0xFFA
 30941                           tblptru	equ	0xFF8
 30942                           tblptrh	equ	0xFF7
 30943                           tblptrl	equ	0xFF6
 30944                           tablat	equ	0xFF5
 30945                           prodh	equ	0xFF4
 30946                           prodl	equ	0xFF3
 30947                           intcon	equ	0xFF2
 30948                           intcon2	equ	0xFF1
 30949                           intcon3	equ	0xFF0
 30950                           indf0	equ	0xFEF
 30951                           postinc0	equ	0xFEE
 30952                           plusw0	equ	0xFEB
 30953                           fsr0h	equ	0xFEA
 30954                           fsr0l	equ	0xFE9
 30955                           wreg	equ	0xFE8
 30956                           indf1	equ	0xFE7
 30957                           postinc1	equ	0xFE6
 30958                           postdec1	equ	0xFE5
 30959                           plusw1	equ	0xFE3
 30960                           fsr1h	equ	0xFE2
 30961                           fsr1l	equ	0xFE1
 30962                           indf2	equ	0xFDF
 30963                           postinc2	equ	0xFDE
 30964                           postdec2	equ	0xFDD
 30965                           plusw2	equ	0xFDB
 30966                           fsr2h	equ	0xFDA
 30967                           fsr2l	equ	0xFD9
 30968                           status	equ	0xFD8
 30969                           
 30970 ;; *************** function _ReceiveEvt *****************
 30971 ;; Defined at:
 30972 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 30973 ;; Parameters:    Size  Location     Type
 30974 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 30975 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 30976 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 30977 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 30978 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 30979 ;; Auto vars:     Size  Location     Type
 30980 ;;  EventStatus     1   32[BANK0 ] enum E7727
 30981 ;; Return value:  Size  Location     Type
 30982 ;;                  1    wreg      enum E7699
 30983 ;; Registers used:
 30984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30985 ;; Tracked objects:
 30986 ;;		On entry : 0/0
 30987 ;;		On exit  : 0/0
 30988 ;;		Unchanged: 0/0
 30989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30992 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30994 ;;Total ram usage:        4 bytes
 30995 ;; Hardware stack levels used:    1
 30996 ;; Hardware stack levels required when called:   11
 30997 ;; This function calls:
 30998 ;;		Nothing
 30999 ;; This function is called by:
 31000 ;;		_MdmCntSm
 31001 ;;		_CheckModem
 31002 ;;		_ModemEvtParser
 31003 ;;		_GetSmsSm
 31004 ;;		_SendSmsSm
 31005 ;;		_Mdm_GetSmsData
 31006 ;;		_Mdm_IsSmsReceived
 31007 ;;		_Mdm_IsRinging
 31008 ;;		_InitGprsNetwork
 31009 ;;		_HttpGetMethod
 31010 ;;		_I2cSendMsgSm
 31011 ;;		_I2cSlv_I2cReadMsgSts
 31012 ;;		_RiSm
 31013 ;;		_GsmGprsTerminal
 31014 ;; This function uses a non-reentrant model
 31015 ;;
 31016                           
 31017                           	psect	text143
 31018  005CA6                     __ptext143:
 31019                           	opt stack 0
 31020  005CA6                     _ReceiveEvt:
 31021                           	opt stack 13
 31022                           
 31023                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31024                           
 31025                           ;incstack = 0
 31026  005CA6  0E00               	movlw	0
 31027  005CA8  0100               	movlb	0	; () banked
 31028  005CAA  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31029                           
 31030                           ; BSR set to: 0
 31031                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31032  005CAC  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31033  005CB0  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31034  005CB4  0E02               	movlw	2
 31035  005CB6  18DE               	xorwf	postinc2,w,c
 31036  005CB8  A4D8               	btfss	status,2,c
 31037  005CBA  D008               	goto	l832
 31038                           
 31039                           ; BSR set to: 0
 31040                           ;os_ser.c: 106: {
 31041                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31042  005CBC  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31043  005CC0  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31044  005CC4  0E01               	movlw	1
 31045  005CC6  6EDF               	movwf	indf2,c
 31046                           
 31047                           ; BSR set to: 0
 31048                           ;os_ser.c: 110: EventStatus = EventReceived;
 31049  005CC8  0E01               	movlw	1
 31050  005CCA  D001               	goto	L49
 31051  005CCC                     l832:
 31052                           
 31053                           ; BSR set to: 0
 31054                           ;os_ser.c: 112: else
 31055                           ;os_ser.c: 113: {
 31056                           ;os_ser.c: 115: EventStatus = EventIdle;
 31057                           
 31058                           ; BSR set to: 0
 31059  005CCC  0E00               	movlw	0
 31060  005CCE                     L49:
 31061  005CCE  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31062                           
 31063                           ; BSR set to: 0
 31064                           ;os_ser.c: 116: }
 31065                           ;os_ser.c: 119: return(EventStatus);
 31066  005CD0  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31067  005CD2  0012               	return	
 31068  005CD4                     __end_of_ReceiveEvt:
 31069                           	opt stack 0
 31070                           tosu	equ	0xFFF
 31071                           tosh	equ	0xFFE
 31072                           tosl	equ	0xFFD
 31073                           pclath	equ	0xFFA
 31074                           tblptru	equ	0xFF8
 31075                           tblptrh	equ	0xFF7
 31076                           tblptrl	equ	0xFF6
 31077                           tablat	equ	0xFF5
 31078                           prodh	equ	0xFF4
 31079                           prodl	equ	0xFF3
 31080                           intcon	equ	0xFF2
 31081                           intcon2	equ	0xFF1
 31082                           intcon3	equ	0xFF0
 31083                           indf0	equ	0xFEF
 31084                           postinc0	equ	0xFEE
 31085                           plusw0	equ	0xFEB
 31086                           fsr0h	equ	0xFEA
 31087                           fsr0l	equ	0xFE9
 31088                           wreg	equ	0xFE8
 31089                           indf1	equ	0xFE7
 31090                           postinc1	equ	0xFE6
 31091                           postdec1	equ	0xFE5
 31092                           plusw1	equ	0xFE3
 31093                           fsr1h	equ	0xFE2
 31094                           fsr1l	equ	0xFE1
 31095                           indf2	equ	0xFDF
 31096                           postinc2	equ	0xFDE
 31097                           postdec2	equ	0xFDD
 31098                           plusw2	equ	0xFDB
 31099                           fsr2h	equ	0xFDA
 31100                           fsr2l	equ	0xFD9
 31101                           status	equ	0xFD8
 31102                           
 31103 ;; *************** function _I2c_WriteData *****************
 31104 ;; Defined at:
 31105 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31106 ;; Parameters:    Size  Location     Type
 31107 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31108 ;;		 -> I2cTxPacket(5), 
 31109 ;; Auto vars:     Size  Location     Type
 31110 ;;		None
 31111 ;; Return value:  Size  Location     Type
 31112 ;;                  1    wreg      enum E7740
 31113 ;; Registers used:
 31114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31115 ;; Tracked objects:
 31116 ;;		On entry : 0/0
 31117 ;;		On exit  : 0/0
 31118 ;;		Unchanged: 0/0
 31119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31124 ;;Total ram usage:        4 bytes
 31125 ;; Hardware stack levels used:    1
 31126 ;; Hardware stack levels required when called:   12
 31127 ;; This function calls:
 31128 ;;		_CheckAckStatus
 31129 ;;		_CheckTxStatus
 31130 ;;		_StartCondition
 31131 ;;		_StopCondition
 31132 ;;		_WriteByte
 31133 ;; This function is called by:
 31134 ;;		_I2cSendMsgSm
 31135 ;; This function uses a non-reentrant model
 31136 ;;
 31137                           
 31138                           	psect	text144
 31139  001D30                     __ptext144:
 31140                           	opt stack 0
 31141  001D30                     _I2c_WriteData:
 31142                           	opt stack 14
 31143                           
 31144                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31145                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31146                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31147                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31148                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31149                           
 31150                           ; BSR set to: 0
 31151                           ;incstack = 0
 31152  001D30  D095               	goto	l160
 31153  001D32                     
 31154                           ;i2c_drv.c: 264: StartCondition();
 31155  001D32  ECCF  F030         	call	_StartCondition	;wreg free
 31156                           
 31157                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31158  001D36  0E00               	movlw	0
 31159  001D38  6E31               	movwf	I2c_WriteData@WriteStatus,c
 31160                           
 31161                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31162  001D3A  0E01               	movlw	1
 31163  001D3C  D084               	goto	L56
 31164  001D3E                     
 31165                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31166  001D3E  0100               	movlb	0	; () banked
 31167  001D40  EE20 F001          	lfsr	2,1
 31168  001D44  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31169  001D46  26D9               	addwf	fsr2l,f,c
 31170  001D48  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31171  001D4A  22DA               	addwfc	fsr2h,f,c
 31172  001D4C  50DF               	movf	indf2,w,c
 31173  001D4E  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31174  001D50  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31175  001D54  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31176  001D58  50DF               	movf	indf2,w,c
 31177  001D5A  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31178  001D5C  90D8               	bcf	status,0,c
 31179  001D5E  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31180  001D60  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31181  001D62  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31182  001D66  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31183  001D6A  6EDF               	movwf	indf2,c
 31184                           
 31185                           ; BSR set to: 0
 31186                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31187  001D6C  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31188  001D70  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31189  001D74  50DF               	movf	indf2,w,c
 31190  001D76  ECAD  F030         	call	_WriteByte
 31191                           
 31192                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31193  001D7A  0E02               	movlw	2
 31194  001D7C  6E34               	movwf	I2c_WriteData@I2cWriteState,c
 31195  001D7E                     
 31196                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31197  001D7E  ECB7  F030         	call	_CheckTxStatus	;wreg free
 31198  001D82  0900               	iorlw	0
 31199  001D84  A4D8               	btfss	status,2,c
 31200  001D86  D089               	goto	l162
 31201                           
 31202                           ;i2c_drv.c: 282: {
 31203                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31204  001D88  0E03               	movlw	3
 31205  001D8A  D01A               	goto	L58
 31206  001D8C                     
 31207                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31208  001D8C  0100               	movlb	0	; () banked
 31209  001D8E  EE20 F002          	lfsr	2,2
 31210  001D92  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31211  001D94  26D9               	addwf	fsr2l,f,c
 31212  001D96  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31213  001D98  22DA               	addwfc	fsr2h,f,c
 31214  001D9A  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31215  001D9E  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31216  001DA2  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31217  001DA6  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31218  001DAA  50DF               	movf	indf2,w,c
 31219  001DAC  ECAD  F030         	call	_WriteByte
 31220                           
 31221                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31222  001DB0  0E04               	movlw	4
 31223  001DB2  D049               	goto	L56
 31224  001DB4                     
 31225                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31226  001DB4  ECB7  F030         	call	_CheckTxStatus	;wreg free
 31227  001DB8  0900               	iorlw	0
 31228  001DBA  A4D8               	btfss	status,2,c
 31229  001DBC  D06E               	goto	l162
 31230                           
 31231                           ;i2c_drv.c: 300: {
 31232                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31233  001DBE  0E05               	movlw	5
 31234  001DC0                     L58:
 31235  001DC0  6E33               	movwf	I2c_WriteData@I2cNextState,c
 31236                           
 31237                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31238  001DC2  0E08               	movlw	8
 31239  001DC4  D040               	goto	L56
 31240  001DC6                     
 31241                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31242  001DC6  0100               	movlb	0	; () banked
 31243  001DC8  EE20 F004          	lfsr	2,4
 31244  001DCC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31245  001DCE  26D9               	addwf	fsr2l,f,c
 31246  001DD0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31247  001DD2  22DA               	addwfc	fsr2h,f,c
 31248  001DD4  50DF               	movf	indf2,w,c
 31249  001DD6  B4D8               	btfsc	status,2,c
 31250  001DD8  D010               	goto	l170
 31251                           
 31252                           ; BSR set to: 0
 31253                           ;i2c_drv.c: 310: {
 31254                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31255  001DDA  EE20 F004          	lfsr	2,4
 31256  001DDE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31257  001DE0  26D9               	addwf	fsr2l,f,c
 31258  001DE2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31259  001DE4  22DA               	addwfc	fsr2h,f,c
 31260  001DE6  06DF               	decf	indf2,f,c
 31261                           
 31262                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31263  001DE8  EE20 F002          	lfsr	2,2
 31264  001DEC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31265  001DEE  26D9               	addwf	fsr2l,f,c
 31266  001DF0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31267  001DF2  22DA               	addwfc	fsr2h,f,c
 31268  001DF4  2ADE               	incf	postinc2,f,c
 31269  001DF6  0E00               	movlw	0
 31270  001DF8  22DD               	addwfc	postdec2,f,c
 31271  001DFA                     l170:
 31272                           
 31273                           ; BSR set to: 0
 31274                           ;i2c_drv.c: 315: }
 31275                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31276  001DFA  EE20 F004          	lfsr	2,4
 31277  001DFE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31278  001E00  26D9               	addwf	fsr2l,f,c
 31279  001E02  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31280  001E04  22DA               	addwfc	fsr2h,f,c
 31281  001E06  50DF               	movf	indf2,w,c
 31282  001E08  A4D8               	btfss	status,2,c
 31283  001E0A  D002               	goto	l171
 31284                           
 31285                           ; BSR set to: 0
 31286                           ;i2c_drv.c: 319: {
 31287                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31288  001E0C  0E06               	movlw	6
 31289  001E0E  D01B               	goto	L56
 31290  001E10                     l171:
 31291                           
 31292                           ; BSR set to: 0
 31293                           ;i2c_drv.c: 323: else
 31294                           ;i2c_drv.c: 324: {
 31295                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31296                           
 31297                           ; BSR set to: 0
 31298  001E10  0E03               	movlw	3
 31299  001E12  D019               	goto	L56
 31300  001E14                     
 31301                           ;i2c_drv.c: 332: StopCondition();
 31302                           
 31303                           ; BSR set to: 0
 31304  001E14  ECCD  F030         	call	_StopCondition	;wreg free
 31305                           
 31306                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31307  001E18  0E07               	movlw	7
 31308  001E1A  D015               	goto	L56
 31309  001E1C                     
 31310                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31311  001E1C  0E00               	movlw	0
 31312  001E1E  6E34               	movwf	I2c_WriteData@I2cWriteState,c
 31313                           
 31314                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31315  001E20  0E00               	movlw	0
 31316  001E22  6E33               	movwf	I2c_WriteData@I2cNextState,c
 31317                           
 31318                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31319  001E24  0E02               	movlw	2
 31320  001E26  D018               	goto	L57
 31321  001E28                     
 31322                           ;i2c_drv.c: 347: TentativeCounter++;
 31323  001E28  2A32               	incf	I2c_WriteData@TentativeCounter,f,c
 31324                           
 31325                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31326  001E2A  ECBC  F030         	call	_CheckAckStatus	;wreg free
 31327  001E2E  0900               	iorlw	0
 31328  001E30  A4D8               	btfss	status,2,c
 31329  001E32  D005               	goto	l176
 31330                           
 31331                           ;i2c_drv.c: 350: {
 31332                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31333  001E34  0E00               	movlw	0
 31334  001E36  6E32               	movwf	I2c_WriteData@TentativeCounter,c
 31335                           
 31336                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31337  001E38  C033  F034         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31338                           
 31339                           ;i2c_drv.c: 355: }
 31340  001E3C  D02E               	goto	l162
 31341  001E3E                     l176:
 31342                           
 31343                           ;i2c_drv.c: 356: else
 31344                           ;i2c_drv.c: 357: {
 31345                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31346  001E3E  0E02               	movlw	2
 31347  001E40  6432               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31348  001E42  D02B               	goto	l162
 31349                           
 31350                           ;i2c_drv.c: 360: {
 31351                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31352  001E44  0E09               	movlw	9
 31353  001E46                     L56:
 31354  001E46  6E34               	movwf	I2c_WriteData@I2cWriteState,c
 31355                           
 31356                           ;i2c_drv.c: 363: }
 31357                           ;i2c_drv.c: 364: }
 31358                           ;i2c_drv.c: 365: break;
 31359  001E48  D028               	goto	l162
 31360  001E4A                     
 31361                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31362  001E4A  0E00               	movlw	0
 31363  001E4C  6E34               	movwf	I2c_WriteData@I2cWriteState,c
 31364                           
 31365                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31366  001E4E  0E00               	movlw	0
 31367  001E50  6E33               	movwf	I2c_WriteData@I2cNextState,c
 31368                           
 31369                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31370  001E52  0E00               	movlw	0
 31371  001E54  6E32               	movwf	I2c_WriteData@TentativeCounter,c
 31372                           
 31373                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31374  001E56  0E01               	movlw	1
 31375  001E58                     L57:
 31376  001E58  6E31               	movwf	I2c_WriteData@WriteStatus,c
 31377                           
 31378                           ;i2c_drv.c: 379: }
 31379                           
 31380                           ;i2c_drv.c: 378: break;
 31381                           
 31382                           ;i2c_drv.c: 377: default:
 31383                           
 31384                           ;i2c_drv.c: 375: break;
 31385  001E5A  D01F               	goto	l162
 31386  001E5C                     l160:
 31387  001E5C  5034               	movf	I2c_WriteData@I2cWriteState,w,c
 31388                           
 31389                           ; Switch size 1, requested type "space"
 31390                           ; Number of cases is 10, Range of values is 0 to 9
 31391                           ; switch strategies available:
 31392                           ; Name         Instructions Cycles
 31393                           ; simple_byte           31    16 (average)
 31394                           ;	Chosen strategy is simple_byte
 31395  001E5E  0A00               	xorlw	0	; case 0
 31396  001E60  B4D8               	btfsc	status,2,c
 31397  001E62  D767               	goto	l161
 31398  001E64  0A01               	xorlw	1	; case 1
 31399  001E66  B4D8               	btfsc	status,2,c
 31400  001E68  D76A               	goto	l163
 31401  001E6A  0A03               	xorlw	3	; case 2
 31402  001E6C  B4D8               	btfsc	status,2,c
 31403  001E6E  D787               	goto	l164
 31404  001E70  0A01               	xorlw	1	; case 3
 31405  001E72  B4D8               	btfsc	status,2,c
 31406  001E74  D78B               	goto	l166
 31407  001E76  0A07               	xorlw	7	; case 4
 31408  001E78  B4D8               	btfsc	status,2,c
 31409  001E7A  D79C               	goto	l167
 31410  001E7C  0A01               	xorlw	1	; case 5
 31411  001E7E  B4D8               	btfsc	status,2,c
 31412  001E80  D7A2               	goto	l169
 31413  001E82  0A03               	xorlw	3	; case 6
 31414  001E84  B4D8               	btfsc	status,2,c
 31415  001E86  D7C6               	goto	l173
 31416  001E88  0A01               	xorlw	1	; case 7
 31417  001E8A  B4D8               	btfsc	status,2,c
 31418  001E8C  D7C7               	goto	l174
 31419  001E8E  0A0F               	xorlw	15	; case 8
 31420  001E90  B4D8               	btfsc	status,2,c
 31421  001E92  D7CA               	goto	l175
 31422  001E94  0A01               	xorlw	1	; case 9
 31423  001E96  B4D8               	btfsc	status,2,c
 31424  001E98  D7D8               	goto	l179
 31425  001E9A                     l162:
 31426                           
 31427                           ;i2c_drv.c: 382: return WriteStatus;
 31428  001E9A  5031               	movf	I2c_WriteData@WriteStatus,w,c
 31429  001E9C  0012               	return	
 31430  001E9E                     __end_of_I2c_WriteData:
 31431                           	opt stack 0
 31432                           tosu	equ	0xFFF
 31433                           tosh	equ	0xFFE
 31434                           tosl	equ	0xFFD
 31435                           pclath	equ	0xFFA
 31436                           tblptru	equ	0xFF8
 31437                           tblptrh	equ	0xFF7
 31438                           tblptrl	equ	0xFF6
 31439                           tablat	equ	0xFF5
 31440                           prodh	equ	0xFF4
 31441                           prodl	equ	0xFF3
 31442                           intcon	equ	0xFF2
 31443                           intcon2	equ	0xFF1
 31444                           intcon3	equ	0xFF0
 31445                           indf0	equ	0xFEF
 31446                           postinc0	equ	0xFEE
 31447                           plusw0	equ	0xFEB
 31448                           fsr0h	equ	0xFEA
 31449                           fsr0l	equ	0xFE9
 31450                           wreg	equ	0xFE8
 31451                           indf1	equ	0xFE7
 31452                           postinc1	equ	0xFE6
 31453                           postdec1	equ	0xFE5
 31454                           plusw1	equ	0xFE3
 31455                           fsr1h	equ	0xFE2
 31456                           fsr1l	equ	0xFE1
 31457                           indf2	equ	0xFDF
 31458                           postinc2	equ	0xFDE
 31459                           postdec2	equ	0xFDD
 31460                           plusw2	equ	0xFDB
 31461                           fsr2h	equ	0xFDA
 31462                           fsr2l	equ	0xFD9
 31463                           status	equ	0xFD8
 31464                           
 31465 ;; *************** function _I2c_ReadData *****************
 31466 ;; Defined at:
 31467 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31468 ;; Parameters:    Size  Location     Type
 31469 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31470 ;;		 -> I2cRxPacket(6), 
 31471 ;; Auto vars:     Size  Location     Type
 31472 ;;		None
 31473 ;; Return value:  Size  Location     Type
 31474 ;;                  1    wreg      enum E7787
 31475 ;; Registers used:
 31476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31477 ;; Tracked objects:
 31478 ;;		On entry : 0/0
 31479 ;;		On exit  : 0/0
 31480 ;;		Unchanged: 0/0
 31481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31485 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31486 ;;Total ram usage:        4 bytes
 31487 ;; Hardware stack levels used:    1
 31488 ;; Hardware stack levels required when called:   12
 31489 ;; This function calls:
 31490 ;;		_CheckAckStatus
 31491 ;;		_CheckTxStatus
 31492 ;;		_EnableReceiver
 31493 ;;		_GenerateEvt
 31494 ;;		_ReadByte
 31495 ;;		_SetAckStatus
 31496 ;;		_StartCondition
 31497 ;;		_StopCondition
 31498 ;;		_WriteByte
 31499 ;; This function is called by:
 31500 ;;		_I2cSendMsgSm
 31501 ;; This function uses a non-reentrant model
 31502 ;;
 31503                           
 31504                           	psect	text145
 31505  00215C                     __ptext145:
 31506                           	opt stack 0
 31507  00215C                     _I2c_ReadData:
 31508                           	opt stack 14
 31509                           
 31510                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31511                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31512                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31513                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31514                           ;i2c_drv.c: 402: switch (I2cReadState)
 31515                           
 31516                           ;incstack = 0
 31517  00215C  D090               	goto	l192
 31518  00215E                     
 31519                           ;i2c_drv.c: 406: StartCondition();
 31520  00215E  ECCF  F030         	call	_StartCondition	;wreg free
 31521                           
 31522                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31523  002162  0E00               	movlw	0
 31524  002164  6E2D               	movwf	I2c_ReadData@ReadStatus,c
 31525                           
 31526                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31527  002166  0E01               	movlw	1
 31528  002168  D083               	goto	L66
 31529  00216A                     
 31530                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31531  00216A  0100               	movlb	0	; () banked
 31532  00216C  EE20 F001          	lfsr	2,1
 31533  002170  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31534  002172  26D9               	addwf	fsr2l,f,c
 31535  002174  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31536  002176  22DA               	addwfc	fsr2h,f,c
 31537  002178  50DF               	movf	indf2,w,c
 31538  00217A  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31539  00217C  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31540  002180  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31541  002184  50DF               	movf	indf2,w,c
 31542  002186  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31543  002188  90D8               	bcf	status,0,c
 31544  00218A  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31545  00218C  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31546  00218E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31547  002192  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31548  002196  6EDF               	movwf	indf2,c
 31549                           
 31550                           ; BSR set to: 0
 31551                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31552  002198  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31553  00219C  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31554  0021A0  50DF               	movf	indf2,w,c
 31555  0021A2  ECAD  F030         	call	_WriteByte
 31556                           
 31557                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31558  0021A6  0E02               	movlw	2
 31559  0021A8  D063               	goto	L66
 31560  0021AA                     
 31561                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31562  0021AA  ECB7  F030         	call	_CheckTxStatus	;wreg free
 31563  0021AE  0900               	iorlw	0
 31564  0021B0  A4D8               	btfss	status,2,c
 31565  0021B2  D081               	goto	l194
 31566                           
 31567                           ;i2c_drv.c: 425: {
 31568                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31569  0021B4  0E03               	movlw	3
 31570  0021B6  D05C               	goto	L66
 31571  0021B8                     
 31572                           ;i2c_drv.c: 433: TentativeCounter++;
 31573  0021B8  2A2E               	incf	I2c_ReadData@TentativeCounter,f,c
 31574                           
 31575                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31576  0021BA  ECBC  F030         	call	_CheckAckStatus	;wreg free
 31577  0021BE  0900               	iorlw	0
 31578  0021C0  A4D8               	btfss	status,2,c
 31579  0021C2  D004               	goto	l199
 31580                           
 31581                           ;i2c_drv.c: 436: {
 31582                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31583  0021C4  0E00               	movlw	0
 31584  0021C6  6E2E               	movwf	I2c_ReadData@TentativeCounter,c
 31585  0021C8                     
 31586                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31587  0021C8  0E04               	movlw	4
 31588  0021CA  D052               	goto	L66
 31589  0021CC                     l199:
 31590                           
 31591                           ;i2c_drv.c: 442: else
 31592                           ;i2c_drv.c: 443: {
 31593                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31594  0021CC  0E02               	movlw	2
 31595  0021CE  642E               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31596  0021D0  D072               	goto	l194
 31597                           
 31598                           ;i2c_drv.c: 446: {
 31599                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31600  0021D2  0E08               	movlw	8
 31601  0021D4  D04D               	goto	L66
 31602  0021D6                     
 31603                           ;i2c_drv.c: 455: EnableReceiver();
 31604  0021D6  ECD1  F030         	call	_EnableReceiver	;wreg free
 31605                           
 31606                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31607  0021DA  0E05               	movlw	5
 31608  0021DC  D049               	goto	L66
 31609  0021DE                     
 31610                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31611  0021DE  ECB7  F030         	call	_CheckTxStatus	;wreg free
 31612  0021E2  0900               	iorlw	0
 31613  0021E4  A4D8               	btfss	status,2,c
 31614  0021E6  D067               	goto	l194
 31615                           
 31616                           ;i2c_drv.c: 463: {
 31617                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31618  0021E8  0100               	movlb	0	; () banked
 31619  0021EA  EE20 F002          	lfsr	2,2
 31620  0021EE  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31621  0021F0  26D9               	addwf	fsr2l,f,c
 31622  0021F2  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31623  0021F4  22DA               	addwfc	fsr2h,f,c
 31624  0021F6  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31625  0021FA  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31626  0021FE  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31627  002202  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31628  002206  ECB2  F030         	call	_ReadByte	;wreg free
 31629  00220A  6EDF               	movwf	indf2,c
 31630                           
 31631                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31632  00220C  0100               	movlb	0	; () banked
 31633  00220E  EE20 F002          	lfsr	2,2
 31634  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31635  002214  26D9               	addwf	fsr2l,f,c
 31636  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31637  002218  22DA               	addwfc	fsr2h,f,c
 31638  00221A  2ADE               	incf	postinc2,f,c
 31639  00221C  0E00               	movlw	0
 31640  00221E  22DD               	addwfc	postdec2,f,c
 31641                           
 31642                           ; BSR set to: 0
 31643                           ;i2c_drv.c: 469: DataCounter++;
 31644  002220  2A2F               	incf	I2c_ReadData@DataCounter,f,c
 31645                           
 31646                           ; BSR set to: 0
 31647                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31648  002222  0E06               	movlw	6
 31649  002224  D025               	goto	L66
 31650  002226                     
 31651                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31652                           
 31653                           ; BSR set to: 0
 31654  002226  0100               	movlb	0	; () banked
 31655  002228  EE20 F004          	lfsr	2,4
 31656  00222C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31657  00222E  26D9               	addwf	fsr2l,f,c
 31658  002230  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31659  002232  22DA               	addwfc	fsr2h,f,c
 31660  002234  50DE               	movf	postinc2,w,c
 31661  002236  5C2F               	subwf	I2c_ReadData@DataCounter,w,c
 31662  002238  A0D8               	btfss	status,0,c
 31663  00223A  D008               	goto	l206
 31664                           
 31665                           ; BSR set to: 0
 31666                           ;i2c_drv.c: 478: {
 31667                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31668  00223C  0E01               	movlw	1
 31669  00223E  EC50  F030         	call	_SetAckStatus
 31670                           
 31671                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31672  002242  0E07               	movlw	7
 31673  002244  6E30               	movwf	I2c_ReadData@I2cReadState,c
 31674                           
 31675                           ;i2c_drv.c: 484: DataCounter = 0;
 31676  002246  0E00               	movlw	0
 31677  002248  6E2F               	movwf	I2c_ReadData@DataCounter,c
 31678                           
 31679                           ;i2c_drv.c: 485: }
 31680  00224A  D035               	goto	l194
 31681  00224C                     l206:
 31682                           
 31683                           ;i2c_drv.c: 486: else
 31684                           ;i2c_drv.c: 487: {
 31685                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31686  00224C  0E00               	movlw	0
 31687  00224E  EC50  F030         	call	_SetAckStatus
 31688  002252  D7BA               	goto	L67
 31689  002254                     
 31690                           ;i2c_drv.c: 497: StopCondition();
 31691  002254  ECCD  F030         	call	_StopCondition	;wreg free
 31692                           
 31693                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31694  002258  0E02               	movlw	2
 31695  00225A  6E2D               	movwf	I2c_ReadData@ReadStatus,c
 31696                           
 31697                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31698  00225C  0E05               	movlw	5
 31699  00225E  0100               	movlb	0	; () banked
 31700  002260  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 31701  002262  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 31702  002264  0E00               	movlw	0
 31703  002266  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31704  002268  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 31705  00226A  EC18  F030         	call	_GenerateEvt	;wreg free
 31706                           
 31707                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 31708  00226E  0E00               	movlw	0
 31709  002270                     L66:
 31710  002270  6E30               	movwf	I2c_ReadData@I2cReadState,c
 31711                           
 31712                           ;i2c_drv.c: 504: break;
 31713  002272  D021               	goto	l194
 31714  002274                     
 31715                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 31716  002274  0E00               	movlw	0
 31717  002276  6E30               	movwf	I2c_ReadData@I2cReadState,c
 31718                           
 31719                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 31720  002278  0E01               	movlw	1
 31721  00227A  6E2D               	movwf	I2c_ReadData@ReadStatus,c
 31722                           
 31723                           ;i2c_drv.c: 515: }
 31724                           
 31725                           ;i2c_drv.c: 514: break;
 31726                           
 31727                           ;i2c_drv.c: 513: default:
 31728                           
 31729                           ;i2c_drv.c: 511: break;
 31730  00227C  D01C               	goto	l194
 31731  00227E                     l192:
 31732  00227E  5030               	movf	I2c_ReadData@I2cReadState,w,c
 31733                           
 31734                           ; Switch size 1, requested type "space"
 31735                           ; Number of cases is 9, Range of values is 0 to 8
 31736                           ; switch strategies available:
 31737                           ; Name         Instructions Cycles
 31738                           ; simple_byte           28    15 (average)
 31739                           ;	Chosen strategy is simple_byte
 31740  002280  0A00               	xorlw	0	; case 0
 31741  002282  B4D8               	btfsc	status,2,c
 31742  002284  D76C               	goto	l193
 31743  002286  0A01               	xorlw	1	; case 1
 31744  002288  B4D8               	btfsc	status,2,c
 31745  00228A  D76F               	goto	l195
 31746  00228C  0A03               	xorlw	3	; case 2
 31747  00228E  B4D8               	btfsc	status,2,c
 31748  002290  D78C               	goto	l196
 31749  002292  0A01               	xorlw	1	; case 3
 31750  002294  B4D8               	btfsc	status,2,c
 31751  002296  D790               	goto	l198
 31752  002298  0A07               	xorlw	7	; case 4
 31753  00229A  B4D8               	btfsc	status,2,c
 31754  00229C  D79C               	goto	l202
 31755  00229E  0A01               	xorlw	1	; case 5
 31756  0022A0  B4D8               	btfsc	status,2,c
 31757  0022A2  D79D               	goto	l203
 31758  0022A4  0A03               	xorlw	3	; case 6
 31759  0022A6  B4D8               	btfsc	status,2,c
 31760  0022A8  D7BE               	goto	l205
 31761  0022AA  0A01               	xorlw	1	; case 7
 31762  0022AC  B4D8               	btfsc	status,2,c
 31763  0022AE  D7D2               	goto	l208
 31764  0022B0  0A0F               	xorlw	15	; case 8
 31765  0022B2  B4D8               	btfsc	status,2,c
 31766  0022B4  D7DF               	goto	l209
 31767  0022B6                     l194:
 31768                           
 31769                           ;i2c_drv.c: 518: return ReadStatus;
 31770  0022B6  502D               	movf	I2c_ReadData@ReadStatus,w,c
 31771  0022B8  0012               	return	
 31772  0022BA                     __end_of_I2c_ReadData:
 31773                           	opt stack 0
 31774                           tosu	equ	0xFFF
 31775                           tosh	equ	0xFFE
 31776                           tosl	equ	0xFFD
 31777                           pclath	equ	0xFFA
 31778                           tblptru	equ	0xFF8
 31779                           tblptrh	equ	0xFF7
 31780                           tblptrl	equ	0xFF6
 31781                           tablat	equ	0xFF5
 31782                           prodh	equ	0xFF4
 31783                           prodl	equ	0xFF3
 31784                           intcon	equ	0xFF2
 31785                           intcon2	equ	0xFF1
 31786                           intcon3	equ	0xFF0
 31787                           indf0	equ	0xFEF
 31788                           postinc0	equ	0xFEE
 31789                           plusw0	equ	0xFEB
 31790                           fsr0h	equ	0xFEA
 31791                           fsr0l	equ	0xFE9
 31792                           wreg	equ	0xFE8
 31793                           indf1	equ	0xFE7
 31794                           postinc1	equ	0xFE6
 31795                           postdec1	equ	0xFE5
 31796                           plusw1	equ	0xFE3
 31797                           fsr1h	equ	0xFE2
 31798                           fsr1l	equ	0xFE1
 31799                           indf2	equ	0xFDF
 31800                           postinc2	equ	0xFDE
 31801                           postdec2	equ	0xFDD
 31802                           plusw2	equ	0xFDB
 31803                           fsr2h	equ	0xFDA
 31804                           fsr2l	equ	0xFD9
 31805                           status	equ	0xFD8
 31806                           
 31807 ;; *************** function _WriteByte *****************
 31808 ;; Defined at:
 31809 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;  Byte            1    wreg     unsigned char 
 31812 ;; Auto vars:     Size  Location     Type
 31813 ;;  Byte            1   29[BANK0 ] unsigned char 
 31814 ;; Return value:  Size  Location     Type
 31815 ;;                  1    wreg      void 
 31816 ;; Registers used:
 31817 ;;		wreg
 31818 ;; Tracked objects:
 31819 ;;		On entry : 0/0
 31820 ;;		On exit  : 0/0
 31821 ;;		Unchanged: 0/0
 31822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31827 ;;Total ram usage:        1 bytes
 31828 ;; Hardware stack levels used:    1
 31829 ;; Hardware stack levels required when called:   11
 31830 ;; This function calls:
 31831 ;;		Nothing
 31832 ;; This function is called by:
 31833 ;;		_I2c_WriteData
 31834 ;;		_I2c_ReadData
 31835 ;; This function uses a non-reentrant model
 31836 ;;
 31837                           
 31838                           	psect	text146
 31839  00615A                     __ptext146:
 31840                           	opt stack 0
 31841  00615A                     _WriteByte:
 31842                           	opt stack 14
 31843                           
 31844                           ;incstack = 0
 31845                           ;WriteByte@Byte stored from wreg
 31846  00615A  0100               	movlb	0	; () banked
 31847  00615C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 31848                           
 31849                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 31850  00615E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 31851  006162  0012               	return		;funcret
 31852  006164                     __end_of_WriteByte:
 31853                           	opt stack 0
 31854                           tosu	equ	0xFFF
 31855                           tosh	equ	0xFFE
 31856                           tosl	equ	0xFFD
 31857                           pclath	equ	0xFFA
 31858                           tblptru	equ	0xFF8
 31859                           tblptrh	equ	0xFF7
 31860                           tblptrl	equ	0xFF6
 31861                           tablat	equ	0xFF5
 31862                           prodh	equ	0xFF4
 31863                           prodl	equ	0xFF3
 31864                           intcon	equ	0xFF2
 31865                           intcon2	equ	0xFF1
 31866                           intcon3	equ	0xFF0
 31867                           indf0	equ	0xFEF
 31868                           postinc0	equ	0xFEE
 31869                           plusw0	equ	0xFEB
 31870                           fsr0h	equ	0xFEA
 31871                           fsr0l	equ	0xFE9
 31872                           wreg	equ	0xFE8
 31873                           indf1	equ	0xFE7
 31874                           postinc1	equ	0xFE6
 31875                           postdec1	equ	0xFE5
 31876                           plusw1	equ	0xFE3
 31877                           fsr1h	equ	0xFE2
 31878                           fsr1l	equ	0xFE1
 31879                           indf2	equ	0xFDF
 31880                           postinc2	equ	0xFDE
 31881                           postdec2	equ	0xFDD
 31882                           plusw2	equ	0xFDB
 31883                           fsr2h	equ	0xFDA
 31884                           fsr2l	equ	0xFD9
 31885                           status	equ	0xFD8
 31886                           
 31887 ;; *************** function _StopCondition *****************
 31888 ;; Defined at:
 31889 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31890 ;; Parameters:    Size  Location     Type
 31891 ;;		None
 31892 ;; Auto vars:     Size  Location     Type
 31893 ;;		None
 31894 ;; Return value:  Size  Location     Type
 31895 ;;                  1    wreg      void 
 31896 ;; Registers used:
 31897 ;;		status,2, status,0
 31898 ;; Tracked objects:
 31899 ;;		On entry : 0/0
 31900 ;;		On exit  : 0/0
 31901 ;;		Unchanged: 0/0
 31902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31907 ;;Total ram usage:        0 bytes
 31908 ;; Hardware stack levels used:    1
 31909 ;; Hardware stack levels required when called:   11
 31910 ;; This function calls:
 31911 ;;		Nothing
 31912 ;; This function is called by:
 31913 ;;		_I2c_WriteData
 31914 ;;		_I2c_ReadData
 31915 ;; This function uses a non-reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text147
 31919  00619A                     __ptext147:
 31920                           	opt stack 0
 31921  00619A                     _StopCondition:
 31922                           	opt stack 14
 31923                           
 31924                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 31925                           
 31926                           ;incstack = 0
 31927  00619A  8471               	bsf	3953,2,c	;volatile
 31928  00619C  0012               	return		;funcret
 31929  00619E                     __end_of_StopCondition:
 31930                           	opt stack 0
 31931                           tosu	equ	0xFFF
 31932                           tosh	equ	0xFFE
 31933                           tosl	equ	0xFFD
 31934                           pclath	equ	0xFFA
 31935                           tblptru	equ	0xFF8
 31936                           tblptrh	equ	0xFF7
 31937                           tblptrl	equ	0xFF6
 31938                           tablat	equ	0xFF5
 31939                           prodh	equ	0xFF4
 31940                           prodl	equ	0xFF3
 31941                           intcon	equ	0xFF2
 31942                           intcon2	equ	0xFF1
 31943                           intcon3	equ	0xFF0
 31944                           indf0	equ	0xFEF
 31945                           postinc0	equ	0xFEE
 31946                           plusw0	equ	0xFEB
 31947                           fsr0h	equ	0xFEA
 31948                           fsr0l	equ	0xFE9
 31949                           wreg	equ	0xFE8
 31950                           indf1	equ	0xFE7
 31951                           postinc1	equ	0xFE6
 31952                           postdec1	equ	0xFE5
 31953                           plusw1	equ	0xFE3
 31954                           fsr1h	equ	0xFE2
 31955                           fsr1l	equ	0xFE1
 31956                           indf2	equ	0xFDF
 31957                           postinc2	equ	0xFDE
 31958                           postdec2	equ	0xFDD
 31959                           plusw2	equ	0xFDB
 31960                           fsr2h	equ	0xFDA
 31961                           fsr2l	equ	0xFD9
 31962                           status	equ	0xFD8
 31963                           
 31964 ;; *************** function _StartCondition *****************
 31965 ;; Defined at:
 31966 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31967 ;; Parameters:    Size  Location     Type
 31968 ;;		None
 31969 ;; Auto vars:     Size  Location     Type
 31970 ;;		None
 31971 ;; Return value:  Size  Location     Type
 31972 ;;                  1    wreg      void 
 31973 ;; Registers used:
 31974 ;;		status,2, status,0
 31975 ;; Tracked objects:
 31976 ;;		On entry : 0/0
 31977 ;;		On exit  : 0/0
 31978 ;;		Unchanged: 0/0
 31979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31984 ;;Total ram usage:        0 bytes
 31985 ;; Hardware stack levels used:    1
 31986 ;; Hardware stack levels required when called:   11
 31987 ;; This function calls:
 31988 ;;		Nothing
 31989 ;; This function is called by:
 31990 ;;		_I2c_WriteData
 31991 ;;		_I2c_ReadData
 31992 ;; This function uses a non-reentrant model
 31993 ;;
 31994                           
 31995                           	psect	text148
 31996  00619E                     __ptext148:
 31997                           	opt stack 0
 31998  00619E                     _StartCondition:
 31999                           	opt stack 14
 32000                           
 32001                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32002                           
 32003                           ;incstack = 0
 32004  00619E  8071               	bsf	3953,0,c	;volatile
 32005  0061A0  0012               	return		;funcret
 32006  0061A2                     __end_of_StartCondition:
 32007                           	opt stack 0
 32008                           tosu	equ	0xFFF
 32009                           tosh	equ	0xFFE
 32010                           tosl	equ	0xFFD
 32011                           pclath	equ	0xFFA
 32012                           tblptru	equ	0xFF8
 32013                           tblptrh	equ	0xFF7
 32014                           tblptrl	equ	0xFF6
 32015                           tablat	equ	0xFF5
 32016                           prodh	equ	0xFF4
 32017                           prodl	equ	0xFF3
 32018                           intcon	equ	0xFF2
 32019                           intcon2	equ	0xFF1
 32020                           intcon3	equ	0xFF0
 32021                           indf0	equ	0xFEF
 32022                           postinc0	equ	0xFEE
 32023                           plusw0	equ	0xFEB
 32024                           fsr0h	equ	0xFEA
 32025                           fsr0l	equ	0xFE9
 32026                           wreg	equ	0xFE8
 32027                           indf1	equ	0xFE7
 32028                           postinc1	equ	0xFE6
 32029                           postdec1	equ	0xFE5
 32030                           plusw1	equ	0xFE3
 32031                           fsr1h	equ	0xFE2
 32032                           fsr1l	equ	0xFE1
 32033                           indf2	equ	0xFDF
 32034                           postinc2	equ	0xFDE
 32035                           postdec2	equ	0xFDD
 32036                           plusw2	equ	0xFDB
 32037                           fsr2h	equ	0xFDA
 32038                           fsr2l	equ	0xFD9
 32039                           status	equ	0xFD8
 32040                           
 32041 ;; *************** function _SetAckStatus *****************
 32042 ;; Defined at:
 32043 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32044 ;; Parameters:    Size  Location     Type
 32045 ;;  AckSts          1    wreg     unsigned char 
 32046 ;; Auto vars:     Size  Location     Type
 32047 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32048 ;; Return value:  Size  Location     Type
 32049 ;;                  1    wreg      void 
 32050 ;; Registers used:
 32051 ;;		wreg
 32052 ;; Tracked objects:
 32053 ;;		On entry : 0/0
 32054 ;;		On exit  : 0/0
 32055 ;;		Unchanged: 0/0
 32056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32060 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32061 ;;Total ram usage:        1 bytes
 32062 ;; Hardware stack levels used:    1
 32063 ;; Hardware stack levels required when called:   11
 32064 ;; This function calls:
 32065 ;;		Nothing
 32066 ;; This function is called by:
 32067 ;;		_I2c_ReadData
 32068 ;; This function uses a non-reentrant model
 32069 ;;
 32070                           
 32071                           	psect	text149
 32072  0060A0                     __ptext149:
 32073                           	opt stack 0
 32074  0060A0                     _SetAckStatus:
 32075                           	opt stack 14
 32076                           
 32077                           ;incstack = 0
 32078                           ;SetAckStatus@AckSts stored from wreg
 32079  0060A0  0100               	movlb	0	; () banked
 32080  0060A2  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32081                           
 32082                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32083  0060A4  0100               	movlb	0	; () banked
 32084  0060A6  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32085  0060A8  D002               	bra	u6235
 32086  0060AA  9A71               	bcf	3953,5,c	;volatile
 32087  0060AC  D001               	bra	u6236
 32088  0060AE                     u6235:
 32089  0060AE  8A71               	bsf	3953,5,c	;volatile
 32090  0060B0                     u6236:
 32091                           
 32092                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32093  0060B0  8871               	bsf	3953,4,c	;volatile
 32094  0060B2  0012               	return		;funcret
 32095  0060B4                     __end_of_SetAckStatus:
 32096                           	opt stack 0
 32097                           tosu	equ	0xFFF
 32098                           tosh	equ	0xFFE
 32099                           tosl	equ	0xFFD
 32100                           pclath	equ	0xFFA
 32101                           tblptru	equ	0xFF8
 32102                           tblptrh	equ	0xFF7
 32103                           tblptrl	equ	0xFF6
 32104                           tablat	equ	0xFF5
 32105                           prodh	equ	0xFF4
 32106                           prodl	equ	0xFF3
 32107                           intcon	equ	0xFF2
 32108                           intcon2	equ	0xFF1
 32109                           intcon3	equ	0xFF0
 32110                           indf0	equ	0xFEF
 32111                           postinc0	equ	0xFEE
 32112                           plusw0	equ	0xFEB
 32113                           fsr0h	equ	0xFEA
 32114                           fsr0l	equ	0xFE9
 32115                           wreg	equ	0xFE8
 32116                           indf1	equ	0xFE7
 32117                           postinc1	equ	0xFE6
 32118                           postdec1	equ	0xFE5
 32119                           plusw1	equ	0xFE3
 32120                           fsr1h	equ	0xFE2
 32121                           fsr1l	equ	0xFE1
 32122                           indf2	equ	0xFDF
 32123                           postinc2	equ	0xFDE
 32124                           postdec2	equ	0xFDD
 32125                           plusw2	equ	0xFDB
 32126                           fsr2h	equ	0xFDA
 32127                           fsr2l	equ	0xFD9
 32128                           status	equ	0xFD8
 32129                           
 32130 ;; *************** function _ReadByte *****************
 32131 ;; Defined at:
 32132 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32133 ;; Parameters:    Size  Location     Type
 32134 ;;		None
 32135 ;; Auto vars:     Size  Location     Type
 32136 ;;  Byte            1   29[BANK0 ] unsigned char 
 32137 ;; Return value:  Size  Location     Type
 32138 ;;                  1    wreg      unsigned char 
 32139 ;; Registers used:
 32140 ;;		wreg, status,2
 32141 ;; Tracked objects:
 32142 ;;		On entry : 0/0
 32143 ;;		On exit  : 0/0
 32144 ;;		Unchanged: 0/0
 32145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32150 ;;Total ram usage:        1 bytes
 32151 ;; Hardware stack levels used:    1
 32152 ;; Hardware stack levels required when called:   11
 32153 ;; This function calls:
 32154 ;;		Nothing
 32155 ;; This function is called by:
 32156 ;;		_I2c_ReadData
 32157 ;; This function uses a non-reentrant model
 32158 ;;
 32159                           
 32160                           	psect	text150
 32161  006164                     __ptext150:
 32162                           	opt stack 0
 32163  006164                     _ReadByte:
 32164                           	opt stack 14
 32165                           
 32166                           ;i2c_drv.c: 207: UINT8 Byte;
 32167                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32168                           
 32169                           ;incstack = 0
 32170  006164  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32171                           
 32172                           ;i2c_drv.c: 213: return Byte;
 32173  006168  0100               	movlb	0	; () banked
 32174  00616A  517D               	movf	ReadByte@Byte& (0+255),w,b
 32175  00616C  0012               	return	
 32176  00616E                     __end_of_ReadByte:
 32177                           	opt stack 0
 32178                           tosu	equ	0xFFF
 32179                           tosh	equ	0xFFE
 32180                           tosl	equ	0xFFD
 32181                           pclath	equ	0xFFA
 32182                           tblptru	equ	0xFF8
 32183                           tblptrh	equ	0xFF7
 32184                           tblptrl	equ	0xFF6
 32185                           tablat	equ	0xFF5
 32186                           prodh	equ	0xFF4
 32187                           prodl	equ	0xFF3
 32188                           intcon	equ	0xFF2
 32189                           intcon2	equ	0xFF1
 32190                           intcon3	equ	0xFF0
 32191                           indf0	equ	0xFEF
 32192                           postinc0	equ	0xFEE
 32193                           plusw0	equ	0xFEB
 32194                           fsr0h	equ	0xFEA
 32195                           fsr0l	equ	0xFE9
 32196                           wreg	equ	0xFE8
 32197                           indf1	equ	0xFE7
 32198                           postinc1	equ	0xFE6
 32199                           postdec1	equ	0xFE5
 32200                           plusw1	equ	0xFE3
 32201                           fsr1h	equ	0xFE2
 32202                           fsr1l	equ	0xFE1
 32203                           indf2	equ	0xFDF
 32204                           postinc2	equ	0xFDE
 32205                           postdec2	equ	0xFDD
 32206                           plusw2	equ	0xFDB
 32207                           fsr2h	equ	0xFDA
 32208                           fsr2l	equ	0xFD9
 32209                           status	equ	0xFD8
 32210                           
 32211 ;; *************** function _GenerateEvt *****************
 32212 ;; Defined at:
 32213 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32214 ;; Parameters:    Size  Location     Type
 32215 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32216 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32217 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32218 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 32219 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 32220 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32221 ;; Auto vars:     Size  Location     Type
 32222 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32223 ;; Return value:  Size  Location     Type
 32224 ;;                  1    wreg      enum E7699
 32225 ;; Registers used:
 32226 ;;		wreg, fsr2l, fsr2h, status,2
 32227 ;; Tracked objects:
 32228 ;;		On entry : 0/0
 32229 ;;		On exit  : 0/0
 32230 ;;		Unchanged: 0/0
 32231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32235 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32236 ;;Total ram usage:        3 bytes
 32237 ;; Hardware stack levels used:    1
 32238 ;; Hardware stack levels required when called:   11
 32239 ;; This function calls:
 32240 ;;		Nothing
 32241 ;; This function is called by:
 32242 ;;		_I2c_ReadData
 32243 ;;		_CheckModem
 32244 ;;		_TurnOnModem
 32245 ;;		_ConfigureModem
 32246 ;;		_ModemEvtParser
 32247 ;;		_GetSmsSm
 32248 ;;		_Mdm_RequestSmsData
 32249 ;;		_I2cSlv_SendI2cMsg
 32250 ;;		_I2cSlv_ReceiveI2cMsg
 32251 ;;		_RiSm
 32252 ;;		_Mdm_SendSmsData
 32253 ;;		_MdmHttp_InitGprsNetwork
 32254 ;;		_MdmHttp_GetMethod
 32255 ;;		_Alarm
 32256 ;; This function uses a non-reentrant model
 32257 ;;
 32258                           
 32259                           	psect	text151
 32260  006030                     __ptext151:
 32261                           	opt stack 0
 32262  006030                     _GenerateEvt:
 32263                           	opt stack 13
 32264                           
 32265                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;incstack = 0
 32269  006030  0E00               	movlw	0
 32270  006032  0100               	movlb	0	; () banked
 32271  006034  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32275  006036  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32276  00603A  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32277  00603E  0E02               	movlw	2
 32278  006040  6EDF               	movwf	indf2,c
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;os_ser.c: 83: EventStatus = EventSent;
 32282  006042  0E02               	movlw	2
 32283  006044  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32284  006046  0012               	return	
 32285  006048                     __end_of_GenerateEvt:
 32286                           	opt stack 0
 32287                           tosu	equ	0xFFF
 32288                           tosh	equ	0xFFE
 32289                           tosl	equ	0xFFD
 32290                           pclath	equ	0xFFA
 32291                           tblptru	equ	0xFF8
 32292                           tblptrh	equ	0xFF7
 32293                           tblptrl	equ	0xFF6
 32294                           tablat	equ	0xFF5
 32295                           prodh	equ	0xFF4
 32296                           prodl	equ	0xFF3
 32297                           intcon	equ	0xFF2
 32298                           intcon2	equ	0xFF1
 32299                           intcon3	equ	0xFF0
 32300                           indf0	equ	0xFEF
 32301                           postinc0	equ	0xFEE
 32302                           plusw0	equ	0xFEB
 32303                           fsr0h	equ	0xFEA
 32304                           fsr0l	equ	0xFE9
 32305                           wreg	equ	0xFE8
 32306                           indf1	equ	0xFE7
 32307                           postinc1	equ	0xFE6
 32308                           postdec1	equ	0xFE5
 32309                           plusw1	equ	0xFE3
 32310                           fsr1h	equ	0xFE2
 32311                           fsr1l	equ	0xFE1
 32312                           indf2	equ	0xFDF
 32313                           postinc2	equ	0xFDE
 32314                           postdec2	equ	0xFDD
 32315                           plusw2	equ	0xFDB
 32316                           fsr2h	equ	0xFDA
 32317                           fsr2l	equ	0xFD9
 32318                           status	equ	0xFD8
 32319                           
 32320 ;; *************** function _EnableReceiver *****************
 32321 ;; Defined at:
 32322 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32323 ;; Parameters:    Size  Location     Type
 32324 ;;		None
 32325 ;; Auto vars:     Size  Location     Type
 32326 ;;		None
 32327 ;; Return value:  Size  Location     Type
 32328 ;;                  1    wreg      void 
 32329 ;; Registers used:
 32330 ;;		status,2, status,0
 32331 ;; Tracked objects:
 32332 ;;		On entry : 0/0
 32333 ;;		On exit  : 0/0
 32334 ;;		Unchanged: 0/0
 32335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32340 ;;Total ram usage:        0 bytes
 32341 ;; Hardware stack levels used:    1
 32342 ;; Hardware stack levels required when called:   11
 32343 ;; This function calls:
 32344 ;;		Nothing
 32345 ;; This function is called by:
 32346 ;;		_I2c_ReadData
 32347 ;; This function uses a non-reentrant model
 32348 ;;
 32349                           
 32350                           	psect	text152
 32351  0061A2                     __ptext152:
 32352                           	opt stack 0
 32353  0061A2                     _EnableReceiver:
 32354                           	opt stack 14
 32355                           
 32356                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32357                           
 32358                           ; BSR set to: 0
 32359                           ;incstack = 0
 32360  0061A2  8671               	bsf	3953,3,c	;volatile
 32361  0061A4  0012               	return		;funcret
 32362  0061A6                     __end_of_EnableReceiver:
 32363                           	opt stack 0
 32364                           tosu	equ	0xFFF
 32365                           tosh	equ	0xFFE
 32366                           tosl	equ	0xFFD
 32367                           pclath	equ	0xFFA
 32368                           tblptru	equ	0xFF8
 32369                           tblptrh	equ	0xFF7
 32370                           tblptrl	equ	0xFF6
 32371                           tablat	equ	0xFF5
 32372                           prodh	equ	0xFF4
 32373                           prodl	equ	0xFF3
 32374                           intcon	equ	0xFF2
 32375                           intcon2	equ	0xFF1
 32376                           intcon3	equ	0xFF0
 32377                           indf0	equ	0xFEF
 32378                           postinc0	equ	0xFEE
 32379                           plusw0	equ	0xFEB
 32380                           fsr0h	equ	0xFEA
 32381                           fsr0l	equ	0xFE9
 32382                           wreg	equ	0xFE8
 32383                           indf1	equ	0xFE7
 32384                           postinc1	equ	0xFE6
 32385                           postdec1	equ	0xFE5
 32386                           plusw1	equ	0xFE3
 32387                           fsr1h	equ	0xFE2
 32388                           fsr1l	equ	0xFE1
 32389                           indf2	equ	0xFDF
 32390                           postinc2	equ	0xFDE
 32391                           postdec2	equ	0xFDD
 32392                           plusw2	equ	0xFDB
 32393                           fsr2h	equ	0xFDA
 32394                           fsr2l	equ	0xFD9
 32395                           status	equ	0xFD8
 32396                           
 32397 ;; *************** function _CheckTxStatus *****************
 32398 ;; Defined at:
 32399 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32400 ;; Parameters:    Size  Location     Type
 32401 ;;		None
 32402 ;; Auto vars:     Size  Location     Type
 32403 ;;		None
 32404 ;; Return value:  Size  Location     Type
 32405 ;;                  1    wreg      unsigned char 
 32406 ;; Registers used:
 32407 ;;		wreg, status,2, status,0
 32408 ;; Tracked objects:
 32409 ;;		On entry : 0/0
 32410 ;;		On exit  : 0/0
 32411 ;;		Unchanged: 0/0
 32412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32417 ;;Total ram usage:        0 bytes
 32418 ;; Hardware stack levels used:    1
 32419 ;; Hardware stack levels required when called:   11
 32420 ;; This function calls:
 32421 ;;		Nothing
 32422 ;; This function is called by:
 32423 ;;		_I2c_WriteData
 32424 ;;		_I2c_ReadData
 32425 ;; This function uses a non-reentrant model
 32426 ;;
 32427                           
 32428                           	psect	text153
 32429  00616E                     __ptext153:
 32430                           	opt stack 0
 32431  00616E                     _CheckTxStatus:
 32432                           	opt stack 14
 32433                           
 32434                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32435                           
 32436                           ;incstack = 0
 32437  00616E  4073               	rrncf	3955,w,c	;volatile
 32438  006170  42E8               	rrncf	wreg,f,c
 32439  006172  0B3F               	andlw	63
 32440  006174  0B01               	andlw	1
 32441  006176  0012               	return	
 32442  006178                     __end_of_CheckTxStatus:
 32443                           	opt stack 0
 32444                           tosu	equ	0xFFF
 32445                           tosh	equ	0xFFE
 32446                           tosl	equ	0xFFD
 32447                           pclath	equ	0xFFA
 32448                           tblptru	equ	0xFF8
 32449                           tblptrh	equ	0xFF7
 32450                           tblptrl	equ	0xFF6
 32451                           tablat	equ	0xFF5
 32452                           prodh	equ	0xFF4
 32453                           prodl	equ	0xFF3
 32454                           intcon	equ	0xFF2
 32455                           intcon2	equ	0xFF1
 32456                           intcon3	equ	0xFF0
 32457                           indf0	equ	0xFEF
 32458                           postinc0	equ	0xFEE
 32459                           plusw0	equ	0xFEB
 32460                           fsr0h	equ	0xFEA
 32461                           fsr0l	equ	0xFE9
 32462                           wreg	equ	0xFE8
 32463                           indf1	equ	0xFE7
 32464                           postinc1	equ	0xFE6
 32465                           postdec1	equ	0xFE5
 32466                           plusw1	equ	0xFE3
 32467                           fsr1h	equ	0xFE2
 32468                           fsr1l	equ	0xFE1
 32469                           indf2	equ	0xFDF
 32470                           postinc2	equ	0xFDE
 32471                           postdec2	equ	0xFDD
 32472                           plusw2	equ	0xFDB
 32473                           fsr2h	equ	0xFDA
 32474                           fsr2l	equ	0xFD9
 32475                           status	equ	0xFD8
 32476                           
 32477 ;; *************** function _CheckAckStatus *****************
 32478 ;; Defined at:
 32479 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32480 ;; Parameters:    Size  Location     Type
 32481 ;;		None
 32482 ;; Auto vars:     Size  Location     Type
 32483 ;;		None
 32484 ;; Return value:  Size  Location     Type
 32485 ;;                  1    wreg      unsigned char 
 32486 ;; Registers used:
 32487 ;;		wreg, status,2, status,0
 32488 ;; Tracked objects:
 32489 ;;		On entry : 0/0
 32490 ;;		On exit  : 0/0
 32491 ;;		Unchanged: 0/0
 32492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32497 ;;Total ram usage:        0 bytes
 32498 ;; Hardware stack levels used:    1
 32499 ;; Hardware stack levels required when called:   11
 32500 ;; This function calls:
 32501 ;;		Nothing
 32502 ;; This function is called by:
 32503 ;;		_I2c_WriteData
 32504 ;;		_I2c_ReadData
 32505 ;; This function uses a non-reentrant model
 32506 ;;
 32507                           
 32508                           	psect	text154
 32509  006178                     __ptext154:
 32510                           	opt stack 0
 32511  006178                     _CheckAckStatus:
 32512                           	opt stack 14
 32513                           
 32514                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32515                           
 32516                           ;incstack = 0
 32517  006178  4471               	rlncf	3953,w,c	;volatile
 32518  00617A  46E8               	rlncf	wreg,f,c
 32519  00617C  0B03               	andlw	3
 32520  00617E  0B01               	andlw	1
 32521  006180  0012               	return	
 32522  006182                     __end_of_CheckAckStatus:
 32523                           	opt stack 0
 32524                           tosu	equ	0xFFF
 32525                           tosh	equ	0xFFE
 32526                           tosl	equ	0xFFD
 32527                           pclath	equ	0xFFA
 32528                           tblptru	equ	0xFF8
 32529                           tblptrh	equ	0xFF7
 32530                           tblptrl	equ	0xFF6
 32531                           tablat	equ	0xFF5
 32532                           prodh	equ	0xFF4
 32533                           prodl	equ	0xFF3
 32534                           intcon	equ	0xFF2
 32535                           intcon2	equ	0xFF1
 32536                           intcon3	equ	0xFF0
 32537                           indf0	equ	0xFEF
 32538                           postinc0	equ	0xFEE
 32539                           plusw0	equ	0xFEB
 32540                           fsr0h	equ	0xFEA
 32541                           fsr0l	equ	0xFE9
 32542                           wreg	equ	0xFE8
 32543                           indf1	equ	0xFE7
 32544                           postinc1	equ	0xFE6
 32545                           postdec1	equ	0xFE5
 32546                           plusw1	equ	0xFE3
 32547                           fsr1h	equ	0xFE2
 32548                           fsr1l	equ	0xFE1
 32549                           indf2	equ	0xFDF
 32550                           postinc2	equ	0xFDE
 32551                           postdec2	equ	0xFDD
 32552                           plusw2	equ	0xFDB
 32553                           fsr2h	equ	0xFDA
 32554                           fsr2l	equ	0xFD9
 32555                           status	equ	0xFD8
 32556                           
 32557 ;; *************** function _LowPriorityIsr *****************
 32558 ;; Defined at:
 32559 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32560 ;; Parameters:    Size  Location     Type
 32561 ;;		None
 32562 ;; Auto vars:     Size  Location     Type
 32563 ;;		None
 32564 ;; Return value:  Size  Location     Type
 32565 ;;                  1    wreg      void 
 32566 ;; Registers used:
 32567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32568 ;; Tracked objects:
 32569 ;;		On entry : 0/0
 32570 ;;		On exit  : 0/0
 32571 ;;		Unchanged: 0/0
 32572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32575 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32576 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32577 ;;Total ram usage:       21 bytes
 32578 ;; Hardware stack levels used:    1
 32579 ;; Hardware stack levels required when called:   10
 32580 ;; This function calls:
 32581 ;;		_Tmr_Tmr2Isr
 32582 ;; This function is called by:
 32583 ;;		Interrupt level 1
 32584 ;; This function uses a non-reentrant model
 32585 ;;
 32586                           
 32587                           	psect	intcodelo
 32588  000018                     __pintcodelo:
 32589                           	opt stack 0
 32590  000018                     _LowPriorityIsr:
 32591                           	opt stack 8
 32592                           
 32593                           ;incstack = 0
 32594  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32595  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32596  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32597  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32598  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32599  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32600  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32601  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32602  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32603  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32604  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32605  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32606  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32607  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32608  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32609  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32610  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32611  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32612  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32613  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32614  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32615  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32616                           
 32617                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32618  00006E  B29E               	btfsc	3998,1,c	;volatile
 32619                           
 32620                           ;irq.c: 259: {
 32621                           ;irq.c: 261: Tmr_Tmr2Isr();
 32622  000070  EC07  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 32623  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32624  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32625  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32626  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32627  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32628  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32629  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32630  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32631  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32632  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32633  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32634  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32635  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32636  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32637  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32638  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32639  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32640  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32641  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32642  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32643  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32644  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32645  0000CA  0010               	retfie	
 32646  0000CC                     __end_of_LowPriorityIsr:
 32647                           	opt stack 0
 32648                           tosu	equ	0xFFF
 32649                           tosh	equ	0xFFE
 32650                           tosl	equ	0xFFD
 32651                           pclatu	equ	0xFFB
 32652                           pclath	equ	0xFFA
 32653                           tblptru	equ	0xFF8
 32654                           tblptrh	equ	0xFF7
 32655                           tblptrl	equ	0xFF6
 32656                           tablat	equ	0xFF5
 32657                           prodh	equ	0xFF4
 32658                           prodl	equ	0xFF3
 32659                           intcon	equ	0xFF2
 32660                           intcon2	equ	0xFF1
 32661                           intcon3	equ	0xFF0
 32662                           indf0	equ	0xFEF
 32663                           postinc0	equ	0xFEE
 32664                           plusw0	equ	0xFEB
 32665                           fsr0h	equ	0xFEA
 32666                           fsr0l	equ	0xFE9
 32667                           wreg	equ	0xFE8
 32668                           indf1	equ	0xFE7
 32669                           postinc1	equ	0xFE6
 32670                           postdec1	equ	0xFE5
 32671                           plusw1	equ	0xFE3
 32672                           fsr1h	equ	0xFE2
 32673                           fsr1l	equ	0xFE1
 32674                           bsr	equ	0xFE0
 32675                           indf2	equ	0xFDF
 32676                           postinc2	equ	0xFDE
 32677                           postdec2	equ	0xFDD
 32678                           plusw2	equ	0xFDB
 32679                           fsr2h	equ	0xFDA
 32680                           fsr2l	equ	0xFD9
 32681                           status	equ	0xFD8
 32682                           
 32683 ;; *************** function _Tmr_Tmr2Isr *****************
 32684 ;; Defined at:
 32685 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;		None
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;		None
 32690 ;; Return value:  Size  Location     Type
 32691 ;;                  1    wreg      void 
 32692 ;; Registers used:
 32693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32694 ;; Tracked objects:
 32695 ;;		On entry : 0/0
 32696 ;;		On exit  : 0/0
 32697 ;;		Unchanged: 0/0
 32698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32703 ;;Total ram usage:        0 bytes
 32704 ;; Hardware stack levels used:    1
 32705 ;; Hardware stack levels required when called:    9
 32706 ;; This function calls:
 32707 ;;		Absolute function
 32708 ;;		_Sch_SchmIntService
 32709 ;; This function is called by:
 32710 ;;		_LowPriorityIsr
 32711 ;; This function uses a non-reentrant model
 32712 ;;
 32713                           
 32714                           	psect	text156
 32715  005E0E                     __ptext156:
 32716                           	opt stack 0
 32717  005E0E                     _Tmr_Tmr2Isr:
 32718                           	opt stack 8
 32719                           
 32720                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 32721                           
 32722                           ;incstack = 0
 32723  005E0E  929E               	bcf	3998,1,c	;volatile
 32724                           
 32725                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 32726  005E10  0102               	movlb	2	; () banked
 32727  005E12  51DE               	movf	_Tmr2IsrCallback& (0+255),w,b
 32728  005E14  11DF               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32729  005E16  B4D8               	btfsc	status,2,c
 32730  005E18  0012               	return	
 32731                           
 32732                           ; BSR set to: 2
 32733                           ;tmr_drv.c: 315: {
 32734                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 32735  005E1A  D801               	call	i1u1359_28
 32736  005E1C  0012               	return	
 32737  005E1E                     i1u1359_28:
 32738  005E1E  0005               	push	
 32739  005E20  6EFA               	movwf	pclath,c
 32740  005E22  51DE               	movf	_Tmr2IsrCallback& (0+255),w,b
 32741  005E24  6EFD               	movwf	tosl,c
 32742  005E26  51DF               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32743  005E28  6EFE               	movwf	tosh,c
 32744  005E2A  50F8               	movf	tblptru,w,c
 32745  005E2C  6EFF               	movwf	tosu,c
 32746  005E2E  50FA               	movf	pclath,w,c
 32747  005E30  0012               	return		;indir
 32748  005E32                     __end_of_Tmr_Tmr2Isr:
 32749                           	opt stack 0
 32750                           tosu	equ	0xFFF
 32751                           tosh	equ	0xFFE
 32752                           tosl	equ	0xFFD
 32753                           pclatu	equ	0xFFB
 32754                           pclath	equ	0xFFA
 32755                           tblptru	equ	0xFF8
 32756                           tblptrh	equ	0xFF7
 32757                           tblptrl	equ	0xFF6
 32758                           tablat	equ	0xFF5
 32759                           prodh	equ	0xFF4
 32760                           prodl	equ	0xFF3
 32761                           intcon	equ	0xFF2
 32762                           intcon2	equ	0xFF1
 32763                           intcon3	equ	0xFF0
 32764                           indf0	equ	0xFEF
 32765                           postinc0	equ	0xFEE
 32766                           plusw0	equ	0xFEB
 32767                           fsr0h	equ	0xFEA
 32768                           fsr0l	equ	0xFE9
 32769                           wreg	equ	0xFE8
 32770                           indf1	equ	0xFE7
 32771                           postinc1	equ	0xFE6
 32772                           postdec1	equ	0xFE5
 32773                           plusw1	equ	0xFE3
 32774                           fsr1h	equ	0xFE2
 32775                           fsr1l	equ	0xFE1
 32776                           bsr	equ	0xFE0
 32777                           indf2	equ	0xFDF
 32778                           postinc2	equ	0xFDE
 32779                           postdec2	equ	0xFDD
 32780                           plusw2	equ	0xFDB
 32781                           fsr2h	equ	0xFDA
 32782                           fsr2l	equ	0xFD9
 32783                           status	equ	0xFD8
 32784                           
 32785 ;; *************** function _Sch_SchmIntService *****************
 32786 ;; Defined at:
 32787 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32788 ;; Parameters:    Size  Location     Type
 32789 ;;		None
 32790 ;; Auto vars:     Size  Location     Type
 32791 ;;		None
 32792 ;; Return value:  Size  Location     Type
 32793 ;;                  1    wreg      void 
 32794 ;; Registers used:
 32795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32796 ;; Tracked objects:
 32797 ;;		On entry : 0/0
 32798 ;;		On exit  : 0/0
 32799 ;;		Unchanged: 0/0
 32800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32805 ;;Total ram usage:        0 bytes
 32806 ;; Hardware stack levels used:    1
 32807 ;; Hardware stack levels required when called:    8
 32808 ;; This function calls:
 32809 ;;		_OsAlrm_ProcessOsAlarms
 32810 ;;		_UpdateOsCounters
 32811 ;;		_UpdateSchFlag
 32812 ;; This function is called by:
 32813 ;;		_SystemInit
 32814 ;;		_Tmr_Tmr2Isr
 32815 ;; This function uses a non-reentrant model
 32816 ;;
 32817                           
 32818                           	psect	text157
 32819  006136                     __ptext157:
 32820                           	opt stack 0
 32821  006136                     _Sch_SchmIntService:
 32822                           	opt stack 8
 32823                           
 32824                           ;os_sched.c: 217: UpdateSchFlag();
 32825                           
 32826                           ;incstack = 0
 32827  006136  ECBD  F02F         	call	_UpdateSchFlag	;wreg free
 32828                           
 32829                           ;os_sched.c: 219: UpdateOsCounters();
 32830  00613A  EC84  F030         	call	_UpdateOsCounters	;wreg free
 32831                           
 32832                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 32833  00613E  EC5D  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 32834  006142  0012               	return		;funcret
 32835  006144                     __end_of_Sch_SchmIntService:
 32836                           	opt stack 0
 32837                           tosu	equ	0xFFF
 32838                           tosh	equ	0xFFE
 32839                           tosl	equ	0xFFD
 32840                           pclatu	equ	0xFFB
 32841                           pclath	equ	0xFFA
 32842                           tblptru	equ	0xFF8
 32843                           tblptrh	equ	0xFF7
 32844                           tblptrl	equ	0xFF6
 32845                           tablat	equ	0xFF5
 32846                           prodh	equ	0xFF4
 32847                           prodl	equ	0xFF3
 32848                           intcon	equ	0xFF2
 32849                           intcon2	equ	0xFF1
 32850                           intcon3	equ	0xFF0
 32851                           indf0	equ	0xFEF
 32852                           postinc0	equ	0xFEE
 32853                           plusw0	equ	0xFEB
 32854                           fsr0h	equ	0xFEA
 32855                           fsr0l	equ	0xFE9
 32856                           wreg	equ	0xFE8
 32857                           indf1	equ	0xFE7
 32858                           postinc1	equ	0xFE6
 32859                           postdec1	equ	0xFE5
 32860                           plusw1	equ	0xFE3
 32861                           fsr1h	equ	0xFE2
 32862                           fsr1l	equ	0xFE1
 32863                           bsr	equ	0xFE0
 32864                           indf2	equ	0xFDF
 32865                           postinc2	equ	0xFDE
 32866                           postdec2	equ	0xFDD
 32867                           plusw2	equ	0xFDB
 32868                           fsr2h	equ	0xFDA
 32869                           fsr2l	equ	0xFD9
 32870                           status	equ	0xFD8
 32871                           
 32872 ;; *************** function _UpdateSchFlag *****************
 32873 ;; Defined at:
 32874 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32875 ;; Parameters:    Size  Location     Type
 32876 ;;		None
 32877 ;; Auto vars:     Size  Location     Type
 32878 ;;		None
 32879 ;; Return value:  Size  Location     Type
 32880 ;;                  1    wreg      void 
 32881 ;; Registers used:
 32882 ;;		wreg, status,2, status,0
 32883 ;; Tracked objects:
 32884 ;;		On entry : 0/0
 32885 ;;		On exit  : 0/0
 32886 ;;		Unchanged: 0/0
 32887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32892 ;;Total ram usage:        0 bytes
 32893 ;; Hardware stack levels used:    1
 32894 ;; Hardware stack levels required when called:    4
 32895 ;; This function calls:
 32896 ;;		Nothing
 32897 ;; This function is called by:
 32898 ;;		_Sch_SchmIntService
 32899 ;; This function uses a non-reentrant model
 32900 ;;
 32901                           
 32902                           	psect	text158
 32903  005F7A                     __ptext158:
 32904                           	opt stack 0
 32905  005F7A                     _UpdateSchFlag:
 32906                           	opt stack 11
 32907                           
 32908                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 32909                           ;os_sched.c: 138: InterruptCounter++;
 32910                           
 32911                           ;incstack = 0
 32912  005F7A  0103               	movlb	3	; () banked
 32913  005F7C  4B2E               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 32914  005F7E  2B2F               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 32915                           
 32916                           ; BSR set to: 3
 32917                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 32918  005F80  512E               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 32919  005F82  112F               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 32920  005F84  B4D8               	btfsc	status,2,c
 32921  005F86  0012               	return	
 32922                           
 32923                           ; BSR set to: 3
 32924                           ;os_sched.c: 141: {
 32925                           ;os_sched.c: 143: InterruptCounter = 0;
 32926  005F88  0E00               	movlw	0
 32927  005F8A  6F2F               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 32928  005F8C  0E00               	movlw	0
 32929  005F8E  6F2E               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 32930                           
 32931                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 32932  005F90  0E00               	movlw	0
 32933  005F92  0102               	movlb	2	; () banked
 32934  005F94  6FF3               	movwf	_MainSystemTimebaseFlag& (0+255),b
 32935  005F96  0012               	return	
 32936  005F98                     __end_of_UpdateSchFlag:
 32937                           	opt stack 0
 32938                           tosu	equ	0xFFF
 32939                           tosh	equ	0xFFE
 32940                           tosl	equ	0xFFD
 32941                           pclatu	equ	0xFFB
 32942                           pclath	equ	0xFFA
 32943                           tblptru	equ	0xFF8
 32944                           tblptrh	equ	0xFF7
 32945                           tblptrl	equ	0xFF6
 32946                           tablat	equ	0xFF5
 32947                           prodh	equ	0xFF4
 32948                           prodl	equ	0xFF3
 32949                           intcon	equ	0xFF2
 32950                           intcon2	equ	0xFF1
 32951                           intcon3	equ	0xFF0
 32952                           indf0	equ	0xFEF
 32953                           postinc0	equ	0xFEE
 32954                           plusw0	equ	0xFEB
 32955                           fsr0h	equ	0xFEA
 32956                           fsr0l	equ	0xFE9
 32957                           wreg	equ	0xFE8
 32958                           indf1	equ	0xFE7
 32959                           postinc1	equ	0xFE6
 32960                           postdec1	equ	0xFE5
 32961                           plusw1	equ	0xFE3
 32962                           fsr1h	equ	0xFE2
 32963                           fsr1l	equ	0xFE1
 32964                           bsr	equ	0xFE0
 32965                           indf2	equ	0xFDF
 32966                           postinc2	equ	0xFDE
 32967                           postdec2	equ	0xFDD
 32968                           plusw2	equ	0xFDB
 32969                           fsr2h	equ	0xFDA
 32970                           fsr2l	equ	0xFD9
 32971                           status	equ	0xFD8
 32972                           
 32973 ;; *************** function _UpdateOsCounters *****************
 32974 ;; Defined at:
 32975 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32976 ;; Parameters:    Size  Location     Type
 32977 ;;		None
 32978 ;; Auto vars:     Size  Location     Type
 32979 ;;		None
 32980 ;; Return value:  Size  Location     Type
 32981 ;;                  1    wreg      void 
 32982 ;; Registers used:
 32983 ;;		wreg, status,2, status,0
 32984 ;; Tracked objects:
 32985 ;;		On entry : 0/0
 32986 ;;		On exit  : 0/0
 32987 ;;		Unchanged: 0/0
 32988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32993 ;;Total ram usage:        0 bytes
 32994 ;; Hardware stack levels used:    1
 32995 ;; Hardware stack levels required when called:    4
 32996 ;; This function calls:
 32997 ;;		Nothing
 32998 ;; This function is called by:
 32999 ;;		_Sch_SchmIntService
 33000 ;; This function uses a non-reentrant model
 33001 ;;
 33002                           
 33003                           	psect	text159
 33004  006108                     __ptext159:
 33005                           	opt stack 0
 33006  006108                     _UpdateOsCounters:
 33007                           	opt stack 11
 33008                           
 33009                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33010                           
 33011                           ;incstack = 0
 33012  006108  0E01               	movlw	1
 33013  00610A  0103               	movlb	3	; () banked
 33014  00610C  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33015  00610E  0E00               	movlw	0
 33016  006110  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33017  006112  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33018  006114  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33019                           
 33020                           ; BSR set to: 3
 33021  006116  0012               	return		;funcret
 33022  006118                     __end_of_UpdateOsCounters:
 33023                           	opt stack 0
 33024                           tosu	equ	0xFFF
 33025                           tosh	equ	0xFFE
 33026                           tosl	equ	0xFFD
 33027                           pclatu	equ	0xFFB
 33028                           pclath	equ	0xFFA
 33029                           tblptru	equ	0xFF8
 33030                           tblptrh	equ	0xFF7
 33031                           tblptrl	equ	0xFF6
 33032                           tablat	equ	0xFF5
 33033                           prodh	equ	0xFF4
 33034                           prodl	equ	0xFF3
 33035                           intcon	equ	0xFF2
 33036                           intcon2	equ	0xFF1
 33037                           intcon3	equ	0xFF0
 33038                           indf0	equ	0xFEF
 33039                           postinc0	equ	0xFEE
 33040                           plusw0	equ	0xFEB
 33041                           fsr0h	equ	0xFEA
 33042                           fsr0l	equ	0xFE9
 33043                           wreg	equ	0xFE8
 33044                           indf1	equ	0xFE7
 33045                           postinc1	equ	0xFE6
 33046                           postdec1	equ	0xFE5
 33047                           plusw1	equ	0xFE3
 33048                           fsr1h	equ	0xFE2
 33049                           fsr1l	equ	0xFE1
 33050                           bsr	equ	0xFE0
 33051                           indf2	equ	0xFDF
 33052                           postinc2	equ	0xFDE
 33053                           postdec2	equ	0xFDD
 33054                           plusw2	equ	0xFDB
 33055                           fsr2h	equ	0xFDA
 33056                           fsr2l	equ	0xFD9
 33057                           status	equ	0xFD8
 33058                           
 33059 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33060 ;; Defined at:
 33061 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33062 ;; Parameters:    Size  Location     Type
 33063 ;;		None
 33064 ;; Auto vars:     Size  Location     Type
 33065 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33066 ;; Return value:  Size  Location     Type
 33067 ;;                  1    wreg      void 
 33068 ;; Registers used:
 33069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33070 ;; Tracked objects:
 33071 ;;		On entry : 0/0
 33072 ;;		On exit  : 0/0
 33073 ;;		Unchanged: 0/0
 33074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33077 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33078 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33079 ;;Total ram usage:       10 bytes
 33080 ;; Hardware stack levels used:    1
 33081 ;; Hardware stack levels required when called:    7
 33082 ;; This function calls:
 33083 ;;		_I2cDummyTx
 33084 ;;		_OsAlrm_ClearOsAlarm
 33085 ;;		i1___wmul
 33086 ;; This function is called by:
 33087 ;;		_Sch_SchmIntService
 33088 ;; This function uses a non-reentrant model
 33089 ;;
 33090                           
 33091                           	psect	text160
 33092  0022BA                     __ptext160:
 33093                           	opt stack 0
 33094  0022BA                     _OsAlrm_ProcessOsAlarms:
 33095                           	opt stack 8
 33096                           
 33097                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33098                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33099                           
 33100                           ; BSR set to: 3
 33101                           ;incstack = 0
 33102  0022BA  0E00               	movlw	0
 33103  0022BC  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33104  0022BE  0E00               	movlw	0
 33105  0022C0  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33106  0022C2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33107  0022C4  E105               	bnz	i1u1334_20
 33108  0022C6  0E14               	movlw	20
 33109  0022C8  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33110  0022CA  B0D8               	btfsc	status,0,c
 33111  0022CC  0012               	return	
 33112  0022CE  D001               	goto	i1l742
 33113  0022D0                     i1u1334_20:
 33114  0022D0  0012               	return	
 33115  0022D2                     i1l742:
 33116                           
 33117                           ;os_alarms.c: 121: {
 33118                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33119  0022D2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33120  0022D6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33121  0022DA  0E00               	movlw	0
 33122  0022DC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33123  0022DE  0E0B               	movlw	11
 33124  0022E0  6E1B               	movwf	i1___wmul@multiplicand,c
 33125  0022E2  ECBE  F02E         	call	i1___wmul	;wreg free
 33126  0022E6  0E00               	movlw	low _OsAlarms
 33127  0022E8  2419               	addwf	?i1___wmul,w,c
 33128  0022EA  6ED9               	movwf	fsr2l,c
 33129  0022EC  0E06               	movlw	high _OsAlarms
 33130  0022EE  201A               	addwfc	?i1___wmul+1,w,c
 33131  0022F0  6EDA               	movwf	fsr2h,c
 33132  0022F2  04DE               	decf	postinc2,w,c
 33133  0022F4  A4D8               	btfss	status,2,c
 33134  0022F6  D086               	goto	i1u1338_29
 33135                           
 33136                           ;os_alarms.c: 124: {
 33137                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33138  0022F8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33139  0022FC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33140  002300  0E00               	movlw	0
 33141  002302  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33142  002304  0E0B               	movlw	11
 33143  002306  6E1B               	movwf	i1___wmul@multiplicand,c
 33144  002308  ECBE  F02E         	call	i1___wmul	;wreg free
 33145  00230C  0E01               	movlw	1
 33146  00230E  2619               	addwf	?i1___wmul,f,c
 33147  002310  0E00               	movlw	0
 33148  002312  221A               	addwfc	?i1___wmul+1,f,c
 33149  002314  0E00               	movlw	low _OsAlarms
 33150  002316  2419               	addwf	?i1___wmul,w,c
 33151  002318  6ED9               	movwf	fsr2l,c
 33152  00231A  0E06               	movlw	high _OsAlarms
 33153  00231C  201A               	addwfc	?i1___wmul+1,w,c
 33154  00231E  6EDA               	movwf	fsr2h,c
 33155  002320  2ADE               	incf	postinc2,f,c
 33156  002322  0E00               	movlw	0
 33157  002324  22DE               	addwfc	postinc2,f,c
 33158  002326  22DE               	addwfc	postinc2,f,c
 33159  002328  22DE               	addwfc	postinc2,f,c
 33160                           
 33161                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33162  00232A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33163  00232E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33164  002332  0E00               	movlw	0
 33165  002334  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33166  002336  0E0B               	movlw	11
 33167  002338  6E1B               	movwf	i1___wmul@multiplicand,c
 33168  00233A  ECBE  F02E         	call	i1___wmul	;wreg free
 33169  00233E  0E05               	movlw	5
 33170  002340  2619               	addwf	?i1___wmul,f,c
 33171  002342  0E00               	movlw	0
 33172  002344  221A               	addwfc	?i1___wmul+1,f,c
 33173  002346  0E00               	movlw	low _OsAlarms
 33174  002348  2419               	addwf	?i1___wmul,w,c
 33175  00234A  6ED9               	movwf	fsr2l,c
 33176  00234C  0E06               	movlw	high _OsAlarms
 33177  00234E  201A               	addwfc	?i1___wmul+1,w,c
 33178  002350  6EDA               	movwf	fsr2h,c
 33179  002352  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33180  002356  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33181  00235A  0E00               	movlw	0
 33182  00235C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33183  00235E  0E0B               	movlw	11
 33184  002360  6E1B               	movwf	i1___wmul@multiplicand,c
 33185  002362  ECBE  F02E         	call	i1___wmul	;wreg free
 33186  002366  0E01               	movlw	1
 33187  002368  2619               	addwf	?i1___wmul,f,c
 33188  00236A  0E00               	movlw	0
 33189  00236C  221A               	addwfc	?i1___wmul+1,f,c
 33190  00236E  0E00               	movlw	low _OsAlarms
 33191  002370  2419               	addwf	?i1___wmul,w,c
 33192  002372  6EE1               	movwf	fsr1l,c
 33193  002374  0E06               	movlw	high _OsAlarms
 33194  002376  201A               	addwfc	?i1___wmul+1,w,c
 33195  002378  6EE2               	movwf	fsr1h,c
 33196  00237A  50DE               	movf	postinc2,w,c
 33197  00237C  5CE6               	subwf	postinc1,w,c
 33198  00237E  50DE               	movf	postinc2,w,c
 33199  002380  58E6               	subwfb	postinc1,w,c
 33200  002382  50DE               	movf	postinc2,w,c
 33201  002384  58E6               	subwfb	postinc1,w,c
 33202  002386  50DE               	movf	postinc2,w,c
 33203  002388  58E6               	subwfb	postinc1,w,c
 33204  00238A  A0D8               	btfss	status,0,c
 33205  00238C  D03B               	goto	i1u1338_29
 33206                           
 33207                           ;os_alarms.c: 129: {
 33208                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33209  00238E  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33210  002390  EC41  F029         	call	_OsAlrm_ClearOsAlarm
 33211                           
 33212                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33213  002394  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33214  002398  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33215  00239C  0E00               	movlw	0
 33216  00239E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33217  0023A0  0E0B               	movlw	11
 33218  0023A2  6E1B               	movwf	i1___wmul@multiplicand,c
 33219  0023A4  ECBE  F02E         	call	i1___wmul	;wreg free
 33220  0023A8  0E09               	movlw	9
 33221  0023AA  2619               	addwf	?i1___wmul,f,c
 33222  0023AC  0E00               	movlw	0
 33223  0023AE  221A               	addwfc	?i1___wmul+1,f,c
 33224  0023B0  0E00               	movlw	low _OsAlarms
 33225  0023B2  2419               	addwf	?i1___wmul,w,c
 33226  0023B4  6ED9               	movwf	fsr2l,c
 33227  0023B6  0E06               	movlw	high _OsAlarms
 33228  0023B8  201A               	addwfc	?i1___wmul+1,w,c
 33229  0023BA  6EDA               	movwf	fsr2h,c
 33230  0023BC  50DE               	movf	postinc2,w,c
 33231  0023BE  10DE               	iorwf	postinc2,w,c
 33232  0023C0  B4D8               	btfsc	status,2,c
 33233  0023C2  D020               	goto	i1u1338_29
 33234                           
 33235                           ;os_alarms.c: 134: {
 33236                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33237  0023C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33238  0023C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33239  0023CC  0E00               	movlw	0
 33240  0023CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33241  0023D0  0E0B               	movlw	11
 33242  0023D2  6E1B               	movwf	i1___wmul@multiplicand,c
 33243  0023D4  ECBE  F02E         	call	i1___wmul	;wreg free
 33244  0023D8  0E09               	movlw	9
 33245  0023DA  2619               	addwf	?i1___wmul,f,c
 33246  0023DC  0E00               	movlw	0
 33247  0023DE  221A               	addwfc	?i1___wmul+1,f,c
 33248  0023E0  0E00               	movlw	low _OsAlarms
 33249  0023E2  2419               	addwf	?i1___wmul,w,c
 33250  0023E4  6ED9               	movwf	fsr2l,c
 33251  0023E6  0E06               	movlw	high _OsAlarms
 33252  0023E8  201A               	addwfc	?i1___wmul+1,w,c
 33253  0023EA  6EDA               	movwf	fsr2h,c
 33254  0023EC  D801               	call	i1u1338_28
 33255  0023EE  D00A               	goto	i1u1338_29
 33256  0023F0                     i1u1338_28:
 33257  0023F0  0005               	push	
 33258  0023F2  6EFA               	movwf	pclath,c
 33259  0023F4  50DE               	movf	postinc2,w,c
 33260  0023F6  6EFD               	movwf	tosl,c
 33261  0023F8  50DE               	movf	postinc2,w,c
 33262  0023FA  6EFE               	movwf	tosh,c
 33263  0023FC  50F8               	movf	tblptru,w,c
 33264  0023FE  6EFF               	movwf	tosu,c
 33265  002400  50FA               	movf	pclath,w,c
 33266  002402  0012               	return		;indir
 33267  002404                     i1u1338_29:
 33268  002404  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33269  002406  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33270  002408  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33271  00240A  E101               	bnz	i1l747
 33272  00240C  D75C               	goto	L68
 33273  00240E                     i1l747:
 33274  00240E  0012               	return		;funcret
 33275  002410                     __end_of_OsAlrm_ProcessOsAlarms:
 33276                           	opt stack 0
 33277                           tosu	equ	0xFFF
 33278                           tosh	equ	0xFFE
 33279                           tosl	equ	0xFFD
 33280                           pclatu	equ	0xFFB
 33281                           pclath	equ	0xFFA
 33282                           tblptru	equ	0xFF8
 33283                           tblptrh	equ	0xFF7
 33284                           tblptrl	equ	0xFF6
 33285                           tablat	equ	0xFF5
 33286                           prodh	equ	0xFF4
 33287                           prodl	equ	0xFF3
 33288                           intcon	equ	0xFF2
 33289                           intcon2	equ	0xFF1
 33290                           intcon3	equ	0xFF0
 33291                           indf0	equ	0xFEF
 33292                           postinc0	equ	0xFEE
 33293                           plusw0	equ	0xFEB
 33294                           fsr0h	equ	0xFEA
 33295                           fsr0l	equ	0xFE9
 33296                           wreg	equ	0xFE8
 33297                           indf1	equ	0xFE7
 33298                           postinc1	equ	0xFE6
 33299                           postdec1	equ	0xFE5
 33300                           plusw1	equ	0xFE3
 33301                           fsr1h	equ	0xFE2
 33302                           fsr1l	equ	0xFE1
 33303                           bsr	equ	0xFE0
 33304                           indf2	equ	0xFDF
 33305                           postinc2	equ	0xFDE
 33306                           postdec2	equ	0xFDD
 33307                           plusw2	equ	0xFDB
 33308                           fsr2h	equ	0xFDA
 33309                           fsr2l	equ	0xFD9
 33310                           status	equ	0xFD8
 33311                           
 33312 ;; *************** function i1___wmul *****************
 33313 ;; Defined at:
 33314 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33315 ;; Parameters:    Size  Location     Type
 33316 ;;  multiplier      2   24[COMRAM] unsigned int 
 33317 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33318 ;; Auto vars:     Size  Location     Type
 33319 ;;  __wmul          2   28[COMRAM] unsigned int 
 33320 ;; Return value:  Size  Location     Type
 33321 ;;                  2   24[COMRAM] unsigned int 
 33322 ;; Registers used:
 33323 ;;		wreg, status,2, status,0, prodl, prodh
 33324 ;; Tracked objects:
 33325 ;;		On entry : 0/0
 33326 ;;		On exit  : 0/0
 33327 ;;		Unchanged: 0/0
 33328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33333 ;;Total ram usage:        6 bytes
 33334 ;; Hardware stack levels used:    1
 33335 ;; Hardware stack levels required when called:    4
 33336 ;; This function calls:
 33337 ;;		Nothing
 33338 ;; This function is called by:
 33339 ;;		_OsAlrm_ProcessOsAlarms
 33340 ;; This function uses a non-reentrant model
 33341 ;;
 33342                           
 33343                           	psect	text161
 33344  005D7C                     __ptext161:
 33345                           	opt stack 0
 33346  005D7C                     i1___wmul:
 33347                           	opt stack 10
 33348                           
 33349                           ;incstack = 0
 33350  005D7C  5019               	movf	i1___wmul@multiplier,w,c
 33351  005D7E  021B               	mulwf	i1___wmul@multiplicand,c
 33352  005D80  CFF3 F01D          	movff	prodl,i1___wmul@product
 33353  005D84  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33354  005D88  5019               	movf	i1___wmul@multiplier,w,c
 33355  005D8A  021C               	mulwf	i1___wmul@multiplicand+1,c
 33356  005D8C  50F3               	movf	prodl,w,c
 33357  005D8E  261E               	addwf	i1___wmul@product+1,f,c
 33358  005D90  501A               	movf	i1___wmul@multiplier+1,w,c
 33359  005D92  021B               	mulwf	i1___wmul@multiplicand,c
 33360  005D94  50F3               	movf	prodl,w,c
 33361  005D96  261E               	addwf	i1___wmul@product+1,f,c
 33362  005D98  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33363  005D9C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33364  005DA0  0012               	return	
 33365  005DA2                     __end_ofi1___wmul:
 33366                           	opt stack 0
 33367                           tosu	equ	0xFFF
 33368                           tosh	equ	0xFFE
 33369                           tosl	equ	0xFFD
 33370                           pclatu	equ	0xFFB
 33371                           pclath	equ	0xFFA
 33372                           tblptru	equ	0xFF8
 33373                           tblptrh	equ	0xFF7
 33374                           tblptrl	equ	0xFF6
 33375                           tablat	equ	0xFF5
 33376                           prodh	equ	0xFF4
 33377                           prodl	equ	0xFF3
 33378                           intcon	equ	0xFF2
 33379                           intcon2	equ	0xFF1
 33380                           intcon3	equ	0xFF0
 33381                           indf0	equ	0xFEF
 33382                           postinc0	equ	0xFEE
 33383                           plusw0	equ	0xFEB
 33384                           fsr0h	equ	0xFEA
 33385                           fsr0l	equ	0xFE9
 33386                           wreg	equ	0xFE8
 33387                           indf1	equ	0xFE7
 33388                           postinc1	equ	0xFE6
 33389                           postdec1	equ	0xFE5
 33390                           plusw1	equ	0xFE3
 33391                           fsr1h	equ	0xFE2
 33392                           fsr1l	equ	0xFE1
 33393                           bsr	equ	0xFE0
 33394                           indf2	equ	0xFDF
 33395                           postinc2	equ	0xFDE
 33396                           postdec2	equ	0xFDD
 33397                           plusw2	equ	0xFDB
 33398                           fsr2h	equ	0xFDA
 33399                           fsr2l	equ	0xFD9
 33400                           status	equ	0xFD8
 33401                           
 33402 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33403 ;; Defined at:
 33404 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33405 ;; Parameters:    Size  Location     Type
 33406 ;;  OsAlarmId       1    wreg     unsigned char 
 33407 ;; Auto vars:     Size  Location     Type
 33408 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33409 ;; Return value:  Size  Location     Type
 33410 ;;                  1    wreg      void 
 33411 ;; Registers used:
 33412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33413 ;; Tracked objects:
 33414 ;;		On entry : 0/0
 33415 ;;		On exit  : 0/0
 33416 ;;		Unchanged: 0/0
 33417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33422 ;;Total ram usage:        1 bytes
 33423 ;; Hardware stack levels used:    1
 33424 ;; Hardware stack levels required when called:    4
 33425 ;; This function calls:
 33426 ;;		Nothing
 33427 ;; This function is called by:
 33428 ;;		_OsAlrm_ProcessOsAlarms
 33429 ;; This function uses a non-reentrant model
 33430 ;;
 33431                           
 33432                           	psect	text162
 33433  005282                     __ptext162:
 33434                           	opt stack 0
 33435  005282                     _OsAlrm_ClearOsAlarm:
 33436                           	opt stack 10
 33437                           
 33438                           ;incstack = 0
 33439                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33440  005282  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33441                           
 33442                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33443  005284  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33444  005286  0D0B               	mullw	11
 33445  005288  0E00               	movlw	low _OsAlarms
 33446  00528A  24F3               	addwf	prodl,w,c
 33447  00528C  6ED9               	movwf	fsr2l,c
 33448  00528E  0E06               	movlw	high _OsAlarms
 33449  005290  20F4               	addwfc	prodh,w,c
 33450  005292  6EDA               	movwf	fsr2h,c
 33451  005294  0E00               	movlw	0
 33452  005296  6EDF               	movwf	indf2,c
 33453                           
 33454                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33455  005298  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33456  00529A  0D0B               	mullw	11
 33457  00529C  0E01               	movlw	1
 33458  00529E  26F3               	addwf	prodl,f,c
 33459  0052A0  0E00               	movlw	0
 33460  0052A2  22F4               	addwfc	prodh,f,c
 33461  0052A4  0E00               	movlw	low _OsAlarms
 33462  0052A6  24F3               	addwf	prodl,w,c
 33463  0052A8  6ED9               	movwf	fsr2l,c
 33464  0052AA  0E06               	movlw	high _OsAlarms
 33465  0052AC  20F4               	addwfc	prodh,w,c
 33466  0052AE  6EDA               	movwf	fsr2h,c
 33467  0052B0  6ADE               	clrf	postinc2,c
 33468  0052B2  6ADE               	clrf	postinc2,c
 33469  0052B4  6ADE               	clrf	postinc2,c
 33470  0052B6  6ADD               	clrf	postdec2,c
 33471                           
 33472                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33473  0052B8  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33474  0052BA  0D0B               	mullw	11
 33475  0052BC  0E05               	movlw	5
 33476  0052BE  26F3               	addwf	prodl,f,c
 33477  0052C0  0E00               	movlw	0
 33478  0052C2  22F4               	addwfc	prodh,f,c
 33479  0052C4  0E00               	movlw	low _OsAlarms
 33480  0052C6  24F3               	addwf	prodl,w,c
 33481  0052C8  6ED9               	movwf	fsr2l,c
 33482  0052CA  0E06               	movlw	high _OsAlarms
 33483  0052CC  20F4               	addwfc	prodh,w,c
 33484  0052CE  6EDA               	movwf	fsr2h,c
 33485  0052D0  6ADE               	clrf	postinc2,c
 33486  0052D2  6ADE               	clrf	postinc2,c
 33487  0052D4  6ADE               	clrf	postinc2,c
 33488  0052D6  6ADD               	clrf	postdec2,c
 33489  0052D8  0012               	return		;funcret
 33490  0052DA                     __end_of_OsAlrm_ClearOsAlarm:
 33491                           	opt stack 0
 33492                           tosu	equ	0xFFF
 33493                           tosh	equ	0xFFE
 33494                           tosl	equ	0xFFD
 33495                           pclatu	equ	0xFFB
 33496                           pclath	equ	0xFFA
 33497                           tblptru	equ	0xFF8
 33498                           tblptrh	equ	0xFF7
 33499                           tblptrl	equ	0xFF6
 33500                           tablat	equ	0xFF5
 33501                           prodh	equ	0xFF4
 33502                           prodl	equ	0xFF3
 33503                           intcon	equ	0xFF2
 33504                           intcon2	equ	0xFF1
 33505                           intcon3	equ	0xFF0
 33506                           indf0	equ	0xFEF
 33507                           postinc0	equ	0xFEE
 33508                           plusw0	equ	0xFEB
 33509                           fsr0h	equ	0xFEA
 33510                           fsr0l	equ	0xFE9
 33511                           wreg	equ	0xFE8
 33512                           indf1	equ	0xFE7
 33513                           postinc1	equ	0xFE6
 33514                           postdec1	equ	0xFE5
 33515                           plusw1	equ	0xFE3
 33516                           fsr1h	equ	0xFE2
 33517                           fsr1l	equ	0xFE1
 33518                           bsr	equ	0xFE0
 33519                           indf2	equ	0xFDF
 33520                           postinc2	equ	0xFDE
 33521                           postdec2	equ	0xFDD
 33522                           plusw2	equ	0xFDB
 33523                           fsr2h	equ	0xFDA
 33524                           fsr2l	equ	0xFD9
 33525                           status	equ	0xFD8
 33526                           
 33527 ;; *************** function _I2cDummyTx *****************
 33528 ;; Defined at:
 33529 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33530 ;; Parameters:    Size  Location     Type
 33531 ;;		None
 33532 ;; Auto vars:     Size  Location     Type
 33533 ;;		None
 33534 ;; Return value:  Size  Location     Type
 33535 ;;                  1    wreg      void 
 33536 ;; Registers used:
 33537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33538 ;; Tracked objects:
 33539 ;;		On entry : 0/0
 33540 ;;		On exit  : 0/0
 33541 ;;		Unchanged: 0/0
 33542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33547 ;;Total ram usage:        0 bytes
 33548 ;; Hardware stack levels used:    1
 33549 ;; Hardware stack levels required when called:    6
 33550 ;; This function calls:
 33551 ;;		i1_I2cSlv_SendI2cMsg
 33552 ;; This function is called by:
 33553 ;;		_I2cSlv_MainTask
 33554 ;;		_OsAlrm_ProcessOsAlarms
 33555 ;; This function uses a non-reentrant model
 33556 ;;
 33557                           
 33558                           	psect	text163
 33559  005F98                     __ptext163:
 33560                           	opt stack 0
 33561  005F98                     _I2cDummyTx:
 33562                           	opt stack 8
 33563                           
 33564                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33565                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33566                           
 33567                           ;incstack = 0
 33568  005F98  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 33569  005F9A  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33570  005F9C  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33571  005F9E  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33572  005FA0  0E00               	movlw	0
 33573  005FA2  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33574  005FA4  0E01               	movlw	1
 33575  005FA6  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33576  005FA8  EC58  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33577                           
 33578                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33579  005FAC  0E01               	movlw	1
 33580  005FAE  0101               	movlb	1	; () banked
 33581  005FB0  6FE2               	movwf	_I2cBusStatus& (0+255),b
 33582                           
 33583                           ; BSR set to: 1
 33584  005FB2  0012               	return		;funcret
 33585  005FB4                     __end_of_I2cDummyTx:
 33586                           	opt stack 0
 33587                           tosu	equ	0xFFF
 33588                           tosh	equ	0xFFE
 33589                           tosl	equ	0xFFD
 33590                           pclatu	equ	0xFFB
 33591                           pclath	equ	0xFFA
 33592                           tblptru	equ	0xFF8
 33593                           tblptrh	equ	0xFF7
 33594                           tblptrl	equ	0xFF6
 33595                           tablat	equ	0xFF5
 33596                           prodh	equ	0xFF4
 33597                           prodl	equ	0xFF3
 33598                           intcon	equ	0xFF2
 33599                           intcon2	equ	0xFF1
 33600                           intcon3	equ	0xFF0
 33601                           indf0	equ	0xFEF
 33602                           postinc0	equ	0xFEE
 33603                           plusw0	equ	0xFEB
 33604                           fsr0h	equ	0xFEA
 33605                           fsr0l	equ	0xFE9
 33606                           wreg	equ	0xFE8
 33607                           indf1	equ	0xFE7
 33608                           postinc1	equ	0xFE6
 33609                           postdec1	equ	0xFE5
 33610                           plusw1	equ	0xFE3
 33611                           fsr1h	equ	0xFE2
 33612                           fsr1l	equ	0xFE1
 33613                           bsr	equ	0xFE0
 33614                           indf2	equ	0xFDF
 33615                           postinc2	equ	0xFDE
 33616                           postdec2	equ	0xFDD
 33617                           plusw2	equ	0xFDB
 33618                           fsr2h	equ	0xFDA
 33619                           fsr2l	equ	0xFD9
 33620                           status	equ	0xFD8
 33621                           
 33622 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33623 ;; Defined at:
 33624 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33625 ;; Parameters:    Size  Location     Type
 33626 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33627 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33628 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33629 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33630 ;; Auto vars:     Size  Location     Type
 33631 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33632 ;; Return value:  Size  Location     Type
 33633 ;;                  1    wreg      unsigned char 
 33634 ;; Registers used:
 33635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33636 ;; Tracked objects:
 33637 ;;		On entry : 0/0
 33638 ;;		On exit  : 0/0
 33639 ;;		Unchanged: 0/0
 33640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33644 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33645 ;;Total ram usage:        5 bytes
 33646 ;; Hardware stack levels used:    1
 33647 ;; Hardware stack levels required when called:    5
 33648 ;; This function calls:
 33649 ;;		i1_GenerateEvt
 33650 ;; This function is called by:
 33651 ;;		_I2cDummyTx
 33652 ;; This function uses a non-reentrant model
 33653 ;;
 33654                           
 33655                           	psect	text164
 33656  005AB0                     __ptext164:
 33657                           	opt stack 0
 33658  005AB0                     i1_I2cSlv_SendI2cMsg:
 33659                           	opt stack 8
 33660                           
 33661                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33662                           
 33663                           ; BSR set to: 1
 33664                           ;incstack = 0
 33665  005AB0  0E00               	movlw	0
 33666  005AB2  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33667                           
 33668                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33669  005AB4  0100               	movlb	0	; () banked
 33670  005AB6  05D4               	decf	_I2cComSts& (0+255),w,b
 33671  005AB8  B4D8               	btfsc	status,2,c
 33672  005ABA  D014               	goto	i1l1397
 33673                           
 33674                           ; BSR set to: 0
 33675                           ;i2c_slv.c: 257: {
 33676                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33677  005ABC  C01E  F3A0         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33678                           
 33679                           ; BSR set to: 0
 33680                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33681  005AC0  0E00               	movlw	0
 33682  005AC2  0103               	movlb	3	; () banked
 33683  005AC4  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 33684                           
 33685                           ; BSR set to: 3
 33686                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33687  005AC6  C01F  F3A4         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33688                           
 33689                           ; BSR set to: 3
 33690                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33691  005ACA  C01C  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33692  005ACE  C01D  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33693                           
 33694                           ; BSR set to: 3
 33695                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33696  005AD2  0EDC               	movlw	low _I2cWriteDataEvt
 33697  005AD4  6E19               	movwf	i1GenerateEvt@Event,c
 33698  005AD6  0E00               	movlw	high _I2cWriteDataEvt
 33699  005AD8  6E1A               	movwf	i1GenerateEvt@Event+1,c
 33700  005ADA  EC3A  F030         	call	i1_GenerateEvt	;wreg free
 33701                           
 33702                           ;i2c_slv.c: 267: TxSts = 1u;
 33703  005ADE  0E01               	movlw	1
 33704  005AE0  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33705                           
 33706                           ;i2c_slv.c: 268: }
 33707  005AE2  0012               	return	
 33708  005AE4                     i1l1397:
 33709                           
 33710                           ;i2c_slv.c: 269: else
 33711                           ;i2c_slv.c: 270: {
 33712                           ;i2c_slv.c: 272: TxSts = 0u;
 33713  005AE4  0E00               	movlw	0
 33714  005AE6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33715  005AE8  0012               	return	
 33716  005AEA                     __end_ofi1_I2cSlv_SendI2cMsg:
 33717                           	opt stack 0
 33718                           tosu	equ	0xFFF
 33719                           tosh	equ	0xFFE
 33720                           tosl	equ	0xFFD
 33721                           pclatu	equ	0xFFB
 33722                           pclath	equ	0xFFA
 33723                           tblptru	equ	0xFF8
 33724                           tblptrh	equ	0xFF7
 33725                           tblptrl	equ	0xFF6
 33726                           tablat	equ	0xFF5
 33727                           prodh	equ	0xFF4
 33728                           prodl	equ	0xFF3
 33729                           intcon	equ	0xFF2
 33730                           intcon2	equ	0xFF1
 33731                           intcon3	equ	0xFF0
 33732                           indf0	equ	0xFEF
 33733                           postinc0	equ	0xFEE
 33734                           plusw0	equ	0xFEB
 33735                           fsr0h	equ	0xFEA
 33736                           fsr0l	equ	0xFE9
 33737                           wreg	equ	0xFE8
 33738                           indf1	equ	0xFE7
 33739                           postinc1	equ	0xFE6
 33740                           postdec1	equ	0xFE5
 33741                           plusw1	equ	0xFE3
 33742                           fsr1h	equ	0xFE2
 33743                           fsr1l	equ	0xFE1
 33744                           bsr	equ	0xFE0
 33745                           indf2	equ	0xFDF
 33746                           postinc2	equ	0xFDE
 33747                           postdec2	equ	0xFDD
 33748                           plusw2	equ	0xFDB
 33749                           fsr2h	equ	0xFDA
 33750                           fsr2l	equ	0xFD9
 33751                           status	equ	0xFD8
 33752                           
 33753 ;; *************** function i1_GenerateEvt *****************
 33754 ;; Defined at:
 33755 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33756 ;; Parameters:    Size  Location     Type
 33757 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 33758 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33759 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33760 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33761 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33762 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33763 ;; Auto vars:     Size  Location     Type
 33764 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 33765 ;; Return value:  Size  Location     Type
 33766 ;;                  1    wreg      enum E7699
 33767 ;; Registers used:
 33768 ;;		wreg, fsr2l, fsr2h, status,2
 33769 ;; Tracked objects:
 33770 ;;		On entry : 0/0
 33771 ;;		On exit  : 0/0
 33772 ;;		Unchanged: 0/0
 33773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33777 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33778 ;;Total ram usage:        3 bytes
 33779 ;; Hardware stack levels used:    1
 33780 ;; Hardware stack levels required when called:    4
 33781 ;; This function calls:
 33782 ;;		Nothing
 33783 ;; This function is called by:
 33784 ;;		i1_I2cSlv_SendI2cMsg
 33785 ;; This function uses a non-reentrant model
 33786 ;;
 33787                           
 33788                           	psect	text165
 33789  006074                     __ptext165:
 33790                           	opt stack 0
 33791  006074                     i1_GenerateEvt:
 33792                           	opt stack 8
 33793                           
 33794                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33795                           
 33796                           ;incstack = 0
 33797  006074  0E00               	movlw	0
 33798  006076  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33799                           
 33800                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33801  006078  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 33802  00607C  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 33803  006080  0E02               	movlw	2
 33804  006082  6EDF               	movwf	indf2,c
 33805                           
 33806                           ;os_ser.c: 83: EventStatus = EventSent;
 33807  006084  0E02               	movlw	2
 33808  006086  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33809  006088  0012               	return	
 33810  00608A                     __end_ofi1_GenerateEvt:
 33811                           	opt stack 0
 33812                           tosu	equ	0xFFF
 33813                           tosh	equ	0xFFE
 33814                           tosl	equ	0xFFD
 33815                           pclatu	equ	0xFFB
 33816                           pclath	equ	0xFFA
 33817                           tblptru	equ	0xFF8
 33818                           tblptrh	equ	0xFF7
 33819                           tblptrl	equ	0xFF6
 33820                           tablat	equ	0xFF5
 33821                           prodh	equ	0xFF4
 33822                           prodl	equ	0xFF3
 33823                           intcon	equ	0xFF2
 33824                           intcon2	equ	0xFF1
 33825                           intcon3	equ	0xFF0
 33826                           indf0	equ	0xFEF
 33827                           postinc0	equ	0xFEE
 33828                           plusw0	equ	0xFEB
 33829                           fsr0h	equ	0xFEA
 33830                           fsr0l	equ	0xFE9
 33831                           wreg	equ	0xFE8
 33832                           indf1	equ	0xFE7
 33833                           postinc1	equ	0xFE6
 33834                           postdec1	equ	0xFE5
 33835                           plusw1	equ	0xFE3
 33836                           fsr1h	equ	0xFE2
 33837                           fsr1l	equ	0xFE1
 33838                           bsr	equ	0xFE0
 33839                           indf2	equ	0xFDF
 33840                           postinc2	equ	0xFDE
 33841                           postdec2	equ	0xFDD
 33842                           plusw2	equ	0xFDB
 33843                           fsr2h	equ	0xFDA
 33844                           fsr2l	equ	0xFD9
 33845                           status	equ	0xFD8
 33846                           
 33847 ;; *************** function _HighPriorityIsr *****************
 33848 ;; Defined at:
 33849 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33850 ;; Parameters:    Size  Location     Type
 33851 ;;		None
 33852 ;; Auto vars:     Size  Location     Type
 33853 ;;		None
 33854 ;; Return value:  Size  Location     Type
 33855 ;;                  1    wreg      void 
 33856 ;; Registers used:
 33857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33858 ;; Tracked objects:
 33859 ;;		On entry : 0/0
 33860 ;;		On exit  : 0/0
 33861 ;;		Unchanged: 0/0
 33862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33865 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33866 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33867 ;;Total ram usage:       18 bytes
 33868 ;; Hardware stack levels used:    1
 33869 ;; Hardware stack levels required when called:    3
 33870 ;; This function calls:
 33871 ;;		_Mcu_Int0Isr
 33872 ;;		_Mcu_Int1Isr
 33873 ;;		_Rtcc_RtcIsr
 33874 ;;		_Uart_Uart1RxIsr
 33875 ;; This function is called by:
 33876 ;;		Interrupt level 2
 33877 ;; This function uses a non-reentrant model
 33878 ;;
 33879                           
 33880                           	psect	intcode
 33881  000008                     __pintcode:
 33882                           	opt stack 0
 33883  000008                     _HighPriorityIsr:
 33884                           	opt stack 8
 33885                           
 33886                           ;incstack = 0
 33887  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33888  00000A  EF08  F021         	goto	int_func
 33889                           tosu	equ	0xFFF
 33890                           tosh	equ	0xFFE
 33891                           tosl	equ	0xFFD
 33892                           pclatu	equ	0xFFB
 33893                           pclath	equ	0xFFA
 33894                           tblptru	equ	0xFF8
 33895                           tblptrh	equ	0xFF7
 33896                           tblptrl	equ	0xFF6
 33897                           tablat	equ	0xFF5
 33898                           prodh	equ	0xFF4
 33899                           prodl	equ	0xFF3
 33900                           intcon	equ	0xFF2
 33901                           intcon2	equ	0xFF1
 33902                           intcon3	equ	0xFF0
 33903                           indf0	equ	0xFEF
 33904                           postinc0	equ	0xFEE
 33905                           plusw0	equ	0xFEB
 33906                           fsr0h	equ	0xFEA
 33907                           fsr0l	equ	0xFE9
 33908                           wreg	equ	0xFE8
 33909                           indf1	equ	0xFE7
 33910                           postinc1	equ	0xFE6
 33911                           postdec1	equ	0xFE5
 33912                           plusw1	equ	0xFE3
 33913                           fsr1h	equ	0xFE2
 33914                           fsr1l	equ	0xFE1
 33915                           bsr	equ	0xFE0
 33916                           indf2	equ	0xFDF
 33917                           postinc2	equ	0xFDE
 33918                           postdec2	equ	0xFDD
 33919                           plusw2	equ	0xFDB
 33920                           fsr2h	equ	0xFDA
 33921                           fsr2l	equ	0xFD9
 33922                           status	equ	0xFD8
 33923                           
 33924                           	psect	intcode_body
 33925  004210                     __pintcode_body:
 33926                           	opt stack 8
 33927  004210                     int_func:
 33928                           	opt stack 8
 33929  004210  CFFA F007          	movff	pclath,??_HighPriorityIsr
 33930  004214  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 33931  004218  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 33932  00421C  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 33933  004220  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 33934  004224  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 33935  004228  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 33936  00422C  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 33937  004230  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 33938  004234  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 33939  004238  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 33940  00423C  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 33941  004240  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 33942  004244  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 33943  004248  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 33944  00424C  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 33945  004250  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 33946  004254  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 33947                           
 33948                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 33949  004258  B2F2               	btfsc	intcon,1,c	;volatile
 33950                           
 33951                           ;irq.c: 158: {
 33952                           ;irq.c: 160: Mcu_Int0Isr();
 33953  00425A  ECD7  F030         	call	_Mcu_Int0Isr	;wreg free
 33954                           
 33955                           ;irq.c: 161: }
 33956                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 33957  00425E  B0F0               	btfsc	intcon3,0,c	;volatile
 33958                           
 33959                           ;irq.c: 167: {
 33960                           ;irq.c: 169: Mcu_Int1Isr();
 33961  004260  ECD5  F030         	call	_Mcu_Int1Isr	;wreg free
 33962                           
 33963                           ;irq.c: 170: }
 33964                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 33965  004264  B0A4               	btfsc	4004,0,c	;volatile
 33966                           
 33967                           ;irq.c: 203: {
 33968                           ;irq.c: 205: Rtcc_RtcIsr();
 33969  004266  ECD3  F030         	call	_Rtcc_RtcIsr	;wreg free
 33970                           
 33971                           ;irq.c: 206: }
 33972                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 33973  00426A  BA9E               	btfsc	3998,5,c	;volatile
 33974                           
 33975                           ;irq.c: 212: {
 33976                           ;irq.c: 214: Uart_Uart1RxIsr();
 33977  00426C  EC8C  F030         	call	_Uart_Uart1RxIsr	;wreg free
 33978  004270  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 33979  004274  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 33980  004278  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 33981  00427C  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 33982  004280  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 33983  004284  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 33984  004288  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 33985  00428C  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 33986  004290  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 33987  004294  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 33988  004298  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 33989  00429C  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 33990  0042A0  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 33991  0042A4  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 33992  0042A8  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 33993  0042AC  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 33994  0042B0  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 33995  0042B4  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 33996  0042B8  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33997  0042BA  0011               	retfie		f
 33998  0042BC                     __end_of_HighPriorityIsr:
 33999                           	opt stack 0
 34000                           tosu	equ	0xFFF
 34001                           tosh	equ	0xFFE
 34002                           tosl	equ	0xFFD
 34003                           pclatu	equ	0xFFB
 34004                           pclath	equ	0xFFA
 34005                           tblptru	equ	0xFF8
 34006                           tblptrh	equ	0xFF7
 34007                           tblptrl	equ	0xFF6
 34008                           tablat	equ	0xFF5
 34009                           prodh	equ	0xFF4
 34010                           prodl	equ	0xFF3
 34011                           intcon	equ	0xFF2
 34012                           intcon2	equ	0xFF1
 34013                           intcon3	equ	0xFF0
 34014                           indf0	equ	0xFEF
 34015                           postinc0	equ	0xFEE
 34016                           plusw0	equ	0xFEB
 34017                           fsr0h	equ	0xFEA
 34018                           fsr0l	equ	0xFE9
 34019                           wreg	equ	0xFE8
 34020                           indf1	equ	0xFE7
 34021                           postinc1	equ	0xFE6
 34022                           postdec1	equ	0xFE5
 34023                           plusw1	equ	0xFE3
 34024                           fsr1h	equ	0xFE2
 34025                           fsr1l	equ	0xFE1
 34026                           bsr	equ	0xFE0
 34027                           indf2	equ	0xFDF
 34028                           postinc2	equ	0xFDE
 34029                           postdec2	equ	0xFDD
 34030                           plusw2	equ	0xFDB
 34031                           fsr2h	equ	0xFDA
 34032                           fsr2l	equ	0xFD9
 34033                           status	equ	0xFD8
 34034                           
 34035 ;; *************** function _Uart_Uart1RxIsr *****************
 34036 ;; Defined at:
 34037 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34038 ;; Parameters:    Size  Location     Type
 34039 ;;		None
 34040 ;; Auto vars:     Size  Location     Type
 34041 ;;		None
 34042 ;; Return value:  Size  Location     Type
 34043 ;;                  1    wreg      void 
 34044 ;; Registers used:
 34045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34046 ;; Tracked objects:
 34047 ;;		On entry : 0/0
 34048 ;;		On exit  : 0/0
 34049 ;;		Unchanged: 0/0
 34050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34055 ;;Total ram usage:        0 bytes
 34056 ;; Hardware stack levels used:    1
 34057 ;; Hardware stack levels required when called:    2
 34058 ;; This function calls:
 34059 ;;		_Uart_MdmGsmGprsReadService
 34060 ;; This function is called by:
 34061 ;;		_HighPriorityIsr
 34062 ;; This function uses a non-reentrant model
 34063 ;;
 34064                           
 34065                           	psect	text167
 34066  006118                     __ptext167:
 34067                           	opt stack 0
 34068  006118                     _Uart_Uart1RxIsr:
 34069                           	opt stack 8
 34070                           
 34071                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34072                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34073                           
 34074                           ;incstack = 0
 34075  006118  CFAF F1F2          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34076                           
 34077                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34078  00611C  C1F2  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34079  006120  0E01               	movlw	1
 34080  006122  EC14  F01C         	call	_Uart_MdmGsmGprsReadService
 34081  006126  0012               	return		;funcret
 34082  006128                     __end_of_Uart_Uart1RxIsr:
 34083                           	opt stack 0
 34084                           tosu	equ	0xFFF
 34085                           tosh	equ	0xFFE
 34086                           tosl	equ	0xFFD
 34087                           pclatu	equ	0xFFB
 34088                           pclath	equ	0xFFA
 34089                           tblptru	equ	0xFF8
 34090                           tblptrh	equ	0xFF7
 34091                           tblptrl	equ	0xFF6
 34092                           tablat	equ	0xFF5
 34093                           prodh	equ	0xFF4
 34094                           prodl	equ	0xFF3
 34095                           intcon	equ	0xFF2
 34096                           intcon2	equ	0xFF1
 34097                           intcon3	equ	0xFF0
 34098                           indf0	equ	0xFEF
 34099                           postinc0	equ	0xFEE
 34100                           plusw0	equ	0xFEB
 34101                           fsr0h	equ	0xFEA
 34102                           fsr0l	equ	0xFE9
 34103                           wreg	equ	0xFE8
 34104                           indf1	equ	0xFE7
 34105                           postinc1	equ	0xFE6
 34106                           postdec1	equ	0xFE5
 34107                           plusw1	equ	0xFE3
 34108                           fsr1h	equ	0xFE2
 34109                           fsr1l	equ	0xFE1
 34110                           bsr	equ	0xFE0
 34111                           indf2	equ	0xFDF
 34112                           postinc2	equ	0xFDE
 34113                           postdec2	equ	0xFDD
 34114                           plusw2	equ	0xFDB
 34115                           fsr2h	equ	0xFDA
 34116                           fsr2l	equ	0xFD9
 34117                           status	equ	0xFD8
 34118                           
 34119 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34120 ;; Defined at:
 34121 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34122 ;; Parameters:    Size  Location     Type
 34123 ;;  Module          1    wreg     unsigned char 
 34124 ;;  UartData        1    3[COMRAM] unsigned char 
 34125 ;; Auto vars:     Size  Location     Type
 34126 ;;  Module          1    0[COMRAM] unsigned char 
 34127 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34128 ;; Return value:  Size  Location     Type
 34129 ;;                  1    wreg      void 
 34130 ;; Registers used:
 34131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34132 ;; Tracked objects:
 34133 ;;		On entry : 0/0
 34134 ;;		On exit  : 0/0
 34135 ;;		Unchanged: 0/0
 34136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34140 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34141 ;;Total ram usage:        3 bytes
 34142 ;; Hardware stack levels used:    1
 34143 ;; Hardware stack levels required when called:    1
 34144 ;; This function calls:
 34145 ;;		i2_GenerateEvt
 34146 ;; This function is called by:
 34147 ;;		_Uart_Uart1RxIsr
 34148 ;; This function uses a non-reentrant model
 34149 ;;
 34150                           
 34151                           	psect	text168
 34152  003828                     __ptext168:
 34153                           	opt stack 0
 34154  003828                     _Uart_MdmGsmGprsReadService:
 34155                           	opt stack 8
 34156                           
 34157                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34158                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34159                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34160                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34161                           
 34162                           ;incstack = 0
 34163  003828  0E00               	movlw	0
 34164  00382A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34165  00382C  0E00               	movlw	0
 34166  00382E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34167                           
 34168                           ;uart_drv.c: 383: switch (RxState)
 34169  003830  D05A               	goto	i2l680
 34170  003832                     
 34171                           ;uart_drv.c: 387: if (UartData == '\r')
 34172  003832  0E0D               	movlw	13
 34173  003834  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34174  003836  A4D8               	btfss	status,2,c
 34175  003838  D004               	goto	i2l682
 34176                           
 34177                           ;uart_drv.c: 388: {
 34178                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34179  00383A  0E01               	movlw	1
 34180  00383C  0101               	movlb	1	; () banked
 34181  00383E  6FF3               	movwf	Uart_MdmGsmGprsReadService@RxState& (0+255),b
 34182                           
 34183                           ;uart_drv.c: 391: }
 34184  003840  0012               	return	
 34185  003842                     i2l682:
 34186                           
 34187                           ;uart_drv.c: 392: else
 34188                           ;uart_drv.c: 393: {
 34189                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34190                           
 34191                           ; BSR set to: 1
 34192  003842  0E90               	movlw	144
 34193  003844  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34194  003846  0E01               	movlw	1
 34195  003848  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34196  00384A  B0D8               	btfsc	status,0,c
 34197  00384C  0012               	return	
 34198                           
 34199                           ;uart_drv.c: 395: {
 34200                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34201  00384E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34202  003850  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34203  003852  6ED9               	movwf	fsr2l,c
 34204  003854  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34205  003856  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34206  003858  6EDA               	movwf	fsr2h,c
 34207  00385A  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34208                           
 34209                           ;uart_drv.c: 399: RxCounter++;
 34210  00385E  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34211  003860  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34212                           
 34213                           ;uart_drv.c: 400: }
 34214                           ;uart_drv.c: 401: }
 34215                           ;uart_drv.c: 402: break;
 34216  003862  0012               	return	
 34217  003864                     
 34218                           ;uart_drv.c: 406: if (UartData == '\n')
 34219  003864  0E0A               	movlw	10
 34220  003866  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34221  003868  A4D8               	btfss	status,2,c
 34222  00386A  D035               	goto	i2l688
 34223                           
 34224                           ;uart_drv.c: 407: {
 34225                           ;uart_drv.c: 409: if (RxCounter > 0)
 34226  00386C  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34227  00386E  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34228  003870  B4D8               	btfsc	status,2,c
 34229  003872  D031               	goto	i2l688
 34230                           
 34231                           ;uart_drv.c: 410: {
 34232                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34233  003874  0E00               	movlw	0
 34234  003876  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34235  003878  0E00               	movlw	0
 34236  00387A  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34237  00387C  D010               	goto	i2l689
 34238  00387E                     
 34239                           ;uart_drv.c: 413: {
 34240                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34241  00387E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34242  003880  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34243  003882  6ED9               	movwf	fsr2l,c
 34244  003884  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34245  003886  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34246  003888  6EDA               	movwf	fsr2h,c
 34247  00388A  0E58               	movlw	low _RxBuffer
 34248  00388C  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34249  00388E  6EE1               	movwf	fsr1l,c
 34250  003890  0E0C               	movlw	high _RxBuffer
 34251  003892  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34252  003894  6EE2               	movwf	fsr1h,c
 34253  003896  CFDF FFE7          	movff	indf2,indf1
 34254  00389A  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34255  00389C  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34256  00389E                     i2l689:
 34257  00389E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34258  0038A0  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34259  0038A2  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34260  0038A4  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34261  0038A6  A0D8               	btfss	status,0,c
 34262  0038A8  D7EA               	goto	i2l690
 34263                           
 34264                           ;uart_drv.c: 415: }
 34265                           ;uart_drv.c: 417: RxLen = RxCounter;
 34266  0038AA  C023  F0CA         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34267  0038AE  C024  F0CB         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34268                           
 34269                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34270  0038B2  0E3C               	movlw	low _NewStringReceived
 34271  0038B4  6E01               	movwf	i2GenerateEvt@Event,c
 34272  0038B6  0E00               	movlw	high _NewStringReceived
 34273  0038B8  6E02               	movwf	i2GenerateEvt@Event+1,c
 34274  0038BA  EC45  F030         	call	i2_GenerateEvt	;wreg free
 34275                           
 34276                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34277  0038BE  0E3B               	movlw	low _NewMdmEvtParserRequest
 34278  0038C0  6E01               	movwf	i2GenerateEvt@Event,c
 34279  0038C2  0E00               	movlw	high _NewMdmEvtParserRequest
 34280  0038C4  6E02               	movwf	i2GenerateEvt@Event+1,c
 34281  0038C6  EC45  F030         	call	i2_GenerateEvt	;wreg free
 34282                           
 34283                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34284  0038CA  0E3A               	movlw	low _NewStringMdmTerminal
 34285  0038CC  6E01               	movwf	i2GenerateEvt@Event,c
 34286  0038CE  0E00               	movlw	high _NewStringMdmTerminal
 34287  0038D0  6E02               	movwf	i2GenerateEvt@Event+1,c
 34288  0038D2  EC45  F030         	call	i2_GenerateEvt	;wreg free
 34289  0038D6                     i2l688:
 34290                           
 34291                           ;uart_drv.c: 427: }
 34292                           ;uart_drv.c: 429: RxState = ReadData;
 34293                           
 34294                           ;uart_drv.c: 424: else
 34295                           ;uart_drv.c: 425: {
 34296                           
 34297                           ;uart_drv.c: 422: }
 34298                           ;uart_drv.c: 423: }
 34299  0038D6  0E00               	movlw	0
 34300  0038D8  0101               	movlb	1	; () banked
 34301  0038DA  6FF3               	movwf	Uart_MdmGsmGprsReadService@RxState& (0+255),b
 34302                           
 34303                           ;uart_drv.c: 431: RxCounter = 0;
 34304  0038DC  0E00               	movlw	0
 34305  0038DE  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34306  0038E0  0E00               	movlw	0
 34307  0038E2  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34308                           
 34309                           ; BSR set to: 1
 34310                           ;uart_drv.c: 436: }
 34311                           
 34312                           ; BSR set to: 1
 34313                           ;uart_drv.c: 435: break;
 34314                           
 34315                           ;uart_drv.c: 434: default:
 34316                           
 34317                           ;uart_drv.c: 432: break;
 34318  0038E4  0012               	return	
 34319  0038E6                     i2l680:
 34320                           
 34321                           ; BSR set to: 1
 34322  0038E6  0101               	movlb	1	; () banked
 34323  0038E8  51F3               	movf	Uart_MdmGsmGprsReadService@RxState& (0+255),w,b
 34324                           
 34325                           ; Switch size 1, requested type "space"
 34326                           ; Number of cases is 2, Range of values is 0 to 1
 34327                           ; switch strategies available:
 34328                           ; Name         Instructions Cycles
 34329                           ; simple_byte            7     4 (average)
 34330                           ;	Chosen strategy is simple_byte
 34331  0038EA  0A00               	xorlw	0	; case 0
 34332  0038EC  B4D8               	btfsc	status,2,c
 34333  0038EE  D7A1               	goto	i2l681
 34334  0038F0  0A01               	xorlw	1	; case 1
 34335  0038F2  A4D8               	btfss	status,2,c
 34336  0038F4  0012               	return	
 34337  0038F6  D7B6               	goto	i2l686
 34338  0038F8                     __end_of_Uart_MdmGsmGprsReadService:
 34339                           	opt stack 0
 34340                           tosu	equ	0xFFF
 34341                           tosh	equ	0xFFE
 34342                           tosl	equ	0xFFD
 34343                           pclatu	equ	0xFFB
 34344                           pclath	equ	0xFFA
 34345                           tblptru	equ	0xFF8
 34346                           tblptrh	equ	0xFF7
 34347                           tblptrl	equ	0xFF6
 34348                           tablat	equ	0xFF5
 34349                           prodh	equ	0xFF4
 34350                           prodl	equ	0xFF3
 34351                           intcon	equ	0xFF2
 34352                           intcon2	equ	0xFF1
 34353                           intcon3	equ	0xFF0
 34354                           indf0	equ	0xFEF
 34355                           postinc0	equ	0xFEE
 34356                           plusw0	equ	0xFEB
 34357                           fsr0h	equ	0xFEA
 34358                           fsr0l	equ	0xFE9
 34359                           wreg	equ	0xFE8
 34360                           indf1	equ	0xFE7
 34361                           postinc1	equ	0xFE6
 34362                           postdec1	equ	0xFE5
 34363                           plusw1	equ	0xFE3
 34364                           fsr1h	equ	0xFE2
 34365                           fsr1l	equ	0xFE1
 34366                           bsr	equ	0xFE0
 34367                           indf2	equ	0xFDF
 34368                           postinc2	equ	0xFDE
 34369                           postdec2	equ	0xFDD
 34370                           plusw2	equ	0xFDB
 34371                           fsr2h	equ	0xFDA
 34372                           fsr2l	equ	0xFD9
 34373                           status	equ	0xFD8
 34374                           
 34375 ;; *************** function i2_GenerateEvt *****************
 34376 ;; Defined at:
 34377 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34378 ;; Parameters:    Size  Location     Type
 34379 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34380 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34381 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34382 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 34383 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 34384 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34385 ;; Auto vars:     Size  Location     Type
 34386 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34387 ;; Return value:  Size  Location     Type
 34388 ;;                  1    wreg      enum E7699
 34389 ;; Registers used:
 34390 ;;		wreg, fsr2l, fsr2h, status,2
 34391 ;; Tracked objects:
 34392 ;;		On entry : 0/0
 34393 ;;		On exit  : 0/0
 34394 ;;		Unchanged: 0/0
 34395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34400 ;;Total ram usage:        3 bytes
 34401 ;; Hardware stack levels used:    1
 34402 ;; This function calls:
 34403 ;;		Nothing
 34404 ;; This function is called by:
 34405 ;;		_Uart_MdmGsmGprsReadService
 34406 ;; This function uses a non-reentrant model
 34407 ;;
 34408                           
 34409                           	psect	text169
 34410  00608A                     __ptext169:
 34411                           	opt stack 0
 34412  00608A                     i2_GenerateEvt:
 34413                           	opt stack 8
 34414                           
 34415                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34416                           
 34417                           ;incstack = 0
 34418  00608A  0E00               	movlw	0
 34419  00608C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34420                           
 34421                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34422  00608E  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34423  006092  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34424  006096  0E02               	movlw	2
 34425  006098  6EDF               	movwf	indf2,c
 34426                           
 34427                           ;os_ser.c: 83: EventStatus = EventSent;
 34428  00609A  0E02               	movlw	2
 34429  00609C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34430  00609E  0012               	return	
 34431  0060A0                     __end_ofi2_GenerateEvt:
 34432                           	opt stack 0
 34433                           tosu	equ	0xFFF
 34434                           tosh	equ	0xFFE
 34435                           tosl	equ	0xFFD
 34436                           pclatu	equ	0xFFB
 34437                           pclath	equ	0xFFA
 34438                           tblptru	equ	0xFF8
 34439                           tblptrh	equ	0xFF7
 34440                           tblptrl	equ	0xFF6
 34441                           tablat	equ	0xFF5
 34442                           prodh	equ	0xFF4
 34443                           prodl	equ	0xFF3
 34444                           intcon	equ	0xFF2
 34445                           intcon2	equ	0xFF1
 34446                           intcon3	equ	0xFF0
 34447                           indf0	equ	0xFEF
 34448                           postinc0	equ	0xFEE
 34449                           plusw0	equ	0xFEB
 34450                           fsr0h	equ	0xFEA
 34451                           fsr0l	equ	0xFE9
 34452                           wreg	equ	0xFE8
 34453                           indf1	equ	0xFE7
 34454                           postinc1	equ	0xFE6
 34455                           postdec1	equ	0xFE5
 34456                           plusw1	equ	0xFE3
 34457                           fsr1h	equ	0xFE2
 34458                           fsr1l	equ	0xFE1
 34459                           bsr	equ	0xFE0
 34460                           indf2	equ	0xFDF
 34461                           postinc2	equ	0xFDE
 34462                           postdec2	equ	0xFDD
 34463                           plusw2	equ	0xFDB
 34464                           fsr2h	equ	0xFDA
 34465                           fsr2l	equ	0xFD9
 34466                           status	equ	0xFD8
 34467                           
 34468 ;; *************** function _Rtcc_RtcIsr *****************
 34469 ;; Defined at:
 34470 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34471 ;; Parameters:    Size  Location     Type
 34472 ;;		None
 34473 ;; Auto vars:     Size  Location     Type
 34474 ;;		None
 34475 ;; Return value:  Size  Location     Type
 34476 ;;                  1    wreg      void 
 34477 ;; Registers used:
 34478 ;;		wreg, status,2, status,0
 34479 ;; Tracked objects:
 34480 ;;		On entry : 0/0
 34481 ;;		On exit  : 0/0
 34482 ;;		Unchanged: 0/0
 34483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34488 ;;Total ram usage:        0 bytes
 34489 ;; Hardware stack levels used:    1
 34490 ;; This function calls:
 34491 ;;		Nothing
 34492 ;; This function is called by:
 34493 ;;		_HighPriorityIsr
 34494 ;; This function uses a non-reentrant model
 34495 ;;
 34496                           
 34497                           	psect	text170
 34498  0061A6                     __ptext170:
 34499                           	opt stack 0
 34500  0061A6                     _Rtcc_RtcIsr:
 34501                           	opt stack 10
 34502                           
 34503                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34504                           
 34505                           ;incstack = 0
 34506  0061A6  90A4               	bcf	4004,0,c	;volatile
 34507  0061A8  0012               	return	
 34508  0061AA                     __end_of_Rtcc_RtcIsr:
 34509                           	opt stack 0
 34510                           tosu	equ	0xFFF
 34511                           tosh	equ	0xFFE
 34512                           tosl	equ	0xFFD
 34513                           pclatu	equ	0xFFB
 34514                           pclath	equ	0xFFA
 34515                           tblptru	equ	0xFF8
 34516                           tblptrh	equ	0xFF7
 34517                           tblptrl	equ	0xFF6
 34518                           tablat	equ	0xFF5
 34519                           prodh	equ	0xFF4
 34520                           prodl	equ	0xFF3
 34521                           intcon	equ	0xFF2
 34522                           intcon2	equ	0xFF1
 34523                           intcon3	equ	0xFF0
 34524                           indf0	equ	0xFEF
 34525                           postinc0	equ	0xFEE
 34526                           plusw0	equ	0xFEB
 34527                           fsr0h	equ	0xFEA
 34528                           fsr0l	equ	0xFE9
 34529                           wreg	equ	0xFE8
 34530                           indf1	equ	0xFE7
 34531                           postinc1	equ	0xFE6
 34532                           postdec1	equ	0xFE5
 34533                           plusw1	equ	0xFE3
 34534                           fsr1h	equ	0xFE2
 34535                           fsr1l	equ	0xFE1
 34536                           bsr	equ	0xFE0
 34537                           indf2	equ	0xFDF
 34538                           postinc2	equ	0xFDE
 34539                           postdec2	equ	0xFDD
 34540                           plusw2	equ	0xFDB
 34541                           fsr2h	equ	0xFDA
 34542                           fsr2l	equ	0xFD9
 34543                           status	equ	0xFD8
 34544                           
 34545 ;; *************** function _Mcu_Int1Isr *****************
 34546 ;; Defined at:
 34547 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34548 ;; Parameters:    Size  Location     Type
 34549 ;;		None
 34550 ;; Auto vars:     Size  Location     Type
 34551 ;;		None
 34552 ;; Return value:  Size  Location     Type
 34553 ;;                  1    wreg      void 
 34554 ;; Registers used:
 34555 ;;		wreg, status,2, status,0
 34556 ;; Tracked objects:
 34557 ;;		On entry : 0/0
 34558 ;;		On exit  : 0/0
 34559 ;;		Unchanged: 0/0
 34560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34565 ;;Total ram usage:        0 bytes
 34566 ;; Hardware stack levels used:    1
 34567 ;; This function calls:
 34568 ;;		Nothing
 34569 ;; This function is called by:
 34570 ;;		_HighPriorityIsr
 34571 ;; This function uses a non-reentrant model
 34572 ;;
 34573                           
 34574                           	psect	text171
 34575  0061AA                     __ptext171:
 34576                           	opt stack 0
 34577  0061AA                     _Mcu_Int1Isr:
 34578                           	opt stack 10
 34579                           
 34580                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34581                           
 34582                           ;incstack = 0
 34583  0061AA  90F0               	bcf	intcon3,0,c	;volatile
 34584  0061AC  0012               	return	
 34585  0061AE                     __end_of_Mcu_Int1Isr:
 34586                           	opt stack 0
 34587                           tosu	equ	0xFFF
 34588                           tosh	equ	0xFFE
 34589                           tosl	equ	0xFFD
 34590                           pclatu	equ	0xFFB
 34591                           pclath	equ	0xFFA
 34592                           tblptru	equ	0xFF8
 34593                           tblptrh	equ	0xFF7
 34594                           tblptrl	equ	0xFF6
 34595                           tablat	equ	0xFF5
 34596                           prodh	equ	0xFF4
 34597                           prodl	equ	0xFF3
 34598                           intcon	equ	0xFF2
 34599                           intcon2	equ	0xFF1
 34600                           intcon3	equ	0xFF0
 34601                           indf0	equ	0xFEF
 34602                           postinc0	equ	0xFEE
 34603                           plusw0	equ	0xFEB
 34604                           fsr0h	equ	0xFEA
 34605                           fsr0l	equ	0xFE9
 34606                           wreg	equ	0xFE8
 34607                           indf1	equ	0xFE7
 34608                           postinc1	equ	0xFE6
 34609                           postdec1	equ	0xFE5
 34610                           plusw1	equ	0xFE3
 34611                           fsr1h	equ	0xFE2
 34612                           fsr1l	equ	0xFE1
 34613                           bsr	equ	0xFE0
 34614                           indf2	equ	0xFDF
 34615                           postinc2	equ	0xFDE
 34616                           postdec2	equ	0xFDD
 34617                           plusw2	equ	0xFDB
 34618                           fsr2h	equ	0xFDA
 34619                           fsr2l	equ	0xFD9
 34620                           status	equ	0xFD8
 34621                           
 34622 ;; *************** function _Mcu_Int0Isr *****************
 34623 ;; Defined at:
 34624 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34625 ;; Parameters:    Size  Location     Type
 34626 ;;		None
 34627 ;; Auto vars:     Size  Location     Type
 34628 ;;		None
 34629 ;; Return value:  Size  Location     Type
 34630 ;;                  1    wreg      void 
 34631 ;; Registers used:
 34632 ;;		wreg, status,2, status,0
 34633 ;; Tracked objects:
 34634 ;;		On entry : 0/0
 34635 ;;		On exit  : 0/0
 34636 ;;		Unchanged: 0/0
 34637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34642 ;;Total ram usage:        0 bytes
 34643 ;; Hardware stack levels used:    1
 34644 ;; This function calls:
 34645 ;;		Nothing
 34646 ;; This function is called by:
 34647 ;;		_HighPriorityIsr
 34648 ;; This function uses a non-reentrant model
 34649 ;;
 34650                           
 34651                           	psect	text172
 34652  0061AE                     __ptext172:
 34653                           	opt stack 0
 34654  0061AE                     _Mcu_Int0Isr:
 34655                           	opt stack 10
 34656                           
 34657                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34658                           
 34659                           ;incstack = 0
 34660  0061AE  92F2               	bcf	intcon,1,c	;volatile
 34661  0061B0  0012               	return	
 34662  0061B2                     __end_of_Mcu_Int0Isr:
 34663                           	opt stack 0
 34664                           tosu	equ	0xFFF
 34665                           tosh	equ	0xFFE
 34666                           tosl	equ	0xFFD
 34667                           pclatu	equ	0xFFB
 34668                           pclath	equ	0xFFA
 34669                           tblptru	equ	0xFF8
 34670                           tblptrh	equ	0xFF7
 34671                           tblptrl	equ	0xFF6
 34672                           tablat	equ	0xFF5
 34673                           prodh	equ	0xFF4
 34674                           prodl	equ	0xFF3
 34675                           intcon	equ	0xFF2
 34676                           intcon2	equ	0xFF1
 34677                           intcon3	equ	0xFF0
 34678                           indf0	equ	0xFEF
 34679                           postinc0	equ	0xFEE
 34680                           plusw0	equ	0xFEB
 34681                           fsr0h	equ	0xFEA
 34682                           fsr0l	equ	0xFE9
 34683                           wreg	equ	0xFE8
 34684                           indf1	equ	0xFE7
 34685                           postinc1	equ	0xFE6
 34686                           postdec1	equ	0xFE5
 34687                           plusw1	equ	0xFE3
 34688                           fsr1h	equ	0xFE2
 34689                           fsr1l	equ	0xFE1
 34690                           bsr	equ	0xFE0
 34691                           indf2	equ	0xFDF
 34692                           postinc2	equ	0xFDE
 34693                           postdec2	equ	0xFDD
 34694                           plusw2	equ	0xFDB
 34695                           fsr2h	equ	0xFDA
 34696                           fsr2l	equ	0xFD9
 34697                           status	equ	0xFD8
 34698                           tosu	equ	0xFFF
 34699                           tosh	equ	0xFFE
 34700                           tosl	equ	0xFFD
 34701                           pclatu	equ	0xFFB
 34702                           pclath	equ	0xFFA
 34703                           tblptru	equ	0xFF8
 34704                           tblptrh	equ	0xFF7
 34705                           tblptrl	equ	0xFF6
 34706                           tablat	equ	0xFF5
 34707                           prodh	equ	0xFF4
 34708                           prodl	equ	0xFF3
 34709                           intcon	equ	0xFF2
 34710                           intcon2	equ	0xFF1
 34711                           intcon3	equ	0xFF0
 34712                           indf0	equ	0xFEF
 34713                           postinc0	equ	0xFEE
 34714                           plusw0	equ	0xFEB
 34715                           fsr0h	equ	0xFEA
 34716                           fsr0l	equ	0xFE9
 34717                           wreg	equ	0xFE8
 34718                           indf1	equ	0xFE7
 34719                           postinc1	equ	0xFE6
 34720                           postdec1	equ	0xFE5
 34721                           plusw1	equ	0xFE3
 34722                           fsr1h	equ	0xFE2
 34723                           fsr1l	equ	0xFE1
 34724                           bsr	equ	0xFE0
 34725                           indf2	equ	0xFDF
 34726                           postinc2	equ	0xFDE
 34727                           postdec2	equ	0xFDD
 34728                           plusw2	equ	0xFDB
 34729                           fsr2h	equ	0xFDA
 34730                           fsr2l	equ	0xFD9
 34731                           status	equ	0xFD8
 34732                           
 34733                           	psect	text173
 34734  000000                     __ptext173:
 34735                           	opt stack 0
 34736                           tosu	equ	0xFFF
 34737                           tosh	equ	0xFFE
 34738                           tosl	equ	0xFFD
 34739                           pclatu	equ	0xFFB
 34740                           pclath	equ	0xFFA
 34741                           tblptru	equ	0xFF8
 34742                           tblptrh	equ	0xFF7
 34743                           tblptrl	equ	0xFF6
 34744                           tablat	equ	0xFF5
 34745                           prodh	equ	0xFF4
 34746                           prodl	equ	0xFF3
 34747                           intcon	equ	0xFF2
 34748                           intcon2	equ	0xFF1
 34749                           intcon3	equ	0xFF0
 34750                           indf0	equ	0xFEF
 34751                           postinc0	equ	0xFEE
 34752                           plusw0	equ	0xFEB
 34753                           fsr0h	equ	0xFEA
 34754                           fsr0l	equ	0xFE9
 34755                           wreg	equ	0xFE8
 34756                           indf1	equ	0xFE7
 34757                           postinc1	equ	0xFE6
 34758                           postdec1	equ	0xFE5
 34759                           plusw1	equ	0xFE3
 34760                           fsr1h	equ	0xFE2
 34761                           fsr1l	equ	0xFE1
 34762                           bsr	equ	0xFE0
 34763                           indf2	equ	0xFDF
 34764                           postinc2	equ	0xFDE
 34765                           postdec2	equ	0xFDD
 34766                           plusw2	equ	0xFDB
 34767                           fsr2h	equ	0xFDA
 34768                           fsr2l	equ	0xFD9
 34769                           status	equ	0xFD8
 34770                           
 34771                           	psect	rparam
 34772  0000                     tosu	equ	0xFFF
 34773                           tosh	equ	0xFFE
 34774                           tosl	equ	0xFFD
 34775                           pclatu	equ	0xFFB
 34776                           pclath	equ	0xFFA
 34777                           tblptru	equ	0xFF8
 34778                           tblptrh	equ	0xFF7
 34779                           tblptrl	equ	0xFF6
 34780                           tablat	equ	0xFF5
 34781                           prodh	equ	0xFF4
 34782                           prodl	equ	0xFF3
 34783                           intcon	equ	0xFF2
 34784                           intcon2	equ	0xFF1
 34785                           intcon3	equ	0xFF0
 34786                           indf0	equ	0xFEF
 34787                           postinc0	equ	0xFEE
 34788                           plusw0	equ	0xFEB
 34789                           fsr0h	equ	0xFEA
 34790                           fsr0l	equ	0xFE9
 34791                           wreg	equ	0xFE8
 34792                           indf1	equ	0xFE7
 34793                           postinc1	equ	0xFE6
 34794                           postdec1	equ	0xFE5
 34795                           plusw1	equ	0xFE3
 34796                           fsr1h	equ	0xFE2
 34797                           fsr1l	equ	0xFE1
 34798                           bsr	equ	0xFE0
 34799                           indf2	equ	0xFDF
 34800                           postinc2	equ	0xFDE
 34801                           postdec2	equ	0xFDD
 34802                           plusw2	equ	0xFDB
 34803                           fsr2h	equ	0xFDA
 34804                           fsr2l	equ	0xFD9
 34805                           status	equ	0xFD8
 34806                           
 34807                           	psect	temp
 34808  000042                     btemp:
 34809                           	opt stack 0
 34810  000042                     	ds	1
 34811  0000                     int$flags	set	btemp
 34812  0000                     wtemp6	set	btemp+1
 34813                           tosu	equ	0xFFF
 34814                           tosh	equ	0xFFE
 34815                           tosl	equ	0xFFD
 34816                           pclatu	equ	0xFFB
 34817                           pclath	equ	0xFFA
 34818                           tblptru	equ	0xFF8
 34819                           tblptrh	equ	0xFF7
 34820                           tblptrl	equ	0xFF6
 34821                           tablat	equ	0xFF5
 34822                           prodh	equ	0xFF4
 34823                           prodl	equ	0xFF3
 34824                           intcon	equ	0xFF2
 34825                           intcon2	equ	0xFF1
 34826                           intcon3	equ	0xFF0
 34827                           indf0	equ	0xFEF
 34828                           postinc0	equ	0xFEE
 34829                           plusw0	equ	0xFEB
 34830                           fsr0h	equ	0xFEA
 34831                           fsr0l	equ	0xFE9
 34832                           wreg	equ	0xFE8
 34833                           indf1	equ	0xFE7
 34834                           postinc1	equ	0xFE6
 34835                           postdec1	equ	0xFE5
 34836                           plusw1	equ	0xFE3
 34837                           fsr1h	equ	0xFE2
 34838                           fsr1l	equ	0xFE1
 34839                           bsr	equ	0xFE0
 34840                           indf2	equ	0xFDF
 34841                           postinc2	equ	0xFDE
 34842                           postdec2	equ	0xFDD
 34843                           plusw2	equ	0xFDB
 34844                           fsr2h	equ	0xFDA
 34845                           fsr2l	equ	0xFD9
 34846                           status	equ	0xFD8


Data Sizes:
    Strings     396
    Constant    567
    Data        185
    BSS         2326
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     88     128
    BANK1           256    201     256
    BANK2           256    200     255
    BANK3           256      0     254
    BANK4           192      0     186
    BANK5           256      0     224
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK7[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@cmpString(BANK1[3]), MyApp_Task@phone(BANK1[14]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8935 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4604$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4604$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4604$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4604$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3057$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3047$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3047$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3023$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3023$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3023$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3023$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2524_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2524_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    Mdm_GetSmsData@MessageHeader	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@smsNumber(BANK1[14]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(COMRAM[1]), SmsTxtReady(COMRAM[1]), GetSmsText(COMRAM[1]), SmsEvent(COMRAM[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(COMRAM[1]), MdmStsReady(BANK1[1]), SmsTxtReady(COMRAM[1]), 
		 -> GetSmsText(COMRAM[1]), SmsEvent(COMRAM[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[14]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  594394
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  589984
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  295085
                                             83 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  294899
                                             83 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   50664
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   46532
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   26819
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26180
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20173
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    7743
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   57663
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   57663
                                             71 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     268
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1166
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     430
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41208
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          88    88      0   49971
                                              0 BANK1     87    87      0
                        _ClearBuffer
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16081
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       5     1      4    6875
                                             39 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   63086
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14845
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    6734
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   13832
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8318
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13686
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   40227
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20150
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20077
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3939
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16270
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      E0      16       87.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FE      12       99.2%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      BA      14       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     982       8        0.0%
DATA                 0      0     CA2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 21:42:19 2022

                  __size_of_StringCompare 0052               Mdm_GetSmsData@MessageHeader 0089  
                __end_of_UartSetConfigLow 5282                                _USB_SD_Ptr FC33  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5F3E  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2410                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 002D                                       l202 21D6  
                                     l203 21DE                                       l205 2226  
                                     l206 224C                                       l208 2254  
                                     l160 1E5C                                       l209 2274  
                                     l161 1D32                                       l162 1E9A  
                                     l170 1DFA                                       l171 1E10  
                                     l163 1D3E                                       l315 4090  
                                     l323 4058                                       l164 1D7E  
                                     l316 3FFC                                       l420 485A  
                                     l500 470A                                       l173 1E14  
                                     l325 4074                                       l421 487A  
                                     l237 5F4A                                       l174 1E1C  
                                     l166 1D8C                                       l318 4008  
                                     l422 4886               __end_of_USBStdGetDscHandler 2CC0  
                                     l510 46DC                                       l502 469C  
                                     l175 1E28                                       l167 1DB4  
                                     l319 4030                                       l423 4892  
                                     l511 46CC                                       l503 468C  
                                     l192 227E                                       l176 1E3E  
                                     l416 48A6                                       l424 489E  
                                     l512 46F0                                       l504 46B2  
                                     l520 5644                                       l193 215E  
                                     l169 1DC6                                       l417 484C  
                                     l441 17EC                                       l513 46D0  
                                     l505 4690                                       l521 5610  
                                     l194 22B6                                       l418 48D4  
                                     l442 15F4                                       l514 46D6  
                                     l506 4696                                       l530 319A  
                                     l195 216A                                       l179 1E4A  
                                     l419 4854                                       l523 562A  
                                     l531 3200                                       l196 21AA  
                                     l700 5862                                       l444 163C  
                                     l532 31C6                                       l445 1684  
                                     l541 5F08                                       l198 21B8  
                                     l446 16CC                                       l199 21CC  
                                     l631 29D6                                       l447 1714  
                                     l448 175C                                       l528 3206  
                                     l633 2A4E                                       l625 2962  
                                     l449 17A4                                       l529 31F2  
                                     l538 5F0C                                       l546 3BB6  
                                     l651 5594                                       l707 59C8  
                                     l627 2986                                       l715 593C  
                                     l539 5F04                                       l547 3BD2  
                                     l660 55B8                                       l652 558E  
                                     l716 5912                                       l709 59E2  
                                     l629 29AE                                       l718 592A  
                                     l639 5F30                                       l832 5CCC  
                                     l844 3C8A                                       l668 0C44  
                                     _BDT 000400                                       l790 5F66  
                                     l855 4BF0                                       l775 2F02  
                                     l864 4948                                       l856 4B96  
                                     l857 4C0A                                       l698 5846  
                                     l858 4BC6                                       l867 495A  
                                     l981 1EC6                                       l983 1EE2  
                                     l984 1F18                                       l985 1F8C  
                                     l978 1FD8                                       l994 1FB2  
                                     l979 1EA0                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                          ?_blinkForSeconds 0093  
                 __end_of_HighPriorityIsr 42BC                            ??_Mdm_MainTask 00A2  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 5B54  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00D3               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 5906                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 1E9E             ??_Tmr_RegisterTmr2IsrCallback 007F  
         InitGprsNetwork@GprsNetInitState 01E5                                      l1100 542C  
                                    l1005 568E                                      l1006 5658  
                                    l1102 5442                               RiSm@Counter 0330  
                                    l1023 3802                                      l1031 37E8  
                                    l1103 5458                                      l1024 3756  
                                    l1009 5672                                      l1121 4D02  
                                    l1113 5552                                      l1210 0E96  
                                    l1050 2F96                                      l1211 0E5E  
                                    l1027 3768                                      l1204 1078  
                                    l1028 37A2                                      l1052 2FCC  
                                    l1221 1010                                      l1213 0F3E  
                                    l1205 0DD0                                      l1029 37C8  
                                    l2101 53BE                                      l1222 1054  
                                    l1214 0F78                                      l1062 2B74  
                                    l1070 2B12                                      l1046 2FFA  
                                    l2102 5388                                      l1207 10B0  
                                    l1215 0FB8                                      l1063 2A6C  
                                    l1047 2F64                                      l1240 0AB6  
                                    l1216 0FBC                                      l1208 0DE8  
                                    l2200 5494                                      l2104 539A  
                                    l1144 5E08                                      l1128 5DE4  
                                    l3001 4B6E                                      l1241 060C  
                                    l1217 1000                                      l1209 0E22  
                                    l2201 54BA                                      l1049 300E  
                                    l2105 53AC                                      l3002 4B7C  
                                    l2050 2698                                      l1250 0856  
                                    l1242 0646                                      l1226 106E  
                                    l1066 2A88                                      l1402 5900  
                                    l2051 258C                                      l1251 0890  
                                    l1243 0680                                      l1067 2AA0  
                                    l1083 1B80                                      l2052 2610  
                                    l2212 5B12                                      l1252 08CA  
                                    l1244 06BA                                      l1092 1B1A  
                                    l1084 19FE                                      l2061 32C6  
                                    l2213 5AFE                                      l1237 0A54  
                                    l1253 090E                                      l1245 073E  
                                    l1093 1B66                                      l2062 320E  
                                    l2206 5054                                      l1270 0A42  
                                    l1262 097E                                      l1246 06F6  
                                    l1238 05F4                                      l2063 32E2  
                                    l2071 43E0                                      l2207 5014  
                                    l1271 0A4A                                      l1263 09AA  
                                    l1087 1A1A                                      l1407 5EF4  
                                    l2048 2682                                      l2064 322C  
                                    l2072 4372                                      l1248 07F2  
                                    l1088 1AD0                                      l2400 0524  
                                    l1600 1BD6                                      l2049 2564  
                                    l2073 4408                                      l1265 09C4  
                                    l1257 092A                                      l1249 082C  
                                    l1089 1AF4                                      l2401 0570  
                                    l1601 1BCC                                      l3050 53F6  
                                    l2066 329C                                      l2074 4382  
                                    l1266 0A32                                      l1258 096E  
                                    l3210 513E                                      l1602 1BCA  
                                    l2170 49E6                                      l1371 3DFC  
                                    l3051 53EE                                      l2075 4394  
                                    l1611 1C54                                      l1099 546A  
                                    l2171 496C                                      l2092 5C60  
                                    l2076 43AE                                      l3060 5814  
                                    l2420 10FA                                      l1276 571E  
                                    l2084 3A80                                      l2093 5C4E  
                                    l3061 580C                                      l3221 5956  
                                    l1701 2D94                                      l1621 1CE4  
                                    l1613 1C68                                      l1605 1BF2  
                                    l2085 39C8                                      l2173 49D2  
                                    l1374 3E04                                      l3054 5416  
                                    l2078 43BC                                      l3206 512E  
                                    l3222 5950                                      l1702 2D7A  
                                    l1710 3342                                      l1614 1C74  
                                    l1606 1C02                                      l1390 52DC  
                                    l1367 3E56                                      l3055 5420  
                                    l2095 5C54                                      l2079 43CA  
                                    l3215 5B9A                                      l3207 5128  
                                    l2415 131E                                      l2431 128E  
                                    l1623 1D08                                      l1615 1C9E  
                                    l1607 1C0A                                      l1279 56EC  
                                    l2087 39D6                                      l1376 3E20  
                                    l1368 3DB8                                      l2096 5C5A  
                                    l3064 582C                                      l3216 5B90  
                                    l2360 01E2                                      l3080 5C04  
                                    l2600 391E                                      l2416 10B8  
                                    l1712 33B6                                      l1800 3500  
                                    l1616 1CAA                                      l1608 1C20  
                                    l1392 5316                                      l2440 5FD6  
                                    l1369 3DDA                                      l1633 3F56  
                                    l3065 5836                                      l3313 5C3E  
                                    l3241 18C8                                      l3081 5BF2  
                                    l2601 3980                                      l3209 5148  
                                    l2433 12F8                                      l2425 110E  
                                    l1721 2BB8                                      l1625 1D26  
                                    l1609 1C2C                                      l1378 3E3C  
                                    l3250 1902                                      l3330 5A32  
                                    l2362 01AE                                      l2610 39A0  
                                    l2418 10DE                                      l1810 137E  
                                    l1722 2C40                                      l1802 3506  
                                    l3074 56D6                                      l1618 1CBE  
                                    l1379 3E48                                      l1635 3F80  
                                    l3323 5E90                                      l2355 05D2  
                                    l2363 019C                                      l2435 1318  
                                    l2427 112E                                      l1811 1384  
                                    l1731 4134                                      l1803 3524  
                                    l3075 56B4                                      l2443 5FD0  
                                    l2524 4470                                      l2356 00E2  
                                    l2604 3924                                      l1652 3ADA  
                                    l1628 5788                                      l1724 2C48  
                                    l1732 40BA                                      l1804 3540  
                                    l1660 45BA                                      l2460 5E42  
              USBConfigureEndpoint@handle 0083                                      l1397 59BA  
                                    l1637 3FDC                                      l3261 602C  
                                    l3253 1914                                      l3237 185C  
                                    l2373 0392                                      l2429 114E  
                                    l1629 5798                                      l1821 14B2  
                                    l1813 13F6                                      l1725 2C98  
                                    l2461 5E34                                      l1389 531C  
                                    l2526 449C                                      l3318 5D4C  
                                    l3254 1980                                      l3334 6014  
                                    l2374 0326                                      l2606 396C  
                                    l1822 14D0                                      l1718 2CA8  
                                    l1670 3046                                      l2199 54BE  
                                    l2527 44AC                                      l2543 4C8A  
                                    l3247 18D8                                      l3239 1874  
                                    l2391 041E                                      l2375 02B4  
                                    l2359 0152                                      l2607 394E  
                                    l1831 15C6                                      l1815 143E  
                                    l1727 2CA0                                      l1719 2BA4  
                                    l1735 414A                                      l1591 2482  
                                    l2463 5E3C                                      l2624 51E4  
                                    l2544 4C52                                      l1912 475A  
                                    l3256 19A6                                      l3248 18E8  
                                    l2376 0250                                      l2368 01D0  
                                    l1664 4654                                      l1824 1532  
                                    l1816 1440                                      l1736 40CC  
                                    l1760 482E                                      l2625 51F8  
                                    l2537 4C7A                                      l1913 4786  
                                    l3257 19E0                                      l3281 3478  
                                    l2393 045E                                      l2385 0402  
                                    l1825 153E                                      l1817 145C  
                                    l1737 40D2                                      l1593 24BE  
                                    l1745 5770                                      l1753 5A6A  
                                    l2538 4C12                                      l2802 4AE8  
                                    l1914 4760                                      l3282 3430  
                                    l2394 0578                                      l2386 03D2  
                                    l2378 0304                                      l1770 4F44  
                                    l1826 15BA                                      l1738 40F2  
                                    l1658 45A0                                      l1674 30C8  
                                    l1746 576E                                      l1754 5A68  
                                    l2803 4AF2                                      l2811 4D40  
                                    l3283 3448                                      l3275 33F0  
                                    l2379 02C6                                      l1691 3674  
                                    l1683 35C4                                      l1819 14EA  
                                    l2804 4B00                                      l2812 4D38  
                                    l3284 3458                                      l3276 33EA  
                                    l2396 04B4                                      l1692 363A  
                                    l1780 3F2E                                      l1772 4F92  
                                    l2580 214A                                      l2549 5AA2  
                                    l1909 47AC                                      l2397 0478  
                                    l1941 2702                                      l1685 35CE  
                                    l1781 3EF4                                      l1829 1570  
                                    l1669 309E                                      l1589 245A  
                                    l2581 2036                                      l3278 3418  
                                    l2815 4D58                                      l3287 34B6  
                                    l1951 27B2                                      l1687 3632  
                                    l1783 3F14                                      l1759 4834  
                                    l2583 2050                                      l2816 4D62  
                                    l2808 4D1E                                      l1952 277A  
                                    l1944 2714                                      l1688 35F8  
                                    l2817 4D70                                      l2809 4D2A  
                                    l1945 2718                                      l1937 26C0  
                                    l1793 3560                                      l2585 2074  
                                    l1778 3EAC                                      l1698 2D1C  
                                    l1890 419E                                      l1794 34D0  
                                    l1955 27CC                                      l1947 2770  
                                    l1939 26CE                                      l1779 3EB2  
                                    l1699 2CF6                                      l1891 41AC  
                                    l2587 2136                                      l1956 27D0  
                                    l1948 2738                                      l1892 41CA  
                                    l1796 34DA                                      l1980 5DAA  
                                    l1893 41E2                                      l1797 34E0  
                                    l2589 210A                                      l2782 3716  
                                    l1798 34E6                                      l2783 36D8  
                                    l2599 3904                                      l1887 41EC  
                                    l1991 5064                                      l1799 34FA  
              __size_of_Mdm_IsSmsReceived 0024                                      l2776 3684  
                                    l1888 4186                                _Led1OutSts 01FA  
                                    l2785 374A                                      l2777 367E  
                                    l1985 5070                                      l1993 506A  
                                    l1977 5DB4                                      l2970 4342  
                                    l1978 5DA4                                      l2795 4A9A  
                                    l2779 36C6                                      l2963 57DE  
                                    l2796 4AAA                                      l2957 5ED4  
                                    l2798 4AC8                                      l2799 4AC0  
                                    l2967 42C4                                      l2969 4300  
                                    l2997 4B3A                                      l2998 4B2E  
                                    l9059 4860                                      l7707 35CE  
                                    l9261 2452                                      l8535 56B4  
                                    l9195 5B32                                      l7669 5BF2  
                                    l9289 24B6                                      STR_1 FFE5  
                                    STR_2 FF80                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE94                                      STR_9 FEC8  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                                    u5230 3620                                      u5400 2C3A  
                                    u5250 3662                                      u6060 4B3E  
                                    u5420 2C8C                                      u5237 3616  
                                    u5407 2C30                                      u5257 3658  
                                    u6235 60AE                                      u5427 2C82  
                                    u6236 60B0                                      u7300 2476  
                                    u8005 60C2                                      u5390 2C0A  
                                    u8006 60C4                                      u8105 5640  
                                    u7330 251A                                      u8106 5642  
                                    u7085 606E                                      u5397 2C00  
                                    u7086 6070                     ??_USBCtrlTrfTxService 007D  
                                    u8065 6058                                      u8066 605C  
                                    u8075 561A                                      u8076 561C  
                                    u8085 5626                                      u8086 5628  
                                    u8095 5634                                      _UCFG 000F39  
                                    u8096 5636                                      u6930 4D44  
                                    u9171 4FF6                                      _UEP0 000F26  
                                    u9421 49C4                                      _UEP1 000F27  
                                    u6870 4ACC                                      u9431 49DC  
                                    u9515 5D0E                                      _UEIE 000F37  
                                    u7940 39B8                                      u9516 5D10  
                                    u6965 55DE                                      u9525 5D1A  
                __size_of_Uart_Uart1RxIsr 0010                                      u9526 5D1C  
                                    u9535 5D26                                      u7880 5170  
                                    u9536 5D28                                      u7887 5166  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7995 4DDE                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6182                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 002E  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 367C                                      _main 6144  
                         ??_Mdm_IsRinging 0081                                      _itoa 57B8  
                        ?_SetUartBaudRate 0096                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 42BC                                      _xtoi 33DA  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 618A  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4846  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5946                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6048                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 35A4  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 60D8                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
                          _GetElapsedTime 3C26             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 52DA  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 008B                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 59C2  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB6  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 0038                                     l13003 3206  
                                   l13141 2FC6                                     l11621 333A  
                                   l13127 2F5C                                     l12239 3712  
                                   l14061 2DEE                                     l13343 0FB0  
                                   l14049 4DF6                                     l10971 5F4A  
                                   l13509 09A4                                     l12943 44AC  
                                   l14385 508A                                     l14387 50BA  
                                   l13659 1CB6                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4B0A                                     STR_10 FF56  
                                   STR_11 FF64                                     STR_12 FFA8  
                                   STR_20 FF48                                     STR_13 FF72  
                                   STR_21 FE6A                                     STR_30 FF3A  
                                   STR_14 FEB3                                     STR_31 FFD7  
                                   STR_15 FEF1                                     STR_23 FEDD  
                                   STR_24 FFF4                                     STR_16 FF29  
                                   STR_25 FFF4                                     STR_17 FF8E  
                                   STR_26 FE91                                     STR_18 FF9B  
                                   STR_27 FF18                                     STR_28 FFB5  
                         __end_of___awmod 4D7A                                     STR_29 FF05  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 4B8E  
                                   ?_utoa 008A                                     u10400 53FA  
                                   u11200 18AE                                     u10170 336E  
                                   u12020 04BE                                     u10510 558A  
                                   u10430 5818                                     u11150 1864  
                                   u10350 1554                                     u12120 406A  
                                   u12200 1F54                                     u12130 4086  
                                   u11180 189E                           ___awdiv@divisor 007F  
                                   u13040 1D2C                                     u11425 0AF4  
                                   u12330 3014                                     u13130 2760  
                  __end_of_USBDeviceTasks 1D30                                     u11435 0B14  
                                   u12180 1F40                                     u11540 54CA  
                                   u10660 5D48                                     u11445 0B9E  
                                   u12261 2F20                                     u10750 5A16  
                                   u13150 27A2                                     u12271 2F32  
                                   ?_xtoi 0083                                     u11560 504C  
                                   u10840 29AA                                     u10680 5C2E  
                                   u13160 27BA                                     u11465 0C78  
                                   u13137 2756                                     u11490 5870  
                                   u10770 5A22                                     u11475 0C98  
                                   u11485 0D22                                     u13157 2798  
                                   u11567 5042                                     u13431 2020  
                                   u10960 4736                                     u10890 59F0  
                                   u13290 4C22                                     u13518 4E28  
                                   u13519 4E56                 ?_USBCtrlEPServiceComplete 0001  
                                   u13558 2EB6                                     u13559 2EE4  
                         __end_of___lwdiv 542A                           __end_of___lwmod 5840  
               TurnOnModem@TurnOnMdmState 01EF                        ??_UpdateOsCounters 0019  
                                   i1l742 22D2                                     i1l747 240E  
                                   i2l680 38E6                                     i2l681 3832  
                                   i2l690 387E                                     i2l682 3842  
                                   i2l686 3864                                     i2l688 38D6  
                                   i2l689 389E                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B2  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E1  
                                   _USTAT 000F64                   __end_of_LedStateMachine 440E  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00CA  
         __end_of_USBCtrlEPAllowDataStage 45EE                             _StringCompare 547C  
                                   _sd000 FE66                                     _sd001 FE1F  
                                   _sd002 FDF9            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3A92  
                             _ApnLenLocal 01E9                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5C48  
                         __end_of_isdigit 5EDC                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5AEA  
                         __end_of_isspace 5D54                I2c_WriteData@I2cWriteState 0034  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5E98                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5DA2  
               __end_of_Rtcc_GetRtccValue 48DA                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4EC8                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 52DA  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 39C6  
                         __end_of_tolower 6018                       __end_of_Mcu_Int0Isr 61B2  
                     __end_of_Mcu_Int1Isr 61AE                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6030  
                  __end_of_GetElapsedTime 3CEE                     __end_of_UartSetConfig 51D2  
                  __size_of_initGprsModem 0080               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5FE8                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2B92                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5D00  
                          _InitSchedTimer 5C78                           __initialization 27F0  
                        __end_of_MdmCntSm 40AE                      __end_of_I2c_ReadData 22BA  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3E7A  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 1FFE  
                            __end_of_atoi 3754                              __end_of_main 6150  
                     StringCompare@Result 0085                              __end_of_itoa 57FC  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01D9  
                            __end_of_utoa 4366                              __end_of_xtoi 34C0  
                __end_of_Rtcm_SetRtccDate 5382                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 616E  
                    initGprsModem@initMdm 01D4                      Term_MainSm@TermDelay 03D0  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE54  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B8              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 471C  
                              _ReceiveEvt 5CA6          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 60F8  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4B8E                              _cdc_mem_type 01DA  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F1  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00C4                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 38F8                _Uart_MdmGsmGprsReadService 3828  
              __end_of_UsbDevice_MainTask 5DC6                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 5F3E  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1397 5AE4  
                             _GenerateEvt 6030                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 01F2                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC3B                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F4                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4F34                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5CA6                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 61A2  
                              _UartConfig 0334                      __end_of_Mdm_MainTask 547C  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00D2  
                           ??_Term_MainSm 00A7                                    _Relay1 02E8  
                                  _Relay2 02E7                                    _Relay3 02E6  
                                  _Relay4 02E5                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5730  
                                  _SmsLen 00D8                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 560A                                    ___lmul 51D2  
                    _I2cSlv_ReceiveI2cMsg 58C6                        TurnOnModem@Counter 032C  
                            ?_putUSBUSART 0083                                    ___wmul 5D54  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 551E  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5382  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 47B2  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5774           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 56A2                    __size_of_HttpGetMethod 04D0  
                                  _memset 5BE8                                    clear_0 288A  
                                  clear_1 289C                                    clear_2 28A8  
                                  clear_3 28B4                                    clear_4 28C0  
                                  clear_5 28CC                                    clear_6 28D8  
                                  clear_7 28E4                                    clear_8 28F0  
                                  clear_9 28FC                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02D8                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01E6                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01EC  
                      ?_USBEnableEndpoint 0085                                    _strcat 511E  
                                  _strcpy 5B86                                    _strlen 5946  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5A3C  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 4C10  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 26AA  
                     ModemEvtParser@F9091 04F0                       ModemEvtParser@F9087 03C1  
                     ModemEvtParser@F9089 03BC                       MdmCntSm@MdmCntState 01F4  
                            MyApp_Task@on 0142                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC32  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 619A                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 01FE                   __end_of_I2cSlv_MainTask 532E  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 61AE                               _Mcu_Int1Isr 61AA  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 009B                      _controlTransferState 00D1  
                   __end_ofi1_GenerateEvt 608A                     __end_of_Rtcm_MainTask 49F8  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 0332  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 291A                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                    __end_of_EnableReceiver 61A6  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 011A  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 55BC  
         I2cSlv_QueryI2cData@TimeoutTimer 0349                      Terminal@FormatOption 02EB  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5000  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FC  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02D6  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 57B8                               _InitNetwork 0036  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6A                             __end_of_sd001 FE3D  
                           __end_of_sd002 FE1F                              __pidataBANK1 61B2  
                            __pidataBANK2 6128                              __pidataBANK3 5884  
                            __pidataBANK4 5FE8                              __pidataBANK5 54CE  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5840                       __size_of_CheckModem 0160  
              __end_of_Uart_ClearRxBuffer 5B54             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 5FB4  
             __end_of_USBCtrlTrfInHandler 3F3C                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6074  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E0                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5BB8  
                              _cdc_notice 044A                     __end_of_Tmr_TmrBPrSet 320C  
                     __end_of_Rtcc_RtcIsr 61AA                                _cdc_rx_len 00CE  
                       __end_of_MsgFormat FD2D                                _cdc_tx_len 00CC  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5AEA  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DB  
                          ClearBuffer@Len 007F                           _secondsAppTimer 440E  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5D00  
                  _USBStdGetStatusHandler 40AE                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01E8  
                          _Rtcc_RtcConfig 44B0                                __pbssBANK0 00B8  
                              __pbssBANK1 01C9                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 07C4  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 60A0  
                __end_of_Uart_WriteString 5A00                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 5E32  
                             _SetBaudRate 55BC                 initGprsModem@modemCounter 03BA  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EA  
                             _pBDTEntryIn 00BE          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 311E                                 ?_TmrBInit 007D  
                           _CheckTxStatus 616E                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0154                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 39C6  
                          _Rtcc_UnlockRtc 60D8                              _I2cBusStatus 01E2  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2DE4                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 02E0                     __end_of_I2c_WriteData 1E9E  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE54                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 47B2                     __end_of_UpdateSchFlag 5F98  
                       MyApp_Task@smsText 0100                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00DC                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2DE4                         __end_of_WriteByte 6164  
                      _USBCheckStdRequest 34C0                         _configDescriptor1 FDB6  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04B8  
             __end_of_USBCtrlTrfTxService 367C                       _USBStdSetCfgHandler 32F4  
                       triggerRelay@F8967 03CE                   __size_of_ConfigureModem 00D4  
                  I2cSlv_QueryI2cData@Ret 01DF                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5CD4                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4550  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 215C  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3DB6                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01D7            __end_of_Pm_DsReleasePinControl 6190  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 015E                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DF                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F0  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 6144                     __size_of_Mdm_MainTask 0052  
           ModemEvtParser@CallReadyString 0088                             _cdc_trf_state 00CD  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6196                          _ComChecCompleted 01F1  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 5E0E  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01D6  
                                 _RelayB2 02E9                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0035  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4E5C                    __end_of_Rtcc_UnlockRtc 60E8  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 60B4                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD2D  
              __size_of_USBEnableEndpoint 0044                       MyApp_Task@smsNumber 0146  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 5F5C                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 605E             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4A84                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4D08                                   ___lldiv 4B0A  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 53D6                         ??_USBStallHandler 007D  
                                 ___lwmod 57FC                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 61A6  
                    __size_of_putUSBUSART 0022                                   __pcinit 27F0  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00D4                       __end_of_TurnOnModem 56A2  
                         __size_of_memset 0030                                 _I2cConfig 0354  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDF9  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 008B  
                   MyApp_Task@countRelay1 02F1                     MyApp_Task@countRelay2 03CC  
                             Terminal@Len 03AE                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6144                                   __ptext1 5BB8  
                                 __ptext2 6150                                   __ptext3 618A  
                                 __ptext4 5F3E                                   __ptext5 5FB4  
                                 __ptext6 5D00                                   __ptext7 5C78  
                                 __ptext8 3B5E                                   __ptext9 311E  
                                 _inPipes 00B8                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 44B0  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5C18                                   _isdigit 5EBA  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B8  
                             ?_SystemInit 0001                                   clear_10 2908  
                                 clear_11 2914                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00B3                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02DE       __end_of_Tmr_RegisterTmr2IsrCallback 615A  
             _Tmr_RegisterTmr2IsrCallback 6150                                   _isspace 5D2A  
                            _Mdm_MainTask 542A                                   _isupper 5E76  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 00AF  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22BA  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC3B  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5E0E  
                                 _sprintf 38F8                                   _tolower 6000  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6118  
                        _HttpGetDataLocal 03A5                  __end_of_Mdm_SetSmsFormat 556E  
                  Term_MainSm@FwkMajorStr 00A7                            __pintcode_body 4210  
                                 _toupper 6018           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 291A  
                            _getsUSBUSART 471C                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 0037               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F3             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC39       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0083                                   memcpy@n 0081  
                                 memcpy@s 0085                       _pBDTEntryEP0OutNext 00C6  
                                 itoa@buf 0093                                   memset@c 007F  
                  Term_MainSm@FwkMinorStr 00AB                                   itoa@val 0095  
                                 memset@n 0081                                   memset@p 0083  
                           __Lmediumconst FC32                            _ModemEvtParser 2F06  
                                 int_func 4210                                 i1u1334_20 22D0  
                         _USB1msTickCount 0318                                 i1u1338_28 23F0  
                               i1u1338_29 2404           _dummy_encapsulated_cmd_response 0379  
                               i1u1359_28 5E1E                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                             MyApp_Task@off 0140  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 5F7A  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 6048  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5B86  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                 _USBCtrlEPAllowDataStage 4550                        _UsbDevice_MainTask 5DA2  
                            _Mcu_ClearWdg 6196                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3020                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E3                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 1FFE                           _RtccIsrCallback 02DA  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F2  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 5E54  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 5EFE                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02DC  
                        _HttpGetMethodSts 01E7                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                        _BothEP0OutUOWNsSet 01DC  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0078  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0033  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 3020                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00DA  
                   __end_of_StopCondition 619E                  __size_of_HighPriorityIsr 42B4  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0370  
                               _Led2Blink 0367                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035E              __end_of_USBTransferOnePacket 3FFA  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0394  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 605E  
                               _Led2Pulse 038E                                 _Led3Pulse 0388  
                       _I2cSlv_SendI2cMsg 5984           SetBaudRate@DesiredI2cBusClockHz 0096  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 00B3  
                          _Tmr_TmrBConfig 3B5E                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 60C6                         _OsAlrm_SetOsAlarm 3CEE  
                    Terminal@TermRxBuffer 0486                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 560A  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5656  
                            ??_MyApp_Task 0099                      Terminal@TermTxBuffer 0100  
                               _GetMethod 01FD                    _USBCtrlTrfSetupHandler 49F8  
                      ?_OsAlrm_SetOsAlarm 0083                     __end_of_USBDeviceInit 2562  
   __end_of_USBIncrement1msInternalTimers 5E76    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5E54               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 522A                            _CheckAckStatus 6178  
                          __end_of___wmul 5D7C                       ??_I2cSlv_SendI2cMsg 0084  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 56EA  
                      Terminal@PackageLen 02ED         Uart_MdmGsmGprsReadService@RxState 01F3  
                          __end_of_memset 5C18                        _UartTxBufferStatus 556E  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DD  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6128  
                               _MdmStatus 00D6                            __end_of_strcat 517A  
                          __end_of_strcpy 5BB8                            __end_of_strlen 5984  
                          __end_of_strtol 19F2                       start_initialization 27F0  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3754                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5B20                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0550  
                             _cdc_data_tx 0784              __end_of_USBConfigureEndpoint 4686  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC3D  
                      __end_of_MyApp_Task 215C                          _UpdateOsCounters 6108  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3B5E  
               __end_of_I2cSlv_SendI2cMsg 59C2                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4846  
                       __size_of_MdmCntSm 00B4                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 60F8                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3C26  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3DB6  
                  __end_of_Tmr_TmrBIrqSet 5656                                 _TaskTable 0590  
                               _RingEvent 00DD                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D9  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B6  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 517A                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5CD4                    _pBDTEntryEP0OutCurrent 00C8  
                           _Term_MainTask 5FCE                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6182                                  ??___lmul 0085  
                           _isxdigit$6426 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2B92  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4C10  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FF  
                             __pdataBANK2 02F1                               __pdataBANK3 03BC  
                             __pdataBANK4 04E2                               __pdataBANK5 0590  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00D0  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 53D6  
                  __end_of_ConfigureModem 3828                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00DB            __end_of_USBStdGetStatusHandler 4160  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC3D  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 54CE                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                         RiSm@MdmDrvState 002B                    MyApp_Task@blinkSeconds 01D3  
                            _SetAckStatus 60A0                              _isalpha$6416 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 615A  
                            _isdigit$6150 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 032E                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 5906       InitGprsNetwork@GprsNetInitNextState 002A  
                    MyApp_Task@blickTicks 03FC                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 5F1E                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5A76              __end_of_LedBlinkStateMachine 26AA  
                             sprintf@flag 0083                           _USBStallHandler 5730  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 5FB4                __end_of_USBCheckCDCRequest 4210  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5282  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 5F1E  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5C48  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5EDC                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC32                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5DEA                                 __ptext101 4C90  
                               __ptext110 2A60                                 __ptext102 5382  
                               __ptext111 3754                                 __ptext103 517A  
                               __ptext120 05EC                                 __ptext112 0ABC  
                               __ptext104 5656                                 __ptext121 59C2  
                               __ptext113 2928                                 __ptext105 19F2  
                               __ptext130 5AEA                                 __ptext122 5840  
                               __ptext114 51D2                                 __ptext106 5906  
                           Terminal@Index 00A6                                 __ptext131 4366  
                               __ptext123 5F1E                                 __ptext115 522A  
                               __ptext107 2F06                                 __ptext140 4B0A  
                               __ptext132 320C                                 __ptext124 556E  
                               __ptext116 1E9E                                 __ptext108 5B20  
                               __ptext141 5CD4                                 __ptext133 5C48  
                               __ptext125 5000                                 __ptext117 3FFA  
                               __ptext109 547C                                 __ptext150 6164  
                               __ptext142 3DB6                                 __ptext134 2562  
                               __ptext126 50C0                                 __ptext118 6182  
                               __ptext151 6030                                 __ptext143 5CA6  
                               __ptext135 53D6                                 __ptext127 48DA  
                               __ptext119 0DC8                                 __ptext160 22BA  
                               __ptext152 61A2                                 __ptext144 1D30  
                               __ptext136 3CEE                                 __ptext128 3C26  
                               __ptext161 5D7C                                 __ptext153 616E  
                               __ptext145 215C                                 __ptext137 5D54  
                               __ptext129 60C6                                 __ptext170 61A6  
                               __ptext162 5282                                 __ptext154 6178  
                               __ptext146 615A                                 __ptext138 4D7A  
                               __ptext171 61AA                                 __ptext163 5F98  
                               __ptext147 619A                                 __ptext139 55BC  
                               __ptext172 61AE                                 __ptext164 5AB0  
                               __ptext156 5E0E                                 __ptext148 619E  
                               __ptext173 0000                                 __ptext165 6074  
                               __ptext157 6136                                 __ptext149 60A0  
                               __ptext158 5F7A                                 __ptext167 6118  
                               __ptext159 6108                                 __ptext168 3828  
                               __ptext169 608A                                  ?___awmod 007D  
                      _Sch_SchmIntService 6136                           _InitializeTasks 4DEC  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04D7                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 039A  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 3F3C                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F                      MyApp_Task@isRelay1On 02E3  
                    MyApp_Task@isRelay2On 02E2        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A0            InitializeTasks@ActiveTaskIndex 00B5  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 4C90                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EA  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4F9A                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 4F9A  
              ConfigureModem@DelayCounter 0328                        __end_of_StringCopy 5062  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DE  
                         Terminal@SwTimer 04CC                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02E4  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 032A  
                        _OsTmr_StartTimer 50C0                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6074  
              __end_of_Mcu_StartSystemPll 5F5C                              _PhoneNumbLen 00D7  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5E32  
                           _Rtcm_MainTask 496A                            ___wmul@product 0081  
                        SendSmsSm@SwTimer 03E6                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001E  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01EE           HttpGetMethod@GetMethodNextState 00D5  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4D7A  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5BE8  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 496A  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 009C                      _USBConfigureEndpoint 45EE  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2410                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5D7C                     __end_of_initGprsModem 4C90  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 618A                    __end_of_Mdm_GetSmsData 4D08  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01DE  
                                _ApnLocal 0326                            _StartCondition 619E  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E4                             _Tmr_TmrBPrSet 311E  
                       _NewStringReceived 003C                              _isspace$6419 007E  
                        _UartSetConfigLow 522A                                  _GetSmsSm 2A60  
                 __end_of_USBStallHandler 5774                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 5A76                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DB                                  _MdmCntSm 3FFA  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2804                                 copy_data1 2824  
                               copy_data2 2844                                 copy_data3 2876  
            __end_of_LedPulseStateMachine 32F4                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 33DA  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6164                             i2_GenerateEvt 608A  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE66                 __end_of_I2c_InitI2cModule 4DEC  
                                _MsgReady FE3D                           ??_Term_MainTask 00B3  
                 __end_of_InitializeTasks 4E5C                initGprsModem@isInitialized 01D5  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4686  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0322                            _LowPriorityIsr 0018  
                               memcpy@tmp 0087                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 0039  
                         _SetUartBaudRate 2928              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1D30                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9001 04E2  
                         MyApp_Task@F9008 03C5                  __end_of_UpdateOsCounters 6118  
                        __size_of___lldiv 0084                           MyApp_Task@F8992 03CA  
                         MyApp_Task@F8995 03C8                           MyApp_Task@F8998 0320  
                       Terminal@SlaveAddr 02EC                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02EE                             _UpdateSchFlag 5F7A  
                     __end_of_putUSBUSART 5EBA                               _line_coding 0381  
                            _Rtcc_LockRtc 60E8                      _LedBlinkStateMachine 2562  
                  __end_of_StartCondition 61A2                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01EB  
               Rtcm_GetRtccDate@LocalDate 008A                           ?_Mdm_GetSmsData 0087  
                I2c_WriteData@WriteStatus 0031                              _isupper$6422 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 002F  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 60C6                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0186  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03AA  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0132                                  __ptext10 560A  
                                __ptext11 5EFE                                  __ptext20 5DA2  
                                __ptext12 4686                                  __ptext21 56EA  
                                __ptext13 5F5C                           ??_UartWriteByte 007E  
                                __ptext30 5B54                                  __ptext22 542A  
                                __ptext14 2DE4                                  __ptext31 5730  
                                __ptext23 52DA                                  __ptext15 4DEC  
                                __ptext40 32F4                                  __ptext32 5E54  
                                __ptext24 6190                                  __ptext16 1FFE  
                                __ptext41 40AE                                  __ptext33 2410  
                                __ptext25 5E32                                  __ptext17 5FCE  
                                __ptext50 2CC0                                  __ptext42 2B92  
                                __ptext34 47B2                                  __ptext26 60B4  
                                __ptext18 496A                                  __ptext51 3A92  
                                __ptext43 135A                                  __ptext35 56A2  
                                __ptext27 6196                                  __ptext19 39C6  
                                __ptext60 00D0                                  __ptext52 3E7A  
                                __ptext44 5062                                  __ptext36 49F8  
                                __ptext28 1BAA                                  __ptext61 33DA  
                                __ptext53 35A4                                  __ptext45 4160  
                                __ptext37 3020                                  __ptext29 5A3C  
                                __ptext70 5E98                                  __ptext62 6000  
                                __ptext54 26AA                                  __ptext46 4E5C  
                                __ptext38 4550                                  __ptext71 57B8  
                                __ptext63 5A00                                  __ptext55 10B6  
                                __ptext47 5774                                  __ptext39 34C0  
                                __ptext80 58C6                                  __ptext72 42BC  
                                __ptext64 181C                                  __ptext56 5946  
                                __ptext48 45EE                                  __ptext81 5EDC  
                                __ptext73 57FC                                  __ptext65 6018  
                                __ptext57 511E                                  __ptext49 4F34  
                                __ptext90 6048                                  __ptext82 532E  
                                __ptext74 471C                                  __ptext66 5D2A  
                                __ptext58 38F8                                  __ptext91 44B0  
                                __ptext83 60D8                                  __ptext75 3F3C  
                                __ptext67 5C18                                  __ptext59 5BE8  
                                __ptext92 605E                                  __ptext84 15EE  
                                __ptext76 367C                                  __ptext68 5E76  
                                __ptext93 4EC8                                  __ptext85 4D08  
                                __ptext77 5EBA                                  __ptext69 5B86  
                                __ptext94 4C10                                  __ptext86 4A84  
                                __ptext78 4B8E                                  __ptext95 551E  
                                __ptext87 60E8                                  __ptext79 5984  
                                __ptext96 5A76                                  __ptext88 4F9A  
                                __ptext97 440E                                  __ptext89 4846  
                                __ptext98 60F8                                  __ptext99 5DC6  
                        __size_of_isupper 0022                                _I2cDummyTx 5F98  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 002C                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5DC6  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4A84  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6178  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6190  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5A00  
                           _Mdm_IsRinging 5DEA                       _USBCtrlTrfInHandler 3E7A  
                I2c_ReadData@I2cReadState 0030                __end_of_Mdm_RequestSmsData 6108  
                   __end_of_ScheduleTasks 2F06                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                 blinkForSeconds@blickTicks 0093  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4F34  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3A92  
                     ??_Mdm_IsSmsReceived 0081                 MyApp_Task@I2cTxBufferTest 0144  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 00B7  
                              strtol@sign 0093                           Term_MainSm@Data 0454  
                          _PhoneNumberLen 0324                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5AB0  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5AB0  
                __end_of_Mcu_ConfigExtInt 5FCE                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CF                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0032                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5EFE                  __end_of_Led_SetLedStatus 5C78  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 532E                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 5DEA                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 48DA  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 50C0  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 5062                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                            MyApp_Task@test 02E1  
                 __end_of_SetUartBaudRate 2A60                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0092                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5884                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate 5000  
                             _putUSBUSART 5E98                       _USBCtrlTrfRxService 2CC0  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 5A3C                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 511E                      _LedPulseStateMachine 320C  
                      _USBCheckCDCRequest 4160                       _USBCtrlTrfTxService 35A4  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                        _Rtcc_AlarmConfig 4EC8                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01D8                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02EF                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 56EA                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5D2A  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00D0  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4366          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 619A                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 5B20                      __end_of_CDCTxService 27F0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC39                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01ED                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 60B4  
