

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 15:50:39 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	text103,global,reloc=2,class=CODE,delta=1
   138                           	psect	text104,global,reloc=2,class=CODE,delta=1
   139                           	psect	text105,global,reloc=2,class=CODE,delta=1
   140                           	psect	text106,global,reloc=2,class=CODE,delta=1
   141                           	psect	text107,global,reloc=2,class=CODE,delta=1
   142                           	psect	text108,global,reloc=2,class=CODE,delta=1
   143                           	psect	text109,global,reloc=2,class=CODE,delta=1
   144                           	psect	text110,global,reloc=2,class=CODE,delta=1
   145                           	psect	text111,global,reloc=2,class=CODE,delta=1
   146                           	psect	text112,global,reloc=2,class=CODE,delta=1
   147                           	psect	text113,global,reloc=2,class=CODE,delta=1
   148                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text115,global,reloc=2,class=CODE,delta=1
   150                           	psect	text116,global,reloc=2,class=CODE,delta=1
   151                           	psect	text117,global,reloc=2,class=CODE,delta=1
   152                           	psect	text118,global,reloc=2,class=CODE,delta=1
   153                           	psect	text119,global,reloc=2,class=CODE,delta=1
   154                           	psect	text120,global,reloc=2,class=CODE,delta=1
   155                           	psect	text121,global,reloc=2,class=CODE,delta=1
   156                           	psect	text122,global,reloc=2,class=CODE,delta=1
   157                           	psect	text123,global,reloc=2,class=CODE,delta=1
   158                           	psect	text124,global,reloc=2,class=CODE,delta=1
   159                           	psect	text125,global,reloc=2,class=CODE,delta=1
   160                           	psect	text126,global,reloc=2,class=CODE,delta=1
   161                           	psect	text127,global,reloc=2,class=CODE,delta=1
   162                           	psect	text128,global,reloc=2,class=CODE,delta=1
   163                           	psect	text129,global,reloc=2,class=CODE,delta=1
   164                           	psect	text130,global,reloc=2,class=CODE,delta=1
   165                           	psect	text131,global,reloc=2,class=CODE,delta=1
   166                           	psect	text132,global,reloc=2,class=CODE,delta=1
   167                           	psect	text133,global,reloc=2,class=CODE,delta=1
   168                           	psect	text134,global,reloc=2,class=CODE,delta=1
   169                           	psect	text135,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text136,global,reloc=2,class=CODE,delta=1
   171                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text138,global,reloc=2,class=CODE,delta=1
   173                           	psect	text139,global,reloc=2,class=CODE,delta=1
   174                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text141,global,reloc=2,class=CODE,delta=1
   176                           	psect	text142,global,reloc=2,class=CODE,delta=1
   177                           	psect	text143,global,reloc=2,class=CODE,delta=1
   178                           	psect	text144,global,reloc=2,class=CODE,delta=1
   179                           	psect	text145,global,reloc=2,class=CODE,delta=1
   180                           	psect	text146,global,reloc=2,class=CODE,delta=1
   181                           	psect	text147,global,reloc=2,class=CODE,delta=1
   182                           	psect	text148,global,reloc=2,class=CODE,delta=1
   183                           	psect	text149,global,reloc=2,class=CODE,delta=1
   184                           	psect	text150,global,reloc=2,class=CODE,delta=1
   185                           	psect	text151,global,reloc=2,class=CODE,delta=1
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	text153,global,reloc=2,class=CODE,delta=1
   188                           	psect	text154,global,reloc=2,class=CODE,delta=1
   189                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   190                           	psect	text156,global,reloc=2,class=CODE,delta=1
   191                           	psect	text157,global,reloc=2,class=CODE,delta=1
   192                           	psect	text158,global,reloc=2,class=CODE,delta=1
   193                           	psect	text159,global,reloc=2,class=CODE,delta=1
   194                           	psect	text160,global,reloc=2,class=CODE,delta=1
   195                           	psect	text161,global,reloc=2,class=CODE,delta=1
   196                           	psect	text162,global,reloc=2,class=CODE,delta=1
   197                           	psect	text163,global,reloc=2,class=CODE,delta=1
   198                           	psect	text164,global,reloc=2,class=CODE,delta=1
   199                           	psect	text165,global,reloc=2,class=CODE,delta=1
   200                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   201                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	text169,global,reloc=2,class=CODE,delta=1
   205                           	psect	text170,global,reloc=2,class=CODE,delta=1
   206                           	psect	text171,global,reloc=2,class=CODE,delta=1
   207                           	psect	text172,global,reloc=2,class=CODE,delta=1
   208                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   211                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   212                           	dabs	1,0x400,48,_BDT
   213                           	dabs	1,0x438,8,_CtrlTrfData
   214                           	dabs	1,0x430,8,_SetupPkt
   215  0000                     
   216                           ; Version 1.45
   217                           ; Generated 16/11/2017 GMT
   218                           ; 
   219                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   220                           ; All rights reserved.
   221                           ; 
   222                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   223                           ; 
   224                           ; Redistribution and use in source and binary forms, with or without modification, are
   225                           ; permitted provided that the following conditions are met:
   226                           ; 
   227                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   228                           ;        conditions and the following disclaimer.
   229                           ; 
   230                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   231                           ;        of conditions and the following disclaimer in the documentation and/or other
   232                           ;        materials provided with the distribution.
   233                           ; 
   234                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   235                           ;        software without specific prior written permission.
   236                           ; 
   237                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   238                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   239                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   240                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   241                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   242                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   243                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   244                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   245                           ; 
   246                           ; 
   247                           ; Code-generator required, PIC18F46J50 Definitions
   248                           ; 
   249                           ; SFR Addresses
   250  0000                     
   251                           	psect	idataBANK1
   252  006024                     __pidataBANK1:
   253                           	opt stack 0
   254                           
   255                           ;initializer for MyApp_Task@countRelay1
   256  006024  01                 	db	1
   257                           
   258                           ;initializer for InitGprsNetwork@GprsInitSts
   259  006025  01                 	db	1
   260                           
   261                           	psect	idataBANK2
   262  005FA8                     __pidataBANK2:
   263                           	opt stack 0
   264                           
   265                           ;initializer for Terminal@EchoOption
   266  005FA8  01                 	db	1
   267                           
   268                           ;initializer for _MainSystemTimebaseFlag
   269  005FA9  01                 	db	1
   270                           
   271                           ;initializer for _ConnTimeout
   272  005FAA  00                 	db	0
   273  005FAB  01                 	db	1
   274  005FAC  0000               	dw	0
   275  005FAE  0000               	dw	0
   276  005FB0  0000               	dw	0
   277  005FB2  0000               	dw	0
   278  005FB4  00                 	db	0
   279                           
   280                           	psect	idataBANK3
   281  005742                     __pidataBANK3:
   282                           	opt stack 0
   283                           
   284                           ;initializer for ModemEvtParser@F9088
   285  005742  2B                 	db	43
   286  005743  43                 	db	67
   287  005744  4D                 	db	77
   288  005745  54                 	db	84
   289  005746  49                 	db	73
   290                           
   291                           ;initializer for ModemEvtParser@F9086
   292  005747  52                 	db	82
   293  005748  49                 	db	73
   294  005749  4E                 	db	78
   295  00574A  47                 	db	71
   296                           
   297                           ;initializer for MyApp_Task@F8993
   298  00574B  50                 	db	80
   299  00574C  01                 	db	1
   300                           
   301                           ;initializer for MyApp_Task@F8990
   302  00574D  50                 	db	80
   303  00574E  00                 	db	0
   304                           
   305                           ;initializer for MyApp_Task@countRelay2
   306  00574F  0001               	dw	1
   307                           
   308                           ;initializer for triggerRelay@F8966
   309  005751  50                 	db	80
   310  005752  00                 	db	0
   311                           
   312                           ;initializer for Term_MainSm@TermDelay
   313  005753  01                 	db	1
   314  005754  01                 	db	1
   315  005755  0000               	dw	0
   316  005757  0000               	dw	0
   317  005759  0000               	dw	0
   318  00575B  0000               	dw	0
   319  00575D  00                 	db	0
   320                           
   321                           ;initializer for _ConnWait
   322  00575E  00                 	db	0
   323  00575F  01                 	db	1
   324  005760  0000               	dw	0
   325  005762  0000               	dw	0
   326  005764  0000               	dw	0
   327  005766  0000               	dw	0
   328  005768  00                 	db	0
   329                           
   330                           ;initializer for SendSmsSm@SwTimer
   331  005769  01                 	db	1
   332  00576A  01                 	db	1
   333  00576B  0000               	dw	0
   334  00576D  0000               	dw	0
   335  00576F  0000               	dw	0
   336  005771  0000               	dw	0
   337  005773  00                 	db	0
   338                           
   339                           ;initializer for CheckModem@Timeout
   340  005774  00                 	db	0
   341  005775  01                 	db	1
   342  005776  0000               	dw	0
   343  005778  0000               	dw	0
   344  00577A  0000               	dw	0
   345  00577C  0000               	dw	0
   346  00577E  00                 	db	0
   347                           
   348                           ;initializer for MyApp_Task@blickTicks
   349  00577F  FFFF               	dw	65535
   350                           
   351                           	psect	idataBANK4
   352  005EFE                     __pidataBANK4:
   353                           	opt stack 0
   354                           
   355                           ;initializer for MyApp_Task@F8999
   356  005EFE  33                 	db	51
   357  005EFF  32                 	db	50
   358  005F00  30                 	db	48
   359  005F01  30                 	db	48
   360  005F02  32                 	db	50
   361  005F03  37                 	db	55
   362  005F04  36                 	db	54
   363  005F05  33                 	db	51
   364  005F06  31                 	db	49
   365  005F07  38                 	db	56
   366                           
   367                           ;initializer for ModemEvtParser@F9090
   368  005F08  43                 	db	67
   369  005F09  61                 	db	97
   370  005F0A  6C                 	db	108
   371  005F0B  6C                 	db	108
   372  005F0C  20                 	db	32
   373  005F0D  52                 	db	82
   374  005F0E  65                 	db	101
   375  005F0F  61                 	db	97
   376  005F10  64                 	db	100
   377  005F11  79                 	db	121
   378                           
   379                           	psect	idataBANK5
   380  00527C                     __pidataBANK5:
   381                           	opt stack 0
   382                           
   383                           ;initializer for _TaskTable
   384  00527C  02                 	db	low _Mdm_DrvMainFn
   385  00527D  60                 	db	high _Mdm_DrvMainFn
   386  00527E  00                 	db	0
   387  00527F  0000               	dw	0
   388  005281  000A               	dw	10
   389  005283  00                 	db	0
   390  005284  DA                 	db	low _I2cSlv_MainTask
   391  005285  50                 	db	high _I2cSlv_MainTask
   392  005286  00                 	db	0
   393  005287  0000               	dw	0
   394  005289  0001               	dw	1
   395  00528B  00                 	db	0
   396  00528C  CC                 	db	low _Mdm_MainTask
   397  00528D  52                 	db	high _Mdm_MainTask
   398  00528E  00                 	db	0
   399  00528F  0000               	dw	0
   400  005291  0001               	dw	1
   401  005293  00                 	db	0
   402  005294  9C                 	db	low _MdmHttp_MainTask
   403  005295  54                 	db	high _MdmHttp_MainTask
   404  005296  00                 	db	0
   405  005297  0000               	dw	0
   406  005299  0001               	dw	1
   407  00529B  00                 	db	0
   408  00529C  1A                 	db	low _UsbDevice_MainTask
   409  00529D  5C                 	db	high _UsbDevice_MainTask
   410  00529E  00                 	db	0
   411  00529F  0000               	dw	0
   412  0052A1  0001               	dw	1
   413  0052A3  00                 	db	0
   414  0052A4  AA                 	db	low _Wdg_MainTask
   415  0052A5  5C                 	db	high _Wdg_MainTask
   416  0052A6  00                 	db	0
   417  0052A7  0000               	dw	0
   418  0052A9  0064               	dw	100
   419  0052AB  00                 	db	0
   420  0052AC  7A                 	db	low _Led_MainTask
   421  0052AD  36                 	db	high _Led_MainTask
   422  0052AE  00                 	db	0
   423  0052AF  0000               	dw	0
   424  0052B1  0032               	dw	50
   425  0052B3  00                 	db	0
   426  0052B4  62                 	db	low _Rtcm_MainTask
   427  0052B5  48                 	db	high _Rtcm_MainTask
   428  0052B6  00                 	db	0
   429  0052B7  0000               	dw	0
   430  0052B9  0064               	dw	100
   431  0052BB  00                 	db	0
   432  0052BC  44                 	db	low _Term_MainTask
   433  0052BD  5E                 	db	high _Term_MainTask
   434  0052BE  00                 	db	0
   435  0052BF  0000               	dw	0
   436  0052C1  0001               	dw	1
   437  0052C3  00                 	db	0
   438  0052C4  42                 	db	low _MyApp_Task
   439  0052C5  3E                 	db	high _MyApp_Task
   440  0052C6  00                 	db	0
   441  0052C7  0000               	dw	0
   442  0052C9  0064               	dw	100
   443  0052CB  00                 	db	0
   444                           
   445                           	psect	mediumconst
   446  00FC54                     __pmediumconst:
   447                           	opt stack 0
   448  00FC54  00                 	db	0
   449  00FC55                     _USB_SD_Ptr:
   450                           	opt stack 0
   451  00FC55  88                 	db	low _sd000
   452  00FC56  FE                 	db	high _sd000
   453  00FC57  41                 	db	low _sd001
   454  00FC58  FE                 	db	high _sd001
   455  00FC59  1B                 	db	low _sd002
   456  00FC5A  FE                 	db	high _sd002
   457  00FC5B                     __end_of_USB_SD_Ptr:
   458                           	opt stack 0
   459  00FC5B                     _USB_CD_Ptr:
   460                           	opt stack 0
   461  00FC5B  D8                 	db	low _configDescriptor1
   462  00FC5C  FD                 	db	high _configDescriptor1
   463  00FC5D                     __end_of_USB_CD_Ptr:
   464                           	opt stack 0
   465  00FC5D                     _TaskNumber:
   466                           	opt stack 0
   467  00FC5D  000A               	dw	10
   468  00FC5F                     __end_of_TaskNumber:
   469                           	opt stack 0
   470  00FC5F                     _MsgFormat:
   471                           	opt stack 0
   472  00FC5F  48                 	db	72
   473  00FC60  6F                 	db	111
   474  00FC61  73                 	db	115
   475  00FC62  74                 	db	116
   476  00FC63  20                 	db	32
   477  00FC64  6D                 	db	109
   478  00FC65  65                 	db	101
   479  00FC66  73                 	db	115
   480  00FC67  73                 	db	115
   481  00FC68  61                 	db	97
   482  00FC69  67                 	db	103
   483  00FC6A  65                 	db	101
   484  00FC6B  20                 	db	32
   485  00FC6C  66                 	db	102
   486  00FC6D  6F                 	db	111
   487  00FC6E  72                 	db	114
   488  00FC6F  6D                 	db	109
   489  00FC70  61                 	db	97
   490  00FC71  74                 	db	116
   491  00FC72  3A                 	db	58
   492  00FC73  20                 	db	32
   493  00FC74  0D                 	db	13
   494  00FC75  0A                 	db	10
   495  00FC76  5B                 	db	91
   496  00FC77  6F                 	db	111
   497  00FC78  70                 	db	112
   498  00FC79  5F                 	db	95
   499  00FC7A  74                 	db	116
   500  00FC7B  79                 	db	121
   501  00FC7C  70                 	db	112
   502  00FC7D  65                 	db	101
   503  00FC7E  5D                 	db	93
   504  00FC7F  3A                 	db	58
   505  00FC80  5B                 	db	91
   506  00FC81  6F                 	db	111
   507  00FC82  70                 	db	112
   508  00FC83  5D                 	db	93
   509  00FC84  3A                 	db	58
   510  00FC85  5B                 	db	91
   511  00FC86  6C                 	db	108
   512  00FC87  65                 	db	101
   513  00FC88  6E                 	db	110
   514  00FC89  5D                 	db	93
   515  00FC8A  3A                 	db	58
   516  00FC8B  5B                 	db	91
   517  00FC8C  61                 	db	97
   518  00FC8D  64                 	db	100
   519  00FC8E  64                 	db	100
   520  00FC8F  72                 	db	114
   521  00FC90  5D                 	db	93
   522  00FC91  3A                 	db	58
   523  00FC92  5B                 	db	91
   524  00FC93  70                 	db	112
   525  00FC94  61                 	db	97
   526  00FC95  79                 	db	121
   527  00FC96  6C                 	db	108
   528  00FC97  6F                 	db	111
   529  00FC98  61                 	db	97
   530  00FC99  64                 	db	100
   531  00FC9A  5D                 	db	93
   532  00FC9B  0D                 	db	13
   533  00FC9C  0A                 	db	10
   534  00FC9D  0D                 	db	13
   535  00FC9E  0A                 	db	10
   536  00FC9F  5B                 	db	91
   537  00FCA0  6F                 	db	111
   538  00FCA1  70                 	db	112
   539  00FCA2  5F                 	db	95
   540  00FCA3  74                 	db	116
   541  00FCA4  79                 	db	121
   542  00FCA5  70                 	db	112
   543  00FCA6  65                 	db	101
   544  00FCA7  5D                 	db	93
   545  00FCA8  20                 	db	32
   546  00FCA9  3D                 	db	61
   547  00FCAA  20                 	db	32
   548  00FCAB  53                 	db	83
   549  00FCAC  4F                 	db	79
   550  00FCAD  2C                 	db	44
   551  00FCAE  53                 	db	83
   552  00FCAF  42                 	db	66
   553  00FCB0  0D                 	db	13
   554  00FCB1  0A                 	db	10
   555  00FCB2  5B                 	db	91
   556  00FCB3  6F                 	db	111
   557  00FCB4  70                 	db	112
   558  00FCB5  5D                 	db	93
   559  00FCB6  20                 	db	32
   560  00FCB7  3D                 	db	61
   561  00FCB8  20                 	db	32
   562  00FCB9  52                 	db	82
   563  00FCBA  3A                 	db	58
   564  00FCBB  20                 	db	32
   565  00FCBC  72                 	db	114
   566  00FCBD  65                 	db	101
   567  00FCBE  61                 	db	97
   568  00FCBF  64                 	db	100
   569  00FCC0  2C                 	db	44
   570  00FCC1  57                 	db	87
   571  00FCC2  3A                 	db	58
   572  00FCC3  20                 	db	32
   573  00FCC4  77                 	db	119
   574  00FCC5  72                 	db	114
   575  00FCC6  69                 	db	105
   576  00FCC7  74                 	db	116
   577  00FCC8  65                 	db	101
   578  00FCC9  0D                 	db	13
   579  00FCCA  0A                 	db	10
   580  00FCCB  5B                 	db	91
   581  00FCCC  6C                 	db	108
   582  00FCCD  65                 	db	101
   583  00FCCE  6E                 	db	110
   584  00FCCF  5D                 	db	93
   585  00FCD0  20                 	db	32
   586  00FCD1  3D                 	db	61
   587  00FCD2  20                 	db	32
   588  00FCD3  32                 	db	50
   589  00FCD4  20                 	db	32
   590  00FCD5  62                 	db	98
   591  00FCD6  79                 	db	121
   592  00FCD7  74                 	db	116
   593  00FCD8  65                 	db	101
   594  00FCD9  20                 	db	32
   595  00FCDA  41                 	db	65
   596  00FCDB  53                 	db	83
   597  00FCDC  43                 	db	67
   598  00FCDD  49                 	db	73
   599  00FCDE  49                 	db	73
   600  00FCDF  0D                 	db	13
   601  00FCE0  0A                 	db	10
   602  00FCE1  5B                 	db	91
   603  00FCE2  61                 	db	97
   604  00FCE3  64                 	db	100
   605  00FCE4  64                 	db	100
   606  00FCE5  72                 	db	114
   607  00FCE6  5D                 	db	93
   608  00FCE7  20                 	db	32
   609  00FCE8  3D                 	db	61
   610  00FCE9  20                 	db	32
   611  00FCEA  32                 	db	50
   612  00FCEB  20                 	db	32
   613  00FCEC  62                 	db	98
   614  00FCED  79                 	db	121
   615  00FCEE  74                 	db	116
   616  00FCEF  65                 	db	101
   617  00FCF0  20                 	db	32
   618  00FCF1  41                 	db	65
   619  00FCF2  53                 	db	83
   620  00FCF3  43                 	db	67
   621  00FCF4  49                 	db	73
   622  00FCF5  49                 	db	73
   623  00FCF6  0D                 	db	13
   624  00FCF7  0A                 	db	10
   625  00FCF8  5B                 	db	91
   626  00FCF9  70                 	db	112
   627  00FCFA  61                 	db	97
   628  00FCFB  79                 	db	121
   629  00FCFC  6C                 	db	108
   630  00FCFD  6F                 	db	111
   631  00FCFE  61                 	db	97
   632  00FCFF  64                 	db	100
   633  00FD00  5D                 	db	93
   634  00FD01  20                 	db	32
   635  00FD02  3D                 	db	61
   636  00FD03  20                 	db	32
   637  00FD04  6D                 	db	109
   638  00FD05  61                 	db	97
   639  00FD06  78                 	db	120
   640  00FD07  20                 	db	32
   641  00FD08  32                 	db	50
   642  00FD09  30                 	db	48
   643  00FD0A  20                 	db	32
   644  00FD0B  62                 	db	98
   645  00FD0C  79                 	db	121
   646  00FD0D  74                 	db	116
   647  00FD0E  65                 	db	101
   648  00FD0F  20                 	db	32
   649  00FD10  41                 	db	65
   650  00FD11  53                 	db	83
   651  00FD12  43                 	db	67
   652  00FD13  49                 	db	73
   653  00FD14  49                 	db	73
   654  00FD15  0D                 	db	13
   655  00FD16  0A                 	db	10
   656  00FD17  0D                 	db	13
   657  00FD18  0A                 	db	10
   658  00FD19  54                 	db	84
   659  00FD1A  65                 	db	101
   660  00FD1B  72                 	db	114
   661  00FD1C  6D                 	db	109
   662  00FD1D  69                 	db	105
   663  00FD1E  6E                 	db	110
   664  00FD1F  61                 	db	97
   665  00FD20  6C                 	db	108
   666  00FD21  20                 	db	32
   667  00FD22  4D                 	db	77
   668  00FD23  6F                 	db	111
   669  00FD24  64                 	db	100
   670  00FD25  65                 	db	101
   671  00FD26  3A                 	db	58
   672  00FD27  20                 	db	32
   673  00FD28  43                 	db	67
   674  00FD29  4F                 	db	79
   675  00FD2A  4D                 	db	77
   676  00FD2B  4D                 	db	77
   677  00FD2C  41                 	db	65
   678  00FD2D  4E                 	db	78
   679  00FD2E  44                 	db	68
   680  00FD2F  20                 	db	32
   681  00FD30  4D                 	db	77
   682  00FD31  4F                 	db	79
   683  00FD32  44                 	db	68
   684  00FD33  45                 	db	69
   685  00FD34  0D                 	db	13
   686  00FD35  0A                 	db	10
   687  00FD36  4D                 	db	77
   688  00FD37  6F                 	db	111
   689  00FD38  64                 	db	100
   690  00FD39  65                 	db	101
   691  00FD3A  6D                 	db	109
   692  00FD3B  20                 	db	32
   693  00FD3C  54                 	db	84
   694  00FD3D  79                 	db	121
   695  00FD3E  70                 	db	112
   696  00FD3F  65                 	db	101
   697  00FD40  3A                 	db	58
   698  00FD41  20                 	db	32
   699  00FD42  47                 	db	71
   700  00FD43  53                 	db	83
   701  00FD44  4D                 	db	77
   702  00FD45  2F                 	db	47
   703  00FD46  47                 	db	71
   704  00FD47  50                 	db	80
   705  00FD48  52                 	db	82
   706  00FD49  53                 	db	83
   707  00FD4A  0D                 	db	13
   708  00FD4B  0A                 	db	10
   709  00FD4C  0D                 	db	13
   710  00FD4D  0A                 	db	10
   711  00FD4E  00                 	db	0
   712  00FD4F                     __end_of_MsgFormat:
   713                           	opt stack 0
   714  00FD4F                     _Welcome:
   715                           	opt stack 0
   716  00FD4F  2A                 	db	42
   717  00FD50  2A                 	db	42
   718  00FD51  2A                 	db	42
   719  00FD52  2A                 	db	42
   720  00FD53  2A                 	db	42
   721  00FD54  2A                 	db	42
   722  00FD55  2A                 	db	42
   723  00FD56  2A                 	db	42
   724  00FD57  2A                 	db	42
   725  00FD58  2A                 	db	42
   726  00FD59  2A                 	db	42
   727  00FD5A  2A                 	db	42
   728  00FD5B  2A                 	db	42
   729  00FD5C  2A                 	db	42
   730  00FD5D  2A                 	db	42
   731  00FD5E  2A                 	db	42
   732  00FD5F  2A                 	db	42
   733  00FD60  2A                 	db	42
   734  00FD61  2A                 	db	42
   735  00FD62  2A                 	db	42
   736  00FD63  2A                 	db	42
   737  00FD64  2A                 	db	42
   738  00FD65  2A                 	db	42
   739  00FD66  2A                 	db	42
   740  00FD67  2A                 	db	42
   741  00FD68  2A                 	db	42
   742  00FD69  2A                 	db	42
   743  00FD6A  2A                 	db	42
   744  00FD6B  2A                 	db	42
   745  00FD6C  2A                 	db	42
   746  00FD6D  2A                 	db	42
   747  00FD6E  2A                 	db	42
   748  00FD6F  2A                 	db	42
   749  00FD70  2A                 	db	42
   750  00FD71  2A                 	db	42
   751  00FD72  2A                 	db	42
   752  00FD73  2A                 	db	42
   753  00FD74  2A                 	db	42
   754  00FD75  2A                 	db	42
   755  00FD76  2A                 	db	42
   756  00FD77  2A                 	db	42
   757  00FD78  2A                 	db	42
   758  00FD79  2A                 	db	42
   759  00FD7A  2A                 	db	42
   760  00FD7B  2A                 	db	42
   761  00FD7C  2A                 	db	42
   762  00FD7D  2A                 	db	42
   763  00FD7E  2A                 	db	42
   764  00FD7F  2A                 	db	42
   765  00FD80  0D                 	db	13
   766  00FD81  0A                 	db	10
   767  00FD82  20                 	db	32
   768  00FD83  20                 	db	32
   769  00FD84  20                 	db	32
   770  00FD85  20                 	db	32
   771  00FD86  20                 	db	32
   772  00FD87  20                 	db	32
   773  00FD88  20                 	db	32
   774  00FD89  20                 	db	32
   775  00FD8A  20                 	db	32
   776  00FD8B  20                 	db	32
   777  00FD8C  20                 	db	32
   778  00FD8D  20                 	db	32
   779  00FD8E  20                 	db	32
   780  00FD8F  20                 	db	32
   781  00FD90  20                 	db	32
   782  00FD91  20                 	db	32
   783  00FD92  20                 	db	32
   784  00FD93  20                 	db	32
   785  00FD94  4D                 	db	77
   786  00FD95  45                 	db	69
   787  00FD96  52                 	db	82
   788  00FD97  43                 	db	67
   789  00FD98  55                 	db	85
   790  00FD99  52                 	db	82
   791  00FD9A  59                 	db	89
   792  00FD9B  20                 	db	32
   793  00FD9C  53                 	db	83
   794  00FD9D  59                 	db	89
   795  00FD9E  53                 	db	83
   796  00FD9F  54                 	db	84
   797  00FDA0  45                 	db	69
   798  00FDA1  4D                 	db	77
   799  00FDA2  0D                 	db	13
   800  00FDA3  0A                 	db	10
   801  00FDA4  2A                 	db	42
   802  00FDA5  2A                 	db	42
   803  00FDA6  2A                 	db	42
   804  00FDA7  2A                 	db	42
   805  00FDA8  2A                 	db	42
   806  00FDA9  2A                 	db	42
   807  00FDAA  2A                 	db	42
   808  00FDAB  2A                 	db	42
   809  00FDAC  2A                 	db	42
   810  00FDAD  2A                 	db	42
   811  00FDAE  2A                 	db	42
   812  00FDAF  2A                 	db	42
   813  00FDB0  2A                 	db	42
   814  00FDB1  2A                 	db	42
   815  00FDB2  2A                 	db	42
   816  00FDB3  2A                 	db	42
   817  00FDB4  2A                 	db	42
   818  00FDB5  2A                 	db	42
   819  00FDB6  2A                 	db	42
   820  00FDB7  2A                 	db	42
   821  00FDB8  2A                 	db	42
   822  00FDB9  2A                 	db	42
   823  00FDBA  2A                 	db	42
   824  00FDBB  2A                 	db	42
   825  00FDBC  2A                 	db	42
   826  00FDBD  2A                 	db	42
   827  00FDBE  2A                 	db	42
   828  00FDBF  2A                 	db	42
   829  00FDC0  2A                 	db	42
   830  00FDC1  2A                 	db	42
   831  00FDC2  2A                 	db	42
   832  00FDC3  2A                 	db	42
   833  00FDC4  2A                 	db	42
   834  00FDC5  2A                 	db	42
   835  00FDC6  2A                 	db	42
   836  00FDC7  2A                 	db	42
   837  00FDC8  2A                 	db	42
   838  00FDC9  2A                 	db	42
   839  00FDCA  2A                 	db	42
   840  00FDCB  2A                 	db	42
   841  00FDCC  2A                 	db	42
   842  00FDCD  2A                 	db	42
   843  00FDCE  2A                 	db	42
   844  00FDCF  2A                 	db	42
   845  00FDD0  2A                 	db	42
   846  00FDD1  2A                 	db	42
   847  00FDD2  2A                 	db	42
   848  00FDD3  2A                 	db	42
   849  00FDD4  2A                 	db	42
   850  00FDD5  0D                 	db	13
   851  00FDD6  0A                 	db	10
   852  00FDD7  00                 	db	0
   853  00FDD8                     __end_of_Welcome:
   854                           	opt stack 0
   855  00FDD8                     _configDescriptor1:
   856                           	opt stack 0
   857  00FDD8  09                 	db	9
   858  00FDD9  02                 	db	2
   859  00FDDA  43                 	db	67
   860  00FDDB  00                 	db	0
   861  00FDDC  02                 	db	2
   862  00FDDD  01                 	db	1
   863  00FDDE  00                 	db	0
   864  00FDDF  C0                 	db	192
   865  00FDE0  32                 	db	50
   866  00FDE1  09                 	db	9
   867  00FDE2  04                 	db	4
   868  00FDE3  00                 	db	0
   869  00FDE4  00                 	db	0
   870  00FDE5  01                 	db	1
   871  00FDE6  02                 	db	2
   872  00FDE7  02                 	db	2
   873  00FDE8  01                 	db	1
   874  00FDE9  00                 	db	0
   875  00FDEA  05                 	db	5
   876  00FDEB  24                 	db	36
   877  00FDEC  00                 	db	0
   878  00FDED  10                 	db	16
   879  00FDEE  01                 	db	1
   880  00FDEF  04                 	db	4
   881  00FDF0  24                 	db	36
   882  00FDF1  02                 	db	2
   883  00FDF2  02                 	db	2
   884  00FDF3  05                 	db	5
   885  00FDF4  24                 	db	36
   886  00FDF5  06                 	db	6
   887  00FDF6  00                 	db	0
   888  00FDF7  01                 	db	1
   889  00FDF8  05                 	db	5
   890  00FDF9  24                 	db	36
   891  00FDFA  01                 	db	1
   892  00FDFB  00                 	db	0
   893  00FDFC  01                 	db	1
   894  00FDFD  07                 	db	7
   895  00FDFE  05                 	db	5
   896  00FDFF  81                 	db	129
   897  00FE00  03                 	db	3
   898  00FE01  08                 	db	8
   899  00FE02  00                 	db	0
   900  00FE03  02                 	db	2
   901  00FE04  09                 	db	9
   902  00FE05  04                 	db	4
   903  00FE06  01                 	db	1
   904  00FE07  00                 	db	0
   905  00FE08  02                 	db	2
   906  00FE09  0A                 	db	10
   907  00FE0A  00                 	db	0
   908  00FE0B  00                 	db	0
   909  00FE0C  00                 	db	0
   910  00FE0D  07                 	db	7
   911  00FE0E  05                 	db	5
   912  00FE0F  02                 	db	2
   913  00FE10  02                 	db	2
   914  00FE11  40                 	db	64
   915  00FE12  00                 	db	0
   916  00FE13  00                 	db	0
   917  00FE14  07                 	db	7
   918  00FE15  05                 	db	5
   919  00FE16  82                 	db	130
   920  00FE17  02                 	db	2
   921  00FE18  40                 	db	64
   922  00FE19  00                 	db	0
   923  00FE1A  00                 	db	0
   924  00FE1B                     __end_of_configDescriptor1:
   925                           	opt stack 0
   926  00FE1B                     _sd002:
   927                           	opt stack 0
   928  00FE1B  26                 	db	38
   929  00FE1C  03                 	db	3
   930  00FE1D  0054               	dw	84
   931  00FE1F  0065               	dw	101
   932  00FE21  0072               	dw	114
   933  00FE23  006D               	dw	109
   934  00FE25  0069               	dw	105
   935  00FE27  006E               	dw	110
   936  00FE29  0061               	dw	97
   937  00FE2B  006C               	dw	108
   938  00FE2D  0020               	dw	32
   939  00FE2F  0049               	dw	73
   940  00FE31  006E               	dw	110
   941  00FE33  0074               	dw	116
   942  00FE35  0065               	dw	101
   943  00FE37  0072               	dw	114
   944  00FE39  0066               	dw	102
   945  00FE3B  0061               	dw	97
   946  00FE3D  0063               	dw	99
   947  00FE3F  0065               	dw	101
   948  00FE41                     __end_of_sd002:
   949                           	opt stack 0
   950  00FE41                     _sd001:
   951                           	opt stack 0
   952  00FE41  1E                 	db	30
   953  00FE42  03                 	db	3
   954  00FE43  004D               	dw	77
   955  00FE45  0065               	dw	101
   956  00FE47  0072               	dw	114
   957  00FE49  0063               	dw	99
   958  00FE4B  0075               	dw	117
   959  00FE4D  0072               	dw	114
   960  00FE4F  0079               	dw	121
   961  00FE51  0020               	dw	32
   962  00FE53  0053               	dw	83
   963  00FE55  0079               	dw	121
   964  00FE57  0073               	dw	115
   965  00FE59  0074               	dw	116
   966  00FE5B  0065               	dw	101
   967  00FE5D  006D               	dw	109
   968  00FE5F                     __end_of_sd001:
   969                           	opt stack 0
   970  00FE5F                     _MsgReady:
   971                           	opt stack 0
   972  00FE5F  0D                 	db	13
   973  00FE60  0A                 	db	10
   974  00FE61  53                 	db	83
   975  00FE62  79                 	db	121
   976  00FE63  73                 	db	115
   977  00FE64  74                 	db	116
   978  00FE65  65                 	db	101
   979  00FE66  6D                 	db	109
   980  00FE67  20                 	db	32
   981  00FE68  52                 	db	82
   982  00FE69  65                 	db	101
   983  00FE6A  61                 	db	97
   984  00FE6B  64                 	db	100
   985  00FE6C  79                 	db	121
   986  00FE6D  2E                 	db	46
   987  00FE6E  2E                 	db	46
   988  00FE6F  2E                 	db	46
   989  00FE70  20                 	db	32
   990  00FE71  0D                 	db	13
   991  00FE72  0A                 	db	10
   992  00FE73  0D                 	db	13
   993  00FE74  0A                 	db	10
   994  00FE75  00                 	db	0
   995  00FE76                     __end_of_MsgReady:
   996                           	opt stack 0
   997  00FE76                     _device_dsc:
   998                           	opt stack 0
   999  00FE76  12                 	db	18
  1000  00FE77  01                 	db	1
  1001  00FE78  0200               	dw	512
  1002  00FE7A  02                 	db	2
  1003  00FE7B  00                 	db	0
  1004  00FE7C  00                 	db	0
  1005  00FE7D  08                 	db	8
  1006  00FE7E  04D8               	dw	1240
  1007  00FE80  000A               	dw	10
  1008  00FE82  0100               	dw	256
  1009  00FE84  01                 	db	1
  1010  00FE85  02                 	db	2
  1011  00FE86  00                 	db	0
  1012  00FE87  01                 	db	1
  1013  00FE88                     __end_of_device_dsc:
  1014                           	opt stack 0
  1015  00FE88                     _sd000:
  1016                           	opt stack 0
  1017  00FE88  04                 	db	4
  1018  00FE89  03                 	db	3
  1019  00FE8A  0409               	dw	1033
  1020  00FE8C                     __end_of_sd000:
  1021                           	opt stack 0
  1022  0000                     _RPINR1	set	3815
  1023  0000                     _UEP0bits	set	3878
  1024  0000                     _UIEbits	set	3894
  1025  0000                     _UADDR	set	3896
  1026  0000                     _UIE	set	3894
  1027  0000                     _UEIE	set	3895
  1028  0000                     _UCFG	set	3897
  1029  0000                     _RTCCAL	set	3902
  1030  0000                     _PADCFG1bits	set	3900
  1031  0000                     _RTCCFGbits	set	3903
  1032  0000                     _DSCONLbits	set	3916
  1033  0000                     _DSGPR1	set	3919
  1034  0000                     _DSGPR0	set	3918
  1035  0000                     _DSCONHbits	set	3917
  1036  0000                     _ANCON1bits	set	3913
  1037  0000                     _UEP1	set	3879
  1038  0000                     _UEP0	set	3878
  1039  0000                     _T1CONbits	set	4045
  1040  0000                     _PORTDbits	set	3971
  1041  0000                     _USTAT	set	3940
  1042  0000                     _PIR2bits	set	4001
  1043  0000                     _UCON	set	3941
  1044  0000                     _UIRbits	set	3938
  1045  0000                     _UCONbits	set	3941
  1046  0000                     _UIR	set	3938
  1047  0000                     _UEIR	set	3939
  1048  0000                     _PIE2bits	set	4000
  1049  0000                     _BAUDCON2	set	3964
  1050  0000                     _RCSTA2	set	3996
  1051  0000                     _BAUDCON1	set	3966
  1052  0000                     _RCSTA1	set	4012
  1053  0000                     _TRISCbits	set	3988
  1054  0000                     _TXSTA2	set	4008
  1055  0000                     _TXSTA1	set	4013
  1056  0000                     _RCREG2	set	4010
  1057  0000                     _RCREG1	set	4015
  1058  0000                     _TXREG2	set	4009
  1059  0000                     _TXREG1	set	4014
  1060  0000                     _SPBRG2	set	4011
  1061  0000                     _SPBRGH2	set	3965
  1062  0000                     _SPBRG1	set	4016
  1063  0000                     _SPBRGH1	set	3967
  1064  0000                     _PR4	set	3959
  1065  0000                     _PR2	set	4043
  1066  0000                     _PIE1bits	set	3997
  1067  0000                     _IPR1bits	set	3999
  1068  0000                     _T4CONbits	set	3958
  1069  0000                     _T2CONbits	set	4042
  1070  0000                     _ALRMVALL	set	3982
  1071  0000                     _ALRMVALH	set	3983
  1072  0000                     _RTCVALH	set	3993
  1073  0000                     _RTCVALL	set	3992
  1074  0000                     _ALRMRPTbits	set	3984
  1075  0000                     _ALRMCFGbits	set	3985
  1076  0000                     _PIE3bits	set	4003
  1077  0000                     _IPR3bits	set	4005
  1078  0000                     _OSCCONbits	set	4051
  1079  0000                     _PORTEbits	set	3972
  1080  0000                     _TRISEbits	set	3990
  1081  0000                     _WDTCONbits	set	4032
  1082  0000                     _INTCON2bits	set	4081
  1083  0000                     _TRISBbits	set	3987
  1084  0000                     _OSCTUNEbits	set	3995
  1085  0000                     _SSP2CON1	set	3954
  1086  0000                     _TRISDbits	set	3989
  1087  0000                     _SSP2BUF	set	3957
  1088  0000                     _SSP2CON2bits	set	3953
  1089  0000                     _SSP2STAT	set	3955
  1090  0000                     _SSP2CON2	set	3953
  1091  0000                     _SSP2ADD	set	3956
  1092  0000                     _PIR1bits	set	3998
  1093  0000                     _PIR3bits	set	4004
  1094  0000                     _INTCON3bits	set	4080
  1095  0000                     _INTCONbits	set	4082
  1096  0000                     _RCONbits	set	4048
  1097  00FE8C                     STR_21:
  1098  00FE8C  20                 	db	32
  1099  00FE8D  4C                 	db	76	;'L'
  1100  00FE8E  61                 	db	97	;'a'
  1101  00FE8F  7A                 	db	122	;'z'
  1102  00FE90  79                 	db	121	;'y'
  1103  00FE91  20                 	db	32
  1104  00FE92  64                 	db	100	;'d'
  1105  00FE93  65                 	db	101	;'e'
  1106  00FE94  76                 	db	118	;'v'
  1107  00FE95  69                 	db	105	;'i'
  1108  00FE96  63                 	db	99	;'c'
  1109  00FE97  65                 	db	101	;'e'
  1110  00FE98  2E                 	db	46
  1111  00FE99  2E                 	db	46
  1112  00FE9A  2E                 	db	46
  1113  00FE9B  79                 	db	121	;'y'
  1114  00FE9C  6F                 	db	111	;'o'
  1115  00FE9D  75                 	db	117	;'u'
  1116  00FE9E  27                 	db	39
  1117  00FE9F  76                 	db	118	;'v'
  1118  00FEA0  65                 	db	101	;'e'
  1119  00FEA1  20                 	db	32
  1120  00FEA2  62                 	db	98	;'b'
  1121  00FEA3  65                 	db	101	;'e'
  1122  00FEA4  65                 	db	101	;'e'
  1123  00FEA5  6E                 	db	110	;'n'
  1124  00FEA6  20                 	db	32
  1125  00FEA7  74                 	db	116	;'t'
  1126  00FEA8  69                 	db	105	;'i'
  1127  00FEA9  6D                 	db	109	;'m'
  1128  00FEAA  65                 	db	101	;'e'
  1129  00FEAB  64                 	db	100	;'d'
  1130  00FEAC  2D                 	db	45
  1131  00FEAD  6F                 	db	111	;'o'
  1132  00FEAE  75                 	db	117	;'u'
  1133  00FEAF  74                 	db	116	;'t'
  1134  00FEB0  21                 	db	33
  1135  00FEB1  21                 	db	33
  1136  00FEB2  21                 	db	33
  1137  00FEB3  0D                 	db	13
  1138  00FEB4  0A                 	db	10
  1139  00FEB5  00                 	db	0
  1140  00FEB6                     STR_8:
  1141  00FEB6  41                 	db	65	;'A'
  1142  00FEB7  54                 	db	84	;'T'
  1143  00FEB8  2B                 	db	43
  1144  00FEB9  53                 	db	83	;'S'
  1145  00FEBA  41                 	db	65	;'A'
  1146  00FEBB  50                 	db	80	;'P'
  1147  00FEBC  42                 	db	66	;'B'
  1148  00FEBD  52                 	db	82	;'R'
  1149  00FEBE  3D                 	db	61	;'='
  1150  00FEBF  33                 	db	51	;'3'
  1151  00FEC0  2C                 	db	44
  1152  00FEC1  31                 	db	49	;'1'
  1153  00FEC2  2C                 	db	44
  1154  00FEC3  22                 	db	34
  1155  00FEC4  43                 	db	67	;'C'
  1156  00FEC5  6F                 	db	111	;'o'
  1157  00FEC6  6E                 	db	110	;'n'
  1158  00FEC7  74                 	db	116	;'t'
  1159  00FEC8  79                 	db	121	;'y'
  1160  00FEC9  70                 	db	112	;'p'
  1161  00FECA  65                 	db	101	;'e'
  1162  00FECB  22                 	db	34
  1163  00FECC  2C                 	db	44
  1164  00FECD  22                 	db	34
  1165  00FECE  47                 	db	71	;'G'
  1166  00FECF  50                 	db	80	;'P'
  1167  00FED0  52                 	db	82	;'R'
  1168  00FED1  53                 	db	83	;'S'
  1169  00FED2  22                 	db	34
  1170  00FED3  0D                 	db	13
  1171  00FED4  00                 	db	0
  1172  00FED5                     STR_14:
  1173  00FED5  41                 	db	65	;'A'
  1174  00FED6  54                 	db	84	;'T'
  1175  00FED7  2B                 	db	43
  1176  00FED8  48                 	db	72	;'H'
  1177  00FED9  54                 	db	84	;'T'
  1178  00FEDA  54                 	db	84	;'T'
  1179  00FEDB  50                 	db	80	;'P'
  1180  00FEDC  50                 	db	80	;'P'
  1181  00FEDD  41                 	db	65	;'A'
  1182  00FEDE  52                 	db	82	;'R'
  1183  00FEDF  41                 	db	65	;'A'
  1184  00FEE0  3D                 	db	61	;'='
  1185  00FEE1  22                 	db	34
  1186  00FEE2  43                 	db	67	;'C'
  1187  00FEE3  49                 	db	73	;'I'
  1188  00FEE4  44                 	db	68	;'D'
  1189  00FEE5  22                 	db	34
  1190  00FEE6  2C                 	db	44
  1191  00FEE7  31                 	db	49	;'1'
  1192  00FEE8  0D                 	db	13
  1193  00FEE9  00                 	db	0
  1194  00FEEA                     STR_9:
  1195  00FEEA  41                 	db	65	;'A'
  1196  00FEEB  54                 	db	84	;'T'
  1197  00FEEC  2B                 	db	43
  1198  00FEED  53                 	db	83	;'S'
  1199  00FEEE  41                 	db	65	;'A'
  1200  00FEEF  50                 	db	80	;'P'
  1201  00FEF0  42                 	db	66	;'B'
  1202  00FEF1  52                 	db	82	;'R'
  1203  00FEF2  3D                 	db	61	;'='
  1204  00FEF3  33                 	db	51	;'3'
  1205  00FEF4  2C                 	db	44
  1206  00FEF5  31                 	db	49	;'1'
  1207  00FEF6  2C                 	db	44
  1208  00FEF7  22                 	db	34
  1209  00FEF8  41                 	db	65	;'A'
  1210  00FEF9  50                 	db	80	;'P'
  1211  00FEFA  4E                 	db	78	;'N'
  1212  00FEFB  22                 	db	34
  1213  00FEFC  2C                 	db	44
  1214  00FEFD  22                 	db	34
  1215  00FEFE  00                 	db	0
  1216  00FEFF                     STR_23:
  1217  00FEFF  46                 	db	70	;'F'
  1218  00FF00  72                 	db	114	;'r'
  1219  00FF01  61                 	db	97	;'a'
  1220  00FF02  6D                 	db	109	;'m'
  1221  00FF03  65                 	db	101	;'e'
  1222  00FF04  77                 	db	119	;'w'
  1223  00FF05  6F                 	db	111	;'o'
  1224  00FF06  72                 	db	114	;'r'
  1225  00FF07  6B                 	db	107	;'k'
  1226  00FF08  20                 	db	32
  1227  00FF09  56                 	db	86	;'V'
  1228  00FF0A  65                 	db	101	;'e'
  1229  00FF0B  72                 	db	114	;'r'
  1230  00FF0C  73                 	db	115	;'s'
  1231  00FF0D  69                 	db	105	;'i'
  1232  00FF0E  6F                 	db	111	;'o'
  1233  00FF0F  6E                 	db	110	;'n'
  1234  00FF10  3A                 	db	58	;':'
  1235  00FF11  20                 	db	32
  1236  00FF12  00                 	db	0
  1237  00FF13                     STR_15:
  1238  00FF13  41                 	db	65	;'A'
  1239  00FF14  54                 	db	84	;'T'
  1240  00FF15  2B                 	db	43
  1241  00FF16  48                 	db	72	;'H'
  1242  00FF17  54                 	db	84	;'T'
  1243  00FF18  54                 	db	84	;'T'
  1244  00FF19  50                 	db	80	;'P'
  1245  00FF1A  50                 	db	80	;'P'
  1246  00FF1B  41                 	db	65	;'A'
  1247  00FF1C  52                 	db	82	;'R'
  1248  00FF1D  41                 	db	65	;'A'
  1249  00FF1E  3D                 	db	61	;'='
  1250  00FF1F  22                 	db	34
  1251  00FF20  55                 	db	85	;'U'
  1252  00FF21  52                 	db	82	;'R'
  1253  00FF22  4C                 	db	76	;'L'
  1254  00FF23  22                 	db	34
  1255  00FF24  2C                 	db	44
  1256  00FF25  22                 	db	34
  1257  00FF26  00                 	db	0
  1258  00FF27                     STR_27:
  1259  00FF27  42                 	db	66	;'B'
  1260  00FF28  75                 	db	117	;'u'
  1261  00FF29  69                 	db	105	;'i'
  1262  00FF2A  6C                 	db	108	;'l'
  1263  00FF2B  64                 	db	100	;'d'
  1264  00FF2C  20                 	db	32
  1265  00FF2D  44                 	db	68	;'D'
  1266  00FF2E  61                 	db	97	;'a'
  1267  00FF2F  74                 	db	116	;'t'
  1268  00FF30  65                 	db	101	;'e'
  1269  00FF31  3A                 	db	58	;':'
  1270  00FF32  20                 	db	32
  1271  00FF33  25                 	db	37
  1272  00FF34  73                 	db	115	;'s'
  1273  00FF35  0D                 	db	13
  1274  00FF36  0A                 	db	10
  1275  00FF37  00                 	db	0
  1276  00FF38                     STR_16:
  1277  00FF38  41                 	db	65	;'A'
  1278  00FF39  54                 	db	84	;'T'
  1279  00FF3A  2B                 	db	43
  1280  00FF3B  48                 	db	72	;'H'
  1281  00FF3C  54                 	db	84	;'T'
  1282  00FF3D  54                 	db	84	;'T'
  1283  00FF3E  50                 	db	80	;'P'
  1284  00FF3F  41                 	db	65	;'A'
  1285  00FF40  43                 	db	67	;'C'
  1286  00FF41  54                 	db	84	;'T'
  1287  00FF42  49                 	db	73	;'I'
  1288  00FF43  4F                 	db	79	;'O'
  1289  00FF44  4E                 	db	78	;'N'
  1290  00FF45  3D                 	db	61	;'='
  1291  00FF46  30                 	db	48	;'0'
  1292  00FF47  0D                 	db	13
  1293  00FF48  00                 	db	0
  1294  00FF49  41                 	db	65	;'A'
  1295  00FF4A  54                 	db	84	;'T'
  1296  00FF4B  2B                 	db	43
  1297  00FF4C  48                 	db	72	;'H'
  1298  00FF4D  54                 	db	84	;'T'
  1299  00FF4E  54                 	db	84	;'T'
  1300  00FF4F  50                 	db	80	;'P'
  1301  00FF50  53                 	db	83	;'S'
  1302  00FF51  53                 	db	83	;'S'
  1303  00FF52  4C                 	db	76	;'L'
  1304  00FF53  3D                 	db	61	;'='
  1305  00FF54  30                 	db	48	;'0'
  1306  00FF55  0D                 	db	13
  1307  00FF56  00                 	db	0
  1308  00FF57                     STR_10:
  1309  00FF57  41                 	db	65	;'A'
  1310  00FF58  54                 	db	84	;'T'
  1311  00FF59  2B                 	db	43
  1312  00FF5A  53                 	db	83	;'S'
  1313  00FF5B  41                 	db	65	;'A'
  1314  00FF5C  50                 	db	80	;'P'
  1315  00FF5D  42                 	db	66	;'B'
  1316  00FF5E  52                 	db	82	;'R'
  1317  00FF5F  3D                 	db	61	;'='
  1318  00FF60  31                 	db	49	;'1'
  1319  00FF61  2C                 	db	44
  1320  00FF62  31                 	db	49	;'1'
  1321  00FF63  0D                 	db	13
  1322  00FF64  00                 	db	0
  1323  00FF65                     STR_11:
  1324  00FF65  41                 	db	65	;'A'
  1325  00FF66  54                 	db	84	;'T'
  1326  00FF67  2B                 	db	43
  1327  00FF68  53                 	db	83	;'S'
  1328  00FF69  41                 	db	65	;'A'
  1329  00FF6A  50                 	db	80	;'P'
  1330  00FF6B  42                 	db	66	;'B'
  1331  00FF6C  52                 	db	82	;'R'
  1332  00FF6D  3D                 	db	61	;'='
  1333  00FF6E  32                 	db	50	;'2'
  1334  00FF6F  2C                 	db	44
  1335  00FF70  31                 	db	49	;'1'
  1336  00FF71  0D                 	db	13
  1337  00FF72  00                 	db	0
  1338  00FF73                     STR_13:
  1339  00FF73  41                 	db	65	;'A'
  1340  00FF74  54                 	db	84	;'T'
  1341  00FF75  2B                 	db	43
  1342  00FF76  48                 	db	72	;'H'
  1343  00FF77  54                 	db	84	;'T'
  1344  00FF78  54                 	db	84	;'T'
  1345  00FF79  50                 	db	80	;'P'
  1346  00FF7A  53                 	db	83	;'S'
  1347  00FF7B  53                 	db	83	;'S'
  1348  00FF7C  4C                 	db	76	;'L'
  1349  00FF7D  3D                 	db	61	;'='
  1350  00FF7E  31                 	db	49	;'1'
  1351  00FF7F  0D                 	db	13
  1352  00FF80  00                 	db	0
  1353  00FF81                     STR_2:
  1354  00FF81  41                 	db	65	;'A'
  1355  00FF82  54                 	db	84	;'T'
  1356  00FF83  2B                 	db	43
  1357  00FF84  49                 	db	73	;'I'
  1358  00FF85  50                 	db	80	;'P'
  1359  00FF86  52                 	db	82	;'R'
  1360  00FF87  3D                 	db	61	;'='
  1361  00FF88  39                 	db	57	;'9'
  1362  00FF89  36                 	db	54	;'6'
  1363  00FF8A  30                 	db	48	;'0'
  1364  00FF8B  30                 	db	48	;'0'
  1365  00FF8C  0D                 	db	13
  1366  00FF8D  0A                 	db	10
  1367  00FF8E  00                 	db	0
  1368  00FF8F                     STR_17:
  1369  00FF8F  41                 	db	65	;'A'
  1370  00FF90  54                 	db	84	;'T'
  1371  00FF91  2B                 	db	43
  1372  00FF92  48                 	db	72	;'H'
  1373  00FF93  54                 	db	84	;'T'
  1374  00FF94  54                 	db	84	;'T'
  1375  00FF95  50                 	db	80	;'P'
  1376  00FF96  52                 	db	82	;'R'
  1377  00FF97  45                 	db	69	;'E'
  1378  00FF98  41                 	db	65	;'A'
  1379  00FF99  44                 	db	68	;'D'
  1380  00FF9A  0D                 	db	13
  1381  00FF9B  00                 	db	0
  1382  00FF9C                     STR_18:
  1383  00FF9C  41                 	db	65	;'A'
  1384  00FF9D  54                 	db	84	;'T'
  1385  00FF9E  2B                 	db	43
  1386  00FF9F  48                 	db	72	;'H'
  1387  00FFA0  54                 	db	84	;'T'
  1388  00FFA1  54                 	db	84	;'T'
  1389  00FFA2  50                 	db	80	;'P'
  1390  00FFA3  54                 	db	84	;'T'
  1391  00FFA4  45                 	db	69	;'E'
  1392  00FFA5  52                 	db	82	;'R'
  1393  00FFA6  4D                 	db	77	;'M'
  1394  00FFA7  0D                 	db	13
  1395  00FFA8  00                 	db	0
  1396  00FFA9                     STR_12:
  1397  00FFA9  41                 	db	65	;'A'
  1398  00FFAA  54                 	db	84	;'T'
  1399  00FFAB  2B                 	db	43
  1400  00FFAC  48                 	db	72	;'H'
  1401  00FFAD  54                 	db	84	;'T'
  1402  00FFAE  54                 	db	84	;'T'
  1403  00FFAF  50                 	db	80	;'P'
  1404  00FFB0  49                 	db	73	;'I'
  1405  00FFB1  4E                 	db	78	;'N'
  1406  00FFB2  49                 	db	73	;'I'
  1407  00FFB3  54                 	db	84	;'T'
  1408  00FFB4  0D                 	db	13
  1409  00FFB5  00                 	db	0
  1410  00FFB6                     STR_28:
  1411  00FFB6  4D                 	db	77	;'M'
  1412  00FFB7  61                 	db	97	;'a'
  1413  00FFB8  72                 	db	114	;'r'
  1414  00FFB9  20                 	db	32
  1415  00FFBA  31                 	db	49	;'1'
  1416  00FFBB  33                 	db	51	;'3'
  1417  00FFBC  20                 	db	32
  1418  00FFBD  32                 	db	50	;'2'
  1419  00FFBE  30                 	db	48	;'0'
  1420  00FFBF  32                 	db	50	;'2'
  1421  00FFC0  32                 	db	50	;'2'
  1422  00FFC1  00                 	db	0
  1423  00FFC2                     STR_4:
  1424  00FFC2  41                 	db	65	;'A'
  1425  00FFC3  54                 	db	84	;'T'
  1426  00FFC4  2B                 	db	43
  1427  00FFC5  43                 	db	67	;'C'
  1428  00FFC6  4D                 	db	77	;'M'
  1429  00FFC7  47                 	db	71	;'G'
  1430  00FFC8  52                 	db	82	;'R'
  1431  00FFC9  3D                 	db	61	;'='
  1432  00FFCA  31                 	db	49	;'1'
  1433  00FFCB  0D                 	db	13
  1434  00FFCC  00                 	db	0
  1435  00FFCD                     STR_5:
  1436  00FFCD  41                 	db	65	;'A'
  1437  00FFCE  54                 	db	84	;'T'
  1438  00FFCF  2B                 	db	43
  1439  00FFD0  43                 	db	67	;'C'
  1440  00FFD1  4D                 	db	77	;'M'
  1441  00FFD2  47                 	db	71	;'G'
  1442  00FFD3  53                 	db	83	;'S'
  1443  00FFD4  3D                 	db	61	;'='
  1444  00FFD5  22                 	db	34
  1445  00FFD6  00                 	db	0
  1446  00FFD7                     STR_29:
  1447  00FFD7  28                 	db	40
  1448  00FFD8  6E                 	db	110	;'n'
  1449  00FFD9  75                 	db	117	;'u'
  1450  00FFDA  6C                 	db	108	;'l'
  1451  00FFDB  6C                 	db	108	;'l'
  1452  00FFDC  29                 	db	41
  1453  00FFDD  00                 	db	0
  1454  00FFDE                     STR_3:
  1455  00FFDE  41                 	db	65	;'A'
  1456  00FFDF  54                 	db	84	;'T'
  1457  00FFE0  45                 	db	69	;'E'
  1458  00FFE1  30                 	db	48	;'0'
  1459  00FFE2  0D                 	db	13
  1460  00FFE3  0A                 	db	10
  1461  00FFE4  00                 	db	0
  1462  00FFE5                     STR_1:
  1463  00FFE5  41                 	db	65	;'A'
  1464  00FFE6  54                 	db	84	;'T'
  1465  00FFE7  0D                 	db	13
  1466  00FFE8  0A                 	db	10
  1467  00FFE9  00                 	db	0
  1468  00FFEA  41                 	db	65	;'A'
  1469  00FFEB  54                 	db	84	;'T'
  1470  00FFEC  41                 	db	65	;'A'
  1471  00FFED  0D                 	db	13
  1472  00FFEE  00                 	db	0
  1473  00FFEF  41                 	db	65	;'A'
  1474  00FFF0  54                 	db	84	;'T'
  1475  00FFF1  48                 	db	72	;'H'
  1476  00FFF2  0D                 	db	13
  1477  00FFF3  00                 	db	0
  1478  00FFF4                     STR_24:
  1479  00FFF4  2E                 	db	46
  1480  00FFF5  00                 	db	0
  1481  0000                     
  1482                           ; #config settings
  1483  00FFF6  00                 	db	0	; dummy byte at the end
  1484  0000                     
  1485                           	psect	cinit
  1486  00268A                     __pcinit:
  1487                           	opt stack 0
  1488  00268A                     start_initialization:
  1489                           	opt stack 0
  1490  00268A                     __initialization:
  1491                           	opt stack 0
  1492                           
  1493                           ; Initialize objects allocated to BANK5 (80 bytes)
  1494                           ; load TBLPTR registers with __pidataBANK5
  1495  00268A  0E7C               	movlw	low __pidataBANK5
  1496  00268C  6EF6               	movwf	tblptrl,c
  1497  00268E  0E52               	movlw	high __pidataBANK5
  1498  002690  6EF7               	movwf	tblptrh,c
  1499  002692  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1500  002694  6EF8               	movwf	tblptru,c
  1501  002696  EE05  F082         	lfsr	0,__pdataBANK5
  1502  00269A  EE10 F050          	lfsr	1,80
  1503  00269E                     copy_data0:
  1504  00269E  0009               	tblrd		*+
  1505  0026A0  CFF5 FFEE          	movff	tablat,postinc0
  1506  0026A4  50E5               	movf	postdec1,w,c
  1507  0026A6  50E1               	movf	fsr1l,w,c
  1508  0026A8  E1FA               	bnz	copy_data0
  1509                           
  1510                           ; Initialize objects allocated to BANK3 (63 bytes)
  1511                           ; load TBLPTR registers with __pidataBANK3
  1512  0026AA  0E42               	movlw	low __pidataBANK3
  1513  0026AC  6EF6               	movwf	tblptrl,c
  1514  0026AE  0E57               	movlw	high __pidataBANK3
  1515  0026B0  6EF7               	movwf	tblptrh,c
  1516  0026B2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1517  0026B4  6EF8               	movwf	tblptru,c
  1518  0026B6  EE03  F0BB         	lfsr	0,__pdataBANK3
  1519  0026BA  EE10 F03F          	lfsr	1,63
  1520  0026BE                     copy_data1:
  1521  0026BE  0009               	tblrd		*+
  1522  0026C0  CFF5 FFEE          	movff	tablat,postinc0
  1523  0026C4  50E5               	movf	postdec1,w,c
  1524  0026C6  50E1               	movf	fsr1l,w,c
  1525  0026C8  E1FA               	bnz	copy_data1
  1526                           
  1527                           ; Initialize objects allocated to BANK2 (13 bytes)
  1528                           ; load TBLPTR registers with __pidataBANK2
  1529  0026CA  0EA8               	movlw	low __pidataBANK2
  1530  0026CC  6EF6               	movwf	tblptrl,c
  1531  0026CE  0E5F               	movlw	high __pidataBANK2
  1532  0026D0  6EF7               	movwf	tblptrh,c
  1533  0026D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1534  0026D4  6EF8               	movwf	tblptru,c
  1535  0026D6  EE02  F0F3         	lfsr	0,__pdataBANK2
  1536  0026DA  EE10 F00D          	lfsr	1,13
  1537  0026DE                     copy_data2:
  1538  0026DE  0009               	tblrd		*+
  1539  0026E0  CFF5 FFEE          	movff	tablat,postinc0
  1540  0026E4  50E5               	movf	postdec1,w,c
  1541  0026E6  50E1               	movf	fsr1l,w,c
  1542  0026E8  E1FA               	bnz	copy_data2
  1543                           
  1544                           ; Initialize objects allocated to BANK1 (2 bytes)
  1545                           ; load TBLPTR registers with __pidataBANK1
  1546  0026EA  0E24               	movlw	low __pidataBANK1
  1547  0026EC  6EF6               	movwf	tblptrl,c
  1548  0026EE  0E60               	movlw	high __pidataBANK1
  1549  0026F0  6EF7               	movwf	tblptrh,c
  1550  0026F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1551  0026F4  6EF8               	movwf	tblptru,c
  1552  0026F6  0009               	tblrd		*+	;fetch initializer
  1553  0026F8  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1554  0026FC  0009               	tblrd		*+	;fetch initializer
  1555  0026FE  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1556                           
  1557                           ; Initialize objects allocated to BANK4 (20 bytes)
  1558                           ; load TBLPTR registers with __pidataBANK4
  1559  002702  0EFE               	movlw	low __pidataBANK4
  1560  002704  6EF6               	movwf	tblptrl,c
  1561  002706  0E5E               	movlw	high __pidataBANK4
  1562  002708  6EF7               	movwf	tblptrh,c
  1563  00270A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1564  00270C  6EF8               	movwf	tblptru,c
  1565  00270E  EE04  F0E5         	lfsr	0,__pdataBANK4
  1566  002712  EE10 F014          	lfsr	1,20
  1567  002716                     copy_data3:
  1568  002716  0009               	tblrd		*+
  1569  002718  CFF5 FFEE          	movff	tablat,postinc0
  1570  00271C  50E5               	movf	postdec1,w,c
  1571  00271E  50E1               	movf	fsr1l,w,c
  1572  002720  E1FA               	bnz	copy_data3
  1573                           
  1574                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1575  002722  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1576  002726  EE13 F020          	lfsr	1,800
  1577  00272A                     clear_0:
  1578  00272A  6AEE               	clrf	postinc0,c
  1579  00272C  50E5               	movf	postdec1,w,c
  1580  00272E  50E1               	movf	fsr1l,w,c
  1581  002730  E1FC               	bnz	clear_0
  1582  002732  50E2               	movf	fsr1h,w,c
  1583  002734  E1FA               	bnz	clear_0
  1584                           
  1585                           ; Clear objects allocated to BANK9 (200 bytes)
  1586  002736  EE09  F000         	lfsr	0,__pbssBANK9
  1587  00273A  0EC8               	movlw	200
  1588  00273C                     clear_1:
  1589  00273C  6AEE               	clrf	postinc0,c
  1590  00273E  06E8               	decf	wreg,f,c
  1591  002740  E1FD               	bnz	clear_1
  1592                           
  1593                           ; Clear objects allocated to BANK8 (200 bytes)
  1594  002742  EE08  F000         	lfsr	0,__pbssBANK8
  1595  002746  0EC8               	movlw	200
  1596  002748                     clear_2:
  1597  002748  6AEE               	clrf	postinc0,c
  1598  00274A  06E8               	decf	wreg,f,c
  1599  00274C  E1FD               	bnz	clear_2
  1600                           
  1601                           ; Clear objects allocated to BANK7 (246 bytes)
  1602  00274E  EE07  F000         	lfsr	0,__pbssBANK7
  1603  002752  0EF6               	movlw	246
  1604  002754                     clear_3:
  1605  002754  6AEE               	clrf	postinc0,c
  1606  002756  06E8               	decf	wreg,f,c
  1607  002758  E1FD               	bnz	clear_3
  1608                           
  1609                           ; Clear objects allocated to BANK6 (220 bytes)
  1610  00275A  EE06  F000         	lfsr	0,__pbssBANK6
  1611  00275E  0EDC               	movlw	220
  1612  002760                     clear_4:
  1613  002760  6AEE               	clrf	postinc0,c
  1614  002762  06E8               	decf	wreg,f,c
  1615  002764  E1FD               	bnz	clear_4
  1616                           
  1617                           ; Clear objects allocated to BANK5 (130 bytes)
  1618  002766  EE05  F000         	lfsr	0,__pbssBANK5
  1619  00276A  0E82               	movlw	130
  1620  00276C                     clear_5:
  1621  00276C  6AEE               	clrf	postinc0,c
  1622  00276E  06E8               	decf	wreg,f,c
  1623  002770  E1FD               	bnz	clear_5
  1624                           
  1625                           ; Clear objects allocated to BANK3 (187 bytes)
  1626  002772  EE03  F000         	lfsr	0,__pbssBANK3
  1627  002776  0EBB               	movlw	187
  1628  002778                     clear_6:
  1629  002778  6AEE               	clrf	postinc0,c
  1630  00277A  06E8               	decf	wreg,f,c
  1631  00277C  E1FD               	bnz	clear_6
  1632                           
  1633                           ; Clear objects allocated to BANK2 (43 bytes)
  1634  00277E  EE02  F0C8         	lfsr	0,__pbssBANK2
  1635  002782  0E2B               	movlw	43
  1636  002784                     clear_7:
  1637  002784  6AEE               	clrf	postinc0,c
  1638  002786  06E8               	decf	wreg,f,c
  1639  002788  E1FD               	bnz	clear_7
  1640                           
  1641                           ; Clear objects allocated to BANK1 (52 bytes)
  1642  00278A  EE01  F0C9         	lfsr	0,__pbssBANK1
  1643  00278E  0E34               	movlw	52
  1644  002790                     clear_8:
  1645  002790  6AEE               	clrf	postinc0,c
  1646  002792  06E8               	decf	wreg,f,c
  1647  002794  E1FD               	bnz	clear_8
  1648                           
  1649                           ; Clear objects allocated to BANK4 (165 bytes)
  1650  002796  EE04  F040         	lfsr	0,__pbssBANK4
  1651  00279A  0EA5               	movlw	165
  1652  00279C                     clear_9:
  1653  00279C  6AEE               	clrf	postinc0,c
  1654  00279E  06E8               	decf	wreg,f,c
  1655  0027A0  E1FD               	bnz	clear_9
  1656                           
  1657                           ; Clear objects allocated to BANK0 (51 bytes)
  1658  0027A2  EE00  F0AC         	lfsr	0,__pbssBANK0
  1659  0027A6  0E33               	movlw	51
  1660  0027A8                     clear_10:
  1661  0027A8  6AEE               	clrf	postinc0,c
  1662  0027AA  06E8               	decf	wreg,f,c
  1663  0027AC  E1FD               	bnz	clear_10
  1664                           
  1665                           ; Clear objects allocated to COMRAM (31 bytes)
  1666  0027AE  EE00  F023         	lfsr	0,__pbssCOMRAM
  1667  0027B2  0E1F               	movlw	31
  1668  0027B4                     clear_11:
  1669  0027B4  6AEE               	clrf	postinc0,c
  1670  0027B6  06E8               	decf	wreg,f,c
  1671  0027B8  E1FD               	bnz	clear_11
  1672  0027BA                     end_of_initialization:
  1673                           	opt stack 0
  1674  0027BA                     __end_of__initialization:
  1675                           	opt stack 0
  1676  0027BA  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1677  0027BC  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1678  0027BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1679  0027C0  6EF8               	movwf	tblptru,c
  1680  0027C2  0100               	movlb	0
  1681  0027C4  EFDB  F02F         	goto	_main	;jump to C main() function
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           postdec1	equ	0xFE5
  1689                           fsr1h	equ	0xFE2
  1690                           fsr1l	equ	0xFE1
  1691                           
  1692                           	psect	bssCOMRAM
  1693  000023                     __pbssCOMRAM:
  1694                           	opt stack 0
  1695  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1696                           	opt stack 0
  1697  000023                     	ds	2
  1698  000025                     _USBDeferOUTDataStagePackets:
  1699                           	opt stack 0
  1700  000025                     	ds	1
  1701  000026                     GetSmsSm@GetSmsState:
  1702                           	opt stack 0
  1703  000026                     	ds	1
  1704  000027                     ConfigureModem@NextState:
  1705                           	opt stack 0
  1706  000027                     	ds	1
  1707  000028                     ConfigureModem@MdmConfigState:
  1708                           	opt stack 0
  1709  000028                     	ds	1
  1710  000029                     TurnOnModem@TurnOnMdmState:
  1711                           	opt stack 0
  1712  000029                     	ds	1
  1713  00002A                     CheckModem@CheckMdmSts:
  1714                           	opt stack 0
  1715  00002A                     	ds	1
  1716  00002B                     _ComChecCompleted:
  1717                           	opt stack 0
  1718  00002B                     	ds	1
  1719  00002C                     Uart_Uart1RxIsr@UartRxData:
  1720                           	opt stack 0
  1721  00002C                     	ds	1
  1722  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1723                           	opt stack 0
  1724  00002D                     	ds	1
  1725  00002E                     MdmCntSm@MdmCntState:
  1726                           	opt stack 0
  1727  00002E                     	ds	1
  1728  00002F                     RiSm@MdmDrvState:
  1729                           	opt stack 0
  1730  00002F                     	ds	1
  1731  000030                     _Mmd_RingIndicator:
  1732                           	opt stack 0
  1733  000030                     	ds	1
  1734  000031                     I2c_ReadData@ReadStatus:
  1735                           	opt stack 0
  1736  000031                     	ds	1
  1737  000032                     I2c_ReadData@TentativeCounter:
  1738                           	opt stack 0
  1739  000032                     	ds	1
  1740  000033                     I2c_ReadData@DataCounter:
  1741                           	opt stack 0
  1742  000033                     	ds	1
  1743  000034                     I2c_ReadData@I2cReadState:
  1744                           	opt stack 0
  1745  000034                     	ds	1
  1746  000035                     I2c_WriteData@WriteStatus:
  1747                           	opt stack 0
  1748  000035                     	ds	1
  1749  000036                     I2c_WriteData@TentativeCounter:
  1750                           	opt stack 0
  1751  000036                     	ds	1
  1752  000037                     I2c_WriteData@I2cNextState:
  1753                           	opt stack 0
  1754  000037                     	ds	1
  1755  000038                     I2c_WriteData@I2cWriteState:
  1756                           	opt stack 0
  1757  000038                     	ds	1
  1758  000039                     _MdmStsReady:
  1759                           	opt stack 0
  1760  000039                     	ds	1
  1761  00003A                     _NewStringMdmTerminal:
  1762                           	opt stack 0
  1763  00003A                     	ds	1
  1764  00003B                     _NewMdmEvtParserRequest:
  1765                           	opt stack 0
  1766  00003B                     	ds	1
  1767  00003C                     _NewStringReceived:
  1768                           	opt stack 0
  1769  00003C                     	ds	1
  1770  00003D                     _MdmResetRequest:
  1771                           	opt stack 0
  1772  00003D                     	ds	1
  1773  00003E                     _CallClosedEvent:
  1774                           	opt stack 0
  1775  00003E                     	ds	1
  1776  00003F                     _IncomingCallEvent:
  1777                           	opt stack 0
  1778  00003F                     	ds	1
  1779  000040                     _NewSmsEvent:
  1780                           	opt stack 0
  1781  000040                     	ds	1
  1782  000041                     _ActivateRiDetection:
  1783                           	opt stack 0
  1784  000041                     	ds	1
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           
  1795                           	psect	bssBANK0
  1796  0000AC                     __pbssBANK0:
  1797                           	opt stack 0
  1798  0000AC                     _inPipes:
  1799                           	opt stack 0
  1800  0000AC                     	ds	6
  1801  0000B2                     _pBDTEntryIn:
  1802                           	opt stack 0
  1803  0000B2                     	ds	6
  1804  0000B8                     _CDCDataOutHandle:
  1805                           	opt stack 0
  1806  0000B8                     	ds	2
  1807  0000BA                     _pBDTEntryEP0OutNext:
  1808                           	opt stack 0
  1809  0000BA                     	ds	2
  1810  0000BC                     _pBDTEntryEP0OutCurrent:
  1811                           	opt stack 0
  1812  0000BC                     	ds	2
  1813  0000BE                     _RxLen:
  1814                           	opt stack 0
  1815  0000BE                     	ds	2
  1816  0000C0                     _cdc_tx_len:
  1817                           	opt stack 0
  1818  0000C0                     	ds	1
  1819  0000C1                     _cdc_trf_state:
  1820                           	opt stack 0
  1821  0000C1                     	ds	1
  1822  0000C2                     _cdc_rx_len:
  1823                           	opt stack 0
  1824  0000C2                     	ds	1
  1825  0000C3                     _USBDeferINDataStagePackets:
  1826                           	opt stack 0
  1827  0000C3                     	ds	1
  1828  0000C4                     _USBStatusStageEnabledFlag2:
  1829                           	opt stack 0
  1830  0000C4                     	ds	1
  1831  0000C5                     _USBStatusStageEnabledFlag1:
  1832                           	opt stack 0
  1833  0000C5                     	ds	1
  1834  0000C6                     _USBDeferStatusStagePacket:
  1835                           	opt stack 0
  1836  0000C6                     	ds	1
  1837  0000C7                     _USBStatusStageTimeoutCounter:
  1838                           	opt stack 0
  1839  0000C7                     	ds	1
  1840  0000C8                     _endpoint_number:
  1841                           	opt stack 0
  1842  0000C8                     	ds	1
  1843  0000C9                     _controlTransferState:
  1844                           	opt stack 0
  1845  0000C9                     	ds	1
  1846  0000CA                     _shortPacketStatus:
  1847                           	opt stack 0
  1848  0000CA                     	ds	1
  1849  0000CB                     _USBDeviceState:
  1850                           	opt stack 0
  1851  0000CB                     	ds	1
  1852  0000CC                     _I2cComSts:
  1853                           	opt stack 0
  1854  0000CC                     	ds	1
  1855  0000CD                     HttpGetMethod@GetMethodNextState:
  1856                           	opt stack 0
  1857  0000CD                     	ds	1
  1858  0000CE                     InitGprsNetwork@GprsNetInitNextState:
  1859                           	opt stack 0
  1860  0000CE                     	ds	1
  1861  0000CF                     _MdmStatus:
  1862                           	opt stack 0
  1863  0000CF                     	ds	1
  1864  0000D0                     _PhoneNumbLen:
  1865                           	opt stack 0
  1866  0000D0                     	ds	1
  1867  0000D1                     _SmsLen:
  1868                           	opt stack 0
  1869  0000D1                     	ds	1
  1870  0000D2                     _SystemState:
  1871                           	opt stack 0
  1872  0000D2                     	ds	1
  1873  0000D3                     _USTATcopy:
  1874                           	opt stack 0
  1875  0000D3                     	ds	1
  1876  0000D4                     _USBActiveConfiguration:
  1877                           	opt stack 0
  1878  0000D4                     	ds	1
  1879  0000D5                     _I2cReadDataEvt:
  1880                           	opt stack 0
  1881  0000D5                     	ds	1
  1882  0000D6                     _I2cWriteDataEvt:
  1883                           	opt stack 0
  1884  0000D6                     	ds	1
  1885  0000D7                     _GetMethod:
  1886                           	opt stack 0
  1887  0000D7                     	ds	1
  1888  0000D8                     _InitNetwork:
  1889                           	opt stack 0
  1890  0000D8                     	ds	1
  1891  0000D9                     _SmsTxtReady:
  1892                           	opt stack 0
  1893  0000D9                     	ds	1
  1894  0000DA                     _GetSmsText:
  1895                           	opt stack 0
  1896  0000DA                     	ds	1
  1897  0000DB                     _SmsEvent:
  1898                           	opt stack 0
  1899  0000DB                     	ds	1
  1900  0000DC                     _RingEvent:
  1901                           	opt stack 0
  1902  0000DC                     	ds	1
  1903  0000DD                     _SendSmsEvent:
  1904                           	opt stack 0
  1905  0000DD                     	ds	1
  1906  0000DE                     _MdmOnOffPulseRequest:
  1907                           	opt stack 0
  1908  0000DE                     	ds	1
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           postdec1	equ	0xFE5
  1916                           fsr1h	equ	0xFE2
  1917                           fsr1l	equ	0xFE1
  1918                           
  1919                           	psect	bssBANK1
  1920  0001C9                     __pbssBANK1:
  1921                           	opt stack 0
  1922  0001C9                     _outPipes:
  1923                           	opt stack 0
  1924  0001C9                     	ds	8
  1925  0001D1                     _CDCDataInHandle:
  1926                           	opt stack 0
  1927  0001D1                     	ds	2
  1928  0001D3                     MyApp_Task@blinkSeconds:
  1929                           	opt stack 0
  1930  0001D3                     	ds	1
  1931  0001D4                     	ds	1
  1932  0001D5                     	ds	1
  1933  0001D6                     	ds	1
  1934  0001D7                     	ds	1
  1935  0001D8                     initGprsModem@isInitialized:
  1936                           	opt stack 0
  1937  0001D8                     	ds	1
  1938  0001D9                     	ds	1
  1939  0001DA                     	ds	1
  1940  0001DB                     	ds	1
  1941  0001DC                     	ds	1
  1942  0001DD                     	ds	1
  1943  0001DE                     	ds	1
  1944  0001DF                     	ds	1
  1945  0001E0                     GsmGprsTerminal@SMS:
  1946                           	opt stack 0
  1947  0001E0                     	ds	1
  1948  0001E1                     	ds	1
  1949  0001E2                     _control_signal_bitmap:
  1950                           	opt stack 0
  1951  0001E2                     	ds	1
  1952  0001E3                     _cdc_mem_type:
  1953                           	opt stack 0
  1954  0001E3                     	ds	1
  1955  0001E4                     _USBTicksSinceSuspendEnd:
  1956                           	opt stack 0
  1957  0001E4                     	ds	1
  1958  0001E5                     _BothEP0OutUOWNsSet:
  1959                           	opt stack 0
  1960  0001E5                     	ds	1
  1961  0001E6                     _USBBusIsSuspended:
  1962                           	opt stack 0
  1963  0001E6                     	ds	1
  1964  0001E7                     _RemoteWakeup:
  1965                           	opt stack 0
  1966  0001E7                     	ds	1
  1967  0001E8                     I2cSlv_QueryI2cData@Ret:
  1968                           	opt stack 0
  1969  0001E8                     	ds	1
  1970  0001E9                     I2cSlv_QueryI2cData@I2cOpState:
  1971                           	opt stack 0
  1972  0001E9                     	ds	1
  1973  0001EA                     I2cSendMsgSm@I2cComState:
  1974                           	opt stack 0
  1975  0001EA                     	ds	1
  1976  0001EB                     _I2cBusStatus:
  1977                           	opt stack 0
  1978  0001EB                     	ds	1
  1979  0001EC                     HttpGetMethod@GetMOutSts:
  1980                           	opt stack 0
  1981  0001EC                     	ds	1
  1982  0001ED                     HttpGetMethod@GetMethodState:
  1983                           	opt stack 0
  1984  0001ED                     	ds	1
  1985  0001EE                     InitGprsNetwork@GprsNetInitState:
  1986                           	opt stack 0
  1987  0001EE                     	ds	1
  1988  0001EF                     _PostMethod:
  1989                           	opt stack 0
  1990  0001EF                     	ds	1
  1991  0001F0                     _HttpGetMethodSts:
  1992                           	opt stack 0
  1993  0001F0                     	ds	1
  1994  0001F1                     _GprsNetworkSts:
  1995                           	opt stack 0
  1996  0001F1                     	ds	1
  1997  0001F2                     _ApnLenLocal:
  1998                           	opt stack 0
  1999  0001F2                     	ds	1
  2000  0001F3                     SendSmsSm@SendSms_NextState:
  2001                           	opt stack 0
  2002  0001F3                     	ds	1
  2003  0001F4                     SendSmsSm@SendSms_State:
  2004                           	opt stack 0
  2005  0001F4                     	ds	1
  2006  0001F5                     _AlarmEvent:
  2007                           	opt stack 0
  2008  0001F5                     	ds	1
  2009  0001F6                     _Led3OutSts:
  2010                           	opt stack 0
  2011  0001F6                     	ds	1
  2012  0001F7                     _Led3Sts:
  2013                           	opt stack 0
  2014  0001F7                     	ds	1
  2015  0001F8                     _Led2OutSts:
  2016                           	opt stack 0
  2017  0001F8                     	ds	1
  2018  0001F9                     _Led2Sts:
  2019                           	opt stack 0
  2020  0001F9                     	ds	1
  2021  0001FA                     _Led1OutSts:
  2022                           	opt stack 0
  2023  0001FA                     	ds	1
  2024  0001FB                     _Led1Sts:
  2025                           	opt stack 0
  2026  0001FB                     	ds	1
  2027  0001FC                     I2cDummyTx@DummyBuffer:
  2028                           	opt stack 0
  2029  0001FC                     	ds	1
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           
  2040                           	psect	dataBANK1
  2041  0001FD                     __pdataBANK1:
  2042                           	opt stack 0
  2043  0001FD                     	ds	1
  2044  0001FE                     InitGprsNetwork@GprsInitSts:
  2045                           	opt stack 0
  2046  0001FE                     	ds	1
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           postdec1	equ	0xFE5
  2054                           fsr1h	equ	0xFE2
  2055                           fsr1l	equ	0xFE1
  2056                           
  2057                           	psect	bssBANK2
  2058  0002C8                     __pbssBANK2:
  2059                           	opt stack 0
  2060  0002C8                     _pCDCDst:
  2061                           	opt stack 0
  2062  0002C8                     	ds	3
  2063  0002CB                     _pCDCSrc:
  2064                           	opt stack 0
  2065  0002CB                     	ds	3
  2066  0002CE                     _ep_data_out:
  2067                           	opt stack 0
  2068  0002CE                     	ds	3
  2069  0002D1                     _ep_data_in:
  2070                           	opt stack 0
  2071  0002D1                     	ds	3
  2072  0002D4                     _pDst:
  2073                           	opt stack 0
  2074  0002D4                     	ds	2
  2075  0002D6                     ConfigureModem@DelayCounter:
  2076                           	opt stack 0
  2077  0002D6                     	ds	2
  2078  0002D8                     ConfigureModem@DelayValueMs:
  2079                           	opt stack 0
  2080  0002D8                     	ds	2
  2081  0002DA                     TurnOnModem@Counter:
  2082                           	opt stack 0
  2083  0002DA                     	ds	2
  2084  0002DC                     UpdateSchFlag@InterruptCounter:
  2085                           	opt stack 0
  2086  0002DC                     	ds	2
  2087  0002DE                     MdmCntSm@Counter:
  2088                           	opt stack 0
  2089  0002DE                     	ds	2
  2090  0002E0                     RiSm@Counter:
  2091                           	opt stack 0
  2092  0002E0                     	ds	2
  2093  0002E2                     _ExtInt1IsrCallback:
  2094                           	opt stack 0
  2095  0002E2                     	ds	2
  2096  0002E4                     _ExtInt0IsrCallback:
  2097                           	opt stack 0
  2098  0002E4                     	ds	2
  2099  0002E6                     _RtccIsrCallback:
  2100                           	opt stack 0
  2101  0002E6                     	ds	2
  2102  0002E8                     _Tmr4IsrCallback:
  2103                           	opt stack 0
  2104  0002E8                     	ds	2
  2105  0002EA                     _Tmr2IsrCallback:
  2106                           	opt stack 0
  2107  0002EA                     	ds	2
  2108  0002EC                     Term_MainSm@TermMainSmState:
  2109                           	opt stack 0
  2110  0002EC                     	ds	1
  2111  0002ED                     Terminal@FormatOption:
  2112                           	opt stack 0
  2113  0002ED                     	ds	1
  2114  0002EE                     Terminal@SlaveAddr:
  2115                           	opt stack 0
  2116  0002EE                     	ds	1
  2117  0002EF                     Terminal@PackageLen:
  2118                           	opt stack 0
  2119  0002EF                     	ds	1
  2120  0002F0                     Terminal@TermState:
  2121                           	opt stack 0
  2122  0002F0                     	ds	1
  2123  0002F1                     _USBAlternateInterface:
  2124                           	opt stack 0
  2125  0002F1                     	ds	2
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1h	equ	0xFE2
  2134                           fsr1l	equ	0xFE1
  2135                           
  2136                           	psect	dataBANK2
  2137  0002F3                     __pdataBANK2:
  2138                           	opt stack 0
  2139  0002F3                     Terminal@EchoOption:
  2140                           	opt stack 0
  2141  0002F3                     	ds	1
  2142  0002F4                     _MainSystemTimebaseFlag:
  2143                           	opt stack 0
  2144  0002F4                     	ds	1
  2145  0002F5                     _ConnTimeout:
  2146                           	opt stack 0
  2147  0002F5                     	ds	11
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           
  2158                           	psect	bssBANK3
  2159  000300                     __pbssBANK3:
  2160                           	opt stack 0
  2161  000300                     _Rtcm_SystemDate:
  2162                           	opt stack 0
  2163  000300                     	ds	8
  2164  000308                     _Rtcm_RtccAlarm:
  2165                           	opt stack 0
  2166  000308                     	ds	6
  2167  00030E                     _pBDTEntryOut:
  2168                           	opt stack 0
  2169  00030E                     	ds	6
  2170  000314                     _BaudRateGen:
  2171                           	opt stack 0
  2172  000314                     	ds	4
  2173  000318                     _USB1msTickCount:
  2174                           	opt stack 0
  2175  000318                     	ds	4
  2176  00031C                     _OsTmr_OsTickCounter:
  2177                           	opt stack 0
  2178  00031C                     	ds	4
  2179  000320                     MyApp_Task@F8996:
  2180                           	opt stack 0
  2181  000320                     	ds	2
  2182  000322                     	ds	2
  2183  000324                     _PhoneNumberLen:
  2184                           	opt stack 0
  2185  000324                     	ds	2
  2186  000326                     _ApnLocal:
  2187                           	opt stack 0
  2188  000326                     	ds	2
  2189  000328                     _UartConfig:
  2190                           	opt stack 0
  2191  000328                     	ds	21
  2192  00033D                     I2cSlv_QueryI2cData@TimeoutTimer:
  2193                           	opt stack 0
  2194  00033D                     	ds	11
  2195  000348                     I2cSlv_QueryI2cData@QueryTimer:
  2196                           	opt stack 0
  2197  000348                     	ds	11
  2198  000353                     _I2cConfig:
  2199                           	opt stack 0
  2200  000353                     	ds	10
  2201  00035D                     _Led3Blink:
  2202                           	opt stack 0
  2203  00035D                     	ds	9
  2204  000366                     _Led2Blink:
  2205                           	opt stack 0
  2206  000366                     	ds	9
  2207  00036F                     _Led1Blink:
  2208                           	opt stack 0
  2209  00036F                     	ds	9
  2210  000378                     _dummy_encapsulated_cmd_response:
  2211                           	opt stack 0
  2212  000378                     	ds	8
  2213  000380                     _line_coding:
  2214                           	opt stack 0
  2215  000380                     	ds	7
  2216  000387                     _Led3Pulse:
  2217                           	opt stack 0
  2218  000387                     	ds	6
  2219  00038D                     _Led2Pulse:
  2220                           	opt stack 0
  2221  00038D                     	ds	6
  2222  000393                     _Led1Pulse:
  2223                           	opt stack 0
  2224  000393                     	ds	6
  2225  000399                     _I2cRxPacket:
  2226                           	opt stack 0
  2227  000399                     	ds	6
  2228  00039F                     _I2cTxPacket:
  2229                           	opt stack 0
  2230  00039F                     	ds	5
  2231  0003A4                     _HttpGetDataLocal:
  2232                           	opt stack 0
  2233  0003A4                     	ds	5
  2234  0003A9                     Terminal@Addr:
  2235                           	opt stack 0
  2236  0003A9                     	ds	4
  2237  0003AD                     Terminal@Len:
  2238                           	opt stack 0
  2239  0003AD                     	ds	4
  2240  0003B1                     _AlCfg:
  2241                           	opt stack 0
  2242  0003B1                     	ds	4
  2243  0003B5                     _RtcConfig:
  2244                           	opt stack 0
  2245  0003B5                     	ds	4
  2246  0003B9                     initGprsModem@modemCounter:
  2247                           	opt stack 0
  2248  0003B9                     	ds	2
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           
  2259                           	psect	dataBANK3
  2260  0003BB                     __pdataBANK3:
  2261                           	opt stack 0
  2262  0003BB                     ModemEvtParser@F9088:
  2263                           	opt stack 0
  2264  0003BB                     	ds	5
  2265  0003C0                     ModemEvtParser@F9086:
  2266                           	opt stack 0
  2267  0003C0                     	ds	4
  2268  0003C4                     MyApp_Task@F8993:
  2269                           	opt stack 0
  2270  0003C4                     	ds	2
  2271  0003C6                     MyApp_Task@F8990:
  2272                           	opt stack 0
  2273  0003C6                     	ds	2
  2274  0003C8                     	ds	2
  2275  0003CA                     triggerRelay@F8966:
  2276                           	opt stack 0
  2277  0003CA                     	ds	2
  2278  0003CC                     Term_MainSm@TermDelay:
  2279                           	opt stack 0
  2280  0003CC                     	ds	11
  2281  0003D7                     _ConnWait:
  2282                           	opt stack 0
  2283  0003D7                     	ds	11
  2284  0003E2                     SendSmsSm@SwTimer:
  2285                           	opt stack 0
  2286  0003E2                     	ds	11
  2287  0003ED                     CheckModem@Timeout:
  2288                           	opt stack 0
  2289  0003ED                     	ds	11
  2290  0003F8                     MyApp_Task@blickTicks:
  2291                           	opt stack 0
  2292  0003F8                     	ds	2
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           postinc0	equ	0xFEE
  2298                           wreg	equ	0xFE8
  2299                           postdec1	equ	0xFE5
  2300                           fsr1h	equ	0xFE2
  2301                           fsr1l	equ	0xFE1
  2302                           
  2303                           	psect	bssBANK4
  2304  000440                     __pbssBANK4:
  2305                           	opt stack 0
  2306  000440                     	ds	10
  2307  00044A                     _cdc_notice:
  2308                           	opt stack 0
  2309  00044A                     	ds	10
  2310  000454                     _cdc_data_rx:
  2311                           	opt stack 0
  2312  000454                     	ds	64
  2313  000494                     Term_MainSm@Data:
  2314                           	opt stack 0
  2315  000494                     	ds	50
  2316  0004C6                     _PhoneNumber:
  2317                           	opt stack 0
  2318  0004C6                     	ds	20
  2319  0004DA                     Terminal@SwTimer:
  2320                           	opt stack 0
  2321  0004DA                     	ds	11
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           fsr1h	equ	0xFE2
  2330                           fsr1l	equ	0xFE1
  2331                           
  2332                           	psect	dataBANK4
  2333  0004E5                     __pdataBANK4:
  2334                           	opt stack 0
  2335  0004E5                     MyApp_Task@F8999:
  2336                           	opt stack 0
  2337  0004E5                     	ds	10
  2338  0004EF                     ModemEvtParser@F9090:
  2339                           	opt stack 0
  2340  0004EF                     	ds	10
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           
  2351                           	psect	bssBANK5
  2352  000500                     __pbssBANK5:
  2353                           	opt stack 0
  2354  000500                     Terminal@Payload:
  2355                           	opt stack 0
  2356  000500                     	ds	80
  2357  000550                     Terminal@TermRxBuffer:
  2358                           	opt stack 0
  2359  000550                     	ds	50
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           
  2370                           	psect	dataBANK5
  2371  000582                     __pdataBANK5:
  2372                           	opt stack 0
  2373  000582                     _TaskTable:
  2374                           	opt stack 0
  2375  000582                     	ds	80
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           postdec1	equ	0xFE5
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           
  2386                           	psect	bssBANK6
  2387  000600                     __pbssBANK6:
  2388                           	opt stack 0
  2389  000600                     _OsAlarms:
  2390                           	opt stack 0
  2391  000600                     	ds	220
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBANK7
  2403  000700                     __pbssBANK7:
  2404                           	opt stack 0
  2405  000700                     _Mdm_SmsRx:
  2406                           	opt stack 0
  2407  000700                     	ds	132
  2408  000784                     _cdc_data_tx:
  2409                           	opt stack 0
  2410  000784                     	ds	64
  2411  0007C4                     _MessageText:
  2412                           	opt stack 0
  2413  0007C4                     	ds	50
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           postinc0	equ	0xFEE
  2419                           wreg	equ	0xFE8
  2420                           postdec1	equ	0xFE5
  2421                           fsr1h	equ	0xFE2
  2422                           fsr1l	equ	0xFE1
  2423                           
  2424                           	psect	bssBANK8
  2425  000800                     __pbssBANK8:
  2426                           	opt stack 0
  2427  000800                     GsmGprsTerminal@UsbBuffer:
  2428                           	opt stack 0
  2429  000800                     	ds	200
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           postdec1	equ	0xFE5
  2437                           fsr1h	equ	0xFE2
  2438                           fsr1l	equ	0xFE1
  2439                           
  2440                           	psect	bssBANK9
  2441  000900                     __pbssBANK9:
  2442                           	opt stack 0
  2443  000900                     GsmGprsTerminal@UartBuffer:
  2444                           	opt stack 0
  2445  000900                     	ds	200
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           
  2456                           	psect	bssBIGRAMl
  2457  000AC8                     __pbssBIGRAMl:
  2458                           	opt stack 0
  2459  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2460                           	opt stack 0
  2461  000AC8                     	ds	400
  2462  000C58                     _RxBuffer:
  2463                           	opt stack 0
  2464  000C58                     	ds	400
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	cstackBANK10
  2476  000A00                     __pcstackBANK10:
  2477                           	opt stack 0
  2478  000A00                     Terminal@UsbRxBuffer:
  2479                           	opt stack 0
  2480                           
  2481                           ; 200 bytes @ 0x0
  2482  000A00                     	ds	200
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec1	equ	0xFE5
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           
  2493                           	psect	cstackBANK2
  2494  000200                     __pcstackBANK2:
  2495                           	opt stack 0
  2496  000200                     Terminal@UsbTxBuffer:
  2497                           	opt stack 0
  2498                           
  2499                           ; 200 bytes @ 0x0
  2500  000200                     	ds	200
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postdec1	equ	0xFE5
  2508                           fsr1h	equ	0xFE2
  2509                           fsr1l	equ	0xFE1
  2510                           
  2511                           	psect	cstackBANK1
  2512  000100                     __pcstackBANK1:
  2513                           	opt stack 0
  2514  000100                     SendSmsSm@UartMessage:
  2515                           	opt stack 0
  2516  000100                     InitGprsNetwork@UartMessage:
  2517                           	opt stack 0
  2518  000100                     Terminal@TermTxBuffer:
  2519                           	opt stack 0
  2520  000100                     MyApp_Task@smsText:
  2521                           	opt stack 0
  2522  000100                     HttpGetMethod@UartMessage:
  2523                           	opt stack 0
  2524                           
  2525                           ; 200 bytes @ 0x0
  2526  000100                     	ds	50
  2527  000132                     InitGprsNetwork@Index:
  2528                           	opt stack 0
  2529  000132                     Term_MainSm@FwkMajorStr:
  2530                           	opt stack 0
  2531  000132                     MyApp_Task@phone:
  2532                           	opt stack 0
  2533                           
  2534                           ; 10 bytes @ 0x32
  2535  000132                     	ds	4
  2536  000136                     Term_MainSm@FwkMinorStr:
  2537                           	opt stack 0
  2538                           
  2539                           ; 4 bytes @ 0x36
  2540  000136                     	ds	4
  2541  00013A                     Term_MainSm@FwkBuildStr:
  2542                           	opt stack 0
  2543                           
  2544                           ; 4 bytes @ 0x3A
  2545  00013A                     	ds	2
  2546  00013C                     MyApp_Task@off:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0x3C
  2550  00013C                     	ds	2
  2551  00013E                     MyApp_Task@on:
  2552                           	opt stack 0
  2553                           
  2554                           ; 2 bytes @ 0x3E
  2555  00013E                     	ds	2
  2556  000140                     MyApp_Task@I2cTxBufferTest:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x40
  2560  000140                     	ds	136
  2561  0001C8                     HttpGetMethod@Index:
  2562                           	opt stack 0
  2563                           
  2564                           ; 1 bytes @ 0xC8
  2565  0001C8                     	ds	1
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           postdec1	equ	0xFE5
  2573                           fsr1h	equ	0xFE2
  2574                           fsr1l	equ	0xFE1
  2575                           
  2576                           	psect	cstackBANK0
  2577  000060                     __pcstackBANK0:
  2578                           	opt stack 0
  2579  000060                     
  2580                           ; 1 bytes @ 0x0
  2581  000060                     	ds	8
  2582  000068                     ??_LowPriorityIsr:
  2583                           
  2584                           ; 1 bytes @ 0x8
  2585  000068                     	ds	21
  2586  00007D                     ??_isdigit:
  2587  00007D                     ??_isspace:
  2588  00007D                     ??_isupper:
  2589  00007D                     ??_Rtcc_GetRtccValue:
  2590  00007D                     ??_UartTxBufferStatus:
  2591  00007D                     ??_USBStdGetDscHandler:
  2592  00007D                     ??_USBStdGetStatusHandler:
  2593  00007D                     ?_USBTransferOnePacket:
  2594                           	opt stack 0
  2595  00007D                     ?_strlen:
  2596                           	opt stack 0
  2597  00007D                     ?_sprintf:
  2598                           	opt stack 0
  2599  00007D                     ?___wmul:
  2600                           	opt stack 0
  2601  00007D                     ?___awdiv:
  2602                           	opt stack 0
  2603  00007D                     ?___awmod:
  2604                           	opt stack 0
  2605  00007D                     ?___lwmod:
  2606                           	opt stack 0
  2607  00007D                     ?_GetOsTickCounter:
  2608                           	opt stack 0
  2609  00007D                     ?___lmul:
  2610                           	opt stack 0
  2611  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2612                           	opt stack 0
  2613  00007D                     SetAckStatus@AckSts:
  2614                           	opt stack 0
  2615  00007D                     WriteByte@Byte:
  2616                           	opt stack 0
  2617  00007D                     ReadByte@Byte:
  2618                           	opt stack 0
  2619  00007D                     Mcu_SetWdgSts@WdgSts:
  2620                           	opt stack 0
  2621  00007D                     RtccIrqInit@Priority:
  2622                           	opt stack 0
  2623  00007D                     Rtcc_SetRtcStatus@Status:
  2624                           	opt stack 0
  2625  00007D                     TmrBInit@Prescaler:
  2626                           	opt stack 0
  2627  00007D                     Tmr_TmrBIrqSet@Priority:
  2628                           	opt stack 0
  2629  00007D                     Tmr_StartTmr@TmrNumb:
  2630                           	opt stack 0
  2631  00007D                     UartWriteByte@ByteToWrite:
  2632                           	opt stack 0
  2633  00007D                     USBTransferOnePacket@dir:
  2634                           	opt stack 0
  2635  00007D                     USBConfigureEndpoint@direction:
  2636                           	opt stack 0
  2637  00007D                     USBCtrlTrfTxService@byteToSend:
  2638                           	opt stack 0
  2639  00007D                     USBCtrlTrfRxService@i:
  2640                           	opt stack 0
  2641  00007D                     Led_SetLedStatus@LedSts:
  2642                           	opt stack 0
  2643  00007D                     toupper@c:
  2644                           	opt stack 0
  2645  00007D                     tolower@c:
  2646                           	opt stack 0
  2647  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2648                           	opt stack 0
  2649  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2650                           	opt stack 0
  2651  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2652                           	opt stack 0
  2653  00007D                     Uart_ClearRxBuffer@Index:
  2654                           	opt stack 0
  2655  00007D                     GenerateEvt@Event:
  2656                           	opt stack 0
  2657  00007D                     ReceiveEvt@Event:
  2658                           	opt stack 0
  2659  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2660                           	opt stack 0
  2661  00007D                     StringCompare@String1:
  2662                           	opt stack 0
  2663  00007D                     StringCopy@SourceStr:
  2664                           	opt stack 0
  2665  00007D                     ClearBuffer@Buffer:
  2666                           	opt stack 0
  2667  00007D                     sprintf@sp:
  2668                           	opt stack 0
  2669  00007D                     ___wmul@multiplier:
  2670                           	opt stack 0
  2671  00007D                     ___awdiv@dividend:
  2672                           	opt stack 0
  2673  00007D                     ___awmod@dividend:
  2674                           	opt stack 0
  2675  00007D                     ___lwmod@dividend:
  2676                           	opt stack 0
  2677  00007D                     memcpy@d1:
  2678                           	opt stack 0
  2679  00007D                     memset@p1:
  2680                           	opt stack 0
  2681  00007D                     strcat@to:
  2682                           	opt stack 0
  2683  00007D                     strcpy@to:
  2684                           	opt stack 0
  2685  00007D                     strlen@s:
  2686                           	opt stack 0
  2687  00007D                     ___lmul@multiplier:
  2688                           	opt stack 0
  2689                           
  2690                           ; 4 bytes @ 0x1D
  2691  00007D                     	ds	1
  2692  00007E                     ??_USBConfigureEndpoint:
  2693  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2694                           	opt stack 0
  2695  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2696                           	opt stack 0
  2697  00007E                     TmrBInit@Postscaler:
  2698                           	opt stack 0
  2699  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2700                           	opt stack 0
  2701  00007E                     UartWriteByte@Module:
  2702                           	opt stack 0
  2703  00007E                     UartTxBufferStatus@Module:
  2704                           	opt stack 0
  2705  00007E                     USBCtrlTrfRxService@byteToRead:
  2706                           	opt stack 0
  2707  00007E                     USBCtrlTrfInHandler@lastDTS:
  2708                           	opt stack 0
  2709  00007E                     Led_SetLedStatus@Led:
  2710                           	opt stack 0
  2711  00007E                     _isdigit$6139:
  2712                           	opt stack 0
  2713  00007E                     _isspace$6408:
  2714                           	opt stack 0
  2715  00007E                     _isupper$6411:
  2716                           	opt stack 0
  2717  00007E                     I2c_WriteData@WritePacket:
  2718                           	opt stack 0
  2719  00007E                     Rtcc_RtcConfig@RtcConfig:
  2720                           	opt stack 0
  2721  00007E                     USBTransferOnePacket@data:
  2722                           	opt stack 0
  2723  00007E                     USBStdGetStatusHandler@p:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x1E
  2727  00007E                     	ds	1
  2728  00007F                     ??_strlen:
  2729  00007F                     ??_Rtcc_AlarmConfig:
  2730  00007F                     ??_TmrBInit:
  2731  00007F                     Irq_InitIntController@IntPriorityEn:
  2732                           	opt stack 0
  2733  00007F                     Rtcc_GetRtccValue@RetValue:
  2734                           	opt stack 0
  2735  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2736                           	opt stack 0
  2737  00007F                     UartTxBufferStatus@TxBufferStatus:
  2738                           	opt stack 0
  2739  00007F                     GenerateEvt@EventStatus:
  2740                           	opt stack 0
  2741  00007F                     isdigit@c:
  2742                           	opt stack 0
  2743  00007F                     isspace@c:
  2744                           	opt stack 0
  2745  00007F                     isupper@c:
  2746                           	opt stack 0
  2747  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2748                           	opt stack 0
  2749  00007F                     StringCompare@String2:
  2750                           	opt stack 0
  2751  00007F                     StringCopy@DestStr:
  2752                           	opt stack 0
  2753  00007F                     ClearBuffer@Len:
  2754                           	opt stack 0
  2755  00007F                     sprintf@f:
  2756                           	opt stack 0
  2757  00007F                     ___wmul@multiplicand:
  2758                           	opt stack 0
  2759  00007F                     ___awdiv@divisor:
  2760                           	opt stack 0
  2761  00007F                     ___awmod@divisor:
  2762                           	opt stack 0
  2763  00007F                     ___lwmod@divisor:
  2764                           	opt stack 0
  2765  00007F                     memcpy@s1:
  2766                           	opt stack 0
  2767  00007F                     memset@c:
  2768                           	opt stack 0
  2769  00007F                     strcat@from:
  2770                           	opt stack 0
  2771  00007F                     strcpy@from:
  2772                           	opt stack 0
  2773                           
  2774                           ; 2 bytes @ 0x1F
  2775  00007F                     	ds	1
  2776  000080                     ??_isalpha:
  2777  000080                     ??_isxdigit:
  2778  000080                     ??_I2c_WriteData:
  2779  000080                     ??_Rtcc_RtcConfig:
  2780  000080                     Rtcc_GetRtccValue@RegValue:
  2781                           	opt stack 0
  2782  000080                     TmrBInit@TmrNumb:
  2783                           	opt stack 0
  2784  000080                     ReceiveEvt@EventStatus:
  2785                           	opt stack 0
  2786  000080                     USBTransferOnePacket@len:
  2787                           	opt stack 0
  2788  000080                     I2c_ReadData@ReadPacket:
  2789                           	opt stack 0
  2790  000080                     Uart_WriteConstString@ConstStringToWrite:
  2791                           	opt stack 0
  2792  000080                     Uart_WriteString@StringToWrite:
  2793                           	opt stack 0
  2794  000080                     Uart_WriteStringLen@StringToWrite:
  2795                           	opt stack 0
  2796  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2797                           	opt stack 0
  2798  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2799                           	opt stack 0
  2800                           
  2801                           ; 2 bytes @ 0x20
  2802  000080                     	ds	1
  2803  000081                     ?_GetElapsedTime:
  2804                           	opt stack 0
  2805  000081                     ?_Rtcm_GetRtccDate:
  2806                           	opt stack 0
  2807  000081                     Mdm_IsSmsReceived@Ret:
  2808                           	opt stack 0
  2809  000081                     Mdm_IsRinging@Ret:
  2810                           	opt stack 0
  2811  000081                     I2cSlv_I2cReadMsgSts@Result:
  2812                           	opt stack 0
  2813  000081                     USBTransferOnePacket@ep:
  2814                           	opt stack 0
  2815  000081                     Led_SetLedBlinkTime@Led:
  2816                           	opt stack 0
  2817  000081                     ___awdiv@counter:
  2818                           	opt stack 0
  2819  000081                     ___awmod@counter:
  2820                           	opt stack 0
  2821  000081                     ___lwmod@counter:
  2822                           	opt stack 0
  2823  000081                     _isalpha$6405:
  2824                           	opt stack 0
  2825  000081                     _isxdigit$6415:
  2826                           	opt stack 0
  2827  000081                     OsTmr_StartTimer@Timer:
  2828                           	opt stack 0
  2829  000081                     StringCompare@Len:
  2830                           	opt stack 0
  2831  000081                     StringCopy@Len:
  2832                           	opt stack 0
  2833  000081                     ClearBuffer@Index:
  2834                           	opt stack 0
  2835  000081                     ___wmul@product:
  2836                           	opt stack 0
  2837  000081                     memcpy@n:
  2838                           	opt stack 0
  2839  000081                     memset@n:
  2840                           	opt stack 0
  2841  000081                     strcat@cp:
  2842                           	opt stack 0
  2843  000081                     strcpy@cp:
  2844                           	opt stack 0
  2845  000081                     strlen@cp:
  2846                           	opt stack 0
  2847  000081                     GetElapsedTime@StartTime:
  2848                           	opt stack 0
  2849  000081                     ___lmul@multiplicand:
  2850                           	opt stack 0
  2851                           
  2852                           ; 4 bytes @ 0x21
  2853  000081                     	ds	1
  2854  000082                     ??_I2c_ReadData:
  2855  000082                     Uart_WriteConstString@Module:
  2856                           	opt stack 0
  2857  000082                     Uart_WriteString@Module:
  2858                           	opt stack 0
  2859  000082                     Uart_WriteStringLen@Len:
  2860                           	opt stack 0
  2861  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2862                           	opt stack 0
  2863  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2864                           	opt stack 0
  2865  000082                     USBConfigureEndpoint@EPNum:
  2866                           	opt stack 0
  2867  000082                     ___awdiv@sign:
  2868                           	opt stack 0
  2869  000082                     ___awmod@sign:
  2870                           	opt stack 0
  2871  000082                     isalpha@c:
  2872                           	opt stack 0
  2873  000082                     isxdigit@c:
  2874                           	opt stack 0
  2875  000082                     USBTransferOnePacket@handle:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x22
  2879  000082                     	ds	1
  2880  000083                     ??_StringCopy:
  2881  000083                     ?_atoi:
  2882                           	opt stack 0
  2883  000083                     ?_xtoi:
  2884                           	opt stack 0
  2885  000083                     ?___lwdiv:
  2886                           	opt stack 0
  2887  000083                     Uart_WriteStringLen@Index:
  2888                           	opt stack 0
  2889  000083                     Mdm_SetSmsFormat@Index:
  2890                           	opt stack 0
  2891  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2892                           	opt stack 0
  2893  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2894                           	opt stack 0
  2895  000083                     sprintf@flag:
  2896                           	opt stack 0
  2897  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2898                           	opt stack 0
  2899  000083                     USBConfigureEndpoint@handle:
  2900                           	opt stack 0
  2901  000083                     putUSBUSART@data:
  2902                           	opt stack 0
  2903  000083                     atoi@s:
  2904                           	opt stack 0
  2905  000083                     ___awdiv@quotient:
  2906                           	opt stack 0
  2907  000083                     ___lwdiv@dividend:
  2908                           	opt stack 0
  2909  000083                     memcpy@d:
  2910                           	opt stack 0
  2911  000083                     memset@p:
  2912                           	opt stack 0
  2913  000083                     xtoi@s:
  2914                           	opt stack 0
  2915  000083                     OsTmr_StartTimer@Timeout:
  2916                           	opt stack 0
  2917                           
  2918                           ; 4 bytes @ 0x23
  2919  000083                     	ds	1
  2920  000084                     Uart_WriteStringLen@Module:
  2921                           	opt stack 0
  2922  000084                     I2cSlv_SendI2cMsg@TxSts:
  2923                           	opt stack 0
  2924  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2925                           	opt stack 0
  2926  000084                     CDCTxService@i:
  2927                           	opt stack 0
  2928  000084                     getsUSBUSART@buffer:
  2929                           	opt stack 0
  2930  000084                     sprintf@ap:
  2931                           	opt stack 0
  2932  000084                     Mdm_SetSmsFormat@UartMessage:
  2933                           	opt stack 0
  2934                           
  2935                           ; 20 bytes @ 0x24
  2936  000084                     	ds	1
  2937  000085                     ??_atoi:
  2938  000085                     ??_xtoi:
  2939  000085                     ??_GetElapsedTime:
  2940  000085                     Rtcc_SetRtccValue@Value:
  2941                           	opt stack 0
  2942  000085                     USBDeviceInit@i:
  2943                           	opt stack 0
  2944  000085                     USBEnableEndpoint@options:
  2945                           	opt stack 0
  2946  000085                     putUSBUSART@length:
  2947                           	opt stack 0
  2948  000085                     CDCTxService@byte_to_send:
  2949                           	opt stack 0
  2950  000085                     StringCompare@Result:
  2951                           	opt stack 0
  2952  000085                     StringCopy@Index:
  2953                           	opt stack 0
  2954  000085                     ___lwdiv@divisor:
  2955                           	opt stack 0
  2956  000085                     memcpy@s:
  2957                           	opt stack 0
  2958  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2959                           	opt stack 0
  2960  000085                     ___lmul@product:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x25
  2964  000085                     	ds	1
  2965  000086                     ??_Rtcc_SetRtccValue:
  2966  000086                     getsUSBUSART@len:
  2967                           	opt stack 0
  2968  000086                     sprintf@c:
  2969                           	opt stack 0
  2970  000086                     USBEnableEndpoint@p:
  2971                           	opt stack 0
  2972  000086                     StringCompare@Index:
  2973                           	opt stack 0
  2974                           
  2975                           ; 2 bytes @ 0x26
  2976  000086                     	ds	1
  2977  000087                     atoi@sign:
  2978                           	opt stack 0
  2979  000087                     ___lwdiv@counter:
  2980                           	opt stack 0
  2981  000087                     memcpy@tmp:
  2982                           	opt stack 0
  2983  000087                     xtoi@sign:
  2984                           	opt stack 0
  2985  000087                     Mdm_GetSmsData@MessageText:
  2986                           	opt stack 0
  2987  000087                     sprintf@cp:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x27
  2991  000087                     	ds	1
  2992  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  2993                           	opt stack 0
  2994  000088                     USBEnableEndpoint@ep:
  2995                           	opt stack 0
  2996  000088                     atoi@a:
  2997                           	opt stack 0
  2998  000088                     ___lwdiv@quotient:
  2999                           	opt stack 0
  3000  000088                     xtoi@val:
  3001                           	opt stack 0
  3002  000088                     ModemEvtParser@CallReadyString:
  3003                           	opt stack 0
  3004                           
  3005                           ; 10 bytes @ 0x28
  3006  000088                     	ds	1
  3007  000089                     ??_Rtcm_GetRtccDate:
  3008  000089                     ?_strtol:
  3009                           	opt stack 0
  3010  000089                     ?___lldiv:
  3011                           	opt stack 0
  3012  000089                     Mdm_GetSmsData@GetSmsStatus:
  3013                           	opt stack 0
  3014  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3015                           	opt stack 0
  3016  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3017                           	opt stack 0
  3018  000089                     strtol@s:
  3019                           	opt stack 0
  3020  000089                     ___lldiv@dividend:
  3021                           	opt stack 0
  3022  000089                     Rtcm_SetRtccDate@Date:
  3023                           	opt stack 0
  3024                           
  3025                           ; 8 bytes @ 0x29
  3026  000089                     	ds	1
  3027  00008A                     xtoi@c:
  3028                           	opt stack 0
  3029  00008A                     LedBlinkStateMachine@LedBlink:
  3030                           	opt stack 0
  3031  00008A                     LedPulseStateMachine@LedPulse:
  3032                           	opt stack 0
  3033  00008A                     secondsAppTimer@counter:
  3034                           	opt stack 0
  3035  00008A                     utoa@buf:
  3036                           	opt stack 0
  3037  00008A                     Rtcm_GetRtccDate@LocalDate:
  3038                           	opt stack 0
  3039                           
  3040                           ; 8 bytes @ 0x2A
  3041  00008A                     	ds	1
  3042  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3043                           	opt stack 0
  3044  00008B                     strtol@endptr:
  3045                           	opt stack 0
  3046                           
  3047                           ; 2 bytes @ 0x2B
  3048  00008B                     	ds	1
  3049  00008C                     LedPulseStateMachine@Led:
  3050                           	opt stack 0
  3051  00008C                     secondsAppTimer@isCyclic:
  3052                           	opt stack 0
  3053  00008C                     utoa@val:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x2C
  3057  00008C                     	ds	1
  3058  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3059                           	opt stack 0
  3060  00008D                     strtol@base:
  3061                           	opt stack 0
  3062  00008D                     GetElapsedTime@TimeValue:
  3063                           	opt stack 0
  3064  00008D                     ___lldiv@divisor:
  3065                           	opt stack 0
  3066                           
  3067                           ; 4 bytes @ 0x2D
  3068  00008D                     	ds	1
  3069  00008E                     utoa@base:
  3070                           	opt stack 0
  3071                           
  3072                           ; 2 bytes @ 0x2E
  3073  00008E                     	ds	1
  3074  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3075  00008F                     ??_strtol:
  3076  00008F                     secondsAppTimer@seconds:
  3077                           	opt stack 0
  3078  00008F                     LedStateMachine@LedSts:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x2F
  3082  00008F                     	ds	1
  3083  000090                     secondsAppTimer@isExpired:
  3084                           	opt stack 0
  3085  000090                     utoa@v:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x30
  3089  000090                     	ds	1
  3090  000091                     ??_USBStdFeatureReqHandler:
  3091  000091                     USBStdSetCfgHandler@i:
  3092                           	opt stack 0
  3093  000091                     LedStateMachine@LedOut:
  3094                           	opt stack 0
  3095  000091                     secondsAppTimer@destinationTicks:
  3096                           	opt stack 0
  3097  000091                     GetElapsedTime@CurrentTimestamp:
  3098                           	opt stack 0
  3099  000091                     ___lldiv@quotient:
  3100                           	opt stack 0
  3101                           
  3102                           ; 4 bytes @ 0x31
  3103  000091                     	ds	1
  3104  000092                     utoa@c:
  3105                           	opt stack 0
  3106  000092                     USBStdFeatureReqHandler@pUEP:
  3107                           	opt stack 0
  3108  000092                     ModemEvtParser@SmsString:
  3109                           	opt stack 0
  3110                           
  3111                           ; 5 bytes @ 0x32
  3112  000092                     	ds	1
  3113  000093                     strtol@sign:
  3114                           	opt stack 0
  3115  000093                     LedStateMachine@LedBlink:
  3116                           	opt stack 0
  3117  000093                     blinkForSeconds@blickTicks:
  3118                           	opt stack 0
  3119  000093                     itoa@buf:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x33
  3123  000093                     	ds	1
  3124  000094                     USBStdFeatureReqHandler@current_ep_data:
  3125                           	opt stack 0
  3126  000094                     strtol@a:
  3127                           	opt stack 0
  3128                           
  3129                           ; 4 bytes @ 0x34
  3130  000094                     	ds	1
  3131  000095                     blinkForSeconds@seconds:
  3132                           	opt stack 0
  3133  000095                     ___lldiv@counter:
  3134                           	opt stack 0
  3135  000095                     OsTmr_GetTimerStatus@Timer:
  3136                           	opt stack 0
  3137  000095                     USBStdFeatureReqHandler@p:
  3138                           	opt stack 0
  3139  000095                     LedStateMachine@LedPulse:
  3140                           	opt stack 0
  3141  000095                     itoa@val:
  3142                           	opt stack 0
  3143                           
  3144                           ; 2 bytes @ 0x35
  3145  000095                     	ds	1
  3146  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3147                           	opt stack 0
  3148  000096                     SetUartBaudRate@UartConfig:
  3149                           	opt stack 0
  3150  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3151                           	opt stack 0
  3152                           
  3153                           ; 4 bytes @ 0x36
  3154  000096                     	ds	1
  3155  000097                     ??_USBCtrlEPService:
  3156  000097                     itoa@base:
  3157                           	opt stack 0
  3158  000097                     ModemEvtParser@RingString:
  3159                           	opt stack 0
  3160                           
  3161                           ; 4 bytes @ 0x37
  3162  000097                     	ds	1
  3163  000098                     Tmr_TmrBPrSet@Prescaler:
  3164                           	opt stack 0
  3165  000098                     Mdm_SetSmsFormat@TextFormat:
  3166                           	opt stack 0
  3167  000098                     USBDeviceTasks@i:
  3168                           	opt stack 0
  3169  000098                     LedStateMachine@LedOutSts:
  3170                           	opt stack 0
  3171  000098                     strtol@c:
  3172                           	opt stack 0
  3173                           
  3174                           ; 1 bytes @ 0x38
  3175  000098                     	ds	1
  3176  000099                     Tmr_TmrBPrSet@Postscaler:
  3177                           	opt stack 0
  3178  000099                     SetUartBaudRate@Module:
  3179                           	opt stack 0
  3180  000099                     LedStateMachine@Led:
  3181                           	opt stack 0
  3182  000099                     itoa@cp:
  3183                           	opt stack 0
  3184                           
  3185                           ; 2 bytes @ 0x39
  3186  000099                     	ds	1
  3187  00009A                     ??_Led_MainTask:
  3188  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3189                           	opt stack 0
  3190  00009A                     SetUartBaudRate@BaudRateRegister:
  3191                           	opt stack 0
  3192  00009A                     SetBaudRate@McuClockHz:
  3193                           	opt stack 0
  3194                           
  3195                           ; 4 bytes @ 0x3A
  3196  00009A                     	ds	1
  3197  00009B                     ??_SendSmsSm:
  3198  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3199                           	opt stack 0
  3200  00009B                     ModemEvtParser@Match:
  3201                           	opt stack 0
  3202  00009B                     OsTmr_Wait@WaitTimer:
  3203                           	opt stack 0
  3204  00009B                     InitGprsNetwork@Apn:
  3205                           	opt stack 0
  3206  00009B                     HttpGetMethod@GetData:
  3207                           	opt stack 0
  3208                           
  3209                           ; 2 bytes @ 0x3B
  3210  00009B                     	ds	1
  3211  00009C                     SetUartBaudRate@DivisionFactor:
  3212                           	opt stack 0
  3213  00009C                     ModemEvtParser@CompareIdx:
  3214                           	opt stack 0
  3215  00009C                     Tmr_TmrBPrSet@Divisor:
  3216                           	opt stack 0
  3217                           
  3218                           ; 4 bytes @ 0x3C
  3219  00009C                     	ds	1
  3220  00009D                     ??_HttpGetMethod:
  3221  00009D                     InitGprsNetwork@ApnLen:
  3222                           	opt stack 0
  3223  00009D                     Uart_InitUartModule@UartConfig:
  3224                           	opt stack 0
  3225  00009D                     OsTmr_Wait@DelayMs:
  3226                           	opt stack 0
  3227                           
  3228                           ; 4 bytes @ 0x3D
  3229  00009D                     	ds	1
  3230  00009E                     ??_SetBaudRate:
  3231  00009E                     ??_InitGprsNetwork:
  3232                           
  3233                           ; 1 bytes @ 0x3E
  3234  00009E                     	ds	1
  3235  00009F                     ??_Uart_InitUartModule:
  3236                           
  3237                           ; 1 bytes @ 0x3F
  3238  00009F                     	ds	1
  3239  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3240                           	opt stack 0
  3241                           
  3242                           ; 2 bytes @ 0x40
  3243  0000A0                     	ds	1
  3244  0000A1                     Uart_InitUartModule@Module:
  3245                           	opt stack 0
  3246  0000A1                     OsTmr_Wait@Ret:
  3247                           	opt stack 0
  3248                           
  3249                           ; 1 bytes @ 0x41
  3250  0000A1                     	ds	1
  3251  0000A2                     ??_Terminal:
  3252  0000A2                     I2c_InitI2cModule@I2cConfig:
  3253                           	opt stack 0
  3254                           
  3255                           ; 2 bytes @ 0x42
  3256  0000A2                     	ds	1
  3257  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3258                           	opt stack 0
  3259                           
  3260                           ; 1 bytes @ 0x43
  3261  0000A3                     	ds	1
  3262  0000A4                     ??_I2c_InitI2cModule:
  3263  0000A4                     Terminal@i:
  3264                           	opt stack 0
  3265  0000A4                     InitSchedTimer@TmrBConfig:
  3266                           	opt stack 0
  3267                           
  3268                           ; 7 bytes @ 0x44
  3269  0000A4                     	ds	1
  3270  0000A5                     Terminal@ReceivedBytes:
  3271                           	opt stack 0
  3272                           
  3273                           ; 1 bytes @ 0x45
  3274  0000A5                     	ds	1
  3275  0000A6                     Terminal@Index:
  3276                           	opt stack 0
  3277                           
  3278                           ; 1 bytes @ 0x46
  3279  0000A6                     	ds	1
  3280  0000A7                     ??_InitializeTasks:
  3281  0000A7                     ??_ScheduleTasks:
  3282  0000A7                     
  3283                           ; 1 bytes @ 0x47
  3284  0000A7                     	ds	2
  3285  0000A9                     InitializeTasks@ActiveTaskIndex:
  3286                           	opt stack 0
  3287                           
  3288                           ; 1 bytes @ 0x49
  3289  0000A9                     	ds	2
  3290  0000AB                     ScheduleTasks@ActiveTaskIndex:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x4B
  3294  0000AB                     	ds	1
  3295  0000AC                     tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           
  3305                           ; 1 bytes @ 0x4C
  3306                           
  3307                           	psect	cstackCOMRAM
  3308  000001                     __pcstackCOMRAM:
  3309                           	opt stack 0
  3310  000001                     i2GenerateEvt@Event:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x0
  3314  000001                     	ds	2
  3315  000003                     i2GenerateEvt@EventStatus:
  3316                           	opt stack 0
  3317                           
  3318                           ; 1 bytes @ 0x2
  3319  000003                     	ds	1
  3320  000004                     Uart_MdmGsmGprsReadService@UartData:
  3321                           	opt stack 0
  3322                           
  3323                           ; 1 bytes @ 0x3
  3324  000004                     	ds	1
  3325  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3326                           	opt stack 0
  3327                           
  3328                           ; 2 bytes @ 0x4
  3329  000005                     	ds	2
  3330  000007                     ??_HighPriorityIsr:
  3331                           
  3332                           ; 1 bytes @ 0x6
  3333  000007                     	ds	18
  3334  000019                     ?i1___wmul:
  3335                           	opt stack 0
  3336  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3337                           	opt stack 0
  3338  000019                     i1GenerateEvt@Event:
  3339                           	opt stack 0
  3340  000019                     i1___wmul@multiplier:
  3341                           	opt stack 0
  3342                           
  3343                           ; 2 bytes @ 0x18
  3344  000019                     	ds	2
  3345  00001B                     i1GenerateEvt@EventStatus:
  3346                           	opt stack 0
  3347  00001B                     i1___wmul@multiplicand:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x1A
  3351  00001B                     	ds	1
  3352  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3353                           	opt stack 0
  3354                           
  3355                           ; 2 bytes @ 0x1B
  3356  00001C                     	ds	1
  3357  00001D                     i1___wmul@product:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x1C
  3361  00001D                     	ds	1
  3362  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3363                           	opt stack 0
  3364                           
  3365                           ; 1 bytes @ 0x1D
  3366  00001E                     	ds	1
  3367  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3368                           	opt stack 0
  3369                           
  3370                           ; 1 bytes @ 0x1E
  3371  00001F                     	ds	1
  3372  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3373                           	opt stack 0
  3374                           
  3375                           ; 1 bytes @ 0x1F
  3376  000020                     	ds	1
  3377  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3378                           	opt stack 0
  3379                           
  3380                           ; 2 bytes @ 0x20
  3381  000021                     	ds	2
  3382  000023                     tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           
  3392                           ; 1 bytes @ 0x22
  3393 ;;
  3394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3395 ;;
  3396 ;; *************** function _main *****************
  3397 ;; Defined at:
  3398 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  2   14[None  ] short 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels required when called:   23
  3418 ;; This function calls:
  3419 ;;		_Sch_MainScheduler
  3420 ;;		_SystemInit
  3421 ;; This function is called by:
  3422 ;;		Startup code after reset
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text0
  3427  005FB6                     __ptext0:
  3428                           	opt stack 0
  3429  005FB6                     _main:
  3430                           	opt stack 8
  3431                           
  3432                           ;main.c: 61: SystemInit();
  3433                           
  3434                           ;incstack = 0
  3435  005FB6  EC18  F02D         	call	_SystemInit	;wreg free
  3436                           
  3437                           ;main.c: 64: Sch_MainScheduler();
  3438  005FBA  ECEA  F02E         	call	_Sch_MainScheduler	;wreg free
  3439                           
  3440                           ;main.c: 67: return 0;
  3441                           ;	Return value of _main is never used
  3442  005FBE  EF66  F000         	goto	start
  3443  005FC2                     __end_of_main:
  3444                           	opt stack 0
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postdec1	equ	0xFE5
  3452                           fsr1h	equ	0xFE2
  3453                           fsr1l	equ	0xFE1
  3454                           
  3455 ;; *************** function _SystemInit *****************
  3456 ;; Defined at:
  3457 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:   15
  3478 ;; This function calls:
  3479 ;;		_InitSchedTimer
  3480 ;;		_Irq_InitIntController
  3481 ;;		_Mcu_ConfigExtInt
  3482 ;;		_Mcu_StartSystemPll
  3483 ;;		_Pm_DsReleasePinControl
  3484 ;;		_Tmr_RegisterTmr2IsrCallback
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text1
  3491  005A30                     __ptext1:
  3492                           	opt stack 0
  3493  005A30                     _SystemInit:
  3494                           	opt stack 15
  3495                           
  3496                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3497                           
  3498                           ;incstack = 0
  3499  005A30  ECFE  F02F         	call	_Pm_DsReleasePinControl	;wreg free
  3500                           
  3501                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3502  005A34  ECDB  F02E         	call	_Mcu_StartSystemPll	;wreg free
  3503                           
  3504                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3505  005A38  0E01               	movlw	1
  3506  005A3A  0100               	movlb	0	; () banked
  3507  005A3C  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3508  005A3E  0E01               	movlw	1
  3509  005A40  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3510  005A42  0E01               	movlw	1
  3511  005A44  ECBC  F02D         	call	_Irq_InitIntController
  3512                           
  3513                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3514  005A48  0E9A               	movlw	low _Sch_SchmIntService
  3515  005A4A  0100               	movlb	0	; () banked
  3516  005A4C  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3517  005A4E  0E5F               	movlw	high _Sch_SchmIntService
  3518  005A50  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3519  005A52  ECE1  F02F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3520                           
  3521                           ;sys_init.c: 132: InitSchedTimer();
  3522  005A56  EC78  F02D         	call	_InitSchedTimer	;wreg free
  3523                           
  3524                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3525  005A5A  EC15  F02F         	call	_Mcu_ConfigExtInt	;wreg free
  3526  005A5E  0012               	return		;funcret
  3527  005A60                     __end_of_SystemInit:
  3528                           	opt stack 0
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           postdec1	equ	0xFE5
  3536                           fsr1h	equ	0xFE2
  3537                           fsr1l	equ	0xFE1
  3538                           
  3539 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3540 ;; Defined at:
  3541 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3544 ;;		 -> Sch_SchmIntService(1), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;Total ram usage:        2 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:   11
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_SystemInit
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text2
  3571  005FC2                     __ptext2:
  3572                           	opt stack 0
  3573  005FC2                     _Tmr_RegisterTmr2IsrCallback:
  3574                           	opt stack 18
  3575                           
  3576                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3577                           
  3578                           ;incstack = 0
  3579  005FC2  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3580  005FC6  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3581  005FCA  0012               	return		;funcret
  3582  005FCC                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           postdec1	equ	0xFE5
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           
  3594 ;; *************** function _Pm_DsReleasePinControl *****************
  3595 ;; Defined at:
  3596 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		None
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   11
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_SystemInit
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text3
  3625  005FFC                     __ptext3:
  3626                           	opt stack 0
  3627  005FFC                     _Pm_DsReleasePinControl:
  3628                           	opt stack 18
  3629                           
  3630                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3631                           
  3632                           ;incstack = 0
  3633  005FFC  010F               	movlb	15	; () banked
  3634  005FFE  914C               	bcf	76,0,b	;volatile
  3635                           
  3636                           ; BSR set to: 15
  3637  006000  0012               	return		;funcret
  3638  006002                     __end_of_Pm_DsReleasePinControl:
  3639                           	opt stack 0
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           postinc0	equ	0xFEE
  3645                           wreg	equ	0xFE8
  3646                           postdec1	equ	0xFE5
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           
  3650 ;; *************** function _Mcu_StartSystemPll *****************
  3651 ;; Defined at:
  3652 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:   11
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_SystemInit
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text4
  3681  005DB6                     __ptext4:
  3682                           	opt stack 0
  3683  005DB6                     _Mcu_StartSystemPll:
  3684                           	opt stack 18
  3685                           
  3686                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3687                           
  3688                           ; BSR set to: 15
  3689                           ;incstack = 0
  3690  005DB6  0E03               	movlw	3
  3691  005DB8  0100               	movlb	0	; () banked
  3692  005DBA  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3693  005DBC  0EE8               	movlw	232
  3694  005DBE  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3698  005DC0  8C9B               	bsf	3995,6,c	;volatile
  3699  005DC2                     l10871:
  3700                           
  3701                           ; BSR set to: 0
  3702  005DC2  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3703  005DC4  A0D8               	btfss	status,0,c
  3704  005DC6  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3705  005DC8  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3706  005DCA  E1FB               	bnz	l10871
  3707  005DCC  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3708  005DCE  B4D8               	btfsc	status,2,c
  3709  005DD0  0012               	return	
  3710  005DD2  D7F7               	goto	l237
  3711  005DD4                     __end_of_Mcu_StartSystemPll:
  3712                           	opt stack 0
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           postdec1	equ	0xFE5
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           status	equ	0xFD8
  3723                           
  3724 ;; *************** function _Mcu_ConfigExtInt *****************
  3725 ;; Defined at:
  3726 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:   11
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SystemInit
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text5
  3755  005E2A                     __ptext5:
  3756                           	opt stack 0
  3757  005E2A                     _Mcu_ConfigExtInt:
  3758                           	opt stack 18
  3759                           
  3760                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;incstack = 0
  3764  005E2A  8093               	bsf	3987,0,c	;volatile
  3765                           
  3766                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3767  005E2C  8695               	bsf	3989,3,c	;volatile
  3768                           
  3769                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3770  005E2E  010F               	movlb	15	; () banked
  3771  005E30  8949               	bsf	73,4,b	;volatile
  3772                           
  3773                           ; BSR set to: 15
  3774                           ;mcu_drv.c: 108: RPINR1 = 20;
  3775  005E32  0E14               	movlw	20
  3776  005E34  010E               	movlb	14	; () banked
  3777  005E36  6FE7               	movwf	231,b	;volatile
  3778                           
  3779                           ; BSR set to: 14
  3780                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3781  005E38  88F2               	bsf	intcon,4,c	;volatile
  3782                           
  3783                           ; BSR set to: 14
  3784                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3785  005E3A  86F0               	bsf	intcon3,3,c	;volatile
  3786                           
  3787                           ; BSR set to: 14
  3788                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3789  005E3C  8CF0               	bsf	intcon3,6,c	;volatile
  3790                           
  3791                           ; BSR set to: 14
  3792                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3793  005E3E  9CF1               	bcf	intcon2,6,c	;volatile
  3794                           
  3795                           ; BSR set to: 14
  3796                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3797  005E40  9AF1               	bcf	intcon2,5,c	;volatile
  3798                           
  3799                           ; BSR set to: 14
  3800  005E42  0012               	return		;funcret
  3801  005E44                     __end_of_Mcu_ConfigExtInt:
  3802                           	opt stack 0
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           intcon	equ	0xFF2
  3808                           intcon2	equ	0xFF1
  3809                           intcon3	equ	0xFF0
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postdec1	equ	0xFE5
  3813                           fsr1h	equ	0xFE2
  3814                           fsr1l	equ	0xFE1
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _Irq_InitIntController *****************
  3818 ;; Defined at:
  3819 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  IntPriorityE    1    wreg     enum E7720
  3822 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3823 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;Total ram usage:        3 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:   11
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_SystemInit
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text6
  3850  005B78                     __ptext6:
  3851                           	opt stack 0
  3852  005B78                     _Irq_InitIntController:
  3853                           	opt stack 18
  3854                           
  3855                           ; BSR set to: 14
  3856                           ;incstack = 0
  3857                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3858  005B78  0100               	movlb	0	; () banked
  3859  005B7A  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3860                           
  3861                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3862  005B7C  0100               	movlb	0	; () banked
  3863  005B7E  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3864  005B80  D002               	bra	u9415
  3865  005B82  9ED0               	bcf	4048,7,c	;volatile
  3866  005B84  D001               	bra	u9416
  3867  005B86                     u9415:
  3868  005B86  8ED0               	bsf	4048,7,c	;volatile
  3869  005B88                     u9416:
  3870                           
  3871                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3872  005B88  0100               	movlb	0	; () banked
  3873  005B8A  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3874  005B8C  D002               	bra	u9425
  3875  005B8E  9EF2               	bcf	intcon,7,c	;volatile
  3876  005B90  D001               	bra	u9426
  3877  005B92                     u9425:
  3878  005B92  8EF2               	bsf	intcon,7,c	;volatile
  3879  005B94                     u9426:
  3880                           
  3881                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3882  005B94  0100               	movlb	0	; () banked
  3883  005B96  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3884  005B98  D002               	bra	u9435
  3885  005B9A  9CF2               	bcf	intcon,6,c	;volatile
  3886  005B9C  D001               	bra	u9436
  3887  005B9E                     u9435:
  3888  005B9E  8CF2               	bsf	intcon,6,c	;volatile
  3889  005BA0                     u9436:
  3890  005BA0  0012               	return		;funcret
  3891  005BA2                     __end_of_Irq_InitIntController:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           intcon	equ	0xFF2
  3898                           intcon2	equ	0xFF1
  3899                           intcon3	equ	0xFF0
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           postdec1	equ	0xFE5
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _InitSchedTimer *****************
  3908 ;; Defined at:
  3909 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;Total ram usage:        7 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:   14
  3930 ;; This function calls:
  3931 ;;		_Tmr_TmrBConfig
  3932 ;; This function is called by:
  3933 ;;		_SystemInit
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text7
  3938  005AF0                     __ptext7:
  3939                           	opt stack 0
  3940  005AF0                     _InitSchedTimer:
  3941                           	opt stack 15
  3942                           
  3943                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3944                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3945                           
  3946                           ;incstack = 0
  3947  005AF0  0E04               	movlw	4
  3948  005AF2  0100               	movlb	0	; () banked
  3949  005AF4  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3950                           
  3951                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3952  005AF6  0E0C               	movlw	12
  3953  005AF8  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3954                           
  3955                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3956  005AFA  0E00               	movlw	0
  3957  005AFC  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3958                           
  3959                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3960  005AFE  0E01               	movlw	1
  3961  005B00  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3962                           
  3963                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3964  005B02  0E03               	movlw	3
  3965  005B04  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3966  005B06  0EE8               	movlw	232
  3967  005B08  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3968                           
  3969                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3970  005B0A  0E01               	movlw	1
  3971  005B0C  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3975  005B0E  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  3976  005B10  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3977  005B12  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3978  005B14  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3979  005B16  0E02               	movlw	2
  3980  005B18  ECD3  F01C         	call	_Tmr_TmrBConfig
  3981  005B1C  0012               	return		;funcret
  3982  005B1E                     __end_of_InitSchedTimer:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           intcon	equ	0xFF2
  3989                           intcon2	equ	0xFF1
  3990                           intcon3	equ	0xFF0
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           postdec1	equ	0xFE5
  3994                           fsr1h	equ	0xFE2
  3995                           fsr1l	equ	0xFE1
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _Tmr_TmrBConfig *****************
  3999 ;; Defined at:
  4000 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  TmrNumb         1    wreg     unsigned char 
  4003 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4004 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        4 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   13
  4023 ;; This function calls:
  4024 ;;		_TmrBInit
  4025 ;;		_Tmr_StartTmr
  4026 ;;		_Tmr_TmrBIrqSet
  4027 ;;		_Tmr_TmrBPrSet
  4028 ;; This function is called by:
  4029 ;;		_InitSchedTimer
  4030 ;;		_InitAuxTimer
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text8
  4035  0039A6                     __ptext8:
  4036                           	opt stack 0
  4037  0039A6                     _Tmr_TmrBConfig:
  4038                           	opt stack 15
  4039                           
  4040                           ;incstack = 0
  4041                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4042  0039A6  0100               	movlb	0	; () banked
  4043  0039A8  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4044                           
  4045                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4046  0039AA  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4047  0039AE  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4048  0039B2  50DF               	movf	indf2,w,c
  4049  0039B4  0100               	movlb	0	; () banked
  4050  0039B6  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4051  0039B8  EE20 F001          	lfsr	2,1
  4052  0039BC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4053  0039BE  26D9               	addwf	fsr2l,f,c
  4054  0039C0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4055  0039C2  22DA               	addwfc	fsr2h,f,c
  4056  0039C4  50DF               	movf	indf2,w,c
  4057  0039C6  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4058  0039C8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4059  0039CA  ECBF  F022         	call	_TmrBInit
  4060                           
  4061                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4062  0039CE  0100               	movlb	0	; () banked
  4063  0039D0  EE20 F002          	lfsr	2,2
  4064  0039D4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4065  0039D6  26D9               	addwf	fsr2l,f,c
  4066  0039D8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4067  0039DA  22DA               	addwfc	fsr2h,f,c
  4068  0039DC  04DE               	decf	postinc2,w,c
  4069  0039DE  A4D8               	btfss	status,2,c
  4070  0039E0  D00E               	goto	l546
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;tmr_drv.c: 277: {
  4074                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4075  0039E2  EE20 F003          	lfsr	2,3
  4076  0039E6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4077  0039E8  26D9               	addwf	fsr2l,f,c
  4078  0039EA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4079  0039EC  22DA               	addwfc	fsr2h,f,c
  4080  0039EE  50DF               	movf	indf2,w,c
  4081  0039F0  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4082  0039F2  0E01               	movlw	1
  4083  0039F4  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4084  0039F6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4085  0039F8  EC04  F02A         	call	_Tmr_TmrBIrqSet
  4086                           
  4087                           ;tmr_drv.c: 280: }
  4088  0039FC  D00E               	goto	l547
  4089  0039FE                     l546:
  4090                           
  4091                           ;tmr_drv.c: 281: else
  4092                           ;tmr_drv.c: 282: {
  4093                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4094  0039FE  0100               	movlb	0	; () banked
  4095  003A00  EE20 F003          	lfsr	2,3
  4096  003A04  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4097  003A06  26D9               	addwf	fsr2l,f,c
  4098  003A08  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4099  003A0A  22DA               	addwfc	fsr2h,f,c
  4100  003A0C  50DF               	movf	indf2,w,c
  4101  003A0E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4102  003A10  0E00               	movlw	0
  4103  003A12  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4104  003A14  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4105  003A16  EC04  F02A         	call	_Tmr_TmrBIrqSet
  4106  003A1A                     l547:
  4107                           
  4108                           ;tmr_drv.c: 285: }
  4109                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4110  003A1A  0100               	movlb	0	; () banked
  4111  003A1C  EE20 F004          	lfsr	2,4
  4112  003A20  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4113  003A22  26D9               	addwf	fsr2l,f,c
  4114  003A24  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4115  003A26  22DA               	addwfc	fsr2h,f,c
  4116  003A28  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4117  003A2C  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4118  003A30  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4119  003A34  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4120  003A38  50DF               	movf	indf2,w,c
  4121  003A3A  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4122  003A3C  EE20 F001          	lfsr	2,1
  4123  003A40  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4124  003A42  26D9               	addwf	fsr2l,f,c
  4125  003A44  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4126  003A46  22DA               	addwfc	fsr2h,f,c
  4127  003A48  50DF               	movf	indf2,w,c
  4128  003A4A  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4129  003A4C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4130  003A4E  EC47  F017         	call	_Tmr_TmrBPrSet
  4131                           
  4132                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4133  003A52  0100               	movlb	0	; () banked
  4134  003A54  EE20 F006          	lfsr	2,6
  4135  003A58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4136  003A5A  26D9               	addwf	fsr2l,f,c
  4137  003A5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4138  003A5E  22DA               	addwfc	fsr2h,f,c
  4139  003A60  04DE               	decf	postinc2,w,c
  4140  003A62  A4D8               	btfss	status,2,c
  4141  003A64  0012               	return	
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;tmr_drv.c: 290: {
  4145                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4146  003A66  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4147  003A68  ECBB  F02E         	call	_Tmr_StartTmr
  4148                           
  4149                           ;tmr_drv.c: 293: }
  4150  003A6C  0012               	return	
  4151  003A6E                     __end_of_Tmr_TmrBConfig:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           intcon	equ	0xFF2
  4158                           intcon2	equ	0xFF1
  4159                           intcon3	equ	0xFF0
  4160                           postinc0	equ	0xFEE
  4161                           wreg	equ	0xFE8
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           postinc2	equ	0xFDE
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function _Tmr_TmrBPrSet *****************
  4173 ;; Defined at:
  4174 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  TmrNumb         1    wreg     unsigned char 
  4177 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4178 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4179 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4182 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4183 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      enum E7736
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;Total ram usage:       10 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:   12
  4200 ;; This function calls:
  4201 ;;		___lldiv
  4202 ;;		___lmul
  4203 ;; This function is called by:
  4204 ;;		_Tmr_TmrBConfig
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text9
  4209  002E8E                     __ptext9:
  4210                           	opt stack 0
  4211  002E8E                     _Tmr_TmrBPrSet:
  4212                           	opt stack 15
  4213                           
  4214                           ;incstack = 0
  4215                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4216  002E8E  0100               	movlb	0	; () banked
  4217  002E90  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4218                           
  4219                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4220                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4221  002E92  0E00               	movlw	0
  4222  002E94  0100               	movlb	0	; () banked
  4223  002E96  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4224  002E98  0E00               	movlw	0
  4225  002E9A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4226  002E9C  0E00               	movlw	0
  4227  002E9E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4228  002EA0  0E00               	movlw	0
  4229  002EA2  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4233  002EA4  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4234  002EA6  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4235  002EA8  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4236  002EAC  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4237  002EB0  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4238  002EB2  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4239  002EB4  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4240  002EB8  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4241  002EBC  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4242  002EBE  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4243  002EC0  ECE9  F027         	call	___lmul	;wreg free
  4244  002EC4  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4245  002EC8  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4246  002ECC  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4247  002ED0  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4248                           
  4249                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4250  002ED4  0E00               	movlw	0
  4251  002ED6  0100               	movlb	0	; () banked
  4252  002ED8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4253  002EDA  0E1B               	movlw	27
  4254  002EDC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4255  002EDE  0EB7               	movlw	183
  4256  002EE0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4257  002EE2  0E00               	movlw	0
  4258  002EE4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4259  002EE6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4260  002EEA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4261  002EEE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4262  002EF2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4263  002EF6  EC01  F025         	call	___lldiv	;wreg free
  4264  002EFA  0100               	movlb	0	; () banked
  4265  002EFC  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4266  002EFE  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4267  002F00  E13A               	bnz	l13025
  4268  002F02  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4269  002F04  A0D8               	btfss	status,0,c
  4270  002F06  D02D               	goto	l529
  4271  002F08  D036               	goto	l528
  4272  002F0A                     
  4273                           ; BSR set to: 0
  4274                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4275                           
  4276                           ; BSR set to: 0
  4277  002F0A  0E00               	movlw	0
  4278  002F0C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4279  002F0E  0E1B               	movlw	27
  4280  002F10  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4281  002F12  0EB7               	movlw	183
  4282  002F14  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4283  002F16  0E00               	movlw	0
  4284  002F18  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4285  002F1A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4286  002F1E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4287  002F22  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4288  002F26  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4289  002F2A  EC01  F025         	call	___lldiv	;wreg free
  4290  002F2E  0100               	movlb	0	; () banked
  4291  002F30  5189               	movf	?___lldiv& (0+255),w,b
  4292  002F32  6ECB               	movwf	4043,c	;volatile
  4293                           
  4294                           ;tmr_drv.c: 210: break;
  4295  002F34  D01D               	goto	l531
  4296  002F36                     
  4297                           ; BSR set to: 0
  4298                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4299                           
  4300                           ; BSR set to: 0
  4301  002F36  0E00               	movlw	0
  4302  002F38  6F89               	movwf	___lldiv@dividend& (0+255),b
  4303  002F3A  0E1B               	movlw	27
  4304  002F3C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4305  002F3E  0EB7               	movlw	183
  4306  002F40  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4307  002F42  0E00               	movlw	0
  4308  002F44  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4309  002F46  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4310  002F4A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4311  002F4E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4312  002F52  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4313  002F56  EC01  F025         	call	___lldiv	;wreg free
  4314  002F5A  0100               	movlb	0	; () banked
  4315  002F5C  5189               	movf	?___lldiv& (0+255),w,b
  4316  002F5E  6E77               	movwf	3959,c	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;tmr_drv.c: 219: }
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;tmr_drv.c: 218: break;
  4323                           
  4324                           ;tmr_drv.c: 217: default:
  4325                           
  4326                           ;tmr_drv.c: 215: break;
  4327  002F60  D007               	goto	l531
  4328  002F62                     l529:
  4329                           
  4330                           ; BSR set to: 0
  4331                           
  4332                           ; BSR set to: 0
  4333  002F62  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4334                           
  4335                           ; Switch size 1, requested type "space"
  4336                           ; Number of cases is 2, Range of values is 2 to 4
  4337                           ; switch strategies available:
  4338                           ; Name         Instructions Cycles
  4339                           ; simple_byte            7     4 (average)
  4340                           ;	Chosen strategy is simple_byte
  4341  002F64  0A02               	xorlw	2	; case 2
  4342  002F66  B4D8               	btfsc	status,2,c
  4343  002F68  D7D0               	goto	l530
  4344  002F6A  0A06               	xorlw	6	; case 4
  4345  002F6C  B4D8               	btfsc	status,2,c
  4346  002F6E  D7E3               	goto	l532
  4347  002F70                     l531:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4351                           
  4352                           ; BSR set to: 0
  4353  002F70  0E00               	movlw	0
  4354  002F72  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4355                           
  4356                           ;tmr_drv.c: 223: }
  4357  002F74  0012               	return	
  4358  002F76                     l528:
  4359  002F76                     l13025:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;tmr_drv.c: 224: else
  4363                           ;tmr_drv.c: 225: {
  4364                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4365  002F76  0E01               	movlw	1
  4366  002F78  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369  002F7A  0012               	return	
  4370  002F7C                     __end_of_Tmr_TmrBPrSet:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           intcon2	equ	0xFF1
  4380                           intcon3	equ	0xFF0
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           postdec1	equ	0xFE5
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _Tmr_TmrBIrqSet *****************
  4394 ;; Defined at:
  4395 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  TmrNumb         1    wreg     unsigned char 
  4398 ;;  Priority        1   29[BANK0 ] enum E7716
  4399 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;Total ram usage:        3 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:   11
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_Tmr_TmrBConfig
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text10
  4426  005408                     __ptext10:
  4427                           	opt stack 0
  4428  005408                     _Tmr_TmrBIrqSet:
  4429                           	opt stack 16
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;incstack = 0
  4433                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4434  005408  0100               	movlb	0	; () banked
  4435  00540A  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4436                           
  4437                           ;tmr_drv.c: 156: switch (TmrNumb)
  4438  00540C  D01A               	goto	l520
  4439  00540E                     l521:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4443  00540E  929E               	bcf	3998,1,c	;volatile
  4444                           
  4445                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4446  005410  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4447  005412  D002               	bra	u8025
  4448  005414  929F               	bcf	3999,1,c	;volatile
  4449  005416  D001               	bra	u8026
  4450  005418                     u8025:
  4451  005418  829F               	bsf	3999,1,c	;volatile
  4452  00541A                     u8026:
  4453                           
  4454                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4455  00541A  0100               	movlb	0	; () banked
  4456  00541C  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4457  00541E  D002               	bra	u8035
  4458  005420  929D               	bcf	3997,1,c	;volatile
  4459  005422  D001               	bra	u8036
  4460  005424                     u8035:
  4461  005424  829D               	bsf	3997,1,c	;volatile
  4462  005426                     u8036:
  4463                           
  4464                           ;tmr_drv.c: 165: break;
  4465  005426  0012               	return	
  4466  005428                     l523:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4470  005428  96A4               	bcf	4004,3,c	;volatile
  4471                           
  4472                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4473  00542A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4474  00542C  D002               	bra	u8045
  4475  00542E  96A5               	bcf	4005,3,c	;volatile
  4476  005430  D001               	bra	u8046
  4477  005432                     u8045:
  4478  005432  86A5               	bsf	4005,3,c	;volatile
  4479  005434                     u8046:
  4480                           
  4481                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4482  005434  0100               	movlb	0	; () banked
  4483  005436  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4484  005438  D002               	bra	u8055
  4485  00543A  96A3               	bcf	4003,3,c	;volatile
  4486  00543C  D001               	bra	u8056
  4487  00543E                     u8055:
  4488  00543E  86A3               	bsf	4003,3,c	;volatile
  4489  005440                     u8056:
  4490                           
  4491                           ;tmr_drv.c: 178: }
  4492                           
  4493                           ;tmr_drv.c: 177: break;
  4494                           
  4495                           ;tmr_drv.c: 176: default:
  4496                           
  4497                           ;tmr_drv.c: 174: break;
  4498  005440  0012               	return	
  4499  005442                     l520:
  4500  005442  0100               	movlb	0	; () banked
  4501  005444  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4502                           
  4503                           ; Switch size 1, requested type "space"
  4504                           ; Number of cases is 2, Range of values is 2 to 4
  4505                           ; switch strategies available:
  4506                           ; Name         Instructions Cycles
  4507                           ; simple_byte            7     4 (average)
  4508                           ;	Chosen strategy is simple_byte
  4509  005446  0A02               	xorlw	2	; case 2
  4510  005448  B4D8               	btfsc	status,2,c
  4511  00544A  D7E1               	goto	l521
  4512  00544C  0A06               	xorlw	6	; case 4
  4513  00544E  A4D8               	btfss	status,2,c
  4514  005450  0012               	return	
  4515  005452  D7EA               	goto	l523
  4516  005454                     __end_of_Tmr_TmrBIrqSet:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           intcon2	equ	0xFF1
  4526                           intcon3	equ	0xFF0
  4527                           postinc0	equ	0xFEE
  4528                           wreg	equ	0xFE8
  4529                           postdec1	equ	0xFE5
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           indf2	equ	0xFDF
  4533                           postinc2	equ	0xFDE
  4534                           postdec2	equ	0xFDD
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _Tmr_StartTmr *****************
  4540 ;; Defined at:
  4541 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  TmrNumb         1    wreg     unsigned char 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;Total ram usage:        1 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:   11
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_Tmr_TmrBConfig
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text11
  4570  005D76                     __ptext11:
  4571                           	opt stack 0
  4572  005D76                     _Tmr_StartTmr:
  4573                           	opt stack 16
  4574                           
  4575                           ;incstack = 0
  4576                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4577  005D76  0100               	movlb	0	; () banked
  4578  005D78  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4579                           
  4580                           ;tmr_drv.c: 245: switch (TmrNumb)
  4581  005D7A  D004               	goto	l538
  4582  005D7C                     l539:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4586  005D7C  84CA               	bsf	4042,2,c	;volatile
  4587                           
  4588                           ;tmr_drv.c: 250: break;
  4589  005D7E  0012               	return	
  4590  005D80                     l541:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4594  005D80  8476               	bsf	3958,2,c	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;tmr_drv.c: 259: }
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;tmr_drv.c: 258: break;
  4601                           
  4602                           ;tmr_drv.c: 257: default:
  4603                           
  4604                           ;tmr_drv.c: 255: break;
  4605  005D82  0012               	return	
  4606  005D84                     l538:
  4607                           
  4608                           ; BSR set to: 0
  4609  005D84  0100               	movlb	0	; () banked
  4610  005D86  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4611                           
  4612                           ; Switch size 1, requested type "space"
  4613                           ; Number of cases is 2, Range of values is 2 to 4
  4614                           ; switch strategies available:
  4615                           ; Name         Instructions Cycles
  4616                           ; simple_byte            7     4 (average)
  4617                           ;	Chosen strategy is simple_byte
  4618  005D88  0A02               	xorlw	2	; case 2
  4619  005D8A  B4D8               	btfsc	status,2,c
  4620  005D8C  D7F7               	goto	l539
  4621  005D8E  0A06               	xorlw	6	; case 4
  4622  005D90  A4D8               	btfss	status,2,c
  4623  005D92  0012               	return	
  4624  005D94  D7F5               	goto	l541
  4625  005D96                     __end_of_Tmr_StartTmr:
  4626                           	opt stack 0
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           prodh	equ	0xFF4
  4632                           prodl	equ	0xFF3
  4633                           intcon	equ	0xFF2
  4634                           intcon2	equ	0xFF1
  4635                           intcon3	equ	0xFF0
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           postdec1	equ	0xFE5
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _TmrBInit *****************
  4649 ;; Defined at:
  4650 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  TmrNumb         1    wreg     unsigned char 
  4653 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4654 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4669 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;Total ram usage:        4 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:   11
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_Tmr_TmrBConfig
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text12
  4681  00457E                     __ptext12:
  4682                           	opt stack 0
  4683  00457E                     _TmrBInit:
  4684                           	opt stack 16
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;incstack = 0
  4688                           ;TmrBInit@TmrNumb stored from wreg
  4689  00457E  0100               	movlb	0	; () banked
  4690  004580  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4691                           
  4692                           ;tmr_drv.c: 75: switch (TmrNumb)
  4693  004582  D03F               	goto	l500
  4694  004584                     l503:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4698  004584  90CA               	bcf	4042,0,c	;volatile
  4699  004586  D001               	goto	L1
  4700  004588                     l505:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4704  004588  80CA               	bsf	4042,0,c	;volatile
  4705  00458A                     L1:
  4706                           
  4707                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4708  00458A  92CA               	bcf	4042,1,c	;volatile
  4709                           
  4710                           ;tmr_drv.c: 91: break;
  4711  00458C  D00E               	goto	l504
  4712  00458E                     l506:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4716  00458E  80CA               	bsf	4042,0,c	;volatile
  4717                           
  4718                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4719  004590  82CA               	bsf	4042,1,c	;volatile
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;tmr_drv.c: 100: }
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;tmr_drv.c: 99: break;
  4726                           
  4727                           ;tmr_drv.c: 98: default:
  4728                           
  4729                           ;tmr_drv.c: 96: break;
  4730  004592  D00B               	goto	l504
  4731  004594                     
  4732                           ; BSR set to: 0
  4733  004594  0100               	movlb	0	; () banked
  4734  004596  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4735                           
  4736                           ; Switch size 1, requested type "space"
  4737                           ; Number of cases is 3, Range of values is 1 to 16
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte           10     6 (average)
  4741                           ;	Chosen strategy is simple_byte
  4742  004598  0A01               	xorlw	1	; case 1
  4743  00459A  B4D8               	btfsc	status,2,c
  4744  00459C  D7F3               	goto	l503
  4745  00459E  0A05               	xorlw	5	; case 4
  4746  0045A0  B4D8               	btfsc	status,2,c
  4747  0045A2  D7F2               	goto	l505
  4748  0045A4  0A14               	xorlw	20	; case 16
  4749  0045A6  B4D8               	btfsc	status,2,c
  4750  0045A8  D7F2               	goto	l506
  4751  0045AA                     l504:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4755                           
  4756                           ; BSR set to: 0
  4757  0045AA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4758  0045AE  0EFF               	movlw	255
  4759  0045B0  277F               	addwf	??_TmrBInit& (0+255),f,b
  4760  0045B2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4761  0045B4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4762  0045B6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4763  0045B8  50CA               	movf	4042,w,c	;volatile
  4764  0045BA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4765  0045BC  0B87               	andlw	-121
  4766  0045BE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4767  0045C0  6ECA               	movwf	4042,c	;volatile
  4768                           
  4769                           ;tmr_drv.c: 104: break;
  4770  0045C2  0012               	return	
  4771  0045C4                     l511:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4775  0045C4  9076               	bcf	3958,0,c	;volatile
  4776  0045C6  D001               	goto	L2
  4777  0045C8                     l513:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4781  0045C8  8076               	bsf	3958,0,c	;volatile
  4782  0045CA                     L2:
  4783                           
  4784                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4785  0045CA  9276               	bcf	3958,1,c	;volatile
  4786                           
  4787                           ;tmr_drv.c: 120: break;
  4788  0045CC  D00D               	goto	l512
  4789  0045CE                     l514:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4793  0045CE  8076               	bsf	3958,0,c	;volatile
  4794                           
  4795                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4796  0045D0  8276               	bsf	3958,1,c	;volatile
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;tmr_drv.c: 129: }
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;tmr_drv.c: 128: break;
  4803                           
  4804                           ;tmr_drv.c: 127: default:
  4805                           
  4806                           ;tmr_drv.c: 125: break;
  4807  0045D2  D00A               	goto	l512
  4808  0045D4                     
  4809                           ; BSR set to: 0
  4810                           
  4811                           ; BSR set to: 0
  4812  0045D4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4813                           
  4814                           ; Switch size 1, requested type "space"
  4815                           ; Number of cases is 3, Range of values is 1 to 16
  4816                           ; switch strategies available:
  4817                           ; Name         Instructions Cycles
  4818                           ; simple_byte           10     6 (average)
  4819                           ;	Chosen strategy is simple_byte
  4820  0045D6  0A01               	xorlw	1	; case 1
  4821  0045D8  B4D8               	btfsc	status,2,c
  4822  0045DA  D7F4               	goto	l511
  4823  0045DC  0A05               	xorlw	5	; case 4
  4824  0045DE  B4D8               	btfsc	status,2,c
  4825  0045E0  D7F3               	goto	l513
  4826  0045E2  0A14               	xorlw	20	; case 16
  4827  0045E4  B4D8               	btfsc	status,2,c
  4828  0045E6  D7F3               	goto	l514
  4829  0045E8                     l512:
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4833                           
  4834                           ; BSR set to: 0
  4835  0045E8  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4836  0045EC  0EFF               	movlw	255
  4837  0045EE  277F               	addwf	??_TmrBInit& (0+255),f,b
  4838  0045F0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4839  0045F2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4840  0045F4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4841  0045F6  5076               	movf	3958,w,c	;volatile
  4842  0045F8  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4843  0045FA  0B87               	andlw	-121
  4844  0045FC  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4845  0045FE  6E76               	movwf	3958,c	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;tmr_drv.c: 137: }
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;tmr_drv.c: 136: break;
  4852                           
  4853                           ;tmr_drv.c: 135: default:
  4854                           
  4855                           ;tmr_drv.c: 133: break;
  4856  004600  0012               	return	
  4857  004602                     l500:
  4858                           
  4859                           ; BSR set to: 0
  4860  004602  0100               	movlb	0	; () banked
  4861  004604  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4862                           
  4863                           ; Switch size 1, requested type "space"
  4864                           ; Number of cases is 2, Range of values is 2 to 4
  4865                           ; switch strategies available:
  4866                           ; Name         Instructions Cycles
  4867                           ; simple_byte            7     4 (average)
  4868                           ;	Chosen strategy is simple_byte
  4869  004606  0A02               	xorlw	2	; case 2
  4870  004608  B4D8               	btfsc	status,2,c
  4871  00460A  D7C4               	goto	l502
  4872  00460C  0A06               	xorlw	6	; case 4
  4873  00460E  A4D8               	btfss	status,2,c
  4874  004610  0012               	return	
  4875  004612  D7E0               	goto	l510
  4876  004614                     __end_of_TmrBInit:
  4877                           	opt stack 0
  4878                           tblptru	equ	0xFF8
  4879                           tblptrh	equ	0xFF7
  4880                           tblptrl	equ	0xFF6
  4881                           tablat	equ	0xFF5
  4882                           prodh	equ	0xFF4
  4883                           prodl	equ	0xFF3
  4884                           intcon	equ	0xFF2
  4885                           intcon2	equ	0xFF1
  4886                           intcon3	equ	0xFF0
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1h	equ	0xFE2
  4891                           fsr1l	equ	0xFE1
  4892                           indf2	equ	0xFDF
  4893                           postinc2	equ	0xFDE
  4894                           postdec2	equ	0xFDD
  4895                           fsr2h	equ	0xFDA
  4896                           fsr2l	equ	0xFD9
  4897                           status	equ	0xFD8
  4898                           
  4899 ;; *************** function _Sch_MainScheduler *****************
  4900 ;; Defined at:
  4901 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:   22
  4922 ;; This function calls:
  4923 ;;		_InitializeTasks
  4924 ;;		_ScheduleTasks
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text13
  4931  005DD4                     __ptext13:
  4932                           	opt stack 0
  4933  005DD4                     _Sch_MainScheduler:
  4934                           	opt stack 8
  4935                           
  4936                           ;os_sched.c: 178: InitializeTasks();
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;incstack = 0
  4940  005DD4  ECF6  F025         	call	_InitializeTasks	;wreg free
  4941                           
  4942                           ;os_sched.c: 180: SystemState = RunningState;
  4943  005DD8  0E01               	movlw	1
  4944  005DDA  0100               	movlb	0	; () banked
  4945  005DDC  6FD2               	movwf	_SystemState& (0+255),b
  4946  005DDE                     
  4947                           ;os_sched.c: 188: {
  4948                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4949                           
  4950                           ; BSR set to: 0
  4951  005DDE  0102               	movlb	2	; () banked
  4952  005DE0  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4953  005DE2  A4D8               	btfss	status,2,c
  4954  005DE4  D7FC               	goto	l790
  4955                           
  4956                           ; BSR set to: 2
  4957                           ;os_sched.c: 191: {
  4958                           ;os_sched.c: 196: ScheduleTasks();
  4959  005DE6  ECA9  F015         	call	_ScheduleTasks	;wreg free
  4960                           
  4961                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4962  005DEA  0E01               	movlw	1
  4963  005DEC  0102               	movlb	2	; () banked
  4964  005DEE  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4965                           
  4966                           ; BSR set to: 2
  4967                           
  4968                           ; BSR set to: 2
  4969  005DF0  D7F6               	goto	l790
  4970  005DF2                     __end_of_Sch_MainScheduler:
  4971                           	opt stack 0
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           prodh	equ	0xFF4
  4977                           prodl	equ	0xFF3
  4978                           intcon	equ	0xFF2
  4979                           intcon2	equ	0xFF1
  4980                           intcon3	equ	0xFF0
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _ScheduleTasks *****************
  4994 ;; Defined at:
  4995 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  ActiveTaskIn    1   75[BANK0 ] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;Total ram usage:        5 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:   21
  5016 ;; This function calls:
  5017 ;;		_I2cSlv_MainTask
  5018 ;;		_Led_MainTask
  5019 ;;		_MdmHttp_MainTask
  5020 ;;		_Mdm_DrvMainFn
  5021 ;;		_Mdm_MainTask
  5022 ;;		_MyApp_Task
  5023 ;;		_Rtcm_MainTask
  5024 ;;		_Term_MainTask
  5025 ;;		_UsbDevice_MainTask
  5026 ;;		_Wdg_MainTask
  5027 ;; This function is called by:
  5028 ;;		_Sch_MainScheduler
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text14
  5033  002B52                     __ptext14:
  5034                           	opt stack 0
  5035  002B52                     _ScheduleTasks:
  5036                           	opt stack 8
  5037                           
  5038                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5039                           
  5040                           ; BSR set to: 2
  5041                           ;incstack = 0
  5042  002B52  0E00               	movlw	0
  5043  002B54  0100               	movlb	0	; () banked
  5044  002B56  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5045                           
  5046                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5047  002B58  0E00               	movlw	0
  5048  002B5A  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5049  002B5C                     l14043:
  5050                           
  5051                           ; BSR set to: 0
  5052  002B5C  0E5D               	movlw	low _TaskNumber
  5053  002B5E  6EF6               	movwf	tblptrl,c
  5054  002B60                     	if	1	;There is more than 1 active tblptr byte
  5055  002B60  0EFC               	movlw	high _TaskNumber
  5056  002B62  6EF7               	movwf	tblptrh,c
  5057  002B64                     	endif
  5058  002B64                     	if	0	;There are less than 3 active tblptr bytes
  5059  002B64                     	endif
  5060  002B64  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5061  002B66  6FA7               	movwf	??_ScheduleTasks& (0+255),b
  5062  002B68  6BA8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5063  002B6A  0009               	tblrd		*+
  5064  002B6C  50F5               	movf	tablat,w,c
  5065  002B6E  5DA7               	subwf	??_ScheduleTasks& (0+255),w,b
  5066  002B70  0009               	tblrd		*+
  5067  002B72  50F5               	movf	tablat,w,c
  5068  002B74  59A8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5069  002B76  B0D8               	btfsc	status,0,c
  5070  002B78  0012               	return	
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;os_sched.c: 106: {
  5074                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ; BSR set to: 0
  5079  002B7A  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5080  002B7C  0D08               	mullw	8
  5081  002B7E  0E03               	movlw	3
  5082  002B80  26F3               	addwf	prodl,f,c
  5083  002B82  0E00               	movlw	0
  5084  002B84  22F4               	addwfc	prodh,f,c
  5085  002B86  0E82               	movlw	low _TaskTable
  5086  002B88  24F3               	addwf	prodl,w,c
  5087  002B8A  6ED9               	movwf	fsr2l,c
  5088  002B8C  0E05               	movlw	high _TaskTable
  5089  002B8E  20F4               	addwfc	prodh,w,c
  5090  002B90  6EDA               	movwf	fsr2h,c
  5091  002B92  2ADE               	incf	postinc2,f,c
  5092  002B94  0E00               	movlw	0
  5093  002B96  22DD               	addwfc	postdec2,f,c
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5097  002B98  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5098  002B9A  0D08               	mullw	8
  5099  002B9C  0E05               	movlw	5
  5100  002B9E  26F3               	addwf	prodl,f,c
  5101  002BA0  0E00               	movlw	0
  5102  002BA2  22F4               	addwfc	prodh,f,c
  5103  002BA4  0E82               	movlw	low _TaskTable
  5104  002BA6  24F3               	addwf	prodl,w,c
  5105  002BA8  6ED9               	movwf	fsr2l,c
  5106  002BAA  0E05               	movlw	high _TaskTable
  5107  002BAC  20F4               	addwfc	prodh,w,c
  5108  002BAE  6EDA               	movwf	fsr2h,c
  5109  002BB0  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5110  002BB2  0D08               	mullw	8
  5111  002BB4  0E03               	movlw	3
  5112  002BB6  26F3               	addwf	prodl,f,c
  5113  002BB8  0E00               	movlw	0
  5114  002BBA  22F4               	addwfc	prodh,f,c
  5115  002BBC  0E82               	movlw	low _TaskTable
  5116  002BBE  24F3               	addwf	prodl,w,c
  5117  002BC0  6EE1               	movwf	fsr1l,c
  5118  002BC2  0E05               	movlw	high _TaskTable
  5119  002BC4  20F4               	addwfc	prodh,w,c
  5120  002BC6  6EE2               	movwf	fsr1h,c
  5121  002BC8  50DE               	movf	postinc2,w,c
  5122  002BCA  5CE6               	subwf	postinc1,w,c
  5123  002BCC  50DE               	movf	postinc2,w,c
  5124  002BCE  58E6               	subwfb	postinc1,w,c
  5125  002BD0  A0D8               	btfss	status,0,c
  5126  002BD2  D04E               	goto	l775
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;os_sched.c: 111: {
  5130                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5131  002BD4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5132  002BD6  0D08               	mullw	8
  5133  002BD8  0E03               	movlw	3
  5134  002BDA  26F3               	addwf	prodl,f,c
  5135  002BDC  0E00               	movlw	0
  5136  002BDE  22F4               	addwfc	prodh,f,c
  5137  002BE0  0E82               	movlw	low _TaskTable
  5138  002BE2  24F3               	addwf	prodl,w,c
  5139  002BE4  6ED9               	movwf	fsr2l,c
  5140  002BE6  0E05               	movlw	high _TaskTable
  5141  002BE8  20F4               	addwfc	prodh,w,c
  5142  002BEA  6EDA               	movwf	fsr2h,c
  5143  002BEC  0E00               	movlw	0
  5144  002BEE  6EDE               	movwf	postinc2,c
  5145  002BF0  0E00               	movlw	0
  5146  002BF2  6EDD               	movwf	postdec2,c
  5147                           
  5148                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5149  002BF4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5150  002BF6  0D08               	mullw	8
  5151  002BF8  0E02               	movlw	2
  5152  002BFA  26F3               	addwf	prodl,f,c
  5153  002BFC  0E00               	movlw	0
  5154  002BFE  22F4               	addwfc	prodh,f,c
  5155  002C00  0E82               	movlw	low _TaskTable
  5156  002C02  24F3               	addwf	prodl,w,c
  5157  002C04  6ED9               	movwf	fsr2l,c
  5158  002C06  0E05               	movlw	high _TaskTable
  5159  002C08  20F4               	addwfc	prodh,w,c
  5160  002C0A  6EDA               	movwf	fsr2h,c
  5161  002C0C  0E01               	movlw	1
  5162  002C0E  6EDF               	movwf	indf2,c
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5166  002C10  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5167  002C12  0D08               	mullw	8
  5168  002C14  0E82               	movlw	low _TaskTable
  5169  002C16  24F3               	addwf	prodl,w,c
  5170  002C18  6ED9               	movwf	fsr2l,c
  5171  002C1A  0E05               	movlw	high _TaskTable
  5172  002C1C  20F4               	addwfc	prodh,w,c
  5173  002C1E  6EDA               	movwf	fsr2h,c
  5174  002C20  D801               	call	u13528
  5175  002C22  D017               	goto	u13529
  5176  002C24                     u13528:
  5177  002C24  0005               	push	
  5178  002C26  6EFA               	movwf	pclath,c
  5179  002C28  50DE               	movf	postinc2,w,c
  5180  002C2A  6EFD               	movwf	tosl,c
  5181  002C2C  50DE               	movf	postinc2,w,c
  5182  002C2E  6EFE               	movwf	tosh,c
  5183  002C30  50F8               	movf	tblptru,w,c
  5184  002C32  6EFF               	movwf	tosu,c
  5185  002C34  50FA               	movf	pclath,w,c
  5186  002C36  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5187  002C38  0D08               	mullw	8
  5188  002C3A  0E07               	movlw	7
  5189  002C3C  26F3               	addwf	prodl,f,c
  5190  002C3E  0E00               	movlw	0
  5191  002C40  22F4               	addwfc	prodh,f,c
  5192  002C42  0E82               	movlw	low _TaskTable
  5193  002C44  24F3               	addwf	prodl,w,c
  5194  002C46  6ED9               	movwf	fsr2l,c
  5195  002C48  0E05               	movlw	high _TaskTable
  5196  002C4A  20F4               	addwfc	prodh,w,c
  5197  002C4C  6EDA               	movwf	fsr2h,c
  5198  002C4E  50DF               	movf	indf2,w,c
  5199  002C50  0012               	return		;indir
  5200  002C52                     u13529:
  5201                           
  5202                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5203  002C52  0100               	movlb	0	; () banked
  5204  002C54  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5205  002C56  0D08               	mullw	8
  5206  002C58  0E02               	movlw	2
  5207  002C5A  26F3               	addwf	prodl,f,c
  5208  002C5C  0E00               	movlw	0
  5209  002C5E  22F4               	addwfc	prodh,f,c
  5210  002C60  0E82               	movlw	low _TaskTable
  5211  002C62  24F3               	addwf	prodl,w,c
  5212  002C64  6ED9               	movwf	fsr2l,c
  5213  002C66  0E05               	movlw	high _TaskTable
  5214  002C68  20F4               	addwfc	prodh,w,c
  5215  002C6A  6EDA               	movwf	fsr2h,c
  5216  002C6C  0E00               	movlw	0
  5217  002C6E  6EDF               	movwf	indf2,c
  5218  002C70                     l775:
  5219                           
  5220                           ; BSR set to: 0
  5221                           
  5222                           ; BSR set to: 0
  5223                           
  5224                           ;os_sched.c: 117: else
  5225                           ;os_sched.c: 118: {
  5226                           
  5227                           ; BSR set to: 0
  5228  002C70  2BAB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5229  002C72  D774               	goto	l14043
  5230  002C74                     __end_of_ScheduleTasks:
  5231                           	opt stack 0
  5232                           tosu	equ	0xFFF
  5233                           tosh	equ	0xFFE
  5234                           tosl	equ	0xFFD
  5235                           pclath	equ	0xFFA
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           intcon	equ	0xFF2
  5243                           intcon2	equ	0xFF1
  5244                           intcon3	equ	0xFF0
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           postinc1	equ	0xFE6
  5248                           postdec1	equ	0xFE5
  5249                           fsr1h	equ	0xFE2
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _InitializeTasks *****************
  5259 ;; Defined at:
  5260 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  ActiveTaskIn    1   73[BANK0 ] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;Total ram usage:        3 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:   21
  5281 ;; This function calls:
  5282 ;;		_I2cSlv_MainTask
  5283 ;;		_Led_MainTask
  5284 ;;		_MdmHttp_MainTask
  5285 ;;		_Mdm_DrvMainFn
  5286 ;;		_Mdm_MainTask
  5287 ;;		_MyApp_Task
  5288 ;;		_Rtcm_MainTask
  5289 ;;		_Term_MainTask
  5290 ;;		_UsbDevice_MainTask
  5291 ;;		_Wdg_MainTask
  5292 ;; This function is called by:
  5293 ;;		_Sch_MainScheduler
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text15
  5298  004BEC                     __ptext15:
  5299                           	opt stack 0
  5300  004BEC                     _InitializeTasks:
  5301                           	opt stack 8
  5302                           
  5303                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;incstack = 0
  5307  004BEC  0E00               	movlw	0
  5308  004BEE  0100               	movlb	0	; () banked
  5309  004BF0  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5310                           
  5311                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5312  004BF2  0E00               	movlw	0
  5313  004BF4  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5314  004BF6                     l14031:
  5315                           
  5316                           ; BSR set to: 0
  5317  004BF6  0E5D               	movlw	low _TaskNumber
  5318  004BF8  6EF6               	movwf	tblptrl,c
  5319  004BFA                     	if	1	;There is more than 1 active tblptr byte
  5320  004BFA  0EFC               	movlw	high _TaskNumber
  5321  004BFC  6EF7               	movwf	tblptrh,c
  5322  004BFE                     	endif
  5323  004BFE                     	if	0	;There are less than 3 active tblptr bytes
  5324  004BFE                     	endif
  5325  004BFE  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5326  004C00  6FA7               	movwf	??_InitializeTasks& (0+255),b
  5327  004C02  6BA8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5328  004C04  0009               	tblrd		*+
  5329  004C06  50F5               	movf	tablat,w,c
  5330  004C08  5DA7               	subwf	??_InitializeTasks& (0+255),w,b
  5331  004C0A  0009               	tblrd		*+
  5332  004C0C  50F5               	movf	tablat,w,c
  5333  004C0E  59A8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5334  004C10  B0D8               	btfsc	status,0,c
  5335  004C12  0012               	return	
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;os_sched.c: 86: {
  5339                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5340                           
  5341                           ; BSR set to: 0
  5342                           
  5343                           ; BSR set to: 0
  5344  004C14  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5345  004C16  0D08               	mullw	8
  5346  004C18  0E82               	movlw	low _TaskTable
  5347  004C1A  24F3               	addwf	prodl,w,c
  5348  004C1C  6ED9               	movwf	fsr2l,c
  5349  004C1E  0E05               	movlw	high _TaskTable
  5350  004C20  20F4               	addwfc	prodh,w,c
  5351  004C22  6EDA               	movwf	fsr2h,c
  5352  004C24  D801               	call	u13488
  5353  004C26  D017               	goto	u13489
  5354  004C28                     u13488:
  5355  004C28  0005               	push	
  5356  004C2A  6EFA               	movwf	pclath,c
  5357  004C2C  50DE               	movf	postinc2,w,c
  5358  004C2E  6EFD               	movwf	tosl,c
  5359  004C30  50DE               	movf	postinc2,w,c
  5360  004C32  6EFE               	movwf	tosh,c
  5361  004C34  50F8               	movf	tblptru,w,c
  5362  004C36  6EFF               	movwf	tosu,c
  5363  004C38  50FA               	movf	pclath,w,c
  5364  004C3A  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5365  004C3C  0D08               	mullw	8
  5366  004C3E  0E07               	movlw	7
  5367  004C40  26F3               	addwf	prodl,f,c
  5368  004C42  0E00               	movlw	0
  5369  004C44  22F4               	addwfc	prodh,f,c
  5370  004C46  0E82               	movlw	low _TaskTable
  5371  004C48  24F3               	addwf	prodl,w,c
  5372  004C4A  6ED9               	movwf	fsr2l,c
  5373  004C4C  0E05               	movlw	high _TaskTable
  5374  004C4E  20F4               	addwfc	prodh,w,c
  5375  004C50  6EDA               	movwf	fsr2h,c
  5376  004C52  50DF               	movf	indf2,w,c
  5377  004C54  0012               	return		;indir
  5378  004C56                     u13489:
  5379  004C56  0100               	movlb	0	; () banked
  5380  004C58  2BA9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5381  004C5A  D7CD               	goto	l14031
  5382  004C5C                     __end_of_InitializeTasks:
  5383                           	opt stack 0
  5384                           tosu	equ	0xFFF
  5385                           tosh	equ	0xFFE
  5386                           tosl	equ	0xFFD
  5387                           pclath	equ	0xFFA
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           intcon	equ	0xFF2
  5395                           intcon2	equ	0xFF1
  5396                           intcon3	equ	0xFF0
  5397                           postinc0	equ	0xFEE
  5398                           wreg	equ	0xFE8
  5399                           postinc1	equ	0xFE6
  5400                           postdec1	equ	0xFE5
  5401                           fsr1h	equ	0xFE2
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _MyApp_Task *****************
  5411 ;; Defined at:
  5412 ;;		line 150 in file "../Source/c/04_App/app.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  Options         1    wreg     unsigned char 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  Options         1    0[COMRAM] unsigned char 
  5417 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5418 ;;  phone          10   50[BANK1 ] unsigned char [10]
  5419 ;;  I2cTxBufferT    2   64[BANK1 ] unsigned char [2]
  5420 ;;  on              2   62[BANK1 ] unsigned char [2]
  5421 ;;  off             2   60[BANK1 ] unsigned char [2]
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;Total ram usage:       66 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:   15
  5438 ;; This function calls:
  5439 ;;		_Led_SetLedBlinkTime
  5440 ;;		_Mdm_GetSmsData
  5441 ;;		_Mdm_IsRinging
  5442 ;;		_Mdm_IsSmsReceived
  5443 ;;		_Mdm_RequestSmsData
  5444 ;;		_blinkForSeconds
  5445 ;;		_initGprsModem
  5446 ;; This function is called by:
  5447 ;;		_InitializeTasks
  5448 ;;		_ScheduleTasks
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text16
  5453  003E42                     __ptext16:
  5454                           	opt stack 0
  5455  003E42                     _MyApp_Task:
  5456                           	opt stack 13
  5457                           
  5458                           ;app.c: 152: static uint8_t countRelay1 = 1;
  5459                           ;app.c: 153: static uint16_t countRelay2 = 1;
  5460                           ;app.c: 154: static bool isRelay1On = 0;
  5461                           ;app.c: 155: static bool isRelay2On = 0;
  5462                           ;app.c: 156: static uint8_t test = 0;
  5463                           ;app.c: 157: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;incstack = 0
  5467  003E42  C3C6  F13C         	movff	MyApp_Task@F8990,MyApp_Task@off
  5468  003E46  C3C7  F13D         	movff	MyApp_Task@F8990+1,MyApp_Task@off+1
  5469                           
  5470                           ;app.c: 158: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5471  003E4A  C3C4  F13E         	movff	MyApp_Task@F8993,MyApp_Task@on
  5472  003E4E  C3C5  F13F         	movff	MyApp_Task@F8993+1,MyApp_Task@on+1
  5473                           
  5474                           ;app.c: 161: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5475  003E52  C320  F140         	movff	MyApp_Task@F8996,MyApp_Task@I2cTxBufferTest
  5476  003E56  C321  F141         	movff	MyApp_Task@F8996+1,MyApp_Task@I2cTxBufferTest+1
  5477                           
  5478                           ;app.c: 162: static UINT8 I2cStsReady = 0u;
  5479                           ;app.c: 163: UINT8 phone[] = {'3', '2', '0', '0', '2', '7', '6', '3', '1', '8'};
  5480  003E5A  EE24  F0E5         	lfsr	2,MyApp_Task@F8999
  5481  003E5E  EE11  F032         	lfsr	1,MyApp_Task@phone
  5482  003E62  0E09               	movlw	9
  5483  003E64                     u13431:
  5484  003E64  CFDB FFE3          	movff	plusw2,plusw1
  5485  003E68  06E8               	decf	wreg,f,c
  5486  003E6A  E2FC               	bc	u13431
  5487                           
  5488                           ;app.c: 165: static uint16_t blickTicks = 0xFFFF;
  5489                           ;app.c: 166: static uint8_t blinkSeconds = 0;
  5490                           ;app.c: 168: uint8_t smsText[((UINT8)(50))];
  5491                           ;app.c: 170: switch (SystemState)
  5492  003E6C  D03F               	goto	l2563
  5493  003E6E                     
  5494                           ;app.c: 175: Led_SetLedBlinkTime(1u,100,900);
  5495  003E6E  0E00               	movlw	0
  5496  003E70  0100               	movlb	0	; () banked
  5497  003E72  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5498  003E74  0E64               	movlw	100
  5499  003E76  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5500  003E78  0E03               	movlw	3
  5501  003E7A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5502  003E7C  0E84               	movlw	132
  5503  003E7E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5504  003E80  0E01               	movlw	1
  5505  003E82  ECC1  F028         	call	_Led_SetLedBlinkTime
  5506                           
  5507                           ;app.c: 176: break;
  5508  003E86  0012               	return	
  5509  003E88                     
  5510                           ;app.c: 180: if (initGprsModem())
  5511  003E88  EC71  F02A         	call	_initGprsModem	;wreg free
  5512  003E8C  0900               	iorlw	0
  5513  003E8E  B4D8               	btfsc	status,2,c
  5514  003E90  0012               	return	
  5515                           
  5516                           ;app.c: 181: {
  5517                           ;app.c: 183: if (Mdm_IsRinging())
  5518  003E92  EC31  F02E         	call	_Mdm_IsRinging	;wreg free
  5519  003E96  0900               	iorlw	0
  5520  003E98  B4D8               	btfsc	status,2,c
  5521  003E9A  D008               	goto	l2568
  5522                           
  5523                           ;app.c: 184: {
  5524                           ;app.c: 185: blickTicks = 0;
  5525  003E9C  0E00               	movlw	0
  5526  003E9E  0103               	movlb	3	; () banked
  5527  003EA0  6FF9               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5528  003EA2  0E00               	movlw	0
  5529  003EA4  6FF8               	movwf	MyApp_Task@blickTicks& (0+255),b
  5530                           
  5531                           ;app.c: 186: blinkSeconds = 5;
  5532  003EA6  0E05               	movlw	5
  5533  003EA8  0101               	movlb	1	; () banked
  5534  003EAA  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5535  003EAC                     l2568:
  5536                           
  5537                           ;app.c: 187: }
  5538                           ;app.c: 188: if (Mdm_IsSmsReceived())
  5539                           
  5540                           ; BSR set to: 1
  5541  003EAC  EC1F  F02E         	call	_Mdm_IsSmsReceived	;wreg free
  5542  003EB0  0900               	iorlw	0
  5543  003EB2  B4D8               	btfsc	status,2,c
  5544  003EB4  D011               	goto	l2569
  5545                           
  5546                           ;app.c: 189: {
  5547                           ;app.c: 190: blickTicks = 0;
  5548  003EB6  0E00               	movlw	0
  5549  003EB8  0103               	movlb	3	; () banked
  5550  003EBA  6FF9               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5551  003EBC  0E00               	movlw	0
  5552  003EBE  6FF8               	movwf	MyApp_Task@blickTicks& (0+255),b
  5553                           
  5554                           ;app.c: 191: blinkSeconds = 3;
  5555  003EC0  0E03               	movlw	3
  5556  003EC2  0101               	movlb	1	; () banked
  5557  003EC4  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5558                           
  5559                           ; BSR set to: 1
  5560                           ;app.c: 192: Mdm_RequestSmsData();
  5561  003EC6  ECB5  F02F         	call	_Mdm_RequestSmsData	;wreg free
  5562                           
  5563                           ;app.c: 193: Mdm_GetSmsData(smsText);
  5564  003ECA  0E00               	movlw	low MyApp_Task@smsText
  5565  003ECC  0100               	movlb	0	; () banked
  5566  003ECE  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5567  003ED0  0E01               	movlw	high MyApp_Task@smsText
  5568  003ED2  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5569  003ED4  EC3C  F02C         	call	_Mdm_GetSmsData	;wreg free
  5570  003ED8                     l2569:
  5571                           
  5572                           ;app.c: 194: }
  5573                           ;app.c: 195: blinkForSeconds(blinkSeconds, &blickTicks);
  5574  003ED8  0EF8               	movlw	low MyApp_Task@blickTicks
  5575  003EDA  0100               	movlb	0	; () banked
  5576  003EDC  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5577  003EDE  0E03               	movlw	high MyApp_Task@blickTicks
  5578  003EE0  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5579  003EE2  0101               	movlb	1	; () banked
  5580  003EE4  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5581  003EE6  EC77  F02C         	call	_blinkForSeconds
  5582                           
  5583                           ;app.c: 202: }
  5584                           
  5585                           ;app.c: 201: break;
  5586                           
  5587                           ;app.c: 200: default:
  5588                           
  5589                           ;app.c: 196: }
  5590                           ;app.c: 197: break;
  5591  003EEA  0012               	return	
  5592  003EEC                     l2563:
  5593  003EEC  0100               	movlb	0	; () banked
  5594  003EEE  51D2               	movf	_SystemState& (0+255),w,b
  5595                           
  5596                           ; Switch size 1, requested type "space"
  5597                           ; Number of cases is 2, Range of values is 0 to 1
  5598                           ; switch strategies available:
  5599                           ; Name         Instructions Cycles
  5600                           ; simple_byte            7     4 (average)
  5601                           ;	Chosen strategy is simple_byte
  5602  003EF0  0A00               	xorlw	0	; case 0
  5603  003EF2  B4D8               	btfsc	status,2,c
  5604  003EF4  D7BC               	goto	l2564
  5605  003EF6  0A01               	xorlw	1	; case 1
  5606  003EF8  A4D8               	btfss	status,2,c
  5607  003EFA  0012               	return	
  5608  003EFC  D7C5               	goto	l2566
  5609  003EFE                     __end_of_MyApp_Task:
  5610                           	opt stack 0
  5611                           tosu	equ	0xFFF
  5612                           tosh	equ	0xFFE
  5613                           tosl	equ	0xFFD
  5614                           pclath	equ	0xFFA
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           intcon2	equ	0xFF1
  5623                           intcon3	equ	0xFF0
  5624                           postinc0	equ	0xFEE
  5625                           wreg	equ	0xFE8
  5626                           postinc1	equ	0xFE6
  5627                           postdec1	equ	0xFE5
  5628                           plusw1	equ	0xFE3
  5629                           fsr1h	equ	0xFE2
  5630                           fsr1l	equ	0xFE1
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           plusw2	equ	0xFDB
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _Term_MainTask *****************
  5640 ;; Defined at:
  5641 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  Options         1    wreg     unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  Options         1    0[COMRAM] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:   17
  5662 ;; This function calls:
  5663 ;;		_Term_MainSm
  5664 ;; This function is called by:
  5665 ;;		_InitializeTasks
  5666 ;;		_ScheduleTasks
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text17
  5671  005E44                     __ptext17:
  5672                           	opt stack 0
  5673  005E44                     _Term_MainTask:
  5674                           	opt stack 11
  5675                           
  5676                           ;term.c: 847: switch (SystemState)
  5677                           
  5678                           ;incstack = 0
  5679  005E44  D003               	goto	l2438
  5680  005E46                     
  5681                           ;term.c: 858: Term_MainSm();
  5682  005E46  EC5B  F008         	call	_Term_MainSm	;wreg free
  5683                           
  5684                           ;term.c: 865: }
  5685                           
  5686                           ;term.c: 864: break;
  5687                           
  5688                           ;term.c: 863: default:
  5689                           
  5690                           ;term.c: 860: break;
  5691  005E4A  0012               	return	
  5692  005E4C                     l2438:
  5693  005E4C  0100               	movlb	0	; () banked
  5694  005E4E  51D2               	movf	_SystemState& (0+255),w,b
  5695                           
  5696                           ; Switch size 1, requested type "space"
  5697                           ; Number of cases is 2, Range of values is 0 to 1
  5698                           ; switch strategies available:
  5699                           ; Name         Instructions Cycles
  5700                           ; simple_byte            7     4 (average)
  5701                           ;	Chosen strategy is simple_byte
  5702  005E50  0A00               	xorlw	0	; case 0
  5703  005E52  B4D8               	btfsc	status,2,c
  5704  005E54  0012               	return	
  5705  005E56  0A01               	xorlw	1	; case 1
  5706  005E58  A4D8               	btfss	status,2,c
  5707  005E5A  0012               	return	
  5708  005E5C  D7F4               	goto	l2441
  5709  005E5E                     __end_of_Term_MainTask:
  5710                           	opt stack 0
  5711                           tosu	equ	0xFFF
  5712                           tosh	equ	0xFFE
  5713                           tosl	equ	0xFFD
  5714                           pclath	equ	0xFFA
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           intcon2	equ	0xFF1
  5723                           intcon3	equ	0xFF0
  5724                           postinc0	equ	0xFEE
  5725                           wreg	equ	0xFE8
  5726                           postinc1	equ	0xFE6
  5727                           postdec1	equ	0xFE5
  5728                           plusw1	equ	0xFE3
  5729                           fsr1h	equ	0xFE2
  5730                           fsr1l	equ	0xFE1
  5731                           indf2	equ	0xFDF
  5732                           postinc2	equ	0xFDE
  5733                           postdec2	equ	0xFDD
  5734                           plusw2	equ	0xFDB
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8
  5738                           
  5739 ;; *************** function _Rtcm_MainTask *****************
  5740 ;; Defined at:
  5741 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  Options         1    wreg     unsigned char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  Options         1    0[COMRAM] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:   14
  5762 ;; This function calls:
  5763 ;;		_Rtcc_AlarmConfig
  5764 ;;		_Rtcc_LockRtc
  5765 ;;		_Rtcc_RtcConfig
  5766 ;;		_Rtcc_SetRtcStatus
  5767 ;;		_Rtcc_UnlockRtc
  5768 ;;		_Rtcm_GetRtccDate
  5769 ;;		_Rtcm_SetRtccDate
  5770 ;; This function is called by:
  5771 ;;		_InitializeTasks
  5772 ;;		_ScheduleTasks
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text18
  5777  004862                     __ptext18:
  5778                           	opt stack 0
  5779  004862                     _Rtcm_MainTask:
  5780                           	opt stack 14
  5781                           
  5782                           ;rtcm.c: 101: switch (SystemState)
  5783                           
  5784                           ;incstack = 0
  5785  004862  D03D               	goto	l2168
  5786  004864                     l2169:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5790  004864  86CD               	bsf	4045,3,c	;volatile
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5794  004866  0E00               	movlw	0
  5795  004868  0103               	movlb	3	; () banked
  5796  00486A  6FB5               	movwf	_RtcConfig& (0+255),b
  5797                           
  5798                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5799  00486C  0E00               	movlw	0
  5800  00486E  6FB6               	movwf	(_RtcConfig+1)& (0+255),b
  5801                           
  5802                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5803  004870  0E01               	movlw	1
  5804  004872  6FB7               	movwf	(_RtcConfig+2)& (0+255),b
  5805                           
  5806                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5807  004874  0E01               	movlw	1
  5808  004876  6FB8               	movwf	(_RtcConfig+3)& (0+255),b
  5809                           
  5810                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5811  004878  0E01               	movlw	1
  5812  00487A  6FB1               	movwf	_AlCfg& (0+255),b
  5813                           
  5814                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5815  00487C  0E01               	movlw	1
  5816  00487E  6FB2               	movwf	(_AlCfg+1)& (0+255),b
  5817                           
  5818                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5819  004880  0E01               	movlw	1
  5820  004882  6FB3               	movwf	(_AlCfg+2)& (0+255),b
  5821                           
  5822                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5823  004884  0E00               	movlw	0
  5824  004886  6FB4               	movwf	(_AlCfg+3)& (0+255),b
  5825                           
  5826                           ; BSR set to: 3
  5827                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5828  004888  ECA5  F02F         	call	_Rtcc_UnlockRtc	;wreg free
  5829                           
  5830                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5831  00488C  0EB5               	movlw	low _RtcConfig
  5832  00488E  0100               	movlb	0	; () banked
  5833  004890  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5834  004892  0E03               	movlw	high _RtcConfig
  5835  004894  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5836  004896  ECD4  F021         	call	_Rtcc_RtcConfig	;wreg free
  5837                           
  5838                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5839  00489A  0EB1               	movlw	low _AlCfg
  5840  00489C  0100               	movlb	0	; () banked
  5841  00489E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5842  0048A0  0E03               	movlw	high _AlCfg
  5843  0048A2  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5844  0048A4  EC64  F026         	call	_Rtcc_AlarmConfig	;wreg free
  5845                           
  5846                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5847  0048A8  0E01               	movlw	1
  5848  0048AA  EC53  F02F         	call	_Rtcc_SetRtcStatus
  5849                           
  5850                           ;rtcm.c: 127: Rtcc_LockRtc();
  5851  0048AE  ECAD  F02F         	call	_Rtcc_LockRtc	;wreg free
  5852                           
  5853                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5854  0048B2  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5855  0048B6  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  5856  0048BA  0E07               	movlw	7
  5857  0048BC                     u9351:
  5858  0048BC  CFDB FFEB          	movff	plusw2,plusw0
  5859  0048C0  06E8               	decf	wreg,f,c
  5860  0048C2  E2FC               	bc	u9351
  5861  0048C4  EC97  F028         	call	_Rtcm_SetRtccDate	;wreg free
  5862                           
  5863                           ;rtcm.c: 154: break;
  5864  0048C8  0012               	return	
  5865  0048CA                     
  5866                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5867  0048CA  ECCD  F026         	call	_Rtcm_GetRtccDate	;wreg free
  5868  0048CE  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5869  0048D2  0E07               	movlw	7
  5870  0048D4                     u9361:
  5871  0048D4  CFEB FFDB          	movff	plusw0,plusw2
  5872  0048D8  06E8               	decf	wreg,f,c
  5873  0048DA  E2FC               	bc	u9361
  5874                           
  5875                           ;rtcm.c: 165: }
  5876                           
  5877                           ;rtcm.c: 164: break;
  5878                           
  5879                           ;rtcm.c: 163: default:
  5880                           
  5881                           ;rtcm.c: 160: break;
  5882  0048DC  0012               	return	
  5883  0048DE                     l2168:
  5884  0048DE  0100               	movlb	0	; () banked
  5885  0048E0  51D2               	movf	_SystemState& (0+255),w,b
  5886                           
  5887                           ; Switch size 1, requested type "space"
  5888                           ; Number of cases is 2, Range of values is 0 to 1
  5889                           ; switch strategies available:
  5890                           ; Name         Instructions Cycles
  5891                           ; simple_byte            7     4 (average)
  5892                           ;	Chosen strategy is simple_byte
  5893  0048E2  0A00               	xorlw	0	; case 0
  5894  0048E4  B4D8               	btfsc	status,2,c
  5895  0048E6  D7BE               	goto	l2169
  5896  0048E8  0A01               	xorlw	1	; case 1
  5897  0048EA  A4D8               	btfss	status,2,c
  5898  0048EC  0012               	return	
  5899  0048EE  D7ED               	goto	l2171
  5900  0048F0                     __end_of_Rtcm_MainTask:
  5901                           	opt stack 0
  5902                           tosu	equ	0xFFF
  5903                           tosh	equ	0xFFE
  5904                           tosl	equ	0xFFD
  5905                           pclath	equ	0xFFA
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           intcon2	equ	0xFF1
  5914                           intcon3	equ	0xFF0
  5915                           postinc0	equ	0xFEE
  5916                           plusw0	equ	0xFEB
  5917                           wreg	equ	0xFE8
  5918                           postinc1	equ	0xFE6
  5919                           postdec1	equ	0xFE5
  5920                           plusw1	equ	0xFE3
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           plusw2	equ	0xFDB
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _Led_MainTask *****************
  5932 ;; Defined at:
  5933 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  Options         1    wreg     unsigned char 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  Options         1    0[COMRAM] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5951 ;;Total ram usage:        1 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:   14
  5954 ;; This function calls:
  5955 ;;		_LedStateMachine
  5956 ;; This function is called by:
  5957 ;;		_InitializeTasks
  5958 ;;		_ScheduleTasks
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text19
  5963  00367A                     __ptext19:
  5964                           	opt stack 0
  5965  00367A                     _Led_MainTask:
  5966                           	opt stack 14
  5967                           
  5968                           ;led.c: 300: switch (SystemState)
  5969                           
  5970                           ;incstack = 0
  5971  00367A  D05C               	goto	l2082
  5972  00367C                     l2083:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  5976  00367C  9895               	bcf	3989,4,c	;volatile
  5977                           
  5978                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  5979  00367E  9A95               	bcf	3989,5,c	;volatile
  5980                           
  5981                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  5982  003680  9C95               	bcf	3989,6,c	;volatile
  5983                           
  5984                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  5985  003682  9883               	bcf	3971,4,c	;volatile
  5986                           
  5987                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  5988  003684  9A83               	bcf	3971,5,c	;volatile
  5989                           
  5990                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  5991  003686  9C83               	bcf	3971,6,c	;volatile
  5992                           
  5993                           ;led.c: 311: break;
  5994  003688  0012               	return	
  5995  00368A                     
  5996                           ; BSR set to: 0
  5997                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  5998                           
  5999                           ; BSR set to: 0
  6000  00368A  0EFB               	movlw	low _Led1Sts
  6001  00368C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6002  00368E  0E01               	movlw	high _Led1Sts
  6003  003690  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6004  003692  0EFA               	movlw	low _Led1OutSts
  6005  003694  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6006  003696  0E01               	movlw	high _Led1OutSts
  6007  003698  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6008  00369A  0E6F               	movlw	low _Led1Blink
  6009  00369C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6010  00369E  0E03               	movlw	high _Led1Blink
  6011  0036A0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6012  0036A2  0E93               	movlw	low _Led1Pulse
  6013  0036A4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6014  0036A6  0E03               	movlw	high _Led1Pulse
  6015  0036A8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6016  0036AA  0E01               	movlw	1
  6017  0036AC  EC2F  F021         	call	_LedStateMachine
  6018  0036B0  0100               	movlb	0	; () banked
  6019  0036B2  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6020  0036B4  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6021  0036B6  5083               	movf	3971,w,c	;volatile
  6022  0036B8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6023  0036BA  0BEF               	andlw	-17
  6024  0036BC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6025  0036BE  6E83               	movwf	3971,c	;volatile
  6026                           
  6027                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6028  0036C0  0EF9               	movlw	low _Led2Sts
  6029  0036C2  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6030  0036C4  0E01               	movlw	high _Led2Sts
  6031  0036C6  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6032  0036C8  0EF8               	movlw	low _Led2OutSts
  6033  0036CA  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6034  0036CC  0E01               	movlw	high _Led2OutSts
  6035  0036CE  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6036  0036D0  0E66               	movlw	low _Led2Blink
  6037  0036D2  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6038  0036D4  0E03               	movlw	high _Led2Blink
  6039  0036D6  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6040  0036D8  0E8D               	movlw	low _Led2Pulse
  6041  0036DA  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6042  0036DC  0E03               	movlw	high _Led2Pulse
  6043  0036DE  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6044  0036E0  0E02               	movlw	2
  6045  0036E2  EC2F  F021         	call	_LedStateMachine
  6046  0036E6  0100               	movlb	0	; () banked
  6047  0036E8  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6048  0036EA  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6049  0036EC  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6050  0036EE  5083               	movf	3971,w,c	;volatile
  6051  0036F0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6052  0036F2  0BDF               	andlw	-33
  6053  0036F4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6054  0036F6  6E83               	movwf	3971,c	;volatile
  6055                           
  6056                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6057  0036F8  0EF7               	movlw	low _Led3Sts
  6058  0036FA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6059  0036FC  0E01               	movlw	high _Led3Sts
  6060  0036FE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6061  003700  0EF6               	movlw	low _Led3OutSts
  6062  003702  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6063  003704  0E01               	movlw	high _Led3OutSts
  6064  003706  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6065  003708  0E5D               	movlw	low _Led3Blink
  6066  00370A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6067  00370C  0E03               	movlw	high _Led3Blink
  6068  00370E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6069  003710  0E87               	movlw	low _Led3Pulse
  6070  003712  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6071  003714  0E03               	movlw	high _Led3Pulse
  6072  003716  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6073  003718  0E03               	movlw	3
  6074  00371A  EC2F  F021         	call	_LedStateMachine
  6075  00371E  0100               	movlb	0	; () banked
  6076  003720  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6077  003722  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6078  003724  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6079  003726  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6080  003728  5083               	movf	3971,w,c	;volatile
  6081  00372A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6082  00372C  0BBF               	andlw	-65
  6083  00372E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6084  003730  6E83               	movwf	3971,c	;volatile
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;led.c: 326: }
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;led.c: 325: break;
  6091                           
  6092                           ;led.c: 324: default:
  6093                           
  6094                           ;led.c: 321: break;
  6095  003732  0012               	return	
  6096  003734                     l2082:
  6097                           
  6098                           ; BSR set to: 0
  6099  003734  0100               	movlb	0	; () banked
  6100  003736  51D2               	movf	_SystemState& (0+255),w,b
  6101                           
  6102                           ; Switch size 1, requested type "space"
  6103                           ; Number of cases is 2, Range of values is 0 to 1
  6104                           ; switch strategies available:
  6105                           ; Name         Instructions Cycles
  6106                           ; simple_byte            7     4 (average)
  6107                           ;	Chosen strategy is simple_byte
  6108  003738  0A00               	xorlw	0	; case 0
  6109  00373A  B4D8               	btfsc	status,2,c
  6110  00373C  D79F               	goto	l2083
  6111  00373E  0A01               	xorlw	1	; case 1
  6112  003740  A4D8               	btfss	status,2,c
  6113  003742  0012               	return	
  6114  003744  D7A2               	goto	l2085
  6115  003746                     __end_of_Led_MainTask:
  6116                           	opt stack 0
  6117                           tosu	equ	0xFFF
  6118                           tosh	equ	0xFFE
  6119                           tosl	equ	0xFFD
  6120                           pclath	equ	0xFFA
  6121                           tblptru	equ	0xFF8
  6122                           tblptrh	equ	0xFF7
  6123                           tblptrl	equ	0xFF6
  6124                           tablat	equ	0xFF5
  6125                           prodh	equ	0xFF4
  6126                           prodl	equ	0xFF3
  6127                           intcon	equ	0xFF2
  6128                           intcon2	equ	0xFF1
  6129                           intcon3	equ	0xFF0
  6130                           postinc0	equ	0xFEE
  6131                           plusw0	equ	0xFEB
  6132                           wreg	equ	0xFE8
  6133                           postinc1	equ	0xFE6
  6134                           postdec1	equ	0xFE5
  6135                           plusw1	equ	0xFE3
  6136                           fsr1h	equ	0xFE2
  6137                           fsr1l	equ	0xFE1
  6138                           indf2	equ	0xFDF
  6139                           postinc2	equ	0xFDE
  6140                           postdec2	equ	0xFDD
  6141                           plusw2	equ	0xFDB
  6142                           fsr2h	equ	0xFDA
  6143                           fsr2l	equ	0xFD9
  6144                           status	equ	0xFD8
  6145                           
  6146 ;; *************** function _UsbDevice_MainTask *****************
  6147 ;; Defined at:
  6148 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  Options         1    wreg     unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  Options         1    0[COMRAM] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:   20
  6169 ;; This function calls:
  6170 ;;		_CDCTxService
  6171 ;;		_USBDeviceInit
  6172 ;;		_USBDeviceTasks
  6173 ;; This function is called by:
  6174 ;;		_InitializeTasks
  6175 ;;		_ScheduleTasks
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text20
  6180  005C1A                     __ptext20:
  6181                           	opt stack 0
  6182  005C1A                     _UsbDevice_MainTask:
  6183                           	opt stack 8
  6184                           
  6185                           ;usb_device_mgr.c: 74: switch (SystemState)
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;incstack = 0
  6189  005C1A  D008               	goto	l1975
  6190  005C1C                     
  6191                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6192  005C1C  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  6193                           
  6194                           ;usb_device_mgr.c: 80: ;
  6195                           ;usb_device_mgr.c: 81: break;
  6196  005C20  0012               	return	
  6197  005C22                     
  6198                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6199  005C22  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6200                           
  6201                           ;usb_device_mgr.c: 90: CDCTxService();
  6202  005C26  ECA2  F012         	call	_CDCTxService	;wreg free
  6203                           
  6204                           ;usb_device_mgr.c: 101: }
  6205                           
  6206                           ;usb_device_mgr.c: 100: break;
  6207                           
  6208                           ;usb_device_mgr.c: 99: default:
  6209                           
  6210                           ;usb_device_mgr.c: 96: break;
  6211  005C2A  0012               	return	
  6212  005C2C                     l1975:
  6213  005C2C  0100               	movlb	0	; () banked
  6214  005C2E  51D2               	movf	_SystemState& (0+255),w,b
  6215                           
  6216                           ; Switch size 1, requested type "space"
  6217                           ; Number of cases is 2, Range of values is 0 to 1
  6218                           ; switch strategies available:
  6219                           ; Name         Instructions Cycles
  6220                           ; simple_byte            7     4 (average)
  6221                           ;	Chosen strategy is simple_byte
  6222  005C30  0A00               	xorlw	0	; case 0
  6223  005C32  B4D8               	btfsc	status,2,c
  6224  005C34  D7F3               	goto	l1976
  6225  005C36  0A01               	xorlw	1	; case 1
  6226  005C38  A4D8               	btfss	status,2,c
  6227  005C3A  0012               	return	
  6228  005C3C  D7F2               	goto	l1978
  6229  005C3E                     __end_of_UsbDevice_MainTask:
  6230                           	opt stack 0
  6231                           tosu	equ	0xFFF
  6232                           tosh	equ	0xFFE
  6233                           tosl	equ	0xFFD
  6234                           pclath	equ	0xFFA
  6235                           tblptru	equ	0xFF8
  6236                           tblptrh	equ	0xFF7
  6237                           tblptrl	equ	0xFF6
  6238                           tablat	equ	0xFF5
  6239                           prodh	equ	0xFF4
  6240                           prodl	equ	0xFF3
  6241                           intcon	equ	0xFF2
  6242                           intcon2	equ	0xFF1
  6243                           intcon3	equ	0xFF0
  6244                           postinc0	equ	0xFEE
  6245                           plusw0	equ	0xFEB
  6246                           wreg	equ	0xFE8
  6247                           postinc1	equ	0xFE6
  6248                           postdec1	equ	0xFE5
  6249                           plusw1	equ	0xFE3
  6250                           fsr1h	equ	0xFE2
  6251                           fsr1l	equ	0xFE1
  6252                           indf2	equ	0xFDF
  6253                           postinc2	equ	0xFDE
  6254                           postdec2	equ	0xFDD
  6255                           plusw2	equ	0xFDB
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function _MdmHttp_MainTask *****************
  6261 ;; Defined at:
  6262 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  Options         1    wreg     unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  Options         1    0[COMRAM] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;Total ram usage:        0 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:   15
  6283 ;; This function calls:
  6284 ;;		_HttpGetMethod
  6285 ;;		_InitGprsNetwork
  6286 ;; This function is called by:
  6287 ;;		_InitializeTasks
  6288 ;;		_ScheduleTasks
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text21
  6293  00549C                     __ptext21:
  6294                           	opt stack 0
  6295  00549C                     _MdmHttp_MainTask:
  6296                           	opt stack 13
  6297                           
  6298                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6299                           
  6300                           ;incstack = 0
  6301  00549C  D019               	goto	l1274
  6302  00549E                     
  6303                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6304  00549E  0E03               	movlw	3
  6305  0054A0  0100               	movlb	0	; () banked
  6306  0054A2  19CF               	xorwf	_MdmStatus& (0+255),w,b
  6307  0054A4  A4D8               	btfss	status,2,c
  6308  0054A6  0012               	return	
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;mdm_gsm_gprs_http.c: 570: {
  6312                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6313  0054A8  C326  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6314  0054AC  C327  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6315  0054B0  C1F2  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6316  0054B4  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6317  0054B8  0101               	movlb	1	; () banked
  6318  0054BA  6FF1               	movwf	_GprsNetworkSts& (0+255),b
  6319                           
  6320                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6321  0054BC  0EA4               	movlw	low _HttpGetDataLocal
  6322  0054BE  0100               	movlb	0	; () banked
  6323  0054C0  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6324  0054C2  0E03               	movlw	high _HttpGetDataLocal
  6325  0054C4  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6326  0054C6  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6327  0054CA  0101               	movlb	1	; () banked
  6328  0054CC  6FF0               	movwf	_HttpGetMethodSts& (0+255),b
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;mdm_gsm_gprs_http.c: 581: }
  6332                           
  6333                           ; BSR set to: 1
  6334                           ;mdm_gsm_gprs_http.c: 580: break;
  6335                           
  6336                           ;mdm_gsm_gprs_http.c: 579: default:
  6337                           
  6338                           ; BSR set to: 1
  6339                           ;mdm_gsm_gprs_http.c: 575: }
  6340                           ;mdm_gsm_gprs_http.c: 576: break;
  6341  0054CE  0012               	return	
  6342  0054D0                     l1274:
  6343                           
  6344                           ; BSR set to: 1
  6345  0054D0  0100               	movlb	0	; () banked
  6346  0054D2  51D2               	movf	_SystemState& (0+255),w,b
  6347                           
  6348                           ; Switch size 1, requested type "space"
  6349                           ; Number of cases is 2, Range of values is 0 to 1
  6350                           ; switch strategies available:
  6351                           ; Name         Instructions Cycles
  6352                           ; simple_byte            7     4 (average)
  6353                           ;	Chosen strategy is simple_byte
  6354  0054D4  0A00               	xorlw	0	; case 0
  6355  0054D6  B4D8               	btfsc	status,2,c
  6356  0054D8  0012               	return	
  6357  0054DA  0A01               	xorlw	1	; case 1
  6358  0054DC  A4D8               	btfss	status,2,c
  6359  0054DE  0012               	return	
  6360  0054E0  D7DE               	goto	l1277
  6361  0054E2                     __end_of_MdmHttp_MainTask:
  6362                           	opt stack 0
  6363                           tosu	equ	0xFFF
  6364                           tosh	equ	0xFFE
  6365                           tosl	equ	0xFFD
  6366                           pclath	equ	0xFFA
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           intcon2	equ	0xFF1
  6375                           intcon3	equ	0xFF0
  6376                           postinc0	equ	0xFEE
  6377                           plusw0	equ	0xFEB
  6378                           wreg	equ	0xFE8
  6379                           postinc1	equ	0xFE6
  6380                           postdec1	equ	0xFE5
  6381                           plusw1	equ	0xFE3
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           plusw2	equ	0xFDB
  6388                           fsr2h	equ	0xFDA
  6389                           fsr2l	equ	0xFD9
  6390                           status	equ	0xFD8
  6391                           
  6392 ;; *************** function _Mdm_MainTask *****************
  6393 ;; Defined at:
  6394 ;;		line 734 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  Options         1    wreg     unsigned char 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  Options         1    0[COMRAM] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;Total ram usage:        0 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:   15
  6415 ;; This function calls:
  6416 ;;		_CheckModem
  6417 ;;		_ConfigureModem
  6418 ;;		_GetSmsSm
  6419 ;;		_ModemEvtParser
  6420 ;;		_SendSmsSm
  6421 ;;		_TurnOnModem
  6422 ;;		_UartSetConfig
  6423 ;;		_Uart_InitUartModule
  6424 ;; This function is called by:
  6425 ;;		_InitializeTasks
  6426 ;;		_ScheduleTasks
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text22
  6431  0052CC                     __ptext22:
  6432                           	opt stack 0
  6433  0052CC                     _Mdm_MainTask:
  6434                           	opt stack 13
  6435                           
  6436                           ;mdm_gsm_gprs.c: 736: switch (SystemState)
  6437                           
  6438                           ;incstack = 0
  6439  0052CC  D01E               	goto	l1097
  6440  0052CE                     
  6441                           ;mdm_gsm_gprs.c: 741: UartSetConfig();
  6442  0052CE  ECBD  F027         	call	_UartSetConfig	;wreg free
  6443                           
  6444                           ;mdm_gsm_gprs.c: 743: Uart_InitUartModule(1,&UartConfig);
  6445  0052D2  0E28               	movlw	low _UartConfig
  6446  0052D4  0100               	movlb	0	; () banked
  6447  0052D6  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6448  0052D8  0E03               	movlw	high _UartConfig
  6449  0052DA  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6450  0052DC  0E01               	movlw	1
  6451  0052DE  EC5E  F005         	call	_Uart_InitUartModule
  6452                           
  6453                           ;mdm_gsm_gprs.c: 744: break;
  6454  0052E2  0012               	return	
  6455  0052E4                     
  6456                           ;mdm_gsm_gprs.c: 749: CheckModem();
  6457  0052E4  EC55  F011         	call	_CheckModem	;wreg free
  6458                           
  6459                           ;mdm_gsm_gprs.c: 751: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6460  0052E8  042B               	decf	_ComChecCompleted,w,c
  6461  0052EA  A4D8               	btfss	status,2,c
  6462  0052EC  D005               	goto	l1101
  6463  0052EE  0100               	movlb	0	; () banked
  6464  0052F0  51CF               	movf	_MdmStatus& (0+255),w,b
  6465  0052F2  B4D8               	btfsc	status,2,c
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;mdm_gsm_gprs.c: 752: {
  6469                           ;mdm_gsm_gprs.c: 754: TurnOnModem();
  6470  0052F4  EC94  F02A         	call	_TurnOnModem	;wreg free
  6471  0052F8                     l1101:
  6472                           
  6473                           ;mdm_gsm_gprs.c: 755: }
  6474                           ;mdm_gsm_gprs.c: 757: ConfigureModem();
  6475  0052F8  EC09  F01C         	call	_ConfigureModem	;wreg free
  6476                           
  6477                           ;mdm_gsm_gprs.c: 759: ModemEvtParser();
  6478  0052FC  EC3A  F016         	call	_ModemEvtParser	;wreg free
  6479                           
  6480                           ;mdm_gsm_gprs.c: 761: GetSmsSm();
  6481  005300  ECBE  F017         	call	_GetSmsSm	;wreg free
  6482                           
  6483                           ;mdm_gsm_gprs.c: 763: SendSmsSm();
  6484  005304  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6485                           
  6486                           ;mdm_gsm_gprs.c: 769: }
  6487                           
  6488                           ;mdm_gsm_gprs.c: 768: break;
  6489                           
  6490                           ;mdm_gsm_gprs.c: 767: default:
  6491                           
  6492                           ;mdm_gsm_gprs.c: 764: break;
  6493  005308  0012               	return	
  6494  00530A                     l1097:
  6495  00530A  0100               	movlb	0	; () banked
  6496  00530C  51D2               	movf	_SystemState& (0+255),w,b
  6497                           
  6498                           ; Switch size 1, requested type "space"
  6499                           ; Number of cases is 2, Range of values is 0 to 1
  6500                           ; switch strategies available:
  6501                           ; Name         Instructions Cycles
  6502                           ; simple_byte            7     4 (average)
  6503                           ;	Chosen strategy is simple_byte
  6504  00530E  0A00               	xorlw	0	; case 0
  6505  005310  B4D8               	btfsc	status,2,c
  6506  005312  D7DD               	goto	l1098
  6507  005314  0A01               	xorlw	1	; case 1
  6508  005316  A4D8               	btfss	status,2,c
  6509  005318  0012               	return	
  6510  00531A  D7E4               	goto	l1100
  6511  00531C                     __end_of_Mdm_MainTask:
  6512                           	opt stack 0
  6513                           tosu	equ	0xFFF
  6514                           tosh	equ	0xFFE
  6515                           tosl	equ	0xFFD
  6516                           pclath	equ	0xFFA
  6517                           tblptru	equ	0xFF8
  6518                           tblptrh	equ	0xFF7
  6519                           tblptrl	equ	0xFF6
  6520                           tablat	equ	0xFF5
  6521                           prodh	equ	0xFF4
  6522                           prodl	equ	0xFF3
  6523                           intcon	equ	0xFF2
  6524                           intcon2	equ	0xFF1
  6525                           intcon3	equ	0xFF0
  6526                           postinc0	equ	0xFEE
  6527                           plusw0	equ	0xFEB
  6528                           wreg	equ	0xFE8
  6529                           postinc1	equ	0xFE6
  6530                           postdec1	equ	0xFE5
  6531                           plusw1	equ	0xFE3
  6532                           fsr1h	equ	0xFE2
  6533                           fsr1l	equ	0xFE1
  6534                           indf2	equ	0xFDF
  6535                           postinc2	equ	0xFDE
  6536                           postdec2	equ	0xFDD
  6537                           plusw2	equ	0xFDB
  6538                           fsr2h	equ	0xFDA
  6539                           fsr2l	equ	0xFD9
  6540                           status	equ	0xFD8
  6541                           
  6542 ;; *************** function _I2cSlv_MainTask *****************
  6543 ;; Defined at:
  6544 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  Options         1    wreg     unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  Options         1    0[COMRAM] unsigned char 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:   14
  6565 ;; This function calls:
  6566 ;;		_I2cSendMsgSm
  6567 ;;		_I2cSetConfig
  6568 ;;		_I2c_InitI2cModule
  6569 ;;		_OsAlrm_SetOsAlarm
  6570 ;; This function is called by:
  6571 ;;		_InitializeTasks
  6572 ;;		_ScheduleTasks
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text23
  6577  0050DA                     __ptext23:
  6578                           	opt stack 0
  6579  0050DA                     _I2cSlv_MainTask:
  6580                           	opt stack 14
  6581                           
  6582                           ;i2c_slv.c: 217: switch (SystemState)
  6583                           
  6584                           ;incstack = 0
  6585  0050DA  D020               	goto	l1387
  6586  0050DC                     
  6587                           ;i2c_slv.c: 222: I2cSetConfig();
  6588  0050DC  ECA6  F02D         	call	_I2cSetConfig	;wreg free
  6589                           
  6590                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6591  0050E0  0E53               	movlw	low _I2cConfig
  6592  0050E2  0100               	movlb	0	; () banked
  6593  0050E4  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6594  0050E6  0E03               	movlw	high _I2cConfig
  6595  0050E8  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6596  0050EA  ECBD  F025         	call	_I2c_InitI2cModule	;wreg free
  6597                           
  6598                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6599  0050EE  0E00               	movlw	0
  6600  0050F0  0100               	movlb	0	; () banked
  6601  0050F2  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6602  0050F4  0E00               	movlw	0
  6603  0050F6  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6604  0050F8  0E32               	movlw	50
  6605  0050FA  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6606  0050FC  0E00               	movlw	0
  6607  0050FE  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6608  005100  0E00               	movlw	0
  6609  005102  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6610  005104  0E00               	movlw	0
  6611  005106  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6612  005108  0E0E               	movlw	low _I2cDummyTx
  6613  00510A  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6614  00510C  0E5E               	movlw	high _I2cDummyTx
  6615  00510E  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6616  005110  EC9B  F01D         	call	_OsAlrm_SetOsAlarm	;wreg free
  6617                           
  6618                           ;i2c_slv.c: 227: break;
  6619  005114  0012               	return	
  6620  005116                     
  6621                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6622  005116  ECFF  F01D         	call	_I2cSendMsgSm	;wreg free
  6623                           
  6624                           ;i2c_slv.c: 238: }
  6625                           
  6626                           ;i2c_slv.c: 237: break;
  6627                           
  6628                           ;i2c_slv.c: 236: default:
  6629                           
  6630                           ;i2c_slv.c: 233: break;
  6631  00511A  0012               	return	
  6632  00511C                     l1387:
  6633  00511C  0100               	movlb	0	; () banked
  6634  00511E  51D2               	movf	_SystemState& (0+255),w,b
  6635                           
  6636                           ; Switch size 1, requested type "space"
  6637                           ; Number of cases is 2, Range of values is 0 to 1
  6638                           ; switch strategies available:
  6639                           ; Name         Instructions Cycles
  6640                           ; simple_byte            7     4 (average)
  6641                           ;	Chosen strategy is simple_byte
  6642  005120  0A00               	xorlw	0	; case 0
  6643  005122  B4D8               	btfsc	status,2,c
  6644  005124  D7DB               	goto	l1388
  6645  005126  0A01               	xorlw	1	; case 1
  6646  005128  A4D8               	btfss	status,2,c
  6647  00512A  0012               	return	
  6648  00512C  D7F4               	goto	l1390
  6649  00512E                     __end_of_I2cSlv_MainTask:
  6650                           	opt stack 0
  6651                           tosu	equ	0xFFF
  6652                           tosh	equ	0xFFE
  6653                           tosl	equ	0xFFD
  6654                           pclath	equ	0xFFA
  6655                           tblptru	equ	0xFF8
  6656                           tblptrh	equ	0xFF7
  6657                           tblptrl	equ	0xFF6
  6658                           tablat	equ	0xFF5
  6659                           prodh	equ	0xFF4
  6660                           prodl	equ	0xFF3
  6661                           intcon	equ	0xFF2
  6662                           intcon2	equ	0xFF1
  6663                           intcon3	equ	0xFF0
  6664                           postinc0	equ	0xFEE
  6665                           plusw0	equ	0xFEB
  6666                           wreg	equ	0xFE8
  6667                           postinc1	equ	0xFE6
  6668                           postdec1	equ	0xFE5
  6669                           plusw1	equ	0xFE3
  6670                           fsr1h	equ	0xFE2
  6671                           fsr1l	equ	0xFE1
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           postdec2	equ	0xFDD
  6675                           plusw2	equ	0xFDB
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function _Mdm_DrvMainFn *****************
  6681 ;; Defined at:
  6682 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  Options         1    wreg     unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  Options         1    0[COMRAM] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:   13
  6703 ;; This function calls:
  6704 ;;		_MdmCntSm
  6705 ;; This function is called by:
  6706 ;;		_InitializeTasks
  6707 ;;		_ScheduleTasks
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text24
  6712  006002                     __ptext24:
  6713                           	opt stack 0
  6714  006002                     _Mdm_DrvMainFn:
  6715                           	opt stack 15
  6716                           
  6717                           ;mdm_drv.c: 307: MdmCntSm();
  6718                           
  6719                           ;incstack = 0
  6720  006002  ECDB  F020         	call	_MdmCntSm	;wreg free
  6721  006006  0012               	return		;funcret
  6722  006008                     __end_of_Mdm_DrvMainFn:
  6723                           	opt stack 0
  6724                           tosu	equ	0xFFF
  6725                           tosh	equ	0xFFE
  6726                           tosl	equ	0xFFD
  6727                           pclath	equ	0xFFA
  6728                           tblptru	equ	0xFF8
  6729                           tblptrh	equ	0xFF7
  6730                           tblptrl	equ	0xFF6
  6731                           tablat	equ	0xFF5
  6732                           prodh	equ	0xFF4
  6733                           prodl	equ	0xFF3
  6734                           intcon	equ	0xFF2
  6735                           intcon2	equ	0xFF1
  6736                           intcon3	equ	0xFF0
  6737                           postinc0	equ	0xFEE
  6738                           plusw0	equ	0xFEB
  6739                           wreg	equ	0xFE8
  6740                           postinc1	equ	0xFE6
  6741                           postdec1	equ	0xFE5
  6742                           plusw1	equ	0xFE3
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           indf2	equ	0xFDF
  6746                           postinc2	equ	0xFDE
  6747                           postdec2	equ	0xFDD
  6748                           plusw2	equ	0xFDB
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8
  6752                           
  6753 ;; *************** function _Wdg_MainTask *****************
  6754 ;; Defined at:
  6755 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  Options         1    wreg     unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  Options         1    0[COMRAM] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1    wreg      void 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:   12
  6776 ;; This function calls:
  6777 ;;		_Mcu_ClearWdg
  6778 ;;		_Mcu_SetWdgSts
  6779 ;; This function is called by:
  6780 ;;		_InitializeTasks
  6781 ;;		_ScheduleTasks
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text25
  6786  005CAA                     __ptext25:
  6787                           	opt stack 0
  6788  005CAA                     _Wdg_MainTask:
  6789                           	opt stack 16
  6790                           
  6791                           ;wdg.c: 75: switch (SystemState)
  6792                           
  6793                           ;incstack = 0
  6794  005CAA  D007               	goto	l2458
  6795  005CAC                     
  6796                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6797  005CAC  0E01               	movlw	1
  6798  005CAE  EC93  F02F         	call	_Mcu_SetWdgSts
  6799                           
  6800                           ;wdg.c: 81: break;
  6801  005CB2  0012               	return	
  6802  005CB4                     
  6803                           ;wdg.c: 86: Mcu_ClearWdg();
  6804  005CB4  EC04  F030         	call	_Mcu_ClearWdg	;wreg free
  6805                           
  6806                           ;wdg.c: 92: }
  6807                           
  6808                           ;wdg.c: 91: break;
  6809                           
  6810                           ;wdg.c: 90: default:
  6811                           
  6812                           ;wdg.c: 87: break;
  6813  005CB8  0012               	return	
  6814  005CBA                     l2458:
  6815  005CBA  0100               	movlb	0	; () banked
  6816  005CBC  51D2               	movf	_SystemState& (0+255),w,b
  6817                           
  6818                           ; Switch size 1, requested type "space"
  6819                           ; Number of cases is 2, Range of values is 0 to 1
  6820                           ; switch strategies available:
  6821                           ; Name         Instructions Cycles
  6822                           ; simple_byte            7     4 (average)
  6823                           ;	Chosen strategy is simple_byte
  6824  005CBE  0A00               	xorlw	0	; case 0
  6825  005CC0  B4D8               	btfsc	status,2,c
  6826  005CC2  D7F4               	goto	l2459
  6827  005CC4  0A01               	xorlw	1	; case 1
  6828  005CC6  A4D8               	btfss	status,2,c
  6829  005CC8  0012               	return	
  6830  005CCA  D7F4               	goto	l2461
  6831  005CCC                     __end_of_Wdg_MainTask:
  6832                           	opt stack 0
  6833                           tosu	equ	0xFFF
  6834                           tosh	equ	0xFFE
  6835                           tosl	equ	0xFFD
  6836                           pclath	equ	0xFFA
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           prodh	equ	0xFF4
  6842                           prodl	equ	0xFF3
  6843                           intcon	equ	0xFF2
  6844                           intcon2	equ	0xFF1
  6845                           intcon3	equ	0xFF0
  6846                           postinc0	equ	0xFEE
  6847                           plusw0	equ	0xFEB
  6848                           wreg	equ	0xFE8
  6849                           postinc1	equ	0xFE6
  6850                           postdec1	equ	0xFE5
  6851                           plusw1	equ	0xFE3
  6852                           fsr1h	equ	0xFE2
  6853                           fsr1l	equ	0xFE1
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           plusw2	equ	0xFDB
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862 ;; *************** function _Mcu_SetWdgSts *****************
  6863 ;; Defined at:
  6864 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  WdgSts          1    wreg     unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;Total ram usage:        1 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:   11
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_Wdg_MainTask
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text26
  6893  005F26                     __ptext26:
  6894                           	opt stack 0
  6895  005F26                     _Mcu_SetWdgSts:
  6896                           	opt stack 16
  6897                           
  6898                           ;incstack = 0
  6899                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  6900  005F26  0100               	movlb	0	; () banked
  6901  005F28  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  6902                           
  6903                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  6904  005F2A  0100               	movlb	0	; () banked
  6905  005F2C  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  6906  005F2E  D002               	bra	u7955
  6907  005F30  90C0               	bcf	4032,0,c	;volatile
  6908  005F32  D001               	bra	u7956
  6909  005F34                     u7955:
  6910  005F34  80C0               	bsf	4032,0,c	;volatile
  6911  005F36                     u7956:
  6912  005F36  0012               	return		;funcret
  6913  005F38                     __end_of_Mcu_SetWdgSts:
  6914                           	opt stack 0
  6915                           tosu	equ	0xFFF
  6916                           tosh	equ	0xFFE
  6917                           tosl	equ	0xFFD
  6918                           pclath	equ	0xFFA
  6919                           tblptru	equ	0xFF8
  6920                           tblptrh	equ	0xFF7
  6921                           tblptrl	equ	0xFF6
  6922                           tablat	equ	0xFF5
  6923                           prodh	equ	0xFF4
  6924                           prodl	equ	0xFF3
  6925                           intcon	equ	0xFF2
  6926                           intcon2	equ	0xFF1
  6927                           intcon3	equ	0xFF0
  6928                           postinc0	equ	0xFEE
  6929                           plusw0	equ	0xFEB
  6930                           wreg	equ	0xFE8
  6931                           postinc1	equ	0xFE6
  6932                           postdec1	equ	0xFE5
  6933                           plusw1	equ	0xFE3
  6934                           fsr1h	equ	0xFE2
  6935                           fsr1l	equ	0xFE1
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           plusw2	equ	0xFDB
  6940                           fsr2h	equ	0xFDA
  6941                           fsr2l	equ	0xFD9
  6942                           status	equ	0xFD8
  6943                           
  6944 ;; *************** function _Mcu_ClearWdg *****************
  6945 ;; Defined at:
  6946 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		None
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:   11
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_Wdg_MainTask
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text27
  6975  006008                     __ptext27:
  6976                           	opt stack 0
  6977  006008                     _Mcu_ClearWdg:
  6978                           	opt stack 16
  6979                           
  6980                           ;incstack = 0
  6981  006008  0004               	clrwdt		;# 
  6982  00600A  0012               	return		;funcret
  6983  00600C                     __end_of_Mcu_ClearWdg:
  6984                           	opt stack 0
  6985                           tosu	equ	0xFFF
  6986                           tosh	equ	0xFFE
  6987                           tosl	equ	0xFFD
  6988                           pclath	equ	0xFFA
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           intcon2	equ	0xFF1
  6997                           intcon3	equ	0xFF0
  6998                           postinc0	equ	0xFEE
  6999                           plusw0	equ	0xFEB
  7000                           wreg	equ	0xFE8
  7001                           postinc1	equ	0xFE6
  7002                           postdec1	equ	0xFE5
  7003                           plusw1	equ	0xFE3
  7004                           fsr1h	equ	0xFE2
  7005                           fsr1l	equ	0xFE1
  7006                           indf2	equ	0xFDF
  7007                           postinc2	equ	0xFDE
  7008                           postdec2	equ	0xFDD
  7009                           plusw2	equ	0xFDB
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _USBDeviceTasks *****************
  7015 ;; Defined at:
  7016 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  i               1   56[BANK0 ] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;Total ram usage:        1 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:   19
  7037 ;; This function calls:
  7038 ;;		_USBCtrlEPAllowStatusStage
  7039 ;;		_USBCtrlEPService
  7040 ;;		_USBDeviceInit
  7041 ;;		_USBIncrement1msInternalTimers
  7042 ;;		_USBStallHandler
  7043 ;;		_USBSuspend
  7044 ;;		_USBWakeFromSuspend
  7045 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7046 ;; This function is called by:
  7047 ;;		_UsbDevice_MainTask
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text28
  7052  001BAA                     __ptext28:
  7053                           	opt stack 0
  7054  001BAA                     _USBDeviceTasks:
  7055                           	opt stack 8
  7056                           
  7057                           ;usb_device.c: 562: }
  7058                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7059                           
  7060                           ; BSR set to: 0
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;usb_device.c: 561: return;
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7067                           
  7068                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7069                           
  7070                           ;usb_device.c: 529: UIE = 0;
  7071                           
  7072                           ;usb_device.c: 524: {
  7073                           ;usb_device.c: 526: UCON = 0;
  7074                           
  7075                           ;usb_device.c: 497: uint8_t i;
  7076                           ;usb_device.c: 523: if (1 != 1)
  7077                           
  7078                           ;incstack = 0
  7079  001BAA  0100               	movlb	0	; () banked
  7080  001BAC  51CB               	movf	_USBDeviceState& (0+255),w,b
  7081  001BAE  A4D8               	btfss	status,2,c
  7082  001BB0  D012               	goto	l1598
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;usb_device.c: 585: {
  7086                           ;usb_device.c: 587: UCON = 0;
  7087  001BB2  0E00               	movlw	0
  7088  001BB4  6E65               	movwf	3941,c	;volatile
  7089                           
  7090                           ;usb_device.c: 590: UIE = 0;
  7091  001BB6  0E00               	movlw	0
  7092  001BB8  010F               	movlb	15	; () banked
  7093  001BBA  6F36               	movwf	54,b	;volatile
  7094                           
  7095                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7096  001BBC  0E16               	movlw	22
  7097  001BBE  6F39               	movwf	57,b	;volatile
  7098  001BC0  0E9F               	movlw	159
  7099  001BC2  6F37               	movwf	55,b	;volatile
  7100  001BC4  0E7B               	movlw	123
  7101  001BC6  6F36               	movwf	54,b	;volatile
  7102                           
  7103                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7104  001BC8  D001               	goto	l1599
  7105  001BCA                     l1600:
  7106  001BCA  8665               	bsf	3941,3,c	;volatile
  7107  001BCC                     l1599:
  7108  001BCC  A665               	btfss	3941,3,c	;volatile
  7109  001BCE  D7FD               	goto	l1600
  7110                           
  7111                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7112  001BD0  0E01               	movlw	1
  7113  001BD2  0100               	movlb	0	; () banked
  7114  001BD4  6FCB               	movwf	_USBDeviceState& (0+255),b
  7115  001BD6                     l1598:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;usb_device.c: 605: }
  7119                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7120                           
  7121                           ; BSR set to: 0
  7122  001BD6  05CB               	decf	_USBDeviceState& (0+255),w,b
  7123  001BD8  B4D8               	btfsc	status,2,c
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;usb_device.c: 609: {
  7127                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7128  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7129  001BDC  D00A               	goto	l1603
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;usb_device.c: 620: {
  7133                           ;usb_device.c: 626: {UIR = 0;};
  7134  001BDE  0E00               	movlw	0
  7135  001BE0  6E62               	movwf	3938,c	;volatile
  7136                           
  7137                           ;usb_device.c: 630: UIE=0;
  7138  001BE2  0E00               	movlw	0
  7139  001BE4  010F               	movlb	15	; () banked
  7140  001BE6  6F36               	movwf	54,b	;volatile
  7141                           
  7142                           ; BSR set to: 15
  7143                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7144  001BE8  8136               	bsf	54,0,b	;volatile
  7145                           
  7146                           ; BSR set to: 15
  7147                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7148  001BEA  8936               	bsf	54,4,b	;volatile
  7149                           
  7150                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7151  001BEC  0E02               	movlw	2
  7152  001BEE  0100               	movlb	0	; () banked
  7153  001BF0  6FCB               	movwf	_USBDeviceState& (0+255),b
  7154  001BF2                     l1603:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;usb_device.c: 635: }
  7158                           ;usb_device.c: 636: }
  7159                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7160                           
  7161                           ; BSR set to: 0
  7162                           
  7163                           ; BSR set to: 0
  7164  001BF2  A462               	btfss	3938,2,c	;volatile
  7165  001BF4  D006               	goto	l1604
  7166                           
  7167                           ; BSR set to: 0
  7168  001BF6  010F               	movlb	15	; () banked
  7169  001BF8  A536               	btfss	54,2,b	;volatile
  7170  001BFA  D003               	goto	l1604
  7171                           
  7172                           ; BSR set to: 15
  7173                           ;usb_device.c: 653: {
  7174                           ;usb_device.c: 654: (UIR &= 0xFB);
  7175  001BFC  9462               	bcf	3938,2,c	;volatile
  7176                           
  7177                           ; BSR set to: 15
  7178                           ;usb_device.c: 658: USBWakeFromSuspend();
  7179  001BFE  EC5A  F02C         	call	_USBWakeFromSuspend	;wreg free
  7180  001C02                     l1604:
  7181                           
  7182                           ;usb_device.c: 660: }
  7183                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7184  001C02  A265               	btfss	3941,1,c	;volatile
  7185  001C04  D002               	goto	l1605
  7186                           
  7187                           ;usb_device.c: 666: {
  7188                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7189  001C06  98A1               	bcf	4001,4,c	;volatile
  7190                           
  7191                           ;usb_device.c: 668: return;
  7192  001C08  0012               	return	
  7193  001C0A                     l1605:
  7194                           
  7195                           ;usb_device.c: 669: }
  7196                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7197  001C0A  A062               	btfss	3938,0,c	;volatile
  7198  001C0C  D009               	goto	l1606
  7199  001C0E  010F               	movlb	15	; () banked
  7200  001C10  A136               	btfss	54,0,b	;volatile
  7201  001C12  D006               	goto	l1606
  7202                           
  7203                           ; BSR set to: 15
  7204                           ;usb_device.c: 682: {
  7205                           ;usb_device.c: 683: USBDeviceInit();
  7206  001C14  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  7207                           
  7208                           ;usb_device.c: 687: ;
  7209                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7210  001C18  0E04               	movlw	4
  7211  001C1A  0100               	movlb	0	; () banked
  7212  001C1C  6FCB               	movwf	_USBDeviceState& (0+255),b
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;usb_device.c: 699: (UIR &= 0xFE);
  7216  001C1E  9062               	bcf	3938,0,c	;volatile
  7217  001C20                     l1606:
  7218                           
  7219                           ;usb_device.c: 700: }
  7220                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7221                           
  7222                           ; BSR set to: 0
  7223  001C20  A862               	btfss	3938,4,c	;volatile
  7224  001C22  D004               	goto	l1607
  7225  001C24  010F               	movlb	15	; () banked
  7226  001C26  B936               	btfsc	54,4,b	;volatile
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;usb_device.c: 706: {
  7230                           ;usb_device.c: 712: USBSuspend();
  7231  001C28  ECE6  F02C         	call	_USBSuspend	;wreg free
  7232  001C2C                     l1607:
  7233                           
  7234                           ;usb_device.c: 714: }
  7235                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7236  001C2C  AC62               	btfss	3938,6,c	;volatile
  7237  001C2E  D01D               	goto	l1611
  7238                           
  7239                           ;usb_device.c: 727: {
  7240                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7241  001C30  010F               	movlb	15	; () banked
  7242  001C32  AD36               	btfss	54,6,b	;volatile
  7243  001C34  D00F               	goto	l1609
  7244                           
  7245                           ; BSR set to: 15
  7246                           ;usb_device.c: 730: {
  7247                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7248  001C36  0E00               	movlw	0
  7249  001C38  0100               	movlb	0	; () banked
  7250  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7251  001C3C  0E73               	movlw	115
  7252  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7253  001C40  0E00               	movlw	0
  7254  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7255  001C44  0E00               	movlw	0
  7256  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7257  001C48  0E00               	movlw	0
  7258  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7259  001C4C  0E01               	movlw	1
  7260  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7261  001C50  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7262  001C54                     l1609:
  7263                           
  7264                           ;usb_device.c: 732: }
  7265                           ;usb_device.c: 733: (UIR &= 0xBF);
  7266  001C54  9C62               	bcf	3938,6,c	;volatile
  7267                           
  7268                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7269  001C56  EC66  F02E         	call	_USBIncrement1msInternalTimers	;wreg free
  7270                           
  7271                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7272  001C5A  0100               	movlb	0	; () banked
  7273  001C5C  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7274  001C5E  A4D8               	btfss	status,2,c
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;usb_device.c: 754: {
  7278                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7279  001C60  07C7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;usb_device.c: 756: }
  7283                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7284                           
  7285                           ; BSR set to: 0
  7286  001C62  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7287  001C64  B4D8               	btfsc	status,2,c
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;usb_device.c: 763: {
  7291                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7292  001C66  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7293  001C6A                     l1611:
  7294                           
  7295                           ;usb_device.c: 765: }
  7296                           ;usb_device.c: 767: }
  7297                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7298  001C6A  AA62               	btfss	3938,5,c	;volatile
  7299  001C6C  D004               	goto	l1612
  7300  001C6E  010F               	movlb	15	; () banked
  7301  001C70  BB36               	btfsc	54,5,b	;volatile
  7302                           
  7303                           ; BSR set to: 15
  7304                           ;usb_device.c: 770: {
  7305                           ;usb_device.c: 771: USBStallHandler();
  7306  001C72  ECB7  F02A         	call	_USBStallHandler	;wreg free
  7307  001C76                     l1612:
  7308                           
  7309                           ;usb_device.c: 772: }
  7310                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7311  001C76  A262               	btfss	3938,1,c	;volatile
  7312  001C78  D013               	goto	l1613
  7313  001C7A  010F               	movlb	15	; () banked
  7314  001C7C  A336               	btfss	54,1,b	;volatile
  7315  001C7E  D010               	goto	l1613
  7316                           
  7317                           ; BSR set to: 15
  7318                           ;usb_device.c: 775: {
  7319                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7320  001C80  0E7F               	movlw	127
  7321  001C82  0100               	movlb	0	; () banked
  7322  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7323  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7324  001C88  0E00               	movlw	0
  7325  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7326  001C8C  0E00               	movlw	0
  7327  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7328  001C90  0E00               	movlw	0
  7329  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7330  001C94  0E01               	movlw	1
  7331  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7332  001C98  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7333                           
  7334                           ;usb_device.c: 777: {UEIR = 0;};
  7335  001C9C  0E00               	movlw	0
  7336  001C9E  6E63               	movwf	3939,c	;volatile
  7337  001CA0                     l1613:
  7338                           
  7339                           ;usb_device.c: 785: }
  7340                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7341  001CA0  0E04               	movlw	4
  7342  001CA2  0100               	movlb	0	; () banked
  7343  001CA4  61CB               	cpfslt	_USBDeviceState& (0+255),b
  7344  001CA6  D002               	goto	l1614
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;usb_device.c: 793: {
  7348                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7349  001CA8  98A1               	bcf	4001,4,c	;volatile
  7350                           
  7351                           ;usb_device.c: 795: return;
  7352  001CAA  0012               	return	
  7353  001CAC                     l1614:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;usb_device.c: 796: }
  7357                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7358  001CAC  010F               	movlb	15	; () banked
  7359  001CAE  A736               	btfss	54,3,b	;volatile
  7360  001CB0  D03E               	goto	u13040
  7361                           
  7362                           ; BSR set to: 15
  7363                           ;usb_device.c: 802: {
  7364                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7365  001CB2  0E00               	movlw	0
  7366  001CB4  0100               	movlb	0	; () banked
  7367  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7368  001CB8                     l13669:
  7369                           
  7370                           ; BSR set to: 0
  7371  001CB8  0E03               	movlw	3
  7372  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7373  001CBC  D001               	goto	l1616
  7374  001CBE  D037               	goto	u13040
  7375  001CC0                     l1616:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;usb_device.c: 804: {
  7379                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7380  001CC0  A662               	btfss	3938,3,c	;volatile
  7381  001CC2  D035               	goto	u13040
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;usb_device.c: 806: {
  7385                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7386  001CC4  CF64 F0D3          	movff	3940,_USTATcopy	;volatile
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7390  001CC8  31D3               	rrcf	_USTATcopy& (0+255),w,b
  7391  001CCA  32E8               	rrcf	wreg,f,c
  7392  001CCC  32E8               	rrcf	wreg,f,c
  7393  001CCE  0B0F               	andlw	15
  7394  001CD0  6FC8               	movwf	_endpoint_number& (0+255),b
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;usb_device.c: 811: (UIR &= 0xF7);
  7398  001CD2  9662               	bcf	3938,3,c	;volatile
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7402  001CD4  B5D3               	btfsc	_USTATcopy& (0+255),2,b
  7403  001CD6  D007               	goto	l1619
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;usb_device.c: 817: {
  7407                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7408  001CD8  51C8               	movf	_endpoint_number& (0+255),w,b
  7409  001CDA  0D01               	mullw	1
  7410  001CDC  0ECE               	movlw	low _ep_data_out
  7411  001CDE  24F3               	addwf	prodl,w,c
  7412  001CE0  6ED9               	movwf	fsr2l,c
  7413  001CE2  0E02               	movlw	high _ep_data_out
  7414  001CE4  D007               	goto	L3
  7415  001CE6                     l1619:
  7416                           
  7417                           ;usb_device.c: 820: else
  7418                           ;usb_device.c: 821: {
  7419                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7420                           
  7421                           ; BSR set to: 2
  7422  001CE6  0100               	movlb	0	; () banked
  7423  001CE8  51C8               	movf	_endpoint_number& (0+255),w,b
  7424  001CEA  0D01               	mullw	1
  7425  001CEC  0ED1               	movlw	low _ep_data_in
  7426  001CEE  24F3               	addwf	prodl,w,c
  7427  001CF0  6ED9               	movwf	fsr2l,c
  7428  001CF2  0E02               	movlw	high _ep_data_in
  7429  001CF4                     L3:
  7430  001CF4  20F4               	addwfc	prodh,w,c
  7431  001CF6  6EDA               	movwf	fsr2h,c
  7432  001CF8  0102               	movlb	2	; () banked
  7433  001CFA  70DF               	btg	indf2,0,c
  7434                           
  7435                           ; BSR set to: 2
  7436                           ;usb_device.c: 823: }
  7437                           ;usb_device.c: 828: if(endpoint_number == 0)
  7438                           
  7439                           ; BSR set to: 2
  7440  001CFC  0100               	movlb	0	; () banked
  7441  001CFE  51C8               	movf	_endpoint_number& (0+255),w,b
  7442  001D00  A4D8               	btfss	status,2,c
  7443  001D02  D003               	goto	l1621
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;usb_device.c: 829: {
  7447                           ;usb_device.c: 830: USBCtrlEPService();
  7448  001D04  EC55  F023         	call	_USBCtrlEPService	;wreg free
  7449                           
  7450                           ;usb_device.c: 831: }
  7451  001D08  D00F               	goto	l1623
  7452  001D0A                     l1621:
  7453                           
  7454                           ;usb_device.c: 832: else
  7455                           ;usb_device.c: 833: {
  7456                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7457  001D0A  0E00               	movlw	0
  7458  001D0C  0100               	movlb	0	; () banked
  7459  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7460  001D10  0E72               	movlw	114
  7461  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7462  001D14  0ED3               	movlw	low _USTATcopy
  7463  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7464  001D18  0E00               	movlw	high _USTATcopy
  7465  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7466  001D1C  0E00               	movlw	0
  7467  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7468  001D20  0E00               	movlw	0
  7469  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7470  001D24  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7471  001D28                     l1623:
  7472  001D28  0100               	movlb	0	; () banked
  7473  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7474  001D2C  D7C5               	goto	l13669
  7475  001D2E                     u13040:
  7476                           
  7477                           ;usb_device.c: 840: }
  7478                           ;usb_device.c: 841: }
  7479                           ;usb_device.c: 842: }
  7480                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7481                           
  7482                           ; BSR set to: 0
  7483  001D2E  98A1               	bcf	4001,4,c	;volatile
  7484  001D30  0012               	return		;funcret
  7485  001D32                     __end_of_USBDeviceTasks:
  7486                           	opt stack 0
  7487                           tosu	equ	0xFFF
  7488                           tosh	equ	0xFFE
  7489                           tosl	equ	0xFFD
  7490                           pclath	equ	0xFFA
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           prodh	equ	0xFF4
  7496                           prodl	equ	0xFF3
  7497                           intcon	equ	0xFF2
  7498                           intcon2	equ	0xFF1
  7499                           intcon3	equ	0xFF0
  7500                           postinc0	equ	0xFEE
  7501                           plusw0	equ	0xFEB
  7502                           wreg	equ	0xFE8
  7503                           postinc1	equ	0xFE6
  7504                           postdec1	equ	0xFE5
  7505                           plusw1	equ	0xFE3
  7506                           fsr1h	equ	0xFE2
  7507                           fsr1l	equ	0xFE1
  7508                           indf2	equ	0xFDF
  7509                           postinc2	equ	0xFDE
  7510                           postdec2	equ	0xFDD
  7511                           plusw2	equ	0xFDB
  7512                           fsr2h	equ	0xFDA
  7513                           fsr2l	equ	0xFD9
  7514                           status	equ	0xFD8
  7515                           
  7516 ;; *************** function _USBWakeFromSuspend *****************
  7517 ;; Defined at:
  7518 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;		None
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;Total ram usage:        0 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:   15
  7539 ;; This function calls:
  7540 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7541 ;; This function is called by:
  7542 ;;		_USBDeviceTasks
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text29
  7547  0058B4                     __ptext29:
  7548                           	opt stack 0
  7549  0058B4                     _USBWakeFromSuspend:
  7550                           	opt stack 11
  7551                           
  7552                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7553                           
  7554                           ;incstack = 0
  7555  0058B4  0E00               	movlw	0
  7556  0058B6  0101               	movlb	1	; () banked
  7557  0058B8  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7561  0058BA  0E00               	movlw	0
  7562  0058BC  0100               	movlb	0	; () banked
  7563  0058BE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7564  0058C0  0E74               	movlw	116
  7565  0058C2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7566  0058C4  0E00               	movlw	0
  7567  0058C6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7568  0058C8  0E00               	movlw	0
  7569  0058CA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7570  0058CC  0E00               	movlw	0
  7571  0058CE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7572  0058D0  0E00               	movlw	0
  7573  0058D2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7574  0058D4  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7575                           
  7576                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7577  0058D8  9265               	bcf	3941,1,c	;volatile
  7578                           
  7579                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7580  0058DA  010F               	movlb	15	; () banked
  7581  0058DC  9536               	bcf	54,2,b	;volatile
  7582                           
  7583                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7584  0058DE  D001               	goto	l1751
  7585  0058E0                     
  7586                           ;usb_device.c: 2361: {
  7587                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7588                           
  7589                           ; BSR set to: 15
  7590  0058E0  9462               	bcf	3938,2,c	;volatile
  7591  0058E2                     l1751:
  7592  0058E2  B462               	btfsc	3938,2,c	;volatile
  7593  0058E4  D7FD               	goto	l1752
  7594                           
  7595                           ;usb_device.c: 2363: }
  7596                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7597  0058E6  0E00               	movlw	0
  7598  0058E8  0101               	movlb	1	; () banked
  7599  0058EA  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7600                           
  7601                           ; BSR set to: 1
  7602  0058EC  0012               	return		;funcret
  7603  0058EE                     __end_of_USBWakeFromSuspend:
  7604                           	opt stack 0
  7605                           tosu	equ	0xFFF
  7606                           tosh	equ	0xFFE
  7607                           tosl	equ	0xFFD
  7608                           pclath	equ	0xFFA
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           intcon2	equ	0xFF1
  7617                           intcon3	equ	0xFF0
  7618                           postinc0	equ	0xFEE
  7619                           plusw0	equ	0xFEB
  7620                           wreg	equ	0xFE8
  7621                           postinc1	equ	0xFE6
  7622                           postdec1	equ	0xFE5
  7623                           plusw1	equ	0xFE3
  7624                           fsr1h	equ	0xFE2
  7625                           fsr1l	equ	0xFE1
  7626                           indf2	equ	0xFDF
  7627                           postinc2	equ	0xFDE
  7628                           postdec2	equ	0xFDD
  7629                           plusw2	equ	0xFDB
  7630                           fsr2h	equ	0xFDA
  7631                           fsr2l	equ	0xFD9
  7632                           status	equ	0xFD8
  7633                           
  7634 ;; *************** function _USBSuspend *****************
  7635 ;; Defined at:
  7636 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;		None
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;Total ram usage:        0 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:   15
  7657 ;; This function calls:
  7658 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7659 ;; This function is called by:
  7660 ;;		_USBDeviceTasks
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text30
  7665  0059CC                     __ptext30:
  7666                           	opt stack 0
  7667  0059CC                     _USBSuspend:
  7668                           	opt stack 11
  7669                           
  7670                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;incstack = 0
  7674  0059CC  010F               	movlb	15	; () banked
  7675  0059CE  8536               	bsf	54,2,b	;volatile
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7679  0059D0  9862               	bcf	3938,4,c	;volatile
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7683  0059D2  8265               	bsf	3941,1,c	;volatile
  7684                           
  7685                           ; BSR set to: 15
  7686                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7687  0059D4  0E01               	movlw	1
  7688  0059D6  0101               	movlb	1	; () banked
  7689  0059D8  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7693  0059DA  0E00               	movlw	0
  7694  0059DC  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7695                           
  7696                           ; BSR set to: 1
  7697                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7698  0059DE  0E00               	movlw	0
  7699  0059E0  0100               	movlb	0	; () banked
  7700  0059E2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7701  0059E4  0E75               	movlw	117
  7702  0059E6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7703  0059E8  0E00               	movlw	0
  7704  0059EA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7705  0059EC  0E00               	movlw	0
  7706  0059EE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7707  0059F0  0E00               	movlw	0
  7708  0059F2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7709  0059F4  0E00               	movlw	0
  7710  0059F6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7711  0059F8  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7712  0059FC  0012               	return		;funcret
  7713  0059FE                     __end_of_USBSuspend:
  7714                           	opt stack 0
  7715                           tosu	equ	0xFFF
  7716                           tosh	equ	0xFFE
  7717                           tosl	equ	0xFFD
  7718                           pclath	equ	0xFFA
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           intcon2	equ	0xFF1
  7727                           intcon3	equ	0xFF0
  7728                           postinc0	equ	0xFEE
  7729                           plusw0	equ	0xFEB
  7730                           wreg	equ	0xFE8
  7731                           postinc1	equ	0xFE6
  7732                           postdec1	equ	0xFE5
  7733                           plusw1	equ	0xFE3
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           indf2	equ	0xFDF
  7737                           postinc2	equ	0xFDE
  7738                           postdec2	equ	0xFDD
  7739                           plusw2	equ	0xFDB
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function _USBStallHandler *****************
  7745 ;; Defined at:
  7746 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;Total ram usage:        1 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:   11
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_USBDeviceTasks
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text31
  7775  00556E                     __ptext31:
  7776                           	opt stack 0
  7777  00556E                     _USBStallHandler:
  7778                           	opt stack 15
  7779                           
  7780                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7781                           
  7782                           ;incstack = 0
  7783  00556E  010F               	movlb	15	; () banked
  7784  005570  A126               	btfss	38,0,b	;volatile
  7785  005572  D01D               	goto	l1743
  7786                           
  7787                           ; BSR set to: 15
  7788                           ;usb_device.c: 2233: {
  7789                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7790  005574  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7791  005578  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7792  00557C  0E80               	movlw	128
  7793  00557E  18DE               	xorwf	postinc2,w,c
  7794  005580  A4D8               	btfss	status,2,c
  7795  005582  D014               	goto	l1744
  7796                           
  7797                           ; BSR set to: 15
  7798  005584  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  7799  005588  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7800  00558C  0E84               	movlw	132
  7801  00558E  18DE               	xorwf	postinc2,w,c
  7802  005590  A4D8               	btfss	status,2,c
  7803  005592  D00C               	goto	l1744
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;usb_device.c: 2236: {
  7807                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7808  005594  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7809  005598  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7810  00559C  0E0C               	movlw	12
  7811  00559E  6EDF               	movwf	indf2,c
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7815  0055A0  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7816  0055A4  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7817  0055A8  0E00               	movlw	0
  7818  0055AA  8EDB               	bsf	plusw2,7,c
  7819  0055AC                     l1744:
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;usb_device.c: 2240: }
  7823                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7824                           
  7825                           ; BSR set to: 15
  7826  0055AC  9126               	bcf	38,0,b	;volatile
  7827  0055AE                     l1743:
  7828                           
  7829                           ; BSR set to: 15
  7830                           ;usb_device.c: 2242: }
  7831                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7832  0055AE  9A62               	bcf	3938,5,c	;volatile
  7833                           
  7834                           ; BSR set to: 15
  7835  0055B0  0012               	return		;funcret
  7836  0055B2                     __end_of_USBStallHandler:
  7837                           	opt stack 0
  7838                           tosu	equ	0xFFF
  7839                           tosh	equ	0xFFE
  7840                           tosl	equ	0xFFD
  7841                           pclath	equ	0xFFA
  7842                           tblptru	equ	0xFF8
  7843                           tblptrh	equ	0xFF7
  7844                           tblptrl	equ	0xFF6
  7845                           tablat	equ	0xFF5
  7846                           prodh	equ	0xFF4
  7847                           prodl	equ	0xFF3
  7848                           intcon	equ	0xFF2
  7849                           intcon2	equ	0xFF1
  7850                           intcon3	equ	0xFF0
  7851                           postinc0	equ	0xFEE
  7852                           plusw0	equ	0xFEB
  7853                           wreg	equ	0xFE8
  7854                           postinc1	equ	0xFE6
  7855                           postdec1	equ	0xFE5
  7856                           plusw1	equ	0xFE3
  7857                           fsr1h	equ	0xFE2
  7858                           fsr1l	equ	0xFE1
  7859                           indf2	equ	0xFDF
  7860                           postinc2	equ	0xFDE
  7861                           postdec2	equ	0xFDD
  7862                           plusw2	equ	0xFDB
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8
  7866                           
  7867 ;; *************** function _USBIncrement1msInternalTimers *****************
  7868 ;; Defined at:
  7869 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7887 ;;Total ram usage:        0 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:   11
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_USBDeviceTasks
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text32
  7898  005CCC                     __ptext32:
  7899                           	opt stack 0
  7900  005CCC                     _USBIncrement1msInternalTimers:
  7901                           	opt stack 15
  7902                           
  7903                           ;usb_device.c: 3050: USB1msTickCount++;
  7904                           
  7905                           ; BSR set to: 15
  7906                           ;incstack = 0
  7907  005CCC  0E01               	movlw	1
  7908  005CCE  0103               	movlb	3	; () banked
  7909  005CD0  2718               	addwf	_USB1msTickCount& (0+255),f,b
  7910  005CD2  0E00               	movlw	0
  7911  005CD4  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  7912  005CD6  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  7913  005CD8  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  7914                           
  7915                           ; BSR set to: 3
  7916                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  7917  005CDA  0101               	movlb	1	; () banked
  7918  005CDC  51E6               	movf	_USBBusIsSuspended& (0+255),w,b
  7919  005CDE  A4D8               	btfss	status,2,c
  7920  005CE0  0012               	return	
  7921                           
  7922                           ; BSR set to: 1
  7923                           ;usb_device.c: 3052: {
  7924                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  7925  005CE2  2BE4               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  7926                           
  7927                           ; BSR set to: 1
  7928                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  7929  005CE4  51E4               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  7930  005CE6  A4D8               	btfss	status,2,c
  7931  005CE8  0012               	return	
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;usb_device.c: 3056: {
  7935                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  7936  005CEA  69E4               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  7937                           
  7938                           ; BSR set to: 1
  7939  005CEC  0012               	return	
  7940  005CEE                     __end_of_USBIncrement1msInternalTimers:
  7941                           	opt stack 0
  7942                           tosu	equ	0xFFF
  7943                           tosh	equ	0xFFE
  7944                           tosl	equ	0xFFD
  7945                           pclath	equ	0xFFA
  7946                           tblptru	equ	0xFF8
  7947                           tblptrh	equ	0xFF7
  7948                           tblptrl	equ	0xFF6
  7949                           tablat	equ	0xFF5
  7950                           prodh	equ	0xFF4
  7951                           prodl	equ	0xFF3
  7952                           intcon	equ	0xFF2
  7953                           intcon2	equ	0xFF1
  7954                           intcon3	equ	0xFF0
  7955                           postinc0	equ	0xFEE
  7956                           plusw0	equ	0xFEB
  7957                           wreg	equ	0xFE8
  7958                           postinc1	equ	0xFE6
  7959                           postdec1	equ	0xFE5
  7960                           plusw1	equ	0xFE3
  7961                           fsr1h	equ	0xFE2
  7962                           fsr1l	equ	0xFE1
  7963                           indf2	equ	0xFDF
  7964                           postinc2	equ	0xFDE
  7965                           postdec2	equ	0xFDD
  7966                           plusw2	equ	0xFDB
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _USBDeviceInit *****************
  7972 ;; Defined at:
  7973 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  i               1   37[BANK0 ] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7990 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7991 ;;Total ram usage:        1 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   12
  7994 ;; This function calls:
  7995 ;;		_memset
  7996 ;; This function is called by:
  7997 ;;		_USBDeviceTasks
  7998 ;;		_UsbDevice_MainTask
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text33
  8003  001FFE                     __ptext33:
  8004                           	opt stack 0
  8005  001FFE                     _USBDeviceInit:
  8006                           	opt stack 14
  8007                           
  8008                           ;usb_device.c: 297: uint8_t i;
  8009                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8010                           
  8011                           ; BSR set to: 1
  8012                           ;incstack = 0
  8013  001FFE  98A0               	bcf	4000,4,c	;volatile
  8014                           
  8015                           ;usb_device.c: 303: ;
  8016                           ;usb_device.c: 306: {UEIR = 0;};
  8017  002000  0E00               	movlw	0
  8018  002002  6E63               	movwf	3939,c	;volatile
  8019                           
  8020                           ;usb_device.c: 309: {UIR = 0;};
  8021  002004  0E00               	movlw	0
  8022  002006  6E62               	movwf	3938,c	;volatile
  8023                           
  8024                           ;usb_device.c: 312: UEP0 = 0;
  8025  002008  0E00               	movlw	0
  8026  00200A  010F               	movlb	15	; () banked
  8027  00200C  6F26               	movwf	38,b	;volatile
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8031  00200E  0E27               	movlw	39
  8032  002010  0100               	movlb	0	; () banked
  8033  002012  6F7D               	movwf	memset@p1& (0+255),b
  8034  002014  0E0F               	movlw	15
  8035  002016  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8036  002018  0E00               	movlw	0
  8037  00201A  6F80               	movwf	(memset@c+1)& (0+255),b
  8038  00201C  0E00               	movlw	0
  8039  00201E  6F7F               	movwf	memset@c& (0+255),b
  8040  002020  0E00               	movlw	0
  8041  002022  6F82               	movwf	(memset@n+1)& (0+255),b
  8042  002024  0E02               	movlw	2
  8043  002026  6F81               	movwf	memset@n& (0+255),b
  8044  002028  EC30  F02D         	call	_memset	;wreg free
  8045                           
  8046                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8047  00202C  0E16               	movlw	22
  8048  00202E  010F               	movlb	15	; () banked
  8049  002030  6F39               	movwf	57,b	;volatile
  8050                           
  8051                           ; BSR set to: 15
  8052  002032  0E9F               	movlw	159
  8053  002034  6F37               	movwf	55,b	;volatile
  8054                           
  8055                           ; BSR set to: 15
  8056  002036  0E7B               	movlw	123
  8057  002038  6F36               	movwf	54,b	;volatile
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;usb_device.c: 319: ;
  8061                           ;usb_device.c: 322: ;
  8062                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8063  00203A  0E00               	movlw	0
  8064  00203C  0100               	movlb	0	; () banked
  8065  00203E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8066  002040                     l12551:
  8067                           
  8068                           ; BSR set to: 0
  8069  002040  0E0B               	movlw	11
  8070  002042  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8071  002044  D001               	goto	l1587
  8072  002046  D00E               	goto	u11490
  8073  002048                     l1587:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;usb_device.c: 326: {
  8077                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8078                           
  8079                           ; BSR set to: 0
  8080  002048  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8081  00204A  0D04               	mullw	4
  8082  00204C  0E00               	movlw	0
  8083  00204E  24F3               	addwf	prodl,w,c
  8084  002050  6ED9               	movwf	fsr2l,c
  8085  002052  0E04               	movlw	4
  8086  002054  20F4               	addwfc	prodh,w,c
  8087  002056  6EDA               	movwf	fsr2h,c
  8088  002058  6ADE               	clrf	postinc2,c
  8089  00205A  6ADE               	clrf	postinc2,c
  8090  00205C  6ADE               	clrf	postinc2,c
  8091  00205E  6ADD               	clrf	postdec2,c
  8092                           
  8093                           ; BSR set to: 0
  8094  002060  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8095  002062  D7EE               	goto	l12551
  8096  002064                     u11490:
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;usb_device.c: 328: }
  8100                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8101  002064  8C65               	bsf	3941,6,c	;volatile
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;usb_device.c: 334: UADDR = 0x00;
  8105  002066  0E00               	movlw	0
  8106  002068  010F               	movlb	15	; () banked
  8107  00206A  6F38               	movwf	56,b	;volatile
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8111  00206C  9865               	bcf	3941,4,c	;volatile
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8115  00206E  9C65               	bcf	3941,6,c	;volatile
  8116  002070                     
  8117                           ;usb_device.c: 344: {
  8118                           ;usb_device.c: 345: (UIR &= 0xF7);
  8119                           
  8120                           ; BSR set to: 15
  8121  002070  9662               	bcf	3938,3,c	;volatile
  8122                           
  8123                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8124  002072  0E00               	movlw	0
  8125  002074  0100               	movlb	0	; () banked
  8126  002076  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8130  002078  0E00               	movlw	0
  8131  00207A  0101               	movlb	1	; () banked
  8132  00207C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8133                           
  8134                           ; BSR set to: 1
  8135                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8136  00207E  0E00               	movlw	0
  8137  002080  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8138  002082  0E00               	movlw	0
  8139  002084  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8140                           
  8141                           ; BSR set to: 1
  8142                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8143  002086  B662               	btfsc	3938,3,c	;volatile
  8144  002088  D7F3               	goto	l1589
  8145                           
  8146                           ; BSR set to: 1
  8147                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8148                           
  8149                           ; BSR set to: 1
  8150  00208A  0E01               	movlw	1
  8151  00208C  0100               	movlb	0	; () banked
  8152  00208E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8153                           
  8154                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8155  002090  0E01               	movlw	1
  8156  002092  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8157                           
  8158                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8159  002094  0E00               	movlw	0
  8160  002096  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8161                           
  8162                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8163  002098  0E00               	movlw	0
  8164  00209A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8165                           
  8166                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8167  00209C  0E00               	movlw	0
  8168  00209E  0101               	movlb	1	; () banked
  8169  0020A0  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  8170                           
  8171                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8172  0020A2  0E00               	movlw	0
  8173  0020A4  0100               	movlb	0	; () banked
  8174  0020A6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8175  0020A8                     l12579:
  8176                           
  8177                           ; BSR set to: 0
  8178  0020A8  0E02               	movlw	2
  8179  0020AA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8180  0020AC  D001               	goto	l1591
  8181  0020AE  D02E               	goto	u11520
  8182  0020B0                     l1591:
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;usb_device.c: 364: {
  8186                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8187                           
  8188                           ; BSR set to: 0
  8189  0020B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8190  0020B2  0D02               	mullw	2
  8191  0020B4  0EB2               	movlw	low _pBDTEntryIn
  8192  0020B6  24F3               	addwf	prodl,w,c
  8193  0020B8  6ED9               	movwf	fsr2l,c
  8194  0020BA  0E00               	movlw	high _pBDTEntryIn
  8195  0020BC  20F4               	addwfc	prodh,w,c
  8196  0020BE  6EDA               	movwf	fsr2h,c
  8197  0020C0  0E00               	movlw	0
  8198  0020C2  6EDE               	movwf	postinc2,c
  8199  0020C4  0E00               	movlw	0
  8200  0020C6  6EDD               	movwf	postdec2,c
  8201                           
  8202                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8203  0020C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8204  0020CA  0D02               	mullw	2
  8205  0020CC  0E0E               	movlw	low _pBDTEntryOut
  8206  0020CE  24F3               	addwf	prodl,w,c
  8207  0020D0  6ED9               	movwf	fsr2l,c
  8208  0020D2  0E03               	movlw	high _pBDTEntryOut
  8209  0020D4  20F4               	addwfc	prodh,w,c
  8210  0020D6  6EDA               	movwf	fsr2h,c
  8211  0020D8  0E00               	movlw	0
  8212  0020DA  6EDE               	movwf	postinc2,c
  8213  0020DC  0E00               	movlw	0
  8214  0020DE  6EDD               	movwf	postdec2,c
  8215                           
  8216                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8217  0020E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8218  0020E2  0D01               	mullw	1
  8219  0020E4  0ED1               	movlw	low _ep_data_in
  8220  0020E6  24F3               	addwf	prodl,w,c
  8221  0020E8  6ED9               	movwf	fsr2l,c
  8222  0020EA  0E02               	movlw	high _ep_data_in
  8223  0020EC  20F4               	addwfc	prodh,w,c
  8224  0020EE  6EDA               	movwf	fsr2h,c
  8225  0020F0  0E00               	movlw	0
  8226  0020F2  6EDF               	movwf	indf2,c
  8227                           
  8228                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8229  0020F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8230  0020F6  0D01               	mullw	1
  8231  0020F8  0ECE               	movlw	low _ep_data_out
  8232  0020FA  24F3               	addwf	prodl,w,c
  8233  0020FC  6ED9               	movwf	fsr2l,c
  8234  0020FE  0E02               	movlw	high _ep_data_out
  8235  002100  20F4               	addwfc	prodh,w,c
  8236  002102  6EDA               	movwf	fsr2h,c
  8237  002104  0E00               	movlw	0
  8238  002106  6EDF               	movwf	indf2,c
  8239                           
  8240                           ; BSR set to: 0
  8241  002108  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8242  00210A  D7CE               	goto	l12579
  8243  00210C                     u11520:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;usb_device.c: 369: }
  8247                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8248                           
  8249                           ; BSR set to: 0
  8250  00210C  0E08               	movlw	8
  8251  00210E  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  8252  002110  0E04               	movlw	4
  8253  002112  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8257  002114  0E16               	movlw	22
  8258  002116  010F               	movlb	15	; () banked
  8259  002118  6F26               	movwf	38,b	;volatile
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8263  00211A  0E04               	movlw	4
  8264  00211C  0104               	movlb	4	; () banked
  8265  00211E  6F03               	movwf	3,b	;volatile
  8266  002120  0E30               	movlw	48
  8267  002122  6F02               	movwf	2,b	;volatile
  8268                           
  8269                           ; BSR set to: 4
  8270                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8271  002124  0E08               	movlw	8
  8272  002126  6F01               	movwf	1,b	;volatile
  8273                           
  8274                           ; BSR set to: 4
  8275                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8276  002128  0E04               	movlw	4
  8277  00212A  6F00               	movwf	0,b	;volatile
  8278                           
  8279                           ; BSR set to: 4
  8280                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8281  00212C  8F00               	bsf	0,7,b	;volatile
  8282                           
  8283                           ; BSR set to: 4
  8284                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8285  00212E  0E00               	movlw	0
  8286  002130  0100               	movlb	0	; () banked
  8287  002132  6FD4               	movwf	_USBActiveConfiguration& (0+255),b
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;usb_device.c: 384: USB1msTickCount = 0;
  8291  002134  0E00               	movlw	0
  8292  002136  0103               	movlb	3	; () banked
  8293  002138  6F18               	movwf	_USB1msTickCount& (0+255),b
  8294  00213A  0E00               	movlw	0
  8295  00213C  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8296  00213E  0E00               	movlw	0
  8297  002140  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8298  002142  0E00               	movlw	0
  8299  002144  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8300                           
  8301                           ; BSR set to: 3
  8302                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8303  002146  0E00               	movlw	0
  8304  002148  0101               	movlb	1	; () banked
  8305  00214A  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8309  00214C  0E00               	movlw	0
  8310  00214E  0100               	movlb	0	; () banked
  8311  002150  6FCB               	movwf	_USBDeviceState& (0+255),b
  8312                           
  8313                           ; BSR set to: 0
  8314  002152  0012               	return		;funcret
  8315  002154                     __end_of_USBDeviceInit:
  8316                           	opt stack 0
  8317                           tosu	equ	0xFFF
  8318                           tosh	equ	0xFFE
  8319                           tosl	equ	0xFFD
  8320                           pclath	equ	0xFFA
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           intcon2	equ	0xFF1
  8329                           intcon3	equ	0xFF0
  8330                           postinc0	equ	0xFEE
  8331                           plusw0	equ	0xFEB
  8332                           wreg	equ	0xFE8
  8333                           postinc1	equ	0xFE6
  8334                           postdec1	equ	0xFE5
  8335                           plusw1	equ	0xFE3
  8336                           fsr1h	equ	0xFE2
  8337                           fsr1l	equ	0xFE1
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           plusw2	equ	0xFDB
  8342                           fsr2h	equ	0xFDA
  8343                           fsr2l	equ	0xFD9
  8344                           status	equ	0xFD8
  8345                           
  8346 ;; *************** function _USBCtrlEPService *****************
  8347 ;; Defined at:
  8348 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;Total ram usage:        1 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:   18
  8369 ;; This function calls:
  8370 ;;		_USBCtrlTrfInHandler
  8371 ;;		_USBCtrlTrfOutHandler
  8372 ;;		_USBCtrlTrfSetupHandler
  8373 ;;		_memcpy
  8374 ;; This function is called by:
  8375 ;;		_USBDeviceTasks
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text34
  8380  0046AA                     __ptext34:
  8381                           	opt stack 0
  8382  0046AA                     _USBCtrlEPService:
  8383                           	opt stack 8
  8384                           
  8385                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;incstack = 0
  8389  0046AA  0E2D               	movlw	45
  8390  0046AC  0100               	movlb	0	; () banked
  8391  0046AE  6FC7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8395  0046B0  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8396  0046B4  0EFD               	movlw	253
  8397  0046B6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8398  0046B8  A4D8               	btfss	status,2,c
  8399  0046BA  D038               	goto	l1757
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;usb_device.c: 2401: {
  8403                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8404  0046BC  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8405  0046C0  90D8               	bcf	status,0,c
  8406  0046C2  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8407  0046C4  0E3F               	movlw	63
  8408  0046C6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8409  0046C8  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8410  0046CA  0D04               	mullw	4
  8411  0046CC  0E00               	movlw	0
  8412  0046CE  24F3               	addwf	prodl,w,c
  8413  0046D0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8414  0046D2  0E04               	movlw	4
  8415  0046D4  20F4               	addwfc	prodh,w,c
  8416  0046D6  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8420  0046D8  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8421  0046DC  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8425  0046E0  0E04               	movlw	4
  8426  0046E2  1BBA               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8430  0046E4  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8431  0046E8  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8432  0046EC  30DF               	rrcf	223,w,c
  8433  0046EE  32E8               	rrcf	wreg,f,c
  8434  0046F0  0B0F               	andlw	15
  8435  0046F2  0A0D               	xorlw	13
  8436  0046F4  A4D8               	btfss	status,2,c
  8437  0046F6  D017               	goto	l1758
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;usb_device.c: 2418: {
  8441                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8442  0046F8  0E30               	movlw	48
  8443  0046FA  6F7D               	movwf	memcpy@d1& (0+255),b
  8444  0046FC  0E04               	movlw	4
  8445  0046FE  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8446  004700  EE20 F002          	lfsr	2,2
  8447  004704  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8448  004706  26D9               	addwf	fsr2l,f,c
  8449  004708  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8450  00470A  22DA               	addwfc	fsr2h,f,c
  8451  00470C  CFDE F07F          	movff	postinc2,memcpy@s1
  8452  004710  CFDD F080          	movff	postdec2,memcpy@s1+1
  8453  004714  0E00               	movlw	0
  8454  004716  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8455  004718  0E08               	movlw	8
  8456  00471A  6F81               	movwf	memcpy@n& (0+255),b
  8457  00471C  EC2A  F02A         	call	_memcpy	;wreg free
  8458                           
  8459                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8460  004720  EC78  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8461                           
  8462                           ;usb_device.c: 2427: }
  8463  004724  0012               	return	
  8464  004726                     l1758:
  8465                           
  8466                           ;usb_device.c: 2428: else
  8467                           ;usb_device.c: 2429: {
  8468                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8469  004726  EC9A  F026         	call	_USBCtrlTrfOutHandler	;wreg free
  8470                           
  8471                           ;usb_device.c: 2432: }
  8472                           ;usb_device.c: 2433: }
  8473  00472A  0012               	return	
  8474  00472C                     l1757:
  8475                           
  8476                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8477  00472C  0100               	movlb	0	; () banked
  8478  00472E  51D3               	movf	_USTATcopy& (0+255),w,b
  8479  004730  0BFD               	andlw	253
  8480  004732  0A04               	xorlw	4
  8481  004734  A4D8               	btfss	status,2,c
  8482  004736  0012               	return	
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;usb_device.c: 2435: {
  8486                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8487  004738  EC61  F01E         	call	_USBCtrlTrfInHandler	;wreg free
  8488  00473C  0012               	return	
  8489  00473E                     __end_of_USBCtrlEPService:
  8490                           	opt stack 0
  8491                           tosu	equ	0xFFF
  8492                           tosh	equ	0xFFE
  8493                           tosl	equ	0xFFD
  8494                           pclath	equ	0xFFA
  8495                           tblptru	equ	0xFF8
  8496                           tblptrh	equ	0xFF7
  8497                           tblptrl	equ	0xFF6
  8498                           tablat	equ	0xFF5
  8499                           prodh	equ	0xFF4
  8500                           prodl	equ	0xFF3
  8501                           intcon	equ	0xFF2
  8502                           intcon2	equ	0xFF1
  8503                           intcon3	equ	0xFF0
  8504                           postinc0	equ	0xFEE
  8505                           plusw0	equ	0xFEB
  8506                           wreg	equ	0xFE8
  8507                           postinc1	equ	0xFE6
  8508                           postdec1	equ	0xFE5
  8509                           plusw1	equ	0xFE3
  8510                           fsr1h	equ	0xFE2
  8511                           fsr1l	equ	0xFE1
  8512                           indf2	equ	0xFDF
  8513                           postinc2	equ	0xFDE
  8514                           postdec2	equ	0xFDD
  8515                           plusw2	equ	0xFDB
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _memcpy *****************
  8521 ;; Defined at:
  8522 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  d1              2   29[BANK0 ] PTR void 
  8525 ;;		 -> SetupPkt(8), 
  8526 ;;  s1              2   31[BANK0 ] PTR const void 
  8527 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8528 ;;  n               2   33[BANK0 ] unsigned int 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8531 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8532 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8533 ;;		 -> SetupPkt(8), 
  8534 ;;  tmp             1   39[BANK0 ] unsigned char 
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  2   29[BANK0 ] PTR void 
  8537 ;; Registers used:
  8538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8544 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;Total ram usage:       11 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; Hardware stack levels required when called:   11
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_USBCtrlEPService
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text35
  8559  005454                     __ptext35:
  8560                           	opt stack 0
  8561  005454                     _memcpy:
  8562                           	opt stack 14
  8563                           
  8564                           ;incstack = 0
  8565  005454  C07F  F085         	movff	memcpy@s1,memcpy@s
  8566  005458  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8567  00545C  C07D  F083         	movff	memcpy@d1,memcpy@d
  8568  005460  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8569  005464  D011               	goto	l3054
  8570  005466                     l8475:
  8571  005466  C085  FFD9         	movff	memcpy@s,fsr2l
  8572  00546A  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8573  00546E  50DF               	movf	indf2,w,c
  8574  005470  0100               	movlb	0	; () banked
  8575  005472  6F87               	movwf	memcpy@tmp& (0+255),b
  8576                           
  8577                           ; BSR set to: 0
  8578  005474  4B85               	infsnz	memcpy@s& (0+255),f,b
  8579  005476  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 0
  8582  005478  C083  FFD9         	movff	memcpy@d,fsr2l
  8583  00547C  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8584  005480  C087  FFDF         	movff	memcpy@tmp,indf2
  8585                           
  8586                           ; BSR set to: 0
  8587  005484  4B83               	infsnz	memcpy@d& (0+255),f,b
  8588  005486  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8589  005488                     l3054:
  8590                           
  8591                           ; BSR set to: 0
  8592  005488  0100               	movlb	0	; () banked
  8593  00548A  0781               	decf	memcpy@n& (0+255),f,b
  8594  00548C  A0D8               	btfss	status,0,c
  8595  00548E  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8596  005490  2981               	incf	memcpy@n& (0+255),w,b
  8597  005492  E1E9               	bnz	l8475
  8598  005494  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8599  005496  B4D8               	btfsc	status,2,c
  8600  005498  0012               	return	
  8601  00549A  D7E5               	goto	l3055
  8602  00549C                     __end_of_memcpy:
  8603                           	opt stack 0
  8604                           tosu	equ	0xFFF
  8605                           tosh	equ	0xFFE
  8606                           tosl	equ	0xFFD
  8607                           pclath	equ	0xFFA
  8608                           tblptru	equ	0xFF8
  8609                           tblptrh	equ	0xFF7
  8610                           tblptrl	equ	0xFF6
  8611                           tablat	equ	0xFF5
  8612                           prodh	equ	0xFF4
  8613                           prodl	equ	0xFF3
  8614                           intcon	equ	0xFF2
  8615                           intcon2	equ	0xFF1
  8616                           intcon3	equ	0xFF0
  8617                           postinc0	equ	0xFEE
  8618                           plusw0	equ	0xFEB
  8619                           wreg	equ	0xFE8
  8620                           postinc1	equ	0xFE6
  8621                           postdec1	equ	0xFE5
  8622                           plusw1	equ	0xFE3
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           indf2	equ	0xFDF
  8626                           postinc2	equ	0xFDE
  8627                           postdec2	equ	0xFDD
  8628                           plusw2	equ	0xFDB
  8629                           fsr2h	equ	0xFDA
  8630                           fsr2l	equ	0xFD9
  8631                           status	equ	0xFD8
  8632                           
  8633 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8634 ;; Defined at:
  8635 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:   17
  8656 ;; This function calls:
  8657 ;;		_USBCheckStdRequest
  8658 ;;		_USBCtrlEPServiceComplete
  8659 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8660 ;; This function is called by:
  8661 ;;		_USBCtrlEPService
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text36
  8666  0048F0                     __ptext36:
  8667                           	opt stack 0
  8668  0048F0                     _USBCtrlTrfSetupHandler:
  8669                           	opt stack 8
  8670                           
  8671                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;incstack = 0
  8675  0048F0  0E00               	movlw	0
  8676  0048F2  0100               	movlb	0	; () banked
  8677  0048F4  6FCA               	movwf	_shortPacketStatus& (0+255),b
  8678                           
  8679                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8680  0048F6  0E00               	movlw	0
  8681  0048F8  6FC6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8682                           
  8683                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8684  0048FA  0E00               	movlw	0
  8685  0048FC  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8686                           
  8687                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8688  0048FE  0E00               	movlw	0
  8689  004900  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8690                           
  8691                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8692  004902  0E00               	movlw	0
  8693  004904  0101               	movlb	1	; () banked
  8694  004906  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8695                           
  8696                           ;usb_device.c: 2493: controlTransferState = 0;
  8697  004908  0E00               	movlw	0
  8698  00490A  0100               	movlb	0	; () banked
  8699  00490C  6FC9               	movwf	_controlTransferState& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8703  00490E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8704  004912  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8705  004916  0E7F               	movlw	127
  8706  004918  16DF               	andwf	indf2,f,c
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8710  00491A  0E04               	movlw	4
  8711  00491C  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8715  00491E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8716  004922  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8717  004926  0E7F               	movlw	127
  8718  004928  16DF               	andwf	indf2,f,c
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8722  00492A  0E04               	movlw	4
  8723  00492C  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8727  00492E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8728  004932  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8729  004936  0E7F               	movlw	127
  8730  004938  16DF               	andwf	indf2,f,c
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8734  00493A  0E00               	movlw	0
  8735  00493C  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8739  00493E  0E00               	movlw	0
  8740  004940  6FB1               	movwf	(_inPipes+5)& (0+255),b
  8741  004942  0E00               	movlw	0
  8742  004944  6FB0               	movwf	(_inPipes+4)& (0+255),b
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8746  004946  0E00               	movlw	0
  8747  004948  0101               	movlb	1	; () banked
  8748  00494A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8749                           
  8750                           ; BSR set to: 1
  8751                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8752  00494C  0E00               	movlw	0
  8753  00494E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8754  004950  0E00               	movlw	0
  8755  004952  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8756                           
  8757                           ; BSR set to: 1
  8758                           ;usb_device.c: 2517: USBCheckStdRequest();
  8759  004954  EC8C  F019         	call	_USBCheckStdRequest	;wreg free
  8760                           
  8761                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8762  004958  0E00               	movlw	0
  8763  00495A  0100               	movlb	0	; () banked
  8764  00495C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8765  00495E  0E03               	movlw	3
  8766  004960  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8767  004962  0E00               	movlw	0
  8768  004964  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8769  004966  0E00               	movlw	0
  8770  004968  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8771  00496A  0E00               	movlw	0
  8772  00496C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8773  00496E  0E00               	movlw	0
  8774  004970  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8775  004972  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8776                           
  8777                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8778  004976  ECC7  F016         	call	_USBCtrlEPServiceComplete	;wreg free
  8779  00497A  0012               	return		;funcret
  8780  00497C                     __end_of_USBCtrlTrfSetupHandler:
  8781                           	opt stack 0
  8782                           tosu	equ	0xFFF
  8783                           tosh	equ	0xFFE
  8784                           tosl	equ	0xFFD
  8785                           pclath	equ	0xFFA
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           prodh	equ	0xFF4
  8791                           prodl	equ	0xFF3
  8792                           intcon	equ	0xFF2
  8793                           intcon2	equ	0xFF1
  8794                           intcon3	equ	0xFF0
  8795                           postinc0	equ	0xFEE
  8796                           plusw0	equ	0xFEB
  8797                           wreg	equ	0xFE8
  8798                           postinc1	equ	0xFE6
  8799                           postdec1	equ	0xFE5
  8800                           plusw1	equ	0xFE3
  8801                           fsr1h	equ	0xFE2
  8802                           fsr1l	equ	0xFE1
  8803                           indf2	equ	0xFDF
  8804                           postinc2	equ	0xFDE
  8805                           postdec2	equ	0xFDD
  8806                           plusw2	equ	0xFDB
  8807                           fsr2h	equ	0xFDA
  8808                           fsr2l	equ	0xFD9
  8809                           status	equ	0xFD8
  8810                           
  8811 ;; *************** function _USBCtrlEPServiceComplete *****************
  8812 ;; Defined at:
  8813 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;		None
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8831 ;;Total ram usage:        0 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; Hardware stack levels required when called:   13
  8834 ;; This function calls:
  8835 ;;		_USBCtrlEPAllowDataStage
  8836 ;;		_USBCtrlEPAllowStatusStage
  8837 ;; This function is called by:
  8838 ;;		_USBCtrlTrfSetupHandler
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text37
  8843  002D8E                     __ptext37:
  8844                           	opt stack 0
  8845  002D8E                     _USBCtrlEPServiceComplete:
  8846                           	opt stack 11
  8847                           
  8848                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  8849                           
  8850                           ;incstack = 0
  8851  002D8E  9865               	bcf	3941,4,c	;volatile
  8852                           
  8853                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  8854  002D90  0100               	movlb	0	; () banked
  8855  002D92  BFAF               	btfsc	(_inPipes+3)& (0+255),7,b
  8856  002D94  D03C               	goto	l1667
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;usb_device.c: 1647: {
  8860                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  8861  002D96  0101               	movlb	1	; () banked
  8862  002D98  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  8863  002D9A  D00D               	goto	l1668
  8864                           
  8865                           ; BSR set to: 1
  8866                           ;usb_device.c: 1649: {
  8867                           ;usb_device.c: 1650: controlTransferState = 2;
  8868  002D9C  0E02               	movlw	2
  8869  002D9E  0100               	movlb	0	; () banked
  8870  002DA0  6FC9               	movwf	_controlTransferState& (0+255),b
  8871                           
  8872                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  8873  002DA2  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  8874  002DA4  B4D8               	btfsc	status,2,c
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;usb_device.c: 1662: {
  8878                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  8879  002DA6  EC24  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  8880                           
  8881                           ;usb_device.c: 1664: }
  8882                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  8883  002DAA  0E00               	movlw	0
  8884  002DAC  0100               	movlb	0	; () banked
  8885  002DAE  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  8889  002DB0  0E00               	movlw	0
  8890  002DB2  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8891                           
  8892                           ;usb_device.c: 1670: }
  8893  002DB4  0012               	return	
  8894  002DB6                     l1668:
  8895                           
  8896                           ;usb_device.c: 1671: else
  8897                           ;usb_device.c: 1672: {
  8898                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  8899                           
  8900                           ; BSR set to: 0
  8901  002DB6  0100               	movlb	0	; () banked
  8902  002DB8  EE20 F001          	lfsr	2,1
  8903  002DBC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8904  002DBE  26D9               	addwf	fsr2l,f,c
  8905  002DC0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8906  002DC2  22DA               	addwfc	fsr2h,f,c
  8907  002DC4  0E08               	movlw	8
  8908  002DC6  6EDF               	movwf	indf2,c
  8909                           
  8910                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8911  002DC8  EE20 F002          	lfsr	2,2
  8912  002DCC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8913  002DCE  26D9               	addwf	fsr2l,f,c
  8914  002DD0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8915  002DD2  22DA               	addwfc	fsr2h,f,c
  8916  002DD4  0E30               	movlw	48
  8917  002DD6  6EDE               	movwf	postinc2,c
  8918  002DD8  0E04               	movlw	4
  8919  002DDA  6EDD               	movwf	postdec2,c
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8923  002DDC  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8924  002DE0  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8925  002DE4  0E0C               	movlw	12
  8926  002DE6  6EDF               	movwf	indf2,c
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8930  002DE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8931  002DEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8932  002DF0  0E00               	movlw	0
  8933  002DF2  8EDB               	bsf	plusw2,7,c
  8934                           
  8935                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  8936  002DF4  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8937  002DF8  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8938  002DFC  0E04               	movlw	4
  8939  002DFE  6EDF               	movwf	indf2,c
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8943  002E00  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8944  002E04  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8945  002E08  0E00               	movlw	0
  8946  002E0A  8EDB               	bsf	plusw2,7,c
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;usb_device.c: 1683: }
  8950                           ;usb_device.c: 1684: }
  8951  002E0C  0012               	return	
  8952  002E0E                     l1667:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;usb_device.c: 1685: else
  8956                           ;usb_device.c: 1686: {
  8957                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  8958  002E0E  0104               	movlb	4	; () banked
  8959  002E10  AF30               	btfss	48,7,b	;volatile
  8960  002E12  D012               	goto	l1672
  8961                           
  8962                           ; BSR set to: 4
  8963                           ;usb_device.c: 1688: {
  8964                           ;usb_device.c: 1689: controlTransferState = 1;
  8965  002E14  0E01               	movlw	1
  8966  002E16  0100               	movlb	0	; () banked
  8967  002E18  6FC9               	movwf	_controlTransferState& (0+255),b
  8968                           
  8969                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  8970  002E1A  51C3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  8971  002E1C  B4D8               	btfsc	status,2,c
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;usb_device.c: 1704: {
  8975                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  8976  002E1E  EC24  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  8977                           
  8978                           ;usb_device.c: 1706: }
  8979                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  8980  002E22  0E00               	movlw	0
  8981  002E24  0100               	movlb	0	; () banked
  8982  002E26  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  8986  002E28  0E00               	movlw	0
  8987  002E2A  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  8991  002E2C  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8992  002E2E  A4D8               	btfss	status,2,c
  8993  002E30  0012               	return	
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;usb_device.c: 1731: {
  8997                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  8998  002E32  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8999                           
  9000                           ;usb_device.c: 1733: }
  9001                           ;usb_device.c: 1734: }
  9002  002E36  0012               	return	
  9003  002E38                     l1672:
  9004                           
  9005                           ;usb_device.c: 1735: else
  9006                           ;usb_device.c: 1736: {
  9007                           ;usb_device.c: 1747: controlTransferState = 2;
  9008  002E38  0E02               	movlw	2
  9009  002E3A  0100               	movlb	0	; () banked
  9010  002E3C  6FC9               	movwf	_controlTransferState& (0+255),b
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9014  002E3E  EE20 F001          	lfsr	2,1
  9015  002E42  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9016  002E44  26D9               	addwf	fsr2l,f,c
  9017  002E46  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9018  002E48  22DA               	addwfc	fsr2h,f,c
  9019  002E4A  0E08               	movlw	8
  9020  002E4C  6EDF               	movwf	indf2,c
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9024  002E4E  EE20 F002          	lfsr	2,2
  9025  002E52  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9026  002E54  26D9               	addwf	fsr2l,f,c
  9027  002E56  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9028  002E58  22DA               	addwfc	fsr2h,f,c
  9029  002E5A  0E30               	movlw	48
  9030  002E5C  6EDE               	movwf	postinc2,c
  9031  002E5E  0E04               	movlw	4
  9032  002E60  6EDD               	movwf	postdec2,c
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9036  002E62  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9037  002E66  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9038  002E6A  0E04               	movlw	4
  9039  002E6C  6EDF               	movwf	indf2,c
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9043  002E6E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9044  002E72  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9045  002E76  0E00               	movlw	0
  9046  002E78  8EDB               	bsf	plusw2,7,c
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9050  002E7A  0E00               	movlw	0
  9051  002E7C  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9055  002E7E  0E00               	movlw	0
  9056  002E80  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9060  002E82  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9061  002E84  A4D8               	btfss	status,2,c
  9062  002E86  0012               	return	
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;usb_device.c: 1759: {
  9066                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9067  002E88  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9068  002E8C  0012               	return	
  9069  002E8E                     __end_of_USBCtrlEPServiceComplete:
  9070                           	opt stack 0
  9071                           tosu	equ	0xFFF
  9072                           tosh	equ	0xFFE
  9073                           tosl	equ	0xFFD
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           intcon2	equ	0xFF1
  9083                           intcon3	equ	0xFF0
  9084                           postinc0	equ	0xFEE
  9085                           plusw0	equ	0xFEB
  9086                           wreg	equ	0xFE8
  9087                           postinc1	equ	0xFE6
  9088                           postdec1	equ	0xFE5
  9089                           plusw1	equ	0xFE3
  9090                           fsr1h	equ	0xFE2
  9091                           fsr1l	equ	0xFE1
  9092                           indf2	equ	0xFDF
  9093                           postinc2	equ	0xFDE
  9094                           postdec2	equ	0xFDD
  9095                           plusw2	equ	0xFDB
  9096                           fsr2h	equ	0xFDA
  9097                           fsr2l	equ	0xFD9
  9098                           status	equ	0xFD8
  9099                           
  9100 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9101 ;; Defined at:
  9102 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:   12
  9123 ;; This function calls:
  9124 ;;		_USBCtrlTrfTxService
  9125 ;; This function is called by:
  9126 ;;		_USBCtrlEPServiceComplete
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text38
  9131  004448                     __ptext38:
  9132                           	opt stack 0
  9133  004448                     _USBCtrlEPAllowDataStage:
  9134                           	opt stack 11
  9135                           
  9136                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9137                           
  9138                           ;incstack = 0
  9139  004448  0E00               	movlw	0
  9140  00444A  0100               	movlb	0	; () banked
  9141  00444C  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9142                           
  9143                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9144  00444E  0E00               	movlw	0
  9145  004450  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9149  004452  0E02               	movlw	2
  9150  004454  19C9               	xorwf	_controlTransferState& (0+255),w,b
  9151  004456  A4D8               	btfss	status,2,c
  9152  004458  D01F               	goto	l1656
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;usb_device.c: 1512: {
  9156                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9157  00445A  EE20 F001          	lfsr	2,1
  9158  00445E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9159  004460  26D9               	addwf	fsr2l,f,c
  9160  004462  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9161  004464  22DA               	addwfc	fsr2h,f,c
  9162  004466  0E08               	movlw	8
  9163  004468  6EDF               	movwf	indf2,c
  9164                           
  9165                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9166  00446A  EE20 F002          	lfsr	2,2
  9167  00446E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9168  004470  26D9               	addwf	fsr2l,f,c
  9169  004472  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9170  004474  22DA               	addwfc	fsr2h,f,c
  9171  004476  0E38               	movlw	56
  9172  004478  6EDE               	movwf	postinc2,c
  9173  00447A  0E04               	movlw	4
  9174  00447C  6EDD               	movwf	postdec2,c
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9178  00447E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9179  004482  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9180  004486  0E48               	movlw	72
  9181  004488  6EDF               	movwf	indf2,c
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9185  00448A  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9186  00448E  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9187  004492  0E00               	movlw	0
  9188  004494  8EDB               	bsf	plusw2,7,c
  9189                           
  9190                           ;usb_device.c: 1518: }
  9191  004496  0012               	return	
  9192  004498                     l1656:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;usb_device.c: 1519: else
  9196                           ;usb_device.c: 1520: {
  9197                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9198                           
  9199                           ; BSR set to: 0
  9200  004498  51B0               	movf	(_inPipes+4)& (0+255),w,b
  9201  00449A  0104               	movlb	4	; () banked
  9202  00449C  5D36               	subwf	54,w,b	;volatile
  9203  00449E  0100               	movlb	0	; () banked
  9204  0044A0  51B1               	movf	(_inPipes+5)& (0+255),w,b
  9205  0044A2  0104               	movlb	4	; () banked
  9206  0044A4  5937               	subwfb	55,w,b	;volatile
  9207  0044A6  B0D8               	btfsc	status,0,c
  9208  0044A8  D004               	goto	l1658
  9209                           
  9210                           ; BSR set to: 4
  9211                           ;usb_device.c: 1524: {
  9212                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9213  0044AA  C436 F0B0          	movff	1078,_inPipes+4	;volatile
  9214  0044AE  C437 F0B1          	movff	1079,_inPipes+5	;volatile
  9215  0044B2                     l1658:
  9216                           
  9217                           ; BSR set to: 4
  9218                           ;usb_device.c: 1526: }
  9219                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9220                           
  9221                           ; BSR set to: 4
  9222  0044B2  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
  9223                           
  9224                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9225  0044B6  0100               	movlb	0	; () banked
  9226  0044B8  EE20 F002          	lfsr	2,2
  9227  0044BC  51B2               	movf	_pBDTEntryIn& (0+255),w,b
  9228  0044BE  26D9               	addwf	fsr2l,f,c
  9229  0044C0  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9230  0044C2  22DA               	addwfc	fsr2h,f,c
  9231  0044C4  0E38               	movlw	56
  9232  0044C6  6EDE               	movwf	postinc2,c
  9233  0044C8  0E04               	movlw	4
  9234  0044CA  6EDD               	movwf	postdec2,c
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9238  0044CC  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9239  0044D0  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9240  0044D4  0E48               	movlw	72
  9241  0044D6  6EDF               	movwf	indf2,c
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9245  0044D8  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9246  0044DC  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9247  0044E0  0E00               	movlw	0
  9248  0044E2  8EDB               	bsf	plusw2,7,c
  9249  0044E4  0012               	return	
  9250  0044E6                     __end_of_USBCtrlEPAllowDataStage:
  9251                           	opt stack 0
  9252                           tosu	equ	0xFFF
  9253                           tosh	equ	0xFFE
  9254                           tosl	equ	0xFFD
  9255                           pclath	equ	0xFFA
  9256                           tblptru	equ	0xFF8
  9257                           tblptrh	equ	0xFF7
  9258                           tblptrl	equ	0xFF6
  9259                           tablat	equ	0xFF5
  9260                           prodh	equ	0xFF4
  9261                           prodl	equ	0xFF3
  9262                           intcon	equ	0xFF2
  9263                           intcon2	equ	0xFF1
  9264                           intcon3	equ	0xFF0
  9265                           postinc0	equ	0xFEE
  9266                           plusw0	equ	0xFEB
  9267                           wreg	equ	0xFE8
  9268                           postinc1	equ	0xFE6
  9269                           postdec1	equ	0xFE5
  9270                           plusw1	equ	0xFE3
  9271                           fsr1h	equ	0xFE2
  9272                           fsr1l	equ	0xFE1
  9273                           indf2	equ	0xFDF
  9274                           postinc2	equ	0xFDE
  9275                           postdec2	equ	0xFDD
  9276                           plusw2	equ	0xFDB
  9277                           fsr2h	equ	0xFDA
  9278                           fsr2l	equ	0xFD9
  9279                           status	equ	0xFD8
  9280                           
  9281 ;; *************** function _USBCheckStdRequest *****************
  9282 ;; Defined at:
  9283 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      void 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9301 ;;Total ram usage:        0 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:   16
  9304 ;; This function calls:
  9305 ;;		_USBStdFeatureReqHandler
  9306 ;;		_USBStdGetDscHandler
  9307 ;;		_USBStdGetStatusHandler
  9308 ;;		_USBStdSetCfgHandler
  9309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9310 ;; This function is called by:
  9311 ;;		_USBCtrlTrfSetupHandler
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text39
  9316  003318                     __ptext39:
  9317                           	opt stack 0
  9318  003318                     _USBCheckStdRequest:
  9319                           	opt stack 8
  9320                           
  9321                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;incstack = 0
  9325  003318  0104               	movlb	4	; () banked
  9326  00331A  3930               	swapf	48,w,b	;volatile
  9327  00331C  32E8               	rrcf	wreg,f,c
  9328  00331E  0B03               	andlw	3
  9329  003320  0900               	iorlw	0
  9330  003322  A4D8               	btfss	status,2,c
  9331  003324  0012               	return	
  9332  003326  D048               	goto	l1791
  9333  003328                     l1792:
  9334                           
  9335                           ; BSR set to: 4
  9336                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9337  003328  0100               	movlb	0	; () banked
  9338  00332A  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9342  00332C  0E08               	movlw	8
  9343  00332E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9344                           
  9345                           ;usb_device.c: 2713: break;
  9346  003330  0012               	return	
  9347  003332                     
  9348                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9349                           
  9350                           ; BSR set to: 0
  9351  003332  EC80  F014         	call	_USBStdGetDscHandler	;wreg free
  9352                           
  9353                           ;usb_device.c: 2716: break;
  9354  003336  0012               	return	
  9355  003338                     
  9356                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9357  003338  ECA6  F018         	call	_USBStdSetCfgHandler	;wreg free
  9358                           
  9359                           ;usb_device.c: 2719: break;
  9360  00333C  0012               	return	
  9361  00333E                     
  9362                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9363  00333E  0ED4               	movlw	low _USBActiveConfiguration
  9364  003340  0100               	movlb	0	; () banked
  9365  003342  6FAC               	movwf	_inPipes& (0+255),b
  9366  003344  0E00               	movlw	high _USBActiveConfiguration
  9367  003346  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9371  003348  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9375  00334A  0E01               	movlw	1
  9376  00334C  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9380  00334E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9381                           
  9382                           ;usb_device.c: 2725: break;
  9383  003350  0012               	return	
  9384  003352                     
  9385                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9386                           
  9387                           ; BSR set to: 0
  9388  003352  EC7F  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9389                           
  9390                           ;usb_device.c: 2728: break;
  9391  003356  0012               	return	
  9392  003358                     
  9393                           ;usb_device.c: 2730: case 3:
  9394                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9395  003358  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9396                           
  9397                           ;usb_device.c: 2732: break;
  9398  00335C  0012               	return	
  9399  00335E                     
  9400                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9401  00335E  0104               	movlb	4	; () banked
  9402  003360  5134               	movf	52,w,b	;volatile
  9403  003362  0D01               	mullw	1
  9404  003364  0EF1               	movlw	low _USBAlternateInterface
  9405  003366  24F3               	addwf	prodl,w,c
  9406  003368  0100               	movlb	0	; () banked
  9407  00336A  6FAC               	movwf	_inPipes& (0+255),b
  9408  00336C  0E02               	movlw	high _USBAlternateInterface
  9409  00336E  20F4               	addwfc	prodh,w,c
  9410  003370  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9414  003372  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9418  003374  0E01               	movlw	1
  9419  003376  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9423  003378  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9424                           
  9425                           ;usb_device.c: 2738: break;
  9426  00337A  0012               	return	
  9427  00337C                     l1801:
  9428                           
  9429                           ; BSR set to: 4
  9430                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9431  00337C  0100               	movlb	0	; () banked
  9432  00337E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9436  003380  0104               	movlb	4	; () banked
  9437  003382  5134               	movf	52,w,b	;volatile
  9438  003384  0D01               	mullw	1
  9439  003386  0EF1               	movlw	low _USBAlternateInterface
  9440  003388  24F3               	addwf	prodl,w,c
  9441  00338A  6ED9               	movwf	fsr2l,c
  9442  00338C  0E02               	movlw	high _USBAlternateInterface
  9443  00338E  20F4               	addwfc	prodh,w,c
  9444  003390  6EDA               	movwf	fsr2h,c
  9445  003392  C432 FFDF          	movff	1074,indf2	;volatile
  9446                           
  9447                           ;usb_device.c: 2742: break;
  9448  003396  0012               	return	
  9449  003398                     
  9450                           ; BSR set to: 4
  9451                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9452                           
  9453                           ; BSR set to: 4
  9454  003398  0E00               	movlw	0
  9455  00339A  0100               	movlb	0	; () banked
  9456  00339C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9457  00339E  0E02               	movlw	2
  9458  0033A0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9459  0033A2  0E00               	movlw	0
  9460  0033A4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9461  0033A6  0E00               	movlw	0
  9462  0033A8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9463  0033AA  0E00               	movlw	0
  9464  0033AC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9465  0033AE  0E00               	movlw	0
  9466  0033B0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9467  0033B2  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9468                           
  9469                           ;usb_device.c: 2749: }
  9470                           
  9471                           ;usb_device.c: 2748: break;
  9472                           
  9473                           ;usb_device.c: 2747: default:
  9474                           
  9475                           ;usb_device.c: 2746: case 12:
  9476                           
  9477                           ;usb_device.c: 2745: break;
  9478  0033B6  0012               	return	
  9479  0033B8                     l1791:
  9480  0033B8  0104               	movlb	4	; () banked
  9481  0033BA  5131               	movf	49,w,b	;volatile
  9482                           
  9483                           ; Switch size 1, requested type "space"
  9484                           ; Number of cases is 11, Range of values is 0 to 12
  9485                           ; switch strategies available:
  9486                           ; Name         Instructions Cycles
  9487                           ; simple_byte           34    18 (average)
  9488                           ;	Chosen strategy is simple_byte
  9489  0033BC  0A00               	xorlw	0	; case 0
  9490  0033BE  B4D8               	btfsc	status,2,c
  9491  0033C0  D7C8               	goto	l1797
  9492  0033C2  0A01               	xorlw	1	; case 1
  9493  0033C4  B4D8               	btfsc	status,2,c
  9494  0033C6  D7C8               	goto	l1798
  9495  0033C8  0A02               	xorlw	2	; case 3
  9496  0033CA  B4D8               	btfsc	status,2,c
  9497  0033CC  D7C5               	goto	l1798
  9498  0033CE  0A06               	xorlw	6	; case 5
  9499  0033D0  B4D8               	btfsc	status,2,c
  9500  0033D2  D7AA               	goto	l1792
  9501  0033D4  0A03               	xorlw	3	; case 6
  9502  0033D6  B4D8               	btfsc	status,2,c
  9503  0033D8  D7AC               	goto	l1794
  9504  0033DA  0A01               	xorlw	1	; case 7
  9505  0033DC  B4D8               	btfsc	status,2,c
  9506  0033DE  D7DC               	goto	l1802
  9507  0033E0  0A0F               	xorlw	15	; case 8
  9508  0033E2  B4D8               	btfsc	status,2,c
  9509  0033E4  D7AC               	goto	l1796
  9510  0033E6  0A01               	xorlw	1	; case 9
  9511  0033E8  B4D8               	btfsc	status,2,c
  9512  0033EA  D7A6               	goto	l1795
  9513  0033EC  0A03               	xorlw	3	; case 10
  9514  0033EE  B4D8               	btfsc	status,2,c
  9515  0033F0  D7B6               	goto	l1800
  9516  0033F2  0A01               	xorlw	1	; case 11
  9517  0033F4  B4D8               	btfsc	status,2,c
  9518  0033F6  D7C2               	goto	l1801
  9519  0033F8  0A07               	xorlw	7	; case 12
  9520  0033FA  0012               	return	
  9521  0033FC                     __end_of_USBCheckStdRequest:
  9522                           	opt stack 0
  9523                           tosu	equ	0xFFF
  9524                           tosh	equ	0xFFE
  9525                           tosl	equ	0xFFD
  9526                           pclath	equ	0xFFA
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           intcon2	equ	0xFF1
  9535                           intcon3	equ	0xFF0
  9536                           postinc0	equ	0xFEE
  9537                           plusw0	equ	0xFEB
  9538                           wreg	equ	0xFE8
  9539                           postinc1	equ	0xFE6
  9540                           postdec1	equ	0xFE5
  9541                           plusw1	equ	0xFE3
  9542                           fsr1h	equ	0xFE2
  9543                           fsr1l	equ	0xFE1
  9544                           indf2	equ	0xFDF
  9545                           postinc2	equ	0xFDE
  9546                           postdec2	equ	0xFDD
  9547                           plusw2	equ	0xFDB
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           
  9552 ;; *************** function _USBStdSetCfgHandler *****************
  9553 ;; Defined at:
  9554 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  i               1   49[BANK0 ] unsigned char 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9571 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;Total ram usage:        1 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:   15
  9575 ;; This function calls:
  9576 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9577 ;;		_memset
  9578 ;; This function is called by:
  9579 ;;		_USBCheckStdRequest
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text40
  9584  00314C                     __ptext40:
  9585                           	opt stack 0
  9586  00314C                     _USBStdSetCfgHandler:
  9587                           	opt stack 8
  9588                           
  9589                           ;usb_device.c: 1988: uint8_t i;
  9590                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9591                           
  9592                           ;incstack = 0
  9593  00314C  0100               	movlb	0	; () banked
  9594  00314E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9598  003150  0E27               	movlw	39
  9599  003152  6F7D               	movwf	memset@p1& (0+255),b
  9600  003154  0E0F               	movlw	15
  9601  003156  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9602  003158  0E00               	movlw	0
  9603  00315A  6F80               	movwf	(memset@c+1)& (0+255),b
  9604  00315C  0E00               	movlw	0
  9605  00315E  6F7F               	movwf	memset@c& (0+255),b
  9606  003160  0E00               	movlw	0
  9607  003162  6F82               	movwf	(memset@n+1)& (0+255),b
  9608  003164  0E02               	movlw	2
  9609  003166  6F81               	movwf	memset@n& (0+255),b
  9610  003168  EC30  F02D         	call	_memset	;wreg free
  9611                           
  9612                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9613  00316C  0E00               	movlw	0
  9614  00316E  0100               	movlb	0	; () banked
  9615  003170  6F7D               	movwf	memset@p1& (0+255),b
  9616  003172  0E04               	movlw	4
  9617  003174  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9618  003176  0E00               	movlw	0
  9619  003178  6F80               	movwf	(memset@c+1)& (0+255),b
  9620  00317A  0E00               	movlw	0
  9621  00317C  6F7F               	movwf	memset@c& (0+255),b
  9622  00317E  0E00               	movlw	0
  9623  003180  6F82               	movwf	(memset@n+1)& (0+255),b
  9624  003182  0E30               	movlw	48
  9625  003184  6F81               	movwf	memset@n& (0+255),b
  9626  003186  EC30  F02D         	call	_memset	;wreg free
  9627                           
  9628                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9629  00318A  8C65               	bsf	3941,6,c	;volatile
  9630                           
  9631                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9632  00318C  0E00               	movlw	0
  9633  00318E  0100               	movlb	0	; () banked
  9634  003190  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9635  003192                     l11529:
  9636                           
  9637                           ; BSR set to: 0
  9638  003192  0E02               	movlw	2
  9639  003194  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9640  003196  D001               	goto	l1708
  9641  003198  D016               	goto	u10080
  9642  00319A                     l1708:
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;usb_device.c: 2006: {
  9646                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9647                           
  9648                           ; BSR set to: 0
  9649  00319A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9650  00319C  0D01               	mullw	1
  9651  00319E  0ED1               	movlw	low _ep_data_in
  9652  0031A0  24F3               	addwf	prodl,w,c
  9653  0031A2  6ED9               	movwf	fsr2l,c
  9654  0031A4  0E02               	movlw	high _ep_data_in
  9655  0031A6  20F4               	addwfc	prodh,w,c
  9656  0031A8  6EDA               	movwf	fsr2h,c
  9657  0031AA  0E00               	movlw	0
  9658  0031AC  6EDF               	movwf	indf2,c
  9659                           
  9660                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9661  0031AE  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9662  0031B0  0D01               	mullw	1
  9663  0031B2  0ECE               	movlw	low _ep_data_out
  9664  0031B4  24F3               	addwf	prodl,w,c
  9665  0031B6  6ED9               	movwf	fsr2l,c
  9666  0031B8  0E02               	movlw	high _ep_data_out
  9667  0031BA  20F4               	addwfc	prodh,w,c
  9668  0031BC  6EDA               	movwf	fsr2h,c
  9669  0031BE  0E00               	movlw	0
  9670  0031C0  6EDF               	movwf	indf2,c
  9671                           
  9672                           ; BSR set to: 0
  9673  0031C2  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9674  0031C4  D7E6               	goto	l11529
  9675  0031C6                     u10080:
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;usb_device.c: 2009: }
  9679                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9680                           
  9681                           ; BSR set to: 0
  9682  0031C6  0EF1               	movlw	low _USBAlternateInterface
  9683  0031C8  6F7D               	movwf	memset@p1& (0+255),b
  9684  0031CA  0E02               	movlw	high _USBAlternateInterface
  9685  0031CC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9686  0031CE  0E00               	movlw	0
  9687  0031D0  6F80               	movwf	(memset@c+1)& (0+255),b
  9688  0031D2  0E00               	movlw	0
  9689  0031D4  6F7F               	movwf	memset@c& (0+255),b
  9690  0031D6  0E00               	movlw	0
  9691  0031D8  6F82               	movwf	(memset@n+1)& (0+255),b
  9692  0031DA  0E02               	movlw	2
  9693  0031DC  6F81               	movwf	memset@n& (0+255),b
  9694  0031DE  EC30  F02D         	call	_memset	;wreg free
  9695                           
  9696                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9697  0031E2  9C65               	bcf	3941,6,c	;volatile
  9698                           
  9699                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9700  0031E4  0E08               	movlw	8
  9701  0031E6  0100               	movlb	0	; () banked
  9702  0031E8  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  9703  0031EA  0E04               	movlw	4
  9704  0031EC  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9708  0031EE  0E00               	movlw	0
  9709  0031F0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9710  0031F2  0E04               	movlw	4
  9711  0031F4  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9715  0031F6  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9716  0031FA  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9720  0031FE  C432 F0D4          	movff	1074,_USBActiveConfiguration	;volatile
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9724  003202  51D4               	movf	_USBActiveConfiguration& (0+255),w,b
  9725  003204  A4D8               	btfss	status,2,c
  9726  003206  D003               	goto	l1710
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;usb_device.c: 2028: {
  9730                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9731  003208  0E10               	movlw	16
  9732  00320A  6FCB               	movwf	_USBDeviceState& (0+255),b
  9733                           
  9734                           ;usb_device.c: 2031: }
  9735  00320C  0012               	return	
  9736  00320E                     l1710:
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;usb_device.c: 2032: else
  9740                           ;usb_device.c: 2033: {
  9741                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9742                           
  9743                           ; BSR set to: 0
  9744  00320E  0E00               	movlw	0
  9745  003210  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9746  003212  0E01               	movlw	1
  9747  003214  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9748  003216  0ED4               	movlw	low _USBActiveConfiguration
  9749  003218  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9750  00321A  0E00               	movlw	high _USBActiveConfiguration
  9751  00321C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9752  00321E  0E00               	movlw	0
  9753  003220  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9754  003222  0E01               	movlw	1
  9755  003224  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9756  003226  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9757                           
  9758                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9759  00322A  0E20               	movlw	32
  9760  00322C  0100               	movlb	0	; () banked
  9761  00322E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9762  003230  0012               	return	
  9763  003232                     __end_of_USBStdSetCfgHandler:
  9764                           	opt stack 0
  9765                           tosu	equ	0xFFF
  9766                           tosh	equ	0xFFE
  9767                           tosl	equ	0xFFD
  9768                           pclath	equ	0xFFA
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           intcon2	equ	0xFF1
  9777                           intcon3	equ	0xFF0
  9778                           postinc0	equ	0xFEE
  9779                           plusw0	equ	0xFEB
  9780                           wreg	equ	0xFE8
  9781                           postinc1	equ	0xFE6
  9782                           postdec1	equ	0xFE5
  9783                           plusw1	equ	0xFE3
  9784                           fsr1h	equ	0xFE2
  9785                           fsr1l	equ	0xFE1
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           postdec2	equ	0xFDD
  9789                           plusw2	equ	0xFDB
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function _USBStdGetStatusHandler *****************
  9795 ;; Defined at:
  9796 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9801 ;;		 -> NULL(0), BDT(48), 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      void 
  9804 ;; Registers used:
  9805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9814 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9815 ;;Total ram usage:        3 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:   11
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_USBCheckStdRequest
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text41
  9826  003EFE                     __ptext41:
  9827                           	opt stack 0
  9828  003EFE                     _USBStdGetStatusHandler:
  9829                           	opt stack 12
  9830                           
  9831                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;incstack = 0
  9835  003EFE  0E00               	movlw	0
  9836  003F00  0104               	movlb	4	; () banked
  9837  003F02  6F38               	movwf	56,b	;volatile
  9838                           
  9839                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9840  003F04  0E00               	movlw	0
  9841  003F06  6F39               	movwf	57,b	;volatile
  9842                           
  9843                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9844  003F08  D03D               	goto	l1729
  9845  003F0A                     l1730:
  9846                           
  9847                           ; BSR set to: 4
  9848                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  9849  003F0A  0100               	movlb	0	; () banked
  9850  003F0C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9851                           
  9852                           ;usb_device.c: 2163: }
  9853                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  9854                           
  9855                           ; BSR set to: 4
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;usb_device.c: 2161: {
  9859                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  9860                           
  9861                           ;usb_device.c: 2160: if(0 == 1)
  9862  003F0E  0101               	movlb	1	; () banked
  9863  003F10  05E7               	decf	_RemoteWakeup& (0+255),w,b
  9864  003F12  A4D8               	btfss	status,2,c
  9865  003F14  D042               	goto	l1733
  9866                           
  9867                           ; BSR set to: 1
  9868                           ;usb_device.c: 2166: {
  9869                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  9870  003F16  0104               	movlb	4	; () banked
  9871  003F18  8338               	bsf	56,1,b	;volatile
  9872                           
  9873                           ; BSR set to: 4
  9874                           ;usb_device.c: 2168: }
  9875                           ;usb_device.c: 2169: break;
  9876  003F1A  D03F               	goto	l1733
  9877  003F1C                     l1734:
  9878                           
  9879                           ; BSR set to: 4
  9880                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  9881  003F1C  0100               	movlb	0	; () banked
  9882  003F1E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9883                           
  9884                           ;usb_device.c: 2172: break;
  9885  003F20  D03C               	goto	l1733
  9886  003F22                     l1735:
  9887                           
  9888                           ; BSR set to: 4
  9889                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  9890  003F22  0100               	movlb	0	; () banked
  9891  003F24  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9892                           
  9893                           ;usb_device.c: 2178: {
  9894                           ;usb_device.c: 2179: BDT_ENTRY *p;
  9895                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  9896  003F26  0104               	movlb	4	; () banked
  9897  003F28  BF34               	btfsc	52,7,b	;volatile
  9898  003F2A  D00B               	goto	l1736
  9899                           
  9900                           ; BSR set to: 4
  9901                           ;usb_device.c: 2182: {
  9902                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9903  003F2C  5134               	movf	52,w,b	;volatile
  9904  003F2E  0B0F               	andlw	15
  9905  003F30  0100               	movlb	0	; () banked
  9906  003F32  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9907  003F34  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9908  003F36  0D02               	mullw	2
  9909  003F38  0E0E               	movlw	low _pBDTEntryOut
  9910  003F3A  24F3               	addwf	prodl,w,c
  9911  003F3C  6ED9               	movwf	fsr2l,c
  9912  003F3E  0E03               	movlw	high _pBDTEntryOut
  9913  003F40  D00B               	goto	L4
  9914  003F42                     l1736:
  9915                           
  9916                           ;usb_device.c: 2185: else
  9917                           ;usb_device.c: 2186: {
  9918                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9919                           
  9920                           ; BSR set to: 0
  9921  003F42  0104               	movlb	4	; () banked
  9922  003F44  5134               	movf	52,w,b	;volatile
  9923  003F46  0B0F               	andlw	15
  9924  003F48  0100               	movlb	0	; () banked
  9925  003F4A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9926  003F4C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9927  003F4E  0D02               	mullw	2
  9928  003F50  0EB2               	movlw	low _pBDTEntryIn
  9929  003F52  24F3               	addwf	prodl,w,c
  9930  003F54  6ED9               	movwf	fsr2l,c
  9931  003F56  0E00               	movlw	high _pBDTEntryIn
  9932  003F58                     L4:
  9933  003F58  20F4               	addwfc	prodh,w,c
  9934  003F5A  6EDA               	movwf	fsr2h,c
  9935  003F5C  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
  9936  003F60  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;usb_device.c: 2188: }
  9940                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9941                           
  9942                           ; BSR set to: 0
  9943  003F64  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9944  003F68  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9945  003F6C  AEDF               	btfss	indf2,7,c
  9946  003F6E  D015               	goto	l1733
  9947                           
  9948                           ; BSR set to: 0
  9949  003F70  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9950  003F74  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9951  003F78  A4DF               	btfss	indf2,2,c
  9952  003F7A  D00F               	goto	l1733
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  9956  003F7C  0E01               	movlw	1
  9957  003F7E  0104               	movlb	4	; () banked
  9958  003F80  6F38               	movwf	56,b	;volatile
  9959                           
  9960                           ; BSR set to: 4
  9961                           ;usb_device.c: 2193: }
  9962                           ;usb_device.c: 2194: }
  9963                           
  9964                           ; BSR set to: 4
  9965                           ;usb_device.c: 2192: break;
  9966  003F82  D00B               	goto	l1733
  9967  003F84                     l1729:
  9968                           
  9969                           ; BSR set to: 4
  9970                           
  9971                           ; BSR set to: 4
  9972  003F84  5130               	movf	48,w,b	;volatile
  9973  003F86  0B1F               	andlw	31
  9974                           
  9975                           ; Switch size 1, requested type "space"
  9976                           ; Number of cases is 3, Range of values is 0 to 2
  9977                           ; switch strategies available:
  9978                           ; Name         Instructions Cycles
  9979                           ; simple_byte           10     6 (average)
  9980                           ;	Chosen strategy is simple_byte
  9981  003F88  0A00               	xorlw	0	; case 0
  9982  003F8A  B4D8               	btfsc	status,2,c
  9983  003F8C  D7BE               	goto	l1730
  9984  003F8E  0A01               	xorlw	1	; case 1
  9985  003F90  B4D8               	btfsc	status,2,c
  9986  003F92  D7C4               	goto	l1734
  9987  003F94  0A03               	xorlw	3	; case 2
  9988  003F96  B4D8               	btfsc	status,2,c
  9989  003F98  D7C4               	goto	l1735
  9990  003F9A                     l1733:
  9991                           
  9992                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  9993  003F9A  0100               	movlb	0	; () banked
  9994  003F9C  AFAF               	btfss	(_inPipes+3)& (0+255),7,b
  9995  003F9E  0012               	return	
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;usb_device.c: 2197: {
  9999                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10000  003FA0  0E38               	movlw	56
 10001  003FA2  6FAC               	movwf	_inPipes& (0+255),b
 10002  003FA4  0E04               	movlw	4
 10003  003FA6  6FAD               	movwf	(_inPipes+1)& (0+255),b
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10007  003FA8  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10011  003FAA  0E02               	movlw	2
 10012  003FAC  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10013  003FAE  0012               	return	
 10014  003FB0                     __end_of_USBStdGetStatusHandler:
 10015                           	opt stack 0
 10016                           tosu	equ	0xFFF
 10017                           tosh	equ	0xFFE
 10018                           tosl	equ	0xFFD
 10019                           pclath	equ	0xFFA
 10020                           tblptru	equ	0xFF8
 10021                           tblptrh	equ	0xFF7
 10022                           tblptrl	equ	0xFF6
 10023                           tablat	equ	0xFF5
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           intcon	equ	0xFF2
 10027                           intcon2	equ	0xFF1
 10028                           intcon3	equ	0xFF0
 10029                           postinc0	equ	0xFEE
 10030                           plusw0	equ	0xFEB
 10031                           wreg	equ	0xFE8
 10032                           postinc1	equ	0xFE6
 10033                           postdec1	equ	0xFE5
 10034                           plusw1	equ	0xFE3
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           indf2	equ	0xFDF
 10038                           postinc2	equ	0xFDE
 10039                           postdec2	equ	0xFDD
 10040                           plusw2	equ	0xFDB
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8
 10044                           
 10045 ;; *************** function _USBStdGetDscHandler *****************
 10046 ;; Defined at:
 10047 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;		None
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10065 ;;Total ram usage:        2 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:   11
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_USBCheckStdRequest
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text42
 10076  002900                     __ptext42:
 10077                           	opt stack 0
 10078  002900                     _USBStdGetDscHandler:
 10079                           	opt stack 12
 10080                           
 10081                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;incstack = 0
 10085  002900  0E80               	movlw	128
 10086  002902  0104               	movlb	4	; () banked
 10087  002904  1930               	xorwf	48,w,b	;volatile
 10088  002906  A4D8               	btfss	status,2,c
 10089  002908  0012               	return	
 10090                           
 10091                           ; BSR set to: 4
 10092                           ;usb_device.c: 2064: {
 10093                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10094  00290A  0EC0               	movlw	192
 10095  00290C  0100               	movlb	0	; () banked
 10096  00290E  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10097                           
 10098                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10099  002910  D082               	goto	l1716
 10100  002912                     
 10101                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10102                           
 10103                           ; BSR set to: 0
 10104  002912  0E76               	movlw	low _device_dsc
 10105  002914  0100               	movlb	0	; () banked
 10106  002916  6FAC               	movwf	_inPipes& (0+255),b
 10107  002918  0EFE               	movlw	high _device_dsc
 10108  00291A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10112  00291C  0E00               	movlw	0
 10113  00291E  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10114  002920  0E12               	movlw	18
 10115  002922  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10116                           
 10117                           ;usb_device.c: 2076: break;
 10118  002924  0012               	return	
 10119  002926                     
 10120                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10121                           
 10122                           ; BSR set to: 0
 10123  002926  0104               	movlb	4	; () banked
 10124  002928  5132               	movf	50,w,b	;volatile
 10125  00292A  A4D8               	btfss	status,2,c
 10126  00292C  D040               	goto	l1720
 10127                           
 10128                           ; BSR set to: 4
 10129                           ;usb_device.c: 2082: {
 10130                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10131  00292E  5132               	movf	50,w,b	;volatile
 10132  002930  0D02               	mullw	2
 10133  002932  0E5B               	movlw	low _USB_CD_Ptr
 10134  002934  24F3               	addwf	prodl,w,c
 10135  002936  6EF6               	movwf	tblptrl,c
 10136  002938  0EFC               	movlw	high _USB_CD_Ptr
 10137  00293A  20F4               	addwfc	prodh,w,c
 10138  00293C  6EF7               	movwf	tblptrh,c
 10139  00293E                     	if	0	;There are less than 3 active tblptr bytes
 10140  00293E                     	endif
 10141  00293E  0009               	tblrd		*+
 10142  002940  CFF5 F0AC          	movff	tablat,_inPipes
 10143  002944  000A               	tblrd		*-
 10144  002946  CFF5 F0AD          	movff	tablat,_inPipes+1
 10145                           
 10146                           ; BSR set to: 4
 10147                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10148  00294A  0E02               	movlw	2
 10149  00294C  0100               	movlb	0	; () banked
 10150  00294E  25AC               	addwf	_inPipes& (0+255),w,b
 10151  002950  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10152  002952  0E00               	movlw	0
 10153  002954  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10154  002956  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10155  002958  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10156  00295C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10157  002960  6AF8               	clrf	tblptru,c
 10158  002962  0E0E               	movlw	(high __ramtop+-1)
 10159  002964  64F7               	cpfsgt	tblptrh,c
 10160  002966  D003               	bra	u5347
 10161  002968  0008               	tblrd		*
 10162  00296A  50F5               	movf	tablat,w,c
 10163  00296C  D005               	bra	u5340
 10164  00296E                     u5347:
 10165  00296E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10166  002972  CFF7 FFEA          	movff	tblptrh,fsr0h
 10167  002976  50EF               	movf	indf0,w,c
 10168  002978                     u5340:
 10169  002978  0100               	movlb	0	; () banked
 10170  00297A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10174  00297C  0E03               	movlw	3
 10175  00297E  25AC               	addwf	_inPipes& (0+255),w,b
 10176  002980  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10177  002982  0E00               	movlw	0
 10178  002984  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10179  002986  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10180  002988  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10181  00298C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10182  002990  6AF8               	clrf	tblptru,c
 10183  002992  0E0E               	movlw	(high __ramtop+-1)
 10184  002994  64F7               	cpfsgt	tblptrh,c
 10185  002996  D003               	bra	u5357
 10186  002998  0008               	tblrd		*
 10187  00299A  50F5               	movf	tablat,w,c
 10188  00299C  D005               	bra	u5350
 10189  00299E                     u5357:
 10190  00299E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10191  0029A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10192  0029A6  50EF               	movf	indf0,w,c
 10193  0029A8                     u5350:
 10194  0029A8  0100               	movlb	0	; () banked
 10195  0029AA  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10196                           
 10197                           ;usb_device.c: 2094: }
 10198  0029AC  0012               	return	
 10199  0029AE                     l1720:
 10200                           
 10201                           ;usb_device.c: 2095: else
 10202                           ;usb_device.c: 2096: {
 10203                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10204                           
 10205                           ; BSR set to: 0
 10206  0029AE  0E00               	movlw	0
 10207  0029B0  0100               	movlb	0	; () banked
 10208  0029B2  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;usb_device.c: 2098: }
 10212                           ;usb_device.c: 2099: break;
 10213  0029B4  0012               	return	
 10214  0029B6                     
 10215                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10216                           
 10217                           ; BSR set to: 0
 10218  0029B6  0E03               	movlw	3
 10219  0029B8  0104               	movlb	4	; () banked
 10220  0029BA  6132               	cpfslt	50,b	;volatile
 10221  0029BC  D024               	goto	l1723
 10222                           
 10223                           ; BSR set to: 4
 10224                           ;usb_device.c: 2105: {
 10225                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10226  0029BE  5132               	movf	50,w,b	;volatile
 10227  0029C0  0D02               	mullw	2
 10228  0029C2  0E55               	movlw	low _USB_SD_Ptr
 10229  0029C4  24F3               	addwf	prodl,w,c
 10230  0029C6  6EF6               	movwf	tblptrl,c
 10231  0029C8  0EFC               	movlw	high _USB_SD_Ptr
 10232  0029CA  20F4               	addwfc	prodh,w,c
 10233  0029CC  6EF7               	movwf	tblptrh,c
 10234  0029CE                     	if	0	;There are less than 3 active tblptr bytes
 10235  0029CE                     	endif
 10236  0029CE  0009               	tblrd		*+
 10237  0029D0  CFF5 F0AC          	movff	tablat,_inPipes
 10238  0029D4  000A               	tblrd		*-
 10239  0029D6  CFF5 F0AD          	movff	tablat,_inPipes+1
 10240                           
 10241                           ; BSR set to: 4
 10242                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10243  0029DA  C0AC  FFF6         	movff	_inPipes,tblptrl
 10244  0029DE  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 10245  0029E2  6AF8               	clrf	tblptru,c
 10246  0029E4  0E0E               	movlw	(high __ramtop+-1)
 10247  0029E6  64F7               	cpfsgt	tblptrh,c
 10248  0029E8  D003               	bra	u5377
 10249  0029EA  0008               	tblrd		*
 10250  0029EC  50F5               	movf	tablat,w,c
 10251  0029EE  D005               	bra	u5370
 10252  0029F0                     u5377:
 10253  0029F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10254  0029F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10255  0029F8  50EF               	movf	indf0,w,c
 10256  0029FA                     u5370:
 10257  0029FA  0100               	movlb	0	; () banked
 10258  0029FC  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10259  0029FE  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10260  002A00  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10261  002A02  6BB1               	clrf	(_inPipes+5)& (0+255),b
 10262                           
 10263                           ;usb_device.c: 2110: }
 10264  002A04  0012               	return	
 10265  002A06                     l1723:
 10266                           
 10267                           ;usb_device.c: 2120: else
 10268                           ;usb_device.c: 2121: {
 10269                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10270                           
 10271                           ; BSR set to: 0
 10272  002A06  0E00               	movlw	0
 10273  002A08  0100               	movlb	0	; () banked
 10274  002A0A  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;usb_device.c: 2123: }
 10278                           ;usb_device.c: 2124: break;
 10279  002A0C  0012               	return	
 10280  002A0E                     
 10281                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10282                           
 10283                           ; BSR set to: 0
 10284  002A0E  0E00               	movlw	0
 10285  002A10  0100               	movlb	0	; () banked
 10286  002A12  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;usb_device.c: 2128: }
 10290                           
 10291                           ;usb_device.c: 2127: break;
 10292  002A14  0012               	return	
 10293  002A16                     l1716:
 10294                           
 10295                           ; BSR set to: 0
 10296                           
 10297                           ; BSR set to: 0
 10298  002A16  0104               	movlb	4	; () banked
 10299  002A18  5133               	movf	51,w,b	;volatile
 10300                           
 10301                           ; Switch size 1, requested type "space"
 10302                           ; Number of cases is 3, Range of values is 1 to 3
 10303                           ; switch strategies available:
 10304                           ; Name         Instructions Cycles
 10305                           ; simple_byte           10     6 (average)
 10306                           ;	Chosen strategy is simple_byte
 10307  002A1A  0A01               	xorlw	1	; case 1
 10308  002A1C  B4D8               	btfsc	status,2,c
 10309  002A1E  D779               	goto	l1717
 10310  002A20  0A03               	xorlw	3	; case 2
 10311  002A22  B4D8               	btfsc	status,2,c
 10312  002A24  D780               	goto	l1719
 10313  002A26  0A01               	xorlw	1	; case 3
 10314  002A28  B4D8               	btfsc	status,2,c
 10315  002A2A  D7C5               	goto	l1722
 10316  002A2C  D7F0               	goto	l1725
 10317  002A2E                     __end_of_USBStdGetDscHandler:
 10318                           	opt stack 0
 10319                           tosu	equ	0xFFF
 10320                           tosh	equ	0xFFE
 10321                           tosl	equ	0xFFD
 10322                           pclath	equ	0xFFA
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           prodh	equ	0xFF4
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           intcon2	equ	0xFF1
 10331                           intcon3	equ	0xFF0
 10332                           indf0	equ	0xFEF
 10333                           postinc0	equ	0xFEE
 10334                           plusw0	equ	0xFEB
 10335                           fsr0h	equ	0xFEA
 10336                           fsr0l	equ	0xFE9
 10337                           wreg	equ	0xFE8
 10338                           postinc1	equ	0xFE6
 10339                           postdec1	equ	0xFE5
 10340                           plusw1	equ	0xFE3
 10341                           fsr1h	equ	0xFE2
 10342                           fsr1l	equ	0xFE1
 10343                           indf2	equ	0xFDF
 10344                           postinc2	equ	0xFDE
 10345                           postdec2	equ	0xFDD
 10346                           plusw2	equ	0xFDB
 10347                           fsr2h	equ	0xFDA
 10348                           fsr2l	equ	0xFD9
 10349                           status	equ	0xFD8
 10350                           
 10351 ;; *************** function _USBStdFeatureReqHandler *****************
 10352 ;; Defined at:
 10353 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10358 ;;		 -> NULL(0), BDT(48), 
 10359 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10360 ;;		 -> UEP0(1), 
 10361 ;;  current_ep_d    1   52[BANK0 ] struct .
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      void 
 10364 ;; Registers used:
 10365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10372 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10374 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10375 ;;Total ram usage:        6 bytes
 10376 ;; Hardware stack levels used:    1
 10377 ;; Hardware stack levels required when called:   15
 10378 ;; This function calls:
 10379 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10380 ;; This function is called by:
 10381 ;;		_USBCheckStdRequest
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text43
 10386  00135A                     __ptext43:
 10387                           	opt stack 0
 10388  00135A                     _USBStdFeatureReqHandler:
 10389                           	opt stack 8
 10390                           
 10391                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10392                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10393                           ;usb_device.c: 2778: unsigned char* pUEP;
 10394                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10395                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10396                           
 10397                           ;incstack = 0
 10398  00135A  0104               	movlb	4	; () banked
 10399  00135C  0532               	decf	50,w,b	;volatile
 10400  00135E  A4D8               	btfss	status,2,c
 10401  001360  D011               	goto	l1809
 10402                           
 10403                           ; BSR set to: 4
 10404  001362  5130               	movf	48,w,b	;volatile
 10405  001364  0B1F               	andlw	31
 10406  001366  0900               	iorlw	0
 10407  001368  A4D8               	btfss	status,2,c
 10408  00136A  D00C               	goto	l1809
 10409                           
 10410                           ; BSR set to: 4
 10411                           ;usb_device.c: 2818: {
 10412                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10413  00136C  0100               	movlb	0	; () banked
 10414  00136E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10418  001370  0E03               	movlw	3
 10419  001372  0104               	movlb	4	; () banked
 10420  001374  1931               	xorwf	49,w,b	;volatile
 10421  001376  A4D8               	btfss	status,2,c
 10422  001378  D002               	goto	l1808
 10423                           
 10424                           ; BSR set to: 4
 10425                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10426  00137A  0E01               	movlw	1
 10427  00137C  D001               	goto	L5
 10428  00137E                     l1808:
 10429                           
 10430                           ;usb_device.c: 2822: else
 10431                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10432                           
 10433                           ; BSR set to: 1
 10434  00137E  0E00               	movlw	0
 10435  001380                     L5:
 10436  001380  0101               	movlb	1	; () banked
 10437  001382  6FE7               	movwf	_RemoteWakeup& (0+255),b
 10438  001384                     l1809:
 10439                           
 10440                           ;usb_device.c: 2824: }
 10441                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10442                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10443                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10444                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10445                           
 10446                           ; BSR set to: 1
 10447  001384  0104               	movlb	4	; () banked
 10448  001386  5132               	movf	50,w,b	;volatile
 10449  001388  A4D8               	btfss	status,2,c
 10450  00138A  0012               	return	
 10451                           
 10452                           ; BSR set to: 4
 10453  00138C  5130               	movf	48,w,b	;volatile
 10454  00138E  0B1F               	andlw	31
 10455  001390  0A02               	xorlw	2
 10456  001392  A4D8               	btfss	status,2,c
 10457  001394  0012               	return	
 10458                           
 10459                           ; BSR set to: 4
 10460  001396  5134               	movf	52,w,b	;volatile
 10461  001398  0B0F               	andlw	15
 10462  00139A  0900               	iorlw	0
 10463  00139C  B4D8               	btfsc	status,2,c
 10464  00139E  0012               	return	
 10465                           
 10466                           ; BSR set to: 4
 10467  0013A0  5134               	movf	52,w,b	;volatile
 10468  0013A2  0B0F               	andlw	15
 10469  0013A4  0100               	movlb	0	; () banked
 10470  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10471  0013A8  0E03               	movlw	3
 10472  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10473  0013AC  0012               	return	
 10474                           
 10475                           ; BSR set to: 0
 10476  0013AE  0E20               	movlw	32
 10477  0013B0  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 10478  0013B2  A4D8               	btfss	status,2,c
 10479  0013B4  0012               	return	
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;usb_device.c: 2831: {
 10483                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10484  0013B6  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10485                           
 10486                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10487  0013B8  0104               	movlb	4	; () banked
 10488  0013BA  BF34               	btfsc	52,7,b	;volatile
 10489  0013BC  D01C               	goto	l1811
 10490                           
 10491                           ; BSR set to: 4
 10492                           ;usb_device.c: 2838: {
 10493                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10494  0013BE  5134               	movf	52,w,b	;volatile
 10495  0013C0  0B0F               	andlw	15
 10496  0013C2  0100               	movlb	0	; () banked
 10497  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10498  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10499  0013C8  0D02               	mullw	2
 10500  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10501  0013CC  24F3               	addwf	prodl,w,c
 10502  0013CE  6ED9               	movwf	fsr2l,c
 10503  0013D0  0E03               	movlw	high _pBDTEntryOut
 10504  0013D2  20F4               	addwfc	prodh,w,c
 10505  0013D4  6EDA               	movwf	fsr2h,c
 10506  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10507  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10508                           
 10509                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10510  0013DE  0104               	movlb	4	; () banked
 10511  0013E0  5134               	movf	52,w,b	;volatile
 10512  0013E2  0B0F               	andlw	15
 10513  0013E4  0100               	movlb	0	; () banked
 10514  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10515  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10516  0013EA  0D01               	mullw	1
 10517  0013EC  0ECE               	movlw	low _ep_data_out
 10518  0013EE  24F3               	addwf	prodl,w,c
 10519  0013F0  6ED9               	movwf	fsr2l,c
 10520  0013F2  0E02               	movlw	high _ep_data_out
 10521  0013F4  D01C               	goto	L6
 10522  0013F6                     l1811:
 10523                           
 10524                           ;usb_device.c: 2842: else
 10525                           ;usb_device.c: 2843: {
 10526                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10527                           
 10528                           ; BSR set to: 0
 10529  0013F6  0104               	movlb	4	; () banked
 10530  0013F8  5134               	movf	52,w,b	;volatile
 10531  0013FA  0B0F               	andlw	15
 10532  0013FC  0100               	movlb	0	; () banked
 10533  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10534  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10535  001402  0D02               	mullw	2
 10536  001404  0EB2               	movlw	low _pBDTEntryIn
 10537  001406  24F3               	addwf	prodl,w,c
 10538  001408  6ED9               	movwf	fsr2l,c
 10539  00140A  0E00               	movlw	high _pBDTEntryIn
 10540  00140C  20F4               	addwfc	prodh,w,c
 10541  00140E  6EDA               	movwf	fsr2h,c
 10542  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10543  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10544                           
 10545                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10546  001418  0104               	movlb	4	; () banked
 10547  00141A  5134               	movf	52,w,b	;volatile
 10548  00141C  0B0F               	andlw	15
 10549  00141E  0100               	movlb	0	; () banked
 10550  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10551  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10552  001424  0D01               	mullw	1
 10553  001426  0ED1               	movlw	low _ep_data_in
 10554  001428  24F3               	addwf	prodl,w,c
 10555  00142A  6ED9               	movwf	fsr2l,c
 10556  00142C  0E02               	movlw	high _ep_data_in
 10557  00142E                     L6:
 10558  00142E  20F4               	addwfc	prodh,w,c
 10559  001430  6EDA               	movwf	fsr2h,c
 10560  001432  50DF               	movf	indf2,w,c
 10561  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;usb_device.c: 2846: }
 10565                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10566                           
 10567                           ; BSR set to: 0
 10568  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10569  001438  D002               	goto	l1813
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;usb_device.c: 2853: {
 10573                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10574  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10575                           
 10576                           ;usb_device.c: 2855: }
 10577  00143C  D001               	goto	l1814
 10578  00143E                     l1813:
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;usb_device.c: 2856: else
 10582                           ;usb_device.c: 2857: {
 10583                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10584                           
 10585                           ; BSR set to: 0
 10586  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10587  001440                     l1814:
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;usb_device.c: 2859: }
 10591                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10592                           
 10593                           ; BSR set to: 0
 10594  001440  0104               	movlb	4	; () banked
 10595  001442  BF34               	btfsc	52,7,b	;volatile
 10596  001444  D00B               	goto	l1815
 10597                           
 10598                           ; BSR set to: 4
 10599                           ;usb_device.c: 2865: {
 10600                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10601  001446  5134               	movf	52,w,b	;volatile
 10602  001448  0B0F               	andlw	15
 10603  00144A  0100               	movlb	0	; () banked
 10604  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10605  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10606  001450  0D02               	mullw	2
 10607  001452  0E0E               	movlw	low _pBDTEntryOut
 10608  001454  24F3               	addwf	prodl,w,c
 10609  001456  6ED9               	movwf	fsr2l,c
 10610  001458  0E03               	movlw	high _pBDTEntryOut
 10611  00145A  D00B               	goto	L7
 10612  00145C                     l1815:
 10613                           
 10614                           ;usb_device.c: 2868: else
 10615                           ;usb_device.c: 2869: {
 10616                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10617                           
 10618                           ; BSR set to: 0
 10619  00145C  0104               	movlb	4	; () banked
 10620  00145E  5134               	movf	52,w,b	;volatile
 10621  001460  0B0F               	andlw	15
 10622  001462  0100               	movlb	0	; () banked
 10623  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10624  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10625  001468  0D02               	mullw	2
 10626  00146A  0EB2               	movlw	low _pBDTEntryIn
 10627  00146C  24F3               	addwf	prodl,w,c
 10628  00146E  6ED9               	movwf	fsr2l,c
 10629  001470  0E00               	movlw	high _pBDTEntryIn
 10630  001472                     L7:
 10631  001472  20F4               	addwfc	prodh,w,c
 10632  001474  6EDA               	movwf	fsr2h,c
 10633  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10634  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;usb_device.c: 2871: }
 10638                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10639                           
 10640                           ; BSR set to: 0
 10641  00147E  0E03               	movlw	3
 10642  001480  0104               	movlb	4	; () banked
 10643  001482  1931               	xorwf	49,w,b	;volatile
 10644  001484  A4D8               	btfss	status,2,c
 10645  001486  D031               	goto	l1817
 10646                           
 10647                           ; BSR set to: 4
 10648                           ;usb_device.c: 2875: {
 10649                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10650  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10651  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10652  001490  0100               	movlb	0	; () banked
 10653  001492  AEDF               	btfss	indf2,7,c
 10654  001494  D01D               	goto	l1820
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;usb_device.c: 2877: {
 10658                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10659  001496  0104               	movlb	4	; () banked
 10660  001498  BF34               	btfsc	52,7,b	;volatile
 10661  00149A  D00B               	goto	l1819
 10662                           
 10663                           ; BSR set to: 4
 10664                           ;usb_device.c: 2881: {
 10665                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10666  00149C  5134               	movf	52,w,b	;volatile
 10667  00149E  0B0F               	andlw	15
 10668  0014A0  0100               	movlb	0	; () banked
 10669  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10670  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10671  0014A6  0D01               	mullw	1
 10672  0014A8  0ECE               	movlw	low _ep_data_out
 10673  0014AA  24F3               	addwf	prodl,w,c
 10674  0014AC  6ED9               	movwf	fsr2l,c
 10675  0014AE  0E02               	movlw	high _ep_data_out
 10676  0014B0  D00B               	goto	L8
 10677  0014B2                     l1819:
 10678                           
 10679                           ;usb_device.c: 2884: else
 10680                           ;usb_device.c: 2885: {
 10681                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10682                           
 10683                           ; BSR set to: 2
 10684  0014B2  0104               	movlb	4	; () banked
 10685  0014B4  5134               	movf	52,w,b	;volatile
 10686  0014B6  0B0F               	andlw	15
 10687  0014B8  0100               	movlb	0	; () banked
 10688  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10689  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10690  0014BE  0D01               	mullw	1
 10691  0014C0  0ED1               	movlw	low _ep_data_in
 10692  0014C2  24F3               	addwf	prodl,w,c
 10693  0014C4  6ED9               	movwf	fsr2l,c
 10694  0014C6  0E02               	movlw	high _ep_data_in
 10695  0014C8                     L8:
 10696  0014C8  20F4               	addwfc	prodh,w,c
 10697  0014CA  6EDA               	movwf	fsr2h,c
 10698  0014CC  0102               	movlb	2	; () banked
 10699  0014CE  82DF               	bsf	indf2,1,c
 10700  0014D0                     l1820:
 10701                           
 10702                           ;usb_device.c: 2887: }
 10703                           ;usb_device.c: 2888: }
 10704                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10705                           
 10706                           ; BSR set to: 2
 10707                           
 10708                           ; BSR set to: 2
 10709  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10710  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10711  0014D8  0E00               	movlw	0
 10712  0014DA  84DB               	bsf	plusw2,2,c
 10713                           
 10714                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10715  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10716  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10717  0014E4  0E00               	movlw	0
 10718  0014E6  8EDB               	bsf	plusw2,7,c
 10719                           
 10720                           ;usb_device.c: 2893: }
 10721  0014E8  0012               	return	
 10722  0014EA                     l1817:
 10723                           
 10724                           ;usb_device.c: 2894: else
 10725                           ;usb_device.c: 2895: {
 10726                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10727  0014EA  0E04               	movlw	4
 10728  0014EC  0100               	movlb	0	; () banked
 10729  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10733  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10734  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10735  0014F8  AEDF               	btfss	indf2,7,c
 10736  0014FA  D01B               	goto	l1822
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;usb_device.c: 2902: {
 10740                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10741  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10742  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10743  001504  0E7F               	movlw	127
 10744  001506  16DF               	andwf	indf2,f,c
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10748  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10749  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10750  001510  0E00               	movlw	0
 10751  001512  8CDB               	bsf	plusw2,6,c
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10755  001514  0E00               	movlw	0
 10756  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10757  001518  0E05               	movlw	5
 10758  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10759  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10760  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10761  001524  0E00               	movlw	0
 10762  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10763  001528  0E02               	movlw	2
 10764  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10765  00152C  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10766                           
 10767                           ;usb_device.c: 2908: }
 10768  001530  D006               	goto	l1823
 10769  001532                     l1822:
 10770                           
 10771                           ;usb_device.c: 2909: else
 10772                           ;usb_device.c: 2910: {
 10773                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10774  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10775  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10776  00153A  0E00               	movlw	0
 10777  00153C  8CDB               	bsf	plusw2,6,c
 10778  00153E                     l1823:
 10779                           
 10780                           ;usb_device.c: 2913: }
 10781                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10782  00153E  0E04               	movlw	4
 10783  001540  0100               	movlb	0	; () banked
 10784  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10788  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10789  001546  D006               	goto	u10260
 10790                           
 10791                           ; BSR set to: 0
 10792  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10793  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10794  001550  AEDF               	btfss	indf2,7,c
 10795  001552  D033               	goto	l1824
 10796  001554                     u10260:
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;usb_device.c: 2924: {
 10800                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10801  001554  0104               	movlb	4	; () banked
 10802  001556  BF34               	btfsc	52,7,b	;volatile
 10803  001558  D00B               	goto	l1827
 10804                           
 10805                           ; BSR set to: 4
 10806                           ;usb_device.c: 2926: {
 10807                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10808  00155A  5134               	movf	52,w,b	;volatile
 10809  00155C  0B0F               	andlw	15
 10810  00155E  0100               	movlb	0	; () banked
 10811  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10812  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10813  001564  0D01               	mullw	1
 10814  001566  0ECE               	movlw	low _ep_data_out
 10815  001568  24F3               	addwf	prodl,w,c
 10816  00156A  6ED9               	movwf	fsr2l,c
 10817  00156C  0E02               	movlw	high _ep_data_out
 10818  00156E  D00B               	goto	L9
 10819  001570                     l1827:
 10820                           
 10821                           ;usb_device.c: 2929: else
 10822                           ;usb_device.c: 2930: {
 10823                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10824                           
 10825                           ; BSR set to: 2
 10826  001570  0104               	movlb	4	; () banked
 10827  001572  5134               	movf	52,w,b	;volatile
 10828  001574  0B0F               	andlw	15
 10829  001576  0100               	movlb	0	; () banked
 10830  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10831  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10832  00157C  0D01               	mullw	1
 10833  00157E  0ED1               	movlw	low _ep_data_in
 10834  001580  24F3               	addwf	prodl,w,c
 10835  001582  6ED9               	movwf	fsr2l,c
 10836  001584  0E02               	movlw	high _ep_data_in
 10837  001586                     L9:
 10838  001586  20F4               	addwfc	prodh,w,c
 10839  001588  6EDA               	movwf	fsr2h,c
 10840  00158A  0102               	movlb	2	; () banked
 10841  00158C  92DF               	bcf	indf2,1,c
 10842                           
 10843                           ; BSR set to: 2
 10844                           ;usb_device.c: 2932: }
 10845                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10846                           
 10847                           ; BSR set to: 2
 10848  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10849  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10850  001596  0E3B               	movlw	59
 10851  001598  16DF               	andwf	indf2,f,c
 10852                           
 10853                           ; BSR set to: 2
 10854                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10855  00159A  0E00               	movlw	0
 10856  00159C  0100               	movlb	0	; () banked
 10857  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10858  0015A0  0E05               	movlw	5
 10859  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10860  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10861  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10862  0015AC  0E00               	movlw	0
 10863  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10864  0015B0  0E02               	movlw	2
 10865  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10866  0015B4  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10867                           
 10868                           ;usb_device.c: 2938: }
 10869  0015B8  D006               	goto	l1829
 10870  0015BA                     l1824:
 10871                           
 10872                           ;usb_device.c: 2939: else
 10873                           ;usb_device.c: 2940: {
 10874                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10875  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10876  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10877  0015C2  0E3B               	movlw	59
 10878  0015C4  16DF               	andwf	indf2,f,c
 10879  0015C6                     l1829:
 10880                           
 10881                           ;usb_device.c: 2943: }
 10882                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10883  0015C6  0104               	movlb	4	; () banked
 10884  0015C8  5134               	movf	52,w,b	;volatile
 10885  0015CA  0B0F               	andlw	15
 10886  0015CC  0100               	movlb	0	; () banked
 10887  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10888  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10889  0015D2  0D01               	mullw	1
 10890  0015D4  0E26               	movlw	38
 10891  0015D6  24F3               	addwf	prodl,w,c
 10892  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 10893  0015DA  0E0F               	movlw	15
 10894  0015DC  20F4               	addwfc	prodh,w,c
 10895  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 10899  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 10900  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 10901  0015E8  0EFE               	movlw	254
 10902  0015EA  16DF               	andwf	indf2,f,c
 10903                           
 10904                           ; BSR set to: 0
 10905  0015EC  0012               	return	
 10906  0015EE                     __end_of_USBStdFeatureReqHandler:
 10907                           	opt stack 0
 10908                           tosu	equ	0xFFF
 10909                           tosh	equ	0xFFE
 10910                           tosl	equ	0xFFD
 10911                           pclath	equ	0xFFA
 10912                           tblptru	equ	0xFF8
 10913                           tblptrh	equ	0xFF7
 10914                           tblptrl	equ	0xFF6
 10915                           tablat	equ	0xFF5
 10916                           prodh	equ	0xFF4
 10917                           prodl	equ	0xFF3
 10918                           intcon	equ	0xFF2
 10919                           intcon2	equ	0xFF1
 10920                           intcon3	equ	0xFF0
 10921                           indf0	equ	0xFEF
 10922                           postinc0	equ	0xFEE
 10923                           plusw0	equ	0xFEB
 10924                           fsr0h	equ	0xFEA
 10925                           fsr0l	equ	0xFE9
 10926                           wreg	equ	0xFE8
 10927                           postinc1	equ	0xFE6
 10928                           postdec1	equ	0xFE5
 10929                           plusw1	equ	0xFE3
 10930                           fsr1h	equ	0xFE2
 10931                           fsr1l	equ	0xFE1
 10932                           indf2	equ	0xFDF
 10933                           postinc2	equ	0xFDE
 10934                           postdec2	equ	0xFDD
 10935                           plusw2	equ	0xFDB
 10936                           fsr2h	equ	0xFDA
 10937                           fsr2l	equ	0xFD9
 10938                           status	equ	0xFD8
 10939                           
 10940 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10941 ;; Defined at:
 10942 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  event           2   41[BANK0 ] enum E8346
 10945 ;;  pdata           2   43[BANK0 ] PTR void 
 10946 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 10947 ;;  size            2   45[BANK0 ] unsigned int 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      unsigned char 
 10952 ;; Registers used:
 10953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10959 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;Total ram usage:        8 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:   14
 10966 ;; This function calls:
 10967 ;;		_CDCInitEP
 10968 ;;		_USBCheckCDCRequest
 10969 ;; This function is called by:
 10970 ;;		_USBDeviceTasks
 10971 ;;		_USBStdSetCfgHandler
 10972 ;;		_USBSuspend
 10973 ;;		_USBWakeFromSuspend
 10974 ;;		_USBCtrlTrfSetupHandler
 10975 ;;		_USBCheckStdRequest
 10976 ;;		_USBStdFeatureReqHandler
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text44
 10981  004E62                     __ptext44:
 10982                           	opt stack 0
 10983  004E62                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10984                           	opt stack 12
 10985                           
 10986                           ;usb_device_mgr.c: 106: switch( (int) event )
 10987                           
 10988                           ;incstack = 0
 10989  004E62  D006               	goto	l1983
 10990  004E64                     
 10991                           ;usb_device_mgr.c: 134: CDCInitEP();
 10992  004E64  EC2E  F026         	call	_CDCInitEP	;wreg free
 10993                           
 10994                           ;usb_device_mgr.c: 142: break;
 10995                           
 10996                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 10997                           
 10998                           ;usb_device_mgr.c: 139: break;
 10999  004E68  0012               	return	
 11000  004E6A                     
 11001                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11002  004E6A  ECD8  F01F         	call	_USBCheckCDCRequest	;wreg free
 11003                           
 11004                           ;usb_device_mgr.c: 163: }
 11005                           
 11006                           ;usb_device_mgr.c: 162: break;
 11007                           
 11008                           ;usb_device_mgr.c: 161: default:
 11009                           
 11010                           ;usb_device_mgr.c: 159: break;
 11011                           
 11012                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11013                           
 11014                           ;usb_device_mgr.c: 156: break;
 11015                           
 11016                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11017                           
 11018                           ;usb_device_mgr.c: 153: break;
 11019  004E6E  0012               	return	
 11020  004E70                     l1983:
 11021  004E70  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11022  004E74  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11023                           
 11024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11025                           ; Switch size 1, requested type "space"
 11026                           ; Number of cases is 2, Range of values is 0 to 127
 11027                           ; switch strategies available:
 11028                           ; Name         Instructions Cycles
 11029                           ; simple_byte            7     4 (average)
 11030                           ;	Chosen strategy is simple_byte
 11031  004E78  0100               	movlb	0	; () banked
 11032  004E7A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11033  004E7C  0A00               	xorlw	0	; case 0
 11034  004E7E  B4D8               	btfsc	status,2,c
 11035  004E80  D004               	goto	l14367
 11036  004E82  0A7F               	xorlw	127	; case 127
 11037  004E84  A4D8               	btfss	status,2,c
 11038  004E86  0012               	return	
 11039  004E88  D018               	goto	l14369
 11040  004E8A                     l14367:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ; Switch size 1, requested type "space"
 11044                           ; Number of cases is 8, Range of values is 1 to 117
 11045                           ; switch strategies available:
 11046                           ; Name         Instructions Cycles
 11047                           ; simple_byte           25    13 (average)
 11048                           ;	Chosen strategy is simple_byte
 11049  004E8A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11050  004E8C  0A01               	xorlw	1	; case 1
 11051  004E8E  B4D8               	btfsc	status,2,c
 11052  004E90  D7E9               	goto	l1989
 11053  004E92  0A03               	xorlw	3	; case 2
 11054  004E94  B4D8               	btfsc	status,2,c
 11055  004E96  0012               	return	
 11056  004E98  0A01               	xorlw	1	; case 3
 11057  004E9A  B4D8               	btfsc	status,2,c
 11058  004E9C  D7E6               	goto	l1991
 11059  004E9E  0A06               	xorlw	6	; case 5
 11060  004EA0  B4D8               	btfsc	status,2,c
 11061  004EA2  0012               	return	
 11062  004EA4  0A77               	xorlw	119	; case 114
 11063  004EA6  B4D8               	btfsc	status,2,c
 11064  004EA8  0012               	return	
 11065  004EAA  0A01               	xorlw	1	; case 115
 11066  004EAC  B4D8               	btfsc	status,2,c
 11067  004EAE  0012               	return	
 11068  004EB0  0A07               	xorlw	7	; case 116
 11069  004EB2  B4D8               	btfsc	status,2,c
 11070  004EB4  0012               	return	
 11071  004EB6  0A01               	xorlw	1	; case 117
 11072  004EB8  0012               	return	
 11073  004EBA                     l14369:
 11074                           
 11075                           ; BSR set to: 0
 11076                           ; Switch size 1, requested type "space"
 11077                           ; Number of cases is 1, Range of values is 255 to 255
 11078                           ; switch strategies available:
 11079                           ; Name         Instructions Cycles
 11080                           ; simple_byte            4     3 (average)
 11081                           ;	Chosen strategy is simple_byte
 11082  004EBA  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11083  004EBC  0AFF               	xorlw	255	; case 255
 11084  004EBE  0012               	return	
 11085  004EC0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11086                           	opt stack 0
 11087                           tosu	equ	0xFFF
 11088                           tosh	equ	0xFFE
 11089                           tosl	equ	0xFFD
 11090                           pclath	equ	0xFFA
 11091                           tblptru	equ	0xFF8
 11092                           tblptrh	equ	0xFF7
 11093                           tblptrl	equ	0xFF6
 11094                           tablat	equ	0xFF5
 11095                           prodh	equ	0xFF4
 11096                           prodl	equ	0xFF3
 11097                           intcon	equ	0xFF2
 11098                           intcon2	equ	0xFF1
 11099                           intcon3	equ	0xFF0
 11100                           indf0	equ	0xFEF
 11101                           postinc0	equ	0xFEE
 11102                           plusw0	equ	0xFEB
 11103                           fsr0h	equ	0xFEA
 11104                           fsr0l	equ	0xFE9
 11105                           wreg	equ	0xFE8
 11106                           postinc1	equ	0xFE6
 11107                           postdec1	equ	0xFE5
 11108                           plusw1	equ	0xFE3
 11109                           fsr1h	equ	0xFE2
 11110                           fsr1l	equ	0xFE1
 11111                           indf2	equ	0xFDF
 11112                           postinc2	equ	0xFDE
 11113                           postdec2	equ	0xFDD
 11114                           plusw2	equ	0xFDB
 11115                           fsr2h	equ	0xFDA
 11116                           fsr2l	equ	0xFD9
 11117                           status	equ	0xFD8
 11118                           
 11119 ;; *************** function _USBCheckCDCRequest *****************
 11120 ;; Defined at:
 11121 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;		None
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;		None
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg, status,2, status,0
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;Total ram usage:        0 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:   11
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text45
 11150  003FB0                     __ptext45:
 11151                           	opt stack 0
 11152  003FB0                     _USBCheckCDCRequest:
 11153                           	opt stack 14
 11154                           
 11155                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11156                           
 11157                           ;incstack = 0
 11158  003FB0  0104               	movlb	4	; () banked
 11159  003FB2  5130               	movf	48,w,b	;volatile
 11160  003FB4  0B1F               	andlw	31
 11161  003FB6  06E8               	decf	wreg,f,c
 11162  003FB8  A4D8               	btfss	status,2,c
 11163  003FBA  0012               	return	
 11164                           
 11165                           ; BSR set to: 4
 11166                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11167                           
 11168                           ; BSR set to: 4
 11169                           
 11170                           ; BSR set to: 4
 11171  003FBC  3930               	swapf	48,w,b	;volatile
 11172  003FBE  32E8               	rrcf	wreg,f,c
 11173  003FC0  0B03               	andlw	3
 11174  003FC2  06E8               	decf	wreg,f,c
 11175  003FC4  A4D8               	btfss	status,2,c
 11176  003FC6  0012               	return	
 11177                           
 11178                           ; BSR set to: 4
 11179                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11180                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11181                           
 11182                           ; BSR set to: 4
 11183                           
 11184                           ; BSR set to: 4
 11185  003FC8  5134               	movf	52,w,b	;volatile
 11186  003FCA  B4D8               	btfsc	status,2,c
 11187  003FCC  D037               	goto	l1885
 11188                           
 11189                           ; BSR set to: 4
 11190  003FCE  0534               	decf	52,w,b	;volatile
 11191  003FD0  A4D8               	btfss	status,2,c
 11192  003FD2  0012               	return	
 11193  003FD4  D033               	goto	l1885
 11194  003FD6                     
 11195                           ; BSR set to: 4
 11196                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11197                           
 11198                           ; BSR set to: 4
 11199  003FD6  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11200  003FD8  0100               	movlb	0	; () banked
 11201  003FDA  6FAC               	movwf	_inPipes& (0+255),b
 11202  003FDC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11203  003FDE  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11207  003FE0  0E00               	movlw	0
 11208  003FE2  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11209  003FE4  0E08               	movlw	8
 11210  003FE6  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11214  003FE8  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11218  003FEA  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11219                           
 11220                           ;usb_device_cdc.c: 178: break;
 11221  003FEC  0012               	return	
 11222  003FEE                     
 11223                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11224                           
 11225                           ; BSR set to: 0
 11226  003FEE  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11227  003FF0  0100               	movlb	0	; () banked
 11228  003FF2  6FAC               	movwf	_inPipes& (0+255),b
 11229  003FF4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11230  003FF6  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11234  003FF8  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11235                           
 11236                           ;usb_device_cdc.c: 183: break;
 11237  003FFA  0012               	return	
 11238  003FFC                     l1889:
 11239                           
 11240                           ; BSR set to: 4
 11241                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11242  003FFC  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11243  004000  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11244                           
 11245                           ; BSR set to: 4
 11246                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11247  004004  0E80               	movlw	low _line_coding
 11248  004006  0101               	movlb	1	; () banked
 11249  004008  6FC9               	movwf	_outPipes& (0+255),b
 11250  00400A  0E03               	movlw	high _line_coding
 11251  00400C  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11252                           
 11253                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11254  00400E  0E00               	movlw	0
 11255  004010  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11256  004012  0E00               	movlw	0
 11257  004014  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11258                           
 11259                           ; BSR set to: 1
 11260                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11261  004016  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11262                           
 11263                           ;usb_device_cdc.c: 192: break;
 11264  004018  0012               	return	
 11265  00401A                     
 11266                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11267                           
 11268                           ; BSR set to: 1
 11269  00401A  0E80               	movlw	low _line_coding
 11270  00401C  0100               	movlb	0	; () banked
 11271  00401E  6FAC               	movwf	_inPipes& (0+255),b
 11272  004020  0E03               	movlw	high _line_coding
 11273  004022  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11274                           
 11275                           ; BSR set to: 0
 11276  004024  0E00               	movlw	0
 11277  004026  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11278  004028  0E07               	movlw	7
 11279  00402A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11280                           
 11281                           ; BSR set to: 0
 11282  00402C  0EC1               	movlw	193
 11283  00402E  6FAF               	movwf	(_inPipes+3)& (0+255),b
 11284                           
 11285                           ;usb_device_cdc.c: 199: break;
 11286  004030  0012               	return	
 11287  004032                     l1891:
 11288                           
 11289                           ; BSR set to: 4
 11290                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11291  004032  C432 F1E2          	movff	1074,_control_signal_bitmap	;volatile
 11292                           
 11293                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11294  004036  0100               	movlb	0	; () banked
 11295  004038  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;usb_device_cdc.c: 261: }
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;usb_device_cdc.c: 260: break;
 11302                           
 11303                           ;usb_device_cdc.c: 259: default:
 11304                           
 11305                           ;usb_device_cdc.c: 235: break;
 11306  00403A  0012               	return	
 11307  00403C                     l1885:
 11308                           
 11309                           ; BSR set to: 0
 11310  00403C  0104               	movlb	4	; () banked
 11311  00403E  5131               	movf	49,w,b	;volatile
 11312                           
 11313                           ; Switch size 1, requested type "space"
 11314                           ; Number of cases is 5, Range of values is 0 to 34
 11315                           ; switch strategies available:
 11316                           ; Name         Instructions Cycles
 11317                           ; simple_byte           16     9 (average)
 11318                           ;	Chosen strategy is simple_byte
 11319  004040  0A00               	xorlw	0	; case 0
 11320  004042  B4D8               	btfsc	status,2,c
 11321  004044  D7C8               	goto	l1886
 11322  004046  0A01               	xorlw	1	; case 1
 11323  004048  B4D8               	btfsc	status,2,c
 11324  00404A  D7D1               	goto	l1888
 11325  00404C  0A21               	xorlw	33	; case 32
 11326  00404E  B4D8               	btfsc	status,2,c
 11327  004050  D7D5               	goto	l1889
 11328  004052  0A01               	xorlw	1	; case 33
 11329  004054  B4D8               	btfsc	status,2,c
 11330  004056  D7E1               	goto	l1890
 11331  004058  0A03               	xorlw	3	; case 34
 11332  00405A  A4D8               	btfss	status,2,c
 11333  00405C  0012               	return	
 11334  00405E  D7E9               	goto	l1891
 11335  004060                     __end_of_USBCheckCDCRequest:
 11336                           	opt stack 0
 11337                           tosu	equ	0xFFF
 11338                           tosh	equ	0xFFE
 11339                           tosl	equ	0xFFD
 11340                           pclath	equ	0xFFA
 11341                           tblptru	equ	0xFF8
 11342                           tblptrh	equ	0xFF7
 11343                           tblptrl	equ	0xFF6
 11344                           tablat	equ	0xFF5
 11345                           prodh	equ	0xFF4
 11346                           prodl	equ	0xFF3
 11347                           intcon	equ	0xFF2
 11348                           intcon2	equ	0xFF1
 11349                           intcon3	equ	0xFF0
 11350                           indf0	equ	0xFEF
 11351                           postinc0	equ	0xFEE
 11352                           plusw0	equ	0xFEB
 11353                           fsr0h	equ	0xFEA
 11354                           fsr0l	equ	0xFE9
 11355                           wreg	equ	0xFE8
 11356                           postinc1	equ	0xFE6
 11357                           postdec1	equ	0xFE5
 11358                           plusw1	equ	0xFE3
 11359                           fsr1h	equ	0xFE2
 11360                           fsr1l	equ	0xFE1
 11361                           indf2	equ	0xFDF
 11362                           postinc2	equ	0xFDE
 11363                           postdec2	equ	0xFDD
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _CDCInitEP *****************
 11370 ;; Defined at:
 11371 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:   13
 11392 ;; This function calls:
 11393 ;;		_USBEnableEndpoint
 11394 ;;		_USBTransferOnePacket
 11395 ;; This function is called by:
 11396 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text46
 11401  004C5C                     __ptext46:
 11402                           	opt stack 0
 11403  004C5C                     _CDCInitEP:
 11404                           	opt stack 12
 11405                           
 11406                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11407                           
 11408                           ;incstack = 0
 11409  004C5C  0E80               	movlw	128
 11410  004C5E  0103               	movlb	3	; () banked
 11411  004C60  6F80               	movwf	_line_coding& (0+255),b
 11412  004C62  0E25               	movlw	37
 11413  004C64  6F81               	movwf	(_line_coding+1)& (0+255),b
 11414  004C66  0E00               	movlw	0
 11415  004C68  6F82               	movwf	(_line_coding+2)& (0+255),b
 11416  004C6A  0E00               	movlw	0
 11417  004C6C  6F83               	movwf	(_line_coding+3)& (0+255),b
 11418                           
 11419                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11420  004C6E  0E00               	movlw	0
 11421  004C70  6F84               	movwf	(_line_coding+4)& (0+255),b
 11422                           
 11423                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11424  004C72  0E00               	movlw	0
 11425  004C74  6F85               	movwf	(_line_coding+5)& (0+255),b
 11426                           
 11427                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11428  004C76  0E08               	movlw	8
 11429  004C78  6F86               	movwf	(_line_coding+6)& (0+255),b
 11430                           
 11431                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11432  004C7A  0E00               	movlw	0
 11433  004C7C  0100               	movlb	0	; () banked
 11434  004C7E  6FC2               	movwf	_cdc_rx_len& (0+255),b
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11438  004C80  0E1A               	movlw	26
 11439  004C82  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11440  004C84  0E01               	movlw	1
 11441  004C86  ECD9  F02A         	call	_USBEnableEndpoint
 11442                           
 11443                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11444  004C8A  0E1E               	movlw	30
 11445  004C8C  0100               	movlb	0	; () banked
 11446  004C8E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11447  004C90  0E02               	movlw	2
 11448  004C92  ECD9  F02A         	call	_USBEnableEndpoint
 11449                           
 11450                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11451  004C96  0E00               	movlw	0
 11452  004C98  0100               	movlb	0	; () banked
 11453  004C9A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11454  004C9C  0E54               	movlw	low _cdc_data_rx
 11455  004C9E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11456  004CA0  0E04               	movlw	high _cdc_data_rx
 11457  004CA2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11458  004CA4  0E40               	movlw	64
 11459  004CA6  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11460  004CA8  0E02               	movlw	2
 11461  004CAA  ECC2  F01E         	call	_USBTransferOnePacket
 11462  004CAE  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11463  004CB2  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11464                           
 11465                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11466  004CB6  0E00               	movlw	0
 11467  004CB8  0101               	movlb	1	; () banked
 11468  004CBA  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11469  004CBC  0E00               	movlw	0
 11470  004CBE  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11471                           
 11472                           ; BSR set to: 1
 11473                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11474  004CC0  0E00               	movlw	0
 11475  004CC2  0100               	movlb	0	; () banked
 11476  004CC4  6FC1               	movwf	_cdc_trf_state& (0+255),b
 11477                           
 11478                           ; BSR set to: 0
 11479  004CC6  0012               	return		;funcret
 11480  004CC8                     __end_of_CDCInitEP:
 11481                           	opt stack 0
 11482                           tosu	equ	0xFFF
 11483                           tosh	equ	0xFFE
 11484                           tosl	equ	0xFFD
 11485                           pclath	equ	0xFFA
 11486                           tblptru	equ	0xFF8
 11487                           tblptrh	equ	0xFF7
 11488                           tblptrl	equ	0xFF6
 11489                           tablat	equ	0xFF5
 11490                           prodh	equ	0xFF4
 11491                           prodl	equ	0xFF3
 11492                           intcon	equ	0xFF2
 11493                           intcon2	equ	0xFF1
 11494                           intcon3	equ	0xFF0
 11495                           indf0	equ	0xFEF
 11496                           postinc0	equ	0xFEE
 11497                           plusw0	equ	0xFEB
 11498                           fsr0h	equ	0xFEA
 11499                           fsr0l	equ	0xFE9
 11500                           wreg	equ	0xFE8
 11501                           postinc1	equ	0xFE6
 11502                           postdec1	equ	0xFE5
 11503                           plusw1	equ	0xFE3
 11504                           fsr1h	equ	0xFE2
 11505                           fsr1l	equ	0xFE1
 11506                           indf2	equ	0xFDF
 11507                           postinc2	equ	0xFDE
 11508                           postdec2	equ	0xFDD
 11509                           plusw2	equ	0xFDB
 11510                           fsr2h	equ	0xFDA
 11511                           fsr2l	equ	0xFD9
 11512                           status	equ	0xFD8
 11513                           
 11514 ;; *************** function _USBEnableEndpoint *****************
 11515 ;; Defined at:
 11516 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  ep              1    wreg     unsigned char 
 11519 ;;  options         1   37[BANK0 ] unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  ep              1   40[BANK0 ] unsigned char 
 11522 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11523 ;;		 -> UEP0(1), 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11533 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11536 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11537 ;;Total ram usage:        4 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; Hardware stack levels required when called:   12
 11540 ;; This function calls:
 11541 ;;		_USBConfigureEndpoint
 11542 ;; This function is called by:
 11543 ;;		_CDCInitEP
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           	psect	text47
 11548  0055B2                     __ptext47:
 11549                           	opt stack 0
 11550  0055B2                     _USBEnableEndpoint:
 11551                           	opt stack 12
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;incstack = 0
 11555                           ;USBEnableEndpoint@ep stored from wreg
 11556  0055B2  0100               	movlb	0	; () banked
 11557  0055B4  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11558                           
 11559                           ;usb_device.c: 898: unsigned char* p;
 11560                           ;usb_device.c: 902: if(options & 0x04)
 11561  0055B6  0100               	movlb	0	; () banked
 11562  0055B8  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11563  0055BA  D005               	goto	l1626
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;usb_device.c: 903: {
 11567                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11568  0055BC  0E00               	movlw	0
 11569  0055BE  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11570  0055C0  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11571  0055C2  EC73  F022         	call	_USBConfigureEndpoint
 11572  0055C6                     l1626:
 11573                           
 11574                           ;usb_device.c: 905: }
 11575                           ;usb_device.c: 906: if(options & 0x02)
 11576  0055C6  0100               	movlb	0	; () banked
 11577  0055C8  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11578  0055CA  D005               	goto	l1627
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;usb_device.c: 907: {
 11582                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11583  0055CC  0E01               	movlw	1
 11584  0055CE  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11585  0055D0  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11586  0055D2  EC73  F022         	call	_USBConfigureEndpoint
 11587  0055D6                     l1627:
 11588                           
 11589                           ;usb_device.c: 909: }
 11590                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11591  0055D6  0100               	movlb	0	; () banked
 11592  0055D8  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11593  0055DA  0D01               	mullw	1
 11594  0055DC  0E26               	movlw	38
 11595  0055DE  24F3               	addwf	prodl,w,c
 11596  0055E0  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11597  0055E2  0E0F               	movlw	15
 11598  0055E4  20F4               	addwfc	prodh,w,c
 11599  0055E6  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;usb_device.c: 919: *p = options;
 11603  0055E8  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11604  0055EC  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11605  0055F0  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11606                           
 11607                           ; BSR set to: 0
 11608  0055F4  0012               	return		;funcret
 11609  0055F6                     __end_of_USBEnableEndpoint:
 11610                           	opt stack 0
 11611                           tosu	equ	0xFFF
 11612                           tosh	equ	0xFFE
 11613                           tosl	equ	0xFFD
 11614                           pclath	equ	0xFFA
 11615                           tblptru	equ	0xFF8
 11616                           tblptrh	equ	0xFF7
 11617                           tblptrl	equ	0xFF6
 11618                           tablat	equ	0xFF5
 11619                           prodh	equ	0xFF4
 11620                           prodl	equ	0xFF3
 11621                           intcon	equ	0xFF2
 11622                           intcon2	equ	0xFF1
 11623                           intcon3	equ	0xFF0
 11624                           indf0	equ	0xFEF
 11625                           postinc0	equ	0xFEE
 11626                           plusw0	equ	0xFEB
 11627                           fsr0h	equ	0xFEA
 11628                           fsr0l	equ	0xFE9
 11629                           wreg	equ	0xFE8
 11630                           postinc1	equ	0xFE6
 11631                           postdec1	equ	0xFE5
 11632                           plusw1	equ	0xFE3
 11633                           fsr1h	equ	0xFE2
 11634                           fsr1l	equ	0xFE1
 11635                           indf2	equ	0xFDF
 11636                           postinc2	equ	0xFDE
 11637                           postdec2	equ	0xFDD
 11638                           plusw2	equ	0xFDB
 11639                           fsr2h	equ	0xFDA
 11640                           fsr2l	equ	0xFD9
 11641                           status	equ	0xFD8
 11642                           
 11643 ;; *************** function _USBConfigureEndpoint *****************
 11644 ;; Defined at:
 11645 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  EPNum           1    wreg     unsigned char 
 11648 ;;  direction       1   29[BANK0 ] unsigned char 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11651 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11652 ;;		 -> BDT(48), 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      void 
 11655 ;; Registers used:
 11656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;Total ram usage:        8 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:   11
 11669 ;; This function calls:
 11670 ;;		Nothing
 11671 ;; This function is called by:
 11672 ;;		_USBEnableEndpoint
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	text48
 11677  0044E6                     __ptext48:
 11678                           	opt stack 0
 11679  0044E6                     _USBConfigureEndpoint:
 11680                           	opt stack 12
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;incstack = 0
 11684                           ;USBConfigureEndpoint@EPNum stored from wreg
 11685  0044E6  0100               	movlb	0	; () banked
 11686  0044E8  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11687                           
 11688                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11689                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11690  0044EA  0E00               	movlw	0
 11691  0044EC  0100               	movlb	0	; () banked
 11692  0044EE  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11693  0044F0  0E04               	movlw	4
 11694  0044F2  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11698  0044F4  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11699  0044F6  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11700  0044F8  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11701  0044FA  90D8               	bcf	status,0,c
 11702  0044FC  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11703  0044FE  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11704  004500  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11705  004502  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11706  004504  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11707  004506  90D8               	bcf	status,0,c
 11708  004508  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11709  00450A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11710  00450C  90D8               	bcf	status,0,c
 11711  00450E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11712  004510  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11713  004512  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11714  004514  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11715  004516  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11716  004518  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11717  00451A  90D8               	bcf	status,0,c
 11718  00451C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11719  00451E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11720  004520  90D8               	bcf	status,0,c
 11721  004522  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11722  004524  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11723  004526  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11724  004528  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11725  00452A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11726  00452C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11730  00452E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11731  004532  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11732  004536  9EDF               	bcf	indf2,7,c
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;usb_device.c: 1575: if(direction == 0)
 11736  004538  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11737  00453A  A4D8               	btfss	status,2,c
 11738  00453C  D007               	goto	l1662
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;usb_device.c: 1576: {
 11742                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11743  00453E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11744  004540  0D02               	mullw	2
 11745  004542  0E0E               	movlw	low _pBDTEntryOut
 11746  004544  24F3               	addwf	prodl,w,c
 11747  004546  6ED9               	movwf	fsr2l,c
 11748  004548  0E03               	movlw	high _pBDTEntryOut
 11749  00454A  D006               	goto	L10
 11750  00454C                     l1662:
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;usb_device.c: 1579: else
 11754                           ;usb_device.c: 1580: {
 11755                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11756                           
 11757                           ; BSR set to: 0
 11758  00454C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11759  00454E  0D02               	mullw	2
 11760  004550  0EB2               	movlw	low _pBDTEntryIn
 11761  004552  24F3               	addwf	prodl,w,c
 11762  004554  6ED9               	movwf	fsr2l,c
 11763  004556  0E00               	movlw	high _pBDTEntryIn
 11764  004558                     L10:
 11765  004558  20F4               	addwfc	prodh,w,c
 11766  00455A  6EDA               	movwf	fsr2h,c
 11767  00455C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11768  004560  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;usb_device.c: 1582: }
 11772                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11773                           
 11774                           ; BSR set to: 0
 11775  004564  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11776  004568  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11777  00456C  9CDF               	bcf	indf2,6,c
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11781  00456E  EE20 F004          	lfsr	2,4
 11782  004572  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11783  004574  26D9               	addwf	fsr2l,f,c
 11784  004576  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11785  004578  22DA               	addwfc	fsr2h,f,c
 11786  00457A  8CDF               	bsf	indf2,6,c
 11787                           
 11788                           ; BSR set to: 0
 11789  00457C  0012               	return		;funcret
 11790  00457E                     __end_of_USBConfigureEndpoint:
 11791                           	opt stack 0
 11792                           tosu	equ	0xFFF
 11793                           tosh	equ	0xFFE
 11794                           tosl	equ	0xFFD
 11795                           pclath	equ	0xFFA
 11796                           tblptru	equ	0xFF8
 11797                           tblptrh	equ	0xFF7
 11798                           tblptrl	equ	0xFF6
 11799                           tablat	equ	0xFF5
 11800                           prodh	equ	0xFF4
 11801                           prodl	equ	0xFF3
 11802                           intcon	equ	0xFF2
 11803                           intcon2	equ	0xFF1
 11804                           intcon3	equ	0xFF0
 11805                           indf0	equ	0xFEF
 11806                           postinc0	equ	0xFEE
 11807                           plusw0	equ	0xFEB
 11808                           fsr0h	equ	0xFEA
 11809                           fsr0l	equ	0xFE9
 11810                           wreg	equ	0xFE8
 11811                           postinc1	equ	0xFE6
 11812                           postdec1	equ	0xFE5
 11813                           plusw1	equ	0xFE3
 11814                           fsr1h	equ	0xFE2
 11815                           fsr1l	equ	0xFE1
 11816                           indf2	equ	0xFDF
 11817                           postinc2	equ	0xFDE
 11818                           postdec2	equ	0xFDD
 11819                           plusw2	equ	0xFDB
 11820                           fsr2h	equ	0xFDA
 11821                           fsr2l	equ	0xFD9
 11822                           status	equ	0xFD8
 11823                           
 11824 ;; *************** function _USBCtrlTrfOutHandler *****************
 11825 ;; Defined at:
 11826 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;		None
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11844 ;;Total ram usage:        0 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:   13
 11847 ;; This function calls:
 11848 ;;		_USBCtrlTrfRxService
 11849 ;; This function is called by:
 11850 ;;		_USBCtrlEPService
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text49
 11855  004D34                     __ptext49:
 11856                           	opt stack 0
 11857  004D34                     _USBCtrlTrfOutHandler:
 11858                           	opt stack 12
 11859                           
 11860                           ;usb_device.c: 2557: if(controlTransferState == 2)
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;incstack = 0
 11864  004D34  0E02               	movlw	2
 11865  004D36  0100               	movlb	0	; () banked
 11866  004D38  19C9               	xorwf	_controlTransferState& (0+255),w,b
 11867  004D3A  A4D8               	btfss	status,2,c
 11868  004D3C  D003               	goto	l1768
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;usb_device.c: 2558: {
 11872                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 11873  004D3E  EC17  F015         	call	_USBCtrlTrfRxService	;wreg free
 11874                           
 11875                           ;usb_device.c: 2560: }
 11876  004D42  0012               	return	
 11877  004D44                     l1768:
 11878                           
 11879                           ;usb_device.c: 2561: else
 11880                           ;usb_device.c: 2562: {
 11881                           ;usb_device.c: 2565: controlTransferState = 0;
 11882  004D44  0E00               	movlw	0
 11883  004D46  0100               	movlb	0	; () banked
 11884  004D48  6FC9               	movwf	_controlTransferState& (0+255),b
 11885                           
 11886                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 11887  004D4A  0101               	movlb	1	; () banked
 11888  004D4C  51E5               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 11889  004D4E  A4D8               	btfss	status,2,c
 11890  004D50  D020               	goto	l1770
 11891                           
 11892                           ; BSR set to: 1
 11893                           ;usb_device.c: 2573: {
 11894                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 11895  004D52  0100               	movlb	0	; () banked
 11896  004D54  EE20 F001          	lfsr	2,1
 11897  004D58  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11898  004D5A  26D9               	addwf	fsr2l,f,c
 11899  004D5C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11900  004D5E  22DA               	addwfc	fsr2h,f,c
 11901  004D60  0E08               	movlw	8
 11902  004D62  6EDF               	movwf	indf2,c
 11903                           
 11904                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11905  004D64  EE20 F002          	lfsr	2,2
 11906  004D68  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11907  004D6A  26D9               	addwf	fsr2l,f,c
 11908  004D6C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11909  004D6E  22DA               	addwfc	fsr2h,f,c
 11910  004D70  0E30               	movlw	48
 11911  004D72  6EDE               	movwf	postinc2,c
 11912  004D74  0E04               	movlw	4
 11913  004D76  6EDD               	movwf	postdec2,c
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11917  004D78  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11918  004D7C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11919  004D80  0E0C               	movlw	12
 11920  004D82  6EDF               	movwf	indf2,c
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11924  004D84  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11925  004D88  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11926  004D8C  0E00               	movlw	0
 11927  004D8E  8EDB               	bsf	plusw2,7,c
 11928                           
 11929                           ;usb_device.c: 2578: }
 11930  004D90  0012               	return	
 11931  004D92                     l1770:
 11932                           
 11933                           ;usb_device.c: 2579: else
 11934                           ;usb_device.c: 2580: {
 11935                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 11936                           
 11937                           ; BSR set to: 0
 11938  004D92  0E00               	movlw	0
 11939  004D94  0101               	movlb	1	; () banked
 11940  004D96  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11941                           
 11942                           ; BSR set to: 1
 11943  004D98  0012               	return	
 11944  004D9A                     __end_of_USBCtrlTrfOutHandler:
 11945                           	opt stack 0
 11946                           tosu	equ	0xFFF
 11947                           tosh	equ	0xFFE
 11948                           tosl	equ	0xFFD
 11949                           pclath	equ	0xFFA
 11950                           tblptru	equ	0xFF8
 11951                           tblptrh	equ	0xFF7
 11952                           tblptrl	equ	0xFF6
 11953                           tablat	equ	0xFF5
 11954                           prodh	equ	0xFF4
 11955                           prodl	equ	0xFF3
 11956                           intcon	equ	0xFF2
 11957                           intcon2	equ	0xFF1
 11958                           intcon3	equ	0xFF0
 11959                           indf0	equ	0xFEF
 11960                           postinc0	equ	0xFEE
 11961                           plusw0	equ	0xFEB
 11962                           fsr0h	equ	0xFEA
 11963                           fsr0l	equ	0xFE9
 11964                           wreg	equ	0xFE8
 11965                           postinc1	equ	0xFE6
 11966                           postdec1	equ	0xFE5
 11967                           plusw1	equ	0xFE3
 11968                           fsr1h	equ	0xFE2
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           plusw2	equ	0xFDB
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _USBCtrlTrfRxService *****************
 11979 ;; Defined at:
 11980 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;		None
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 11985 ;;  i               1   29[BANK0 ] unsigned char 
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11999 ;;Total ram usage:        2 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:   12
 12002 ;; This function calls:
 12003 ;;		_USBCtrlEPAllowStatusStage
 12004 ;; This function is called by:
 12005 ;;		_USBCtrlTrfOutHandler
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text50
 12010  002A2E                     __ptext50:
 12011                           	opt stack 0
 12012  002A2E                     _USBCtrlTrfRxService:
 12013                           	opt stack 12
 12014                           
 12015                           ;usb_device.c: 1872: uint8_t byteToRead;
 12016                           ;usb_device.c: 1873: uint8_t i;
 12017                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12018                           
 12019                           ;incstack = 0
 12020  002A2E  0100               	movlb	0	; () banked
 12021  002A30  EE20 F001          	lfsr	2,1
 12022  002A34  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12023  002A36  26D9               	addwf	fsr2l,f,c
 12024  002A38  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12025  002A3A  22DA               	addwfc	fsr2h,f,c
 12026  002A3C  50DF               	movf	indf2,w,c
 12027  002A3E  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12031  002A40  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12032  002A42  0101               	movlb	1	; () banked
 12033  002A44  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12034  002A46  0E00               	movlw	0
 12035  002A48  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12036  002A4A  A0D8               	btfss	status,0,c
 12037                           
 12038                           ; BSR set to: 1
 12039                           ;usb_device.c: 1884: {
 12040                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12041  002A4C  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12042                           
 12043                           ; BSR set to: 1
 12044                           ;usb_device.c: 1886: }
 12045                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12046                           
 12047                           ; BSR set to: 1
 12048  002A50  0100               	movlb	0	; () banked
 12049  002A52  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12050  002A54  0101               	movlb	1	; () banked
 12051  002A56  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12052  002A58  0E00               	movlw	0
 12053  002A5A  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12054                           
 12055                           ; BSR set to: 1
 12056                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12057  002A5C  0E00               	movlw	0
 12058  002A5E  0100               	movlb	0	; () banked
 12059  002A60  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12060  002A62  D013               	goto	l1696
 12061  002A64                     
 12062                           ; BSR set to: 0
 12063                           ;usb_device.c: 1893: {
 12064                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12065                           
 12066                           ; BSR set to: 0
 12067  002A64  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12068  002A66  0D01               	mullw	1
 12069  002A68  0E38               	movlw	56
 12070  002A6A  24F3               	addwf	prodl,w,c
 12071  002A6C  6ED9               	movwf	fsr2l,c
 12072  002A6E  0E04               	movlw	4
 12073  002A70  20F4               	addwfc	prodh,w,c
 12074  002A72  6EDA               	movwf	fsr2h,c
 12075  002A74  C1C9  FFE1         	movff	_outPipes,fsr1l
 12076  002A78  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12077  002A7C  CFDF FFE7          	movff	indf2,indf1
 12078                           
 12079                           ; BSR set to: 0
 12080  002A80  0101               	movlb	1	; () banked
 12081  002A82  4BC9               	infsnz	_outPipes& (0+255),f,b
 12082  002A84  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12083                           
 12084                           ; BSR set to: 1
 12085  002A86  0100               	movlb	0	; () banked
 12086  002A88  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12087  002A8A                     l1696:
 12088                           
 12089                           ; BSR set to: 0
 12090                           
 12091                           ; BSR set to: 0
 12092  002A8A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12093  002A8C  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12094  002A8E  A0D8               	btfss	status,0,c
 12095  002A90  D7E9               	goto	l1697
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;usb_device.c: 1895: }
 12099                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12100                           
 12101                           ; BSR set to: 0
 12102  002A92  0101               	movlb	1	; () banked
 12103  002A94  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12104  002A96  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12105  002A98  B4D8               	btfsc	status,2,c
 12106  002A9A  D033               	goto	l1699
 12107                           
 12108                           ; BSR set to: 1
 12109                           ;usb_device.c: 1900: {
 12110                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12111  002A9C  0100               	movlb	0	; () banked
 12112  002A9E  EE20 F001          	lfsr	2,1
 12113  002AA2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12114  002AA4  26D9               	addwf	fsr2l,f,c
 12115  002AA6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12116  002AA8  22DA               	addwfc	fsr2h,f,c
 12117  002AAA  0E08               	movlw	8
 12118  002AAC  6EDF               	movwf	indf2,c
 12119                           
 12120                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12121  002AAE  EE20 F002          	lfsr	2,2
 12122  002AB2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12123  002AB4  26D9               	addwf	fsr2l,f,c
 12124  002AB6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12125  002AB8  22DA               	addwfc	fsr2h,f,c
 12126  002ABA  0E38               	movlw	56
 12127  002ABC  6EDE               	movwf	postinc2,c
 12128  002ABE  0E04               	movlw	4
 12129  002AC0  6EDD               	movwf	postdec2,c
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12133  002AC2  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12134  002AC6  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12135  002ACA  BCDF               	btfsc	indf2,6,c
 12136  002ACC  D00D               	goto	l1700
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;usb_device.c: 1904: {
 12140                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12141  002ACE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12142  002AD2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12143  002AD6  0E48               	movlw	72
 12144  002AD8  6EDF               	movwf	indf2,c
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12148  002ADA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12149  002ADE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12150  002AE2  0E00               	movlw	0
 12151  002AE4  8EDB               	bsf	plusw2,7,c
 12152                           
 12153                           ;usb_device.c: 1907: }
 12154  002AE6  0012               	return	
 12155  002AE8                     l1700:
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;usb_device.c: 1908: else
 12159                           ;usb_device.c: 1909: {
 12160                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12161                           
 12162                           ; BSR set to: 0
 12163  002AE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12164  002AEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12165  002AF0  0E08               	movlw	8
 12166  002AF2  6EDF               	movwf	indf2,c
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12170  002AF4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12171  002AF8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12172  002AFC  0E00               	movlw	0
 12173  002AFE  8EDB               	bsf	plusw2,7,c
 12174                           
 12175                           ; BSR set to: 0
 12176                           ;usb_device.c: 1912: }
 12177                           ;usb_device.c: 1913: }
 12178  002B00  0012               	return	
 12179  002B02                     l1699:
 12180                           
 12181                           ;usb_device.c: 1914: else
 12182                           ;usb_device.c: 1915: {
 12183                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12184                           
 12185                           ; BSR set to: 0
 12186  002B02  0100               	movlb	0	; () banked
 12187  002B04  EE20 F001          	lfsr	2,1
 12188  002B08  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12189  002B0A  26D9               	addwf	fsr2l,f,c
 12190  002B0C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12191  002B0E  22DA               	addwfc	fsr2h,f,c
 12192  002B10  0E08               	movlw	8
 12193  002B12  6EDF               	movwf	indf2,c
 12194                           
 12195                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12196  002B14  EE20 F002          	lfsr	2,2
 12197  002B18  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12198  002B1A  26D9               	addwf	fsr2l,f,c
 12199  002B1C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12200  002B1E  22DA               	addwfc	fsr2h,f,c
 12201  002B20  0E30               	movlw	48
 12202  002B22  6EDE               	movwf	postinc2,c
 12203  002B24  0E04               	movlw	4
 12204  002B26  6EDD               	movwf	postdec2,c
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12208  002B28  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12209  002B2C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12210  002B30  0E04               	movlw	4
 12211  002B32  6EDF               	movwf	indf2,c
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12215  002B34  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12216  002B38  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12217  002B3C  0E00               	movlw	0
 12218  002B3E  8EDB               	bsf	plusw2,7,c
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;usb_device.c: 1944: }
 12222                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12223                           
 12224                           ; BSR set to: 0
 12225  002B40  0101               	movlb	1	; () banked
 12226  002B42  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12230  002B44  0100               	movlb	0	; () banked
 12231  002B46  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12232  002B48  A4D8               	btfss	status,2,c
 12233  002B4A  0012               	return	
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;usb_device.c: 1960: {
 12237                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12238  002B4C  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12239  002B50  0012               	return	
 12240  002B52                     __end_of_USBCtrlTrfRxService:
 12241                           	opt stack 0
 12242                           tosu	equ	0xFFF
 12243                           tosh	equ	0xFFE
 12244                           tosl	equ	0xFFD
 12245                           pclath	equ	0xFFA
 12246                           tblptru	equ	0xFF8
 12247                           tblptrh	equ	0xFF7
 12248                           tblptrl	equ	0xFF6
 12249                           tablat	equ	0xFF5
 12250                           prodh	equ	0xFF4
 12251                           prodl	equ	0xFF3
 12252                           intcon	equ	0xFF2
 12253                           intcon2	equ	0xFF1
 12254                           intcon3	equ	0xFF0
 12255                           indf0	equ	0xFEF
 12256                           postinc0	equ	0xFEE
 12257                           plusw0	equ	0xFEB
 12258                           fsr0h	equ	0xFEA
 12259                           fsr0l	equ	0xFE9
 12260                           wreg	equ	0xFE8
 12261                           indf1	equ	0xFE7
 12262                           postinc1	equ	0xFE6
 12263                           postdec1	equ	0xFE5
 12264                           plusw1	equ	0xFE3
 12265                           fsr1h	equ	0xFE2
 12266                           fsr1l	equ	0xFE1
 12267                           indf2	equ	0xFDF
 12268                           postinc2	equ	0xFDE
 12269                           postdec2	equ	0xFDD
 12270                           plusw2	equ	0xFDB
 12271                           fsr2h	equ	0xFDA
 12272                           fsr2l	equ	0xFD9
 12273                           status	equ	0xFD8
 12274                           
 12275 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12276 ;; Defined at:
 12277 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;		None
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;		None
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12295 ;;Total ram usage:        0 bytes
 12296 ;; Hardware stack levels used:    1
 12297 ;; Hardware stack levels required when called:   11
 12298 ;; This function calls:
 12299 ;;		Nothing
 12300 ;; This function is called by:
 12301 ;;		_USBDeviceTasks
 12302 ;;		_USBCtrlEPServiceComplete
 12303 ;;		_USBCtrlTrfRxService
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text51
 12308  003746                     __ptext51:
 12309                           	opt stack 0
 12310  003746                     _USBCtrlEPAllowStatusStage:
 12311                           	opt stack 12
 12312                           
 12313                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12314                           
 12315                           ;incstack = 0
 12316  003746  0100               	movlb	0	; () banked
 12317  003748  51C5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12318  00374A  A4D8               	btfss	status,2,c
 12319  00374C  0012               	return	
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;usb_device.c: 1442: {
 12323                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12324  00374E  0E01               	movlw	1
 12325  003750  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12326                           
 12327                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12328  003752  51C4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12329  003754  A4D8               	btfss	status,2,c
 12330  003756  0012               	return	
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;usb_device.c: 1445: {
 12334                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12335  003758  0E01               	movlw	1
 12336  00375A  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12340  00375C  0E02               	movlw	2
 12341  00375E  19C9               	xorwf	_controlTransferState& (0+255),w,b
 12342  003760  A4D8               	btfss	status,2,c
 12343  003762  D015               	goto	l1650
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;usb_device.c: 1451: {
 12347                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12348  003764  EE20 F001          	lfsr	2,1
 12349  003768  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12350  00376A  26D9               	addwf	fsr2l,f,c
 12351  00376C  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12352  00376E  22DA               	addwfc	fsr2h,f,c
 12353  003770  0E00               	movlw	0
 12354  003772  6EDF               	movwf	indf2,c
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12358  003774  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12359  003778  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12360  00377C  0E48               	movlw	72
 12361  00377E  6EDF               	movwf	indf2,c
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12365  003780  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12366  003784  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12367  003788  0E00               	movlw	0
 12368  00378A  8EDB               	bsf	plusw2,7,c
 12369                           
 12370                           ;usb_device.c: 1455: }
 12371  00378C  0012               	return	
 12372  00378E                     l1650:
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12376                           
 12377                           ; BSR set to: 0
 12378  00378E  05C9               	decf	_controlTransferState& (0+255),w,b
 12379  003790  A4D8               	btfss	status,2,c
 12380  003792  0012               	return	
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;usb_device.c: 1457: {
 12384                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12385  003794  0E00               	movlw	0
 12386  003796  0101               	movlb	1	; () banked
 12387  003798  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12388                           
 12389                           ; BSR set to: 1
 12390                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12391  00379A  0100               	movlb	0	; () banked
 12392  00379C  EE20 F001          	lfsr	2,1
 12393  0037A0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12394  0037A2  26D9               	addwf	fsr2l,f,c
 12395  0037A4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12396  0037A6  22DA               	addwfc	fsr2h,f,c
 12397  0037A8  0E08               	movlw	8
 12398  0037AA  6EDF               	movwf	indf2,c
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12402  0037AC  EE20 F002          	lfsr	2,2
 12403  0037B0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12404  0037B2  26D9               	addwf	fsr2l,f,c
 12405  0037B4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12406  0037B6  22DA               	addwfc	fsr2h,f,c
 12407  0037B8  0E30               	movlw	48
 12408  0037BA  6EDE               	movwf	postinc2,c
 12409  0037BC  0E04               	movlw	4
 12410  0037BE  6EDD               	movwf	postdec2,c
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12414  0037C0  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12415  0037C4  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12416  0037C8  0E04               	movlw	4
 12417  0037CA  6EDF               	movwf	indf2,c
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12421  0037CC  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12422  0037D0  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12423  0037D4  0E00               	movlw	0
 12424  0037D6  8EDB               	bsf	plusw2,7,c
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12428  0037D8  0E01               	movlw	1
 12429  0037DA  0101               	movlb	1	; () banked
 12430  0037DC  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12434  0037DE  0100               	movlb	0	; () banked
 12435  0037E0  EE20 F001          	lfsr	2,1
 12436  0037E4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12437  0037E6  26D9               	addwf	fsr2l,f,c
 12438  0037E8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12439  0037EA  22DA               	addwfc	fsr2h,f,c
 12440  0037EC  0E08               	movlw	8
 12441  0037EE  6EDF               	movwf	indf2,c
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12445  0037F0  EE20 F002          	lfsr	2,2
 12446  0037F4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12447  0037F6  26D9               	addwf	fsr2l,f,c
 12448  0037F8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12449  0037FA  22DA               	addwfc	fsr2h,f,c
 12450  0037FC  0E30               	movlw	48
 12451  0037FE  6EDE               	movwf	postinc2,c
 12452  003800  0E04               	movlw	4
 12453  003802  6EDD               	movwf	postdec2,c
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12457  003804  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12458  003808  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12459  00380C  0E80               	movlw	128
 12460  00380E  6EDF               	movwf	indf2,c
 12461                           
 12462                           ; BSR set to: 0
 12463                           
 12464                           ; BSR set to: 0
 12465                           
 12466                           ; BSR set to: 0
 12467  003810  0012               	return	
 12468  003812                     __end_of_USBCtrlEPAllowStatusStage:
 12469                           	opt stack 0
 12470                           tosu	equ	0xFFF
 12471                           tosh	equ	0xFFE
 12472                           tosl	equ	0xFFD
 12473                           pclath	equ	0xFFA
 12474                           tblptru	equ	0xFF8
 12475                           tblptrh	equ	0xFF7
 12476                           tblptrl	equ	0xFF6
 12477                           tablat	equ	0xFF5
 12478                           prodh	equ	0xFF4
 12479                           prodl	equ	0xFF3
 12480                           intcon	equ	0xFF2
 12481                           intcon2	equ	0xFF1
 12482                           intcon3	equ	0xFF0
 12483                           indf0	equ	0xFEF
 12484                           postinc0	equ	0xFEE
 12485                           plusw0	equ	0xFEB
 12486                           fsr0h	equ	0xFEA
 12487                           fsr0l	equ	0xFE9
 12488                           wreg	equ	0xFE8
 12489                           indf1	equ	0xFE7
 12490                           postinc1	equ	0xFE6
 12491                           postdec1	equ	0xFE5
 12492                           plusw1	equ	0xFE3
 12493                           fsr1h	equ	0xFE2
 12494                           fsr1l	equ	0xFE1
 12495                           indf2	equ	0xFDF
 12496                           postinc2	equ	0xFDE
 12497                           postdec2	equ	0xFDD
 12498                           plusw2	equ	0xFDB
 12499                           fsr2h	equ	0xFDA
 12500                           fsr2l	equ	0xFD9
 12501                           status	equ	0xFD8
 12502                           
 12503 ;; *************** function _USBCtrlTrfInHandler *****************
 12504 ;; Defined at:
 12505 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;		None
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12523 ;;Total ram usage:        1 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:   12
 12526 ;; This function calls:
 12527 ;;		_USBCtrlTrfTxService
 12528 ;; This function is called by:
 12529 ;;		_USBCtrlEPService
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text52
 12534  003CC2                     __ptext52:
 12535                           	opt stack 0
 12536  003CC2                     _USBCtrlTrfInHandler:
 12537                           	opt stack 13
 12538                           
 12539                           ;usb_device.c: 2611: uint8_t lastDTS;
 12540                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;incstack = 0
 12544  003CC2  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12545  003CC6  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12546  003CCA  0100               	movlb	0	; () banked
 12547  003CCC  0E00               	movlw	0
 12548  003CCE  BCDF               	btfsc	indf2,6,c
 12549  003CD0  0E01               	movlw	1
 12550  003CD2  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12554  003CD4  0E04               	movlw	4
 12555  003CD6  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12559  003CD8  0E08               	movlw	8
 12560  003CDA  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 12561  003CDC  A4D8               	btfss	status,2,c
 12562  003CDE  D00D               	goto	l1777
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;usb_device.c: 2622: {
 12566                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12567  003CE0  0104               	movlb	4	; () banked
 12568  003CE2  5132               	movf	50,w,b	;volatile
 12569  003CE4  0B7F               	andlw	127
 12570  003CE6  010F               	movlb	15	; () banked
 12571  003CE8  6F38               	movwf	56,b	;volatile
 12572                           
 12573                           ; BSR set to: 15
 12574                           ;usb_device.c: 2624: if(UADDR != 0u)
 12575  003CEA  5138               	movf	56,w,b	;volatile
 12576  003CEC  B4D8               	btfsc	status,2,c
 12577  003CEE  D002               	goto	l1776
 12578                           
 12579                           ; BSR set to: 15
 12580                           ;usb_device.c: 2625: {
 12581                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12582  003CF0  0E10               	movlw	16
 12583  003CF2  D001               	goto	L11
 12584  003CF4                     l1776:
 12585                           
 12586                           ;usb_device.c: 2628: else
 12587                           ;usb_device.c: 2629: {
 12588                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12589                           
 12590                           ; BSR set to: 0
 12591  003CF4  0E04               	movlw	4
 12592  003CF6                     L11:
 12593  003CF6  0100               	movlb	0	; () banked
 12594  003CF8  6FCB               	movwf	_USBDeviceState& (0+255),b
 12595  003CFA                     l1777:
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;usb_device.c: 2631: }
 12599                           ;usb_device.c: 2632: }
 12600                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12601                           
 12602                           ; BSR set to: 0
 12603                           
 12604                           ; BSR set to: 0
 12605  003CFA  05C9               	decf	_controlTransferState& (0+255),w,b
 12606  003CFC  A4D8               	btfss	status,2,c
 12607  003CFE  D03B               	goto	l1778
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 2636: {
 12611                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12612  003D00  EE20 F002          	lfsr	2,2
 12613  003D04  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12614  003D06  26D9               	addwf	fsr2l,f,c
 12615  003D08  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12616  003D0A  22DA               	addwfc	fsr2h,f,c
 12617  003D0C  0E38               	movlw	56
 12618  003D0E  6EDE               	movwf	postinc2,c
 12619  003D10  0E04               	movlw	4
 12620  003D12  6EDD               	movwf	postdec2,c
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12624  003D14  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
 12625                           
 12626                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12627  003D18  0E02               	movlw	2
 12628  003D1A  0100               	movlb	0	; () banked
 12629  003D1C  19CA               	xorwf	_shortPacketStatus& (0+255),w,b
 12630  003D1E  A4D8               	btfss	status,2,c
 12631  003D20  D00D               	goto	l1779
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;usb_device.c: 2645: {
 12635                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12636  003D22  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12637  003D26  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12638  003D2A  0E04               	movlw	4
 12639  003D2C  6EDF               	movwf	indf2,c
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12643  003D2E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12644  003D32  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12645  003D36  0E00               	movlw	0
 12646  003D38  8EDB               	bsf	plusw2,7,c
 12647                           
 12648                           ;usb_device.c: 2650: }
 12649  003D3A  0012               	return	
 12650  003D3C                     l1779:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;usb_device.c: 2651: else
 12654                           ;usb_device.c: 2652: {
 12655                           ;usb_device.c: 2653: if(lastDTS == 0)
 12656                           
 12657                           ; BSR set to: 0
 12658  003D3C  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12659  003D3E  A4D8               	btfss	status,2,c
 12660  003D40  D00D               	goto	l1781
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;usb_device.c: 2654: {
 12664                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12665  003D42  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12666  003D46  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12667  003D4A  0E48               	movlw	72
 12668  003D4C  6EDF               	movwf	indf2,c
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12672  003D4E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12673  003D52  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12674  003D56  0E00               	movlw	0
 12675  003D58  8EDB               	bsf	plusw2,7,c
 12676                           
 12677                           ;usb_device.c: 2657: }
 12678  003D5A  0012               	return	
 12679  003D5C                     l1781:
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;usb_device.c: 2658: else
 12683                           ;usb_device.c: 2659: {
 12684                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12685                           
 12686                           ; BSR set to: 0
 12687  003D5C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12688  003D60  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12689  003D64  0E08               	movlw	8
 12690  003D66  6EDF               	movwf	indf2,c
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12694  003D68  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12695  003D6C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12696  003D70  0E00               	movlw	0
 12697  003D72  8EDB               	bsf	plusw2,7,c
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 2662: }
 12701                           ;usb_device.c: 2663: }
 12702                           ;usb_device.c: 2664: }
 12703                           
 12704                           ; BSR set to: 0
 12705  003D74  0012               	return	
 12706  003D76                     l1778:
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 2665: else
 12710                           ;usb_device.c: 2666: {
 12711                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12712  003D76  0101               	movlb	1	; () banked
 12713  003D78  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12714                           
 12715                           ; BSR set to: 1
 12716                           ;usb_device.c: 2675: }
 12717                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12718                           
 12719                           ; BSR set to: 1
 12720  003D7A  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12721                           
 12722                           ; BSR set to: 1
 12723                           ;usb_device.c: 2677: }
 12724                           ;usb_device.c: 2679: controlTransferState = 0;
 12725                           
 12726                           ; BSR set to: 1
 12727  003D7C  0E00               	movlw	0
 12728  003D7E  0100               	movlb	0	; () banked
 12729  003D80  6FC9               	movwf	_controlTransferState& (0+255),b
 12730  003D82  0012               	return	
 12731  003D84                     __end_of_USBCtrlTrfInHandler:
 12732                           	opt stack 0
 12733                           tosu	equ	0xFFF
 12734                           tosh	equ	0xFFE
 12735                           tosl	equ	0xFFD
 12736                           pclath	equ	0xFFA
 12737                           tblptru	equ	0xFF8
 12738                           tblptrh	equ	0xFF7
 12739                           tblptrl	equ	0xFF6
 12740                           tablat	equ	0xFF5
 12741                           prodh	equ	0xFF4
 12742                           prodl	equ	0xFF3
 12743                           intcon	equ	0xFF2
 12744                           intcon2	equ	0xFF1
 12745                           intcon3	equ	0xFF0
 12746                           indf0	equ	0xFEF
 12747                           postinc0	equ	0xFEE
 12748                           plusw0	equ	0xFEB
 12749                           fsr0h	equ	0xFEA
 12750                           fsr0l	equ	0xFE9
 12751                           wreg	equ	0xFE8
 12752                           indf1	equ	0xFE7
 12753                           postinc1	equ	0xFE6
 12754                           postdec1	equ	0xFE5
 12755                           plusw1	equ	0xFE3
 12756                           fsr1h	equ	0xFE2
 12757                           fsr1l	equ	0xFE1
 12758                           indf2	equ	0xFDF
 12759                           postinc2	equ	0xFDE
 12760                           postdec2	equ	0xFDD
 12761                           plusw2	equ	0xFDB
 12762                           fsr2h	equ	0xFDA
 12763                           fsr2l	equ	0xFD9
 12764                           status	equ	0xFD8
 12765                           
 12766 ;; *************** function _USBCtrlTrfTxService *****************
 12767 ;; Defined at:
 12768 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;		None
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      void 
 12775 ;; Registers used:
 12776 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12786 ;;Total ram usage:        1 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:   11
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_USBCtrlEPAllowDataStage
 12793 ;;		_USBCtrlTrfInHandler
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text53
 12798  0033FC                     __ptext53:
 12799                           	opt stack 0
 12800  0033FC                     _USBCtrlTrfTxService:
 12801                           	opt stack 11
 12802                           
 12803                           ;usb_device.c: 1791: uint8_t byteToSend;
 12804                           ;usb_device.c: 1795: byteToSend = 8;
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;incstack = 0
 12808  0033FC  0E08               	movlw	8
 12809  0033FE  0100               	movlb	0	; () banked
 12810  003400  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12814  003402  51B1               	movf	(_inPipes+5)& (0+255),w,b
 12815  003404  E110               	bnz	l7647
 12816  003406  0E08               	movlw	8
 12817  003408  5DB0               	subwf	(_inPipes+4)& (0+255),w,b
 12818  00340A  B0D8               	btfsc	status,0,c
 12819  00340C  D00C               	goto	l1683
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device.c: 1797: {
 12823                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12824  00340E  C0B0  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12828  003412  51CA               	movf	_shortPacketStatus& (0+255),w,b
 12829  003414  A4D8               	btfss	status,2,c
 12830  003416  D002               	goto	l1681
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;usb_device.c: 1806: {
 12834                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12835  003418  0E01               	movlw	1
 12836  00341A  D004               	goto	L12
 12837  00341C                     l1681:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12841                           
 12842                           ; BSR set to: 0
 12843  00341C  05CA               	decf	_shortPacketStatus& (0+255),w,b
 12844  00341E  A4D8               	btfss	status,2,c
 12845  003420  D002               	goto	l1683
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;usb_device.c: 1810: {
 12849                           ;usb_device.c: 1811: shortPacketStatus = 2;
 12850  003422  0E02               	movlw	2
 12851  003424                     L12:
 12852  003424  6FCA               	movwf	_shortPacketStatus& (0+255),b
 12853  003426                     l1683:
 12854  003426                     l7647:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;usb_device.c: 1812: }
 12858                           ;usb_device.c: 1813: }
 12859                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 12860  003426  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12861  003428  5FB0               	subwf	(_inPipes+4)& (0+255),f,b
 12862  00342A  0E00               	movlw	0
 12863  00342C  5BB1               	subwfb	(_inPipes+5)& (0+255),f,b
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 12867  00342E  EE20 F001          	lfsr	2,1
 12868  003432  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12869  003434  26D9               	addwf	fsr2l,f,c
 12870  003436  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12871  003438  22DA               	addwfc	fsr2h,f,c
 12872  00343A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 12876  00343E  0E38               	movlw	56
 12877  003440  0102               	movlb	2	; () banked
 12878  003442  6FD4               	movwf	_pDst& (0+255),b
 12879  003444  0E04               	movlw	4
 12880  003446  6FD5               	movwf	(_pDst+1)& (0+255),b
 12881                           
 12882                           ; BSR set to: 2
 12883                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12884  003448  0100               	movlb	0	; () banked
 12885  00344A  A1AF               	btfss	(_inPipes+3)& (0+255),0,b
 12886  00344C  D01E               	goto	l1685
 12887  00344E  D03E               	goto	l1689
 12888  003450                     
 12889                           ; BSR set to: 0
 12890                           ;usb_device.c: 1830: {
 12891                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 12892                           
 12893                           ; BSR set to: 0
 12894  003450  C0AC  FFF6         	movff	_inPipes,tblptrl
 12895  003454  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12896  003458  6AF8               	clrf	tblptru,c
 12897  00345A  C2D4  FFD9         	movff	_pDst,fsr2l
 12898  00345E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12899  003462  0E0E               	movlw	(high __ramtop+-1)
 12900  003464  64F7               	cpfsgt	tblptrh,c
 12901  003466  D003               	bra	u5187
 12902  003468  0008               	tblrd		*
 12903  00346A  50F5               	movf	tablat,w,c
 12904  00346C  D005               	bra	u5180
 12905  00346E                     u5187:
 12906  00346E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12907  003472  CFF7 FFEA          	movff	tblptrh,fsr0h
 12908  003476  50EF               	movf	indf0,w,c
 12909  003478                     u5180:
 12910  003478  6EDF               	movwf	indf2,c
 12911  00347A  0100               	movlb	0	; () banked
 12912  00347C  4BAC               	infsnz	_inPipes& (0+255),f,b
 12913  00347E  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12914                           
 12915                           ; BSR set to: 0
 12916  003480  0102               	movlb	2	; () banked
 12917  003482  4BD4               	infsnz	_pDst& (0+255),f,b
 12918  003484  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12919                           
 12920                           ; BSR set to: 2
 12921                           ;usb_device.c: 1832: byteToSend--;
 12922  003486  0100               	movlb	0	; () banked
 12923  003488  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12924  00348A                     l1685:
 12925                           
 12926                           ; BSR set to: 0
 12927                           
 12928                           ; BSR set to: 0
 12929  00348A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12930  00348C  B4D8               	btfsc	status,2,c
 12931  00348E  0012               	return	
 12932  003490  D7DF               	goto	l1686
 12933  003492                     
 12934                           ; BSR set to: 0
 12935                           ;usb_device.c: 1838: {
 12936                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 12937                           
 12938                           ; BSR set to: 0
 12939  003492  C0AC  FFF6         	movff	_inPipes,tblptrl
 12940  003496  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12941  00349A  6AF8               	clrf	tblptru,c
 12942  00349C  C2D4  FFD9         	movff	_pDst,fsr2l
 12943  0034A0  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12944  0034A4  0E0E               	movlw	(high __ramtop+-1)
 12945  0034A6  64F7               	cpfsgt	tblptrh,c
 12946  0034A8  D003               	bra	u5207
 12947  0034AA  0008               	tblrd		*
 12948  0034AC  50F5               	movf	tablat,w,c
 12949  0034AE  D005               	bra	u5200
 12950  0034B0                     u5207:
 12951  0034B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12952  0034B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12953  0034B8  50EF               	movf	indf0,w,c
 12954  0034BA                     u5200:
 12955  0034BA  6EDF               	movwf	indf2,c
 12956  0034BC  0100               	movlb	0	; () banked
 12957  0034BE  4BAC               	infsnz	_inPipes& (0+255),f,b
 12958  0034C0  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12959                           
 12960                           ; BSR set to: 0
 12961  0034C2  0102               	movlb	2	; () banked
 12962  0034C4  4BD4               	infsnz	_pDst& (0+255),f,b
 12963  0034C6  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12964                           
 12965                           ; BSR set to: 2
 12966                           ;usb_device.c: 1840: byteToSend--;
 12967  0034C8  0100               	movlb	0	; () banked
 12968  0034CA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12969  0034CC                     l1689:
 12970                           
 12971                           ; BSR set to: 0
 12972                           
 12973                           ; BSR set to: 0
 12974  0034CC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12975  0034CE  B4D8               	btfsc	status,2,c
 12976  0034D0  0012               	return	
 12977  0034D2  D7DF               	goto	l1690
 12978  0034D4                     __end_of_USBCtrlTrfTxService:
 12979                           	opt stack 0
 12980                           tosu	equ	0xFFF
 12981                           tosh	equ	0xFFE
 12982                           tosl	equ	0xFFD
 12983                           pclath	equ	0xFFA
 12984                           tblptru	equ	0xFF8
 12985                           tblptrh	equ	0xFF7
 12986                           tblptrl	equ	0xFF6
 12987                           tablat	equ	0xFF5
 12988                           prodh	equ	0xFF4
 12989                           prodl	equ	0xFF3
 12990                           intcon	equ	0xFF2
 12991                           intcon2	equ	0xFF1
 12992                           intcon3	equ	0xFF0
 12993                           indf0	equ	0xFEF
 12994                           postinc0	equ	0xFEE
 12995                           plusw0	equ	0xFEB
 12996                           fsr0h	equ	0xFEA
 12997                           fsr0l	equ	0xFE9
 12998                           wreg	equ	0xFE8
 12999                           indf1	equ	0xFE7
 13000                           postinc1	equ	0xFE6
 13001                           postdec1	equ	0xFE5
 13002                           plusw1	equ	0xFE3
 13003                           fsr1h	equ	0xFE2
 13004                           fsr1l	equ	0xFE1
 13005                           indf2	equ	0xFDF
 13006                           postinc2	equ	0xFDE
 13007                           postdec2	equ	0xFDD
 13008                           plusw2	equ	0xFDB
 13009                           fsr2h	equ	0xFDA
 13010                           fsr2l	equ	0xFD9
 13011                           status	equ	0xFD8
 13012                           
 13013 ;; *************** function _CDCTxService *****************
 13014 ;; Defined at:
 13015 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;		None
 13018 ;; Auto vars:     Size  Location     Type
 13019 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13020 ;;  i               1   36[BANK0 ] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13034 ;;Total ram usage:        2 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:   12
 13037 ;; This function calls:
 13038 ;;		_USBTransferOnePacket
 13039 ;; This function is called by:
 13040 ;;		_UsbDevice_MainTask
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           	psect	text54
 13045  002544                     __ptext54:
 13046                           	opt stack 0
 13047  002544                     _CDCTxService:
 13048                           	opt stack 15
 13049                           
 13050                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13051                           ;usb_device_cdc.c: 842: uint8_t i;
 13052                           ;usb_device_cdc.c: 844: ;
 13053                           ;usb_device_cdc.c: 846: {};
 13054                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;incstack = 0
 13058  002544  0101               	movlb	1	; () banked
 13059  002546  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13060  002548  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13061  00254A  B4D8               	btfsc	status,2,c
 13062  00254C  D006               	goto	l1935
 13063                           
 13064                           ; BSR set to: 1
 13065  00254E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13066  002552  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13067  002556  BEDF               	btfsc	indf2,7,c
 13068  002558  0012               	return	
 13069  00255A                     l1935:
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;usb_device_cdc.c: 852: }
 13073                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13074                           
 13075                           ; BSR set to: 1
 13076  00255A  0E03               	movlw	3
 13077  00255C  0100               	movlb	0	; () banked
 13078  00255E  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13079  002560  A4D8               	btfss	status,2,c
 13080  002562  D002               	goto	l1937
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13084  002564  0E00               	movlw	0
 13085  002566  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13086  002568                     l1937:
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13090  002568  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13091  00256A  B4D8               	btfsc	status,2,c
 13092  00256C  0012               	return	
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;usb_device_cdc.c: 869: }
 13096                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13097                           
 13098                           ; BSR set to: 0
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;usb_device_cdc.c: 866: {
 13102                           ;usb_device_cdc.c: 867: ;
 13103                           ;usb_device_cdc.c: 868: return;
 13104  00256E  0E02               	movlw	2
 13105  002570  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13106  002572  A4D8               	btfss	status,2,c
 13107  002574  D013               	goto	l1939
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;usb_device_cdc.c: 875: {
 13111                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13112  002576  0E01               	movlw	1
 13113  002578  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13114  00257A  0E00               	movlw	0
 13115  00257C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13116  00257E  0E00               	movlw	0
 13117  002580  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13118  002582  0E00               	movlw	0
 13119  002584  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13120  002586  0E02               	movlw	2
 13121  002588  ECC2  F01E         	call	_USBTransferOnePacket
 13122  00258C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13123  002590  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13124                           
 13125                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13126  002594  0E03               	movlw	3
 13127  002596  0100               	movlb	0	; () banked
 13128  002598  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13129                           
 13130                           ;usb_device_cdc.c: 879: }
 13131  00259A  0012               	return	
 13132  00259C                     l1939:
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13136                           
 13137                           ; BSR set to: 0
 13138  00259C  05C1               	decf	_cdc_trf_state& (0+255),w,b
 13139  00259E  A4D8               	btfss	status,2,c
 13140  0025A0  0012               	return	
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;usb_device_cdc.c: 881: {
 13144                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13145  0025A2  0E40               	movlw	64
 13146  0025A4  65C0               	cpfsgt	_cdc_tx_len& (0+255),b
 13147  0025A6  D003               	goto	l1942
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13151  0025A8  0E40               	movlw	64
 13152  0025AA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13153  0025AC  D002               	goto	l1943
 13154  0025AE                     l1942:
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;usb_device_cdc.c: 887: else
 13158                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13159  0025AE  C0C0  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13160  0025B2                     l1943:
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13164                           
 13165                           ; BSR set to: 0
 13166  0025B2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13167  0025B4  0800               	sublw	0
 13168  0025B6  25C0               	addwf	_cdc_tx_len& (0+255),w,b
 13169  0025B8  6FC0               	movwf	_cdc_tx_len& (0+255),b
 13170                           
 13171                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13172  0025BA  0E84               	movlw	low _cdc_data_tx
 13173  0025BC  0102               	movlb	2	; () banked
 13174  0025BE  6FC8               	movwf	_pCDCDst& (0+255),b
 13175  0025C0  0E07               	movlw	high _cdc_data_tx
 13176  0025C2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13177                           
 13178                           ; BSR set to: 2
 13179                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13180  0025C4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13181                           
 13182                           ; BSR set to: 2
 13183                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13184  0025C8  0101               	movlb	1	; () banked
 13185  0025CA  51E3               	movf	_cdc_mem_type& (0+255),w,b
 13186  0025CC  B4D8               	btfsc	status,2,c
 13187  0025CE  D01D               	goto	l1945
 13188  0025D0  D03D               	goto	l1949
 13189  0025D2                     
 13190                           ;usb_device_cdc.c: 901: {
 13191                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13192                           
 13193                           ; BSR set to: 1
 13194  0025D2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13195  0025D6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13196  0025DA  6AF8               	clrf	tblptru,c
 13197  0025DC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13198  0025E0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13199  0025E4  0E0E               	movlw	(high __ramtop+-1)
 13200  0025E6  64F7               	cpfsgt	tblptrh,c
 13201  0025E8  D003               	bra	u13137
 13202  0025EA  0008               	tblrd		*
 13203  0025EC  50F5               	movf	tablat,w,c
 13204  0025EE  D005               	bra	u13130
 13205  0025F0                     u13137:
 13206  0025F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13207  0025F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13208  0025F8  50EF               	movf	indf0,w,c
 13209  0025FA                     u13130:
 13210  0025FA  6EDF               	movwf	indf2,c
 13211                           
 13212                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13213  0025FC  0102               	movlb	2	; () banked
 13214  0025FE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13215  002600  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13216                           
 13217                           ; BSR set to: 2
 13218                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13219  002602  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13220  002604  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13221                           
 13222                           ; BSR set to: 2
 13223                           ;usb_device_cdc.c: 905: i--;
 13224  002606  0100               	movlb	0	; () banked
 13225  002608  0784               	decf	CDCTxService@i& (0+255),f,b
 13226  00260A                     l1945:
 13227                           
 13228                           ; BSR set to: 0
 13229  00260A  0100               	movlb	0	; () banked
 13230  00260C  5184               	movf	CDCTxService@i& (0+255),w,b
 13231  00260E  B4D8               	btfsc	status,2,c
 13232  002610  D021               	goto	u13160
 13233  002612  D7DF               	goto	l1946
 13234  002614                     
 13235                           ; BSR set to: 0
 13236                           ;usb_device_cdc.c: 911: {
 13237                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13238                           
 13239                           ; BSR set to: 0
 13240  002614  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13241  002618  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13242  00261C  6AF8               	clrf	tblptru,c
 13243  00261E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13244  002622  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13245  002626  0E0E               	movlw	(high __ramtop+-1)
 13246  002628  64F7               	cpfsgt	tblptrh,c
 13247  00262A  D003               	bra	u13157
 13248  00262C  0008               	tblrd		*
 13249  00262E  50F5               	movf	tablat,w,c
 13250  002630  D005               	bra	u13150
 13251  002632                     u13157:
 13252  002632  CFF6 FFE9          	movff	tblptrl,fsr0l
 13253  002636  CFF7 FFEA          	movff	tblptrh,fsr0h
 13254  00263A  50EF               	movf	indf0,w,c
 13255  00263C                     u13150:
 13256  00263C  6EDF               	movwf	indf2,c
 13257                           
 13258                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13259  00263E  0102               	movlb	2	; () banked
 13260  002640  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13261  002642  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13262                           
 13263                           ; BSR set to: 2
 13264                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13265  002644  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13266  002646  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13267                           
 13268                           ; BSR set to: 2
 13269                           ;usb_device_cdc.c: 915: i--;
 13270  002648  0100               	movlb	0	; () banked
 13271  00264A  0784               	decf	CDCTxService@i& (0+255),f,b
 13272  00264C                     l1949:
 13273                           
 13274                           ; BSR set to: 0
 13275  00264C  0100               	movlb	0	; () banked
 13276  00264E  5184               	movf	CDCTxService@i& (0+255),w,b
 13277  002650  A4D8               	btfss	status,2,c
 13278  002652  D7E0               	goto	l1950
 13279  002654                     u13160:
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;usb_device_cdc.c: 916: }
 13283                           ;usb_device_cdc.c: 917: }
 13284                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13285                           
 13286                           ; BSR set to: 0
 13287                           
 13288                           ; BSR set to: 0
 13289  002654  51C0               	movf	_cdc_tx_len& (0+255),w,b
 13290  002656  A4D8               	btfss	status,2,c
 13291  002658  D008               	goto	l1954
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;usb_device_cdc.c: 924: {
 13295                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13296  00265A  0E40               	movlw	64
 13297  00265C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13298  00265E  A4D8               	btfss	status,2,c
 13299  002660  D002               	goto	l1953
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13303  002662  0E02               	movlw	2
 13304  002664  D001               	goto	L13
 13305  002666                     l1953:
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;usb_device_cdc.c: 927: else
 13309                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13310                           
 13311                           ; BSR set to: 0
 13312  002666  0E03               	movlw	3
 13313  002668                     L13:
 13314  002668  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13315  00266A                     l1954:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;usb_device_cdc.c: 929: }
 13319                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13320                           
 13321                           ; BSR set to: 0
 13322                           
 13323                           ; BSR set to: 0
 13324  00266A  0E01               	movlw	1
 13325  00266C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13326  00266E  0E84               	movlw	low _cdc_data_tx
 13327  002670  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13328  002672  0E07               	movlw	high _cdc_data_tx
 13329  002674  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13330  002676  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13331  00267A  0E02               	movlw	2
 13332  00267C  ECC2  F01E         	call	_USBTransferOnePacket
 13333  002680  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13334  002684  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13335  002688  0012               	return	
 13336  00268A                     __end_of_CDCTxService:
 13337                           	opt stack 0
 13338                           tosu	equ	0xFFF
 13339                           tosh	equ	0xFFE
 13340                           tosl	equ	0xFFD
 13341                           pclath	equ	0xFFA
 13342                           tblptru	equ	0xFF8
 13343                           tblptrh	equ	0xFF7
 13344                           tblptrl	equ	0xFF6
 13345                           tablat	equ	0xFF5
 13346                           prodh	equ	0xFF4
 13347                           prodl	equ	0xFF3
 13348                           intcon	equ	0xFF2
 13349                           intcon2	equ	0xFF1
 13350                           intcon3	equ	0xFF0
 13351                           indf0	equ	0xFEF
 13352                           postinc0	equ	0xFEE
 13353                           plusw0	equ	0xFEB
 13354                           fsr0h	equ	0xFEA
 13355                           fsr0l	equ	0xFE9
 13356                           wreg	equ	0xFE8
 13357                           indf1	equ	0xFE7
 13358                           postinc1	equ	0xFE6
 13359                           postdec1	equ	0xFE5
 13360                           plusw1	equ	0xFE3
 13361                           fsr1h	equ	0xFE2
 13362                           fsr1l	equ	0xFE1
 13363                           indf2	equ	0xFDF
 13364                           postinc2	equ	0xFDE
 13365                           postdec2	equ	0xFDD
 13366                           plusw2	equ	0xFDB
 13367                           fsr2h	equ	0xFDA
 13368                           fsr2l	equ	0xFD9
 13369                           status	equ	0xFD8
 13370                           
 13371 ;; *************** function _Term_MainSm *****************
 13372 ;; Defined at:
 13373 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13378 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13379 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13380 ;;  FwkBuildYear    4    0        unsigned char [4]
 13381 ;;  FwkBuildMont    4    0        unsigned char [4]
 13382 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13393 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13396 ;;Total ram usage:       12 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:   16
 13399 ;; This function calls:
 13400 ;;		_OsTmr_GetTimerStatus
 13401 ;;		_OsTmr_StartTimer
 13402 ;;		_Terminal
 13403 ;;		_memset
 13404 ;;		_putUSBUSART
 13405 ;;		_sprintf
 13406 ;;		_strcat
 13407 ;;		_strcpy
 13408 ;;		_strlen
 13409 ;;		_utoa
 13410 ;; This function is called by:
 13411 ;;		_Term_MainTask
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text55
 13416  0010B6                     __ptext55:
 13417                           	opt stack 0
 13418  0010B6                     _Term_MainSm:
 13419                           	opt stack 11
 13420                           
 13421                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13422                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13423                           ;term.c: 711: static UINT8 Data[50];
 13424                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13425                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13426                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13427                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13428                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13429                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13430                           ;term.c: 719: switch (TermMainSmState)
 13431                           
 13432                           ;incstack = 0
 13433  0010B6  D133               	goto	l2413
 13434  0010B8                     
 13435                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13436  0010B8  0ECC               	movlw	low Term_MainSm@TermDelay
 13437  0010BA  0100               	movlb	0	; () banked
 13438  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13439  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13440  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13441  0010C2  0ED0               	movlw	208
 13442  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13443  0010C6  0E07               	movlw	7
 13444  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13445  0010CA  0E00               	movlw	0
 13446  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13447  0010CE  0E00               	movlw	0
 13448  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13449  0010D2  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 13450                           
 13451                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13452  0010D6  0E01               	movlw	1
 13453  0010D8  0102               	movlb	2	; () banked
 13454  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13455                           
 13456                           ;term.c: 726: break;
 13457  0010DC  0012               	return	
 13458  0010DE                     
 13459                           ; BSR set to: 2
 13460                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13461                           
 13462                           ; BSR set to: 2
 13463  0010DE  0ECC               	movlw	low Term_MainSm@TermDelay
 13464  0010E0  0100               	movlb	0	; () banked
 13465  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13466  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13467  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13468  0010E8  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 13469  0010EC  06E8               	decf	wreg,f,c
 13470  0010EE  A4D8               	btfss	status,2,c
 13471  0010F0  0012               	return	
 13472                           
 13473                           ;term.c: 731: {
 13474                           ;term.c: 733: TermMainSmState = Term_InitState;
 13475  0010F2  0E02               	movlw	2
 13476  0010F4  0102               	movlb	2	; () banked
 13477  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13478                           
 13479                           ; BSR set to: 2
 13480                           ;term.c: 734: }
 13481                           ;term.c: 735: break;
 13482  0010F8  0012               	return	
 13483  0010FA                     
 13484                           ; BSR set to: 2
 13485                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13486                           
 13487                           ; BSR set to: 2
 13488  0010FA  0E1F               	movlw	31
 13489  0010FC  0100               	movlb	0	; () banked
 13490  0010FE  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 13491  001100  0012               	return	
 13492                           
 13493                           ; BSR set to: 0
 13494  001102  B265               	btfsc	3941,1,c	;volatile
 13495  001104  0012               	return	
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;term.c: 743: else
 13499                           ;term.c: 744: {
 13500                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;term.c: 740: {
 13506                           ;term.c: 742: }
 13507  001106  0E03               	movlw	3
 13508  001108  0102               	movlb	2	; () banked
 13509  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13510                           
 13511                           ; BSR set to: 2
 13512                           ;term.c: 747: }
 13513                           ;term.c: 748: break;
 13514  00110C  0012               	return	
 13515  00110E                     
 13516                           ; BSR set to: 2
 13517                           ;term.c: 752: if((cdc_trf_state == 0))
 13518                           
 13519                           ; BSR set to: 2
 13520  00110E  0100               	movlb	0	; () banked
 13521  001110  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13522  001112  A4D8               	btfss	status,2,c
 13523  001114  0012               	return	
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;term.c: 753: {
 13527                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13528  001116  0E4F               	movlw	low _Welcome
 13529  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13530  00111A  0EFD               	movlw	high _Welcome
 13531  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13532  00111E  0E88               	movlw	136
 13533  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13534  001122  EC88  F02E         	call	_putUSBUSART	;wreg free
 13535                           
 13536                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13537  001126  0E04               	movlw	4
 13538  001128  0102               	movlb	2	; () banked
 13539  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13540                           
 13541                           ; BSR set to: 2
 13542                           ;term.c: 758: }
 13543                           ;term.c: 759: break;
 13544  00112C  0012               	return	
 13545  00112E                     
 13546                           ; BSR set to: 2
 13547                           ;term.c: 763: if((cdc_trf_state == 0))
 13548                           
 13549                           ; BSR set to: 2
 13550  00112E  0100               	movlb	0	; () banked
 13551  001130  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13552  001132  A4D8               	btfss	status,2,c
 13553  001134  0012               	return	
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;term.c: 764: {
 13557                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13558  001136  0E5F               	movlw	low _MsgFormat
 13559  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13560  00113A  0EFC               	movlw	high _MsgFormat
 13561  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13562  00113E  0EEF               	movlw	239
 13563  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13564  001142  EC88  F02E         	call	_putUSBUSART	;wreg free
 13565                           
 13566                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13567  001146  0E05               	movlw	5
 13568  001148  0102               	movlb	2	; () banked
 13569  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13570                           
 13571                           ; BSR set to: 2
 13572                           ;term.c: 769: }
 13573                           ;term.c: 770: break;
 13574  00114C  0012               	return	
 13575  00114E                     
 13576                           ; BSR set to: 2
 13577                           ;term.c: 774: if((cdc_trf_state == 0))
 13578                           
 13579                           ; BSR set to: 2
 13580  00114E  0100               	movlb	0	; () banked
 13581  001150  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13582  001152  A4D8               	btfss	status,2,c
 13583  001154  0012               	return	
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;term.c: 775: {
 13587                           ;term.c: 777: memset(Data,0,50);
 13588  001156  0E94               	movlw	low Term_MainSm@Data
 13589  001158  6F7D               	movwf	memset@p1& (0+255),b
 13590  00115A  0E04               	movlw	high Term_MainSm@Data
 13591  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13592  00115E  0E00               	movlw	0
 13593  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13594  001162  0E00               	movlw	0
 13595  001164  6F7F               	movwf	memset@c& (0+255),b
 13596  001166  0E00               	movlw	0
 13597  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13598  00116A  0E32               	movlw	50
 13599  00116C  6F81               	movwf	memset@n& (0+255),b
 13600  00116E  EC30  F02D         	call	_memset	;wreg free
 13601                           
 13602                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13603  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13604  001174  0100               	movlb	0	; () banked
 13605  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13606  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13607  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13608  00117C  0E00               	movlw	0
 13609  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13610  001180  0E01               	movlw	1
 13611  001182  6F8C               	movwf	utoa@val& (0+255),b
 13612  001184  0E00               	movlw	0
 13613  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13614  001188  0E0A               	movlw	10
 13615  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13616  00118C  EC86  F020         	call	_utoa	;wreg free
 13617                           
 13618                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13619  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13620  001192  0100               	movlb	0	; () banked
 13621  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13622  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13623  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13624  00119A  0E00               	movlw	0
 13625  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13626  00119E  0E02               	movlw	2
 13627  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13628  0011A2  0E00               	movlw	0
 13629  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13630  0011A6  0E0A               	movlw	10
 13631  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13632  0011AA  EC86  F020         	call	_utoa	;wreg free
 13633                           
 13634                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13635  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13636  0011B0  0100               	movlb	0	; () banked
 13637  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13638  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13639  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13640  0011B8  0E00               	movlw	0
 13641  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13642  0011BC  0E00               	movlw	0
 13643  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13644  0011C0  0E00               	movlw	0
 13645  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13646  0011C4  0E0A               	movlw	10
 13647  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13648  0011C8  EC86  F020         	call	_utoa	;wreg free
 13649                           
 13650                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13651  0011CC  0E94               	movlw	low Term_MainSm@Data
 13652  0011CE  0100               	movlb	0	; () banked
 13653  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13654  0011D2  0E04               	movlw	high Term_MainSm@Data
 13655  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13656  0011D6  0EFF               	movlw	low STR_23
 13657  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13658  0011DA  0EFE               	movlw	high STR_23
 13659  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13660  0011DE  ECFF  F02C         	call	_strcpy	;wreg free
 13661                           
 13662                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13663  0011E2  0E94               	movlw	low Term_MainSm@Data
 13664  0011E4  0100               	movlb	0	; () banked
 13665  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13666  0011E8  0E04               	movlw	high Term_MainSm@Data
 13667  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13668  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13669  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13670  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13671  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13672  0011F4  EC8F  F027         	call	_strcat	;wreg free
 13673                           
 13674                           ;term.c: 784: strcat(Data,".");
 13675  0011F8  0E94               	movlw	low Term_MainSm@Data
 13676  0011FA  0100               	movlb	0	; () banked
 13677  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13678  0011FE  0E04               	movlw	high Term_MainSm@Data
 13679  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13680  001202  0EF4               	movlw	low STR_24
 13681  001204  6F7F               	movwf	strcat@from& (0+255),b
 13682  001206  0EFF               	movlw	high STR_24
 13683  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13684  00120A  EC8F  F027         	call	_strcat	;wreg free
 13685                           
 13686                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13687  00120E  0E94               	movlw	low Term_MainSm@Data
 13688  001210  0100               	movlb	0	; () banked
 13689  001212  6F7D               	movwf	strcat@to& (0+255),b
 13690  001214  0E04               	movlw	high Term_MainSm@Data
 13691  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13692  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13693  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13694  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13695  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13696  001220  EC8F  F027         	call	_strcat	;wreg free
 13697                           
 13698                           ;term.c: 786: strcat(Data,".");
 13699  001224  0E94               	movlw	low Term_MainSm@Data
 13700  001226  0100               	movlb	0	; () banked
 13701  001228  6F7D               	movwf	strcat@to& (0+255),b
 13702  00122A  0E04               	movlw	high Term_MainSm@Data
 13703  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13704  00122E  0EF4               	movlw	low STR_24
 13705  001230  6F7F               	movwf	strcat@from& (0+255),b
 13706  001232  0EFF               	movlw	high STR_24
 13707  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13708  001236  EC8F  F027         	call	_strcat	;wreg free
 13709                           
 13710                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13711  00123A  0E94               	movlw	low Term_MainSm@Data
 13712  00123C  0100               	movlb	0	; () banked
 13713  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13714  001240  0E04               	movlw	high Term_MainSm@Data
 13715  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13716  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13717  001246  6F7F               	movwf	strcat@from& (0+255),b
 13718  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13719  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13720  00124C  EC8F  F027         	call	_strcat	;wreg free
 13721                           
 13722                           ;term.c: 788: strcat(Data,"\r\n");
 13723  001250  0E94               	movlw	low Term_MainSm@Data
 13724  001252  0100               	movlb	0	; () banked
 13725  001254  6F7D               	movwf	strcat@to& (0+255),b
 13726  001256  0E04               	movlw	high Term_MainSm@Data
 13727  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13728  00125A  0EB3               	movlw	low (STR_21+39)
 13729  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13730  00125E  0EFE               	movlw	high (STR_21+39)
 13731  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13732  001262  EC8F  F027         	call	_strcat	;wreg free
 13733                           
 13734                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13735  001266  0E94               	movlw	low Term_MainSm@Data
 13736  001268  0100               	movlb	0	; () banked
 13737  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13738  00126C  0E04               	movlw	high Term_MainSm@Data
 13739  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13740  001270  0E94               	movlw	low Term_MainSm@Data
 13741  001272  6F7D               	movwf	strlen@s& (0+255),b
 13742  001274  0E04               	movlw	high Term_MainSm@Data
 13743  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13744  001278  ECC1  F02B         	call	_strlen	;wreg free
 13745  00127C  0100               	movlb	0	; () banked
 13746  00127E  517D               	movf	?_strlen& (0+255),w,b
 13747  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13748  001282  EC88  F02E         	call	_putUSBUSART	;wreg free
 13749                           
 13750                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13751  001286  0E06               	movlw	6
 13752  001288  0102               	movlb	2	; () banked
 13753  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13754                           
 13755                           ; BSR set to: 2
 13756                           ;term.c: 793: }
 13757                           ;term.c: 794: break;
 13758  00128C  0012               	return	
 13759  00128E                     
 13760                           ; BSR set to: 2
 13761                           ;term.c: 798: if((cdc_trf_state == 0))
 13762                           
 13763                           ; BSR set to: 2
 13764  00128E  0100               	movlb	0	; () banked
 13765  001290  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13766  001292  A4D8               	btfss	status,2,c
 13767  001294  0012               	return	
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;term.c: 799: {
 13771                           ;term.c: 801: memset(Data,0,50);
 13772  001296  0E94               	movlw	low Term_MainSm@Data
 13773  001298  6F7D               	movwf	memset@p1& (0+255),b
 13774  00129A  0E04               	movlw	high Term_MainSm@Data
 13775  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13776  00129E  0E00               	movlw	0
 13777  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13778  0012A2  0E00               	movlw	0
 13779  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13780  0012A6  0E00               	movlw	0
 13781  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13782  0012AA  0E32               	movlw	50
 13783  0012AC  6F81               	movwf	memset@n& (0+255),b
 13784  0012AE  EC30  F02D         	call	_memset	;wreg free
 13785                           
 13786                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 13 2022");
 13787  0012B2  0E94               	movlw	low Term_MainSm@Data
 13788  0012B4  0100               	movlb	0	; () banked
 13789  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13790  0012B8  0E04               	movlw	high Term_MainSm@Data
 13791  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13792  0012BC  0E27               	movlw	low STR_27
 13793  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13794  0012C0  0EFF               	movlw	high STR_27
 13795  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13796  0012C4  0EB6               	movlw	low STR_28
 13797  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13798  0012C8  0EFF               	movlw	high STR_28
 13799  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13800  0012CC  ECD6  F01A         	call	_sprintf	;wreg free
 13801                           
 13802                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13803  0012D0  0E94               	movlw	low Term_MainSm@Data
 13804  0012D2  0100               	movlb	0	; () banked
 13805  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13806  0012D6  0E04               	movlw	high Term_MainSm@Data
 13807  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13808  0012DA  0E94               	movlw	low Term_MainSm@Data
 13809  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13810  0012DE  0E04               	movlw	high Term_MainSm@Data
 13811  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13812  0012E2  ECC1  F02B         	call	_strlen	;wreg free
 13813  0012E6  0100               	movlb	0	; () banked
 13814  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13815  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13816  0012EC  EC88  F02E         	call	_putUSBUSART	;wreg free
 13817                           
 13818                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13819  0012F0  0E07               	movlw	7
 13820  0012F2  0102               	movlb	2	; () banked
 13821  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13822                           
 13823                           ; BSR set to: 2
 13824                           ;term.c: 808: }
 13825                           ;term.c: 809: break;
 13826  0012F6  0012               	return	
 13827  0012F8                     
 13828                           ; BSR set to: 2
 13829                           ;term.c: 813: if((cdc_trf_state == 0))
 13830                           
 13831                           ; BSR set to: 2
 13832  0012F8  0100               	movlb	0	; () banked
 13833  0012FA  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13834  0012FC  A4D8               	btfss	status,2,c
 13835  0012FE  0012               	return	
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;term.c: 814: {
 13839                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13840  001300  0E5F               	movlw	low _MsgReady
 13841  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13842  001304  0EFE               	movlw	high _MsgReady
 13843  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13844  001308  0E16               	movlw	22
 13845  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13846  00130C  EC88  F02E         	call	_putUSBUSART	;wreg free
 13847                           
 13848                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13849  001310  0E08               	movlw	8
 13850  001312  0102               	movlb	2	; () banked
 13851  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13852                           
 13853                           ; BSR set to: 2
 13854                           ;term.c: 819: }
 13855                           ;term.c: 820: break;
 13856  001316  0012               	return	
 13857  001318                     
 13858                           ; BSR set to: 2
 13859                           ;term.c: 824: Terminal();
 13860                           
 13861                           ; BSR set to: 2
 13862  001318  EC68  F000         	call	_Terminal	;wreg free
 13863                           
 13864                           ;term.c: 829: }
 13865                           
 13866                           ;term.c: 828: break;
 13867                           
 13868                           ;term.c: 827: default:
 13869                           
 13870                           ;term.c: 825: break;
 13871  00131C  0012               	return	
 13872  00131E                     l2413:
 13873  00131E  0102               	movlb	2	; () banked
 13874  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 13875                           
 13876                           ; Switch size 1, requested type "space"
 13877                           ; Number of cases is 9, Range of values is 0 to 8
 13878                           ; switch strategies available:
 13879                           ; Name         Instructions Cycles
 13880                           ; simple_byte           28    15 (average)
 13881                           ;	Chosen strategy is simple_byte
 13882  001322  0A00               	xorlw	0	; case 0
 13883  001324  B4D8               	btfsc	status,2,c
 13884  001326  D6C8               	goto	l2414
 13885  001328  0A01               	xorlw	1	; case 1
 13886  00132A  B4D8               	btfsc	status,2,c
 13887  00132C  D6D8               	goto	l2416
 13888  00132E  0A03               	xorlw	3	; case 2
 13889  001330  B4D8               	btfsc	status,2,c
 13890  001332  D6E3               	goto	l2418
 13891  001334  0A01               	xorlw	1	; case 3
 13892  001336  B4D8               	btfsc	status,2,c
 13893  001338  D6EA               	goto	l2423
 13894  00133A  0A07               	xorlw	7	; case 4
 13895  00133C  B4D8               	btfsc	status,2,c
 13896  00133E  D6F7               	goto	l2425
 13897  001340  0A01               	xorlw	1	; case 5
 13898  001342  B4D8               	btfsc	status,2,c
 13899  001344  D704               	goto	l2427
 13900  001346  0A03               	xorlw	3	; case 6
 13901  001348  B4D8               	btfsc	status,2,c
 13902  00134A  D7A1               	goto	l2429
 13903  00134C  0A01               	xorlw	1	; case 7
 13904  00134E  B4D8               	btfsc	status,2,c
 13905  001350  D7D3               	goto	l2431
 13906  001352  0A0F               	xorlw	15	; case 8
 13907  001354  A4D8               	btfss	status,2,c
 13908  001356  0012               	return	
 13909  001358  D7DF               	goto	l2433
 13910  00135A                     __end_of_Term_MainSm:
 13911                           	opt stack 0
 13912                           tosu	equ	0xFFF
 13913                           tosh	equ	0xFFE
 13914                           tosl	equ	0xFFD
 13915                           pclath	equ	0xFFA
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           intcon2	equ	0xFF1
 13924                           intcon3	equ	0xFF0
 13925                           indf0	equ	0xFEF
 13926                           postinc0	equ	0xFEE
 13927                           plusw0	equ	0xFEB
 13928                           fsr0h	equ	0xFEA
 13929                           fsr0l	equ	0xFE9
 13930                           wreg	equ	0xFE8
 13931                           indf1	equ	0xFE7
 13932                           postinc1	equ	0xFE6
 13933                           postdec1	equ	0xFE5
 13934                           plusw1	equ	0xFE3
 13935                           fsr1h	equ	0xFE2
 13936                           fsr1l	equ	0xFE1
 13937                           indf2	equ	0xFDF
 13938                           postinc2	equ	0xFDE
 13939                           postdec2	equ	0xFDD
 13940                           plusw2	equ	0xFDB
 13941                           fsr2h	equ	0xFDA
 13942                           fsr2l	equ	0xFD9
 13943                           status	equ	0xFD8
 13944                           
 13945 ;; *************** function _strlen *****************
 13946 ;; Defined at:
 13947 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 13950 ;;		 -> Term_MainSm@Data(50), 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 13953 ;;		 -> Term_MainSm@Data(50), 
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  2   29[BANK0 ] unsigned int 
 13956 ;; Registers used:
 13957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;Total ram usage:        6 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:   11
 13970 ;; This function calls:
 13971 ;;		Nothing
 13972 ;; This function is called by:
 13973 ;;		_Term_MainSm
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text56
 13978  005782                     __ptext56:
 13979                           	opt stack 0
 13980  005782                     _strlen:
 13981                           	opt stack 15
 13982                           
 13983                           ;incstack = 0
 13984  005782  C07D  F081         	movff	strlen@s,strlen@cp
 13985  005786  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 13986  00578A  D003               	goto	l3201
 13987  00578C  0100               	movlb	0	; () banked
 13988  00578E  4B81               	infsnz	strlen@cp& (0+255),f,b
 13989  005790  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 13990  005792                     l3201:
 13991                           
 13992                           ; BSR set to: 0
 13993  005792  C081  FFD9         	movff	strlen@cp,fsr2l
 13994  005796  C082  FFDA         	movff	strlen@cp+1,fsr2h
 13995  00579A  50DF               	movf	indf2,w,c
 13996  00579C  A4D8               	btfss	status,2,c
 13997  00579E  D7F6               	goto	l3202
 13998  0057A0  C07D  F07F         	movff	strlen@s,??_strlen
 13999  0057A4  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14000  0057A8  0100               	movlb	0	; () banked
 14001  0057AA  1F7F               	comf	??_strlen& (0+255),f,b
 14002  0057AC  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14003  0057AE  4B7F               	infsnz	??_strlen& (0+255),f,b
 14004  0057B0  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14005  0057B2  5181               	movf	strlen@cp& (0+255),w,b
 14006  0057B4  257F               	addwf	??_strlen& (0+255),w,b
 14007  0057B6  6F7D               	movwf	?_strlen& (0+255),b
 14008  0057B8  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14009  0057BA  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14010  0057BC  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14011  0057BE  0012               	return	
 14012  0057C0                     __end_of_strlen:
 14013                           	opt stack 0
 14014                           tosu	equ	0xFFF
 14015                           tosh	equ	0xFFE
 14016                           tosl	equ	0xFFD
 14017                           pclath	equ	0xFFA
 14018                           tblptru	equ	0xFF8
 14019                           tblptrh	equ	0xFF7
 14020                           tblptrl	equ	0xFF6
 14021                           tablat	equ	0xFF5
 14022                           prodh	equ	0xFF4
 14023                           prodl	equ	0xFF3
 14024                           intcon	equ	0xFF2
 14025                           intcon2	equ	0xFF1
 14026                           intcon3	equ	0xFF0
 14027                           indf0	equ	0xFEF
 14028                           postinc0	equ	0xFEE
 14029                           plusw0	equ	0xFEB
 14030                           fsr0h	equ	0xFEA
 14031                           fsr0l	equ	0xFE9
 14032                           wreg	equ	0xFE8
 14033                           indf1	equ	0xFE7
 14034                           postinc1	equ	0xFE6
 14035                           postdec1	equ	0xFE5
 14036                           plusw1	equ	0xFE3
 14037                           fsr1h	equ	0xFE2
 14038                           fsr1l	equ	0xFE1
 14039                           indf2	equ	0xFDF
 14040                           postinc2	equ	0xFDE
 14041                           postdec2	equ	0xFDD
 14042                           plusw2	equ	0xFDB
 14043                           fsr2h	equ	0xFDA
 14044                           fsr2l	equ	0xFD9
 14045                           status	equ	0xFD8
 14046                           
 14047 ;; *************** function _strcat *****************
 14048 ;; Defined at:
 14049 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14050 ;; Parameters:    Size  Location     Type
 14051 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14052 ;;		 -> Term_MainSm@Data(50), 
 14053 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14054 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14055 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14058 ;;		 -> Term_MainSm@Data(50), 
 14059 ;; Return value:  Size  Location     Type
 14060 ;;                  2   29[BANK0 ] PTR unsigned char 
 14061 ;; Registers used:
 14062 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14063 ;; Tracked objects:
 14064 ;;		On entry : 0/0
 14065 ;;		On exit  : 0/0
 14066 ;;		Unchanged: 0/0
 14067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14072 ;;Total ram usage:        6 bytes
 14073 ;; Hardware stack levels used:    1
 14074 ;; Hardware stack levels required when called:   11
 14075 ;; This function calls:
 14076 ;;		Nothing
 14077 ;; This function is called by:
 14078 ;;		_Term_MainSm
 14079 ;; This function uses a non-reentrant model
 14080 ;;
 14081                           
 14082                           	psect	text57
 14083  004F1E                     __ptext57:
 14084                           	opt stack 0
 14085  004F1E                     _strcat:
 14086                           	opt stack 15
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;incstack = 0
 14090  004F1E  C07D  F081         	movff	strcat@to,strcat@cp
 14091  004F22  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14092  004F26  D003               	goto	l3186
 14093  004F28  0100               	movlb	0	; () banked
 14094  004F2A  4B81               	infsnz	strcat@cp& (0+255),f,b
 14095  004F2C  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14096  004F2E                     l3186:
 14097                           
 14098                           ; BSR set to: 0
 14099  004F2E  C081  FFD9         	movff	strcat@cp,fsr2l
 14100  004F32  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14101  004F36  50DF               	movf	indf2,w,c
 14102  004F38  B4D8               	btfsc	status,2,c
 14103  004F3A  D006               	goto	l3189
 14104  004F3C  D7F5               	goto	l3187
 14105  004F3E  0100               	movlb	0	; () banked
 14106  004F40  4B81               	infsnz	strcat@cp& (0+255),f,b
 14107  004F42  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14108  004F44  4B7F               	infsnz	strcat@from& (0+255),f,b
 14109  004F46  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14110  004F48                     l3189:
 14111                           
 14112                           ; BSR set to: 0
 14113  004F48  C07F  FFF6         	movff	strcat@from,tblptrl
 14114  004F4C  C080  FFF7         	movff	strcat@from+1,tblptrh
 14115  004F50  6AF8               	clrf	tblptru,c
 14116  004F52  C081  FFD9         	movff	strcat@cp,fsr2l
 14117  004F56  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14118  004F5A  0E0E               	movlw	(high __ramtop+-1)
 14119  004F5C  64F7               	cpfsgt	tblptrh,c
 14120  004F5E  D003               	bra	u12027
 14121  004F60  0008               	tblrd		*
 14122  004F62  50F5               	movf	tablat,w,c
 14123  004F64  D005               	bra	u12020
 14124  004F66                     u12027:
 14125  004F66  CFF6 FFE9          	movff	tblptrl,fsr0l
 14126  004F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14127  004F6E  50EF               	movf	indf0,w,c
 14128  004F70                     u12020:
 14129  004F70  6EDF               	movwf	indf2,c
 14130  004F72  50DF               	movf	indf2,w,c
 14131  004F74  B4D8               	btfsc	status,2,c
 14132  004F76  0012               	return	
 14133  004F78  D7E2               	goto	l3190
 14134  004F7A                     __end_of_strcat:
 14135                           	opt stack 0
 14136                           tosu	equ	0xFFF
 14137                           tosh	equ	0xFFE
 14138                           tosl	equ	0xFFD
 14139                           pclath	equ	0xFFA
 14140                           tblptru	equ	0xFF8
 14141                           tblptrh	equ	0xFF7
 14142                           tblptrl	equ	0xFF6
 14143                           tablat	equ	0xFF5
 14144                           prodh	equ	0xFF4
 14145                           prodl	equ	0xFF3
 14146                           intcon	equ	0xFF2
 14147                           intcon2	equ	0xFF1
 14148                           intcon3	equ	0xFF0
 14149                           indf0	equ	0xFEF
 14150                           postinc0	equ	0xFEE
 14151                           plusw0	equ	0xFEB
 14152                           fsr0h	equ	0xFEA
 14153                           fsr0l	equ	0xFE9
 14154                           wreg	equ	0xFE8
 14155                           indf1	equ	0xFE7
 14156                           postinc1	equ	0xFE6
 14157                           postdec1	equ	0xFE5
 14158                           plusw1	equ	0xFE3
 14159                           fsr1h	equ	0xFE2
 14160                           fsr1l	equ	0xFE1
 14161                           indf2	equ	0xFDF
 14162                           postinc2	equ	0xFDE
 14163                           postdec2	equ	0xFDD
 14164                           plusw2	equ	0xFDB
 14165                           fsr2h	equ	0xFDA
 14166                           fsr2l	equ	0xFD9
 14167                           status	equ	0xFD8
 14168                           
 14169 ;; *************** function _sprintf *****************
 14170 ;; Defined at:
 14171 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14174 ;;		 -> Term_MainSm@Data(50), 
 14175 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14176 ;;		 -> STR_27(17), 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  tmpval          4    0        struct .
 14179 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14180 ;;		 -> STR_29(7), STR_28(12), 
 14181 ;;  ap              2   36[BANK0 ] PTR void [1]
 14182 ;;		 -> ?_sprintf(2), 
 14183 ;;  len             2    0        unsigned int 
 14184 ;;  val             2    0        unsigned int 
 14185 ;;  c               1   38[BANK0 ] char 
 14186 ;;  flag            1   35[BANK0 ] unsigned char 
 14187 ;;  prec            1    0        char 
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  2   29[BANK0 ] int 
 14190 ;; Registers used:
 14191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14197 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14198 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14200 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14201 ;;Total ram usage:       12 bytes
 14202 ;; Hardware stack levels used:    1
 14203 ;; Hardware stack levels required when called:   11
 14204 ;; This function calls:
 14205 ;;		Nothing
 14206 ;; This function is called by:
 14207 ;;		_Term_MainSm
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text58
 14212  0035AC                     __ptext58:
 14213                           	opt stack 0
 14214  0035AC                     _sprintf:
 14215                           	opt stack 15
 14216                           
 14217                           ;doprnt.c: 494: va_list ap;
 14218                           ;doprnt.c: 499: signed char c;
 14219                           ;doprnt.c: 506: signed char prec;
 14220                           ;doprnt.c: 508: unsigned char flag;
 14221                           ;doprnt.c: 523: union {
 14222                           ;doprnt.c: 524: unsigned long vd;
 14223                           ;doprnt.c: 525: double integ;
 14224                           ;doprnt.c: 526: } tmpval;
 14225                           ;doprnt.c: 528: unsigned int val;
 14226                           ;doprnt.c: 529: unsigned len;
 14227                           ;doprnt.c: 530: const char * cp;
 14228                           ;doprnt.c: 533: *ap = __va_start();
 14229                           
 14230                           ;incstack = 0
 14231  0035AC  0E81               	movlw	low (?_sprintf+4)
 14232  0035AE  0100               	movlb	0	; () banked
 14233  0035B0  6F84               	movwf	sprintf@ap& (0+255),b
 14234  0035B2  0E00               	movlw	high (?_sprintf+4)
 14235  0035B4  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14236                           
 14237                           ;doprnt.c: 536: while(c = *f++) {
 14238  0035B6  D04E               	goto	l2590
 14239  0035B8                     
 14240                           ; BSR set to: 0
 14241                           ;doprnt.c: 538: if(c != '%')
 14242                           
 14243                           ; BSR set to: 0
 14244  0035B8  0E25               	movlw	37
 14245  0035BA  1986               	xorwf	sprintf@c& (0+255),w,b
 14246  0035BC  B4D8               	btfsc	status,2,c
 14247  0035BE  D009               	goto	l2580
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;doprnt.c: 540: {
 14251                           ;doprnt.c: 541: ((*sp++ = (c)));
 14252  0035C0  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14253  0035C4  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14254  0035C8  C086  FFDF         	movff	sprintf@c,indf2
 14255                           
 14256                           ; BSR set to: 0
 14257  0035CC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14258  0035CE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14259                           
 14260                           ;doprnt.c: 542: continue;
 14261  0035D0  D041               	goto	l2590
 14262  0035D2                     l2580:
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;doprnt.c: 543: }
 14266                           ;doprnt.c: 548: flag = 0;
 14267                           
 14268                           ; BSR set to: 0
 14269  0035D2  0E00               	movlw	0
 14270  0035D4  6F83               	movwf	sprintf@flag& (0+255),b
 14271                           
 14272                           ;doprnt.c: 635: switch(c = *f++) {
 14273  0035D6  D02E               	goto	l2581
 14274  0035D8                     
 14275                           ; BSR set to: 0
 14276                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14277                           
 14278                           ; BSR set to: 0
 14279  0035D8  C084  FFD9         	movff	sprintf@ap,fsr2l
 14280  0035DC  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14281  0035E0  CFDE F087          	movff	postinc2,sprintf@cp
 14282  0035E4  CFDD F088          	movff	postdec2,sprintf@cp+1
 14283                           
 14284                           ; BSR set to: 0
 14285  0035E8  0E02               	movlw	2
 14286  0035EA  2784               	addwf	sprintf@ap& (0+255),f,b
 14287  0035EC  0E00               	movlw	0
 14288  0035EE  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;doprnt.c: 740: if(!cp)
 14292  0035F0  5187               	movf	sprintf@cp& (0+255),w,b
 14293  0035F2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14294  0035F4  A4D8               	btfss	status,2,c
 14295  0035F6  D014               	goto	l2586
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;doprnt.c: 741: cp = "(null)";
 14299  0035F8  0ED7               	movlw	low STR_29
 14300  0035FA  6F87               	movwf	sprintf@cp& (0+255),b
 14301  0035FC  0EFF               	movlw	high STR_29
 14302  0035FE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;doprnt.c: 777: while(*cp)
 14306  003600  D00F               	goto	l2586
 14307  003602                     
 14308                           ; BSR set to: 0
 14309                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14310                           
 14311                           ; BSR set to: 0
 14312  003602  C087  FFF6         	movff	sprintf@cp,tblptrl
 14313  003606  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14314  00360A                     	if	0	;tblptru may be non-zero
 14315  00360A                     	endif
 14316  00360A                     	if	0	;tblptru may be non-zero
 14317  00360A                     	endif
 14318  00360A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14319  00360E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14320  003612  0008               	tblrd		*
 14321  003614  CFF5 FFDF          	movff	tablat,indf2
 14322                           
 14323                           ; BSR set to: 0
 14324  003618  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14325  00361A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14326                           
 14327                           ; BSR set to: 0
 14328  00361C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14329  00361E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14330  003620                     l2586:
 14331                           
 14332                           ; BSR set to: 0
 14333                           
 14334                           ; BSR set to: 0
 14335  003620  C087  FFF6         	movff	sprintf@cp,tblptrl
 14336  003624  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14337  003628                     	if	0	;tblptru may be non-zero
 14338  003628                     	endif
 14339  003628                     	if	0	;tblptru may be non-zero
 14340  003628                     	endif
 14341  003628  0008               	tblrd		*
 14342  00362A  50F5               	movf	tablat,w,c
 14343  00362C  0900               	iorlw	0
 14344  00362E  B4D8               	btfsc	status,2,c
 14345  003630  D011               	goto	l2590
 14346  003632  D7E7               	goto	l2587
 14347  003634                     l2581:
 14348                           
 14349                           ; BSR set to: 0
 14350                           
 14351                           ; BSR set to: 0
 14352  003634  C07F  FFF6         	movff	sprintf@f,tblptrl
 14353  003638  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14354  00363C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14355  00363E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14356  003640                     	if	0	;tblptru may be non-zero
 14357  003640                     	endif
 14358  003640                     	if	0	;tblptru may be non-zero
 14359  003640                     	endif
 14360  003640  0008               	tblrd		*
 14361  003642  CFF5 F086          	movff	tablat,sprintf@c
 14362  003646  5186               	movf	sprintf@c& (0+255),w,b
 14363                           
 14364                           ; Switch size 1, requested type "space"
 14365                           ; Number of cases is 2, Range of values is 0 to 115
 14366                           ; switch strategies available:
 14367                           ; Name         Instructions Cycles
 14368                           ; simple_byte            7     4 (average)
 14369                           ;	Chosen strategy is simple_byte
 14370  003648  0A00               	xorlw	0	; case 0
 14371  00364A  B4D8               	btfsc	status,2,c
 14372  00364C  D00F               	goto	u12080
 14373  00364E  0A73               	xorlw	115	; case 115
 14374  003650  B4D8               	btfsc	status,2,c
 14375  003652  D7C2               	goto	l2584
 14376  003654                     l2590:
 14377                           
 14378                           ; BSR set to: 0
 14379                           
 14380                           ; BSR set to: 0
 14381                           
 14382                           ;doprnt.c: 1422: {
 14383                           
 14384                           ; BSR set to: 0
 14385  003654  C07F  FFF6         	movff	sprintf@f,tblptrl
 14386  003658  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14387  00365C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14388  00365E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14389  003660                     	if	0	;tblptru may be non-zero
 14390  003660                     	endif
 14391  003660                     	if	0	;tblptru may be non-zero
 14392  003660                     	endif
 14393  003660  0008               	tblrd		*
 14394  003662  CFF5 F086          	movff	tablat,sprintf@c
 14395  003666  5186               	movf	sprintf@c& (0+255),w,b
 14396  003668  A4D8               	btfss	status,2,c
 14397  00366A  D7A6               	goto	l2579
 14398  00366C                     u12080:
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;doprnt.c: 1538: *sp = 0;
 14402                           
 14403                           ; BSR set to: 0
 14404                           
 14405                           ;doprnt.c: 1469: }
 14406                           ;doprnt.c: 1533: }
 14407                           ;doprnt.c: 1535: alldone:
 14408                           
 14409                           ; BSR set to: 0
 14410  00366C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14411  003670  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14412  003674  0E00               	movlw	0
 14413  003676  6EDF               	movwf	indf2,c
 14414  003678  0012               	return	
 14415  00367A                     __end_of_sprintf:
 14416                           	opt stack 0
 14417                           tosu	equ	0xFFF
 14418                           tosh	equ	0xFFE
 14419                           tosl	equ	0xFFD
 14420                           pclath	equ	0xFFA
 14421                           tblptru	equ	0xFF8
 14422                           tblptrh	equ	0xFF7
 14423                           tblptrl	equ	0xFF6
 14424                           tablat	equ	0xFF5
 14425                           prodh	equ	0xFF4
 14426                           prodl	equ	0xFF3
 14427                           intcon	equ	0xFF2
 14428                           intcon2	equ	0xFF1
 14429                           intcon3	equ	0xFF0
 14430                           indf0	equ	0xFEF
 14431                           postinc0	equ	0xFEE
 14432                           plusw0	equ	0xFEB
 14433                           fsr0h	equ	0xFEA
 14434                           fsr0l	equ	0xFE9
 14435                           wreg	equ	0xFE8
 14436                           indf1	equ	0xFE7
 14437                           postinc1	equ	0xFE6
 14438                           postdec1	equ	0xFE5
 14439                           plusw1	equ	0xFE3
 14440                           fsr1h	equ	0xFE2
 14441                           fsr1l	equ	0xFE1
 14442                           indf2	equ	0xFDF
 14443                           postinc2	equ	0xFDE
 14444                           postdec2	equ	0xFDD
 14445                           plusw2	equ	0xFDB
 14446                           fsr2h	equ	0xFDA
 14447                           fsr2l	equ	0xFD9
 14448                           status	equ	0xFD8
 14449                           
 14450 ;; *************** function _memset *****************
 14451 ;; Defined at:
 14452 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  p1              2   29[BANK0 ] PTR void 
 14455 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14456 ;;  c               2   31[BANK0 ] int 
 14457 ;;  n               2   33[BANK0 ] unsigned int 
 14458 ;; Auto vars:     Size  Location     Type
 14459 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14460 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  2   29[BANK0 ] PTR void 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14474 ;;Total ram usage:        8 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:   11
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_USBDeviceInit
 14481 ;;		_USBStdSetCfgHandler
 14482 ;;		_Term_MainSm
 14483 ;; This function uses a non-reentrant model
 14484 ;;
 14485                           
 14486                           	psect	text59
 14487  005A60                     __ptext59:
 14488                           	opt stack 0
 14489  005A60                     _memset:
 14490                           	opt stack 14
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;incstack = 0
 14494  005A60  C07D  F083         	movff	memset@p1,memset@p
 14495  005A64  C07E  F084         	movff	memset@p1+1,memset@p+1
 14496  005A68  D009               	goto	l3060
 14497  005A6A                     l11485:
 14498  005A6A  C083  FFD9         	movff	memset@p,fsr2l
 14499  005A6E  C084  FFDA         	movff	memset@p+1,fsr2h
 14500  005A72  C07F  FFDF         	movff	memset@c,indf2
 14501  005A76  0100               	movlb	0	; () banked
 14502  005A78  4B83               	infsnz	memset@p& (0+255),f,b
 14503  005A7A  2B84               	incf	(memset@p+1)& (0+255),f,b
 14504  005A7C                     l3060:
 14505                           
 14506                           ; BSR set to: 0
 14507  005A7C  0100               	movlb	0	; () banked
 14508  005A7E  0781               	decf	memset@n& (0+255),f,b
 14509  005A80  A0D8               	btfss	status,0,c
 14510  005A82  0782               	decf	(memset@n+1)& (0+255),f,b
 14511  005A84  2981               	incf	memset@n& (0+255),w,b
 14512  005A86  E1F1               	bnz	l11485
 14513  005A88  2982               	incf	(memset@n+1)& (0+255),w,b
 14514  005A8A  B4D8               	btfsc	status,2,c
 14515  005A8C  0012               	return	
 14516  005A8E  D7ED               	goto	l3061
 14517  005A90                     __end_of_memset:
 14518                           	opt stack 0
 14519                           tosu	equ	0xFFF
 14520                           tosh	equ	0xFFE
 14521                           tosl	equ	0xFFD
 14522                           pclath	equ	0xFFA
 14523                           tblptru	equ	0xFF8
 14524                           tblptrh	equ	0xFF7
 14525                           tblptrl	equ	0xFF6
 14526                           tablat	equ	0xFF5
 14527                           prodh	equ	0xFF4
 14528                           prodl	equ	0xFF3
 14529                           intcon	equ	0xFF2
 14530                           intcon2	equ	0xFF1
 14531                           intcon3	equ	0xFF0
 14532                           indf0	equ	0xFEF
 14533                           postinc0	equ	0xFEE
 14534                           plusw0	equ	0xFEB
 14535                           fsr0h	equ	0xFEA
 14536                           fsr0l	equ	0xFE9
 14537                           wreg	equ	0xFE8
 14538                           indf1	equ	0xFE7
 14539                           postinc1	equ	0xFE6
 14540                           postdec1	equ	0xFE5
 14541                           plusw1	equ	0xFE3
 14542                           fsr1h	equ	0xFE2
 14543                           fsr1l	equ	0xFE1
 14544                           indf2	equ	0xFDF
 14545                           postinc2	equ	0xFDE
 14546                           postdec2	equ	0xFDD
 14547                           plusw2	equ	0xFDB
 14548                           fsr2h	equ	0xFDA
 14549                           fsr2l	equ	0xFD9
 14550                           status	equ	0xFD8
 14551                           
 14552 ;; *************** function _Terminal *****************
 14553 ;; Defined at:
 14554 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;		None
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;  i               1   68[BANK0 ] unsigned char 
 14559 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14560 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14561 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14562 ;;  Index           1   70[BANK0 ] unsigned char 
 14563 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14574 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14577 ;;Total ram usage:      455 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; Hardware stack levels required when called:   15
 14580 ;; This function calls:
 14581 ;;		_I2cSlv_I2cReadMsgSts
 14582 ;;		_I2cSlv_ReceiveI2cMsg
 14583 ;;		_I2cSlv_SendI2cMsg
 14584 ;;		_OsTmr_Wait
 14585 ;;		_atoi
 14586 ;;		_getsUSBUSART
 14587 ;;		_itoa
 14588 ;;		_putUSBUSART
 14589 ;;		_strcpy
 14590 ;;		_strtol
 14591 ;;		_xtoi
 14592 ;; This function is called by:
 14593 ;;		_Term_MainSm
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text60
 14598  0000D0                     __ptext60:
 14599                           	opt stack 0
 14600  0000D0                     _Terminal:
 14601                           	opt stack 11
 14602                           
 14603                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14604                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14605                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14606                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14607                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14608                           ;term.c: 435: UINT8 Index;
 14609                           ;term.c: 436: static UINT8 Len[4];
 14610                           ;term.c: 437: static UINT8 PackageLen;
 14611                           ;term.c: 438: static UINT8 Addr[4];
 14612                           ;term.c: 439: static UINT8 SlaveAddr;
 14613                           ;term.c: 440: static PayloadType Payload[20u];
 14614                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14615                           
 14616                           ; BSR set to: 0
 14617                           ;incstack = 0
 14618  0000D0  0E00               	movlw	0
 14619  0000D2  0100               	movlb	0	; () banked
 14620  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14621                           
 14622                           ; BSR set to: 0
 14623                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14624                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14625                           ;term.c: 445: static SwTimerType SwTimer;
 14626                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14627  0000D6  0E1F               	movlw	31
 14628  0000D8  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 14629  0000DA  0012               	return	
 14630                           
 14631                           ; BSR set to: 0
 14632  0000DC  B265               	btfsc	3941,1,c	;volatile
 14633  0000DE  0012               	return	
 14634  0000E0  D278               	goto	l2353
 14635  0000E2                     
 14636                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14637                           
 14638                           ; BSR set to: 0
 14639  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14640  0000E4  0100               	movlb	0	; () banked
 14641  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14642  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14643  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14644  0000EC  0EC8               	movlw	200
 14645  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14646  0000F0  EC0A  F023         	call	_getsUSBUSART	;wreg free
 14647  0000F4  0100               	movlb	0	; () banked
 14648  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;term.c: 458: if (ReceivedBytes > 0)
 14652  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14653  0000FA  B4D8               	btfsc	status,2,c
 14654  0000FC  0012               	return	
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;term.c: 459: {
 14658                           ;term.c: 461: if (EchoOption == 1u)
 14659  0000FE  0102               	movlb	2	; () banked
 14660  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14661  000102  A4D8               	btfss	status,2,c
 14662  000104  D026               	goto	l2357
 14663                           
 14664                           ; BSR set to: 2
 14665                           ;term.c: 462: {
 14666                           ;term.c: 464: if((cdc_trf_state == 0))
 14667  000106  0100               	movlb	0	; () banked
 14668  000108  51C1               	movf	_cdc_trf_state& (0+255),w,b
 14669  00010A  A4D8               	btfss	status,2,c
 14670  00010C  D022               	goto	l2357
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;term.c: 465: {
 14674                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14675  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14676  000110  0D01               	mullw	1
 14677  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14678  000114  24F3               	addwf	prodl,w,c
 14679  000116  6ED9               	movwf	fsr2l,c
 14680  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14681  00011A  20F4               	addwfc	prodh,w,c
 14682  00011C  6EDA               	movwf	fsr2h,c
 14683  00011E  0E0D               	movlw	13
 14684  000120  6EDF               	movwf	indf2,c
 14685                           
 14686                           ; BSR set to: 0
 14687                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14688  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14689  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14690  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14691  000128  0E01               	movlw	1
 14692  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14693  00012C  0E00               	movlw	0
 14694  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14695  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14696  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14697  000134  6ED9               	movwf	fsr2l,c
 14698  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14699  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14700  00013A  6EDA               	movwf	fsr2h,c
 14701  00013C  0E0A               	movlw	10
 14702  00013E  6EDF               	movwf	indf2,c
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14706  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14707  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14708  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14709  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14710  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14711  00014A  0F02               	addlw	2
 14712  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14713  00014E  EC88  F02E         	call	_putUSBUSART	;wreg free
 14714  000152                     l2357:
 14715                           
 14716                           ;term.c: 469: }
 14717                           ;term.c: 470: }
 14718                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14719                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14720                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14721  000152  0E53               	movlw	83
 14722  000154  010A               	movlb	10	; () banked
 14723  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14724  000158  A4D8               	btfss	status,2,c
 14725  00015A  D043               	goto	l2358
 14726                           
 14727                           ; BSR set to: 10
 14728  00015C  0E4F               	movlw	79
 14729  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14730  000160  A4D8               	btfss	status,2,c
 14731  000162  D03F               	goto	l2358
 14732                           
 14733                           ; BSR set to: 10
 14734  000164  0E3A               	movlw	58
 14735  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14736  000168  A4D8               	btfss	status,2,c
 14737  00016A  D03B               	goto	l2358
 14738                           
 14739                           ; BSR set to: 10
 14740                           ;term.c: 476: {
 14741                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14742  00016C  0E47               	movlw	71
 14743  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14744  000170  A4D8               	btfss	status,2,c
 14745  000172  0012               	return	
 14746                           
 14747                           ; BSR set to: 10
 14748  000174  0E3A               	movlw	58
 14749  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14750  000178  A4D8               	btfss	status,2,c
 14751  00017A  0012               	return	
 14752                           
 14753                           ; BSR set to: 10
 14754                           ;term.c: 479: {
 14755                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14756  00017C  0E44               	movlw	68
 14757  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14758  000180  A4D8               	btfss	status,2,c
 14759  000182  D015               	goto	l2360
 14760                           
 14761                           ; BSR set to: 10
 14762  000184  0E46               	movlw	70
 14763  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14764  000188  A4D8               	btfss	status,2,c
 14765  00018A  D011               	goto	l2360
 14766                           
 14767                           ; BSR set to: 10
 14768                           ;term.c: 482: {
 14769                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14770  00018C  0E41               	movlw	65
 14771  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14772  000190  A4D8               	btfss	status,2,c
 14773  000192  D004               	goto	l2361
 14774                           
 14775                           ; BSR set to: 10
 14776                           ;term.c: 484: {
 14777                           ;term.c: 485: FormatOption = 1u;
 14778  000194  0E01               	movlw	1
 14779  000196  0102               	movlb	2	; () banked
 14780  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14781                           
 14782                           ;term.c: 486: }
 14783  00019A  0012               	return	
 14784  00019C                     l2361:
 14785                           
 14786                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14787                           
 14788                           ; BSR set to: 2
 14789  00019C  0E42               	movlw	66
 14790  00019E  010A               	movlb	10	; () banked
 14791  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14792  0001A2  A4D8               	btfss	status,2,c
 14793  0001A4  0012               	return	
 14794                           
 14795                           ; BSR set to: 10
 14796                           ;term.c: 488: {
 14797                           ;term.c: 489: FormatOption = 0u;
 14798  0001A6  0E00               	movlw	0
 14799  0001A8  0102               	movlb	2	; () banked
 14800  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14801                           
 14802                           ; BSR set to: 2
 14803                           ;term.c: 490: }
 14804                           ;term.c: 491: }
 14805                           
 14806                           ; BSR set to: 2
 14807  0001AC  0012               	return	
 14808  0001AE                     l2360:
 14809                           
 14810                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14811                           
 14812                           ; BSR set to: 2
 14813  0001AE  0E45               	movlw	69
 14814  0001B0  010A               	movlb	10	; () banked
 14815  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14816  0001B4  A4D8               	btfss	status,2,c
 14817  0001B6  0012               	return	
 14818                           
 14819                           ; BSR set to: 10
 14820  0001B8  0E4D               	movlw	77
 14821  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14822  0001BC  A4D8               	btfss	status,2,c
 14823  0001BE  0012               	return	
 14824                           
 14825                           ; BSR set to: 10
 14826                           ;term.c: 494: {
 14827                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14828  0001C0  0E31               	movlw	49
 14829  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14830  0001C4  A4D8               	btfss	status,2,c
 14831  0001C6  D004               	goto	l2366
 14832                           
 14833                           ; BSR set to: 10
 14834                           ;term.c: 496: {
 14835                           ;term.c: 497: EchoOption = 1u;
 14836  0001C8  0E01               	movlw	1
 14837  0001CA  0102               	movlb	2	; () banked
 14838  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14839                           
 14840                           ;term.c: 498: }
 14841  0001CE  0012               	return	
 14842  0001D0                     l2366:
 14843                           
 14844                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14845                           
 14846                           ; BSR set to: 2
 14847  0001D0  0E30               	movlw	48
 14848  0001D2  010A               	movlb	10	; () banked
 14849  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14850  0001D6  A4D8               	btfss	status,2,c
 14851  0001D8  0012               	return	
 14852                           
 14853                           ; BSR set to: 10
 14854                           ;term.c: 500: {
 14855                           ;term.c: 501: EchoOption = 0u;
 14856  0001DA  0E00               	movlw	0
 14857  0001DC  0102               	movlb	2	; () banked
 14858  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14859                           
 14860                           ; BSR set to: 2
 14861                           ;term.c: 507: }
 14862                           ;term.c: 508: }
 14863                           ;term.c: 509: }
 14864                           
 14865                           ; BSR set to: 2
 14866                           
 14867                           ; BSR set to: 2
 14868                           
 14869                           ;term.c: 504: else
 14870                           ;term.c: 505: {
 14871                           
 14872                           ; BSR set to: 2
 14873                           
 14874                           ; BSR set to: 2
 14875                           ;term.c: 502: }
 14876                           ;term.c: 503: }
 14877                           
 14878                           ; BSR set to: 2
 14879  0001E0  0012               	return	
 14880  0001E2                     l2358:
 14881                           
 14882                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 14883                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 14884                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14885                           
 14886                           ; BSR set to: 2
 14887  0001E2  0E53               	movlw	83
 14888  0001E4  010A               	movlb	10	; () banked
 14889  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14890  0001E8  A4D8               	btfss	status,2,c
 14891  0001EA  D0D3               	goto	l2371
 14892                           
 14893                           ; BSR set to: 10
 14894  0001EC  0E42               	movlw	66
 14895  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14896  0001F0  A4D8               	btfss	status,2,c
 14897  0001F2  D0CF               	goto	l2371
 14898                           
 14899                           ; BSR set to: 10
 14900  0001F4  0E3A               	movlw	58
 14901  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14902  0001F8  A4D8               	btfss	status,2,c
 14903  0001FA  D0CB               	goto	l2371
 14904                           
 14905                           ; BSR set to: 10
 14906                           ;term.c: 513: {
 14907                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14908  0001FC  0E57               	movlw	87
 14909  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14910  000200  A4D8               	btfss	status,2,c
 14911  000202  D091               	goto	l2372
 14912                           
 14913                           ; BSR set to: 10
 14914  000204  0E3A               	movlw	58
 14915  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14916  000208  A4D8               	btfss	status,2,c
 14917  00020A  D08D               	goto	l2372
 14918                           
 14919                           ; BSR set to: 10
 14920                           ;term.c: 515: {
 14921                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14922  00020C  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14923                           
 14924                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14925  000210  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14926                           
 14927                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14928  000214  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14929                           
 14930                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14931  000218  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14932                           
 14933                           ; BSR set to: 10
 14934                           ;term.c: 523: PackageLen = atoi((void*)Len);
 14935  00021C  0EAD               	movlw	low Terminal@Len
 14936  00021E  0100               	movlb	0	; () banked
 14937  000220  6F83               	movwf	atoi@s& (0+255),b
 14938  000222  0E03               	movlw	high Terminal@Len
 14939  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 14940  000226  EC6A  F01A         	call	_atoi	;wreg free
 14941  00022A  0100               	movlb	0	; () banked
 14942  00022C  5183               	movf	?_atoi& (0+255),w,b
 14943  00022E  0102               	movlb	2	; () banked
 14944  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 14945                           
 14946                           ; BSR set to: 2
 14947                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 14948  000232  0EA9               	movlw	low Terminal@Addr
 14949  000234  0100               	movlb	0	; () banked
 14950  000236  6F83               	movwf	xtoi@s& (0+255),b
 14951  000238  0E03               	movlw	high Terminal@Addr
 14952  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 14953  00023C  EC19  F019         	call	_xtoi	;wreg free
 14954  000240  0100               	movlb	0	; () banked
 14955  000242  5183               	movf	?_xtoi& (0+255),w,b
 14956  000244  0102               	movlb	2	; () banked
 14957  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 14958                           
 14959                           ; BSR set to: 2
 14960                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 14961  000248  0E00               	movlw	0
 14962  00024A  0100               	movlb	0	; () banked
 14963  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 14964  00024E  D032               	goto	l2373
 14965  000250                     
 14966                           ;term.c: 527: {
 14967                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 14968                           
 14969                           ; BSR set to: 0
 14970  000250  0100               	movlb	0	; () banked
 14971  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 14972  000254  0D02               	mullw	2
 14973  000256  0E0B               	movlw	11
 14974  000258  26F3               	addwf	prodl,f,c
 14975  00025A  0E00               	movlw	0
 14976  00025C  22F4               	addwfc	prodh,f,c
 14977  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 14978  000260  24F3               	addwf	prodl,w,c
 14979  000262  6ED9               	movwf	fsr2l,c
 14980  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 14981  000266  20F4               	addwfc	prodh,w,c
 14982  000268  6EDA               	movwf	fsr2h,c
 14983  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 14984  00026C  0D04               	mullw	4
 14985  00026E  0E00               	movlw	low Terminal@Payload
 14986  000270  24F3               	addwf	prodl,w,c
 14987  000272  6EE1               	movwf	fsr1l,c
 14988  000274  0E05               	movlw	high Terminal@Payload
 14989  000276  20F4               	addwfc	prodh,w,c
 14990  000278  6EE2               	movwf	fsr1h,c
 14991  00027A  CFDF FFE7          	movff	indf2,indf1
 14992                           
 14993                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 14994  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 14995  000280  0D02               	mullw	2
 14996  000282  0E0C               	movlw	12
 14997  000284  26F3               	addwf	prodl,f,c
 14998  000286  0E00               	movlw	0
 14999  000288  22F4               	addwfc	prodh,f,c
 15000  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15001  00028C  24F3               	addwf	prodl,w,c
 15002  00028E  6ED9               	movwf	fsr2l,c
 15003  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15004  000292  20F4               	addwfc	prodh,w,c
 15005  000294  6EDA               	movwf	fsr2h,c
 15006  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15007  000298  0D04               	mullw	4
 15008  00029A  0E01               	movlw	1
 15009  00029C  26F3               	addwf	prodl,f,c
 15010  00029E  0E00               	movlw	0
 15011  0002A0  22F4               	addwfc	prodh,f,c
 15012  0002A2  0E00               	movlw	low Terminal@Payload
 15013  0002A4  24F3               	addwf	prodl,w,c
 15014  0002A6  6EE1               	movwf	fsr1l,c
 15015  0002A8  0E05               	movlw	high Terminal@Payload
 15016  0002AA  20F4               	addwfc	prodh,w,c
 15017  0002AC  6EE2               	movwf	fsr1h,c
 15018  0002AE  CFDF FFE7          	movff	indf2,indf1
 15019                           
 15020                           ; BSR set to: 0
 15021  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15022  0002B4                     l2373:
 15023                           
 15024                           ; BSR set to: 0
 15025                           
 15026                           ; BSR set to: 0
 15027  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15028  0002B6  0102               	movlb	2	; () banked
 15029  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15030  0002BA  B0D8               	btfsc	status,0,c
 15031  0002BC  D7C9               	goto	l2374
 15032                           
 15033                           ; BSR set to: 2
 15034                           ;term.c: 530: }
 15035                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15036                           
 15037                           ; BSR set to: 2
 15038  0002BE  0E00               	movlw	0
 15039  0002C0  0100               	movlb	0	; () banked
 15040  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15041  0002C4  D01F               	goto	l2376
 15042  0002C6                     
 15043                           ;term.c: 533: {
 15044                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15045                           
 15046                           ; BSR set to: 0
 15047  0002C6  0100               	movlb	0	; () banked
 15048  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15049  0002CA  0D04               	mullw	4
 15050  0002CC  0E00               	movlw	low Terminal@Payload
 15051  0002CE  24F3               	addwf	prodl,w,c
 15052  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15053  0002D2  0E05               	movlw	high Terminal@Payload
 15054  0002D4  20F4               	addwfc	prodh,w,c
 15055  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15056  0002D8  0E00               	movlw	0
 15057  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15058  0002DC  0E00               	movlw	0
 15059  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15060  0002E0  0E00               	movlw	0
 15061  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15062  0002E4  0E10               	movlw	16
 15063  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15064  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15065  0002EC  0100               	movlb	0	; () banked
 15066  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15067  0002F0  0D01               	mullw	1
 15068  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15069  0002F4  24F3               	addwf	prodl,w,c
 15070  0002F6  6ED9               	movwf	fsr2l,c
 15071  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15072  0002FA  20F4               	addwfc	prodh,w,c
 15073  0002FC  6EDA               	movwf	fsr2h,c
 15074  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15075                           
 15076                           ; BSR set to: 0
 15077  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15078  000304                     l2376:
 15079                           
 15080                           ; BSR set to: 0
 15081                           
 15082                           ; BSR set to: 0
 15083  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15084  000306  0102               	movlb	2	; () banked
 15085  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15086  00030A  B0D8               	btfsc	status,0,c
 15087  00030C  D7DC               	goto	l2377
 15088                           
 15089                           ; BSR set to: 2
 15090                           ;term.c: 539: }
 15091                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15092                           
 15093                           ; BSR set to: 2
 15094  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15095  000310  0100               	movlb	0	; () banked
 15096  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15097  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15098  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15099  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15100  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15101  000320  ECE0  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 15102                           
 15103                           ;term.c: 543: }
 15104  000324  0012               	return	
 15105  000326                     l2372:
 15106                           
 15107                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15108  000326  0E52               	movlw	82
 15109  000328  010A               	movlb	10	; () banked
 15110  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15111  00032C  A4D8               	btfss	status,2,c
 15112  00032E  0012               	return	
 15113                           
 15114                           ; BSR set to: 10
 15115  000330  0E3A               	movlw	58
 15116  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15117  000334  A4D8               	btfss	status,2,c
 15118  000336  0012               	return	
 15119                           
 15120                           ; BSR set to: 10
 15121                           ;term.c: 545: {
 15122                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15123  000338  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15124                           
 15125                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15126  00033C  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15127                           
 15128                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15129  000340  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15130                           
 15131                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15132  000344  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15133                           
 15134                           ; BSR set to: 10
 15135                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15136  000348  0EAD               	movlw	low Terminal@Len
 15137  00034A  0100               	movlb	0	; () banked
 15138  00034C  6F83               	movwf	atoi@s& (0+255),b
 15139  00034E  0E03               	movlw	high Terminal@Len
 15140  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15141  000352  EC6A  F01A         	call	_atoi	;wreg free
 15142  000356  0100               	movlb	0	; () banked
 15143  000358  5183               	movf	?_atoi& (0+255),w,b
 15144  00035A  0102               	movlb	2	; () banked
 15145  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15146                           
 15147                           ; BSR set to: 2
 15148                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15149  00035E  0EA9               	movlw	low Terminal@Addr
 15150  000360  0100               	movlb	0	; () banked
 15151  000362  6F83               	movwf	xtoi@s& (0+255),b
 15152  000364  0E03               	movlw	high Terminal@Addr
 15153  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15154  000368  EC19  F019         	call	_xtoi	;wreg free
 15155  00036C  0100               	movlb	0	; () banked
 15156  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15157  000370  0102               	movlb	2	; () banked
 15158  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15159                           
 15160                           ; BSR set to: 2
 15161                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15162  000374  0E50               	movlw	low Terminal@TermRxBuffer
 15163  000376  0100               	movlb	0	; () banked
 15164  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15165  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15166  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15167  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15168  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15169  000386  EC61  F02B         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15170                           
 15171                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15172  00038A  0E01               	movlw	1
 15173  00038C  0102               	movlb	2	; () banked
 15174  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15175                           
 15176                           ; BSR set to: 2
 15177                           ;term.c: 561: }
 15178                           ;term.c: 562: }
 15179                           
 15180                           ; BSR set to: 2
 15181  000390  0012               	return	
 15182  000392                     l2371:
 15183                           
 15184                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15185                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15186                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15187                           
 15188                           ; BSR set to: 2
 15189  000392  0E54               	movlw	84
 15190  000394  010A               	movlb	10	; () banked
 15191  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15192  000398  A4D8               	btfss	status,2,c
 15193  00039A  0012               	return	
 15194                           
 15195                           ; BSR set to: 10
 15196  00039C  0E45               	movlw	69
 15197  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15198  0003A0  A4D8               	btfss	status,2,c
 15199  0003A2  0012               	return	
 15200                           
 15201                           ; BSR set to: 10
 15202  0003A4  0E4C               	movlw	76
 15203  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15204  0003A8  A4D8               	btfss	status,2,c
 15205  0003AA  0012               	return	
 15206                           
 15207                           ; BSR set to: 10
 15208                           ;term.c: 566: {
 15209                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15210  0003AC  CA03  F3AD         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15211                           
 15212                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15213  0003B0  CA04  F3AE         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15214                           
 15215                           ; BSR set to: 10
 15216                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15217  0003B4  0EAD               	movlw	low Terminal@Len
 15218  0003B6  0100               	movlb	0	; () banked
 15219  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15220  0003BA  0E03               	movlw	high Terminal@Len
 15221  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15222  0003BE  EC6A  F01A         	call	_atoi	;wreg free
 15223  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15224  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15225                           
 15226                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15227  0003CA  0E00               	movlw	0
 15228  0003CC  0100               	movlb	0	; () banked
 15229  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15230  0003D0  D018               	goto	l2383
 15231  0003D2                     
 15232                           ; BSR set to: 0
 15233                           ;term.c: 573: {
 15234                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15235                           
 15236                           ; BSR set to: 0
 15237  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15238  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15239  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15240  0003D8  0E05               	movlw	5
 15241  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15242  0003DC  0E00               	movlw	0
 15243  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15244  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15245  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15246  0003E4  6ED9               	movwf	fsr2l,c
 15247  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15248  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15249  0003EA  6EDA               	movwf	fsr2h,c
 15250  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15251  0003EE  0D01               	mullw	1
 15252  0003F0  0EC6               	movlw	low _PhoneNumber
 15253  0003F2  24F3               	addwf	prodl,w,c
 15254  0003F4  6EE1               	movwf	fsr1l,c
 15255  0003F6  0E04               	movlw	high _PhoneNumber
 15256  0003F8  20F4               	addwfc	prodh,w,c
 15257  0003FA  6EE2               	movwf	fsr1h,c
 15258  0003FC  CFDF FFE7          	movff	indf2,indf1
 15259                           
 15260                           ; BSR set to: 0
 15261  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15262  000402                     l2383:
 15263                           
 15264                           ; BSR set to: 0
 15265                           
 15266                           ; BSR set to: 0
 15267  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15268  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15269  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15270  000408  0103               	movlb	3	; () banked
 15271  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15272  00040C  0100               	movlb	0	; () banked
 15273  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15274  000410  0103               	movlb	3	; () banked
 15275  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15276  000414  0100               	movlb	0	; () banked
 15277  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15278  000418  B0D8               	btfsc	status,0,c
 15279  00041A  0012               	return	
 15280  00041C  D7DA               	goto	l2384
 15281  00041E                     
 15282                           ;term.c: 619: if((cdc_trf_state == 0))
 15283                           
 15284                           ; BSR set to: 0
 15285  00041E  0100               	movlb	0	; () banked
 15286  000420  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15287  000422  A4D8               	btfss	status,2,c
 15288  000424  0012               	return	
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;term.c: 620: {
 15292                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15293  000426  0E53               	movlw	83
 15294  000428  0102               	movlb	2	; () banked
 15295  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15296                           
 15297                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15298  00042C  0E42               	movlw	66
 15299  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15300                           
 15301                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15302  000430  0E5B               	movlw	91
 15303  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15304                           
 15305                           ; BSR set to: 2
 15306                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15307  000434  C3A9  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15308                           
 15309                           ; BSR set to: 2
 15310                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15311  000438  C3AA  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15312                           
 15313                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15314  00043C  0E5D               	movlw	93
 15315  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15316                           
 15317                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15318  000440  0E3A               	movlw	58
 15319  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15320                           
 15321                           ; BSR set to: 2
 15322                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15323  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15324  000446  0100               	movlb	0	; () banked
 15325  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15326  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15327  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15328  00044E  0E07               	movlw	7
 15329  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15330  000452  EC88  F02E         	call	_putUSBUSART	;wreg free
 15331                           
 15332                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15333  000456  0E02               	movlw	2
 15334  000458  0102               	movlb	2	; () banked
 15335  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15336                           
 15337                           ; BSR set to: 2
 15338                           ;term.c: 632: }
 15339                           ;term.c: 633: break;
 15340  00045C  0012               	return	
 15341  00045E                     
 15342                           ; BSR set to: 2
 15343                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15344                           
 15345                           ; BSR set to: 2
 15346  00045E  ECAA  F02E         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15347  000462  06E8               	decf	wreg,f,c
 15348  000464  A4D8               	btfss	status,2,c
 15349  000466  D088               	goto	l2392
 15350                           
 15351                           ;term.c: 638: {
 15352                           ;term.c: 640: if (FormatOption == 1u)
 15353  000468  0102               	movlb	2	; () banked
 15354  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15355  00046C  A4D8               	btfss	status,2,c
 15356  00046E  D027               	goto	u11960
 15357                           
 15358                           ; BSR set to: 2
 15359                           ;term.c: 641: {
 15360                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15361  000470  0E00               	movlw	0
 15362  000472  0100               	movlb	0	; () banked
 15363  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15364  000476  D01E               	goto	l2394
 15365  000478                     
 15366                           ;term.c: 644: {
 15367                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15368                           
 15369                           ; BSR set to: 0
 15370  000478  0100               	movlb	0	; () banked
 15371  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15372  00047C  0D04               	mullw	4
 15373  00047E  0E00               	movlw	low Terminal@Payload
 15374  000480  24F3               	addwf	prodl,w,c
 15375  000482  6F93               	movwf	itoa@buf& (0+255),b
 15376  000484  0E05               	movlw	high Terminal@Payload
 15377  000486  20F4               	addwfc	prodh,w,c
 15378  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15379  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15380  00048C  0D01               	mullw	1
 15381  00048E  0E50               	movlw	low Terminal@TermRxBuffer
 15382  000490  24F3               	addwf	prodl,w,c
 15383  000492  6ED9               	movwf	fsr2l,c
 15384  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15385  000496  20F4               	addwfc	prodh,w,c
 15386  000498  6EDA               	movwf	fsr2h,c
 15387  00049A  50DF               	movf	indf2,w,c
 15388  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15389  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15390  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15391  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15392  0004A4  0E00               	movlw	0
 15393  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15394  0004A8  0E0A               	movlw	10
 15395  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15396  0004AC  ECFB  F02A         	call	_itoa	;wreg free
 15397  0004B0  0100               	movlb	0	; () banked
 15398  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15399  0004B4                     l2394:
 15400                           
 15401                           ; BSR set to: 0
 15402                           
 15403                           ; BSR set to: 0
 15404  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15405  0004B6  0102               	movlb	2	; () banked
 15406  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15407  0004BA  B0D8               	btfsc	status,0,c
 15408  0004BC  D7DD               	goto	l2395
 15409  0004BE                     u11960:
 15410                           
 15411                           ; BSR set to: 2
 15412                           ;term.c: 646: }
 15413                           ;term.c: 647: }
 15414                           ;term.c: 650: if((cdc_trf_state == 0))
 15415                           
 15416                           ; BSR set to: 2
 15417                           
 15418                           ; BSR set to: 2
 15419  0004BE  0100               	movlb	0	; () banked
 15420  0004C0  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15421  0004C2  A4D8               	btfss	status,2,c
 15422  0004C4  0012               	return	
 15423                           
 15424                           ; BSR set to: 0
 15425                           ;term.c: 651: {
 15426                           ;term.c: 653: if (FormatOption == 1u)
 15427  0004C6  0102               	movlb	2	; () banked
 15428  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15429  0004CA  A4D8               	btfss	status,2,c
 15430  0004CC  D02B               	goto	l2398
 15431                           
 15432                           ; BSR set to: 2
 15433                           ;term.c: 654: {
 15434                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15435  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15436  0004D0  0D08               	mullw	8
 15437  0004D2  0E03               	movlw	3
 15438  0004D4  26F3               	addwf	prodl,f,c
 15439  0004D6  0E00               	movlw	0
 15440  0004D8  22F4               	addwfc	prodh,f,c
 15441  0004DA  0E00               	movlw	low Terminal@Payload
 15442  0004DC  24F3               	addwf	prodl,w,c
 15443  0004DE  6ED9               	movwf	fsr2l,c
 15444  0004E0  0E05               	movlw	high Terminal@Payload
 15445  0004E2  20F4               	addwfc	prodh,w,c
 15446  0004E4  6EDA               	movwf	fsr2h,c
 15447  0004E6  0E0D               	movlw	13
 15448  0004E8  6EDF               	movwf	indf2,c
 15449                           
 15450                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15451  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15452  0004EC  0D08               	mullw	8
 15453  0004EE  0E02               	movlw	2
 15454  0004F0  26F3               	addwf	prodl,f,c
 15455  0004F2  0E00               	movlw	0
 15456  0004F4  22F4               	addwfc	prodh,f,c
 15457  0004F6  0E00               	movlw	low Terminal@Payload
 15458  0004F8  24F3               	addwf	prodl,w,c
 15459  0004FA  6ED9               	movwf	fsr2l,c
 15460  0004FC  0E05               	movlw	high Terminal@Payload
 15461  0004FE  20F4               	addwfc	prodh,w,c
 15462  000500  6EDA               	movwf	fsr2h,c
 15463  000502  0E0A               	movlw	10
 15464  000504  6EDF               	movwf	indf2,c
 15465                           
 15466                           ; BSR set to: 2
 15467                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15468  000506  0E00               	movlw	low Terminal@Payload
 15469  000508  0100               	movlb	0	; () banked
 15470  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15471  00050C  0E05               	movlw	high Terminal@Payload
 15472  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15473  000510  0102               	movlb	2	; () banked
 15474  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15475  000514  0D02               	mullw	2
 15476  000516  50F3               	movf	prodl,w,c
 15477  000518  0F04               	addlw	4
 15478  00051A  0100               	movlb	0	; () banked
 15479  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15480  00051E  EC88  F02E         	call	_putUSBUSART	;wreg free
 15481                           
 15482                           ;term.c: 659: }
 15483  000522  D026               	goto	l2399
 15484  000524                     l2398:
 15485                           
 15486                           ;term.c: 660: else
 15487                           ;term.c: 661: {
 15488                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15489  000524  0102               	movlb	2	; () banked
 15490  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15491  000528  0D01               	mullw	1
 15492  00052A  0E50               	movlw	low Terminal@TermRxBuffer
 15493  00052C  24F3               	addwf	prodl,w,c
 15494  00052E  6ED9               	movwf	fsr2l,c
 15495  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15496  000532  20F4               	addwfc	prodh,w,c
 15497  000534  6EDA               	movwf	fsr2h,c
 15498  000536  0E0D               	movlw	13
 15499  000538  6EDF               	movwf	indf2,c
 15500                           
 15501                           ; BSR set to: 2
 15502                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15503  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15504  00053C  0100               	movlb	0	; () banked
 15505  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15506  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15507  000542  0E01               	movlw	1
 15508  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15509  000546  0E00               	movlw	0
 15510  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15511  00054A  0E50               	movlw	low Terminal@TermRxBuffer
 15512  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15513  00054E  6ED9               	movwf	fsr2l,c
 15514  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15515  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15516  000554  6EDA               	movwf	fsr2h,c
 15517  000556  0E0A               	movlw	10
 15518  000558  6EDF               	movwf	indf2,c
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15522  00055A  0E50               	movlw	low Terminal@TermRxBuffer
 15523  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15524  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15525  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15526  000562  0102               	movlb	2	; () banked
 15527  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15528  000566  0F02               	addlw	2
 15529  000568  0100               	movlb	0	; () banked
 15530  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15531  00056C  EC88  F02E         	call	_putUSBUSART	;wreg free
 15532  000570                     l2399:
 15533                           
 15534                           ;term.c: 666: }
 15535                           ;term.c: 668: TermState = Term_GetData;
 15536  000570  0E00               	movlw	0
 15537  000572  0102               	movlb	2	; () banked
 15538  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15539                           
 15540                           ; BSR set to: 2
 15541                           ;term.c: 669: }
 15542                           ;term.c: 670: }
 15543  000576  0012               	return	
 15544  000578                     l2392:
 15545                           
 15546                           ;term.c: 671: else
 15547                           ;term.c: 672: {
 15548                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15549                           
 15550                           ; BSR set to: 2
 15551  000578  0EDA               	movlw	low Terminal@SwTimer
 15552  00057A  0100               	movlb	0	; () banked
 15553  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15554  00057E  0E04               	movlw	high Terminal@SwTimer
 15555  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15556  000582  0EB8               	movlw	184
 15557  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15558  000586  0E0B               	movlw	11
 15559  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15560  00058A  0E00               	movlw	0
 15561  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15562  00058E  0E00               	movlw	0
 15563  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15564  000592  EC43  F025         	call	_OsTmr_Wait	;wreg free
 15565  000596  06E8               	decf	wreg,f,c
 15566  000598  A4D8               	btfss	status,2,c
 15567  00059A  0012               	return	
 15568                           
 15569                           ;term.c: 675: {
 15570                           ;term.c: 677: if((cdc_trf_state == 0))
 15571  00059C  0100               	movlb	0	; () banked
 15572  00059E  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15573  0005A0  A4D8               	btfss	status,2,c
 15574  0005A2  0012               	return	
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;term.c: 678: {
 15578                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15579  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15580  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15581  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15582  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15583  0005AC  0E8C               	movlw	low STR_21
 15584  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15585  0005B0  0EFE               	movlw	high STR_21
 15586  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15587  0005B4  ECFF  F02C         	call	_strcpy	;wreg free
 15588                           
 15589                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15590  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15591  0005BA  0100               	movlb	0	; () banked
 15592  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15593  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15594  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15595  0005C2  0E29               	movlw	41
 15596  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15597  0005C6  EC88  F02E         	call	_putUSBUSART	;wreg free
 15598                           
 15599                           ;term.c: 682: TermState = Term_GetData;
 15600  0005CA  0E00               	movlw	0
 15601  0005CC  0102               	movlb	2	; () banked
 15602  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15603                           
 15604                           ; BSR set to: 2
 15605                           ;term.c: 693: }
 15606                           
 15607                           ; BSR set to: 2
 15608                           ;term.c: 692: break;
 15609                           
 15610                           ;term.c: 691: default:
 15611                           
 15612                           ; BSR set to: 2
 15613                           ;term.c: 689: break;
 15614                           
 15615                           ;term.c: 688: case Term_ReadSlvUartData:
 15616                           
 15617                           ; BSR set to: 2
 15618                           ;term.c: 683: }
 15619                           ;term.c: 684: }
 15620                           ;term.c: 685: }
 15621                           ;term.c: 686: break;
 15622                           
 15623                           ; BSR set to: 2
 15624                           
 15625                           ; BSR set to: 2
 15626  0005D0  0012               	return	
 15627  0005D2                     l2353:
 15628                           
 15629                           ; BSR set to: 2
 15630  0005D2  0102               	movlb	2	; () banked
 15631  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15632                           
 15633                           ; Switch size 1, requested type "space"
 15634                           ; Number of cases is 4, Range of values is 0 to 3
 15635                           ; switch strategies available:
 15636                           ; Name         Instructions Cycles
 15637                           ; simple_byte           13     7 (average)
 15638                           ;	Chosen strategy is simple_byte
 15639  0005D6  0A00               	xorlw	0	; case 0
 15640  0005D8  B4D8               	btfsc	status,2,c
 15641  0005DA  D583               	goto	l2354
 15642  0005DC  0A01               	xorlw	1	; case 1
 15643  0005DE  B4D8               	btfsc	status,2,c
 15644  0005E0  D71E               	goto	l2389
 15645  0005E2  0A03               	xorlw	3	; case 2
 15646  0005E4  B4D8               	btfsc	status,2,c
 15647  0005E6  D73B               	goto	l2391
 15648  0005E8  0A01               	xorlw	1	; case 3
 15649  0005EA  0012               	return	
 15650  0005EC                     __end_of_Terminal:
 15651                           	opt stack 0
 15652                           tosu	equ	0xFFF
 15653                           tosh	equ	0xFFE
 15654                           tosl	equ	0xFFD
 15655                           pclath	equ	0xFFA
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon	equ	0xFF2
 15663                           intcon2	equ	0xFF1
 15664                           intcon3	equ	0xFF0
 15665                           indf0	equ	0xFEF
 15666                           postinc0	equ	0xFEE
 15667                           plusw0	equ	0xFEB
 15668                           fsr0h	equ	0xFEA
 15669                           fsr0l	equ	0xFE9
 15670                           wreg	equ	0xFE8
 15671                           indf1	equ	0xFE7
 15672                           postinc1	equ	0xFE6
 15673                           postdec1	equ	0xFE5
 15674                           plusw1	equ	0xFE3
 15675                           fsr1h	equ	0xFE2
 15676                           fsr1l	equ	0xFE1
 15677                           indf2	equ	0xFDF
 15678                           postinc2	equ	0xFDE
 15679                           postdec2	equ	0xFDD
 15680                           plusw2	equ	0xFDB
 15681                           fsr2h	equ	0xFDA
 15682                           fsr2l	equ	0xFD9
 15683                           status	equ	0xFD8
 15684                           
 15685 ;; *************** function _xtoi *****************
 15686 ;; Defined at:
 15687 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15688 ;; Parameters:    Size  Location     Type
 15689 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15690 ;;		 -> Terminal@Addr(4), 
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;  val             2   40[BANK0 ] unsigned int 
 15693 ;;  c               1   42[BANK0 ] unsigned char 
 15694 ;;  sign            1   39[BANK0 ] unsigned char 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  2   35[BANK0 ] unsigned int 
 15697 ;; Registers used:
 15698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15705 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15706 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15707 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15708 ;;Total ram usage:        8 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:   13
 15711 ;; This function calls:
 15712 ;;		_isdigit
 15713 ;;		_isspace
 15714 ;;		_isupper
 15715 ;;		_isxdigit
 15716 ;;		_tolower
 15717 ;; This function is called by:
 15718 ;;		_Terminal
 15719 ;; This function uses a non-reentrant model
 15720 ;;
 15721                           
 15722                           	psect	text61
 15723  003232                     __ptext61:
 15724                           	opt stack 0
 15725  003232                     _xtoi:
 15726                           	opt stack 12
 15727                           
 15728                           ;incstack = 0
 15729  003232  0E00               	movlw	0
 15730  003234  0100               	movlb	0	; () banked
 15731  003236  6F87               	movwf	xtoi@sign& (0+255),b
 15732  003238  0E00               	movlw	0
 15733  00323A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15734  00323C  0E00               	movlw	0
 15735  00323E  6F88               	movwf	xtoi@val& (0+255),b
 15736  003240  D003               	goto	l3255
 15737  003242                     
 15738                           ; BSR set to: 0
 15739  003242  0100               	movlb	0	; () banked
 15740  003244  4B83               	infsnz	xtoi@s& (0+255),f,b
 15741  003246  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15742  003248                     l3255:
 15743                           
 15744                           ; BSR set to: 0
 15745                           
 15746                           ; BSR set to: 0
 15747  003248  C083  FFD9         	movff	xtoi@s,fsr2l
 15748  00324C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15749  003250  50DF               	movf	indf2,w,c
 15750  003252  ECD1  F02D         	call	_isspace
 15751  003256  B0D8               	btfsc	status,0,c
 15752  003258  D7F4               	goto	l3256
 15753  00325A  C083  FFD9         	movff	xtoi@s,fsr2l
 15754  00325E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15755  003262  0E2D               	movlw	45
 15756  003264  18DE               	xorwf	postinc2,w,c
 15757  003266  A4D8               	btfss	status,2,c
 15758  003268  D003               	goto	l3258
 15759  00326A  0100               	movlb	0	; () banked
 15760  00326C  2B87               	incf	xtoi@sign& (0+255),f,b
 15761  00326E  D009               	goto	L15
 15762  003270                     l3258:
 15763                           
 15764                           ; BSR set to: 0
 15765  003270  C083  FFD9         	movff	xtoi@s,fsr2l
 15766  003274  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15767  003278  0E2B               	movlw	43
 15768  00327A  18DE               	xorwf	postinc2,w,c
 15769  00327C  A4D8               	btfss	status,2,c
 15770  00327E  D028               	goto	l3261
 15771  003280  0100               	movlb	0	; () banked
 15772  003282                     L15:
 15773  003282  4B83               	infsnz	xtoi@s& (0+255),f,b
 15774  003284  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15775                           
 15776                           ; BSR set to: 0
 15777                           
 15778                           ; BSR set to: 0
 15779  003286  D024               	goto	l3261
 15780  003288                     
 15781                           ; BSR set to: 0
 15782  003288  0100               	movlb	0	; () banked
 15783  00328A  518A               	movf	xtoi@c& (0+255),w,b
 15784  00328C  EC77  F02E         	call	_isupper
 15785  003290  A0D8               	btfss	status,0,c
 15786  003292  D006               	goto	l3263
 15787  003294  0100               	movlb	0	; () banked
 15788  003296  518A               	movf	xtoi@c& (0+255),w,b
 15789  003298  EC2F  F02F         	call	_tolower
 15790  00329C  0100               	movlb	0	; () banked
 15791  00329E  6F8A               	movwf	xtoi@c& (0+255),b
 15792  0032A0                     l3263:
 15793  0032A0  0100               	movlb	0	; () banked
 15794  0032A2  518A               	movf	xtoi@c& (0+255),w,b
 15795  0032A4  EC99  F02E         	call	_isdigit
 15796  0032A8  A0D8               	btfss	status,0,c
 15797  0032AA  D002               	goto	l3264
 15798  0032AC  0E30               	movlw	48
 15799  0032AE  D001               	goto	L14
 15800  0032B0                     l3264:
 15801                           
 15802                           ; BSR set to: 0
 15803  0032B0  0E57               	movlw	87
 15804  0032B2                     L14:
 15805  0032B2  0100               	movlb	0	; () banked
 15806  0032B4  5F8A               	subwf	xtoi@c& (0+255),f,b
 15807                           
 15808                           ; BSR set to: 0
 15809  0032B6  3B88               	swapf	xtoi@val& (0+255),f,b
 15810  0032B8  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15811  0032BA  0EF0               	movlw	240
 15812  0032BC  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15813  0032BE  5188               	movf	xtoi@val& (0+255),w,b
 15814  0032C0  0B0F               	andlw	15
 15815  0032C2  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15816  0032C4  0EF0               	movlw	240
 15817  0032C6  1788               	andwf	xtoi@val& (0+255),f,b
 15818  0032C8  518A               	movf	xtoi@c& (0+255),w,b
 15819  0032CA  2788               	addwf	xtoi@val& (0+255),f,b
 15820  0032CC  0E00               	movlw	0
 15821  0032CE  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15822  0032D0                     l3261:
 15823                           
 15824                           ; BSR set to: 0
 15825  0032D0  C083  FFD9         	movff	xtoi@s,fsr2l
 15826  0032D4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15827  0032D8  0100               	movlb	0	; () banked
 15828  0032DA  4B83               	infsnz	xtoi@s& (0+255),f,b
 15829  0032DC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15830  0032DE  50DF               	movf	indf2,w,c
 15831  0032E0  6F8A               	movwf	xtoi@c& (0+255),b
 15832  0032E2  518A               	movf	xtoi@c& (0+255),w,b
 15833  0032E4  EC1E  F02C         	call	_isxdigit
 15834  0032E8  B0D8               	btfsc	status,0,c
 15835  0032EA  D7CE               	goto	l3262
 15836  0032EC  0100               	movlb	0	; () banked
 15837  0032EE  5187               	movf	xtoi@sign& (0+255),w,b
 15838  0032F0  B4D8               	btfsc	status,2,c
 15839  0032F2  D00D               	goto	l3267
 15840                           
 15841                           ; BSR set to: 0
 15842  0032F4  C088  F085         	movff	xtoi@val,??_xtoi
 15843  0032F8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15844  0032FC  1F85               	comf	??_xtoi& (0+255),f,b
 15845  0032FE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15846  003300  4B85               	infsnz	??_xtoi& (0+255),f,b
 15847  003302  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15848  003304  C085  F083         	movff	??_xtoi,?_xtoi
 15849  003308  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 15850  00330C  0012               	return	
 15851  00330E                     l3267:
 15852                           
 15853                           ; BSR set to: 0
 15854  00330E  C088  F083         	movff	xtoi@val,?_xtoi
 15855  003312  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 15856                           
 15857                           ; BSR set to: 0
 15858  003316  0012               	return		;funcret
 15859  003318                     __end_of_xtoi:
 15860                           	opt stack 0
 15861                           tosu	equ	0xFFF
 15862                           tosh	equ	0xFFE
 15863                           tosl	equ	0xFFD
 15864                           pclath	equ	0xFFA
 15865                           tblptru	equ	0xFF8
 15866                           tblptrh	equ	0xFF7
 15867                           tblptrl	equ	0xFF6
 15868                           tablat	equ	0xFF5
 15869                           prodh	equ	0xFF4
 15870                           prodl	equ	0xFF3
 15871                           intcon	equ	0xFF2
 15872                           intcon2	equ	0xFF1
 15873                           intcon3	equ	0xFF0
 15874                           indf0	equ	0xFEF
 15875                           postinc0	equ	0xFEE
 15876                           plusw0	equ	0xFEB
 15877                           fsr0h	equ	0xFEA
 15878                           fsr0l	equ	0xFE9
 15879                           wreg	equ	0xFE8
 15880                           indf1	equ	0xFE7
 15881                           postinc1	equ	0xFE6
 15882                           postdec1	equ	0xFE5
 15883                           plusw1	equ	0xFE3
 15884                           fsr1h	equ	0xFE2
 15885                           fsr1l	equ	0xFE1
 15886                           indf2	equ	0xFDF
 15887                           postinc2	equ	0xFDE
 15888                           postdec2	equ	0xFDD
 15889                           plusw2	equ	0xFDB
 15890                           fsr2h	equ	0xFDA
 15891                           fsr2l	equ	0xFD9
 15892                           status	equ	0xFD8
 15893                           
 15894 ;; *************** function _tolower *****************
 15895 ;; Defined at:
 15896 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  c               1    wreg     unsigned char 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  c               1   29[BANK0 ] unsigned char 
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  1    wreg      unsigned char 
 15903 ;; Registers used:
 15904 ;;		wreg, status,2, status,0
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15914 ;;Total ram usage:        1 bytes
 15915 ;; Hardware stack levels used:    1
 15916 ;; Hardware stack levels required when called:   11
 15917 ;; This function calls:
 15918 ;;		Nothing
 15919 ;; This function is called by:
 15920 ;;		_xtoi
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text62
 15925  005E5E                     __ptext62:
 15926                           	opt stack 0
 15927  005E5E                     _tolower:
 15928                           	opt stack 13
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;incstack = 0
 15932                           ;tolower@c stored from wreg
 15933  005E5E  0100               	movlb	0	; () banked
 15934  005E60  6F7D               	movwf	tolower@c& (0+255),b
 15935  005E62  0E5B               	movlw	91
 15936  005E64  0100               	movlb	0	; () banked
 15937  005E66  617D               	cpfslt	tolower@c& (0+255),b
 15938  005E68  D004               	goto	l3314
 15939                           
 15940                           ; BSR set to: 0
 15941  005E6A  0E40               	movlw	64
 15942  005E6C  657D               	cpfsgt	tolower@c& (0+255),b
 15943  005E6E  D001               	goto	l3314
 15944                           
 15945                           ; BSR set to: 0
 15946  005E70  8B7D               	bsf	tolower@c& (0+255),5,b
 15947  005E72                     l3314:
 15948                           
 15949                           ; BSR set to: 0
 15950                           
 15951                           ; BSR set to: 0
 15952  005E72  517D               	movf	tolower@c& (0+255),w,b
 15953  005E74  0012               	return	
 15954  005E76                     __end_of_tolower:
 15955                           	opt stack 0
 15956                           tosu	equ	0xFFF
 15957                           tosh	equ	0xFFE
 15958                           tosl	equ	0xFFD
 15959                           pclath	equ	0xFFA
 15960                           tblptru	equ	0xFF8
 15961                           tblptrh	equ	0xFF7
 15962                           tblptrl	equ	0xFF6
 15963                           tablat	equ	0xFF5
 15964                           prodh	equ	0xFF4
 15965                           prodl	equ	0xFF3
 15966                           intcon	equ	0xFF2
 15967                           intcon2	equ	0xFF1
 15968                           intcon3	equ	0xFF0
 15969                           indf0	equ	0xFEF
 15970                           postinc0	equ	0xFEE
 15971                           plusw0	equ	0xFEB
 15972                           fsr0h	equ	0xFEA
 15973                           fsr0l	equ	0xFE9
 15974                           wreg	equ	0xFE8
 15975                           indf1	equ	0xFE7
 15976                           postinc1	equ	0xFE6
 15977                           postdec1	equ	0xFE5
 15978                           plusw1	equ	0xFE3
 15979                           fsr1h	equ	0xFE2
 15980                           fsr1l	equ	0xFE1
 15981                           indf2	equ	0xFDF
 15982                           postinc2	equ	0xFDE
 15983                           postdec2	equ	0xFDD
 15984                           plusw2	equ	0xFDB
 15985                           fsr2h	equ	0xFDA
 15986                           fsr2l	equ	0xFD9
 15987                           status	equ	0xFD8
 15988                           
 15989 ;; *************** function _isxdigit *****************
 15990 ;; Defined at:
 15991 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 15992 ;; Parameters:    Size  Location     Type
 15993 ;;  c               1    wreg     unsigned char 
 15994 ;; Auto vars:     Size  Location     Type
 15995 ;;  c               1   34[BANK0 ] unsigned char 
 15996 ;; Return value:  Size  Location     Type
 15997 ;;		None               void
 15998 ;; Registers used:
 15999 ;;		wreg, status,2, status,0, cstack
 16000 ;; Tracked objects:
 16001 ;;		On entry : 0/0
 16002 ;;		On exit  : 0/0
 16003 ;;		Unchanged: 0/0
 16004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16009 ;;Total ram usage:        3 bytes
 16010 ;; Hardware stack levels used:    1
 16011 ;; Hardware stack levels required when called:   12
 16012 ;; This function calls:
 16013 ;;		_isdigit
 16014 ;; This function is called by:
 16015 ;;		_xtoi
 16016 ;; This function uses a non-reentrant model
 16017 ;;
 16018                           
 16019                           	psect	text63
 16020  00583C                     __ptext63:
 16021                           	opt stack 0
 16022  00583C                     _isxdigit:
 16023                           	opt stack 12
 16024                           
 16025                           ; BSR set to: 0
 16026                           ;incstack = 0
 16027                           ;isxdigit@c stored from wreg
 16028  00583C  0100               	movlb	0	; () banked
 16029  00583E  6F82               	movwf	isxdigit@c& (0+255),b
 16030  005840  0E01               	movlw	1
 16031  005842  0100               	movlb	0	; () banked
 16032  005844  6F81               	movwf	_isxdigit$6415& (0+255),b
 16033                           
 16034                           ; BSR set to: 0
 16035  005846  0E67               	movlw	103
 16036  005848  6182               	cpfslt	isxdigit@c& (0+255),b
 16037  00584A  D003               	goto	u10660
 16038                           
 16039                           ; BSR set to: 0
 16040  00584C  0E61               	movlw	97
 16041  00584E  6182               	cpfslt	isxdigit@c& (0+255),b
 16042  005850  D00E               	goto	l3310
 16043  005852                     u10660:
 16044                           
 16045                           ; BSR set to: 0
 16046                           
 16047                           ; BSR set to: 0
 16048  005852  0E47               	movlw	71
 16049  005854  6182               	cpfslt	isxdigit@c& (0+255),b
 16050  005856  D003               	goto	u10680
 16051                           
 16052                           ; BSR set to: 0
 16053  005858  0E41               	movlw	65
 16054  00585A  6182               	cpfslt	isxdigit@c& (0+255),b
 16055  00585C  D008               	goto	l3310
 16056  00585E                     u10680:
 16057                           
 16058                           ; BSR set to: 0
 16059                           
 16060                           ; BSR set to: 0
 16061  00585E  5182               	movf	isxdigit@c& (0+255),w,b
 16062  005860  EC99  F02E         	call	_isdigit
 16063  005864  B0D8               	btfsc	status,0,c
 16064  005866  D003               	goto	l3310
 16065  005868  0E00               	movlw	0
 16066  00586A  0100               	movlb	0	; () banked
 16067  00586C  6F81               	movwf	_isxdigit$6415& (0+255),b
 16068  00586E                     l3310:
 16069                           
 16070                           ; BSR set to: 0
 16071  00586E  C081  F080         	movff	_isxdigit$6415,??_isxdigit
 16072  005872  0100               	movlb	0	; () banked
 16073  005874  3180               	rrcf	??_isxdigit& (0+255),w,b
 16074  005876  0012               	return	
 16075  005878                     __end_of_isxdigit:
 16076                           	opt stack 0
 16077                           tosu	equ	0xFFF
 16078                           tosh	equ	0xFFE
 16079                           tosl	equ	0xFFD
 16080                           pclath	equ	0xFFA
 16081                           tblptru	equ	0xFF8
 16082                           tblptrh	equ	0xFF7
 16083                           tblptrl	equ	0xFF6
 16084                           tablat	equ	0xFF5
 16085                           prodh	equ	0xFF4
 16086                           prodl	equ	0xFF3
 16087                           intcon	equ	0xFF2
 16088                           intcon2	equ	0xFF1
 16089                           intcon3	equ	0xFF0
 16090                           indf0	equ	0xFEF
 16091                           postinc0	equ	0xFEE
 16092                           plusw0	equ	0xFEB
 16093                           fsr0h	equ	0xFEA
 16094                           fsr0l	equ	0xFE9
 16095                           wreg	equ	0xFE8
 16096                           indf1	equ	0xFE7
 16097                           postinc1	equ	0xFE6
 16098                           postdec1	equ	0xFE5
 16099                           plusw1	equ	0xFE3
 16100                           fsr1h	equ	0xFE2
 16101                           fsr1l	equ	0xFE1
 16102                           indf2	equ	0xFDF
 16103                           postinc2	equ	0xFDE
 16104                           postdec2	equ	0xFDD
 16105                           plusw2	equ	0xFDB
 16106                           fsr2h	equ	0xFDA
 16107                           fsr2l	equ	0xFD9
 16108                           status	equ	0xFD8
 16109                           
 16110 ;; *************** function _strtol *****************
 16111 ;; Defined at:
 16112 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16115 ;;		 -> Terminal@Payload(80), 
 16116 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16117 ;;		 -> NULL(0), 
 16118 ;;  base            2   45[BANK0 ] int 
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;  a               4   52[BANK0 ] long 
 16121 ;;  c               1   56[BANK0 ] unsigned char 
 16122 ;;  sign            1   51[BANK0 ] unsigned char 
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  4   41[BANK0 ] long 
 16125 ;; Registers used:
 16126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16133 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16135 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16136 ;;Total ram usage:       16 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; Hardware stack levels required when called:   13
 16139 ;; This function calls:
 16140 ;;		___lmul
 16141 ;;		_isalpha
 16142 ;;		_isdigit
 16143 ;;		_isspace
 16144 ;;		_toupper
 16145 ;; This function is called by:
 16146 ;;		_Terminal
 16147 ;; This function uses a non-reentrant model
 16148 ;;
 16149                           
 16150                           	psect	text64
 16151  00181C                     __ptext64:
 16152                           	opt stack 0
 16153  00181C                     _strtol:
 16154                           	opt stack 12
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;incstack = 0
 16158  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16159  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16160  001824  50DF               	movf	indf2,w,c
 16161  001826  0100               	movlb	0	; () banked
 16162  001828  6F98               	movwf	strtol@c& (0+255),b
 16163                           
 16164                           ; BSR set to: 0
 16165  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16166  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16167                           
 16168                           ; BSR set to: 0
 16169  00182E  5198               	movf	strtol@c& (0+255),w,b
 16170  001830  ECD1  F02D         	call	_isspace
 16171  001834  B0D8               	btfsc	status,0,c
 16172  001836  D7F2               	goto	_strtol
 16173  001838  0E00               	movlw	0
 16174  00183A  0100               	movlb	0	; () banked
 16175  00183C  6F94               	movwf	strtol@a& (0+255),b
 16176  00183E  0E00               	movlw	0
 16177  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16178  001842  0E00               	movlw	0
 16179  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16180  001846  0E00               	movlw	0
 16181  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16182  00184A  0E00               	movlw	0
 16183  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16184                           
 16185                           ; BSR set to: 0
 16186  00184E  0E2D               	movlw	45
 16187  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16188  001852  A4D8               	btfss	status,2,c
 16189  001854  D003               	goto	l3217
 16190                           
 16191                           ; BSR set to: 0
 16192  001856  0E01               	movlw	1
 16193  001858  6F93               	movwf	strtol@sign& (0+255),b
 16194  00185A  D004               	goto	u11060
 16195  00185C                     l3217:
 16196                           
 16197                           ; BSR set to: 0
 16198                           
 16199                           ; BSR set to: 0
 16200  00185C  0E2B               	movlw	43
 16201  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16202  001860  A4D8               	btfss	status,2,c
 16203  001862  D008               	goto	l3219
 16204  001864                     u11060:
 16205                           
 16206                           ; BSR set to: 0
 16207  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16208  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16209  00186C  50DF               	movf	indf2,w,c
 16210  00186E  6F98               	movwf	strtol@c& (0+255),b
 16211                           
 16212                           ; BSR set to: 0
 16213  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16214  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16215  001874                     l3219:
 16216                           
 16217                           ; BSR set to: 0
 16218                           
 16219                           ; BSR set to: 0
 16220                           
 16221                           ; BSR set to: 0
 16222  001874  0E30               	movlw	48
 16223  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16224  001878  A4D8               	btfss	status,2,c
 16225  00187A  D02E               	goto	l3227
 16226                           
 16227                           ; BSR set to: 0
 16228  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16229  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16230  001884  50DF               	movf	indf2,w,c
 16231  001886  6F98               	movwf	strtol@c& (0+255),b
 16232                           
 16233                           ; BSR set to: 0
 16234  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16235  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16236                           
 16237                           ; BSR set to: 0
 16238  00188C  518D               	movf	strtol@base& (0+255),w,b
 16239  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16240  001890  B4D8               	btfsc	status,2,c
 16241  001892  D005               	goto	u11090
 16242                           
 16243                           ; BSR set to: 0
 16244  001894  0E10               	movlw	16
 16245  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16246  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16247  00189A  A4D8               	btfss	status,2,c
 16248  00189C  D015               	goto	l3221
 16249  00189E                     u11090:
 16250                           
 16251                           ; BSR set to: 0
 16252                           
 16253                           ; BSR set to: 0
 16254  00189E  0E78               	movlw	120
 16255  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16256  0018A2  B4D8               	btfsc	status,2,c
 16257  0018A4  D004               	goto	u11110
 16258                           
 16259                           ; BSR set to: 0
 16260  0018A6  0E58               	movlw	88
 16261  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16262  0018AA  A4D8               	btfss	status,2,c
 16263  0018AC  D00D               	goto	l3221
 16264  0018AE                     u11110:
 16265                           
 16266                           ; BSR set to: 0
 16267                           
 16268                           ; BSR set to: 0
 16269  0018AE  0E00               	movlw	0
 16270  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16271  0018B2  0E10               	movlw	16
 16272  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16276  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16277  0018BE  50DF               	movf	indf2,w,c
 16278  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16279                           
 16280                           ; BSR set to: 0
 16281  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16282  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16283  0018C6  D008               	goto	l3227
 16284  0018C8                     l3221:
 16285                           
 16286                           ; BSR set to: 0
 16287                           
 16288                           ; BSR set to: 0
 16289  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16290  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16291  0018CC  A4D8               	btfss	status,2,c
 16292  0018CE  D004               	goto	l3227
 16293                           
 16294                           ; BSR set to: 0
 16295  0018D0  0E00               	movlw	0
 16296  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16297  0018D4  0E08               	movlw	8
 16298  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16299  0018D8                     l3227:
 16300                           
 16301                           ; BSR set to: 0
 16302                           
 16303                           ; BSR set to: 0
 16304                           
 16305                           ; BSR set to: 0
 16306                           
 16307                           ; BSR set to: 0
 16308  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16309  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16310  0018DC  A4D8               	btfss	status,2,c
 16311  0018DE  D004               	goto	l3228
 16312                           
 16313                           ; BSR set to: 0
 16314  0018E0  0E00               	movlw	0
 16315  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16316  0018E4  0E0A               	movlw	10
 16317  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16318  0018E8                     l3228:
 16319                           
 16320                           ; BSR set to: 0
 16321                           
 16322                           ; BSR set to: 0
 16323                           
 16324                           ; BSR set to: 0
 16325  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16326  0018EA  EC48  F02D         	call	_isalpha
 16327  0018EE  A0D8               	btfss	status,0,c
 16328  0018F0  D008               	goto	l3230
 16329  0018F2  0100               	movlb	0	; () banked
 16330  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16331  0018F6  EC3B  F02F         	call	_toupper
 16332  0018FA  0FC9               	addlw	201
 16333  0018FC  0100               	movlb	0	; () banked
 16334  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16335  001900  D009               	goto	l3233
 16336  001902                     l3230:
 16337                           
 16338                           ; BSR set to: 0
 16339  001902  0100               	movlb	0	; () banked
 16340  001904  5198               	movf	strtol@c& (0+255),w,b
 16341  001906  EC99  F02E         	call	_isdigit
 16342  00190A  A0D8               	btfss	status,0,c
 16343  00190C  D039               	goto	l3234
 16344  00190E  0E30               	movlw	48
 16345  001910  0100               	movlb	0	; () banked
 16346  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16347  001914                     l3233:
 16348                           
 16349                           ; BSR set to: 0
 16350                           
 16351                           ; BSR set to: 0
 16352                           
 16353                           ; BSR set to: 0
 16354  001914  5198               	movf	strtol@c& (0+255),w,b
 16355  001916  6F8F               	movwf	??_strtol& (0+255),b
 16356  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16357  00191A  518D               	movf	strtol@base& (0+255),w,b
 16358  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16359  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16360  001920  0A80               	xorlw	128
 16361  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16362  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16363  001926  0A80               	xorlw	128
 16364  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16365  00192A  B0D8               	btfsc	status,0,c
 16366  00192C  D029               	goto	l3234
 16367                           
 16368                           ; BSR set to: 0
 16369                           
 16370                           ; BSR set to: 0
 16371                           
 16372                           ; BSR set to: 0
 16373  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16374  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16375  001936  0E00               	movlw	0
 16376  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16377  00193A  0EFF               	movlw	-1
 16378  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16379  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16380  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16381  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16382  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16383  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16384  001950  ECE9  F027         	call	___lmul	;wreg free
 16385  001954  0100               	movlb	0	; () banked
 16386  001956  5198               	movf	strtol@c& (0+255),w,b
 16387  001958  257D               	addwf	?___lmul& (0+255),w,b
 16388  00195A  6F94               	movwf	strtol@a& (0+255),b
 16389  00195C  0E00               	movlw	0
 16390  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16391  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16392  001962  0E00               	movlw	0
 16393  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16394  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16395  001968  0E00               	movlw	0
 16396  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16397  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16398                           
 16399                           ; BSR set to: 0
 16400  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16401  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16402  001976  50DF               	movf	indf2,w,c
 16403  001978  6F98               	movwf	strtol@c& (0+255),b
 16404                           
 16405                           ; BSR set to: 0
 16406  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16407  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16408  00197E  D7B4               	goto	l3228
 16409  001980                     l3234:
 16410                           
 16411                           ; BSR set to: 0
 16412  001980  0100               	movlb	0	; () banked
 16413  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16414  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16415  001986  B4D8               	btfsc	status,2,c
 16416  001988  D00E               	goto	l3236
 16417                           
 16418                           ; BSR set to: 0
 16419  00198A  0EFF               	movlw	255
 16420  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16421  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16422  001990  0EFF               	movlw	255
 16423  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16424  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16425  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16426  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16427  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16428  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16429  0019A6                     l3236:
 16430                           
 16431                           ; BSR set to: 0
 16432                           
 16433                           ; BSR set to: 0
 16434  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16435  0019A8  B4D8               	btfsc	status,2,c
 16436  0019AA  D01A               	goto	l3237
 16437                           
 16438                           ; BSR set to: 0
 16439  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16440  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16441  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16442  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16443  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16444  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16445  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16446  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16447  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16448  0019C6  0E00               	movlw	0
 16449  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16450  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16451  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16452  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16453  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16454  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16455  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16456                           
 16457                           ; BSR set to: 0
 16458  0019DE  0012               	return	
 16459  0019E0                     l3237:
 16460                           
 16461                           ; BSR set to: 0
 16462  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16463  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16464  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16465  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16466                           
 16467                           ; BSR set to: 0
 16468  0019F0  0012               	return		;funcret
 16469  0019F2                     __end_of_strtol:
 16470                           	opt stack 0
 16471                           tosu	equ	0xFFF
 16472                           tosh	equ	0xFFE
 16473                           tosl	equ	0xFFD
 16474                           pclath	equ	0xFFA
 16475                           tblptru	equ	0xFF8
 16476                           tblptrh	equ	0xFF7
 16477                           tblptrl	equ	0xFF6
 16478                           tablat	equ	0xFF5
 16479                           prodh	equ	0xFF4
 16480                           prodl	equ	0xFF3
 16481                           intcon	equ	0xFF2
 16482                           intcon2	equ	0xFF1
 16483                           intcon3	equ	0xFF0
 16484                           indf0	equ	0xFEF
 16485                           postinc0	equ	0xFEE
 16486                           plusw0	equ	0xFEB
 16487                           fsr0h	equ	0xFEA
 16488                           fsr0l	equ	0xFE9
 16489                           wreg	equ	0xFE8
 16490                           indf1	equ	0xFE7
 16491                           postinc1	equ	0xFE6
 16492                           postdec1	equ	0xFE5
 16493                           plusw1	equ	0xFE3
 16494                           fsr1h	equ	0xFE2
 16495                           fsr1l	equ	0xFE1
 16496                           indf2	equ	0xFDF
 16497                           postinc2	equ	0xFDE
 16498                           postdec2	equ	0xFDD
 16499                           plusw2	equ	0xFDB
 16500                           fsr2h	equ	0xFDA
 16501                           fsr2l	equ	0xFD9
 16502                           status	equ	0xFD8
 16503                           
 16504 ;; *************** function _toupper *****************
 16505 ;; Defined at:
 16506 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  c               1    wreg     unsigned char 
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;  c               1   29[BANK0 ] unsigned char 
 16511 ;; Return value:  Size  Location     Type
 16512 ;;                  1    wreg      unsigned char 
 16513 ;; Registers used:
 16514 ;;		wreg, status,2, status,0
 16515 ;; Tracked objects:
 16516 ;;		On entry : 0/0
 16517 ;;		On exit  : 0/0
 16518 ;;		Unchanged: 0/0
 16519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16521 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;Total ram usage:        1 bytes
 16525 ;; Hardware stack levels used:    1
 16526 ;; Hardware stack levels required when called:   11
 16527 ;; This function calls:
 16528 ;;		Nothing
 16529 ;; This function is called by:
 16530 ;;		_strtol
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text65
 16535  005E76                     __ptext65:
 16536                           	opt stack 0
 16537  005E76                     _toupper:
 16538                           	opt stack 13
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;incstack = 0
 16542                           ;toupper@c stored from wreg
 16543  005E76  0100               	movlb	0	; () banked
 16544  005E78  6F7D               	movwf	toupper@c& (0+255),b
 16545  005E7A  0E7B               	movlw	123
 16546  005E7C  0100               	movlb	0	; () banked
 16547  005E7E  617D               	cpfslt	toupper@c& (0+255),b
 16548  005E80  D004               	goto	l3241
 16549                           
 16550                           ; BSR set to: 0
 16551  005E82  0E60               	movlw	96
 16552  005E84  657D               	cpfsgt	toupper@c& (0+255),b
 16553  005E86  D001               	goto	l3241
 16554                           
 16555                           ; BSR set to: 0
 16556  005E88  9B7D               	bcf	toupper@c& (0+255),5,b
 16557  005E8A                     l3241:
 16558                           
 16559                           ; BSR set to: 0
 16560                           
 16561                           ; BSR set to: 0
 16562  005E8A  517D               	movf	toupper@c& (0+255),w,b
 16563  005E8C  0012               	return	
 16564  005E8E                     __end_of_toupper:
 16565                           	opt stack 0
 16566                           tosu	equ	0xFFF
 16567                           tosh	equ	0xFFE
 16568                           tosl	equ	0xFFD
 16569                           pclath	equ	0xFFA
 16570                           tblptru	equ	0xFF8
 16571                           tblptrh	equ	0xFF7
 16572                           tblptrl	equ	0xFF6
 16573                           tablat	equ	0xFF5
 16574                           prodh	equ	0xFF4
 16575                           prodl	equ	0xFF3
 16576                           intcon	equ	0xFF2
 16577                           intcon2	equ	0xFF1
 16578                           intcon3	equ	0xFF0
 16579                           indf0	equ	0xFEF
 16580                           postinc0	equ	0xFEE
 16581                           plusw0	equ	0xFEB
 16582                           fsr0h	equ	0xFEA
 16583                           fsr0l	equ	0xFE9
 16584                           wreg	equ	0xFE8
 16585                           indf1	equ	0xFE7
 16586                           postinc1	equ	0xFE6
 16587                           postdec1	equ	0xFE5
 16588                           plusw1	equ	0xFE3
 16589                           fsr1h	equ	0xFE2
 16590                           fsr1l	equ	0xFE1
 16591                           indf2	equ	0xFDF
 16592                           postinc2	equ	0xFDE
 16593                           postdec2	equ	0xFDD
 16594                           plusw2	equ	0xFDB
 16595                           fsr2h	equ	0xFDA
 16596                           fsr2l	equ	0xFD9
 16597                           status	equ	0xFD8
 16598                           
 16599 ;; *************** function _isspace *****************
 16600 ;; Defined at:
 16601 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16602 ;; Parameters:    Size  Location     Type
 16603 ;;  c               1    wreg     unsigned char 
 16604 ;; Auto vars:     Size  Location     Type
 16605 ;;  c               1   31[BANK0 ] unsigned char 
 16606 ;; Return value:  Size  Location     Type
 16607 ;;		None               void
 16608 ;; Registers used:
 16609 ;;		wreg, status,2, status,0
 16610 ;; Tracked objects:
 16611 ;;		On entry : 0/0
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16619 ;;Total ram usage:        3 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:   11
 16622 ;; This function calls:
 16623 ;;		Nothing
 16624 ;; This function is called by:
 16625 ;;		_strtol
 16626 ;;		_xtoi
 16627 ;; This function uses a non-reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text66
 16631  005BA2                     __ptext66:
 16632                           	opt stack 0
 16633  005BA2                     _isspace:
 16634                           	opt stack 13
 16635                           
 16636                           ; BSR set to: 0
 16637                           ;incstack = 0
 16638                           ;isspace@c stored from wreg
 16639  005BA2  0100               	movlb	0	; () banked
 16640  005BA4  6F7F               	movwf	isspace@c& (0+255),b
 16641  005BA6  0E01               	movlw	1
 16642  005BA8  0100               	movlb	0	; () banked
 16643  005BAA  6F7E               	movwf	_isspace$6408& (0+255),b
 16644                           
 16645                           ; BSR set to: 0
 16646  005BAC  0E20               	movlw	32
 16647  005BAE  197F               	xorwf	isspace@c& (0+255),w,b
 16648  005BB0  B4D8               	btfsc	status,2,c
 16649  005BB2  D008               	goto	l3298
 16650                           
 16651                           ; BSR set to: 0
 16652  005BB4  0E0E               	movlw	14
 16653  005BB6  617F               	cpfslt	isspace@c& (0+255),b
 16654  005BB8  D003               	goto	u10570
 16655                           
 16656                           ; BSR set to: 0
 16657  005BBA  0E09               	movlw	9
 16658  005BBC  617F               	cpfslt	isspace@c& (0+255),b
 16659  005BBE  D002               	goto	l3298
 16660  005BC0                     u10570:
 16661                           
 16662                           ; BSR set to: 0
 16663                           
 16664                           ; BSR set to: 0
 16665  005BC0  0E00               	movlw	0
 16666  005BC2  6F7E               	movwf	_isspace$6408& (0+255),b
 16667  005BC4                     l3298:
 16668                           
 16669                           ; BSR set to: 0
 16670                           
 16671                           ; BSR set to: 0
 16672  005BC4  C07E  F07D         	movff	_isspace$6408,??_isspace
 16673  005BC8  317D               	rrcf	??_isspace& (0+255),w,b
 16674  005BCA  0012               	return	
 16675  005BCC                     __end_of_isspace:
 16676                           	opt stack 0
 16677                           tosu	equ	0xFFF
 16678                           tosh	equ	0xFFE
 16679                           tosl	equ	0xFFD
 16680                           pclath	equ	0xFFA
 16681                           tblptru	equ	0xFF8
 16682                           tblptrh	equ	0xFF7
 16683                           tblptrl	equ	0xFF6
 16684                           tablat	equ	0xFF5
 16685                           prodh	equ	0xFF4
 16686                           prodl	equ	0xFF3
 16687                           intcon	equ	0xFF2
 16688                           intcon2	equ	0xFF1
 16689                           intcon3	equ	0xFF0
 16690                           indf0	equ	0xFEF
 16691                           postinc0	equ	0xFEE
 16692                           plusw0	equ	0xFEB
 16693                           fsr0h	equ	0xFEA
 16694                           fsr0l	equ	0xFE9
 16695                           wreg	equ	0xFE8
 16696                           indf1	equ	0xFE7
 16697                           postinc1	equ	0xFE6
 16698                           postdec1	equ	0xFE5
 16699                           plusw1	equ	0xFE3
 16700                           fsr1h	equ	0xFE2
 16701                           fsr1l	equ	0xFE1
 16702                           indf2	equ	0xFDF
 16703                           postinc2	equ	0xFDE
 16704                           postdec2	equ	0xFDD
 16705                           plusw2	equ	0xFDB
 16706                           fsr2h	equ	0xFDA
 16707                           fsr2l	equ	0xFD9
 16708                           status	equ	0xFD8
 16709                           
 16710 ;; *************** function _isalpha *****************
 16711 ;; Defined at:
 16712 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;  c               1    wreg     unsigned char 
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;  c               1   34[BANK0 ] unsigned char 
 16717 ;; Return value:  Size  Location     Type
 16718 ;;		None               void
 16719 ;; Registers used:
 16720 ;;		wreg, status,2, status,0, cstack
 16721 ;; Tracked objects:
 16722 ;;		On entry : 0/0
 16723 ;;		On exit  : 0/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16727 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16730 ;;Total ram usage:        3 bytes
 16731 ;; Hardware stack levels used:    1
 16732 ;; Hardware stack levels required when called:   12
 16733 ;; This function calls:
 16734 ;;		_isupper
 16735 ;; This function is called by:
 16736 ;;		_strtol
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           	psect	text67
 16741  005A90                     __ptext67:
 16742                           	opt stack 0
 16743  005A90                     _isalpha:
 16744                           	opt stack 12
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;incstack = 0
 16748                           ;isalpha@c stored from wreg
 16749  005A90  0100               	movlb	0	; () banked
 16750  005A92  6F82               	movwf	isalpha@c& (0+255),b
 16751  005A94  0E01               	movlw	1
 16752  005A96  0100               	movlb	0	; () banked
 16753  005A98  6F81               	movwf	_isalpha$6405& (0+255),b
 16754                           
 16755                           ; BSR set to: 0
 16756  005A9A  0E7B               	movlw	123
 16757  005A9C  6182               	cpfslt	isalpha@c& (0+255),b
 16758  005A9E  D003               	goto	u10590
 16759                           
 16760                           ; BSR set to: 0
 16761  005AA0  0E61               	movlw	97
 16762  005AA2  6182               	cpfslt	isalpha@c& (0+255),b
 16763  005AA4  D008               	goto	l3293
 16764  005AA6                     u10590:
 16765                           
 16766                           ; BSR set to: 0
 16767                           
 16768                           ; BSR set to: 0
 16769  005AA6  5182               	movf	isalpha@c& (0+255),w,b
 16770  005AA8  EC77  F02E         	call	_isupper
 16771  005AAC  B0D8               	btfsc	status,0,c
 16772  005AAE  D003               	goto	l3293
 16773  005AB0  0E00               	movlw	0
 16774  005AB2  0100               	movlb	0	; () banked
 16775  005AB4  6F81               	movwf	_isalpha$6405& (0+255),b
 16776  005AB6                     l3293:
 16777                           
 16778                           ; BSR set to: 0
 16779  005AB6  C081  F080         	movff	_isalpha$6405,??_isalpha
 16780  005ABA  0100               	movlb	0	; () banked
 16781  005ABC  3180               	rrcf	??_isalpha& (0+255),w,b
 16782  005ABE  0012               	return	
 16783  005AC0                     __end_of_isalpha:
 16784                           	opt stack 0
 16785                           tosu	equ	0xFFF
 16786                           tosh	equ	0xFFE
 16787                           tosl	equ	0xFFD
 16788                           pclath	equ	0xFFA
 16789                           tblptru	equ	0xFF8
 16790                           tblptrh	equ	0xFF7
 16791                           tblptrl	equ	0xFF6
 16792                           tablat	equ	0xFF5
 16793                           prodh	equ	0xFF4
 16794                           prodl	equ	0xFF3
 16795                           intcon	equ	0xFF2
 16796                           intcon2	equ	0xFF1
 16797                           intcon3	equ	0xFF0
 16798                           indf0	equ	0xFEF
 16799                           postinc0	equ	0xFEE
 16800                           plusw0	equ	0xFEB
 16801                           fsr0h	equ	0xFEA
 16802                           fsr0l	equ	0xFE9
 16803                           wreg	equ	0xFE8
 16804                           indf1	equ	0xFE7
 16805                           postinc1	equ	0xFE6
 16806                           postdec1	equ	0xFE5
 16807                           plusw1	equ	0xFE3
 16808                           fsr1h	equ	0xFE2
 16809                           fsr1l	equ	0xFE1
 16810                           indf2	equ	0xFDF
 16811                           postinc2	equ	0xFDE
 16812                           postdec2	equ	0xFDD
 16813                           plusw2	equ	0xFDB
 16814                           fsr2h	equ	0xFDA
 16815                           fsr2l	equ	0xFD9
 16816                           status	equ	0xFD8
 16817                           
 16818 ;; *************** function _isupper *****************
 16819 ;; Defined at:
 16820 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16821 ;; Parameters:    Size  Location     Type
 16822 ;;  c               1    wreg     unsigned char 
 16823 ;; Auto vars:     Size  Location     Type
 16824 ;;  c               1   31[BANK0 ] unsigned char 
 16825 ;; Return value:  Size  Location     Type
 16826 ;;		None               void
 16827 ;; Registers used:
 16828 ;;		wreg, status,2, status,0
 16829 ;; Tracked objects:
 16830 ;;		On entry : 0/0
 16831 ;;		On exit  : 0/0
 16832 ;;		Unchanged: 0/0
 16833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16835 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16838 ;;Total ram usage:        3 bytes
 16839 ;; Hardware stack levels used:    1
 16840 ;; Hardware stack levels required when called:   11
 16841 ;; This function calls:
 16842 ;;		Nothing
 16843 ;; This function is called by:
 16844 ;;		_xtoi
 16845 ;;		_isalpha
 16846 ;; This function uses a non-reentrant model
 16847 ;;
 16848                           
 16849                           	psect	text68
 16850  005CEE                     __ptext68:
 16851                           	opt stack 0
 16852  005CEE                     _isupper:
 16853                           	opt stack 13
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;incstack = 0
 16857                           ;isupper@c stored from wreg
 16858  005CEE  0100               	movlb	0	; () banked
 16859  005CF0  6F7F               	movwf	isupper@c& (0+255),b
 16860  005CF2  0E00               	movlw	0
 16861  005CF4  0100               	movlb	0	; () banked
 16862  005CF6  6F7E               	movwf	_isupper$6411& (0+255),b
 16863                           
 16864                           ; BSR set to: 0
 16865  005CF8  0E5B               	movlw	91
 16866  005CFA  617F               	cpfslt	isupper@c& (0+255),b
 16867  005CFC  D005               	goto	l3303
 16868                           
 16869                           ; BSR set to: 0
 16870  005CFE  0E40               	movlw	64
 16871  005D00  657F               	cpfsgt	isupper@c& (0+255),b
 16872  005D02  D002               	goto	l3303
 16873                           
 16874                           ; BSR set to: 0
 16875  005D04  0E01               	movlw	1
 16876  005D06  6F7E               	movwf	_isupper$6411& (0+255),b
 16877  005D08                     l3303:
 16878                           
 16879                           ; BSR set to: 0
 16880                           
 16881                           ; BSR set to: 0
 16882  005D08  C07E  F07D         	movff	_isupper$6411,??_isupper
 16883  005D0C  317D               	rrcf	??_isupper& (0+255),w,b
 16884  005D0E  0012               	return	
 16885  005D10                     __end_of_isupper:
 16886                           	opt stack 0
 16887                           tosu	equ	0xFFF
 16888                           tosh	equ	0xFFE
 16889                           tosl	equ	0xFFD
 16890                           pclath	equ	0xFFA
 16891                           tblptru	equ	0xFF8
 16892                           tblptrh	equ	0xFF7
 16893                           tblptrl	equ	0xFF6
 16894                           tablat	equ	0xFF5
 16895                           prodh	equ	0xFF4
 16896                           prodl	equ	0xFF3
 16897                           intcon	equ	0xFF2
 16898                           intcon2	equ	0xFF1
 16899                           intcon3	equ	0xFF0
 16900                           indf0	equ	0xFEF
 16901                           postinc0	equ	0xFEE
 16902                           plusw0	equ	0xFEB
 16903                           fsr0h	equ	0xFEA
 16904                           fsr0l	equ	0xFE9
 16905                           wreg	equ	0xFE8
 16906                           indf1	equ	0xFE7
 16907                           postinc1	equ	0xFE6
 16908                           postdec1	equ	0xFE5
 16909                           plusw1	equ	0xFE3
 16910                           fsr1h	equ	0xFE2
 16911                           fsr1l	equ	0xFE1
 16912                           indf2	equ	0xFDF
 16913                           postinc2	equ	0xFDE
 16914                           postdec2	equ	0xFDD
 16915                           plusw2	equ	0xFDB
 16916                           fsr2h	equ	0xFDA
 16917                           fsr2l	equ	0xFD9
 16918                           status	equ	0xFD8
 16919                           
 16920 ;; *************** function _strcpy *****************
 16921 ;; Defined at:
 16922 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;  to              2   29[BANK0 ] PTR unsigned char 
 16925 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16926 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 16927 ;;		 -> STR_23(20), STR_21(42), 
 16928 ;; Auto vars:     Size  Location     Type
 16929 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 16930 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16931 ;; Return value:  Size  Location     Type
 16932 ;;                  2   29[BANK0 ] PTR unsigned char 
 16933 ;; Registers used:
 16934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16944 ;;Total ram usage:        6 bytes
 16945 ;; Hardware stack levels used:    1
 16946 ;; Hardware stack levels required when called:   11
 16947 ;; This function calls:
 16948 ;;		Nothing
 16949 ;; This function is called by:
 16950 ;;		_Terminal
 16951 ;;		_Term_MainSm
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           	psect	text69
 16956  0059FE                     __ptext69:
 16957                           	opt stack 0
 16958  0059FE                     _strcpy:
 16959                           	opt stack 15
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;incstack = 0
 16963  0059FE  C07D  F081         	movff	strcpy@to,strcpy@cp
 16964  005A02  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 16965  005A06  D005               	goto	l3195
 16966  005A08  0100               	movlb	0	; () banked
 16967  005A0A  4B81               	infsnz	strcpy@cp& (0+255),f,b
 16968  005A0C  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 16969  005A0E  4B7F               	infsnz	strcpy@from& (0+255),f,b
 16970  005A10  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 16971  005A12                     l3195:
 16972                           
 16973                           ; BSR set to: 0
 16974  005A12  C07F  FFF6         	movff	strcpy@from,tblptrl
 16975  005A16  C080  FFF7         	movff	strcpy@from+1,tblptrh
 16976  005A1A                     	if	0	;tblptru may be non-zero
 16977  005A1A                     	endif
 16978  005A1A                     	if	0	;tblptru may be non-zero
 16979  005A1A                     	endif
 16980  005A1A  C081  FFD9         	movff	strcpy@cp,fsr2l
 16981  005A1E  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 16982  005A22  0008               	tblrd		*
 16983  005A24  CFF5 FFDF          	movff	tablat,indf2
 16984  005A28  50DF               	movf	indf2,w,c
 16985  005A2A  B4D8               	btfsc	status,2,c
 16986  005A2C  0012               	return	
 16987  005A2E  D7EC               	goto	l3196
 16988  005A30                     __end_of_strcpy:
 16989                           	opt stack 0
 16990                           tosu	equ	0xFFF
 16991                           tosh	equ	0xFFE
 16992                           tosl	equ	0xFFD
 16993                           pclath	equ	0xFFA
 16994                           tblptru	equ	0xFF8
 16995                           tblptrh	equ	0xFF7
 16996                           tblptrl	equ	0xFF6
 16997                           tablat	equ	0xFF5
 16998                           prodh	equ	0xFF4
 16999                           prodl	equ	0xFF3
 17000                           intcon	equ	0xFF2
 17001                           intcon2	equ	0xFF1
 17002                           intcon3	equ	0xFF0
 17003                           indf0	equ	0xFEF
 17004                           postinc0	equ	0xFEE
 17005                           plusw0	equ	0xFEB
 17006                           fsr0h	equ	0xFEA
 17007                           fsr0l	equ	0xFE9
 17008                           wreg	equ	0xFE8
 17009                           indf1	equ	0xFE7
 17010                           postinc1	equ	0xFE6
 17011                           postdec1	equ	0xFE5
 17012                           plusw1	equ	0xFE3
 17013                           fsr1h	equ	0xFE2
 17014                           fsr1l	equ	0xFE1
 17015                           indf2	equ	0xFDF
 17016                           postinc2	equ	0xFDE
 17017                           postdec2	equ	0xFDD
 17018                           plusw2	equ	0xFDB
 17019                           fsr2h	equ	0xFDA
 17020                           fsr2l	equ	0xFD9
 17021                           status	equ	0xFD8
 17022                           
 17023 ;; *************** function _putUSBUSART *****************
 17024 ;; Defined at:
 17025 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17028 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17029 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17030 ;;		 -> RxBuffer(400), 
 17031 ;;  length          1   37[BANK0 ] unsigned char 
 17032 ;; Auto vars:     Size  Location     Type
 17033 ;;		None
 17034 ;; Return value:  Size  Location     Type
 17035 ;;                  1    wreg      void 
 17036 ;; Registers used:
 17037 ;;		wreg, status,2, status,0
 17038 ;; Tracked objects:
 17039 ;;		On entry : 0/0
 17040 ;;		On exit  : 0/0
 17041 ;;		Unchanged: 0/0
 17042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17043 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17046 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17047 ;;Total ram usage:        3 bytes
 17048 ;; Hardware stack levels used:    1
 17049 ;; Hardware stack levels required when called:   11
 17050 ;; This function calls:
 17051 ;;		Nothing
 17052 ;; This function is called by:
 17053 ;;		_Terminal
 17054 ;;		_Term_MainSm
 17055 ;;		_GsmGprsTerminal
 17056 ;; This function uses a non-reentrant model
 17057 ;;
 17058                           
 17059                           	psect	text70
 17060  005D10                     __ptext70:
 17061                           	opt stack 0
 17062  005D10                     _putUSBUSART:
 17063                           	opt stack 15
 17064                           
 17065                           ;usb_device_cdc.c: 584: ;
 17066                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17067                           
 17068                           ;incstack = 0
 17069  005D10  0100               	movlb	0	; () banked
 17070  005D12  51C1               	movf	_cdc_trf_state& (0+255),w,b
 17071  005D14  A4D8               	btfss	status,2,c
 17072  005D16  0012               	return	
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;usb_device_cdc.c: 586: {
 17076                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17077  005D18  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17078  005D1C  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17079                           
 17080                           ; BSR set to: 0
 17081  005D20  C085  F0C0         	movff	putUSBUSART@length,_cdc_tx_len
 17082                           
 17083                           ; BSR set to: 0
 17084  005D24  0E01               	movlw	1
 17085  005D26  0101               	movlb	1	; () banked
 17086  005D28  6FE3               	movwf	_cdc_mem_type& (0+255),b
 17087                           
 17088                           ; BSR set to: 1
 17089  005D2A  0E01               	movlw	1
 17090  005D2C  0100               	movlb	0	; () banked
 17091  005D2E  6FC1               	movwf	_cdc_trf_state& (0+255),b
 17092  005D30  0012               	return	
 17093  005D32                     __end_of_putUSBUSART:
 17094                           	opt stack 0
 17095                           tosu	equ	0xFFF
 17096                           tosh	equ	0xFFE
 17097                           tosl	equ	0xFFD
 17098                           pclath	equ	0xFFA
 17099                           tblptru	equ	0xFF8
 17100                           tblptrh	equ	0xFF7
 17101                           tblptrl	equ	0xFF6
 17102                           tablat	equ	0xFF5
 17103                           prodh	equ	0xFF4
 17104                           prodl	equ	0xFF3
 17105                           intcon	equ	0xFF2
 17106                           intcon2	equ	0xFF1
 17107                           intcon3	equ	0xFF0
 17108                           indf0	equ	0xFEF
 17109                           postinc0	equ	0xFEE
 17110                           plusw0	equ	0xFEB
 17111                           fsr0h	equ	0xFEA
 17112                           fsr0l	equ	0xFE9
 17113                           wreg	equ	0xFE8
 17114                           indf1	equ	0xFE7
 17115                           postinc1	equ	0xFE6
 17116                           postdec1	equ	0xFE5
 17117                           plusw1	equ	0xFE3
 17118                           fsr1h	equ	0xFE2
 17119                           fsr1l	equ	0xFE1
 17120                           indf2	equ	0xFDF
 17121                           postinc2	equ	0xFDE
 17122                           postdec2	equ	0xFDD
 17123                           plusw2	equ	0xFDB
 17124                           fsr2h	equ	0xFDA
 17125                           fsr2l	equ	0xFD9
 17126                           status	equ	0xFD8
 17127                           
 17128 ;; *************** function _itoa *****************
 17129 ;; Defined at:
 17130 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17133 ;;		 -> Terminal@Payload(80), 
 17134 ;;  val             2   53[BANK0 ] int 
 17135 ;;  base            2   55[BANK0 ] int 
 17136 ;; Auto vars:     Size  Location     Type
 17137 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17138 ;;		 -> Terminal@Payload(80), 
 17139 ;; Return value:  Size  Location     Type
 17140 ;;                  2   51[BANK0 ] PTR unsigned char 
 17141 ;; Registers used:
 17142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17143 ;; Tracked objects:
 17144 ;;		On entry : 0/0
 17145 ;;		On exit  : 0/0
 17146 ;;		Unchanged: 0/0
 17147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17148 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17151 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17152 ;;Total ram usage:        8 bytes
 17153 ;; Hardware stack levels used:    1
 17154 ;; Hardware stack levels required when called:   13
 17155 ;; This function calls:
 17156 ;;		_utoa
 17157 ;; This function is called by:
 17158 ;;		_Terminal
 17159 ;; This function uses a non-reentrant model
 17160 ;;
 17161                           
 17162                           	psect	text71
 17163  0055F6                     __ptext71:
 17164                           	opt stack 0
 17165  0055F6                     _itoa:
 17166                           	opt stack 12
 17167                           
 17168                           ; BSR set to: 0
 17169                           ;incstack = 0
 17170  0055F6  C093  F099         	movff	itoa@buf,itoa@cp
 17171  0055FA  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17172  0055FE  0100               	movlb	0	; () banked
 17173  005600  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17174  005602  D00C               	goto	l2943
 17175                           
 17176                           ; BSR set to: 0
 17177  005604  C093  FFD9         	movff	itoa@buf,fsr2l
 17178  005608  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17179  00560C  0E2D               	movlw	45
 17180  00560E  6EDF               	movwf	indf2,c
 17181                           
 17182                           ; BSR set to: 0
 17183  005610  4B93               	infsnz	itoa@buf& (0+255),f,b
 17184  005612  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17185                           
 17186                           ; BSR set to: 0
 17187  005614  6D95               	negf	itoa@val& (0+255),b
 17188  005616  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17189  005618  B0D8               	btfsc	status,0,c
 17190  00561A  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17191  00561C                     l2943:
 17192                           
 17193                           ; BSR set to: 0
 17194                           
 17195                           ; BSR set to: 0
 17196  00561C  C093  F08A         	movff	itoa@buf,utoa@buf
 17197  005620  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17198  005624  C095  F08C         	movff	itoa@val,utoa@val
 17199  005628  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17200  00562C  C097  F08E         	movff	itoa@base,utoa@base
 17201  005630  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17202  005634  EC86  F020         	call	_utoa	;wreg free
 17203  005638  0012               	return	
 17204  00563A                     __end_of_itoa:
 17205                           	opt stack 0
 17206                           tosu	equ	0xFFF
 17207                           tosh	equ	0xFFE
 17208                           tosl	equ	0xFFD
 17209                           pclath	equ	0xFFA
 17210                           tblptru	equ	0xFF8
 17211                           tblptrh	equ	0xFF7
 17212                           tblptrl	equ	0xFF6
 17213                           tablat	equ	0xFF5
 17214                           prodh	equ	0xFF4
 17215                           prodl	equ	0xFF3
 17216                           intcon	equ	0xFF2
 17217                           intcon2	equ	0xFF1
 17218                           intcon3	equ	0xFF0
 17219                           indf0	equ	0xFEF
 17220                           postinc0	equ	0xFEE
 17221                           plusw0	equ	0xFEB
 17222                           fsr0h	equ	0xFEA
 17223                           fsr0l	equ	0xFE9
 17224                           wreg	equ	0xFE8
 17225                           indf1	equ	0xFE7
 17226                           postinc1	equ	0xFE6
 17227                           postdec1	equ	0xFE5
 17228                           plusw1	equ	0xFE3
 17229                           fsr1h	equ	0xFE2
 17230                           fsr1l	equ	0xFE1
 17231                           indf2	equ	0xFDF
 17232                           postinc2	equ	0xFDE
 17233                           postdec2	equ	0xFDD
 17234                           plusw2	equ	0xFDB
 17235                           fsr2h	equ	0xFDA
 17236                           fsr2l	equ	0xFD9
 17237                           status	equ	0xFD8
 17238                           
 17239 ;; *************** function _utoa *****************
 17240 ;; Defined at:
 17241 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17244 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17245 ;;  val             2   44[BANK0 ] unsigned int 
 17246 ;;  base            2   46[BANK0 ] int 
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;  v               2   48[BANK0 ] unsigned int 
 17249 ;;  c               1   50[BANK0 ] unsigned char 
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  2   42[BANK0 ] PTR unsigned char 
 17252 ;; Registers used:
 17253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17259 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17260 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;Total ram usage:        9 bytes
 17264 ;; Hardware stack levels used:    1
 17265 ;; Hardware stack levels required when called:   12
 17266 ;; This function calls:
 17267 ;;		___lwdiv
 17268 ;;		___lwmod
 17269 ;; This function is called by:
 17270 ;;		_Term_MainSm
 17271 ;;		_itoa
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           	psect	text72
 17276  00410C                     __ptext72:
 17277                           	opt stack 0
 17278  00410C                     _utoa:
 17279                           	opt stack 14
 17280                           
 17281                           ;incstack = 0
 17282  00410C  C08C  F090         	movff	utoa@val,utoa@v
 17283  004110  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17284  004114  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17285  004118  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17286  00411C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17287  004120  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17288  004124  ECEB  F028         	call	___lwdiv	;wreg free
 17289  004128  C083  F090         	movff	?___lwdiv,utoa@v
 17290  00412C  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17291  004130  0100               	movlb	0	; () banked
 17292  004132  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17293  004134  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17294                           
 17295                           ; BSR set to: 0
 17296  004136  5190               	movf	utoa@v& (0+255),w,b
 17297  004138  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17298  00413A  A4D8               	btfss	status,2,c
 17299  00413C  D7EB               	goto	l2947
 17300                           
 17301                           ; BSR set to: 0
 17302                           
 17303                           ; BSR set to: 0
 17304  00413E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17305  004142  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17306  004146  0E00               	movlw	0
 17307  004148  6EDF               	movwf	indf2,c
 17308                           
 17309                           ; BSR set to: 0
 17310  00414A  078A               	decf	utoa@buf& (0+255),f,b
 17311  00414C  A0D8               	btfss	status,0,c
 17312  00414E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17313  004150                     
 17314                           ; BSR set to: 0
 17315                           
 17316                           ; BSR set to: 0
 17317  004150  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17318  004154  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17319  004158  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17320  00415C  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17321  004160  EC1D  F02B         	call	___lwmod	;wreg free
 17322  004164  0100               	movlb	0	; () banked
 17323  004166  517D               	movf	?___lwmod& (0+255),w,b
 17324  004168  6F92               	movwf	utoa@c& (0+255),b
 17325                           
 17326                           ; BSR set to: 0
 17327  00416A  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17328  00416E  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17329  004172  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17330  004176  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17331  00417A  ECEB  F028         	call	___lwdiv	;wreg free
 17332  00417E  C083  F08C         	movff	?___lwdiv,utoa@val
 17333  004182  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17334  004186  0E09               	movlw	9
 17335  004188  0100               	movlb	0	; () banked
 17336  00418A  6592               	cpfsgt	utoa@c& (0+255),b
 17337  00418C  D002               	goto	l2950
 17338                           
 17339                           ; BSR set to: 0
 17340  00418E  0E07               	movlw	7
 17341  004190  2792               	addwf	utoa@c& (0+255),f,b
 17342  004192                     l2950:
 17343                           
 17344                           ; BSR set to: 0
 17345  004192  0E30               	movlw	48
 17346  004194  2792               	addwf	utoa@c& (0+255),f,b
 17347                           
 17348                           ; BSR set to: 0
 17349  004196  C08A  FFD9         	movff	utoa@buf,fsr2l
 17350  00419A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17351  00419E  C092  FFDF         	movff	utoa@c,indf2
 17352                           
 17353                           ; BSR set to: 0
 17354  0041A2  078A               	decf	utoa@buf& (0+255),f,b
 17355  0041A4  A0D8               	btfss	status,0,c
 17356  0041A6  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17357                           
 17358                           ; BSR set to: 0
 17359  0041A8  518C               	movf	utoa@val& (0+255),w,b
 17360  0041AA  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17361  0041AC  A4D8               	btfss	status,2,c
 17362  0041AE  D7D0               	goto	l2949
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;	Return value of _utoa is never used
 17366                           
 17367                           ; BSR set to: 0
 17368  0041B0  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17369  0041B2  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17370  0041B4  0012               	return	
 17371  0041B6                     __end_of_utoa:
 17372                           	opt stack 0
 17373                           tosu	equ	0xFFF
 17374                           tosh	equ	0xFFE
 17375                           tosl	equ	0xFFD
 17376                           pclath	equ	0xFFA
 17377                           tblptru	equ	0xFF8
 17378                           tblptrh	equ	0xFF7
 17379                           tblptrl	equ	0xFF6
 17380                           tablat	equ	0xFF5
 17381                           prodh	equ	0xFF4
 17382                           prodl	equ	0xFF3
 17383                           intcon	equ	0xFF2
 17384                           intcon2	equ	0xFF1
 17385                           intcon3	equ	0xFF0
 17386                           indf0	equ	0xFEF
 17387                           postinc0	equ	0xFEE
 17388                           plusw0	equ	0xFEB
 17389                           fsr0h	equ	0xFEA
 17390                           fsr0l	equ	0xFE9
 17391                           wreg	equ	0xFE8
 17392                           indf1	equ	0xFE7
 17393                           postinc1	equ	0xFE6
 17394                           postdec1	equ	0xFE5
 17395                           plusw1	equ	0xFE3
 17396                           fsr1h	equ	0xFE2
 17397                           fsr1l	equ	0xFE1
 17398                           indf2	equ	0xFDF
 17399                           postinc2	equ	0xFDE
 17400                           postdec2	equ	0xFDD
 17401                           plusw2	equ	0xFDB
 17402                           fsr2h	equ	0xFDA
 17403                           fsr2l	equ	0xFD9
 17404                           status	equ	0xFD8
 17405                           
 17406 ;; *************** function ___lwmod *****************
 17407 ;; Defined at:
 17408 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17409 ;; Parameters:    Size  Location     Type
 17410 ;;  dividend        2   29[BANK0 ] unsigned int 
 17411 ;;  divisor         2   31[BANK0 ] unsigned int 
 17412 ;; Auto vars:     Size  Location     Type
 17413 ;;  counter         1   33[BANK0 ] unsigned char 
 17414 ;; Return value:  Size  Location     Type
 17415 ;;                  2   29[BANK0 ] unsigned int 
 17416 ;; Registers used:
 17417 ;;		wreg, status,2, status,0
 17418 ;; Tracked objects:
 17419 ;;		On entry : 0/0
 17420 ;;		On exit  : 0/0
 17421 ;;		Unchanged: 0/0
 17422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17427 ;;Total ram usage:        5 bytes
 17428 ;; Hardware stack levels used:    1
 17429 ;; Hardware stack levels required when called:   11
 17430 ;; This function calls:
 17431 ;;		Nothing
 17432 ;; This function is called by:
 17433 ;;		_utoa
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437                           	psect	text73
 17438  00563A                     __ptext73:
 17439                           	opt stack 0
 17440  00563A                     ___lwmod:
 17441                           	opt stack 14
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;incstack = 0
 17445  00563A  0100               	movlb	0	; () banked
 17446  00563C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17447  00563E  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17448  005640  B4D8               	btfsc	status,2,c
 17449  005642  D018               	goto	l3045
 17450                           
 17451                           ; BSR set to: 0
 17452  005644  0E01               	movlw	1
 17453  005646  6F81               	movwf	___lwmod@counter& (0+255),b
 17454  005648  D004               	goto	l3040
 17455  00564A                     
 17456                           ; BSR set to: 0
 17457                           
 17458                           ; BSR set to: 0
 17459  00564A  90D8               	bcf	status,0,c
 17460  00564C  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17461  00564E  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17462  005650  2B81               	incf	___lwmod@counter& (0+255),f,b
 17463  005652                     l3040:
 17464                           
 17465                           ; BSR set to: 0
 17466                           
 17467                           ; BSR set to: 0
 17468  005652  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17469  005654  D7FA               	goto	l3041
 17470  005656                     u10340:
 17471                           
 17472                           ; BSR set to: 0
 17473                           
 17474                           ; BSR set to: 0
 17475                           
 17476                           ; BSR set to: 0
 17477  005656  517F               	movf	___lwmod@divisor& (0+255),w,b
 17478  005658  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17479  00565A  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17480  00565C  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17481  00565E  A0D8               	btfss	status,0,c
 17482  005660  D004               	goto	l3044
 17483                           
 17484                           ; BSR set to: 0
 17485  005662  517F               	movf	___lwmod@divisor& (0+255),w,b
 17486  005664  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17487  005666  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17488  005668  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17489  00566A                     l3044:
 17490                           
 17491                           ; BSR set to: 0
 17492                           
 17493                           ; BSR set to: 0
 17494  00566A  90D8               	bcf	status,0,c
 17495  00566C  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17496  00566E  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17497                           
 17498                           ; BSR set to: 0
 17499  005670  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17500  005672  D7F1               	goto	u10340
 17501  005674                     l3045:
 17502                           
 17503                           ; BSR set to: 0
 17504                           
 17505                           ; BSR set to: 0
 17506  005674  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17507  005678  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17508                           
 17509                           ; BSR set to: 0
 17510  00567C  0012               	return		;funcret
 17511  00567E                     __end_of___lwmod:
 17512                           	opt stack 0
 17513                           tosu	equ	0xFFF
 17514                           tosh	equ	0xFFE
 17515                           tosl	equ	0xFFD
 17516                           pclath	equ	0xFFA
 17517                           tblptru	equ	0xFF8
 17518                           tblptrh	equ	0xFF7
 17519                           tblptrl	equ	0xFF6
 17520                           tablat	equ	0xFF5
 17521                           prodh	equ	0xFF4
 17522                           prodl	equ	0xFF3
 17523                           intcon	equ	0xFF2
 17524                           intcon2	equ	0xFF1
 17525                           intcon3	equ	0xFF0
 17526                           indf0	equ	0xFEF
 17527                           postinc0	equ	0xFEE
 17528                           plusw0	equ	0xFEB
 17529                           fsr0h	equ	0xFEA
 17530                           fsr0l	equ	0xFE9
 17531                           wreg	equ	0xFE8
 17532                           indf1	equ	0xFE7
 17533                           postinc1	equ	0xFE6
 17534                           postdec1	equ	0xFE5
 17535                           plusw1	equ	0xFE3
 17536                           fsr1h	equ	0xFE2
 17537                           fsr1l	equ	0xFE1
 17538                           indf2	equ	0xFDF
 17539                           postinc2	equ	0xFDE
 17540                           postdec2	equ	0xFDD
 17541                           plusw2	equ	0xFDB
 17542                           fsr2h	equ	0xFDA
 17543                           fsr2l	equ	0xFD9
 17544                           status	equ	0xFD8
 17545                           
 17546 ;; *************** function _getsUSBUSART *****************
 17547 ;; Defined at:
 17548 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17549 ;; Parameters:    Size  Location     Type
 17550 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17551 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17552 ;;  len             1   38[BANK0 ] unsigned char 
 17553 ;; Auto vars:     Size  Location     Type
 17554 ;;		None
 17555 ;; Return value:  Size  Location     Type
 17556 ;;                  1    wreg      unsigned char 
 17557 ;; Registers used:
 17558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17559 ;; Tracked objects:
 17560 ;;		On entry : 0/0
 17561 ;;		On exit  : 0/0
 17562 ;;		Unchanged: 0/0
 17563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17564 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17567 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17568 ;;Total ram usage:        4 bytes
 17569 ;; Hardware stack levels used:    1
 17570 ;; Hardware stack levels required when called:   12
 17571 ;; This function calls:
 17572 ;;		_USBTransferOnePacket
 17573 ;; This function is called by:
 17574 ;;		_Terminal
 17575 ;;		_GsmGprsTerminal
 17576 ;; This function uses a non-reentrant model
 17577 ;;
 17578                           
 17579                           	psect	text74
 17580  004614                     __ptext74:
 17581                           	opt stack 0
 17582  004614                     _getsUSBUSART:
 17583                           	opt stack 13
 17584                           
 17585                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;incstack = 0
 17589  004614  0E00               	movlw	0
 17590  004616  0100               	movlb	0	; () banked
 17591  004618  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17595  00461A  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17596  00461C  11B9               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17597  00461E  B4D8               	btfsc	status,2,c
 17598  004620  D006               	goto	u10870
 17599                           
 17600                           ; BSR set to: 0
 17601  004622  C0B8  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17602  004626  C0B9  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17603  00462A  BEDF               	btfsc	indf2,7,c
 17604  00462C  D03B               	goto	l1907
 17605  00462E                     u10870:
 17606                           
 17607                           ; BSR set to: 0
 17608                           ;usb_device_cdc.c: 493: {
 17609                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17610                           
 17611                           ; BSR set to: 0
 17612  00462E  EE20 F001          	lfsr	2,1
 17613  004632  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17614  004634  26D9               	addwf	fsr2l,f,c
 17615  004636  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17616  004638  22DA               	addwfc	fsr2h,f,c
 17617  00463A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17618  00463C  5CDE               	subwf	postinc2,w,c
 17619  00463E  B0D8               	btfsc	status,0,c
 17620  004640  D008               	goto	l1910
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17624  004642  EE20 F001          	lfsr	2,1
 17625  004646  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17626  004648  26D9               	addwf	fsr2l,f,c
 17627  00464A  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17628  00464C  22DA               	addwfc	fsr2h,f,c
 17629  00464E  50DF               	movf	indf2,w,c
 17630  004650  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17631  004652                     l1910:
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17635                           
 17636                           ; BSR set to: 0
 17637  004652  0E00               	movlw	0
 17638  004654  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17639  004656  D013               	goto	l1911
 17640  004658                     
 17641                           ; BSR set to: 0
 17642                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17643                           
 17644                           ; BSR set to: 0
 17645  004658  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17646  00465A  0D01               	mullw	1
 17647  00465C  0E54               	movlw	low _cdc_data_rx
 17648  00465E  24F3               	addwf	prodl,w,c
 17649  004660  6ED9               	movwf	fsr2l,c
 17650  004662  0E04               	movlw	high _cdc_data_rx
 17651  004664  20F4               	addwfc	prodh,w,c
 17652  004666  6EDA               	movwf	fsr2h,c
 17653  004668  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17654  00466A  0D01               	mullw	1
 17655  00466C  50F3               	movf	prodl,w,c
 17656  00466E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17657  004670  6EE1               	movwf	fsr1l,c
 17658  004672  50F4               	movf	prodh,w,c
 17659  004674  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17660  004676  6EE2               	movwf	fsr1h,c
 17661  004678  CFDF FFE7          	movff	indf2,indf1
 17662                           
 17663                           ; BSR set to: 0
 17664  00467C  2BC2               	incf	_cdc_rx_len& (0+255),f,b
 17665  00467E                     l1911:
 17666                           
 17667                           ; BSR set to: 0
 17668                           
 17669                           ; BSR set to: 0
 17670  00467E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17671  004680  5DC2               	subwf	_cdc_rx_len& (0+255),w,b
 17672  004682  A0D8               	btfss	status,0,c
 17673  004684  D7E9               	goto	l1912
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17677                           
 17678                           ; BSR set to: 0
 17679  004686  0E00               	movlw	0
 17680  004688  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17681  00468A  0E54               	movlw	low _cdc_data_rx
 17682  00468C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17683  00468E  0E04               	movlw	high _cdc_data_rx
 17684  004690  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17685  004692  0E40               	movlw	64
 17686  004694  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17687  004696  0E02               	movlw	2
 17688  004698  ECC2  F01E         	call	_USBTransferOnePacket
 17689  00469C  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17690  0046A0  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17691  0046A4                     l1907:
 17692                           
 17693                           ;usb_device_cdc.c: 513: }
 17694                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17695  0046A4  0100               	movlb	0	; () banked
 17696  0046A6  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17697  0046A8  0012               	return	
 17698  0046AA                     __end_of_getsUSBUSART:
 17699                           	opt stack 0
 17700                           tosu	equ	0xFFF
 17701                           tosh	equ	0xFFE
 17702                           tosl	equ	0xFFD
 17703                           pclath	equ	0xFFA
 17704                           tblptru	equ	0xFF8
 17705                           tblptrh	equ	0xFF7
 17706                           tblptrl	equ	0xFF6
 17707                           tablat	equ	0xFF5
 17708                           prodh	equ	0xFF4
 17709                           prodl	equ	0xFF3
 17710                           intcon	equ	0xFF2
 17711                           intcon2	equ	0xFF1
 17712                           intcon3	equ	0xFF0
 17713                           indf0	equ	0xFEF
 17714                           postinc0	equ	0xFEE
 17715                           plusw0	equ	0xFEB
 17716                           fsr0h	equ	0xFEA
 17717                           fsr0l	equ	0xFE9
 17718                           wreg	equ	0xFE8
 17719                           indf1	equ	0xFE7
 17720                           postinc1	equ	0xFE6
 17721                           postdec1	equ	0xFE5
 17722                           plusw1	equ	0xFE3
 17723                           fsr1h	equ	0xFE2
 17724                           fsr1l	equ	0xFE1
 17725                           indf2	equ	0xFDF
 17726                           postinc2	equ	0xFDE
 17727                           postdec2	equ	0xFDD
 17728                           plusw2	equ	0xFDB
 17729                           fsr2h	equ	0xFDA
 17730                           fsr2l	equ	0xFD9
 17731                           status	equ	0xFD8
 17732                           
 17733 ;; *************** function _USBTransferOnePacket *****************
 17734 ;; Defined at:
 17735 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17736 ;; Parameters:    Size  Location     Type
 17737 ;;  ep              1    wreg     unsigned char 
 17738 ;;  dir             1   29[BANK0 ] unsigned char 
 17739 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17740 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17741 ;;  len             1   32[BANK0 ] unsigned char 
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  ep              1   33[BANK0 ] unsigned char 
 17744 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17745 ;;		 -> NULL(0), BDT(48), 
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  2   29[BANK0 ] PTR void 
 17748 ;; Registers used:
 17749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17756 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17758 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17759 ;;Total ram usage:        7 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; Hardware stack levels required when called:   11
 17762 ;; This function calls:
 17763 ;;		Nothing
 17764 ;; This function is called by:
 17765 ;;		_CDCInitEP
 17766 ;;		_getsUSBUSART
 17767 ;;		_CDCTxService
 17768 ;;		_USBCDCEventHandler
 17769 ;; This function uses a non-reentrant model
 17770 ;;
 17771                           
 17772                           	psect	text75
 17773  003D84                     __ptext75:
 17774                           	opt stack 0
 17775  003D84                     _USBTransferOnePacket:
 17776                           	opt stack 13
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;incstack = 0
 17780                           ;USBTransferOnePacket@ep stored from wreg
 17781  003D84  0100               	movlb	0	; () banked
 17782  003D86  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17783                           
 17784                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17785                           ;usb_device.c: 1018: if(dir != 0)
 17786  003D88  0100               	movlb	0	; () banked
 17787  003D8A  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17788  003D8C  B4D8               	btfsc	status,2,c
 17789  003D8E  D007               	goto	l1631
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;usb_device.c: 1019: {
 17793                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17794  003D90  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17795  003D92  0D02               	mullw	2
 17796  003D94  0EB2               	movlw	low _pBDTEntryIn
 17797  003D96  24F3               	addwf	prodl,w,c
 17798  003D98  6ED9               	movwf	fsr2l,c
 17799  003D9A  0E00               	movlw	high _pBDTEntryIn
 17800  003D9C  D006               	goto	L16
 17801  003D9E                     l1631:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;usb_device.c: 1023: else
 17805                           ;usb_device.c: 1024: {
 17806                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17807                           
 17808                           ; BSR set to: 0
 17809  003D9E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17810  003DA0  0D02               	mullw	2
 17811  003DA2  0E0E               	movlw	low _pBDTEntryOut
 17812  003DA4  24F3               	addwf	prodl,w,c
 17813  003DA6  6ED9               	movwf	fsr2l,c
 17814  003DA8  0E03               	movlw	high _pBDTEntryOut
 17815  003DAA                     L16:
 17816  003DAA  20F4               	addwfc	prodh,w,c
 17817  003DAC  6EDA               	movwf	fsr2h,c
 17818  003DAE  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17819  003DB2  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17820                           
 17821                           ; BSR set to: 0
 17822                           ;usb_device.c: 1027: }
 17823                           ;usb_device.c: 1031: if(handle == 0)
 17824                           
 17825                           ; BSR set to: 0
 17826  003DB6  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17827  003DB8  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17828  003DBA  A4D8               	btfss	status,2,c
 17829  003DBC  D005               	goto	l1633
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;usb_device.c: 1032: {
 17833                           ;usb_device.c: 1033: return 0;
 17834  003DBE  0E00               	movlw	0
 17835  003DC0  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17836  003DC2  0E00               	movlw	0
 17837  003DC4  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17838                           
 17839                           ; BSR set to: 0
 17840  003DC6  0012               	return	
 17841  003DC8                     l1633:
 17842                           
 17843                           ; BSR set to: 0
 17844                           ;usb_device.c: 1034: }
 17845                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17846                           
 17847                           ; BSR set to: 0
 17848  003DC8  EE20 F002          	lfsr	2,2
 17849  003DCC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17850  003DCE  26D9               	addwf	fsr2l,f,c
 17851  003DD0  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17852  003DD2  22DA               	addwfc	fsr2h,f,c
 17853  003DD4  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17854  003DD8  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17855                           
 17856                           ;usb_device.c: 1048: handle->CNT = len;
 17857  003DDC  EE20 F001          	lfsr	2,1
 17858  003DE0  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17859  003DE2  26D9               	addwf	fsr2l,f,c
 17860  003DE4  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17861  003DE6  22DA               	addwfc	fsr2h,f,c
 17862  003DE8  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 17866  003DEC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17867  003DF0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17868  003DF4  0E40               	movlw	64
 17869  003DF6  16DF               	andwf	indf2,f,c
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 17873  003DF8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17874  003DFC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17875  003E00  0E00               	movlw	0
 17876  003E02  86DB               	bsf	plusw2,3,c
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 17880  003E04  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17881  003E08  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17882  003E0C  0E00               	movlw	0
 17883  003E0E  8EDB               	bsf	plusw2,7,c
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;usb_device.c: 1054: if(dir != 0)
 17887  003E10  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17888  003E12  B4D8               	btfsc	status,2,c
 17889  003E14  D007               	goto	l1635
 17890                           
 17891                           ; BSR set to: 0
 17892                           ;usb_device.c: 1055: {
 17893                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17894  003E16  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17895  003E18  0D02               	mullw	2
 17896  003E1A  0EB2               	movlw	low _pBDTEntryIn
 17897  003E1C  24F3               	addwf	prodl,w,c
 17898  003E1E  6ED9               	movwf	fsr2l,c
 17899  003E20  0E00               	movlw	high _pBDTEntryIn
 17900  003E22  D006               	goto	L17
 17901  003E24                     l1635:
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;usb_device.c: 1059: else
 17905                           ;usb_device.c: 1060: {
 17906                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17907                           
 17908                           ; BSR set to: 0
 17909  003E24  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17910  003E26  0D02               	mullw	2
 17911  003E28  0E0E               	movlw	low _pBDTEntryOut
 17912  003E2A  24F3               	addwf	prodl,w,c
 17913  003E2C  6ED9               	movwf	fsr2l,c
 17914  003E2E  0E03               	movlw	high _pBDTEntryOut
 17915  003E30                     L17:
 17916  003E30  20F4               	addwfc	prodh,w,c
 17917  003E32  6EDA               	movwf	fsr2h,c
 17918  003E34  0E04               	movlw	4
 17919  003E36  1ADF               	xorwf	indf2,f,c
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;usb_device.c: 1063: }
 17923                           ;usb_device.c: 1064: return (void*)handle;
 17924                           
 17925                           ; BSR set to: 0
 17926  003E38  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17927  003E3C  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17928  003E40  0012               	return	
 17929  003E42                     __end_of_USBTransferOnePacket:
 17930                           	opt stack 0
 17931                           tosu	equ	0xFFF
 17932                           tosh	equ	0xFFE
 17933                           tosl	equ	0xFFD
 17934                           pclath	equ	0xFFA
 17935                           tblptru	equ	0xFF8
 17936                           tblptrh	equ	0xFF7
 17937                           tblptrl	equ	0xFF6
 17938                           tablat	equ	0xFF5
 17939                           prodh	equ	0xFF4
 17940                           prodl	equ	0xFF3
 17941                           intcon	equ	0xFF2
 17942                           intcon2	equ	0xFF1
 17943                           intcon3	equ	0xFF0
 17944                           indf0	equ	0xFEF
 17945                           postinc0	equ	0xFEE
 17946                           plusw0	equ	0xFEB
 17947                           fsr0h	equ	0xFEA
 17948                           fsr0l	equ	0xFE9
 17949                           wreg	equ	0xFE8
 17950                           indf1	equ	0xFE7
 17951                           postinc1	equ	0xFE6
 17952                           postdec1	equ	0xFE5
 17953                           plusw1	equ	0xFE3
 17954                           fsr1h	equ	0xFE2
 17955                           fsr1l	equ	0xFE1
 17956                           indf2	equ	0xFDF
 17957                           postinc2	equ	0xFDE
 17958                           postdec2	equ	0xFDD
 17959                           plusw2	equ	0xFDB
 17960                           fsr2h	equ	0xFDA
 17961                           fsr2l	equ	0xFD9
 17962                           status	equ	0xFD8
 17963                           
 17964 ;; *************** function _atoi *****************
 17965 ;; Defined at:
 17966 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 17967 ;; Parameters:    Size  Location     Type
 17968 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 17969 ;;		 -> Terminal@Len(4), 
 17970 ;; Auto vars:     Size  Location     Type
 17971 ;;  a               2   40[BANK0 ] int 
 17972 ;;  sign            1   39[BANK0 ] unsigned char 
 17973 ;; Return value:  Size  Location     Type
 17974 ;;                  2   35[BANK0 ] int 
 17975 ;; Registers used:
 17976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17985 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17986 ;;Total ram usage:        7 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; Hardware stack levels required when called:   12
 17989 ;; This function calls:
 17990 ;;		___wmul
 17991 ;;		_isdigit
 17992 ;; This function is called by:
 17993 ;;		_Terminal
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text76
 17998  0034D4                     __ptext76:
 17999                           	opt stack 0
 18000  0034D4                     _atoi:
 18001                           	opt stack 13
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;incstack = 0
 18005  0034D4  D003               	goto	l2756
 18006  0034D6  0100               	movlb	0	; () banked
 18007  0034D8  4B83               	infsnz	atoi@s& (0+255),f,b
 18008  0034DA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18009  0034DC                     l2756:
 18010                           
 18011                           ; BSR set to: 0
 18012  0034DC  C083  FFD9         	movff	atoi@s,fsr2l
 18013  0034E0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18014  0034E4  0E20               	movlw	32
 18015  0034E6  18DE               	xorwf	postinc2,w,c
 18016  0034E8  B4D8               	btfsc	status,2,c
 18017  0034EA  D7F5               	goto	l2757
 18018  0034EC  C083  FFD9         	movff	atoi@s,fsr2l
 18019  0034F0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18020  0034F4  0E09               	movlw	9
 18021  0034F6  18DE               	xorwf	postinc2,w,c
 18022  0034F8  B4D8               	btfsc	status,2,c
 18023  0034FA  D7ED               	goto	l2757
 18024  0034FC  0E00               	movlw	0
 18025  0034FE  0100               	movlb	0	; () banked
 18026  003500  6F89               	movwf	(atoi@a+1)& (0+255),b
 18027  003502  0E00               	movlw	0
 18028  003504  6F88               	movwf	atoi@a& (0+255),b
 18029  003506  0E00               	movlw	0
 18030  003508  6F87               	movwf	atoi@sign& (0+255),b
 18031                           
 18032                           ; BSR set to: 0
 18033  00350A  C083  FFD9         	movff	atoi@s,fsr2l
 18034  00350E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18035  003512  0E2D               	movlw	45
 18036  003514  18DE               	xorwf	postinc2,w,c
 18037  003516  A4D8               	btfss	status,2,c
 18038  003518  D002               	goto	l2759
 18039                           
 18040                           ; BSR set to: 0
 18041  00351A  2B87               	incf	atoi@sign& (0+255),f,b
 18042  00351C  D026               	goto	l12147
 18043  00351E                     l2759:
 18044                           
 18045                           ; BSR set to: 0
 18046                           
 18047                           ; BSR set to: 0
 18048  00351E  C083  FFD9         	movff	atoi@s,fsr2l
 18049  003522  C084  FFDA         	movff	atoi@s+1,fsr2h
 18050  003526  0E2B               	movlw	43
 18051  003528  18DE               	xorwf	postinc2,w,c
 18052  00352A  A4D8               	btfss	status,2,c
 18053  00352C  D020               	goto	l2762
 18054  00352E  D01D               	goto	l12147
 18055  003530                     
 18056                           ; BSR set to: 0
 18057  003530  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18058  003534  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18059  003538  0E00               	movlw	0
 18060  00353A  0100               	movlb	0	; () banked
 18061  00353C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18062  00353E  0E0A               	movlw	10
 18063  003540  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18064  003542  ECE6  F02D         	call	___wmul	;wreg free
 18065  003546  C083  FFD9         	movff	atoi@s,fsr2l
 18066  00354A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18067  00354E  50DF               	movf	indf2,w,c
 18068  003550  0100               	movlb	0	; () banked
 18069  003552  6F85               	movwf	??_atoi& (0+255),b
 18070  003554  6B86               	clrf	(??_atoi+1)& (0+255),b
 18071  003556  517D               	movf	?___wmul& (0+255),w,b
 18072  003558  2785               	addwf	??_atoi& (0+255),f,b
 18073  00355A  517E               	movf	(?___wmul+1)& (0+255),w,b
 18074  00355C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18075  00355E  0ED0               	movlw	208
 18076  003560  2585               	addwf	??_atoi& (0+255),w,b
 18077  003562  6F88               	movwf	atoi@a& (0+255),b
 18078  003564  0EFF               	movlw	255
 18079  003566  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18080  003568  6F89               	movwf	(atoi@a+1)& (0+255),b
 18081  00356A                     l12147:
 18082                           
 18083                           ; BSR set to: 0
 18084  00356A  4B83               	infsnz	atoi@s& (0+255),f,b
 18085  00356C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18086  00356E                     l2762:
 18087                           
 18088                           ; BSR set to: 0
 18089                           
 18090                           ; BSR set to: 0
 18091  00356E  C083  FFD9         	movff	atoi@s,fsr2l
 18092  003572  C084  FFDA         	movff	atoi@s+1,fsr2h
 18093  003576  50DF               	movf	indf2,w,c
 18094  003578  EC99  F02E         	call	_isdigit
 18095  00357C  B0D8               	btfsc	status,0,c
 18096  00357E  D7D8               	goto	l2763
 18097  003580  0100               	movlb	0	; () banked
 18098  003582  5187               	movf	atoi@sign& (0+255),w,b
 18099  003584  B4D8               	btfsc	status,2,c
 18100  003586  D00D               	goto	l2765
 18101                           
 18102                           ; BSR set to: 0
 18103  003588  C088  F085         	movff	atoi@a,??_atoi
 18104  00358C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18105  003590  1F85               	comf	??_atoi& (0+255),f,b
 18106  003592  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18107  003594  4B85               	infsnz	??_atoi& (0+255),f,b
 18108  003596  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18109  003598  C085  F083         	movff	??_atoi,?_atoi
 18110  00359C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18111  0035A0  0012               	return	
 18112  0035A2                     l2765:
 18113                           
 18114                           ; BSR set to: 0
 18115  0035A2  C088  F083         	movff	atoi@a,?_atoi
 18116  0035A6  C089  F084         	movff	atoi@a+1,?_atoi+1
 18117                           
 18118                           ; BSR set to: 0
 18119  0035AA  0012               	return		;funcret
 18120  0035AC                     __end_of_atoi:
 18121                           	opt stack 0
 18122                           tosu	equ	0xFFF
 18123                           tosh	equ	0xFFE
 18124                           tosl	equ	0xFFD
 18125                           pclath	equ	0xFFA
 18126                           tblptru	equ	0xFF8
 18127                           tblptrh	equ	0xFF7
 18128                           tblptrl	equ	0xFF6
 18129                           tablat	equ	0xFF5
 18130                           prodh	equ	0xFF4
 18131                           prodl	equ	0xFF3
 18132                           intcon	equ	0xFF2
 18133                           intcon2	equ	0xFF1
 18134                           intcon3	equ	0xFF0
 18135                           indf0	equ	0xFEF
 18136                           postinc0	equ	0xFEE
 18137                           plusw0	equ	0xFEB
 18138                           fsr0h	equ	0xFEA
 18139                           fsr0l	equ	0xFE9
 18140                           wreg	equ	0xFE8
 18141                           indf1	equ	0xFE7
 18142                           postinc1	equ	0xFE6
 18143                           postdec1	equ	0xFE5
 18144                           plusw1	equ	0xFE3
 18145                           fsr1h	equ	0xFE2
 18146                           fsr1l	equ	0xFE1
 18147                           indf2	equ	0xFDF
 18148                           postinc2	equ	0xFDE
 18149                           postdec2	equ	0xFDD
 18150                           plusw2	equ	0xFDB
 18151                           fsr2h	equ	0xFDA
 18152                           fsr2l	equ	0xFD9
 18153                           status	equ	0xFD8
 18154                           
 18155 ;; *************** function _isdigit *****************
 18156 ;; Defined at:
 18157 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18158 ;; Parameters:    Size  Location     Type
 18159 ;;  c               1    wreg     unsigned char 
 18160 ;; Auto vars:     Size  Location     Type
 18161 ;;  c               1   31[BANK0 ] unsigned char 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;		None               void
 18164 ;; Registers used:
 18165 ;;		wreg, status,2, status,0
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18174 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18175 ;;Total ram usage:        3 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; Hardware stack levels required when called:   11
 18178 ;; This function calls:
 18179 ;;		Nothing
 18180 ;; This function is called by:
 18181 ;;		_atoi
 18182 ;;		_strtol
 18183 ;;		_xtoi
 18184 ;;		_isxdigit
 18185 ;; This function uses a non-reentrant model
 18186 ;;
 18187                           
 18188                           	psect	text77
 18189  005D32                     __ptext77:
 18190                           	opt stack 0
 18191  005D32                     _isdigit:
 18192                           	opt stack 12
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;incstack = 0
 18196                           ;isdigit@c stored from wreg
 18197  005D32  0100               	movlb	0	; () banked
 18198  005D34  6F7F               	movwf	isdigit@c& (0+255),b
 18199  005D36  0E00               	movlw	0
 18200  005D38  0100               	movlb	0	; () banked
 18201  005D3A  6F7E               	movwf	_isdigit$6139& (0+255),b
 18202                           
 18203                           ; BSR set to: 0
 18204  005D3C  0E3A               	movlw	58
 18205  005D3E  617F               	cpfslt	isdigit@c& (0+255),b
 18206  005D40  D005               	goto	l2937
 18207                           
 18208                           ; BSR set to: 0
 18209  005D42  0E2F               	movlw	47
 18210  005D44  657F               	cpfsgt	isdigit@c& (0+255),b
 18211  005D46  D002               	goto	l2937
 18212                           
 18213                           ; BSR set to: 0
 18214  005D48  0E01               	movlw	1
 18215  005D4A  6F7E               	movwf	_isdigit$6139& (0+255),b
 18216  005D4C                     l2937:
 18217                           
 18218                           ; BSR set to: 0
 18219                           
 18220                           ; BSR set to: 0
 18221  005D4C  C07E  F07D         	movff	_isdigit$6139,??_isdigit
 18222  005D50  317D               	rrcf	??_isdigit& (0+255),w,b
 18223  005D52  0012               	return	
 18224  005D54                     __end_of_isdigit:
 18225                           	opt stack 0
 18226                           tosu	equ	0xFFF
 18227                           tosh	equ	0xFFE
 18228                           tosl	equ	0xFFD
 18229                           pclath	equ	0xFFA
 18230                           tblptru	equ	0xFF8
 18231                           tblptrh	equ	0xFF7
 18232                           tblptrl	equ	0xFF6
 18233                           tablat	equ	0xFF5
 18234                           prodh	equ	0xFF4
 18235                           prodl	equ	0xFF3
 18236                           intcon	equ	0xFF2
 18237                           intcon2	equ	0xFF1
 18238                           intcon3	equ	0xFF0
 18239                           indf0	equ	0xFEF
 18240                           postinc0	equ	0xFEE
 18241                           plusw0	equ	0xFEB
 18242                           fsr0h	equ	0xFEA
 18243                           fsr0l	equ	0xFE9
 18244                           wreg	equ	0xFE8
 18245                           indf1	equ	0xFE7
 18246                           postinc1	equ	0xFE6
 18247                           postdec1	equ	0xFE5
 18248                           plusw1	equ	0xFE3
 18249                           fsr1h	equ	0xFE2
 18250                           fsr1l	equ	0xFE1
 18251                           indf2	equ	0xFDF
 18252                           postinc2	equ	0xFDE
 18253                           postdec2	equ	0xFDD
 18254                           plusw2	equ	0xFDB
 18255                           fsr2h	equ	0xFDA
 18256                           fsr2l	equ	0xFD9
 18257                           status	equ	0xFD8
 18258                           
 18259 ;; *************** function _OsTmr_Wait *****************
 18260 ;; Defined at:
 18261 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18262 ;; Parameters:    Size  Location     Type
 18263 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18264 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18265 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18266 ;; Auto vars:     Size  Location     Type
 18267 ;;  Ret             1   65[BANK0 ] enum E7749
 18268 ;; Return value:  Size  Location     Type
 18269 ;;                  1    wreg      enum E7749
 18270 ;; Registers used:
 18271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18272 ;; Tracked objects:
 18273 ;;		On entry : 0/0
 18274 ;;		On exit  : 0/0
 18275 ;;		Unchanged: 0/0
 18276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18277 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18280 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18281 ;;Total ram usage:        7 bytes
 18282 ;; Hardware stack levels used:    1
 18283 ;; Hardware stack levels required when called:   14
 18284 ;; This function calls:
 18285 ;;		_OsTmr_GetTimerStatus
 18286 ;;		_OsTmr_StartTimer
 18287 ;; This function is called by:
 18288 ;;		_Terminal
 18289 ;;		_I2cSlv_QueryI2cData
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text78
 18294  004A86                     __ptext78:
 18295                           	opt stack 0
 18296  004A86                     _OsTmr_Wait:
 18297                           	opt stack 11
 18298                           
 18299                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;incstack = 0
 18303  004A86  0E00               	movlw	0
 18304  004A88  0100               	movlb	0	; () banked
 18305  004A8A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18306                           
 18307                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18308  004A8C  D02D               	goto	l855
 18309  004A8E                     
 18310                           ; BSR set to: 0
 18311                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18312                           
 18313                           ; BSR set to: 0
 18314  004A8E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18315  004A92  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18316  004A96  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18317  004A9A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18318  004A9E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18319  004AA2  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18320  004AA6  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 18321                           
 18322                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18323  004AAA  0100               	movlb	0	; () banked
 18324  004AAC  EE20 F00A          	lfsr	2,10
 18325  004AB0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18326  004AB2  26D9               	addwf	fsr2l,f,c
 18327  004AB4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18328  004AB6  22DA               	addwfc	fsr2h,f,c
 18329  004AB8  0E01               	movlw	1
 18330  004ABA  6EDF               	movwf	indf2,c
 18331                           
 18332                           ;os_timers.c: 165: break;
 18333  004ABC  D022               	goto	l857
 18334  004ABE                     
 18335                           ; BSR set to: 0
 18336                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18337                           
 18338                           ; BSR set to: 0
 18339  004ABE  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18340  004AC2  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18341  004AC6  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 18342  004ACA  06E8               	decf	wreg,f,c
 18343  004ACC  A4D8               	btfss	status,2,c
 18344  004ACE  D019               	goto	l857
 18345                           
 18346                           ;os_timers.c: 170: {
 18347                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18348  004AD0  0100               	movlb	0	; () banked
 18349  004AD2  EE20 F00A          	lfsr	2,10
 18350  004AD6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18351  004AD8  26D9               	addwf	fsr2l,f,c
 18352  004ADA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18353  004ADC  22DA               	addwfc	fsr2h,f,c
 18354  004ADE  0E00               	movlw	0
 18355  004AE0  6EDF               	movwf	indf2,c
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;os_timers.c: 174: Ret = DelayExpired;
 18359  004AE2  0E01               	movlw	1
 18360  004AE4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18361                           
 18362                           ; BSR set to: 0
 18363                           ;os_timers.c: 180: }
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;os_timers.c: 179: break;
 18367                           
 18368                           ;os_timers.c: 178: default:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;os_timers.c: 175: }
 18372                           ;os_timers.c: 176: break;
 18373  004AE6  D00D               	goto	l857
 18374  004AE8                     l855:
 18375                           
 18376                           ; BSR set to: 0
 18377                           
 18378                           ; BSR set to: 0
 18379  004AE8  EE20 F00A          	lfsr	2,10
 18380  004AEC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18381  004AEE  26D9               	addwf	fsr2l,f,c
 18382  004AF0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18383  004AF2  22DA               	addwfc	fsr2h,f,c
 18384  004AF4  50DF               	movf	indf2,w,c
 18385                           
 18386                           ; Switch size 1, requested type "space"
 18387                           ; Number of cases is 2, Range of values is 0 to 1
 18388                           ; switch strategies available:
 18389                           ; Name         Instructions Cycles
 18390                           ; simple_byte            7     4 (average)
 18391                           ;	Chosen strategy is simple_byte
 18392  004AF6  0A00               	xorlw	0	; case 0
 18393  004AF8  B4D8               	btfsc	status,2,c
 18394  004AFA  D7C9               	goto	l856
 18395  004AFC  0A01               	xorlw	1	; case 1
 18396  004AFE  B4D8               	btfsc	status,2,c
 18397  004B00  D7DE               	goto	l858
 18398  004B02                     l857:
 18399                           
 18400                           ;os_timers.c: 182: return Ret;
 18401                           
 18402                           ; BSR set to: 0
 18403  004B02  0100               	movlb	0	; () banked
 18404  004B04  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18405  004B06  0012               	return	
 18406  004B08                     __end_of_OsTmr_Wait:
 18407                           	opt stack 0
 18408                           tosu	equ	0xFFF
 18409                           tosh	equ	0xFFE
 18410                           tosl	equ	0xFFD
 18411                           pclath	equ	0xFFA
 18412                           tblptru	equ	0xFF8
 18413                           tblptrh	equ	0xFF7
 18414                           tblptrl	equ	0xFF6
 18415                           tablat	equ	0xFF5
 18416                           prodh	equ	0xFF4
 18417                           prodl	equ	0xFF3
 18418                           intcon	equ	0xFF2
 18419                           intcon2	equ	0xFF1
 18420                           intcon3	equ	0xFF0
 18421                           indf0	equ	0xFEF
 18422                           postinc0	equ	0xFEE
 18423                           plusw0	equ	0xFEB
 18424                           fsr0h	equ	0xFEA
 18425                           fsr0l	equ	0xFE9
 18426                           wreg	equ	0xFE8
 18427                           indf1	equ	0xFE7
 18428                           postinc1	equ	0xFE6
 18429                           postdec1	equ	0xFE5
 18430                           plusw1	equ	0xFE3
 18431                           fsr1h	equ	0xFE2
 18432                           fsr1l	equ	0xFE1
 18433                           indf2	equ	0xFDF
 18434                           postinc2	equ	0xFDE
 18435                           postdec2	equ	0xFDD
 18436                           plusw2	equ	0xFDB
 18437                           fsr2h	equ	0xFDA
 18438                           fsr2l	equ	0xFD9
 18439                           status	equ	0xFD8
 18440                           
 18441 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18442 ;; Defined at:
 18443 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18444 ;; Parameters:    Size  Location     Type
 18445 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18446 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18447 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18448 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  1    wreg      unsigned char 
 18453 ;; Registers used:
 18454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18455 ;; Tracked objects:
 18456 ;;		On entry : 0/0
 18457 ;;		On exit  : 0/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18464 ;;Total ram usage:        5 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; Hardware stack levels required when called:   12
 18467 ;; This function calls:
 18468 ;;		_GenerateEvt
 18469 ;; This function is called by:
 18470 ;;		_Terminal
 18471 ;;		_I2cSlv_QueryI2cData
 18472 ;;		_triggerRelay
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text79
 18477  0057C0                     __ptext79:
 18478                           	opt stack 0
 18479  0057C0                     _I2cSlv_SendI2cMsg:
 18480                           	opt stack 13
 18481                           
 18482                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;incstack = 0
 18486  0057C0  0E00               	movlw	0
 18487  0057C2  0100               	movlb	0	; () banked
 18488  0057C4  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18492  0057C6  05CC               	decf	_I2cComSts& (0+255),w,b
 18493  0057C8  B4D8               	btfsc	status,2,c
 18494  0057CA  D015               	goto	l1395
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;i2c_slv.c: 257: {
 18498                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18499  0057CC  C082  F39F         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18503  0057D0  0E00               	movlw	0
 18504  0057D2  0103               	movlb	3	; () banked
 18505  0057D4  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 18506                           
 18507                           ; BSR set to: 3
 18508                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18509  0057D6  C083  F3A3         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18510                           
 18511                           ; BSR set to: 3
 18512                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18513  0057DA  C080  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18514  0057DE  C081  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18515                           
 18516                           ; BSR set to: 3
 18517                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18518  0057E2  0ED6               	movlw	low _I2cWriteDataEvt
 18519  0057E4  0100               	movlb	0	; () banked
 18520  0057E6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18521  0057E8  0E00               	movlw	high _I2cWriteDataEvt
 18522  0057EA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18523  0057EC  EC47  F02F         	call	_GenerateEvt	;wreg free
 18524                           
 18525                           ;i2c_slv.c: 267: TxSts = 1u;
 18526  0057F0  0E01               	movlw	1
 18527  0057F2  0100               	movlb	0	; () banked
 18528  0057F4  D001               	goto	L18
 18529  0057F6                     l1395:
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;i2c_slv.c: 269: else
 18533                           ;i2c_slv.c: 270: {
 18534                           ;i2c_slv.c: 272: TxSts = 0u;
 18535                           
 18536                           ; BSR set to: 0
 18537  0057F6  0E00               	movlw	0
 18538  0057F8                     L18:
 18539  0057F8  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;i2c_slv.c: 273: }
 18543                           ;i2c_slv.c: 275: return TxSts;
 18544  0057FA  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18545  0057FC  0012               	return	
 18546  0057FE                     __end_of_I2cSlv_SendI2cMsg:
 18547                           	opt stack 0
 18548                           tosu	equ	0xFFF
 18549                           tosh	equ	0xFFE
 18550                           tosl	equ	0xFFD
 18551                           pclath	equ	0xFFA
 18552                           tblptru	equ	0xFF8
 18553                           tblptrh	equ	0xFF7
 18554                           tblptrl	equ	0xFF6
 18555                           tablat	equ	0xFF5
 18556                           prodh	equ	0xFF4
 18557                           prodl	equ	0xFF3
 18558                           intcon	equ	0xFF2
 18559                           intcon2	equ	0xFF1
 18560                           intcon3	equ	0xFF0
 18561                           indf0	equ	0xFEF
 18562                           postinc0	equ	0xFEE
 18563                           plusw0	equ	0xFEB
 18564                           fsr0h	equ	0xFEA
 18565                           fsr0l	equ	0xFE9
 18566                           wreg	equ	0xFE8
 18567                           indf1	equ	0xFE7
 18568                           postinc1	equ	0xFE6
 18569                           postdec1	equ	0xFE5
 18570                           plusw1	equ	0xFE3
 18571                           fsr1h	equ	0xFE2
 18572                           fsr1l	equ	0xFE1
 18573                           indf2	equ	0xFDF
 18574                           postinc2	equ	0xFDE
 18575                           postdec2	equ	0xFDD
 18576                           plusw2	equ	0xFDB
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18582 ;; Defined at:
 18583 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18586 ;;		 -> Terminal@TermRxBuffer(50), 
 18587 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18588 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18589 ;; Auto vars:     Size  Location     Type
 18590 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18591 ;; Return value:  Size  Location     Type
 18592 ;;                  1    wreg      unsigned char 
 18593 ;; Registers used:
 18594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18595 ;; Tracked objects:
 18596 ;;		On entry : 0/0
 18597 ;;		On exit  : 0/0
 18598 ;;		Unchanged: 0/0
 18599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18603 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18604 ;;Total ram usage:        5 bytes
 18605 ;; Hardware stack levels used:    1
 18606 ;; Hardware stack levels required when called:   12
 18607 ;; This function calls:
 18608 ;;		_GenerateEvt
 18609 ;; This function is called by:
 18610 ;;		_Terminal
 18611 ;;		_I2cSlv_QueryI2cData
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           	psect	text80
 18616  0056C2                     __ptext80:
 18617                           	opt stack 0
 18618  0056C2                     _I2cSlv_ReceiveI2cMsg:
 18619                           	opt stack 13
 18620                           
 18621                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;incstack = 0
 18625  0056C2  0E00               	movlw	0
 18626  0056C4  0100               	movlb	0	; () banked
 18627  0056C6  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18631  0056C8  0E02               	movlw	2
 18632  0056CA  19CC               	xorwf	_I2cComSts& (0+255),w,b
 18633  0056CC  B4D8               	btfsc	status,2,c
 18634  0056CE  D016               	goto	l1400
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;i2c_slv.c: 294: {
 18638                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18639  0056D0  C082  F399         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18643  0056D4  0E01               	movlw	1
 18644  0056D6  0103               	movlb	3	; () banked
 18645  0056D8  6F9A               	movwf	(_I2cRxPacket+1)& (0+255),b
 18646                           
 18647                           ; BSR set to: 3
 18648                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18649  0056DA  C083  F39D         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18650                           
 18651                           ; BSR set to: 3
 18652                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18653  0056DE  C080  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18654  0056E2  C081  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18655                           
 18656                           ; BSR set to: 3
 18657                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18658  0056E6  0ED5               	movlw	low _I2cReadDataEvt
 18659  0056E8  0100               	movlb	0	; () banked
 18660  0056EA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18661  0056EC  0E00               	movlw	high _I2cReadDataEvt
 18662  0056EE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18663  0056F0  EC47  F02F         	call	_GenerateEvt	;wreg free
 18664                           
 18665                           ;i2c_slv.c: 304: RxSts = 1u;
 18666  0056F4  0E01               	movlw	1
 18667  0056F6  0100               	movlb	0	; () banked
 18668  0056F8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18669                           
 18670                           ;i2c_slv.c: 305: }
 18671  0056FA  0012               	return	
 18672  0056FC                     l1400:
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;i2c_slv.c: 306: else
 18676                           ;i2c_slv.c: 307: {
 18677                           ;i2c_slv.c: 309: RxSts = 0u;
 18678                           
 18679                           ; BSR set to: 0
 18680  0056FC  0E00               	movlw	0
 18681  0056FE  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18682                           
 18683                           ; BSR set to: 0
 18684  005700  0012               	return	
 18685  005702                     __end_of_I2cSlv_ReceiveI2cMsg:
 18686                           	opt stack 0
 18687                           tosu	equ	0xFFF
 18688                           tosh	equ	0xFFE
 18689                           tosl	equ	0xFFD
 18690                           pclath	equ	0xFFA
 18691                           tblptru	equ	0xFF8
 18692                           tblptrh	equ	0xFF7
 18693                           tblptrl	equ	0xFF6
 18694                           tablat	equ	0xFF5
 18695                           prodh	equ	0xFF4
 18696                           prodl	equ	0xFF3
 18697                           intcon	equ	0xFF2
 18698                           intcon2	equ	0xFF1
 18699                           intcon3	equ	0xFF0
 18700                           indf0	equ	0xFEF
 18701                           postinc0	equ	0xFEE
 18702                           plusw0	equ	0xFEB
 18703                           fsr0h	equ	0xFEA
 18704                           fsr0l	equ	0xFE9
 18705                           wreg	equ	0xFE8
 18706                           indf1	equ	0xFE7
 18707                           postinc1	equ	0xFE6
 18708                           postdec1	equ	0xFE5
 18709                           plusw1	equ	0xFE3
 18710                           fsr1h	equ	0xFE2
 18711                           fsr1l	equ	0xFE1
 18712                           indf2	equ	0xFDF
 18713                           postinc2	equ	0xFDE
 18714                           postdec2	equ	0xFDD
 18715                           plusw2	equ	0xFDB
 18716                           fsr2h	equ	0xFDA
 18717                           fsr2l	equ	0xFD9
 18718                           status	equ	0xFD8
 18719                           
 18720 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18721 ;; Defined at:
 18722 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;		None
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;  Result          1   33[BANK0 ] enum E8915
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      enum E8915
 18729 ;; Registers used:
 18730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;Total ram usage:        1 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; Hardware stack levels required when called:   12
 18743 ;; This function calls:
 18744 ;;		_ReceiveEvt
 18745 ;; This function is called by:
 18746 ;;		_Terminal
 18747 ;;		_I2cSlv_QueryI2cData
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text81
 18752  005D54                     __ptext81:
 18753                           	opt stack 0
 18754  005D54                     _I2cSlv_I2cReadMsgSts:
 18755                           	opt stack 13
 18756                           
 18757                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18758                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;incstack = 0
 18762  005D54  0E9E               	movlw	low (_I2cRxPacket+5)
 18763  005D56  0100               	movlb	0	; () banked
 18764  005D58  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18765  005D5A  0E03               	movlw	high (_I2cRxPacket+5)
 18766  005D5C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18767  005D5E  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 18768  005D62  0900               	iorlw	0
 18769  005D64  B4D8               	btfsc	status,2,c
 18770  005D66  D002               	goto	l1405
 18771                           
 18772                           ;i2c_slv.c: 331: {
 18773                           ;i2c_slv.c: 332: Result = MessageReceived;
 18774  005D68  0E01               	movlw	1
 18775  005D6A  D001               	goto	L19
 18776  005D6C                     l1405:
 18777                           
 18778                           ;i2c_slv.c: 334: else
 18779                           ;i2c_slv.c: 335: {
 18780                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18781                           
 18782                           ; BSR set to: 0
 18783  005D6C  0E00               	movlw	0
 18784  005D6E                     L19:
 18785  005D6E  0100               	movlb	0	; () banked
 18786  005D70  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;i2c_slv.c: 337: }
 18790                           ;i2c_slv.c: 339: return Result;
 18791  005D72  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18792  005D74  0012               	return	
 18793  005D76                     __end_of_I2cSlv_I2cReadMsgSts:
 18794                           	opt stack 0
 18795                           tosu	equ	0xFFF
 18796                           tosh	equ	0xFFE
 18797                           tosl	equ	0xFFD
 18798                           pclath	equ	0xFFA
 18799                           tblptru	equ	0xFF8
 18800                           tblptrh	equ	0xFF7
 18801                           tblptrl	equ	0xFF6
 18802                           tablat	equ	0xFF5
 18803                           prodh	equ	0xFF4
 18804                           prodl	equ	0xFF3
 18805                           intcon	equ	0xFF2
 18806                           intcon2	equ	0xFF1
 18807                           intcon3	equ	0xFF0
 18808                           indf0	equ	0xFEF
 18809                           postinc0	equ	0xFEE
 18810                           plusw0	equ	0xFEB
 18811                           fsr0h	equ	0xFEA
 18812                           fsr0l	equ	0xFE9
 18813                           wreg	equ	0xFE8
 18814                           indf1	equ	0xFE7
 18815                           postinc1	equ	0xFE6
 18816                           postdec1	equ	0xFE5
 18817                           plusw1	equ	0xFE3
 18818                           fsr1h	equ	0xFE2
 18819                           fsr1l	equ	0xFE1
 18820                           indf2	equ	0xFDF
 18821                           postinc2	equ	0xFDE
 18822                           postdec2	equ	0xFDD
 18823                           plusw2	equ	0xFDB
 18824                           fsr2h	equ	0xFDA
 18825                           fsr2l	equ	0xFD9
 18826                           status	equ	0xFD8
 18827                           
 18828 ;; *************** function _Rtcm_SetRtccDate *****************
 18829 ;; Defined at:
 18830 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18831 ;; Parameters:    Size  Location     Type
 18832 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;		None
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  1    wreg      void 
 18837 ;; Registers used:
 18838 ;;		wreg, status,2, status,0, cstack
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18844 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18847 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18848 ;;Total ram usage:        8 bytes
 18849 ;; Hardware stack levels used:    1
 18850 ;; Hardware stack levels required when called:   13
 18851 ;; This function calls:
 18852 ;;		_Rtcc_LockRtc
 18853 ;;		_Rtcc_SetRtccValue
 18854 ;;		_Rtcc_UnlockRtc
 18855 ;; This function is called by:
 18856 ;;		_Rtcm_MainTask
 18857 ;; This function uses a non-reentrant model
 18858 ;;
 18859                           
 18860                           	psect	text82
 18861  00512E                     __ptext82:
 18862                           	opt stack 0
 18863  00512E                     _Rtcm_SetRtccDate:
 18864                           	opt stack 14
 18865                           
 18866                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;incstack = 0
 18870  00512E  ECA5  F02F         	call	_Rtcc_UnlockRtc	;wreg free
 18871                           
 18872                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18873  005132  0100               	movlb	0	; () banked
 18874  005134  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18875  005136  0F30               	addlw	48
 18876  005138  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18877  00513A  0E00               	movlw	0
 18878  00513C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18879                           
 18880                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18881  005140  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18882  005144  0E01               	movlw	1
 18883  005146  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18884                           
 18885                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18886  00514A  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18887  00514E  0E02               	movlw	2
 18888  005150  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18889                           
 18890                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18891  005154  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18892  005158  0E03               	movlw	3
 18893  00515A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18894                           
 18895                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18896  00515E  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18897  005162  0E04               	movlw	4
 18898  005164  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18899                           
 18900                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18901  005168  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18902  00516C  0E05               	movlw	5
 18903  00516E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18904                           
 18905                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18906  005172  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18907  005176  0E06               	movlw	6
 18908  005178  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18909                           
 18910                           ;rtcm.c: 191: Rtcc_LockRtc();
 18911  00517C  ECAD  F02F         	call	_Rtcc_LockRtc	;wreg free
 18912  005180  0012               	return		;funcret
 18913  005182                     __end_of_Rtcm_SetRtccDate:
 18914                           	opt stack 0
 18915                           tosu	equ	0xFFF
 18916                           tosh	equ	0xFFE
 18917                           tosl	equ	0xFFD
 18918                           pclath	equ	0xFFA
 18919                           tblptru	equ	0xFF8
 18920                           tblptrh	equ	0xFF7
 18921                           tblptrl	equ	0xFF6
 18922                           tablat	equ	0xFF5
 18923                           prodh	equ	0xFF4
 18924                           prodl	equ	0xFF3
 18925                           intcon	equ	0xFF2
 18926                           intcon2	equ	0xFF1
 18927                           intcon3	equ	0xFF0
 18928                           indf0	equ	0xFEF
 18929                           postinc0	equ	0xFEE
 18930                           plusw0	equ	0xFEB
 18931                           fsr0h	equ	0xFEA
 18932                           fsr0l	equ	0xFE9
 18933                           wreg	equ	0xFE8
 18934                           indf1	equ	0xFE7
 18935                           postinc1	equ	0xFE6
 18936                           postdec1	equ	0xFE5
 18937                           plusw1	equ	0xFE3
 18938                           fsr1h	equ	0xFE2
 18939                           fsr1l	equ	0xFE1
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948 ;; *************** function _Rtcc_UnlockRtc *****************
 18949 ;; Defined at:
 18950 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;		None
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;		None
 18955 ;; Return value:  Size  Location     Type
 18956 ;;                  1    wreg      void 
 18957 ;; Registers used:
 18958 ;;		None
 18959 ;; Tracked objects:
 18960 ;;		On entry : 0/0
 18961 ;;		On exit  : 0/0
 18962 ;;		Unchanged: 0/0
 18963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18968 ;;Total ram usage:        0 bytes
 18969 ;; Hardware stack levels used:    1
 18970 ;; Hardware stack levels required when called:   11
 18971 ;; This function calls:
 18972 ;;		Nothing
 18973 ;; This function is called by:
 18974 ;;		_Rtcm_MainTask
 18975 ;;		_Rtcm_SetRtccDate
 18976 ;;		_Rtcm_SetRtccAlarm
 18977 ;; This function uses a non-reentrant model
 18978 ;;
 18979                           
 18980                           	psect	text83
 18981  005F4A                     __ptext83:
 18982                           	opt stack 0
 18983  005F4A                     _Rtcc_UnlockRtc:
 18984                           	opt stack 15
 18985                           
 18986                           ;incstack = 0
 18987  005F4A  010F               	movlb	15	;# 
 18988  005F4C  0E55               	movlw	85	;# 
 18989  005F4E  6EA7               	movwf	4007,c	;# 
 18990  005F50  0EAA               	movlw	170	;# 
 18991  005F52  6EA7               	movwf	4007,c	;# 
 18992                           
 18993                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18994  005F54  010F               	movlb	15	; () banked
 18995  005F56  8B3F               	bsf	63,5,b	;volatile
 18996                           
 18997                           ; BSR set to: 15
 18998  005F58  0012               	return		;funcret
 18999  005F5A                     __end_of_Rtcc_UnlockRtc:
 19000                           	opt stack 0
 19001                           tosu	equ	0xFFF
 19002                           tosh	equ	0xFFE
 19003                           tosl	equ	0xFFD
 19004                           pclath	equ	0xFFA
 19005                           tblptru	equ	0xFF8
 19006                           tblptrh	equ	0xFF7
 19007                           tblptrl	equ	0xFF6
 19008                           tablat	equ	0xFF5
 19009                           prodh	equ	0xFF4
 19010                           prodl	equ	0xFF3
 19011                           intcon	equ	0xFF2
 19012                           intcon2	equ	0xFF1
 19013                           intcon3	equ	0xFF0
 19014                           indf0	equ	0xFEF
 19015                           postinc0	equ	0xFEE
 19016                           plusw0	equ	0xFEB
 19017                           fsr0h	equ	0xFEA
 19018                           fsr0l	equ	0xFE9
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postinc1	equ	0xFE6
 19022                           postdec1	equ	0xFE5
 19023                           plusw1	equ	0xFE3
 19024                           fsr1h	equ	0xFE2
 19025                           fsr1l	equ	0xFE1
 19026                           indf2	equ	0xFDF
 19027                           postinc2	equ	0xFDE
 19028                           postdec2	equ	0xFDD
 19029                           plusw2	equ	0xFDB
 19030                           fsr2h	equ	0xFDA
 19031                           fsr2l	equ	0xFD9
 19032                           status	equ	0xFD8
 19033                           
 19034 ;; *************** function _Rtcc_SetRtccValue *****************
 19035 ;; Defined at:
 19036 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;  RtccPtrVal      1    wreg     enum E7757
 19039 ;;  Value           1   37[BANK0 ] unsigned char 
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      void 
 19044 ;; Registers used:
 19045 ;;		wreg, status,2, status,0, cstack
 19046 ;; Tracked objects:
 19047 ;;		On entry : 0/0
 19048 ;;		On exit  : 0/0
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19051 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19054 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19055 ;;Total ram usage:        4 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; Hardware stack levels required when called:   12
 19058 ;; This function calls:
 19059 ;;		___awdiv
 19060 ;;		___awmod
 19061 ;; This function is called by:
 19062 ;;		_Rtcm_SetRtccDate
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           	psect	text84
 19067  0015EE                     __ptext84:
 19068                           	opt stack 0
 19069  0015EE                     _Rtcc_SetRtccValue:
 19070                           	opt stack 14
 19071                           
 19072                           ; BSR set to: 15
 19073                           ;incstack = 0
 19074                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19075  0015EE  0100               	movlb	0	; () banked
 19076  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19077                           
 19078                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19079  0015F2  D0FC               	goto	l441
 19080  0015F4                     l442:
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19084  0015F4  010F               	movlb	15	; () banked
 19085  0015F6  833F               	bsf	63,1,b	;volatile
 19086                           
 19087                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19088  0015F8  813F               	bsf	63,0,b	;volatile
 19089                           
 19090                           ; BSR set to: 15
 19091                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19092  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19093  0015FE  0100               	movlb	0	; () banked
 19094  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19095  001602  0E00               	movlw	0
 19096  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19097  001606  0E0A               	movlw	10
 19098  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19099  00160A  EC84  F025         	call	___awmod	;wreg free
 19100  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19101  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19102  001616  0E0F               	movlw	15
 19103  001618  0100               	movlb	0	; () banked
 19104  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19105  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19106  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19107  001622  0E00               	movlw	0
 19108  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19109  001626  0E0A               	movlw	10
 19110  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19111  00162A  ECBE  F024         	call	___awdiv	;wreg free
 19112  00162E  0100               	movlb	0	; () banked
 19113  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19114  001632  0BF0               	andlw	240
 19115  001634  0BF0               	andlw	240
 19116  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19117  001638  6E98               	movwf	3992,c	;volatile
 19118                           
 19119                           ;rtcc_drv.c: 393: break;
 19120  00163A  0012               	return	
 19121  00163C                     l444:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19125  00163C  010F               	movlb	15	; () banked
 19126  00163E  833F               	bsf	63,1,b	;volatile
 19127                           
 19128                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19129  001640  913F               	bcf	63,0,b	;volatile
 19130                           
 19131                           ; BSR set to: 15
 19132                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19133  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19134  001646  0100               	movlb	0	; () banked
 19135  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19136  00164A  0E00               	movlw	0
 19137  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19138  00164E  0E0A               	movlw	10
 19139  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19140  001652  EC84  F025         	call	___awmod	;wreg free
 19141  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19142  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19143  00165E  0E0F               	movlw	15
 19144  001660  0100               	movlb	0	; () banked
 19145  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19146  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19147  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19148  00166A  0E00               	movlw	0
 19149  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19150  00166E  0E0A               	movlw	10
 19151  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19152  001672  ECBE  F024         	call	___awdiv	;wreg free
 19153  001676  0100               	movlb	0	; () banked
 19154  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19155  00167A  0BF0               	andlw	240
 19156  00167C  0BF0               	andlw	240
 19157  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19158  001680  6E99               	movwf	3993,c	;volatile
 19159                           
 19160                           ;rtcc_drv.c: 401: break;
 19161  001682  0012               	return	
 19162  001684                     l445:
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19166  001684  010F               	movlb	15	; () banked
 19167  001686  833F               	bsf	63,1,b	;volatile
 19168                           
 19169                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19170  001688  913F               	bcf	63,0,b	;volatile
 19171                           
 19172                           ; BSR set to: 15
 19173                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19174  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19175  00168E  0100               	movlb	0	; () banked
 19176  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19177  001692  0E00               	movlw	0
 19178  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19179  001696  0E0A               	movlw	10
 19180  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19181  00169A  EC84  F025         	call	___awmod	;wreg free
 19182  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19183  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19184  0016A6  0E0F               	movlw	15
 19185  0016A8  0100               	movlb	0	; () banked
 19186  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19187  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19188  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19189  0016B2  0E00               	movlw	0
 19190  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19191  0016B6  0E0A               	movlw	10
 19192  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19193  0016BA  ECBE  F024         	call	___awdiv	;wreg free
 19194  0016BE  0100               	movlb	0	; () banked
 19195  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19196  0016C2  0BF0               	andlw	240
 19197  0016C4  0BF0               	andlw	240
 19198  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19199  0016C8  6E98               	movwf	3992,c	;volatile
 19200                           
 19201                           ;rtcc_drv.c: 409: break;
 19202  0016CA  0012               	return	
 19203  0016CC                     l446:
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19207  0016CC  010F               	movlb	15	; () banked
 19208  0016CE  933F               	bcf	63,1,b	;volatile
 19209                           
 19210                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19211  0016D0  813F               	bsf	63,0,b	;volatile
 19212                           
 19213                           ; BSR set to: 15
 19214                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19215  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19216  0016D6  0100               	movlb	0	; () banked
 19217  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19218  0016DA  0E00               	movlw	0
 19219  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19220  0016DE  0E0A               	movlw	10
 19221  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19222  0016E2  EC84  F025         	call	___awmod	;wreg free
 19223  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19224  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19225  0016EE  0E0F               	movlw	15
 19226  0016F0  0100               	movlb	0	; () banked
 19227  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19228  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19229  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19230  0016FA  0E00               	movlw	0
 19231  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19232  0016FE  0E0A               	movlw	10
 19233  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19234  001702  ECBE  F024         	call	___awdiv	;wreg free
 19235  001706  0100               	movlb	0	; () banked
 19236  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19237  00170A  0BF0               	andlw	240
 19238  00170C  0BF0               	andlw	240
 19239  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19240  001710  6E99               	movwf	3993,c	;volatile
 19241                           
 19242                           ;rtcc_drv.c: 417: break;
 19243  001712  0012               	return	
 19244  001714                     l447:
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19248  001714  010F               	movlb	15	; () banked
 19249  001716  933F               	bcf	63,1,b	;volatile
 19250                           
 19251                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19252  001718  813F               	bsf	63,0,b	;volatile
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19256  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19257  00171E  0100               	movlb	0	; () banked
 19258  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19259  001722  0E00               	movlw	0
 19260  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19261  001726  0E0A               	movlw	10
 19262  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19263  00172A  EC84  F025         	call	___awmod	;wreg free
 19264  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19265  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19266  001736  0E0F               	movlw	15
 19267  001738  0100               	movlb	0	; () banked
 19268  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19269  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19270  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19271  001742  0E00               	movlw	0
 19272  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19273  001746  0E0A               	movlw	10
 19274  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19275  00174A  ECBE  F024         	call	___awdiv	;wreg free
 19276  00174E  0100               	movlb	0	; () banked
 19277  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19278  001752  0BF0               	andlw	240
 19279  001754  0BF0               	andlw	240
 19280  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19281  001758  6E98               	movwf	3992,c	;volatile
 19282                           
 19283                           ;rtcc_drv.c: 425: break;
 19284  00175A  0012               	return	
 19285  00175C                     l448:
 19286                           
 19287                           ; BSR set to: 0
 19288                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19289  00175C  010F               	movlb	15	; () banked
 19290  00175E  933F               	bcf	63,1,b	;volatile
 19291                           
 19292                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19293  001760  913F               	bcf	63,0,b	;volatile
 19294                           
 19295                           ; BSR set to: 15
 19296                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19297  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19298  001766  0100               	movlb	0	; () banked
 19299  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19300  00176A  0E00               	movlw	0
 19301  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19302  00176E  0E0A               	movlw	10
 19303  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19304  001772  EC84  F025         	call	___awmod	;wreg free
 19305  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19306  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19307  00177E  0E0F               	movlw	15
 19308  001780  0100               	movlb	0	; () banked
 19309  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19310  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19311  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19312  00178A  0E00               	movlw	0
 19313  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19314  00178E  0E0A               	movlw	10
 19315  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19316  001792  ECBE  F024         	call	___awdiv	;wreg free
 19317  001796  0100               	movlb	0	; () banked
 19318  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19319  00179A  0BF0               	andlw	240
 19320  00179C  0BF0               	andlw	240
 19321  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19322  0017A0  6E99               	movwf	3993,c	;volatile
 19323                           
 19324                           ;rtcc_drv.c: 433: break;
 19325  0017A2  0012               	return	
 19326  0017A4                     l449:
 19327                           
 19328                           ; BSR set to: 0
 19329                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19330  0017A4  010F               	movlb	15	; () banked
 19331  0017A6  933F               	bcf	63,1,b	;volatile
 19332                           
 19333                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19334  0017A8  913F               	bcf	63,0,b	;volatile
 19335                           
 19336                           ; BSR set to: 15
 19337                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19338  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19339  0017AE  0100               	movlb	0	; () banked
 19340  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19341  0017B2  0E00               	movlw	0
 19342  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19343  0017B6  0E0A               	movlw	10
 19344  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19345  0017BA  EC84  F025         	call	___awmod	;wreg free
 19346  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19347  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19348  0017C6  0E0F               	movlw	15
 19349  0017C8  0100               	movlb	0	; () banked
 19350  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19351  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19352  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19353  0017D2  0E00               	movlw	0
 19354  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19355  0017D6  0E0A               	movlw	10
 19356  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19357  0017DA  ECBE  F024         	call	___awdiv	;wreg free
 19358  0017DE  0100               	movlb	0	; () banked
 19359  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19360  0017E2  0BF0               	andlw	240
 19361  0017E4  0BF0               	andlw	240
 19362  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19363  0017E8  6E98               	movwf	3992,c	;volatile
 19364                           
 19365                           ; BSR set to: 0
 19366                           ;rtcc_drv.c: 445: }
 19367                           
 19368                           ; BSR set to: 0
 19369                           ;rtcc_drv.c: 444: break;
 19370                           
 19371                           ;rtcc_drv.c: 443: default:
 19372                           
 19373                           ;rtcc_drv.c: 441: break;
 19374  0017EA  0012               	return	
 19375  0017EC                     l441:
 19376                           
 19377                           ; BSR set to: 0
 19378  0017EC  0100               	movlb	0	; () banked
 19379  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19380                           
 19381                           ; Switch size 1, requested type "space"
 19382                           ; Number of cases is 7, Range of values is 0 to 6
 19383                           ; switch strategies available:
 19384                           ; Name         Instructions Cycles
 19385                           ; simple_byte           22    12 (average)
 19386                           ;	Chosen strategy is simple_byte
 19387  0017F0  0A00               	xorlw	0	; case 0
 19388  0017F2  B4D8               	btfsc	status,2,c
 19389  0017F4  D6FF               	goto	l442
 19390  0017F6  0A01               	xorlw	1	; case 1
 19391  0017F8  B4D8               	btfsc	status,2,c
 19392  0017FA  D720               	goto	l444
 19393  0017FC  0A03               	xorlw	3	; case 2
 19394  0017FE  B4D8               	btfsc	status,2,c
 19395  001800  D741               	goto	l445
 19396  001802  0A01               	xorlw	1	; case 3
 19397  001804  B4D8               	btfsc	status,2,c
 19398  001806  D762               	goto	l446
 19399  001808  0A07               	xorlw	7	; case 4
 19400  00180A  B4D8               	btfsc	status,2,c
 19401  00180C  D783               	goto	l447
 19402  00180E  0A01               	xorlw	1	; case 5
 19403  001810  B4D8               	btfsc	status,2,c
 19404  001812  D7A4               	goto	l448
 19405  001814  0A03               	xorlw	3	; case 6
 19406  001816  A4D8               	btfss	status,2,c
 19407  001818  0012               	return	
 19408  00181A  D7C4               	goto	l449
 19409  00181C                     __end_of_Rtcc_SetRtccValue:
 19410                           	opt stack 0
 19411                           tosu	equ	0xFFF
 19412                           tosh	equ	0xFFE
 19413                           tosl	equ	0xFFD
 19414                           pclath	equ	0xFFA
 19415                           tblptru	equ	0xFF8
 19416                           tblptrh	equ	0xFF7
 19417                           tblptrl	equ	0xFF6
 19418                           tablat	equ	0xFF5
 19419                           prodh	equ	0xFF4
 19420                           prodl	equ	0xFF3
 19421                           intcon	equ	0xFF2
 19422                           intcon2	equ	0xFF1
 19423                           intcon3	equ	0xFF0
 19424                           indf0	equ	0xFEF
 19425                           postinc0	equ	0xFEE
 19426                           plusw0	equ	0xFEB
 19427                           fsr0h	equ	0xFEA
 19428                           fsr0l	equ	0xFE9
 19429                           wreg	equ	0xFE8
 19430                           indf1	equ	0xFE7
 19431                           postinc1	equ	0xFE6
 19432                           postdec1	equ	0xFE5
 19433                           plusw1	equ	0xFE3
 19434                           fsr1h	equ	0xFE2
 19435                           fsr1l	equ	0xFE1
 19436                           indf2	equ	0xFDF
 19437                           postinc2	equ	0xFDE
 19438                           postdec2	equ	0xFDD
 19439                           plusw2	equ	0xFDB
 19440                           fsr2h	equ	0xFDA
 19441                           fsr2l	equ	0xFD9
 19442                           status	equ	0xFD8
 19443                           
 19444 ;; *************** function ___awmod *****************
 19445 ;; Defined at:
 19446 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19447 ;; Parameters:    Size  Location     Type
 19448 ;;  dividend        2   29[BANK0 ] int 
 19449 ;;  divisor         2   31[BANK0 ] int 
 19450 ;; Auto vars:     Size  Location     Type
 19451 ;;  sign            1   34[BANK0 ] unsigned char 
 19452 ;;  counter         1   33[BANK0 ] unsigned char 
 19453 ;; Return value:  Size  Location     Type
 19454 ;;                  2   29[BANK0 ] int 
 19455 ;; Registers used:
 19456 ;;		wreg, status,2, status,0
 19457 ;; Tracked objects:
 19458 ;;		On entry : 0/0
 19459 ;;		On exit  : 0/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19463 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19466 ;;Total ram usage:        6 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:   11
 19469 ;; This function calls:
 19470 ;;		Nothing
 19471 ;; This function is called by:
 19472 ;;		_Rtcc_SetRtccValue
 19473 ;;		_Rtcc_SetRtccAlarm
 19474 ;; This function uses a non-reentrant model
 19475 ;;
 19476                           
 19477                           	psect	text85
 19478  004B08                     __ptext85:
 19479                           	opt stack 0
 19480  004B08                     ___awmod:
 19481                           	opt stack 14
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;incstack = 0
 19485  004B08  0E00               	movlw	0
 19486  004B0A  0100               	movlb	0	; () banked
 19487  004B0C  6F82               	movwf	___awmod@sign& (0+255),b
 19488                           
 19489                           ; BSR set to: 0
 19490  004B0E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19491  004B10  D006               	goto	l2788
 19492                           
 19493                           ; BSR set to: 0
 19494  004B12  6D7D               	negf	___awmod@dividend& (0+255),b
 19495  004B14  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19496  004B16  B0D8               	btfsc	status,0,c
 19497  004B18  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19498                           
 19499                           ; BSR set to: 0
 19500  004B1A  0E01               	movlw	1
 19501  004B1C  6F82               	movwf	___awmod@sign& (0+255),b
 19502  004B1E                     l2788:
 19503                           
 19504                           ; BSR set to: 0
 19505                           
 19506                           ; BSR set to: 0
 19507  004B1E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19508  004B20  D004               	goto	l2789
 19509                           
 19510                           ; BSR set to: 0
 19511  004B22  6D7F               	negf	___awmod@divisor& (0+255),b
 19512  004B24  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19513  004B26  B0D8               	btfsc	status,0,c
 19514  004B28  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19515  004B2A                     l2789:
 19516                           
 19517                           ; BSR set to: 0
 19518                           
 19519                           ; BSR set to: 0
 19520  004B2A  517F               	movf	___awmod@divisor& (0+255),w,b
 19521  004B2C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19522  004B2E  B4D8               	btfsc	status,2,c
 19523  004B30  D018               	goto	l2796
 19524                           
 19525                           ; BSR set to: 0
 19526  004B32  0E01               	movlw	1
 19527  004B34  6F81               	movwf	___awmod@counter& (0+255),b
 19528  004B36  D004               	goto	l2791
 19529  004B38                     
 19530                           ; BSR set to: 0
 19531                           
 19532                           ; BSR set to: 0
 19533  004B38  90D8               	bcf	status,0,c
 19534  004B3A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19535  004B3C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19536  004B3E  2B81               	incf	___awmod@counter& (0+255),f,b
 19537  004B40                     l2791:
 19538                           
 19539                           ; BSR set to: 0
 19540                           
 19541                           ; BSR set to: 0
 19542  004B40  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19543  004B42  D7FA               	goto	l2792
 19544  004B44                     u6880:
 19545                           
 19546                           ; BSR set to: 0
 19547                           
 19548                           ; BSR set to: 0
 19549                           
 19550                           ; BSR set to: 0
 19551  004B44  517F               	movf	___awmod@divisor& (0+255),w,b
 19552  004B46  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19553  004B48  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19554  004B4A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19555  004B4C  A0D8               	btfss	status,0,c
 19556  004B4E  D004               	goto	l2795
 19557                           
 19558                           ; BSR set to: 0
 19559  004B50  517F               	movf	___awmod@divisor& (0+255),w,b
 19560  004B52  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19561  004B54  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19562  004B56  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19563  004B58                     l2795:
 19564                           
 19565                           ; BSR set to: 0
 19566                           
 19567                           ; BSR set to: 0
 19568  004B58  90D8               	bcf	status,0,c
 19569  004B5A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19570  004B5C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19571                           
 19572                           ; BSR set to: 0
 19573  004B5E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19574  004B60  D7F1               	goto	u6880
 19575  004B62                     l2796:
 19576                           
 19577                           ; BSR set to: 0
 19578                           
 19579                           ; BSR set to: 0
 19580                           
 19581                           ; BSR set to: 0
 19582  004B62  5182               	movf	___awmod@sign& (0+255),w,b
 19583  004B64  B4D8               	btfsc	status,2,c
 19584  004B66  D004               	goto	l2797
 19585                           
 19586                           ; BSR set to: 0
 19587  004B68  6D7D               	negf	___awmod@dividend& (0+255),b
 19588  004B6A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19589  004B6C  B0D8               	btfsc	status,0,c
 19590  004B6E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19591  004B70                     l2797:
 19592                           
 19593                           ; BSR set to: 0
 19594                           
 19595                           ; BSR set to: 0
 19596  004B70  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19597  004B74  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19598  004B78  0012               	return	
 19599  004B7A                     __end_of___awmod:
 19600                           	opt stack 0
 19601                           tosu	equ	0xFFF
 19602                           tosh	equ	0xFFE
 19603                           tosl	equ	0xFFD
 19604                           pclath	equ	0xFFA
 19605                           tblptru	equ	0xFF8
 19606                           tblptrh	equ	0xFF7
 19607                           tblptrl	equ	0xFF6
 19608                           tablat	equ	0xFF5
 19609                           prodh	equ	0xFF4
 19610                           prodl	equ	0xFF3
 19611                           intcon	equ	0xFF2
 19612                           intcon2	equ	0xFF1
 19613                           intcon3	equ	0xFF0
 19614                           indf0	equ	0xFEF
 19615                           postinc0	equ	0xFEE
 19616                           plusw0	equ	0xFEB
 19617                           fsr0h	equ	0xFEA
 19618                           fsr0l	equ	0xFE9
 19619                           wreg	equ	0xFE8
 19620                           indf1	equ	0xFE7
 19621                           postinc1	equ	0xFE6
 19622                           postdec1	equ	0xFE5
 19623                           plusw1	equ	0xFE3
 19624                           fsr1h	equ	0xFE2
 19625                           fsr1l	equ	0xFE1
 19626                           indf2	equ	0xFDF
 19627                           postinc2	equ	0xFDE
 19628                           postdec2	equ	0xFDD
 19629                           plusw2	equ	0xFDB
 19630                           fsr2h	equ	0xFDA
 19631                           fsr2l	equ	0xFD9
 19632                           status	equ	0xFD8
 19633                           
 19634 ;; *************** function ___awdiv *****************
 19635 ;; Defined at:
 19636 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19637 ;; Parameters:    Size  Location     Type
 19638 ;;  dividend        2   29[BANK0 ] int 
 19639 ;;  divisor         2   31[BANK0 ] int 
 19640 ;; Auto vars:     Size  Location     Type
 19641 ;;  quotient        2   35[BANK0 ] int 
 19642 ;;  sign            1   34[BANK0 ] unsigned char 
 19643 ;;  counter         1   33[BANK0 ] unsigned char 
 19644 ;; Return value:  Size  Location     Type
 19645 ;;                  2   29[BANK0 ] int 
 19646 ;; Registers used:
 19647 ;;		wreg, status,2, status,0
 19648 ;; Tracked objects:
 19649 ;;		On entry : 0/0
 19650 ;;		On exit  : 0/0
 19651 ;;		Unchanged: 0/0
 19652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;Total ram usage:        8 bytes
 19658 ;; Hardware stack levels used:    1
 19659 ;; Hardware stack levels required when called:   11
 19660 ;; This function calls:
 19661 ;;		Nothing
 19662 ;; This function is called by:
 19663 ;;		_Rtcc_SetRtccValue
 19664 ;;		_Rtcc_SetRtccAlarm
 19665 ;; This function uses a non-reentrant model
 19666 ;;
 19667                           
 19668                           	psect	text86
 19669  00497C                     __ptext86:
 19670                           	opt stack 0
 19671  00497C                     ___awdiv:
 19672                           	opt stack 14
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;incstack = 0
 19676  00497C  0E00               	movlw	0
 19677  00497E  0100               	movlb	0	; () banked
 19678  004980  6F82               	movwf	___awdiv@sign& (0+255),b
 19679                           
 19680                           ; BSR set to: 0
 19681  004982  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19682  004984  D006               	goto	l2775
 19683                           
 19684                           ; BSR set to: 0
 19685  004986  6D7F               	negf	___awdiv@divisor& (0+255),b
 19686  004988  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19687  00498A  B0D8               	btfsc	status,0,c
 19688  00498C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19689                           
 19690                           ; BSR set to: 0
 19691  00498E  0E01               	movlw	1
 19692  004990  6F82               	movwf	___awdiv@sign& (0+255),b
 19693  004992                     l2775:
 19694                           
 19695                           ; BSR set to: 0
 19696                           
 19697                           ; BSR set to: 0
 19698  004992  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19699  004994  D006               	goto	l2776
 19700                           
 19701                           ; BSR set to: 0
 19702  004996  6D7D               	negf	___awdiv@dividend& (0+255),b
 19703  004998  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19704  00499A  B0D8               	btfsc	status,0,c
 19705  00499C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19706                           
 19707                           ; BSR set to: 0
 19708  00499E  0E01               	movlw	1
 19709  0049A0  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19710  0049A2                     l2776:
 19711                           
 19712                           ; BSR set to: 0
 19713                           
 19714                           ; BSR set to: 0
 19715  0049A2  0E00               	movlw	0
 19716  0049A4  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19717  0049A6  0E00               	movlw	0
 19718  0049A8  6F83               	movwf	___awdiv@quotient& (0+255),b
 19719                           
 19720                           ; BSR set to: 0
 19721  0049AA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19722  0049AC  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19723  0049AE  B4D8               	btfsc	status,2,c
 19724  0049B0  D01C               	goto	l2783
 19725                           
 19726                           ; BSR set to: 0
 19727  0049B2  0E01               	movlw	1
 19728  0049B4  6F81               	movwf	___awdiv@counter& (0+255),b
 19729  0049B6  D004               	goto	l2778
 19730  0049B8                     
 19731                           ; BSR set to: 0
 19732                           
 19733                           ; BSR set to: 0
 19734  0049B8  90D8               	bcf	status,0,c
 19735  0049BA  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19736  0049BC  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19737  0049BE  2B81               	incf	___awdiv@counter& (0+255),f,b
 19738  0049C0                     l2778:
 19739                           
 19740                           ; BSR set to: 0
 19741                           
 19742                           ; BSR set to: 0
 19743  0049C0  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19744  0049C2  D7FA               	goto	l2779
 19745  0049C4                     u6820:
 19746                           
 19747                           ; BSR set to: 0
 19748                           
 19749                           ; BSR set to: 0
 19750                           
 19751                           ; BSR set to: 0
 19752  0049C4  90D8               	bcf	status,0,c
 19753  0049C6  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19754  0049C8  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19755                           
 19756                           ; BSR set to: 0
 19757  0049CA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19758  0049CC  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19759  0049CE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19760  0049D0  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19761  0049D2  A0D8               	btfss	status,0,c
 19762  0049D4  D005               	goto	l2782
 19763                           
 19764                           ; BSR set to: 0
 19765  0049D6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19766  0049D8  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19767  0049DA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19768  0049DC  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19769                           
 19770                           ; BSR set to: 0
 19771  0049DE  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19772  0049E0                     l2782:
 19773                           
 19774                           ; BSR set to: 0
 19775                           
 19776                           ; BSR set to: 0
 19777  0049E0  90D8               	bcf	status,0,c
 19778  0049E2  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19779  0049E4  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19780                           
 19781                           ; BSR set to: 0
 19782  0049E6  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19783  0049E8  D7ED               	goto	u6820
 19784  0049EA                     l2783:
 19785                           
 19786                           ; BSR set to: 0
 19787                           
 19788                           ; BSR set to: 0
 19789                           
 19790                           ; BSR set to: 0
 19791  0049EA  5182               	movf	___awdiv@sign& (0+255),w,b
 19792  0049EC  B4D8               	btfsc	status,2,c
 19793  0049EE  D004               	goto	l2784
 19794                           
 19795                           ; BSR set to: 0
 19796  0049F0  6D83               	negf	___awdiv@quotient& (0+255),b
 19797  0049F2  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19798  0049F4  B0D8               	btfsc	status,0,c
 19799  0049F6  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19800  0049F8                     l2784:
 19801                           
 19802                           ; BSR set to: 0
 19803                           
 19804                           ; BSR set to: 0
 19805  0049F8  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19806  0049FC  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19807  004A00  0012               	return	
 19808  004A02                     __end_of___awdiv:
 19809                           	opt stack 0
 19810                           tosu	equ	0xFFF
 19811                           tosh	equ	0xFFE
 19812                           tosl	equ	0xFFD
 19813                           pclath	equ	0xFFA
 19814                           tblptru	equ	0xFF8
 19815                           tblptrh	equ	0xFF7
 19816                           tblptrl	equ	0xFF6
 19817                           tablat	equ	0xFF5
 19818                           prodh	equ	0xFF4
 19819                           prodl	equ	0xFF3
 19820                           intcon	equ	0xFF2
 19821                           intcon2	equ	0xFF1
 19822                           intcon3	equ	0xFF0
 19823                           indf0	equ	0xFEF
 19824                           postinc0	equ	0xFEE
 19825                           plusw0	equ	0xFEB
 19826                           fsr0h	equ	0xFEA
 19827                           fsr0l	equ	0xFE9
 19828                           wreg	equ	0xFE8
 19829                           indf1	equ	0xFE7
 19830                           postinc1	equ	0xFE6
 19831                           postdec1	equ	0xFE5
 19832                           plusw1	equ	0xFE3
 19833                           fsr1h	equ	0xFE2
 19834                           fsr1l	equ	0xFE1
 19835                           indf2	equ	0xFDF
 19836                           postinc2	equ	0xFDE
 19837                           postdec2	equ	0xFDD
 19838                           plusw2	equ	0xFDB
 19839                           fsr2h	equ	0xFDA
 19840                           fsr2l	equ	0xFD9
 19841                           status	equ	0xFD8
 19842                           
 19843 ;; *************** function _Rtcc_LockRtc *****************
 19844 ;; Defined at:
 19845 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;		None
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;		None
 19850 ;; Return value:  Size  Location     Type
 19851 ;;                  1    wreg      void 
 19852 ;; Registers used:
 19853 ;;		None
 19854 ;; Tracked objects:
 19855 ;;		On entry : 0/0
 19856 ;;		On exit  : 0/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;Total ram usage:        0 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:   11
 19866 ;; This function calls:
 19867 ;;		Nothing
 19868 ;; This function is called by:
 19869 ;;		_Rtcm_MainTask
 19870 ;;		_Rtcm_SetRtccDate
 19871 ;;		_Rtcm_SetRtccAlarm
 19872 ;; This function uses a non-reentrant model
 19873 ;;
 19874                           
 19875                           	psect	text87
 19876  005F5A                     __ptext87:
 19877                           	opt stack 0
 19878  005F5A                     _Rtcc_LockRtc:
 19879                           	opt stack 15
 19880                           
 19881                           ; BSR set to: 0
 19882                           ;incstack = 0
 19883  005F5A  010F               	movlb	15	;# 
 19884  005F5C  0E55               	movlw	85	;# 
 19885  005F5E  6EA7               	movwf	4007,c	;# 
 19886  005F60  0EAA               	movlw	170	;# 
 19887  005F62  6EA7               	movwf	4007,c	;# 
 19888                           
 19889                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19890  005F64  010F               	movlb	15	; () banked
 19891  005F66  9B3F               	bcf	63,5,b	;volatile
 19892                           
 19893                           ; BSR set to: 15
 19894  005F68  0012               	return		;funcret
 19895  005F6A                     __end_of_Rtcc_LockRtc:
 19896                           	opt stack 0
 19897                           tosu	equ	0xFFF
 19898                           tosh	equ	0xFFE
 19899                           tosl	equ	0xFFD
 19900                           pclath	equ	0xFFA
 19901                           tblptru	equ	0xFF8
 19902                           tblptrh	equ	0xFF7
 19903                           tblptrl	equ	0xFF6
 19904                           tablat	equ	0xFF5
 19905                           prodh	equ	0xFF4
 19906                           prodl	equ	0xFF3
 19907                           intcon	equ	0xFF2
 19908                           intcon2	equ	0xFF1
 19909                           intcon3	equ	0xFF0
 19910                           indf0	equ	0xFEF
 19911                           postinc0	equ	0xFEE
 19912                           plusw0	equ	0xFEB
 19913                           fsr0h	equ	0xFEA
 19914                           fsr0l	equ	0xFE9
 19915                           wreg	equ	0xFE8
 19916                           indf1	equ	0xFE7
 19917                           postinc1	equ	0xFE6
 19918                           postdec1	equ	0xFE5
 19919                           plusw1	equ	0xFE3
 19920                           fsr1h	equ	0xFE2
 19921                           fsr1l	equ	0xFE1
 19922                           indf2	equ	0xFDF
 19923                           postinc2	equ	0xFDE
 19924                           postdec2	equ	0xFDD
 19925                           plusw2	equ	0xFDB
 19926                           fsr2h	equ	0xFDA
 19927                           fsr2l	equ	0xFD9
 19928                           status	equ	0xFD8
 19929                           
 19930 ;; *************** function _Rtcm_GetRtccDate *****************
 19931 ;; Defined at:
 19932 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19933 ;; Parameters:    Size  Location     Type
 19934 ;;		None
 19935 ;; Auto vars:     Size  Location     Type
 19936 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19937 ;; Return value:  Size  Location     Type
 19938 ;;                  8   33[BANK0 ] struct _RtccDateType
 19939 ;; Registers used:
 19940 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19941 ;; Tracked objects:
 19942 ;;		On entry : 0/0
 19943 ;;		On exit  : 0/0
 19944 ;;		Unchanged: 0/0
 19945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19946 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19947 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19949 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19950 ;;Total ram usage:       17 bytes
 19951 ;; Hardware stack levels used:    1
 19952 ;; Hardware stack levels required when called:   12
 19953 ;; This function calls:
 19954 ;;		_Rtcc_GetRtccValue
 19955 ;; This function is called by:
 19956 ;;		_Rtcm_MainTask
 19957 ;; This function uses a non-reentrant model
 19958 ;;
 19959                           
 19960                           	psect	text88
 19961  004D9A                     __ptext88:
 19962                           	opt stack 0
 19963  004D9A                     _Rtcm_GetRtccDate:
 19964                           	opt stack 15
 19965                           
 19966                           ;rtcm.c: 204: RtccDateType LocalDate;
 19967                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19968                           
 19969                           ; BSR set to: 15
 19970                           ;incstack = 0
 19971  004D9A  0E00               	movlw	0
 19972  004D9C  EC9F  F023         	call	_Rtcc_GetRtccValue
 19973  004DA0  0100               	movlb	0	; () banked
 19974  004DA2  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19975  004DA4  0ED0               	movlw	208
 19976  004DA6  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19977  004DA8  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19978  004DAA  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19979  004DAC  0E07               	movlw	7
 19980  004DAE  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19981                           
 19982                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19983  004DB0  0E01               	movlw	1
 19984  004DB2  EC9F  F023         	call	_Rtcc_GetRtccValue
 19985  004DB6  0100               	movlb	0	; () banked
 19986  004DB8  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19987                           
 19988                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19989  004DBA  0E02               	movlw	2
 19990  004DBC  EC9F  F023         	call	_Rtcc_GetRtccValue
 19991  004DC0  0100               	movlb	0	; () banked
 19992  004DC2  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19993                           
 19994                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19995  004DC4  0E03               	movlw	3
 19996  004DC6  EC9F  F023         	call	_Rtcc_GetRtccValue
 19997  004DCA  0100               	movlb	0	; () banked
 19998  004DCC  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19999                           
 20000                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20001  004DCE  0E04               	movlw	4
 20002  004DD0  EC9F  F023         	call	_Rtcc_GetRtccValue
 20003  004DD4  0100               	movlb	0	; () banked
 20004  004DD6  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20005                           
 20006                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20007  004DD8  0E05               	movlw	5
 20008  004DDA  EC9F  F023         	call	_Rtcc_GetRtccValue
 20009  004DDE  0100               	movlb	0	; () banked
 20010  004DE0  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20011                           
 20012                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20013  004DE2  0E06               	movlw	6
 20014  004DE4  EC9F  F023         	call	_Rtcc_GetRtccValue
 20015  004DE8  0100               	movlb	0	; () banked
 20016  004DEA  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;rtcm.c: 216: return LocalDate;
 20020  004DEC  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20021  004DF0  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20022  004DF4  0E07               	movlw	7
 20023  004DF6                     u9101:
 20024  004DF6  CFDB FFEB          	movff	plusw2,plusw0
 20025  004DFA  06E8               	decf	wreg,f,c
 20026  004DFC  E2FC               	bc	u9101
 20027  004DFE  0012               	return	
 20028  004E00                     __end_of_Rtcm_GetRtccDate:
 20029                           	opt stack 0
 20030                           tosu	equ	0xFFF
 20031                           tosh	equ	0xFFE
 20032                           tosl	equ	0xFFD
 20033                           pclath	equ	0xFFA
 20034                           tblptru	equ	0xFF8
 20035                           tblptrh	equ	0xFF7
 20036                           tblptrl	equ	0xFF6
 20037                           tablat	equ	0xFF5
 20038                           prodh	equ	0xFF4
 20039                           prodl	equ	0xFF3
 20040                           intcon	equ	0xFF2
 20041                           intcon2	equ	0xFF1
 20042                           intcon3	equ	0xFF0
 20043                           indf0	equ	0xFEF
 20044                           postinc0	equ	0xFEE
 20045                           plusw0	equ	0xFEB
 20046                           fsr0h	equ	0xFEA
 20047                           fsr0l	equ	0xFE9
 20048                           wreg	equ	0xFE8
 20049                           indf1	equ	0xFE7
 20050                           postinc1	equ	0xFE6
 20051                           postdec1	equ	0xFE5
 20052                           plusw1	equ	0xFE3
 20053                           fsr1h	equ	0xFE2
 20054                           fsr1l	equ	0xFE1
 20055                           indf2	equ	0xFDF
 20056                           postinc2	equ	0xFDE
 20057                           postdec2	equ	0xFDD
 20058                           plusw2	equ	0xFDB
 20059                           fsr2h	equ	0xFDA
 20060                           fsr2l	equ	0xFD9
 20061                           status	equ	0xFD8
 20062                           
 20063 ;; *************** function _Rtcc_GetRtccValue *****************
 20064 ;; Defined at:
 20065 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;  RtccPtrVal      1    wreg     enum E7757
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20070 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20071 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  1    wreg      unsigned char 
 20074 ;; Registers used:
 20075 ;;		wreg, status,2, status,0, prodl, prodh
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20085 ;;Total ram usage:        4 bytes
 20086 ;; Hardware stack levels used:    1
 20087 ;; Hardware stack levels required when called:   11
 20088 ;; This function calls:
 20089 ;;		Nothing
 20090 ;; This function is called by:
 20091 ;;		_Rtcm_GetRtccDate
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text89
 20096  00473E                     __ptext89:
 20097                           	opt stack 0
 20098  00473E                     _Rtcc_GetRtccValue:
 20099                           	opt stack 15
 20100                           
 20101                           ; BSR set to: 0
 20102                           ;incstack = 0
 20103                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20104  00473E  0100               	movlb	0	; () banked
 20105  004740  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20106                           
 20107                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20108                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20109                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20110  004742  D02D               	goto	l416
 20111  004744                     l417:
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20115  004744  010F               	movlb	15	; () banked
 20116  004746  833F               	bsf	63,1,b	;volatile
 20117  004748                     
 20118                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20119  004748  813F               	bsf	63,0,b	;volatile
 20120  00474A  D01C               	goto	L20
 20121  00474C                     l419:
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20125  00474C  010F               	movlb	15	; () banked
 20126  00474E  833F               	bsf	63,1,b	;volatile
 20127  004750  D01E               	goto	L21
 20128  004752                     l420:
 20129                           
 20130                           ; BSR set to: 0
 20131                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20132  004752  010F               	movlb	15	; () banked
 20133  004754  833F               	bsf	63,1,b	;volatile
 20134  004756  D021               	goto	L24
 20135  004758                     l8999:
 20136                           
 20137                           ; BSR set to: 15
 20138                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20139  004758  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20140  00475C  0E0F               	movlw	15
 20141  00475E  0100               	movlb	0	; () banked
 20142  004760  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20143  004762  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20144  004764  0B0F               	andlw	15
 20145  004766  0B0F               	andlw	15
 20146  004768  0D0A               	mullw	10
 20147  00476A  50F3               	movf	prodl,w,c
 20148  00476C  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20149  00476E  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20150                           
 20151                           ;rtcc_drv.c: 241: break;
 20152  004770  D02D               	goto	l418
 20153  004772                     l421:
 20154                           
 20155                           ; BSR set to: 0
 20156                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20157  004772  010F               	movlb	15	; () banked
 20158  004774  933F               	bcf	63,1,b	;volatile
 20159                           
 20160                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20161  004776  813F               	bsf	63,0,b	;volatile
 20162                           
 20163                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20164  004778  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20165                           
 20166                           ;rtcc_drv.c: 249: break;
 20167  00477C  D027               	goto	l418
 20168  00477E                     l422:
 20169                           
 20170                           ; BSR set to: 0
 20171                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20172  00477E  010F               	movlb	15	; () banked
 20173  004780  933F               	bcf	63,1,b	;volatile
 20174  004782  D7E2               	goto	L22
 20175  004784                     L20:
 20176                           
 20177                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20178  004784  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20179  004788  D7E7               	goto	l8999
 20180  00478A                     l423:
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20184  00478A  010F               	movlb	15	; () banked
 20185  00478C  933F               	bcf	63,1,b	;volatile
 20186  00478E                     L21:
 20187                           
 20188                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20189  00478E  913F               	bcf	63,0,b	;volatile
 20190                           
 20191                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20192  004790  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20193  004794  D7E1               	goto	l8999
 20194  004796                     l424:
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20198  004796  010F               	movlb	15	; () banked
 20199  004798  933F               	bcf	63,1,b	;volatile
 20200  00479A                     L24:
 20201                           
 20202                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20203  00479A  913F               	bcf	63,0,b	;volatile
 20204  00479C  D7F3               	goto	L20
 20205  00479E                     l416:
 20206                           
 20207                           ; BSR set to: 0
 20208  00479E  0100               	movlb	0	; () banked
 20209  0047A0  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20210                           
 20211                           ; Switch size 1, requested type "space"
 20212                           ; Number of cases is 7, Range of values is 0 to 6
 20213                           ; switch strategies available:
 20214                           ; Name         Instructions Cycles
 20215                           ; simple_byte           22    12 (average)
 20216                           ;	Chosen strategy is simple_byte
 20217  0047A2  0A00               	xorlw	0	; case 0
 20218  0047A4  B4D8               	btfsc	status,2,c
 20219  0047A6  D7CE               	goto	l417
 20220  0047A8  0A01               	xorlw	1	; case 1
 20221  0047AA  B4D8               	btfsc	status,2,c
 20222  0047AC  D7CF               	goto	l419
 20223  0047AE  0A03               	xorlw	3	; case 2
 20224  0047B0  B4D8               	btfsc	status,2,c
 20225  0047B2  D7CF               	goto	l420
 20226  0047B4  0A01               	xorlw	1	; case 3
 20227  0047B6  B4D8               	btfsc	status,2,c
 20228  0047B8  D7DC               	goto	l421
 20229  0047BA  0A07               	xorlw	7	; case 4
 20230  0047BC  B4D8               	btfsc	status,2,c
 20231  0047BE  D7DF               	goto	l422
 20232  0047C0  0A01               	xorlw	1	; case 5
 20233  0047C2  B4D8               	btfsc	status,2,c
 20234  0047C4  D7E2               	goto	l423
 20235  0047C6  0A03               	xorlw	3	; case 6
 20236  0047C8  B4D8               	btfsc	status,2,c
 20237  0047CA  D7E5               	goto	l424
 20238  0047CC                     l418:
 20239                           
 20240                           ;rtcc_drv.c: 286: return RetValue;
 20241                           
 20242                           ; BSR set to: 0
 20243  0047CC  0100               	movlb	0	; () banked
 20244  0047CE  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20245  0047D0  0012               	return	
 20246  0047D2                     __end_of_Rtcc_GetRtccValue:
 20247                           	opt stack 0
 20248                           tosu	equ	0xFFF
 20249                           tosh	equ	0xFFE
 20250                           tosl	equ	0xFFD
 20251                           pclath	equ	0xFFA
 20252                           tblptru	equ	0xFF8
 20253                           tblptrh	equ	0xFF7
 20254                           tblptrl	equ	0xFF6
 20255                           tablat	equ	0xFF5
 20256                           prodh	equ	0xFF4
 20257                           prodl	equ	0xFF3
 20258                           intcon	equ	0xFF2
 20259                           intcon2	equ	0xFF1
 20260                           intcon3	equ	0xFF0
 20261                           indf0	equ	0xFEF
 20262                           postinc0	equ	0xFEE
 20263                           plusw0	equ	0xFEB
 20264                           fsr0h	equ	0xFEA
 20265                           fsr0l	equ	0xFE9
 20266                           wreg	equ	0xFE8
 20267                           indf1	equ	0xFE7
 20268                           postinc1	equ	0xFE6
 20269                           postdec1	equ	0xFE5
 20270                           plusw1	equ	0xFE3
 20271                           fsr1h	equ	0xFE2
 20272                           fsr1l	equ	0xFE1
 20273                           indf2	equ	0xFDF
 20274                           postinc2	equ	0xFDE
 20275                           postdec2	equ	0xFDD
 20276                           plusw2	equ	0xFDB
 20277                           fsr2h	equ	0xFDA
 20278                           fsr2l	equ	0xFD9
 20279                           status	equ	0xFD8
 20280                           
 20281 ;; *************** function _Rtcc_SetRtcStatus *****************
 20282 ;; Defined at:
 20283 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20284 ;; Parameters:    Size  Location     Type
 20285 ;;  Status          1    wreg     unsigned char 
 20286 ;; Auto vars:     Size  Location     Type
 20287 ;;  Status          1   29[BANK0 ] unsigned char 
 20288 ;; Return value:  Size  Location     Type
 20289 ;;                  1    wreg      void 
 20290 ;; Registers used:
 20291 ;;		wreg
 20292 ;; Tracked objects:
 20293 ;;		On entry : 0/0
 20294 ;;		On exit  : 0/0
 20295 ;;		Unchanged: 0/0
 20296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20301 ;;Total ram usage:        1 bytes
 20302 ;; Hardware stack levels used:    1
 20303 ;; Hardware stack levels required when called:   11
 20304 ;; This function calls:
 20305 ;;		Nothing
 20306 ;; This function is called by:
 20307 ;;		_Rtcm_MainTask
 20308 ;; This function uses a non-reentrant model
 20309 ;;
 20310                           
 20311                           	psect	text90
 20312  005EA6                     __ptext90:
 20313                           	opt stack 0
 20314  005EA6                     _Rtcc_SetRtcStatus:
 20315                           	opt stack 16
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;incstack = 0
 20319                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20320  005EA6  0100               	movlb	0	; () banked
 20321  005EA8  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20322                           
 20323                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20324  005EAA  0100               	movlb	0	; () banked
 20325  005EAC  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20326  005EAE  D003               	bra	u8015
 20327  005EB0  010F               	movlb	15	; () banked
 20328  005EB2  9F3F               	bcf	63,7,b	;volatile
 20329  005EB4  D002               	bra	u8016
 20330  005EB6                     u8015:
 20331  005EB6  010F               	movlb	15	; () banked
 20332  005EB8  8F3F               	bsf	63,7,b	;volatile
 20333  005EBA                     u8016:
 20334                           
 20335                           ; BSR set to: 15
 20336  005EBA  0012               	return		;funcret
 20337  005EBC                     __end_of_Rtcc_SetRtcStatus:
 20338                           	opt stack 0
 20339                           tosu	equ	0xFFF
 20340                           tosh	equ	0xFFE
 20341                           tosl	equ	0xFFD
 20342                           pclath	equ	0xFFA
 20343                           tblptru	equ	0xFF8
 20344                           tblptrh	equ	0xFF7
 20345                           tblptrl	equ	0xFF6
 20346                           tablat	equ	0xFF5
 20347                           prodh	equ	0xFF4
 20348                           prodl	equ	0xFF3
 20349                           intcon	equ	0xFF2
 20350                           intcon2	equ	0xFF1
 20351                           intcon3	equ	0xFF0
 20352                           indf0	equ	0xFEF
 20353                           postinc0	equ	0xFEE
 20354                           plusw0	equ	0xFEB
 20355                           fsr0h	equ	0xFEA
 20356                           fsr0l	equ	0xFE9
 20357                           wreg	equ	0xFE8
 20358                           indf1	equ	0xFE7
 20359                           postinc1	equ	0xFE6
 20360                           postdec1	equ	0xFE5
 20361                           plusw1	equ	0xFE3
 20362                           fsr1h	equ	0xFE2
 20363                           fsr1l	equ	0xFE1
 20364                           indf2	equ	0xFDF
 20365                           postinc2	equ	0xFDE
 20366                           postdec2	equ	0xFDD
 20367                           plusw2	equ	0xFDB
 20368                           fsr2h	equ	0xFDA
 20369                           fsr2l	equ	0xFD9
 20370                           status	equ	0xFD8
 20371                           
 20372 ;; *************** function _Rtcc_RtcConfig *****************
 20373 ;; Defined at:
 20374 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20375 ;; Parameters:    Size  Location     Type
 20376 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20377 ;;		 -> RtcConfig(4), 
 20378 ;; Auto vars:     Size  Location     Type
 20379 ;;		None
 20380 ;; Return value:  Size  Location     Type
 20381 ;;                  1    wreg      void 
 20382 ;; Registers used:
 20383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20384 ;; Tracked objects:
 20385 ;;		On entry : 0/0
 20386 ;;		On exit  : 0/0
 20387 ;;		Unchanged: 0/0
 20388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20393 ;;Total ram usage:        3 bytes
 20394 ;; Hardware stack levels used:    1
 20395 ;; Hardware stack levels required when called:   12
 20396 ;; This function calls:
 20397 ;;		_RtccIrqInit
 20398 ;; This function is called by:
 20399 ;;		_Rtcm_MainTask
 20400 ;; This function uses a non-reentrant model
 20401 ;;
 20402                           
 20403                           	psect	text91
 20404  0043A8                     __ptext91:
 20405                           	opt stack 0
 20406  0043A8                     _Rtcc_RtcConfig:
 20407                           	opt stack 15
 20408                           
 20409                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20410                           
 20411                           ; BSR set to: 15
 20412                           ;incstack = 0
 20413  0043A8  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20414  0043AC  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20415  0043B0  50DF               	movf	indf2,w,c
 20416  0043B2  0100               	movlb	0	; () banked
 20417  0043B4  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20418  0043B6  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20419  0043B8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20420  0043BA  010F               	movlb	15	; () banked
 20421  0043BC  513F               	movf	63,w,b	;volatile
 20422  0043BE  0100               	movlb	0	; () banked
 20423  0043C0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20424  0043C2  0BFB               	andlw	-5
 20425  0043C4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20426  0043C6  010F               	movlb	15	; () banked
 20427  0043C8  6F3F               	movwf	63,b	;volatile
 20428                           
 20429                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20430  0043CA  0100               	movlb	0	; () banked
 20431  0043CC  EE20 F001          	lfsr	2,1
 20432  0043D0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20433  0043D2  26D9               	addwf	fsr2l,f,c
 20434  0043D4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20435  0043D6  22DA               	addwfc	fsr2h,f,c
 20436  0043D8  50DF               	movf	indf2,w,c
 20437  0043DA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20438  0043DC  0E01               	movlw	1
 20439  0043DE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20440  0043E0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20441  0043E2  010F               	movlb	15	; () banked
 20442  0043E4  513C               	movf	60,w,b	;volatile
 20443  0043E6  0100               	movlb	0	; () banked
 20444  0043E8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20445  0043EA  0BFD               	andlw	-3
 20446  0043EC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20447  0043EE  010F               	movlb	15	; () banked
 20448  0043F0  6F3C               	movwf	60,b	;volatile
 20449                           
 20450                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20451  0043F2  0100               	movlb	0	; () banked
 20452  0043F4  EE20 F001          	lfsr	2,1
 20453  0043F8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20454  0043FA  26D9               	addwf	fsr2l,f,c
 20455  0043FC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20456  0043FE  22DA               	addwfc	fsr2h,f,c
 20457  004400  50DF               	movf	indf2,w,c
 20458  004402  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20459  004404  90D8               	bcf	status,0,c
 20460  004406  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20461  004408  0E01               	movlw	1
 20462  00440A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20463  00440C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20464  00440E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20465  004410  010F               	movlb	15	; () banked
 20466  004412  513C               	movf	60,w,b	;volatile
 20467  004414  0100               	movlb	0	; () banked
 20468  004416  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20469  004418  0BFB               	andlw	-5
 20470  00441A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20471  00441C  010F               	movlb	15	; () banked
 20472  00441E  6F3C               	movwf	60,b	;volatile
 20473                           
 20474                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20475  004420  0100               	movlb	0	; () banked
 20476  004422  EE20 F002          	lfsr	2,2
 20477  004426  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20478  004428  26D9               	addwf	fsr2l,f,c
 20479  00442A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20480  00442C  22DA               	addwfc	fsr2h,f,c
 20481  00442E  04DE               	decf	postinc2,w,c
 20482  004430  A4D8               	btfss	status,2,c
 20483  004432  0012               	return	
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;rtcc_drv.c: 115: {
 20487                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20488  004434  EE20 F003          	lfsr	2,3
 20489  004438  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20490  00443A  26D9               	addwf	fsr2l,f,c
 20491  00443C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20492  00443E  22DA               	addwfc	fsr2h,f,c
 20493  004440  50DF               	movf	indf2,w,c
 20494  004442  EC5E  F02F         	call	_RtccIrqInit
 20495  004446  0012               	return	
 20496  004448                     __end_of_Rtcc_RtcConfig:
 20497                           	opt stack 0
 20498                           tosu	equ	0xFFF
 20499                           tosh	equ	0xFFE
 20500                           tosl	equ	0xFFD
 20501                           pclath	equ	0xFFA
 20502                           tblptru	equ	0xFF8
 20503                           tblptrh	equ	0xFF7
 20504                           tblptrl	equ	0xFF6
 20505                           tablat	equ	0xFF5
 20506                           prodh	equ	0xFF4
 20507                           prodl	equ	0xFF3
 20508                           intcon	equ	0xFF2
 20509                           intcon2	equ	0xFF1
 20510                           intcon3	equ	0xFF0
 20511                           indf0	equ	0xFEF
 20512                           postinc0	equ	0xFEE
 20513                           plusw0	equ	0xFEB
 20514                           fsr0h	equ	0xFEA
 20515                           fsr0l	equ	0xFE9
 20516                           wreg	equ	0xFE8
 20517                           indf1	equ	0xFE7
 20518                           postinc1	equ	0xFE6
 20519                           postdec1	equ	0xFE5
 20520                           plusw1	equ	0xFE3
 20521                           fsr1h	equ	0xFE2
 20522                           fsr1l	equ	0xFE1
 20523                           indf2	equ	0xFDF
 20524                           postinc2	equ	0xFDE
 20525                           postdec2	equ	0xFDD
 20526                           plusw2	equ	0xFDB
 20527                           fsr2h	equ	0xFDA
 20528                           fsr2l	equ	0xFD9
 20529                           status	equ	0xFD8
 20530                           
 20531 ;; *************** function _RtccIrqInit *****************
 20532 ;; Defined at:
 20533 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20534 ;; Parameters:    Size  Location     Type
 20535 ;;  Priority        1    wreg     enum E7716
 20536 ;; Auto vars:     Size  Location     Type
 20537 ;;  Priority        1   29[BANK0 ] enum E7716
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      void 
 20540 ;; Registers used:
 20541 ;;		wreg
 20542 ;; Tracked objects:
 20543 ;;		On entry : 0/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;Total ram usage:        1 bytes
 20552 ;; Hardware stack levels used:    1
 20553 ;; Hardware stack levels required when called:   11
 20554 ;; This function calls:
 20555 ;;		Nothing
 20556 ;; This function is called by:
 20557 ;;		_Rtcc_RtcConfig
 20558 ;; This function uses a non-reentrant model
 20559 ;;
 20560                           
 20561                           	psect	text92
 20562  005EBC                     __ptext92:
 20563                           	opt stack 0
 20564  005EBC                     _RtccIrqInit:
 20565                           	opt stack 15
 20566                           
 20567                           ;incstack = 0
 20568                           ;RtccIrqInit@Priority stored from wreg
 20569  005EBC  0100               	movlb	0	; () banked
 20570  005EBE  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20571                           
 20572                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20573  005EC0  90A4               	bcf	4004,0,c	;volatile
 20574                           
 20575                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20576  005EC2  0100               	movlb	0	; () banked
 20577  005EC4  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20578  005EC6  D002               	bra	u7035
 20579  005EC8  90A5               	bcf	4005,0,c	;volatile
 20580  005ECA  D001               	bra	u7036
 20581  005ECC                     u7035:
 20582  005ECC  80A5               	bsf	4005,0,c	;volatile
 20583  005ECE                     u7036:
 20584                           
 20585                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20586  005ECE  80A3               	bsf	4003,0,c	;volatile
 20587  005ED0  0012               	return		;funcret
 20588  005ED2                     __end_of_RtccIrqInit:
 20589                           	opt stack 0
 20590                           tosu	equ	0xFFF
 20591                           tosh	equ	0xFFE
 20592                           tosl	equ	0xFFD
 20593                           pclath	equ	0xFFA
 20594                           tblptru	equ	0xFF8
 20595                           tblptrh	equ	0xFF7
 20596                           tblptrl	equ	0xFF6
 20597                           tablat	equ	0xFF5
 20598                           prodh	equ	0xFF4
 20599                           prodl	equ	0xFF3
 20600                           intcon	equ	0xFF2
 20601                           intcon2	equ	0xFF1
 20602                           intcon3	equ	0xFF0
 20603                           indf0	equ	0xFEF
 20604                           postinc0	equ	0xFEE
 20605                           plusw0	equ	0xFEB
 20606                           fsr0h	equ	0xFEA
 20607                           fsr0l	equ	0xFE9
 20608                           wreg	equ	0xFE8
 20609                           indf1	equ	0xFE7
 20610                           postinc1	equ	0xFE6
 20611                           postdec1	equ	0xFE5
 20612                           plusw1	equ	0xFE3
 20613                           fsr1h	equ	0xFE2
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           plusw2	equ	0xFDB
 20619                           fsr2h	equ	0xFDA
 20620                           fsr2l	equ	0xFD9
 20621                           status	equ	0xFD8
 20622                           
 20623 ;; *************** function _Rtcc_AlarmConfig *****************
 20624 ;; Defined at:
 20625 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20628 ;;		 -> AlCfg(4), 
 20629 ;; Auto vars:     Size  Location     Type
 20630 ;;		None
 20631 ;; Return value:  Size  Location     Type
 20632 ;;                  1    wreg      void 
 20633 ;; Registers used:
 20634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20635 ;; Tracked objects:
 20636 ;;		On entry : 0/0
 20637 ;;		On exit  : 0/0
 20638 ;;		Unchanged: 0/0
 20639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20643 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20644 ;;Total ram usage:        3 bytes
 20645 ;; Hardware stack levels used:    1
 20646 ;; Hardware stack levels required when called:   11
 20647 ;; This function calls:
 20648 ;;		Nothing
 20649 ;; This function is called by:
 20650 ;;		_Rtcm_MainTask
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654                           	psect	text93
 20655  004CC8                     __ptext93:
 20656                           	opt stack 0
 20657  004CC8                     _Rtcc_AlarmConfig:
 20658                           	opt stack 16
 20659                           
 20660                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20661                           
 20662                           ;incstack = 0
 20663  004CC8  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20664  004CCC  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20665  004CD0  50DF               	movf	indf2,w,c
 20666  004CD2  0100               	movlb	0	; () banked
 20667  004CD4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20668  004CD6  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20669  004CD8  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20670  004CDA  5091               	movf	3985,w,c	;volatile
 20671  004CDC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20672  004CDE  0B7F               	andlw	-129
 20673  004CE0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20674  004CE2  6E91               	movwf	3985,c	;volatile
 20675                           
 20676                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20677  004CE4  EE20 F001          	lfsr	2,1
 20678  004CE8  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20679  004CEA  26D9               	addwf	fsr2l,f,c
 20680  004CEC  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20681  004CEE  22DA               	addwfc	fsr2h,f,c
 20682  004CF0  50DF               	movf	indf2,w,c
 20683  004CF2  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20684  004CF4  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20685  004CF6  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20686  004CF8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20687  004CFA  5091               	movf	3985,w,c	;volatile
 20688  004CFC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20689  004CFE  0BBF               	andlw	-65
 20690  004D00  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20691  004D02  6E91               	movwf	3985,c	;volatile
 20692                           
 20693                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20694  004D04  EE20 F002          	lfsr	2,2
 20695  004D08  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20696  004D0A  26D9               	addwf	fsr2l,f,c
 20697  004D0C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20698  004D0E  22DA               	addwfc	fsr2h,f,c
 20699  004D10  50DF               	movf	indf2,w,c
 20700  004D12  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20701  004D14  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20702  004D16  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20703  004D18  5091               	movf	3985,w,c	;volatile
 20704  004D1A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20705  004D1C  0BC3               	andlw	-61
 20706  004D1E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20707  004D20  6E91               	movwf	3985,c	;volatile
 20708                           
 20709                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20710  004D22  EE20 F003          	lfsr	2,3
 20711  004D26  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20712  004D28  26D9               	addwf	fsr2l,f,c
 20713  004D2A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20714  004D2C  22DA               	addwfc	fsr2h,f,c
 20715  004D2E  50DF               	movf	indf2,w,c
 20716  004D30  6E90               	movwf	3984,c	;volatile
 20717                           
 20718                           ; BSR set to: 0
 20719  004D32  0012               	return		;funcret
 20720  004D34                     __end_of_Rtcc_AlarmConfig:
 20721                           	opt stack 0
 20722                           tosu	equ	0xFFF
 20723                           tosh	equ	0xFFE
 20724                           tosl	equ	0xFFD
 20725                           pclath	equ	0xFFA
 20726                           tblptru	equ	0xFF8
 20727                           tblptrh	equ	0xFF7
 20728                           tblptrl	equ	0xFF6
 20729                           tablat	equ	0xFF5
 20730                           prodh	equ	0xFF4
 20731                           prodl	equ	0xFF3
 20732                           intcon	equ	0xFF2
 20733                           intcon2	equ	0xFF1
 20734                           intcon3	equ	0xFF0
 20735                           indf0	equ	0xFEF
 20736                           postinc0	equ	0xFEE
 20737                           plusw0	equ	0xFEB
 20738                           fsr0h	equ	0xFEA
 20739                           fsr0l	equ	0xFE9
 20740                           wreg	equ	0xFE8
 20741                           indf1	equ	0xFE7
 20742                           postinc1	equ	0xFE6
 20743                           postdec1	equ	0xFE5
 20744                           plusw1	equ	0xFE3
 20745                           fsr1h	equ	0xFE2
 20746                           fsr1l	equ	0xFE1
 20747                           indf2	equ	0xFDF
 20748                           postinc2	equ	0xFDE
 20749                           postdec2	equ	0xFDD
 20750                           plusw2	equ	0xFDB
 20751                           fsr2h	equ	0xFDA
 20752                           fsr2l	equ	0xFD9
 20753                           status	equ	0xFD8
 20754                           
 20755 ;; *************** function _initGprsModem *****************
 20756 ;; Defined at:
 20757 ;;		line 109 in file "../Source/c/04_App/app.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;		None
 20760 ;; Auto vars:     Size  Location     Type
 20761 ;;		None
 20762 ;; Return value:  Size  Location     Type
 20763 ;;                  1    wreg      unsigned char 
 20764 ;; Registers used:
 20765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20766 ;; Tracked objects:
 20767 ;;		On entry : 0/0
 20768 ;;		On exit  : 0/0
 20769 ;;		Unchanged: 0/0
 20770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;Total ram usage:        0 bytes
 20776 ;; Hardware stack levels used:    1
 20777 ;; Hardware stack levels required when called:   14
 20778 ;; This function calls:
 20779 ;;		_Led_SetLedStatus
 20780 ;;		_Mdm_SetSmsFormat
 20781 ;;		_secondsAppTimer
 20782 ;; This function is called by:
 20783 ;;		_MyApp_Task
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text94
 20788  0054E2                     __ptext94:
 20789                           	opt stack 0
 20790  0054E2                     _initGprsModem:
 20791                           	opt stack 13
 20792                           
 20793                           ;app.c: 111: static uint16_t modemCounter = 0;
 20794                           ;app.c: 112: static bool isInitialized = 0u;
 20795                           ;app.c: 113: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;incstack = 0
 20799  0054E2  0E03               	movlw	3
 20800  0054E4  0100               	movlb	0	; () banked
 20801  0054E6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 20802  0054E8  B4D8               	btfsc	status,2,c
 20803  0054EA  D003               	goto	u13290
 20804                           
 20805                           ; BSR set to: 0
 20806  0054EC  05CF               	decf	_MdmStatus& (0+255),w,b
 20807  0054EE  A4D8               	btfss	status,2,c
 20808  0054F0  D018               	goto	l2530
 20809  0054F2                     u13290:
 20810                           
 20811                           ; BSR set to: 0
 20812                           ;app.c: 114: {
 20813                           ;app.c: 115: if (secondsAppTimer(5, &modemCounter, 0))
 20814                           
 20815                           ; BSR set to: 0
 20816  0054F2  0EB9               	movlw	low initGprsModem@modemCounter
 20817  0054F4  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20818  0054F6  0E03               	movlw	high initGprsModem@modemCounter
 20819  0054F8  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20820  0054FA  0E00               	movlw	0
 20821  0054FC  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20822  0054FE  0E05               	movlw	5
 20823  005500  EC83  F021         	call	_secondsAppTimer
 20824  005504  0900               	iorlw	0
 20825  005506  B4D8               	btfsc	status,2,c
 20826  005508  D00C               	goto	l2530
 20827                           
 20828                           ;app.c: 116: {
 20829                           ;app.c: 119: Mdm_SetSmsFormat(1);
 20830  00550A  0E01               	movlw	1
 20831  00550C  EC8E  F029         	call	_Mdm_SetSmsFormat
 20832                           
 20833                           ;app.c: 120: Led_SetLedStatus(1u, LED_STS_ON);
 20834  005510  0E01               	movlw	1
 20835  005512  0100               	movlb	0	; () banked
 20836  005514  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20837  005516  0E01               	movlw	1
 20838  005518  EC60  F02D         	call	_Led_SetLedStatus
 20839                           
 20840                           ;app.c: 121: isInitialized = 1;
 20841  00551C  0E01               	movlw	1
 20842  00551E  0101               	movlb	1	; () banked
 20843  005520  6FD8               	movwf	initGprsModem@isInitialized& (0+255),b
 20844  005522                     l2530:
 20845                           
 20846                           ;app.c: 122: }
 20847                           ;app.c: 123: }
 20848                           ;app.c: 124: return isInitialized;
 20849                           
 20850                           ; BSR set to: 1
 20851                           
 20852                           ; BSR set to: 1
 20853  005522  0101               	movlb	1	; () banked
 20854  005524  51D8               	movf	initGprsModem@isInitialized& (0+255),w,b
 20855  005526  0012               	return	
 20856  005528                     __end_of_initGprsModem:
 20857                           	opt stack 0
 20858                           tosu	equ	0xFFF
 20859                           tosh	equ	0xFFE
 20860                           tosl	equ	0xFFD
 20861                           pclath	equ	0xFFA
 20862                           tblptru	equ	0xFF8
 20863                           tblptrh	equ	0xFF7
 20864                           tblptrl	equ	0xFF6
 20865                           tablat	equ	0xFF5
 20866                           prodh	equ	0xFF4
 20867                           prodl	equ	0xFF3
 20868                           intcon	equ	0xFF2
 20869                           intcon2	equ	0xFF1
 20870                           intcon3	equ	0xFF0
 20871                           indf0	equ	0xFEF
 20872                           postinc0	equ	0xFEE
 20873                           plusw0	equ	0xFEB
 20874                           fsr0h	equ	0xFEA
 20875                           fsr0l	equ	0xFE9
 20876                           wreg	equ	0xFE8
 20877                           indf1	equ	0xFE7
 20878                           postinc1	equ	0xFE6
 20879                           postdec1	equ	0xFE5
 20880                           plusw1	equ	0xFE3
 20881                           fsr1h	equ	0xFE2
 20882                           fsr1l	equ	0xFE1
 20883                           indf2	equ	0xFDF
 20884                           postinc2	equ	0xFDE
 20885                           postdec2	equ	0xFDD
 20886                           plusw2	equ	0xFDB
 20887                           fsr2h	equ	0xFDA
 20888                           fsr2l	equ	0xFD9
 20889                           status	equ	0xFD8
 20890                           
 20891 ;; *************** function _Mdm_SetSmsFormat *****************
 20892 ;; Defined at:
 20893 ;;		line 817 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;  TextFormat      1    wreg     unsigned char 
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20898 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20899 ;;  Index           1   35[BANK0 ] unsigned char 
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  1    wreg      void 
 20902 ;; Registers used:
 20903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/0
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20910 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20912 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20913 ;;Total ram usage:       22 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:   13
 20916 ;; This function calls:
 20917 ;;		_Uart_WriteString
 20918 ;; This function is called by:
 20919 ;;		_initGprsModem
 20920 ;; This function uses a non-reentrant model
 20921 ;;
 20922                           
 20923                           	psect	text95
 20924  00531C                     __ptext95:
 20925                           	opt stack 0
 20926  00531C                     _Mdm_SetSmsFormat:
 20927                           	opt stack 13
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;incstack = 0
 20931                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20932  00531C  0100               	movlb	0	; () banked
 20933  00531E  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20934                           
 20935                           ;mdm_gsm_gprs.c: 819: UINT8 UartMessage[20];
 20936                           ;mdm_gsm_gprs.c: 820: UINT8 Index = 0;
 20937  005320  0E00               	movlw	0
 20938  005322  0100               	movlb	0	; () banked
 20939  005324  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20940                           
 20941                           ;mdm_gsm_gprs.c: 823: UartMessage[0] = 'A';
 20942  005326  0E41               	movlw	65
 20943  005328  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20944                           
 20945                           ;mdm_gsm_gprs.c: 824: UartMessage[1] = 'T';
 20946  00532A  0E54               	movlw	84
 20947  00532C  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 20948                           
 20949                           ;mdm_gsm_gprs.c: 825: UartMessage[2] = '+';
 20950  00532E  0E2B               	movlw	43
 20951  005330  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 20952                           
 20953                           ;mdm_gsm_gprs.c: 826: UartMessage[3] = 'C';
 20954  005332  0E43               	movlw	67
 20955  005334  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 20956                           
 20957                           ;mdm_gsm_gprs.c: 827: UartMessage[4] = 'M';
 20958  005336  0E4D               	movlw	77
 20959  005338  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 20960                           
 20961                           ;mdm_gsm_gprs.c: 828: UartMessage[5] = 'G';
 20962  00533A  0E47               	movlw	71
 20963  00533C  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 20964                           
 20965                           ;mdm_gsm_gprs.c: 829: UartMessage[6] = 'F';
 20966  00533E  0E46               	movlw	70
 20967  005340  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 20968                           
 20969                           ;mdm_gsm_gprs.c: 830: UartMessage[7] = '=';
 20970  005342  0E3D               	movlw	61
 20971  005344  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 20972                           
 20973                           ; BSR set to: 0
 20974                           ;mdm_gsm_gprs.c: 833: if (TextFormat == 1u)
 20975  005346  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 20976  005348  A4D8               	btfss	status,2,c
 20977  00534A  D002               	goto	l1111
 20978                           
 20979                           ; BSR set to: 0
 20980                           ;mdm_gsm_gprs.c: 834: {
 20981                           ;mdm_gsm_gprs.c: 835: UartMessage[8] = '1';
 20982  00534C  0E31               	movlw	49
 20983  00534E  D001               	goto	L25
 20984  005350                     l1111:
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;mdm_gsm_gprs.c: 837: else
 20988                           ;mdm_gsm_gprs.c: 838: {
 20989                           ;mdm_gsm_gprs.c: 839: UartMessage[8] = '0';
 20990                           
 20991                           ; BSR set to: 0
 20992  005350  0E30               	movlw	48
 20993  005352                     L25:
 20994  005352  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;mdm_gsm_gprs.c: 840: }
 20998                           ;mdm_gsm_gprs.c: 842: UartMessage[9] = '\r';
 20999  005354  0E0D               	movlw	13
 21000  005356  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21001                           
 21002                           ;mdm_gsm_gprs.c: 843: UartMessage[10] = (0);
 21003  005358  0E00               	movlw	0
 21004  00535A  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;mdm_gsm_gprs.c: 846: Uart_WriteString(1, UartMessage);
 21008  00535C  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21009  00535E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21010  005360  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21011  005362  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21012  005364  0E01               	movlw	1
 21013  005366  ECFF  F02B         	call	_Uart_WriteString
 21014  00536A  0012               	return		;funcret
 21015  00536C                     __end_of_Mdm_SetSmsFormat:
 21016                           	opt stack 0
 21017                           tosu	equ	0xFFF
 21018                           tosh	equ	0xFFE
 21019                           tosl	equ	0xFFD
 21020                           pclath	equ	0xFFA
 21021                           tblptru	equ	0xFF8
 21022                           tblptrh	equ	0xFF7
 21023                           tblptrl	equ	0xFF6
 21024                           tablat	equ	0xFF5
 21025                           prodh	equ	0xFF4
 21026                           prodl	equ	0xFF3
 21027                           intcon	equ	0xFF2
 21028                           intcon2	equ	0xFF1
 21029                           intcon3	equ	0xFF0
 21030                           indf0	equ	0xFEF
 21031                           postinc0	equ	0xFEE
 21032                           plusw0	equ	0xFEB
 21033                           fsr0h	equ	0xFEA
 21034                           fsr0l	equ	0xFE9
 21035                           wreg	equ	0xFE8
 21036                           indf1	equ	0xFE7
 21037                           postinc1	equ	0xFE6
 21038                           postdec1	equ	0xFE5
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _blinkForSeconds *****************
 21051 ;; Defined at:
 21052 ;;		line 127 in file "../Source/c/04_App/app.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  seconds         1    wreg     unsigned char 
 21055 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 21056 ;;		 -> MyApp_Task@blickTicks(2), 
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;  seconds         1   53[BANK0 ] unsigned char 
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21071 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21072 ;;Total ram usage:        3 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:   13
 21075 ;; This function calls:
 21076 ;;		_Led_SetLedStatus
 21077 ;;		_secondsAppTimer
 21078 ;; This function is called by:
 21079 ;;		_MyApp_Task
 21080 ;; This function uses a non-reentrant model
 21081 ;;
 21082                           
 21083                           	psect	text96
 21084  0058EE                     __ptext96:
 21085                           	opt stack 0
 21086  0058EE                     _blinkForSeconds:
 21087                           	opt stack 14
 21088                           
 21089                           ;incstack = 0
 21090                           ;blinkForSeconds@seconds stored from wreg
 21091  0058EE  0100               	movlb	0	; () banked
 21092  0058F0  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 21093                           
 21094                           ;app.c: 129: if (secondsAppTimer(seconds, blickTicks, 0))
 21095  0058F2  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 21096  0058F6  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 21097  0058FA  0E00               	movlw	0
 21098  0058FC  0100               	movlb	0	; () banked
 21099  0058FE  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21100  005900  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 21101  005902  EC83  F021         	call	_secondsAppTimer
 21102  005906  0900               	iorlw	0
 21103  005908  B4D8               	btfsc	status,2,c
 21104  00590A  D007               	goto	l2534
 21105                           
 21106                           ;app.c: 130: {
 21107                           ;app.c: 131: Led_SetLedStatus(1u, LED_STS_ON);
 21108  00590C  0E01               	movlw	1
 21109  00590E  0100               	movlb	0	; () banked
 21110  005910  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21111  005912  0E01               	movlw	1
 21112  005914  EC60  F02D         	call	_Led_SetLedStatus
 21113                           
 21114                           ;app.c: 132: }
 21115  005918  0012               	return	
 21116  00591A                     l2534:
 21117                           
 21118                           ;app.c: 133: else
 21119                           ;app.c: 134: {
 21120                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_BLINK);
 21121  00591A  0E03               	movlw	3
 21122  00591C  0100               	movlb	0	; () banked
 21123  00591E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21124  005920  0E01               	movlw	1
 21125  005922  EC60  F02D         	call	_Led_SetLedStatus
 21126  005926  0012               	return	
 21127  005928                     __end_of_blinkForSeconds:
 21128                           	opt stack 0
 21129                           tosu	equ	0xFFF
 21130                           tosh	equ	0xFFE
 21131                           tosl	equ	0xFFD
 21132                           pclath	equ	0xFFA
 21133                           tblptru	equ	0xFF8
 21134                           tblptrh	equ	0xFF7
 21135                           tblptrl	equ	0xFF6
 21136                           tablat	equ	0xFF5
 21137                           prodh	equ	0xFF4
 21138                           prodl	equ	0xFF3
 21139                           intcon	equ	0xFF2
 21140                           intcon2	equ	0xFF1
 21141                           intcon3	equ	0xFF0
 21142                           indf0	equ	0xFEF
 21143                           postinc0	equ	0xFEE
 21144                           plusw0	equ	0xFEB
 21145                           fsr0h	equ	0xFEA
 21146                           fsr0l	equ	0xFE9
 21147                           wreg	equ	0xFE8
 21148                           indf1	equ	0xFE7
 21149                           postinc1	equ	0xFE6
 21150                           postdec1	equ	0xFE5
 21151                           plusw1	equ	0xFE3
 21152                           fsr1h	equ	0xFE2
 21153                           fsr1l	equ	0xFE1
 21154                           indf2	equ	0xFDF
 21155                           postinc2	equ	0xFDE
 21156                           postdec2	equ	0xFDD
 21157                           plusw2	equ	0xFDB
 21158                           fsr2h	equ	0xFDA
 21159                           fsr2l	equ	0xFD9
 21160                           status	equ	0xFD8
 21161                           
 21162 ;; *************** function _secondsAppTimer *****************
 21163 ;; Defined at:
 21164 ;;		line 85 in file "../Source/c/04_App/app.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;  seconds         1    wreg     unsigned char 
 21167 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21168 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21169 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21170 ;; Auto vars:     Size  Location     Type
 21171 ;;  seconds         1   47[BANK0 ] unsigned char 
 21172 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21173 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21174 ;; Return value:  Size  Location     Type
 21175 ;;                  1    wreg      unsigned char 
 21176 ;; Registers used:
 21177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21178 ;; Tracked objects:
 21179 ;;		On entry : 0/0
 21180 ;;		On exit  : 0/0
 21181 ;;		Unchanged: 0/0
 21182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21183 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21184 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;Total ram usage:        9 bytes
 21188 ;; Hardware stack levels used:    1
 21189 ;; Hardware stack levels required when called:   12
 21190 ;; This function calls:
 21191 ;;		___lwdiv
 21192 ;;		___wmul
 21193 ;; This function is called by:
 21194 ;;		_initGprsModem
 21195 ;;		_blinkForSeconds
 21196 ;; This function uses a non-reentrant model
 21197 ;;
 21198                           
 21199                           	psect	text97
 21200  004306                     __ptext97:
 21201                           	opt stack 0
 21202  004306                     _secondsAppTimer:
 21203                           	opt stack 14
 21204                           
 21205                           ;incstack = 0
 21206                           ;secondsAppTimer@seconds stored from wreg
 21207  004306  0100               	movlb	0	; () banked
 21208  004308  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21209                           
 21210                           ;app.c: 87: bool isExpired = 1;
 21211  00430A  0E01               	movlw	1
 21212  00430C  0100               	movlb	0	; () banked
 21213  00430E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21214                           
 21215                           ; BSR set to: 0
 21216                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21217  004310  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21218  004314  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21219  004316  0E03               	movlw	3
 21220  004318  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21221  00431A  0EE8               	movlw	232
 21222  00431C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21223  00431E  ECE6  F02D         	call	___wmul	;wreg free
 21224  004322  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21225  004326  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21226  00432A  0E00               	movlw	0
 21227  00432C  0100               	movlb	0	; () banked
 21228  00432E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21229  004330  0E64               	movlw	100
 21230  004332  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21231  004334  ECEB  F028         	call	___lwdiv	;wreg free
 21232  004338  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21233  00433C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21234                           
 21235                           ;app.c: 90: if (*counter < destinationTicks)
 21236  004340  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21237  004344  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21238  004348  0100               	movlb	0	; () banked
 21239  00434A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21240  00434C  5CDE               	subwf	postinc2,w,c
 21241  00434E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21242  004350  58DE               	subwfb	postinc2,w,c
 21243  004352  B0D8               	btfsc	status,0,c
 21244  004354  D009               	goto	l2516
 21245                           
 21246                           ; BSR set to: 0
 21247                           ;app.c: 91: {
 21248                           ;app.c: 92: *counter += 1;
 21249  004356  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21250  00435A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21251  00435E  2ADE               	incf	postinc2,f,c
 21252  004360  0E00               	movlw	0
 21253  004362  22DD               	addwfc	postdec2,f,c
 21254                           
 21255                           ; BSR set to: 0
 21256                           ;app.c: 93: isExpired = 0;
 21257  004364  0E00               	movlw	0
 21258  004366  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21259  004368                     l2516:
 21260                           
 21261                           ; BSR set to: 0
 21262                           ;app.c: 94: }
 21263                           ;app.c: 95: if (*counter == destinationTicks)
 21264                           
 21265                           ; BSR set to: 0
 21266  004368  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21267  00436C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21268  004370  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21269  004372  18DE               	xorwf	postinc2,w,c
 21270  004374  E117               	bnz	l12965
 21271  004376  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21272  004378  18DE               	xorwf	postinc2,w,c
 21273  00437A  A4D8               	btfss	status,2,c
 21274  00437C  D013               	goto	l2519
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;app.c: 96: {
 21278                           ;app.c: 97: if (isCyclic)
 21279  00437E  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21280  004380  B4D8               	btfsc	status,2,c
 21281  004382  D008               	goto	l2518
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;app.c: 98: {
 21285                           ;app.c: 99: *counter = 0;
 21286  004384  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21287  004388  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21288  00438C  0E00               	movlw	0
 21289  00438E  6EDE               	movwf	postinc2,c
 21290  004390  0E00               	movlw	0
 21291  004392  D007               	goto	L26
 21292  004394                     l2518:
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;app.c: 101: else
 21296                           ;app.c: 102: {
 21297                           ;app.c: 103: *counter = 0xFFFF;
 21298                           
 21299                           ; BSR set to: 0
 21300  004394  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21301  004398  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21302  00439C  0EFF               	movlw	255
 21303  00439E  6EDE               	movwf	postinc2,c
 21304  0043A0  0EFF               	movlw	255
 21305  0043A2                     L26:
 21306  0043A2  6EDD               	movwf	postdec2,c
 21307  0043A4                     l2519:
 21308  0043A4                     l12965:
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;app.c: 104: }
 21312                           ;app.c: 105: }
 21313                           ;app.c: 106: return isExpired;
 21314  0043A4  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21315  0043A6  0012               	return	
 21316  0043A8                     __end_of_secondsAppTimer:
 21317                           	opt stack 0
 21318                           tosu	equ	0xFFF
 21319                           tosh	equ	0xFFE
 21320                           tosl	equ	0xFFD
 21321                           pclath	equ	0xFFA
 21322                           tblptru	equ	0xFF8
 21323                           tblptrh	equ	0xFF7
 21324                           tblptrl	equ	0xFF6
 21325                           tablat	equ	0xFF5
 21326                           prodh	equ	0xFF4
 21327                           prodl	equ	0xFF3
 21328                           intcon	equ	0xFF2
 21329                           intcon2	equ	0xFF1
 21330                           intcon3	equ	0xFF0
 21331                           indf0	equ	0xFEF
 21332                           postinc0	equ	0xFEE
 21333                           plusw0	equ	0xFEB
 21334                           fsr0h	equ	0xFEA
 21335                           fsr0l	equ	0xFE9
 21336                           wreg	equ	0xFE8
 21337                           indf1	equ	0xFE7
 21338                           postinc1	equ	0xFE6
 21339                           postdec1	equ	0xFE5
 21340                           plusw1	equ	0xFE3
 21341                           fsr1h	equ	0xFE2
 21342                           fsr1l	equ	0xFE1
 21343                           indf2	equ	0xFDF
 21344                           postinc2	equ	0xFDE
 21345                           postdec2	equ	0xFDD
 21346                           plusw2	equ	0xFDB
 21347                           fsr2h	equ	0xFDA
 21348                           fsr2l	equ	0xFD9
 21349                           status	equ	0xFD8
 21350                           
 21351 ;; *************** function _Mdm_RequestSmsData *****************
 21352 ;; Defined at:
 21353 ;;		line 857 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21354 ;; Parameters:    Size  Location     Type
 21355 ;;		None
 21356 ;; Auto vars:     Size  Location     Type
 21357 ;;		None
 21358 ;; Return value:  Size  Location     Type
 21359 ;;                  1    wreg      void 
 21360 ;; Registers used:
 21361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21362 ;; Tracked objects:
 21363 ;;		On entry : 0/0
 21364 ;;		On exit  : 0/0
 21365 ;;		Unchanged: 0/0
 21366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;Total ram usage:        0 bytes
 21372 ;; Hardware stack levels used:    1
 21373 ;; Hardware stack levels required when called:   12
 21374 ;; This function calls:
 21375 ;;		_GenerateEvt
 21376 ;; This function is called by:
 21377 ;;		_MyApp_Task
 21378 ;; This function uses a non-reentrant model
 21379 ;;
 21380                           
 21381                           	psect	text98
 21382  005F6A                     __ptext98:
 21383                           	opt stack 0
 21384  005F6A                     _Mdm_RequestSmsData:
 21385                           	opt stack 15
 21386                           
 21387                           ;mdm_gsm_gprs.c: 860: GenerateEvt(&GetSmsText);
 21388                           
 21389                           ; BSR set to: 0
 21390                           ;incstack = 0
 21391  005F6A  0EDA               	movlw	low _GetSmsText
 21392  005F6C  0100               	movlb	0	; () banked
 21393  005F6E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21394  005F70  0E00               	movlw	high _GetSmsText
 21395  005F72  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21396  005F74  EC47  F02F         	call	_GenerateEvt	;wreg free
 21397  005F78  0012               	return		;funcret
 21398  005F7A                     __end_of_Mdm_RequestSmsData:
 21399                           	opt stack 0
 21400                           tosu	equ	0xFFF
 21401                           tosh	equ	0xFFE
 21402                           tosl	equ	0xFFD
 21403                           pclath	equ	0xFFA
 21404                           tblptru	equ	0xFF8
 21405                           tblptrh	equ	0xFF7
 21406                           tblptrl	equ	0xFF6
 21407                           tablat	equ	0xFF5
 21408                           prodh	equ	0xFF4
 21409                           prodl	equ	0xFF3
 21410                           intcon	equ	0xFF2
 21411                           intcon2	equ	0xFF1
 21412                           intcon3	equ	0xFF0
 21413                           indf0	equ	0xFEF
 21414                           postinc0	equ	0xFEE
 21415                           plusw0	equ	0xFEB
 21416                           fsr0h	equ	0xFEA
 21417                           fsr0l	equ	0xFE9
 21418                           wreg	equ	0xFE8
 21419                           indf1	equ	0xFE7
 21420                           postinc1	equ	0xFE6
 21421                           postdec1	equ	0xFE5
 21422                           plusw1	equ	0xFE3
 21423                           fsr1h	equ	0xFE2
 21424                           fsr1l	equ	0xFE1
 21425                           indf2	equ	0xFDF
 21426                           postinc2	equ	0xFDE
 21427                           postdec2	equ	0xFDD
 21428                           plusw2	equ	0xFDB
 21429                           fsr2h	equ	0xFDA
 21430                           fsr2l	equ	0xFD9
 21431                           status	equ	0xFD8
 21432                           
 21433 ;; *************** function _Mdm_IsSmsReceived *****************
 21434 ;; Defined at:
 21435 ;;		line 920 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21436 ;; Parameters:    Size  Location     Type
 21437 ;;		None
 21438 ;; Auto vars:     Size  Location     Type
 21439 ;;  Ret             1   33[BANK0 ] enum E8914
 21440 ;; Return value:  Size  Location     Type
 21441 ;;                  1    wreg      enum E8914
 21442 ;; Registers used:
 21443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21444 ;; Tracked objects:
 21445 ;;		On entry : 0/0
 21446 ;;		On exit  : 0/0
 21447 ;;		Unchanged: 0/0
 21448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21453 ;;Total ram usage:        1 bytes
 21454 ;; Hardware stack levels used:    1
 21455 ;; Hardware stack levels required when called:   12
 21456 ;; This function calls:
 21457 ;;		_ReceiveEvt
 21458 ;; This function is called by:
 21459 ;;		_MyApp_Task
 21460 ;; This function uses a non-reentrant model
 21461 ;;
 21462                           
 21463                           	psect	text99
 21464  005C3E                     __ptext99:
 21465                           	opt stack 0
 21466  005C3E                     _Mdm_IsSmsReceived:
 21467                           	opt stack 15
 21468                           
 21469                           ;mdm_gsm_gprs.c: 922: SmsRxStsType Ret = SmsNotReceived;
 21470                           
 21471                           ;incstack = 0
 21472  005C3E  0E00               	movlw	0
 21473  005C40  0100               	movlb	0	; () banked
 21474  005C42  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;mdm_gsm_gprs.c: 925: if (ReceiveEvt(&SmsEvent))
 21478  005C44  0EDB               	movlw	low _SmsEvent
 21479  005C46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21480  005C48  0E00               	movlw	high _SmsEvent
 21481  005C4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21482  005C4C  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 21483  005C50  0900               	iorlw	0
 21484  005C52  B4D8               	btfsc	status,2,c
 21485  005C54  D003               	goto	l1126
 21486                           
 21487                           ;mdm_gsm_gprs.c: 926: {
 21488                           ;mdm_gsm_gprs.c: 927: Ret = SmsReceived;
 21489  005C56  0E01               	movlw	1
 21490  005C58  0100               	movlb	0	; () banked
 21491  005C5A  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21492  005C5C                     l1126:
 21493                           
 21494                           ;mdm_gsm_gprs.c: 928: }
 21495                           ;mdm_gsm_gprs.c: 930: return Ret;
 21496  005C5C  0100               	movlb	0	; () banked
 21497  005C5E  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21498  005C60  0012               	return	
 21499  005C62                     __end_of_Mdm_IsSmsReceived:
 21500                           	opt stack 0
 21501                           tosu	equ	0xFFF
 21502                           tosh	equ	0xFFE
 21503                           tosl	equ	0xFFD
 21504                           pclath	equ	0xFFA
 21505                           tblptru	equ	0xFF8
 21506                           tblptrh	equ	0xFF7
 21507                           tblptrl	equ	0xFF6
 21508                           tablat	equ	0xFF5
 21509                           prodh	equ	0xFF4
 21510                           prodl	equ	0xFF3
 21511                           intcon	equ	0xFF2
 21512                           intcon2	equ	0xFF1
 21513                           intcon3	equ	0xFF0
 21514                           indf0	equ	0xFEF
 21515                           postinc0	equ	0xFEE
 21516                           plusw0	equ	0xFEB
 21517                           fsr0h	equ	0xFEA
 21518                           fsr0l	equ	0xFE9
 21519                           wreg	equ	0xFE8
 21520                           indf1	equ	0xFE7
 21521                           postinc1	equ	0xFE6
 21522                           postdec1	equ	0xFE5
 21523                           plusw1	equ	0xFE3
 21524                           fsr1h	equ	0xFE2
 21525                           fsr1l	equ	0xFE1
 21526                           indf2	equ	0xFDF
 21527                           postinc2	equ	0xFDE
 21528                           postdec2	equ	0xFDD
 21529                           plusw2	equ	0xFDB
 21530                           fsr2h	equ	0xFDA
 21531                           fsr2l	equ	0xFD9
 21532                           status	equ	0xFD8
 21533                           
 21534 ;; *************** function _Mdm_IsRinging *****************
 21535 ;; Defined at:
 21536 ;;		line 1003 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21537 ;; Parameters:    Size  Location     Type
 21538 ;;		None
 21539 ;; Auto vars:     Size  Location     Type
 21540 ;;  Ret             1   33[BANK0 ] enum E8910
 21541 ;; Return value:  Size  Location     Type
 21542 ;;                  1    wreg      enum E8910
 21543 ;; Registers used:
 21544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21545 ;; Tracked objects:
 21546 ;;		On entry : 0/0
 21547 ;;		On exit  : 0/0
 21548 ;;		Unchanged: 0/0
 21549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21553 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21554 ;;Total ram usage:        1 bytes
 21555 ;; Hardware stack levels used:    1
 21556 ;; Hardware stack levels required when called:   12
 21557 ;; This function calls:
 21558 ;;		_ReceiveEvt
 21559 ;; This function is called by:
 21560 ;;		_MyApp_Task
 21561 ;; This function uses a non-reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text100
 21565  005C62                     __ptext100:
 21566                           	opt stack 0
 21567  005C62                     _Mdm_IsRinging:
 21568                           	opt stack 15
 21569                           
 21570                           ;mdm_gsm_gprs.c: 1005: RingStsType Ret = PhoneNotRinging;
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;incstack = 0
 21574  005C62  0E00               	movlw	0
 21575  005C64  0100               	movlb	0	; () banked
 21576  005C66  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;mdm_gsm_gprs.c: 1008: if (ReceiveEvt(&RingEvent))
 21580  005C68  0EDC               	movlw	low _RingEvent
 21581  005C6A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21582  005C6C  0E00               	movlw	high _RingEvent
 21583  005C6E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21584  005C70  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 21585  005C74  0900               	iorlw	0
 21586  005C76  B4D8               	btfsc	status,2,c
 21587  005C78  D003               	goto	l1142
 21588                           
 21589                           ;mdm_gsm_gprs.c: 1009: {
 21590                           ;mdm_gsm_gprs.c: 1010: Ret = PhoneRinging;
 21591  005C7A  0E01               	movlw	1
 21592  005C7C  0100               	movlb	0	; () banked
 21593  005C7E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21594  005C80                     l1142:
 21595                           
 21596                           ;mdm_gsm_gprs.c: 1011: }
 21597                           ;mdm_gsm_gprs.c: 1013: return Ret;
 21598  005C80  0100               	movlb	0	; () banked
 21599  005C82  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21600  005C84  0012               	return	
 21601  005C86                     __end_of_Mdm_IsRinging:
 21602                           	opt stack 0
 21603                           tosu	equ	0xFFF
 21604                           tosh	equ	0xFFE
 21605                           tosl	equ	0xFFD
 21606                           pclath	equ	0xFFA
 21607                           tblptru	equ	0xFF8
 21608                           tblptrh	equ	0xFF7
 21609                           tblptrl	equ	0xFF6
 21610                           tablat	equ	0xFF5
 21611                           prodh	equ	0xFF4
 21612                           prodl	equ	0xFF3
 21613                           intcon	equ	0xFF2
 21614                           intcon2	equ	0xFF1
 21615                           intcon3	equ	0xFF0
 21616                           indf0	equ	0xFEF
 21617                           postinc0	equ	0xFEE
 21618                           plusw0	equ	0xFEB
 21619                           fsr0h	equ	0xFEA
 21620                           fsr0l	equ	0xFE9
 21621                           wreg	equ	0xFE8
 21622                           indf1	equ	0xFE7
 21623                           postinc1	equ	0xFE6
 21624                           postdec1	equ	0xFE5
 21625                           plusw1	equ	0xFE3
 21626                           fsr1h	equ	0xFE2
 21627                           fsr1l	equ	0xFE1
 21628                           indf2	equ	0xFDF
 21629                           postinc2	equ	0xFDE
 21630                           postdec2	equ	0xFDD
 21631                           plusw2	equ	0xFDB
 21632                           fsr2h	equ	0xFDA
 21633                           fsr2l	equ	0xFD9
 21634                           status	equ	0xFD8
 21635                           
 21636 ;; *************** function _Mdm_GetSmsData *****************
 21637 ;; Defined at:
 21638 ;;		line 872 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21641 ;;		 -> MyApp_Task@smsText(50), 
 21642 ;; Auto vars:     Size  Location     Type
 21643 ;;  GetSmsStatus    1   41[BANK0 ] enum E8906
 21644 ;; Return value:  Size  Location     Type
 21645 ;;                  1    wreg      enum E8906
 21646 ;; Registers used:
 21647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21648 ;; Tracked objects:
 21649 ;;		On entry : 0/0
 21650 ;;		On exit  : 0/0
 21651 ;;		Unchanged: 0/0
 21652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21656 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21657 ;;Total ram usage:        3 bytes
 21658 ;; Hardware stack levels used:    1
 21659 ;; Hardware stack levels required when called:   12
 21660 ;; This function calls:
 21661 ;;		_ReceiveEvt
 21662 ;;		_StringCopy
 21663 ;; This function is called by:
 21664 ;;		_MyApp_Task
 21665 ;; This function uses a non-reentrant model
 21666 ;;
 21667                           
 21668                           	psect	text101
 21669  005878                     __ptext101:
 21670                           	opt stack 0
 21671  005878                     _Mdm_GetSmsData:
 21672                           	opt stack 15
 21673                           
 21674                           ;mdm_gsm_gprs.c: 874: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 21675                           
 21676                           ; BSR set to: 0
 21677                           ;incstack = 0
 21678  005878  0E00               	movlw	0
 21679  00587A  0100               	movlb	0	; () banked
 21680  00587C  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;mdm_gsm_gprs.c: 877: if (ReceiveEvt(&SmsTxtReady))
 21684  00587E  0ED9               	movlw	low _SmsTxtReady
 21685  005880  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21686  005882  0E00               	movlw	high _SmsTxtReady
 21687  005884  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21688  005886  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 21689  00588A  0900               	iorlw	0
 21690  00588C  B4D8               	btfsc	status,2,c
 21691  00588E  0012               	return	
 21692                           
 21693                           ;mdm_gsm_gprs.c: 878: {
 21694                           ;mdm_gsm_gprs.c: 880: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen);
 21695  005890  0E50               	movlw	low (_Mdm_SmsRx+80)
 21696  005892  0100               	movlb	0	; () banked
 21697  005894  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21698  005896  0E07               	movlw	high (_Mdm_SmsRx+80)
 21699  005898  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21700  00589A  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 21701  00589E  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 21702  0058A2  C783  F081         	movff	_Mdm_SmsRx+131,StringCopy@Len
 21703  0058A6  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21704  0058A8  EC00  F027         	call	_StringCopy	;wreg free
 21705                           
 21706                           ;mdm_gsm_gprs.c: 882: GetSmsStatus = SmsDataReady;
 21707  0058AC  0E01               	movlw	1
 21708  0058AE  0100               	movlb	0	; () banked
 21709  0058B0  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21710                           
 21711                           ; BSR set to: 0
 21712  0058B2  0012               	return	
 21713  0058B4                     __end_of_Mdm_GetSmsData:
 21714                           	opt stack 0
 21715                           tosu	equ	0xFFF
 21716                           tosh	equ	0xFFE
 21717                           tosl	equ	0xFFD
 21718                           pclath	equ	0xFFA
 21719                           tblptru	equ	0xFF8
 21720                           tblptrh	equ	0xFF7
 21721                           tblptrl	equ	0xFF6
 21722                           tablat	equ	0xFF5
 21723                           prodh	equ	0xFF4
 21724                           prodl	equ	0xFF3
 21725                           intcon	equ	0xFF2
 21726                           intcon2	equ	0xFF1
 21727                           intcon3	equ	0xFF0
 21728                           indf0	equ	0xFEF
 21729                           postinc0	equ	0xFEE
 21730                           plusw0	equ	0xFEB
 21731                           fsr0h	equ	0xFEA
 21732                           fsr0l	equ	0xFE9
 21733                           wreg	equ	0xFE8
 21734                           indf1	equ	0xFE7
 21735                           postinc1	equ	0xFE6
 21736                           postdec1	equ	0xFE5
 21737                           plusw1	equ	0xFE3
 21738                           fsr1h	equ	0xFE2
 21739                           fsr1l	equ	0xFE1
 21740                           indf2	equ	0xFDF
 21741                           postinc2	equ	0xFDE
 21742                           postdec2	equ	0xFDD
 21743                           plusw2	equ	0xFDB
 21744                           fsr2h	equ	0xFDA
 21745                           fsr2l	equ	0xFD9
 21746                           status	equ	0xFD8
 21747                           
 21748 ;; *************** function _Led_SetLedBlinkTime *****************
 21749 ;; Defined at:
 21750 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21751 ;; Parameters:    Size  Location     Type
 21752 ;;  Led             1    wreg     unsigned char 
 21753 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21754 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;  Led             1   33[BANK0 ] unsigned char 
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      void 
 21759 ;; Registers used:
 21760 ;;		wreg, status,2, status,0
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21769 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21770 ;;Total ram usage:        5 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:   11
 21773 ;; This function calls:
 21774 ;;		Nothing
 21775 ;; This function is called by:
 21776 ;;		_MyApp_Task
 21777 ;; This function uses a non-reentrant model
 21778 ;;
 21779                           
 21780                           	psect	text102
 21781  005182                     __ptext102:
 21782                           	opt stack 0
 21783  005182                     _Led_SetLedBlinkTime:
 21784                           	opt stack 16
 21785                           
 21786                           ;incstack = 0
 21787                           ;Led_SetLedBlinkTime@Led stored from wreg
 21788  005182  0100               	movlb	0	; () banked
 21789  005184  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21790                           
 21791                           ;led.c: 374: switch (Led)
 21792  005186  D01B               	goto	l2099
 21793  005188                     l2100:
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21797  005188  C07D  F373         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21798  00518C  C07E  F374         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21799                           
 21800                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21801  005190  C07F  F375         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21802  005194  C080  F376         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21803                           
 21804                           ;led.c: 379: break;
 21805  005198  0012               	return	
 21806  00519A                     l2102:
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21810  00519A  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21811  00519E  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21812                           
 21813                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21814  0051A2  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21815  0051A6  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21816                           
 21817                           ;led.c: 384: break;
 21818  0051AA  0012               	return	
 21819  0051AC                     l2103:
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21823  0051AC  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21824  0051B0  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21825                           
 21826                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21827  0051B4  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21828  0051B8  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;led.c: 393: }
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;led.c: 392: break;
 21835                           
 21836                           ;led.c: 391: default:
 21837                           
 21838                           ;led.c: 389: break;
 21839  0051BC  0012               	return	
 21840  0051BE                     l2099:
 21841                           
 21842                           ; BSR set to: 0
 21843  0051BE  0100               	movlb	0	; () banked
 21844  0051C0  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21845                           
 21846                           ; Switch size 1, requested type "space"
 21847                           ; Number of cases is 3, Range of values is 1 to 3
 21848                           ; switch strategies available:
 21849                           ; Name         Instructions Cycles
 21850                           ; simple_byte           10     6 (average)
 21851                           ;	Chosen strategy is simple_byte
 21852  0051C2  0A01               	xorlw	1	; case 1
 21853  0051C4  B4D8               	btfsc	status,2,c
 21854  0051C6  D7E0               	goto	l2100
 21855  0051C8  0A03               	xorlw	3	; case 2
 21856  0051CA  B4D8               	btfsc	status,2,c
 21857  0051CC  D7E6               	goto	l2102
 21858  0051CE  0A01               	xorlw	1	; case 3
 21859  0051D0  A4D8               	btfss	status,2,c
 21860  0051D2  0012               	return	
 21861  0051D4  D7EB               	goto	l2103
 21862  0051D6                     __end_of_Led_SetLedBlinkTime:
 21863                           	opt stack 0
 21864                           tosu	equ	0xFFF
 21865                           tosh	equ	0xFFE
 21866                           tosl	equ	0xFFD
 21867                           pclath	equ	0xFFA
 21868                           tblptru	equ	0xFF8
 21869                           tblptrh	equ	0xFF7
 21870                           tblptrl	equ	0xFF6
 21871                           tablat	equ	0xFF5
 21872                           prodh	equ	0xFF4
 21873                           prodl	equ	0xFF3
 21874                           intcon	equ	0xFF2
 21875                           intcon2	equ	0xFF1
 21876                           intcon3	equ	0xFF0
 21877                           indf0	equ	0xFEF
 21878                           postinc0	equ	0xFEE
 21879                           plusw0	equ	0xFEB
 21880                           fsr0h	equ	0xFEA
 21881                           fsr0l	equ	0xFE9
 21882                           wreg	equ	0xFE8
 21883                           indf1	equ	0xFE7
 21884                           postinc1	equ	0xFE6
 21885                           postdec1	equ	0xFE5
 21886                           plusw1	equ	0xFE3
 21887                           fsr1h	equ	0xFE2
 21888                           fsr1l	equ	0xFE1
 21889                           indf2	equ	0xFDF
 21890                           postinc2	equ	0xFDE
 21891                           postdec2	equ	0xFDD
 21892                           plusw2	equ	0xFDB
 21893                           fsr2h	equ	0xFDA
 21894                           fsr2l	equ	0xFD9
 21895                           status	equ	0xFD8
 21896                           
 21897 ;; *************** function _UartSetConfig *****************
 21898 ;; Defined at:
 21899 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21900 ;; Parameters:    Size  Location     Type
 21901 ;;		None
 21902 ;; Auto vars:     Size  Location     Type
 21903 ;;		None
 21904 ;; Return value:  Size  Location     Type
 21905 ;;                  1    wreg      void 
 21906 ;; Registers used:
 21907 ;;		wreg, status,2
 21908 ;; Tracked objects:
 21909 ;;		On entry : 0/0
 21910 ;;		On exit  : 0/0
 21911 ;;		Unchanged: 0/0
 21912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21917 ;;Total ram usage:        0 bytes
 21918 ;; Hardware stack levels used:    1
 21919 ;; Hardware stack levels required when called:   11
 21920 ;; This function calls:
 21921 ;;		Nothing
 21922 ;; This function is called by:
 21923 ;;		_Mdm_MainTask
 21924 ;; This function uses a non-reentrant model
 21925 ;;
 21926                           
 21927                           	psect	text103
 21928  004F7A                     __ptext103:
 21929                           	opt stack 0
 21930  004F7A                     _UartSetConfig:
 21931                           	opt stack 16
 21932                           
 21933                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;incstack = 0
 21937  004F7A  0E01               	movlw	1
 21938  004F7C  0103               	movlb	3	; () banked
 21939  004F7E  6F28               	movwf	_UartConfig& (0+255),b
 21940                           
 21941                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 21942  004F80  0E00               	movlw	0
 21943  004F82  6F29               	movwf	(_UartConfig+1)& (0+255),b
 21944                           
 21945                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 21946  004F84  0E00               	movlw	0
 21947  004F86  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 21948                           
 21949                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 21950  004F88  0E00               	movlw	0
 21951  004F8A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 21952                           
 21953                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 21954  004F8C  0E00               	movlw	0
 21955  004F8E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 21956                           
 21957                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 21958  004F90  0E00               	movlw	0
 21959  004F92  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 21960                           
 21961                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 21962  004F94  0E01               	movlw	1
 21963  004F96  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 21964                           
 21965                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 21966  004F98  0E01               	movlw	1
 21967  004F9A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 21968                           
 21969                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 21970  004F9C  0E00               	movlw	0
 21971  004F9E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 21972                           
 21973                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 21974  004FA0  0E00               	movlw	0
 21975  004FA2  6F31               	movwf	(_UartConfig+9)& (0+255),b
 21976                           
 21977                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 21978  004FA4  0E00               	movlw	0
 21979  004FA6  6F32               	movwf	(_UartConfig+10)& (0+255),b
 21980                           
 21981                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 21982  004FA8  0E00               	movlw	0
 21983  004FAA  6F33               	movwf	(_UartConfig+11)& (0+255),b
 21984                           
 21985                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 21986  004FAC  0E01               	movlw	1
 21987  004FAE  6F34               	movwf	(_UartConfig+12)& (0+255),b
 21988                           
 21989                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 21990  004FB0  0E00               	movlw	0
 21991  004FB2  6F35               	movwf	(_UartConfig+13)& (0+255),b
 21992  004FB4  0E6C               	movlw	108
 21993  004FB6  6F36               	movwf	(_UartConfig+14)& (0+255),b
 21994  004FB8  0EDC               	movlw	220
 21995  004FBA  6F37               	movwf	(_UartConfig+15)& (0+255),b
 21996  004FBC  0E02               	movlw	2
 21997  004FBE  6F38               	movwf	(_UartConfig+16)& (0+255),b
 21998                           
 21999                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22000  004FC0  0E80               	movlw	128
 22001  004FC2  6F39               	movwf	(_UartConfig+17)& (0+255),b
 22002  004FC4  0E25               	movlw	37
 22003  004FC6  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 22004  004FC8  0E00               	movlw	0
 22005  004FCA  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 22006  004FCC  0E00               	movlw	0
 22007  004FCE  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 22008                           
 22009                           ; BSR set to: 3
 22010  004FD0  0012               	return		;funcret
 22011  004FD2                     __end_of_UartSetConfig:
 22012                           	opt stack 0
 22013                           tosu	equ	0xFFF
 22014                           tosh	equ	0xFFE
 22015                           tosl	equ	0xFFD
 22016                           pclath	equ	0xFFA
 22017                           tblptru	equ	0xFF8
 22018                           tblptrh	equ	0xFF7
 22019                           tblptrl	equ	0xFF6
 22020                           tablat	equ	0xFF5
 22021                           prodh	equ	0xFF4
 22022                           prodl	equ	0xFF3
 22023                           intcon	equ	0xFF2
 22024                           intcon2	equ	0xFF1
 22025                           intcon3	equ	0xFF0
 22026                           indf0	equ	0xFEF
 22027                           postinc0	equ	0xFEE
 22028                           plusw0	equ	0xFEB
 22029                           fsr0h	equ	0xFEA
 22030                           fsr0l	equ	0xFE9
 22031                           wreg	equ	0xFE8
 22032                           indf1	equ	0xFE7
 22033                           postinc1	equ	0xFE6
 22034                           postdec1	equ	0xFE5
 22035                           plusw1	equ	0xFE3
 22036                           fsr1h	equ	0xFE2
 22037                           fsr1l	equ	0xFE1
 22038                           indf2	equ	0xFDF
 22039                           postinc2	equ	0xFDE
 22040                           postdec2	equ	0xFDD
 22041                           plusw2	equ	0xFDB
 22042                           fsr2h	equ	0xFDA
 22043                           fsr2l	equ	0xFD9
 22044                           status	equ	0xFD8
 22045                           
 22046 ;; *************** function _TurnOnModem *****************
 22047 ;; Defined at:
 22048 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22049 ;; Parameters:    Size  Location     Type
 22050 ;;		None
 22051 ;; Auto vars:     Size  Location     Type
 22052 ;;		None
 22053 ;; Return value:  Size  Location     Type
 22054 ;;                  1    wreg      void 
 22055 ;; Registers used:
 22056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22057 ;; Tracked objects:
 22058 ;;		On entry : 0/0
 22059 ;;		On exit  : 0/0
 22060 ;;		Unchanged: 0/0
 22061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22066 ;;Total ram usage:        0 bytes
 22067 ;; Hardware stack levels used:    1
 22068 ;; Hardware stack levels required when called:   12
 22069 ;; This function calls:
 22070 ;;		_GenerateEvt
 22071 ;; This function is called by:
 22072 ;;		_Mdm_MainTask
 22073 ;; This function uses a non-reentrant model
 22074 ;;
 22075                           
 22076                           	psect	text104
 22077  005528                     __ptext104:
 22078                           	opt stack 0
 22079  005528                     _TurnOnModem:
 22080                           	opt stack 15
 22081                           
 22082                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22083                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 22084                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 22085                           
 22086                           ; BSR set to: 3
 22087                           ;incstack = 0
 22088  005528  D019               	goto	l1003
 22089  00552A                     
 22090                           ;mdm_gsm_gprs.c: 380: Counter++;
 22091  00552A  0102               	movlb	2	; () banked
 22092  00552C  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22093  00552E  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22094                           
 22095                           ; BSR set to: 2
 22096                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22097  005530  0EB8               	movlw	184
 22098  005532  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 22099  005534  0E0B               	movlw	11
 22100  005536  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22101  005538  A0D8               	btfss	status,0,c
 22102  00553A  0012               	return	
 22103                           
 22104                           ; BSR set to: 2
 22105                           ;mdm_gsm_gprs.c: 383: {
 22106                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 22107  00553C  0E01               	movlw	1
 22108  00553E  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22109                           
 22110                           ; BSR set to: 2
 22111                           ;mdm_gsm_gprs.c: 386: }
 22112                           ;mdm_gsm_gprs.c: 387: break;
 22113  005540  0012               	return	
 22114  005542                     
 22115                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 22116                           
 22117                           ; BSR set to: 2
 22118  005542  0EDE               	movlw	low _MdmOnOffPulseRequest
 22119  005544  0100               	movlb	0	; () banked
 22120  005546  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22121  005548  0E00               	movlw	high _MdmOnOffPulseRequest
 22122  00554A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22123  00554C  EC47  F02F         	call	_GenerateEvt	;wreg free
 22124                           
 22125                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 22126  005550  0E01               	movlw	1
 22127  005552  0100               	movlb	0	; () banked
 22128  005554  6FCF               	movwf	_MdmStatus& (0+255),b
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 22132  005556  0E02               	movlw	2
 22133  005558  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22134                           
 22135                           ; BSR set to: 0
 22136                           ;mdm_gsm_gprs.c: 403: }
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;mdm_gsm_gprs.c: 402: break;
 22140                           
 22141                           ;mdm_gsm_gprs.c: 401: default:
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;mdm_gsm_gprs.c: 399: break;
 22145                           
 22146                           ;mdm_gsm_gprs.c: 398: case Stop:
 22147                           
 22148                           ;mdm_gsm_gprs.c: 396: break;
 22149  00555A  0012               	return	
 22150  00555C                     l1003:
 22151                           
 22152                           ; BSR set to: 0
 22153  00555C  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 22154                           
 22155                           ; Switch size 1, requested type "space"
 22156                           ; Number of cases is 3, Range of values is 0 to 2
 22157                           ; switch strategies available:
 22158                           ; Name         Instructions Cycles
 22159                           ; simple_byte           10     6 (average)
 22160                           ;	Chosen strategy is simple_byte
 22161  00555E  0A00               	xorlw	0	; case 0
 22162  005560  B4D8               	btfsc	status,2,c
 22163  005562  D7E3               	goto	l1004
 22164  005564  0A01               	xorlw	1	; case 1
 22165  005566  B4D8               	btfsc	status,2,c
 22166  005568  D7EC               	goto	l1007
 22167  00556A  0A03               	xorlw	3	; case 2
 22168  00556C  0012               	return	
 22169  00556E                     __end_of_TurnOnModem:
 22170                           	opt stack 0
 22171                           tosu	equ	0xFFF
 22172                           tosh	equ	0xFFE
 22173                           tosl	equ	0xFFD
 22174                           pclath	equ	0xFFA
 22175                           tblptru	equ	0xFF8
 22176                           tblptrh	equ	0xFF7
 22177                           tblptrl	equ	0xFF6
 22178                           tablat	equ	0xFF5
 22179                           prodh	equ	0xFF4
 22180                           prodl	equ	0xFF3
 22181                           intcon	equ	0xFF2
 22182                           intcon2	equ	0xFF1
 22183                           intcon3	equ	0xFF0
 22184                           indf0	equ	0xFEF
 22185                           postinc0	equ	0xFEE
 22186                           plusw0	equ	0xFEB
 22187                           fsr0h	equ	0xFEA
 22188                           fsr0l	equ	0xFE9
 22189                           wreg	equ	0xFE8
 22190                           indf1	equ	0xFE7
 22191                           postinc1	equ	0xFE6
 22192                           postdec1	equ	0xFE5
 22193                           plusw1	equ	0xFE3
 22194                           fsr1h	equ	0xFE2
 22195                           fsr1l	equ	0xFE1
 22196                           indf2	equ	0xFDF
 22197                           postinc2	equ	0xFDE
 22198                           postdec2	equ	0xFDD
 22199                           plusw2	equ	0xFDB
 22200                           fsr2h	equ	0xFDA
 22201                           fsr2l	equ	0xFD9
 22202                           status	equ	0xFD8
 22203                           
 22204 ;; *************** function _SendSmsSm *****************
 22205 ;; Defined at:
 22206 ;;		line 636 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22207 ;; Parameters:    Size  Location     Type
 22208 ;;		None
 22209 ;; Auto vars:     Size  Location     Type
 22210 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22211 ;; Return value:  Size  Location     Type
 22212 ;;                  1    wreg      void 
 22213 ;; Registers used:
 22214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22215 ;; Tracked objects:
 22216 ;;		On entry : 0/0
 22217 ;;		On exit  : 0/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22221 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22223 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22224 ;;Total ram usage:       52 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; Hardware stack levels required when called:   14
 22227 ;; This function calls:
 22228 ;;		_OsTmr_GetTimerStatus
 22229 ;;		_OsTmr_StartTimer
 22230 ;;		_ReceiveEvt
 22231 ;;		_StringCopy
 22232 ;;		_Uart_WriteStringLen
 22233 ;; This function is called by:
 22234 ;;		_Mdm_MainTask
 22235 ;; This function uses a non-reentrant model
 22236 ;;
 22237                           
 22238                           	psect	text105
 22239  0019F2                     __ptext105:
 22240                           	opt stack 0
 22241  0019F2                     _SendSmsSm:
 22242                           	opt stack 13
 22243                           
 22244                           ;mdm_gsm_gprs.c: 638: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22245                           ;mdm_gsm_gprs.c: 639: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22246                           ;mdm_gsm_gprs.c: 640: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22247                           ;mdm_gsm_gprs.c: 641: UINT8 UartMessage[50];
 22248                           ;mdm_gsm_gprs.c: 644: if (MdmStatus == ModemConfigured)
 22249                           
 22250                           ;incstack = 0
 22251  0019F2  0E03               	movlw	3
 22252  0019F4  0100               	movlb	0	; () banked
 22253  0019F6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22254  0019F8  A4D8               	btfss	status,2,c
 22255  0019FA  0012               	return	
 22256  0019FC  D0C1               	goto	l1081
 22257  0019FE                     
 22258                           ;mdm_gsm_gprs.c: 650: if (ReceiveEvt(&SendSmsEvent))
 22259                           
 22260                           ; BSR set to: 0
 22261  0019FE  0EDD               	movlw	low _SendSmsEvent
 22262  001A00  0100               	movlb	0	; () banked
 22263  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22264  001A04  0E00               	movlw	high _SendSmsEvent
 22265  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22266  001A08  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 22267  001A0C  0900               	iorlw	0
 22268  001A0E  B4D8               	btfsc	status,2,c
 22269  001A10  0012               	return	
 22270                           
 22271                           ;mdm_gsm_gprs.c: 651: {
 22272                           ;mdm_gsm_gprs.c: 653: SendSms_State = SendSms_CmgsCmd;
 22273  001A12  0E01               	movlw	1
 22274  001A14  0101               	movlb	1	; () banked
 22275  001A16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22276                           
 22277                           ; BSR set to: 1
 22278                           ;mdm_gsm_gprs.c: 654: }
 22279                           ;mdm_gsm_gprs.c: 655: break;
 22280  001A18  0012               	return	
 22281  001A1A                     
 22282                           ; BSR set to: 1
 22283                           ;mdm_gsm_gprs.c: 659: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22284                           
 22285                           ; BSR set to: 1
 22286  001A1A  0ECD               	movlw	low STR_5
 22287  001A1C  0100               	movlb	0	; () banked
 22288  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22289  001A20  0EFF               	movlw	high STR_5
 22290  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22291  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22292  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22293  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22294  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22295  001A2C  0E00               	movlw	0
 22296  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22297  001A30  0E09               	movlw	9
 22298  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22299  001A34  EC00  F027         	call	_StringCopy	;wreg free
 22300                           
 22301                           ;mdm_gsm_gprs.c: 661: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22302  001A38  0EC6               	movlw	low _PhoneNumber
 22303  001A3A  0100               	movlb	0	; () banked
 22304  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22305  001A3E  0E04               	movlw	high _PhoneNumber
 22306  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22307  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22308  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22309  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22310  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22311  001A4A  C0D0  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22312  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22313  001A50  EC00  F027         	call	_StringCopy	;wreg free
 22314                           
 22315                           ;mdm_gsm_gprs.c: 663: UartMessage[PhoneNumbLen + 9] = '"';
 22316  001A54  0100               	movlb	0	; () banked
 22317  001A56  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22318  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22319  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22320  001A5C  0E09               	movlw	9
 22321  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22322  001A60  0E00               	movlw	0
 22323  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22324  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22325  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22326  001A68  6ED9               	movwf	fsr2l,c
 22327  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22328  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22329  001A6E  6EDA               	movwf	fsr2h,c
 22330  001A70  0E22               	movlw	34
 22331  001A72  6EDF               	movwf	indf2,c
 22332                           
 22333                           ; BSR set to: 0
 22334                           ;mdm_gsm_gprs.c: 664: UartMessage[PhoneNumbLen + 10] = '\r';
 22335  001A74  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22336  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22337  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22338  001A7A  0E0A               	movlw	10
 22339  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22340  001A7E  0E00               	movlw	0
 22341  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22342  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22343  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22344  001A86  6ED9               	movwf	fsr2l,c
 22345  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22346  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22347  001A8C  6EDA               	movwf	fsr2h,c
 22348  001A8E  0E0D               	movlw	13
 22349  001A90  6EDF               	movwf	indf2,c
 22350                           
 22351                           ; BSR set to: 0
 22352                           ;mdm_gsm_gprs.c: 666: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22353  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22354  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22355  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22356  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22357  001A9A  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22358  001A9C  0F0B               	addlw	11
 22359  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22360  001AA0  0E01               	movlw	1
 22361  001AA2  EC81  F02B         	call	_Uart_WriteStringLen
 22362                           
 22363                           ;mdm_gsm_gprs.c: 668: OsTmr_StartTimer(&SwTimer,2500);
 22364  001AA6  0EE2               	movlw	low SendSmsSm@SwTimer
 22365  001AA8  0100               	movlb	0	; () banked
 22366  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22367  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22368  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22369  001AB0  0EC4               	movlw	196
 22370  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22371  001AB4  0E09               	movlw	9
 22372  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22373  001AB8  0E00               	movlw	0
 22374  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22375  001ABC  0E00               	movlw	0
 22376  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22377  001AC0  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 22378                           
 22379                           ;mdm_gsm_gprs.c: 669: SendSms_State = SendSms_Delay;
 22380  001AC4  0E05               	movlw	5
 22381  001AC6  0101               	movlb	1	; () banked
 22382  001AC8  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22383                           
 22384                           ; BSR set to: 1
 22385                           ;mdm_gsm_gprs.c: 670: SendSms_NextState = SendSms_EnterCmd;
 22386  001ACA  0E02               	movlw	2
 22387  001ACC  6FF3               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22388                           
 22389                           ;mdm_gsm_gprs.c: 671: break;
 22390  001ACE  0012               	return	
 22391  001AD0                     
 22392                           ; BSR set to: 1
 22393                           ;mdm_gsm_gprs.c: 675: UartMessage[0] = '\n';
 22394                           
 22395                           ; BSR set to: 1
 22396  001AD0  0E0A               	movlw	10
 22397  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22398                           
 22399                           ;mdm_gsm_gprs.c: 676: UartMessage[1] = '\r';
 22400  001AD4  0E0D               	movlw	13
 22401  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;mdm_gsm_gprs.c: 678: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22405  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22406  001ADA  0100               	movlb	0	; () banked
 22407  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22408  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22409  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22410  001AE2  0E02               	movlw	2
 22411  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22412  001AE6  0E01               	movlw	1
 22413  001AE8  EC81  F02B         	call	_Uart_WriteStringLen
 22414                           
 22415                           ;mdm_gsm_gprs.c: 680: SendSms_State = SendSms_WaitConf;
 22416  001AEC  0E03               	movlw	3
 22417  001AEE  0101               	movlb	1	; () banked
 22418  001AF0  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22419                           
 22420                           ;mdm_gsm_gprs.c: 681: break;
 22421  001AF2  0012               	return	
 22422  001AF4                     
 22423                           ; BSR set to: 1
 22424                           ;mdm_gsm_gprs.c: 685: if (ReceiveEvt(&NewStringReceived))
 22425                           
 22426                           ; BSR set to: 1
 22427  001AF4  0E3C               	movlw	low _NewStringReceived
 22428  001AF6  0100               	movlb	0	; () banked
 22429  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22430  001AFA  0E00               	movlw	high _NewStringReceived
 22431  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22432  001AFE  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 22433  001B02  0900               	iorlw	0
 22434  001B04  B4D8               	btfsc	status,2,c
 22435  001B06  0012               	return	
 22436                           
 22437                           ;mdm_gsm_gprs.c: 686: {
 22438                           ;mdm_gsm_gprs.c: 688: if (RxBuffer[0] == '>')
 22439  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22440  001B0C  0A3E               	xorlw	62
 22441  001B0E  A4D8               	btfss	status,2,c
 22442  001B10  0012               	return	
 22443                           
 22444                           ;mdm_gsm_gprs.c: 689: {
 22445                           ;mdm_gsm_gprs.c: 691: SendSms_State = SendSms_SendSmsText;
 22446  001B12  0E04               	movlw	4
 22447  001B14  0101               	movlb	1	; () banked
 22448  001B16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22449                           
 22450                           ; BSR set to: 1
 22451                           ;mdm_gsm_gprs.c: 692: }
 22452                           ;mdm_gsm_gprs.c: 693: }
 22453                           ;mdm_gsm_gprs.c: 694: break;
 22454                           
 22455                           ; BSR set to: 1
 22456  001B18  0012               	return	
 22457  001B1A                     
 22458                           ; BSR set to: 1
 22459                           ;mdm_gsm_gprs.c: 698: StringCopy(MessageText,UartMessage,SmsLen);
 22460                           
 22461                           ; BSR set to: 1
 22462  001B1A  0EC4               	movlw	low _MessageText
 22463  001B1C  0100               	movlb	0	; () banked
 22464  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22465  001B20  0E07               	movlw	high _MessageText
 22466  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22467  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22468  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22469  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22470  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22471  001B2C  C0D1  F081         	movff	_SmsLen,StringCopy@Len
 22472  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22473  001B32  EC00  F027         	call	_StringCopy	;wreg free
 22474                           
 22475                           ;mdm_gsm_gprs.c: 700: UartMessage[SmsLen] = 0x1A;
 22476  001B36  0100               	movlb	0	; () banked
 22477  001B38  51D1               	movf	_SmsLen& (0+255),w,b
 22478  001B3A  0D01               	mullw	1
 22479  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22480  001B3E  24F3               	addwf	prodl,w,c
 22481  001B40  6ED9               	movwf	fsr2l,c
 22482  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22483  001B44  20F4               	addwfc	prodh,w,c
 22484  001B46  6EDA               	movwf	fsr2h,c
 22485  001B48  0E1A               	movlw	26
 22486  001B4A  6EDF               	movwf	indf2,c
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;mdm_gsm_gprs.c: 702: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22490  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22491  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22492  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22493  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22494  001B54  29D1               	incf	_SmsLen& (0+255),w,b
 22495  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22496  001B58  0E01               	movlw	1
 22497  001B5A  EC81  F02B         	call	_Uart_WriteStringLen
 22498                           
 22499                           ;mdm_gsm_gprs.c: 704: SendSms_State = SendSms_WaitEvt;
 22500  001B5E  0E00               	movlw	0
 22501  001B60  0101               	movlb	1	; () banked
 22502  001B62  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22503                           
 22504                           ;mdm_gsm_gprs.c: 705: break;
 22505  001B64  0012               	return	
 22506  001B66                     
 22507                           ; BSR set to: 1
 22508                           ;mdm_gsm_gprs.c: 709: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22509                           
 22510                           ; BSR set to: 1
 22511  001B66  0EE2               	movlw	low SendSmsSm@SwTimer
 22512  001B68  0100               	movlb	0	; () banked
 22513  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22514  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 22515  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22516  001B70  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 22517  001B74  06E8               	decf	wreg,f,c
 22518  001B76  A4D8               	btfss	status,2,c
 22519  001B78  0012               	return	
 22520                           
 22521                           ;mdm_gsm_gprs.c: 710: {
 22522                           ;mdm_gsm_gprs.c: 712: SendSms_State = SendSms_NextState;
 22523  001B7A  C1F3  F1F4         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22524                           
 22525                           ;mdm_gsm_gprs.c: 718: }
 22526                           
 22527                           ;mdm_gsm_gprs.c: 717: break;
 22528                           
 22529                           ;mdm_gsm_gprs.c: 716: default:
 22530                           
 22531                           ;mdm_gsm_gprs.c: 713: }
 22532                           ;mdm_gsm_gprs.c: 714: break;
 22533  001B7E  0012               	return	
 22534  001B80                     l1081:
 22535  001B80  0101               	movlb	1	; () banked
 22536  001B82  51F4               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22537                           
 22538                           ; Switch size 1, requested type "space"
 22539                           ; Number of cases is 6, Range of values is 0 to 5
 22540                           ; switch strategies available:
 22541                           ; Name         Instructions Cycles
 22542                           ; simple_byte           19    10 (average)
 22543                           ;	Chosen strategy is simple_byte
 22544  001B84  0A00               	xorlw	0	; case 0
 22545  001B86  B4D8               	btfsc	status,2,c
 22546  001B88  D73A               	goto	l1082
 22547  001B8A  0A01               	xorlw	1	; case 1
 22548  001B8C  B4D8               	btfsc	status,2,c
 22549  001B8E  D745               	goto	l1085
 22550  001B90  0A03               	xorlw	3	; case 2
 22551  001B92  B4D8               	btfsc	status,2,c
 22552  001B94  D79D               	goto	l1086
 22553  001B96  0A01               	xorlw	1	; case 3
 22554  001B98  B4D8               	btfsc	status,2,c
 22555  001B9A  D7AC               	goto	l1087
 22556  001B9C  0A07               	xorlw	7	; case 4
 22557  001B9E  B4D8               	btfsc	status,2,c
 22558  001BA0  D7BC               	goto	l1090
 22559  001BA2  0A01               	xorlw	1	; case 5
 22560  001BA4  A4D8               	btfss	status,2,c
 22561                           
 22562                           ; BSR set to: 1
 22563  001BA6  0012               	return	
 22564  001BA8  D7DE               	goto	l1091
 22565  001BAA                     __end_of_SendSmsSm:
 22566                           	opt stack 0
 22567                           tosu	equ	0xFFF
 22568                           tosh	equ	0xFFE
 22569                           tosl	equ	0xFFD
 22570                           pclath	equ	0xFFA
 22571                           tblptru	equ	0xFF8
 22572                           tblptrh	equ	0xFF7
 22573                           tblptrl	equ	0xFF6
 22574                           tablat	equ	0xFF5
 22575                           prodh	equ	0xFF4
 22576                           prodl	equ	0xFF3
 22577                           intcon	equ	0xFF2
 22578                           intcon2	equ	0xFF1
 22579                           intcon3	equ	0xFF0
 22580                           indf0	equ	0xFEF
 22581                           postinc0	equ	0xFEE
 22582                           plusw0	equ	0xFEB
 22583                           fsr0h	equ	0xFEA
 22584                           fsr0l	equ	0xFE9
 22585                           wreg	equ	0xFE8
 22586                           indf1	equ	0xFE7
 22587                           postinc1	equ	0xFE6
 22588                           postdec1	equ	0xFE5
 22589                           plusw1	equ	0xFE3
 22590                           fsr1h	equ	0xFE2
 22591                           fsr1l	equ	0xFE1
 22592                           indf2	equ	0xFDF
 22593                           postinc2	equ	0xFDE
 22594                           postdec2	equ	0xFDD
 22595                           plusw2	equ	0xFDB
 22596                           fsr2h	equ	0xFDA
 22597                           fsr2l	equ	0xFD9
 22598                           status	equ	0xFD8
 22599                           
 22600 ;; *************** function _Uart_WriteStringLen *****************
 22601 ;; Defined at:
 22602 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22603 ;; Parameters:    Size  Location     Type
 22604 ;;  Module          1    wreg     unsigned char 
 22605 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 22606 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 22607 ;;  Len             1   34[BANK0 ] unsigned char 
 22608 ;; Auto vars:     Size  Location     Type
 22609 ;;  Module          1   36[BANK0 ] unsigned char 
 22610 ;;  Index           1   35[BANK0 ] unsigned char 
 22611 ;; Return value:  Size  Location     Type
 22612 ;;                  1    wreg      void 
 22613 ;; Registers used:
 22614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22615 ;; Tracked objects:
 22616 ;;		On entry : 0/0
 22617 ;;		On exit  : 0/0
 22618 ;;		Unchanged: 0/0
 22619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22620 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22623 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22624 ;;Total ram usage:        5 bytes
 22625 ;; Hardware stack levels used:    1
 22626 ;; Hardware stack levels required when called:   12
 22627 ;; This function calls:
 22628 ;;		_UartTxBufferStatus
 22629 ;;		_UartWriteByte
 22630 ;; This function is called by:
 22631 ;;		_SendSmsSm
 22632 ;;		_GsmGprsTerminal
 22633 ;; This function uses a non-reentrant model
 22634 ;;
 22635                           
 22636                           	psect	text106
 22637  005702                     __ptext106:
 22638                           	opt stack 0
 22639  005702                     _Uart_WriteStringLen:
 22640                           	opt stack 14
 22641                           
 22642                           ;incstack = 0
 22643                           ;Uart_WriteStringLen@Module stored from wreg
 22644  005702  0100               	movlb	0	; () banked
 22645  005704  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 22646                           
 22647                           ;uart_drv.c: 544: UINT8 Index;
 22648                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 22649  005706  0E00               	movlw	0
 22650  005708  0100               	movlb	0	; () banked
 22651  00570A  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 22652  00570C  D015               	goto	l715
 22653  00570E                     
 22654                           ; BSR set to: 0
 22655                           ;uart_drv.c: 547: {
 22656                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 22657                           
 22658                           ; BSR set to: 0
 22659  00570E  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 22660  005712  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 22661  005716  50DF               	movf	indf2,w,c
 22662  005718  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22663  00571A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22664  00571C  ECCB  F02E         	call	_UartWriteByte
 22665                           
 22666                           ;uart_drv.c: 551: StringToWrite++;
 22667  005720  0100               	movlb	0	; () banked
 22668  005722  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 22669  005724  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 22670  005726                     
 22671                           ; BSR set to: 0
 22672                           
 22673                           ; BSR set to: 0
 22674  005726  0100               	movlb	0	; () banked
 22675  005728  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22676  00572A  ECB6  F029         	call	_UartTxBufferStatus
 22677  00572E  06E8               	decf	wreg,f,c
 22678  005730  B4D8               	btfsc	status,2,c
 22679  005732  D7F9               	goto	l718
 22680  005734  0100               	movlb	0	; () banked
 22681  005736  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 22682  005738                     l715:
 22683                           
 22684                           ; BSR set to: 0
 22685                           
 22686                           ; BSR set to: 0
 22687  005738  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 22688  00573A  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 22689  00573C  B0D8               	btfsc	status,0,c
 22690  00573E  0012               	return	
 22691  005740  D7E6               	goto	l716
 22692  005742                     __end_of_Uart_WriteStringLen:
 22693                           	opt stack 0
 22694                           tosu	equ	0xFFF
 22695                           tosh	equ	0xFFE
 22696                           tosl	equ	0xFFD
 22697                           pclath	equ	0xFFA
 22698                           tblptru	equ	0xFF8
 22699                           tblptrh	equ	0xFF7
 22700                           tblptrl	equ	0xFF6
 22701                           tablat	equ	0xFF5
 22702                           prodh	equ	0xFF4
 22703                           prodl	equ	0xFF3
 22704                           intcon	equ	0xFF2
 22705                           intcon2	equ	0xFF1
 22706                           intcon3	equ	0xFF0
 22707                           indf0	equ	0xFEF
 22708                           postinc0	equ	0xFEE
 22709                           plusw0	equ	0xFEB
 22710                           fsr0h	equ	0xFEA
 22711                           fsr0l	equ	0xFE9
 22712                           wreg	equ	0xFE8
 22713                           indf1	equ	0xFE7
 22714                           postinc1	equ	0xFE6
 22715                           postdec1	equ	0xFE5
 22716                           plusw1	equ	0xFE3
 22717                           fsr1h	equ	0xFE2
 22718                           fsr1l	equ	0xFE1
 22719                           indf2	equ	0xFDF
 22720                           postinc2	equ	0xFDE
 22721                           postdec2	equ	0xFDD
 22722                           plusw2	equ	0xFDB
 22723                           fsr2h	equ	0xFDA
 22724                           fsr2l	equ	0xFD9
 22725                           status	equ	0xFD8
 22726                           
 22727 ;; *************** function _ModemEvtParser *****************
 22728 ;; Defined at:
 22729 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22730 ;; Parameters:    Size  Location     Type
 22731 ;;		None
 22732 ;; Auto vars:     Size  Location     Type
 22733 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 22734 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 22735 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 22736 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 22737 ;;  Match           1   59[BANK0 ] unsigned char 
 22738 ;; Return value:  Size  Location     Type
 22739 ;;                  1    wreg      void 
 22740 ;; Registers used:
 22741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22742 ;; Tracked objects:
 22743 ;;		On entry : 0/0
 22744 ;;		On exit  : 0/0
 22745 ;;		Unchanged: 0/0
 22746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22748 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22750 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22751 ;;Total ram usage:       21 bytes
 22752 ;; Hardware stack levels used:    1
 22753 ;; Hardware stack levels required when called:   12
 22754 ;; This function calls:
 22755 ;;		_GenerateEvt
 22756 ;;		_ReceiveEvt
 22757 ;;		_StringCompare
 22758 ;;		_Uart_ClearRxBuffer
 22759 ;; This function is called by:
 22760 ;;		_Mdm_MainTask
 22761 ;; This function uses a non-reentrant model
 22762 ;;
 22763                           
 22764                           	psect	text107
 22765  002C74                     __ptext107:
 22766                           	opt stack 0
 22767  002C74                     _ModemEvtParser:
 22768                           	opt stack 15
 22769                           
 22770                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 22771                           
 22772                           ; BSR set to: 0
 22773                           ;incstack = 0
 22774  002C74  C3C0  F097         	movff	ModemEvtParser@F9086,ModemEvtParser@RingString
 22775  002C78  C3C1  F098         	movff	ModemEvtParser@F9086+1,ModemEvtParser@RingString+1
 22776  002C7C  C3C2  F099         	movff	ModemEvtParser@F9086+2,ModemEvtParser@RingString+2
 22777  002C80  C3C3  F09A         	movff	ModemEvtParser@F9086+3,ModemEvtParser@RingString+3
 22778                           
 22779                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 22780  002C84  EE23  F0BB         	lfsr	2,ModemEvtParser@F9088
 22781  002C88  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 22782  002C8C  0E04               	movlw	4
 22783  002C8E                     u12281:
 22784  002C8E  CFDB FFE3          	movff	plusw2,plusw1
 22785  002C92  06E8               	decf	wreg,f,c
 22786  002C94  E2FC               	bc	u12281
 22787                           
 22788                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 22789  002C96  EE24  F0EF         	lfsr	2,ModemEvtParser@F9090
 22790  002C9A  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 22791  002C9E  0E09               	movlw	9
 22792  002CA0                     u12291:
 22793  002CA0  CFDB FFE3          	movff	plusw2,plusw1
 22794  002CA4  06E8               	decf	wreg,f,c
 22795  002CA6  E2FC               	bc	u12291
 22796                           
 22797                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 22798  002CA8  0E00               	movlw	0
 22799  002CAA  0100               	movlb	0	; () banked
 22800  002CAC  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22801                           
 22802                           ; BSR set to: 0
 22803                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 22804  002CAE  0E00               	movlw	0
 22805  002CB0  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22806                           
 22807                           ; BSR set to: 0
 22808                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 22809  002CB2  0E3B               	movlw	low _NewMdmEvtParserRequest
 22810  002CB4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22811  002CB6  0E00               	movlw	high _NewMdmEvtParserRequest
 22812  002CB8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22813  002CBA  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 22814  002CBE  0900               	iorlw	0
 22815  002CC0  B4D8               	btfsc	status,2,c
 22816  002CC2  0012               	return	
 22817                           
 22818                           ;mdm_gsm_gprs.c: 504: {
 22819                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 22820  002CC4  0E00               	movlw	0
 22821  002CC6  0100               	movlb	0	; () banked
 22822  002CC8  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22823  002CCA                     l13149:
 22824                           
 22825                           ; BSR set to: 0
 22826  002CCA  0E02               	movlw	2
 22827  002CCC  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 22828  002CCE  D04C               	goto	l1044
 22829  002CD0  D058               	goto	u12350
 22830  002CD2                     
 22831                           ; BSR set to: 0
 22832                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 22833                           
 22834                           ; BSR set to: 0
 22835  002CD2  0E97               	movlw	low ModemEvtParser@RingString
 22836  002CD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22837  002CD6  0E00               	movlw	high ModemEvtParser@RingString
 22838  002CD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22839  002CDA  0E58               	movlw	low _RxBuffer
 22840  002CDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22841  002CDE  0E0C               	movlw	high _RxBuffer
 22842  002CE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22843  002CE2  0E00               	movlw	0
 22844  002CE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22845  002CE6  0E04               	movlw	4
 22846  002CE8  6F81               	movwf	StringCompare@Len& (0+255),b
 22847  002CEA  EC15  F029         	call	_StringCompare	;wreg free
 22848  002CEE  0900               	iorlw	0
 22849  002CF0  B4D8               	btfsc	status,2,c
 22850  002CF2  D044               	goto	l1047
 22851                           
 22852                           ;mdm_gsm_gprs.c: 512: {
 22853                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 22854  002CF4  0EDC               	movlw	low _RingEvent
 22855  002CF6  0100               	movlb	0	; () banked
 22856  002CF8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22857  002CFA  0E00               	movlw	high _RingEvent
 22858  002CFC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22859  002CFE  EC47  F02F         	call	_GenerateEvt	;wreg free
 22860  002D02  D018               	goto	l13163
 22861  002D04                     
 22862                           ; BSR set to: 0
 22863                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 22864                           
 22865                           ; BSR set to: 0
 22866  002D04  0E92               	movlw	low ModemEvtParser@SmsString
 22867  002D06  6F7D               	movwf	StringCompare@String1& (0+255),b
 22868  002D08  0E00               	movlw	high ModemEvtParser@SmsString
 22869  002D0A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22870  002D0C  0E58               	movlw	low _RxBuffer
 22871  002D0E  6F7F               	movwf	StringCompare@String2& (0+255),b
 22872  002D10  0E0C               	movlw	high _RxBuffer
 22873  002D12  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22874  002D14  0E00               	movlw	0
 22875  002D16  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22876  002D18  0E05               	movlw	5
 22877  002D1A  6F81               	movwf	StringCompare@Len& (0+255),b
 22878  002D1C  EC15  F029         	call	_StringCompare	;wreg free
 22879  002D20  0900               	iorlw	0
 22880  002D22  B4D8               	btfsc	status,2,c
 22881  002D24  D02B               	goto	l1047
 22882                           
 22883                           ;mdm_gsm_gprs.c: 523: {
 22884                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 22885  002D26  0EDB               	movlw	low _SmsEvent
 22886  002D28  0100               	movlb	0	; () banked
 22887  002D2A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22888  002D2C  0E00               	movlw	high _SmsEvent
 22889  002D2E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22890  002D30  EC47  F02F         	call	_GenerateEvt	;wreg free
 22891  002D34                     l13163:
 22892                           
 22893                           ;mdm_gsm_gprs.c: 527: Match = 1;
 22894  002D34  0E01               	movlw	1
 22895  002D36  0100               	movlb	0	; () banked
 22896  002D38  D015               	goto	L27
 22897  002D3A                     
 22898                           ; BSR set to: 0
 22899                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 22900                           
 22901                           ; BSR set to: 0
 22902  002D3A  0E88               	movlw	low ModemEvtParser@CallReadyString
 22903  002D3C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22904  002D3E  0E00               	movlw	high ModemEvtParser@CallReadyString
 22905  002D40  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22906  002D42  0E58               	movlw	low _RxBuffer
 22907  002D44  6F7F               	movwf	StringCompare@String2& (0+255),b
 22908  002D46  0E0C               	movlw	high _RxBuffer
 22909  002D48  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22910  002D4A  0E00               	movlw	0
 22911  002D4C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22912  002D4E  0E0A               	movlw	10
 22913  002D50  6F81               	movwf	StringCompare@Len& (0+255),b
 22914  002D52  EC15  F029         	call	_StringCompare	;wreg free
 22915  002D56  0900               	iorlw	0
 22916  002D58  B4D8               	btfsc	status,2,c
 22917  002D5A  D010               	goto	l1047
 22918                           
 22919                           ;mdm_gsm_gprs.c: 534: {
 22920                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 22921  002D5C  0E02               	movlw	2
 22922  002D5E  0100               	movlb	0	; () banked
 22923  002D60  6FCF               	movwf	_MdmStatus& (0+255),b
 22924                           
 22925                           ;mdm_gsm_gprs.c: 538: Match = 1;
 22926  002D62  0E01               	movlw	1
 22927  002D64                     L27:
 22928  002D64  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22929                           
 22930                           ; BSR set to: 0
 22931                           ;mdm_gsm_gprs.c: 544: }
 22932                           
 22933                           ; BSR set to: 0
 22934                           ;mdm_gsm_gprs.c: 543: break;
 22935                           
 22936                           ;mdm_gsm_gprs.c: 542: default:
 22937                           
 22938                           ; BSR set to: 0
 22939                           ;mdm_gsm_gprs.c: 539: }
 22940                           ;mdm_gsm_gprs.c: 540: break;
 22941  002D66  D00A               	goto	l1047
 22942  002D68                     l1044:
 22943                           
 22944                           ; BSR set to: 0
 22945                           
 22946                           ; BSR set to: 0
 22947  002D68  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 22948                           
 22949                           ; Switch size 1, requested type "space"
 22950                           ; Number of cases is 3, Range of values is 0 to 2
 22951                           ; switch strategies available:
 22952                           ; Name         Instructions Cycles
 22953                           ; simple_byte           10     6 (average)
 22954                           ;	Chosen strategy is simple_byte
 22955  002D6A  0A00               	xorlw	0	; case 0
 22956  002D6C  B4D8               	btfsc	status,2,c
 22957  002D6E  D7B1               	goto	l1045
 22958  002D70  0A01               	xorlw	1	; case 1
 22959  002D72  B4D8               	btfsc	status,2,c
 22960  002D74  D7C7               	goto	l1048
 22961  002D76  0A03               	xorlw	3	; case 2
 22962  002D78  B4D8               	btfsc	status,2,c
 22963  002D7A  D7DF               	goto	l1050
 22964  002D7C                     l1047:
 22965                           
 22966                           ; BSR set to: 0
 22967  002D7C  0100               	movlb	0	; () banked
 22968  002D7E  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 22969  002D80  D7A4               	goto	l13149
 22970  002D82                     u12350:
 22971                           
 22972                           ; BSR set to: 0
 22973                           ;mdm_gsm_gprs.c: 545: }
 22974                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 22975                           
 22976                           ; BSR set to: 0
 22977  002D82  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 22978  002D84  A4D8               	btfss	status,2,c
 22979  002D86  0012               	return	
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;mdm_gsm_gprs.c: 549: {
 22983                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 22984  002D88  ECCC  F02C         	call	_Uart_ClearRxBuffer	;wreg free
 22985  002D8C  0012               	return	
 22986  002D8E                     __end_of_ModemEvtParser:
 22987                           	opt stack 0
 22988                           tosu	equ	0xFFF
 22989                           tosh	equ	0xFFE
 22990                           tosl	equ	0xFFD
 22991                           pclath	equ	0xFFA
 22992                           tblptru	equ	0xFF8
 22993                           tblptrh	equ	0xFF7
 22994                           tblptrl	equ	0xFF6
 22995                           tablat	equ	0xFF5
 22996                           prodh	equ	0xFF4
 22997                           prodl	equ	0xFF3
 22998                           intcon	equ	0xFF2
 22999                           intcon2	equ	0xFF1
 23000                           intcon3	equ	0xFF0
 23001                           indf0	equ	0xFEF
 23002                           postinc0	equ	0xFEE
 23003                           plusw0	equ	0xFEB
 23004                           fsr0h	equ	0xFEA
 23005                           fsr0l	equ	0xFE9
 23006                           wreg	equ	0xFE8
 23007                           indf1	equ	0xFE7
 23008                           postinc1	equ	0xFE6
 23009                           postdec1	equ	0xFE5
 23010                           plusw1	equ	0xFE3
 23011                           fsr1h	equ	0xFE2
 23012                           fsr1l	equ	0xFE1
 23013                           indf2	equ	0xFDF
 23014                           postinc2	equ	0xFDE
 23015                           postdec2	equ	0xFDD
 23016                           plusw2	equ	0xFDB
 23017                           fsr2h	equ	0xFDA
 23018                           fsr2l	equ	0xFD9
 23019                           status	equ	0xFD8
 23020                           
 23021 ;; *************** function _Uart_ClearRxBuffer *****************
 23022 ;; Defined at:
 23023 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;		None
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  Index           2   29[BANK0 ] unsigned short 
 23028 ;; Return value:  Size  Location     Type
 23029 ;;                  1    wreg      void 
 23030 ;; Registers used:
 23031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23032 ;; Tracked objects:
 23033 ;;		On entry : 0/0
 23034 ;;		On exit  : 0/0
 23035 ;;		Unchanged: 0/0
 23036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23041 ;;Total ram usage:        2 bytes
 23042 ;; Hardware stack levels used:    1
 23043 ;; Hardware stack levels required when called:   11
 23044 ;; This function calls:
 23045 ;;		Nothing
 23046 ;; This function is called by:
 23047 ;;		_ModemEvtParser
 23048 ;; This function uses a non-reentrant model
 23049 ;;
 23050                           
 23051                           	psect	text108
 23052  005998                     __ptext108:
 23053                           	opt stack 0
 23054  005998                     _Uart_ClearRxBuffer:
 23055                           	opt stack 15
 23056                           
 23057                           ;uart_drv.c: 567: UINT16 Index = 0;
 23058                           
 23059                           ;incstack = 0
 23060  005998  0E00               	movlw	0
 23061  00599A  0100               	movlb	0	; () banked
 23062  00599C  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23063  00599E  0E00               	movlw	0
 23064  0059A0  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23065                           
 23066                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23067  0059A2  0E00               	movlw	0
 23068  0059A4  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23069  0059A6  0E00               	movlw	0
 23070  0059A8  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23071  0059AA                     l9135:
 23072                           
 23073                           ; BSR set to: 0
 23074  0059AA  0E90               	movlw	144
 23075  0059AC  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23076  0059AE  0E01               	movlw	1
 23077  0059B0  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23078  0059B2  B0D8               	btfsc	status,0,c
 23079  0059B4  0012               	return	
 23080                           
 23081                           ; BSR set to: 0
 23082                           ;uart_drv.c: 571: {
 23083                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23084                           
 23085                           ; BSR set to: 0
 23086                           
 23087                           ; BSR set to: 0
 23088  0059B6  0E58               	movlw	low _RxBuffer
 23089  0059B8  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23090  0059BA  6ED9               	movwf	fsr2l,c
 23091  0059BC  0E0C               	movlw	high _RxBuffer
 23092  0059BE  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23093  0059C0  6EDA               	movwf	fsr2h,c
 23094  0059C2  0E00               	movlw	0
 23095  0059C4  6EDF               	movwf	indf2,c
 23096                           
 23097                           ; BSR set to: 0
 23098  0059C6  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23099  0059C8  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23100  0059CA  D7EF               	goto	l9135
 23101  0059CC                     __end_of_Uart_ClearRxBuffer:
 23102                           	opt stack 0
 23103                           tosu	equ	0xFFF
 23104                           tosh	equ	0xFFE
 23105                           tosl	equ	0xFFD
 23106                           pclath	equ	0xFFA
 23107                           tblptru	equ	0xFF8
 23108                           tblptrh	equ	0xFF7
 23109                           tblptrl	equ	0xFF6
 23110                           tablat	equ	0xFF5
 23111                           prodh	equ	0xFF4
 23112                           prodl	equ	0xFF3
 23113                           intcon	equ	0xFF2
 23114                           intcon2	equ	0xFF1
 23115                           intcon3	equ	0xFF0
 23116                           indf0	equ	0xFEF
 23117                           postinc0	equ	0xFEE
 23118                           plusw0	equ	0xFEB
 23119                           fsr0h	equ	0xFEA
 23120                           fsr0l	equ	0xFE9
 23121                           wreg	equ	0xFE8
 23122                           indf1	equ	0xFE7
 23123                           postinc1	equ	0xFE6
 23124                           postdec1	equ	0xFE5
 23125                           plusw1	equ	0xFE3
 23126                           fsr1h	equ	0xFE2
 23127                           fsr1l	equ	0xFE1
 23128                           indf2	equ	0xFDF
 23129                           postinc2	equ	0xFDE
 23130                           postdec2	equ	0xFDD
 23131                           plusw2	equ	0xFDB
 23132                           fsr2h	equ	0xFDA
 23133                           fsr2l	equ	0xFD9
 23134                           status	equ	0xFD8
 23135                           
 23136 ;; *************** function _StringCompare *****************
 23137 ;; Defined at:
 23138 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23139 ;; Parameters:    Size  Location     Type
 23140 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 23141 ;;		 -> ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@RingString(4), 
 23142 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 23143 ;;		 -> RxBuffer(400), 
 23144 ;;  Len             2   33[BANK0 ] unsigned short 
 23145 ;; Auto vars:     Size  Location     Type
 23146 ;;  Index           2   38[BANK0 ] unsigned short 
 23147 ;;  Result          1   37[BANK0 ] unsigned char 
 23148 ;; Return value:  Size  Location     Type
 23149 ;;                  1    wreg      unsigned char 
 23150 ;; Registers used:
 23151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23152 ;; Tracked objects:
 23153 ;;		On entry : 0/0
 23154 ;;		On exit  : 0/0
 23155 ;;		Unchanged: 0/0
 23156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23157 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23160 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23161 ;;Total ram usage:       11 bytes
 23162 ;; Hardware stack levels used:    1
 23163 ;; Hardware stack levels required when called:   11
 23164 ;; This function calls:
 23165 ;;		Nothing
 23166 ;; This function is called by:
 23167 ;;		_ModemEvtParser
 23168 ;; This function uses a non-reentrant model
 23169 ;;
 23170                           
 23171                           	psect	text109
 23172  00522A                     __ptext109:
 23173                           	opt stack 0
 23174  00522A                     _StringCompare:
 23175                           	opt stack 15
 23176                           
 23177                           ;sf.c: 77: UINT16 Index = 0;
 23178                           
 23179                           ; BSR set to: 0
 23180                           ;incstack = 0
 23181  00522A  0E00               	movlw	0
 23182  00522C  0100               	movlb	0	; () banked
 23183  00522E  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23184  005230  0E00               	movlw	0
 23185  005232  6F86               	movwf	StringCompare@Index& (0+255),b
 23186                           
 23187                           ;sf.c: 78: UINT8 Result = 1;
 23188  005234  0E01               	movlw	1
 23189  005236  6F85               	movwf	StringCompare@Result& (0+255),b
 23190                           
 23191                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23192  005238  0E00               	movlw	0
 23193  00523A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23194  00523C  0E00               	movlw	0
 23195  00523E  6F86               	movwf	StringCompare@Index& (0+255),b
 23196  005240  D015               	goto	l2197
 23197  005242                     
 23198                           ; BSR set to: 0
 23199                           ;sf.c: 82: {
 23200                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23201                           
 23202                           ; BSR set to: 0
 23203  005242  5186               	movf	StringCompare@Index& (0+255),w,b
 23204  005244  257F               	addwf	StringCompare@String2& (0+255),w,b
 23205  005246  6ED9               	movwf	fsr2l,c
 23206  005248  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23207  00524A  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23208  00524C  6EDA               	movwf	fsr2h,c
 23209  00524E  5186               	movf	StringCompare@Index& (0+255),w,b
 23210  005250  257D               	addwf	StringCompare@String1& (0+255),w,b
 23211  005252  6EE1               	movwf	fsr1l,c
 23212  005254  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23213  005256  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23214  005258  6EE2               	movwf	fsr1h,c
 23215  00525A  50DE               	movf	postinc2,w,c
 23216  00525C  18E6               	xorwf	postinc1,w,c
 23217  00525E  B4D8               	btfsc	status,2,c
 23218  005260  D003               	goto	l2199
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;sf.c: 84: {
 23222                           ;sf.c: 85: Result = 0;
 23223  005262  0E00               	movlw	0
 23224  005264  6F85               	movwf	StringCompare@Result& (0+255),b
 23225                           
 23226                           ;sf.c: 86: break;
 23227  005266  D008               	goto	u7190
 23228  005268                     l2199:
 23229                           
 23230                           ; BSR set to: 0
 23231                           
 23232                           ; BSR set to: 0
 23233  005268  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 23234  00526A  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 23235  00526C                     l2197:
 23236                           
 23237                           ; BSR set to: 0
 23238                           
 23239                           ; BSR set to: 0
 23240  00526C  5181               	movf	StringCompare@Len& (0+255),w,b
 23241  00526E  5D86               	subwf	StringCompare@Index& (0+255),w,b
 23242  005270  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 23243  005272  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23244  005274  A0D8               	btfss	status,0,c
 23245  005276  D7E5               	goto	l2198
 23246  005278                     u7190:
 23247                           
 23248                           ; BSR set to: 0
 23249                           ;sf.c: 87: }
 23250                           ;sf.c: 88: }
 23251                           ;sf.c: 91: return Result;
 23252                           
 23253                           ; BSR set to: 0
 23254  005278  5185               	movf	StringCompare@Result& (0+255),w,b
 23255  00527A  0012               	return	
 23256  00527C                     __end_of_StringCompare:
 23257                           	opt stack 0
 23258                           tosu	equ	0xFFF
 23259                           tosh	equ	0xFFE
 23260                           tosl	equ	0xFFD
 23261                           pclath	equ	0xFFA
 23262                           tblptru	equ	0xFF8
 23263                           tblptrh	equ	0xFF7
 23264                           tblptrl	equ	0xFF6
 23265                           tablat	equ	0xFF5
 23266                           prodh	equ	0xFF4
 23267                           prodl	equ	0xFF3
 23268                           intcon	equ	0xFF2
 23269                           intcon2	equ	0xFF1
 23270                           intcon3	equ	0xFF0
 23271                           indf0	equ	0xFEF
 23272                           postinc0	equ	0xFEE
 23273                           plusw0	equ	0xFEB
 23274                           fsr0h	equ	0xFEA
 23275                           fsr0l	equ	0xFE9
 23276                           wreg	equ	0xFE8
 23277                           indf1	equ	0xFE7
 23278                           postinc1	equ	0xFE6
 23279                           postdec1	equ	0xFE5
 23280                           plusw1	equ	0xFE3
 23281                           fsr1h	equ	0xFE2
 23282                           fsr1l	equ	0xFE1
 23283                           indf2	equ	0xFDF
 23284                           postinc2	equ	0xFDE
 23285                           postdec2	equ	0xFDD
 23286                           plusw2	equ	0xFDB
 23287                           fsr2h	equ	0xFDA
 23288                           fsr2l	equ	0xFD9
 23289                           status	equ	0xFD8
 23290                           
 23291 ;; *************** function _GetSmsSm *****************
 23292 ;; Defined at:
 23293 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23294 ;; Parameters:    Size  Location     Type
 23295 ;;		None
 23296 ;; Auto vars:     Size  Location     Type
 23297 ;;		None
 23298 ;; Return value:  Size  Location     Type
 23299 ;;                  1    wreg      void 
 23300 ;; Registers used:
 23301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23302 ;; Tracked objects:
 23303 ;;		On entry : 0/0
 23304 ;;		On exit  : 0/0
 23305 ;;		Unchanged: 0/0
 23306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23311 ;;Total ram usage:        0 bytes
 23312 ;; Hardware stack levels used:    1
 23313 ;; Hardware stack levels required when called:   13
 23314 ;; This function calls:
 23315 ;;		_GenerateEvt
 23316 ;;		_ReceiveEvt
 23317 ;;		_StringCopy
 23318 ;;		_Uart_WriteConstString
 23319 ;; This function is called by:
 23320 ;;		_Mdm_MainTask
 23321 ;; This function uses a non-reentrant model
 23322 ;;
 23323                           
 23324                           	psect	text110
 23325  002F7C                     __ptext110:
 23326                           	opt stack 0
 23327  002F7C                     _GetSmsSm:
 23328                           	opt stack 14
 23329                           
 23330                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23331                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;incstack = 0
 23335  002F7C  0E03               	movlw	3
 23336  002F7E  0100               	movlb	0	; () banked
 23337  002F80  19CF               	xorwf	_MdmStatus& (0+255),w,b
 23338  002F82  A4D8               	btfss	status,2,c
 23339  002F84  0012               	return	
 23340  002F86  D060               	goto	l1060
 23341  002F88                     
 23342                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 23343                           
 23344                           ; BSR set to: 0
 23345  002F88  0EDA               	movlw	low _GetSmsText
 23346  002F8A  0100               	movlb	0	; () banked
 23347  002F8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23348  002F8E  0E00               	movlw	high _GetSmsText
 23349  002F90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23350  002F92  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 23351  002F96  0900               	iorlw	0
 23352  002F98  B4D8               	btfsc	status,2,c
 23353  002F9A  0012               	return	
 23354                           
 23355                           ;mdm_gsm_gprs.c: 578: {
 23356                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 23357  002F9C  0E01               	movlw	1
 23358  002F9E  6E26               	movwf	GetSmsSm@GetSmsState,c
 23359                           
 23360                           ;mdm_gsm_gprs.c: 581: }
 23361                           ;mdm_gsm_gprs.c: 582: break;
 23362  002FA0  0012               	return	
 23363  002FA2                     
 23364                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r");
 23365  002FA2  0EC2               	movlw	low STR_4
 23366  002FA4  0100               	movlb	0	; () banked
 23367  002FA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23368  002FA8  0EFF               	movlw	high STR_4
 23369  002FAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23370  002FAC  0E01               	movlw	1
 23371  002FAE  EC3F  F02B         	call	_Uart_WriteConstString
 23372                           
 23373                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 23374  002FB2  0E02               	movlw	2
 23375  002FB4  6E26               	movwf	GetSmsSm@GetSmsState,c
 23376                           
 23377                           ;mdm_gsm_gprs.c: 589: break;
 23378  002FB6  0012               	return	
 23379  002FB8                     
 23380                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 23381  002FB8  0E3C               	movlw	low _NewStringReceived
 23382  002FBA  0100               	movlb	0	; () banked
 23383  002FBC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23384  002FBE  0E00               	movlw	high _NewStringReceived
 23385  002FC0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23386  002FC2  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 23387  002FC6  0900               	iorlw	0
 23388  002FC8  B4D8               	btfsc	status,2,c
 23389  002FCA  0012               	return	
 23390                           
 23391                           ;mdm_gsm_gprs.c: 594: {
 23392                           ;mdm_gsm_gprs.c: 595: if (RxBuffer[0] != 0)
 23393  002FCC  EE2C  F058         	lfsr	2,_RxBuffer
 23394  002FD0  50DF               	movf	indf2,w,c
 23395  002FD2  B4D8               	btfsc	status,2,c
 23396  002FD4  0012               	return	
 23397                           
 23398                           ;mdm_gsm_gprs.c: 596: {
 23399                           ;mdm_gsm_gprs.c: 598: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23400  002FD6  0E58               	movlw	low _RxBuffer
 23401  002FD8  0100               	movlb	0	; () banked
 23402  002FDA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23403  002FDC  0E0C               	movlw	high _RxBuffer
 23404  002FDE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23405  002FE0  0E00               	movlw	low _Mdm_SmsRx
 23406  002FE2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23407  002FE4  0E07               	movlw	high _Mdm_SmsRx
 23408  002FE6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23409  002FE8  C0BE  F081         	movff	_RxLen,StringCopy@Len
 23410  002FEC  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 23411  002FF0  EC00  F027         	call	_StringCopy	;wreg free
 23412                           
 23413                           ;mdm_gsm_gprs.c: 600: Mdm_SmsRx.HeadLen = RxLen;
 23414  002FF4  C0BE  F782         	movff	_RxLen,_Mdm_SmsRx+130
 23415                           
 23416                           ;mdm_gsm_gprs.c: 602: GetSmsState = GetSms_StoreText;
 23417  002FF8  0E03               	movlw	3
 23418  002FFA  6E26               	movwf	GetSmsSm@GetSmsState,c
 23419                           
 23420                           ;mdm_gsm_gprs.c: 603: }
 23421                           ;mdm_gsm_gprs.c: 604: }
 23422                           ;mdm_gsm_gprs.c: 605: break;
 23423  002FFC  0012               	return	
 23424  002FFE                     
 23425                           ;mdm_gsm_gprs.c: 609: if (ReceiveEvt(&NewStringReceived))
 23426  002FFE  0E3C               	movlw	low _NewStringReceived
 23427  003000  0100               	movlb	0	; () banked
 23428  003002  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23429  003004  0E00               	movlw	high _NewStringReceived
 23430  003006  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23431  003008  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 23432  00300C  0900               	iorlw	0
 23433  00300E  B4D8               	btfsc	status,2,c
 23434  003010  0012               	return	
 23435                           
 23436                           ;mdm_gsm_gprs.c: 610: {
 23437                           ;mdm_gsm_gprs.c: 612: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 23438  003012  0E58               	movlw	low _RxBuffer
 23439  003014  0100               	movlb	0	; () banked
 23440  003016  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23441  003018  0E0C               	movlw	high _RxBuffer
 23442  00301A  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23443  00301C  0E50               	movlw	low (_Mdm_SmsRx+80)
 23444  00301E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23445  003020  0E07               	movlw	high (_Mdm_SmsRx+80)
 23446  003022  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23447  003024  C0BE  F081         	movff	_RxLen,StringCopy@Len
 23448  003028  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 23449  00302C  EC00  F027         	call	_StringCopy	;wreg free
 23450                           
 23451                           ;mdm_gsm_gprs.c: 614: Mdm_SmsRx.TextLen = RxLen;
 23452  003030  C0BE  F783         	movff	_RxLen,_Mdm_SmsRx+131
 23453                           
 23454                           ;mdm_gsm_gprs.c: 616: GetSmsState = GetSms_CheckReq;
 23455  003034  0E00               	movlw	0
 23456  003036  6E26               	movwf	GetSmsSm@GetSmsState,c
 23457                           
 23458                           ;mdm_gsm_gprs.c: 618: GenerateEvt(&SmsTxtReady);
 23459  003038  0ED9               	movlw	low _SmsTxtReady
 23460  00303A  0100               	movlb	0	; () banked
 23461  00303C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23462  00303E  0E00               	movlw	high _SmsTxtReady
 23463  003040  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23464  003042  EC47  F02F         	call	_GenerateEvt	;wreg free
 23465                           
 23466                           ;mdm_gsm_gprs.c: 624: }
 23467                           
 23468                           ;mdm_gsm_gprs.c: 623: break;
 23469                           
 23470                           ;mdm_gsm_gprs.c: 622: default:
 23471                           
 23472                           ;mdm_gsm_gprs.c: 619: }
 23473                           ;mdm_gsm_gprs.c: 620: break;
 23474  003046  0012               	return	
 23475  003048                     l1060:
 23476  003048  5026               	movf	GetSmsSm@GetSmsState,w,c
 23477                           
 23478                           ; Switch size 1, requested type "space"
 23479                           ; Number of cases is 4, Range of values is 0 to 3
 23480                           ; switch strategies available:
 23481                           ; Name         Instructions Cycles
 23482                           ; simple_byte           13     7 (average)
 23483                           ;	Chosen strategy is simple_byte
 23484  00304A  0A00               	xorlw	0	; case 0
 23485  00304C  B4D8               	btfsc	status,2,c
 23486  00304E  D79C               	goto	l1061
 23487  003050  0A01               	xorlw	1	; case 1
 23488  003052  B4D8               	btfsc	status,2,c
 23489  003054  D7A6               	goto	l1064
 23490  003056  0A03               	xorlw	3	; case 2
 23491  003058  B4D8               	btfsc	status,2,c
 23492  00305A  D7AE               	goto	l1065
 23493  00305C  0A01               	xorlw	1	; case 3
 23494  00305E  A4D8               	btfss	status,2,c
 23495  003060  0012               	return	
 23496  003062  D7CD               	goto	l1068
 23497  003064                     __end_of_GetSmsSm:
 23498                           	opt stack 0
 23499                           tosu	equ	0xFFF
 23500                           tosh	equ	0xFFE
 23501                           tosl	equ	0xFFD
 23502                           pclath	equ	0xFFA
 23503                           tblptru	equ	0xFF8
 23504                           tblptrh	equ	0xFF7
 23505                           tblptrl	equ	0xFF6
 23506                           tablat	equ	0xFF5
 23507                           prodh	equ	0xFF4
 23508                           prodl	equ	0xFF3
 23509                           intcon	equ	0xFF2
 23510                           intcon2	equ	0xFF1
 23511                           intcon3	equ	0xFF0
 23512                           indf0	equ	0xFEF
 23513                           postinc0	equ	0xFEE
 23514                           plusw0	equ	0xFEB
 23515                           fsr0h	equ	0xFEA
 23516                           fsr0l	equ	0xFE9
 23517                           wreg	equ	0xFE8
 23518                           indf1	equ	0xFE7
 23519                           postinc1	equ	0xFE6
 23520                           postdec1	equ	0xFE5
 23521                           plusw1	equ	0xFE3
 23522                           fsr1h	equ	0xFE2
 23523                           fsr1l	equ	0xFE1
 23524                           indf2	equ	0xFDF
 23525                           postinc2	equ	0xFDE
 23526                           postdec2	equ	0xFDD
 23527                           plusw2	equ	0xFDB
 23528                           fsr2h	equ	0xFDA
 23529                           fsr2l	equ	0xFD9
 23530                           status	equ	0xFD8
 23531                           
 23532 ;; *************** function _ConfigureModem *****************
 23533 ;; Defined at:
 23534 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23535 ;; Parameters:    Size  Location     Type
 23536 ;;		None
 23537 ;; Auto vars:     Size  Location     Type
 23538 ;;		None
 23539 ;; Return value:  Size  Location     Type
 23540 ;;                  1    wreg      void 
 23541 ;; Registers used:
 23542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23543 ;; Tracked objects:
 23544 ;;		On entry : 0/0
 23545 ;;		On exit  : 0/0
 23546 ;;		Unchanged: 0/0
 23547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23552 ;;Total ram usage:        0 bytes
 23553 ;; Hardware stack levels used:    1
 23554 ;; Hardware stack levels required when called:   14
 23555 ;; This function calls:
 23556 ;;		_GenerateEvt
 23557 ;;		_UartSetConfigLow
 23558 ;;		_Uart_InitUartModule
 23559 ;;		_Uart_WriteConstString
 23560 ;; This function is called by:
 23561 ;;		_Mdm_MainTask
 23562 ;; This function uses a non-reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text111
 23566  003812                     __ptext111:
 23567                           	opt stack 0
 23568  003812                     _ConfigureModem:
 23569                           	opt stack 13
 23570                           
 23571                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 23572                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 23573                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 23574                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 23575                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 23576                           
 23577                           ;incstack = 0
 23578  003812  D052               	goto	l1021
 23579  003814                     
 23580                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 23581  003814  0E02               	movlw	2
 23582  003816  0100               	movlb	0	; () banked
 23583  003818  19CF               	xorwf	_MdmStatus& (0+255),w,b
 23584  00381A  A4D8               	btfss	status,2,c
 23585  00381C  0012               	return	
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;mdm_gsm_gprs.c: 426: {
 23589                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 23590  00381E  0E01               	movlw	1
 23591  003820  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;mdm_gsm_gprs.c: 429: }
 23595                           ;mdm_gsm_gprs.c: 430: break;
 23596  003822  0012               	return	
 23597  003824                     
 23598                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 23599                           
 23600                           ; BSR set to: 0
 23601  003824  0E81               	movlw	low STR_2
 23602  003826  0100               	movlb	0	; () banked
 23603  003828  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23604  00382A  0EFF               	movlw	high STR_2
 23605  00382C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23606  00382E  0E01               	movlw	1
 23607  003830  EC3F  F02B         	call	_Uart_WriteConstString
 23608                           
 23609                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 23610  003834  EC15  F028         	call	_UartSetConfigLow	;wreg free
 23611                           
 23612                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 23613  003838  0E28               	movlw	low _UartConfig
 23614  00383A  0100               	movlb	0	; () banked
 23615  00383C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 23616  00383E  0E03               	movlw	high _UartConfig
 23617  003840  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 23618  003842  0E01               	movlw	1
 23619  003844  EC5E  F005         	call	_Uart_InitUartModule
 23620                           
 23621                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23622  003848  0E03               	movlw	3
 23623  00384A  0102               	movlb	2	; () banked
 23624  00384C  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23625  00384E  0EE8               	movlw	232
 23626  003850  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23627                           
 23628                           ; BSR set to: 2
 23629                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 23630  003852  0E02               	movlw	2
 23631  003854  6E27               	movwf	ConfigureModem@NextState,c
 23632                           
 23633                           ; BSR set to: 2
 23634                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 23635  003856  0E04               	movlw	4
 23636  003858  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23637                           
 23638                           ;mdm_gsm_gprs.c: 444: break;
 23639  00385A  0012               	return	
 23640  00385C                     
 23641                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 23642                           
 23643                           ; BSR set to: 2
 23644  00385C  0EDE               	movlw	low STR_3
 23645  00385E  0100               	movlb	0	; () banked
 23646  003860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23647  003862  0EFF               	movlw	high STR_3
 23648  003864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23649  003866  0E01               	movlw	1
 23650  003868  EC3F  F02B         	call	_Uart_WriteConstString
 23651                           
 23652                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23653  00386C  0E03               	movlw	3
 23654  00386E  0102               	movlb	2	; () banked
 23655  003870  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23656  003872  0EE8               	movlw	232
 23657  003874  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23658                           
 23659                           ; BSR set to: 2
 23660                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 23661  003876  0E05               	movlw	5
 23662  003878  6E27               	movwf	ConfigureModem@NextState,c
 23663                           
 23664                           ; BSR set to: 2
 23665                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 23666  00387A  0E04               	movlw	4
 23667  00387C  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23668                           
 23669                           ;mdm_gsm_gprs.c: 454: break;
 23670  00387E  0012               	return	
 23671  003880                     
 23672                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 23673                           
 23674                           ; BSR set to: 2
 23675  003880  0102               	movlb	2	; () banked
 23676  003882  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 23677  003884  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 23678                           
 23679                           ; BSR set to: 2
 23680                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 23681  003886  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 23682  003888  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 23683  00388A  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 23684  00388C  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 23685  00388E  A0D8               	btfss	status,0,c
 23686  003890  0012               	return	
 23687                           
 23688                           ; BSR set to: 2
 23689                           ;mdm_gsm_gprs.c: 461: {
 23690                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 23691  003892  0E00               	movlw	0
 23692  003894  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 23693  003896  0E00               	movlw	0
 23694  003898  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 23695                           
 23696                           ; BSR set to: 2
 23697                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 23698  00389A  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 23699                           
 23700                           ; BSR set to: 2
 23701                           ;mdm_gsm_gprs.c: 466: }
 23702                           ;mdm_gsm_gprs.c: 467: break;
 23703  00389E  0012               	return	
 23704  0038A0                     
 23705                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 23706                           
 23707                           ; BSR set to: 2
 23708  0038A0  0E03               	movlw	3
 23709  0038A2  0100               	movlb	0	; () banked
 23710  0038A4  6FCF               	movwf	_MdmStatus& (0+255),b
 23711                           
 23712                           ; BSR set to: 0
 23713                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 23714  0038A6  0E39               	movlw	low _MdmStsReady
 23715  0038A8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23716  0038AA  0E00               	movlw	high _MdmStsReady
 23717  0038AC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23718  0038AE  EC47  F02F         	call	_GenerateEvt	;wreg free
 23719                           
 23720                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 23721  0038B2  0E06               	movlw	6
 23722  0038B4  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23723                           
 23724                           ;mdm_gsm_gprs.c: 483: }
 23725                           
 23726                           ;mdm_gsm_gprs.c: 482: break;
 23727                           
 23728                           ;mdm_gsm_gprs.c: 481: default:
 23729                           
 23730                           ;mdm_gsm_gprs.c: 479: break;
 23731                           
 23732                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 23733                           
 23734                           ;mdm_gsm_gprs.c: 476: break;
 23735  0038B6  0012               	return	
 23736  0038B8                     l1021:
 23737  0038B8  5028               	movf	ConfigureModem@MdmConfigState,w,c
 23738                           
 23739                           ; Switch size 1, requested type "space"
 23740                           ; Number of cases is 6, Range of values is 0 to 6
 23741                           ; switch strategies available:
 23742                           ; Name         Instructions Cycles
 23743                           ; simple_byte           19    10 (average)
 23744                           ;	Chosen strategy is simple_byte
 23745  0038BA  0A00               	xorlw	0	; case 0
 23746  0038BC  B4D8               	btfsc	status,2,c
 23747  0038BE  D7AA               	goto	l1022
 23748  0038C0  0A01               	xorlw	1	; case 1
 23749  0038C2  B4D8               	btfsc	status,2,c
 23750  0038C4  D7AF               	goto	l1025
 23751  0038C6  0A03               	xorlw	3	; case 2
 23752  0038C8  B4D8               	btfsc	status,2,c
 23753  0038CA  D7C8               	goto	l1026
 23754  0038CC  0A06               	xorlw	6	; case 4
 23755  0038CE  B4D8               	btfsc	status,2,c
 23756  0038D0  D7D7               	goto	l1027
 23757  0038D2  0A01               	xorlw	1	; case 5
 23758  0038D4  B4D8               	btfsc	status,2,c
 23759  0038D6  D7E4               	goto	l1029
 23760  0038D8  0A03               	xorlw	3	; case 6
 23761  0038DA  0012               	return	
 23762  0038DC                     __end_of_ConfigureModem:
 23763                           	opt stack 0
 23764                           tosu	equ	0xFFF
 23765                           tosh	equ	0xFFE
 23766                           tosl	equ	0xFFD
 23767                           pclath	equ	0xFFA
 23768                           tblptru	equ	0xFF8
 23769                           tblptrh	equ	0xFF7
 23770                           tblptrl	equ	0xFF6
 23771                           tablat	equ	0xFF5
 23772                           prodh	equ	0xFF4
 23773                           prodl	equ	0xFF3
 23774                           intcon	equ	0xFF2
 23775                           intcon2	equ	0xFF1
 23776                           intcon3	equ	0xFF0
 23777                           indf0	equ	0xFEF
 23778                           postinc0	equ	0xFEE
 23779                           plusw0	equ	0xFEB
 23780                           fsr0h	equ	0xFEA
 23781                           fsr0l	equ	0xFE9
 23782                           wreg	equ	0xFE8
 23783                           indf1	equ	0xFE7
 23784                           postinc1	equ	0xFE6
 23785                           postdec1	equ	0xFE5
 23786                           plusw1	equ	0xFE3
 23787                           fsr1h	equ	0xFE2
 23788                           fsr1l	equ	0xFE1
 23789                           indf2	equ	0xFDF
 23790                           postinc2	equ	0xFDE
 23791                           postdec2	equ	0xFDD
 23792                           plusw2	equ	0xFDB
 23793                           fsr2h	equ	0xFDA
 23794                           fsr2l	equ	0xFD9
 23795                           status	equ	0xFD8
 23796                           
 23797 ;; *************** function _Uart_InitUartModule *****************
 23798 ;; Defined at:
 23799 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23800 ;; Parameters:    Size  Location     Type
 23801 ;;  Module          1    wreg     unsigned char 
 23802 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 23803 ;;		 -> UartConfig(21), 
 23804 ;; Auto vars:     Size  Location     Type
 23805 ;;  Module          1   65[BANK0 ] unsigned char 
 23806 ;; Return value:  Size  Location     Type
 23807 ;;                  1    wreg      void 
 23808 ;; Registers used:
 23809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23810 ;; Tracked objects:
 23811 ;;		On entry : 0/0
 23812 ;;		On exit  : 0/0
 23813 ;;		Unchanged: 0/0
 23814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23815 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23818 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23819 ;;Total ram usage:        5 bytes
 23820 ;; Hardware stack levels used:    1
 23821 ;; Hardware stack levels required when called:   13
 23822 ;; This function calls:
 23823 ;;		_SetUartBaudRate
 23824 ;; This function is called by:
 23825 ;;		_ConfigureModem
 23826 ;;		_Mdm_MainTask
 23827 ;; This function uses a non-reentrant model
 23828 ;;
 23829                           
 23830                           	psect	text112
 23831  000ABC                     __ptext112:
 23832                           	opt stack 0
 23833  000ABC                     _Uart_InitUartModule:
 23834                           	opt stack 14
 23835                           
 23836                           ;incstack = 0
 23837                           ;Uart_InitUartModule@Module stored from wreg
 23838  000ABC  0100               	movlb	0	; () banked
 23839  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 23840                           
 23841                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 23842  000AC0  0100               	movlb	0	; () banked
 23843  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 23844  000AC4  A4D8               	btfss	status,2,c
 23845  000AC6  D0BE               	goto	l668
 23846                           
 23847                           ; BSR set to: 0
 23848                           ;uart_drv.c: 291: {
 23849                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 23850  000AC8  9C94               	bcf	3988,6,c	;volatile
 23851                           
 23852                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 23853  000ACA  8E94               	bsf	3988,7,c	;volatile
 23854                           
 23855                           ; BSR set to: 0
 23856                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 23857  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23858  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23859  000AD4  0E01               	movlw	1
 23860  000AD6  ECE4  F013         	call	_SetUartBaudRate
 23861                           
 23862                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 23863  000ADA  0E00               	movlw	0
 23864  000ADC  6EAD               	movwf	4013,c	;volatile
 23865                           
 23866                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23867  000ADE  0100               	movlb	0	; () banked
 23868  000AE0  EE20 F004          	lfsr	2,4
 23869  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23870  000AE6  26D9               	addwf	fsr2l,f,c
 23871  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23872  000AEA  22DA               	addwfc	fsr2h,f,c
 23873  000AEC  50DF               	movf	indf2,w,c
 23874  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23875  000AF0  0E06               	movlw	6
 23876  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23877  000AF4                     u11335:
 23878  000AF4  90D8               	bcf	status,0,c
 23879  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23880  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23881  000AFA  D7FC               	goto	u11335
 23882  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23883  000AFE  12AD               	iorwf	4013,f,c	;volatile
 23884                           
 23885                           ; BSR set to: 0
 23886                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23887  000B00  EE20 F006          	lfsr	2,6
 23888  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23889  000B06  26D9               	addwf	fsr2l,f,c
 23890  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23891  000B0A  22DA               	addwfc	fsr2h,f,c
 23892  000B0C  50DF               	movf	indf2,w,c
 23893  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23894  000B10  0E05               	movlw	5
 23895  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23896  000B14                     u11345:
 23897  000B14  90D8               	bcf	status,0,c
 23898  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23899  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23900  000B1A  D7FC               	goto	u11345
 23901  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23902  000B1E  12AD               	iorwf	4013,f,c	;volatile
 23903                           
 23904                           ; BSR set to: 0
 23905                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 23906  000B20  EE20 F001          	lfsr	2,1
 23907  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23908  000B26  26D9               	addwf	fsr2l,f,c
 23909  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23910  000B2A  22DA               	addwfc	fsr2h,f,c
 23911  000B2C  50DF               	movf	indf2,w,c
 23912  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23913  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23914  000B32  0BF0               	andlw	240
 23915  000B34  12AD               	iorwf	4013,f,c	;volatile
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23919  000B36  EE20 F008          	lfsr	2,8
 23920  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23921  000B3C  26D9               	addwf	fsr2l,f,c
 23922  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23923  000B40  22DA               	addwfc	fsr2h,f,c
 23924  000B42  50DF               	movf	indf2,w,c
 23925  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23926  000B46  90D8               	bcf	status,0,c
 23927  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23928  000B4A  90D8               	bcf	status,0,c
 23929  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23930  000B4E  90D8               	bcf	status,0,c
 23931  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23932  000B52  12AD               	iorwf	4013,f,c	;volatile
 23933                           
 23934                           ; BSR set to: 0
 23935                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23936  000B54  EE20 F003          	lfsr	2,3
 23937  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23938  000B5A  26D9               	addwf	fsr2l,f,c
 23939  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23940  000B5E  22DA               	addwfc	fsr2h,f,c
 23941  000B60  50DF               	movf	indf2,w,c
 23942  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23943  000B64  90D8               	bcf	status,0,c
 23944  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23945  000B68  90D8               	bcf	status,0,c
 23946  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23947  000B6C  12AD               	iorwf	4013,f,c	;volatile
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 23951  000B6E  0E00               	movlw	0
 23952  000B70  6EAC               	movwf	4012,c	;volatile
 23953                           
 23954                           ; BSR set to: 0
 23955                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23956  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23957  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23958  000B7A  50DF               	movf	indf2,w,c
 23959  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23960  000B7E  0E00               	movlw	0
 23961  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23962  000B82  0E80               	movlw	128
 23963  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23964  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23965  000B88  12AC               	iorwf	4012,f,c	;volatile
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23969  000B8A  EE20 F005          	lfsr	2,5
 23970  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23971  000B90  26D9               	addwf	fsr2l,f,c
 23972  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23973  000B94  22DA               	addwfc	fsr2h,f,c
 23974  000B96  50DF               	movf	indf2,w,c
 23975  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23976  000B9A  0E06               	movlw	6
 23977  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23978  000B9E                     u11355:
 23979  000B9E  90D8               	bcf	status,0,c
 23980  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23981  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23982  000BA4  D7FC               	goto	u11355
 23983  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23984  000BA8  12AC               	iorwf	4012,f,c	;volatile
 23985                           
 23986                           ; BSR set to: 0
 23987                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23988  000BAA  EE20 F007          	lfsr	2,7
 23989  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23990  000BB0  26D9               	addwf	fsr2l,f,c
 23991  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23992  000BB4  22DA               	addwfc	fsr2h,f,c
 23993  000BB6  50DF               	movf	indf2,w,c
 23994  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23995  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23996  000BBC  0BF0               	andlw	240
 23997  000BBE  12AC               	iorwf	4012,f,c	;volatile
 23998                           
 23999                           ; BSR set to: 0
 24000                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24001  000BC0  0E00               	movlw	0
 24002  000BC2  6E7E               	movwf	3966,c	;volatile
 24003                           
 24004                           ; BSR set to: 0
 24005                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24006  000BC4  EE20 F002          	lfsr	2,2
 24007  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24008  000BCA  26D9               	addwf	fsr2l,f,c
 24009  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24010  000BCE  22DA               	addwfc	fsr2h,f,c
 24011  000BD0  50DF               	movf	indf2,w,c
 24012  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24013  000BD4  90D8               	bcf	status,0,c
 24014  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24015  000BD8  90D8               	bcf	status,0,c
 24016  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24017  000BDC  90D8               	bcf	status,0,c
 24018  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24019  000BE0  127E               	iorwf	3966,f,c	;volatile
 24020                           
 24021                           ; BSR set to: 0
 24022                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24023  000BE2  EE20 F00A          	lfsr	2,10
 24024  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24025  000BE8  26D9               	addwf	fsr2l,f,c
 24026  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24027  000BEC  22DA               	addwfc	fsr2h,f,c
 24028  000BEE  50DF               	movf	indf2,w,c
 24029  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24030  000BF2  90D8               	bcf	status,0,c
 24031  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24032  000BF6  127E               	iorwf	3966,f,c	;volatile
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24036  000BF8  EE20 F009          	lfsr	2,9
 24037  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24038  000BFE  26D9               	addwf	fsr2l,f,c
 24039  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24040  000C02  22DA               	addwfc	fsr2h,f,c
 24041  000C04  50DF               	movf	indf2,w,c
 24042  000C06  127E               	iorwf	3966,f,c	;volatile
 24043                           
 24044                           ; BSR set to: 0
 24045                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24046  000C08  EE20 F00B          	lfsr	2,11
 24047  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24048  000C0E  26D9               	addwf	fsr2l,f,c
 24049  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24050  000C12  22DA               	addwfc	fsr2h,f,c
 24051  000C14  50DF               	movf	indf2,w,c
 24052  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24053  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24054  000C1A  509D               	movf	3997,w,c	;volatile
 24055  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24056  000C1E  0BEF               	andlw	-17
 24057  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24058  000C22  6E9D               	movwf	3997,c	;volatile
 24059                           
 24060                           ; BSR set to: 0
 24061                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24062  000C24  EE20 F00C          	lfsr	2,12
 24063  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24064  000C2A  26D9               	addwf	fsr2l,f,c
 24065  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24066  000C2E  22DA               	addwfc	fsr2h,f,c
 24067  000C30  50DF               	movf	indf2,w,c
 24068  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24069  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24070  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24071  000C38  509D               	movf	3997,w,c	;volatile
 24072  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24073  000C3C  0BDF               	andlw	-33
 24074  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24075  000C40  6E9D               	movwf	3997,c	;volatile
 24076                           
 24077                           ;uart_drv.c: 326: }
 24078  000C42  0012               	return	
 24079  000C44                     l668:
 24080                           
 24081                           ; BSR set to: 0
 24082                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24083                           
 24084                           ; BSR set to: 0
 24085  000C44  0E02               	movlw	2
 24086  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24087  000C48  A4D8               	btfss	status,2,c
 24088  000C4A  0012               	return	
 24089                           
 24090                           ; BSR set to: 0
 24091                           ;uart_drv.c: 328: {
 24092                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24093  000C4C  9094               	bcf	3988,0,c	;volatile
 24094                           
 24095                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24096  000C4E  8294               	bsf	3988,1,c	;volatile
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24100  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24101  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24102  000C58  0E02               	movlw	2
 24103  000C5A  ECE4  F013         	call	_SetUartBaudRate
 24104                           
 24105                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24106  000C5E  0E00               	movlw	0
 24107  000C60  6EA8               	movwf	4008,c	;volatile
 24108                           
 24109                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24110  000C62  0100               	movlb	0	; () banked
 24111  000C64  EE20 F004          	lfsr	2,4
 24112  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24113  000C6A  26D9               	addwf	fsr2l,f,c
 24114  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24115  000C6E  22DA               	addwfc	fsr2h,f,c
 24116  000C70  50DF               	movf	indf2,w,c
 24117  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24118  000C74  0E06               	movlw	6
 24119  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24120  000C78                     u11375:
 24121  000C78  90D8               	bcf	status,0,c
 24122  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24123  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24124  000C7E  D7FC               	goto	u11375
 24125  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24126  000C82  12A8               	iorwf	4008,f,c	;volatile
 24127                           
 24128                           ; BSR set to: 0
 24129                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24130  000C84  EE20 F006          	lfsr	2,6
 24131  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24132  000C8A  26D9               	addwf	fsr2l,f,c
 24133  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24134  000C8E  22DA               	addwfc	fsr2h,f,c
 24135  000C90  50DF               	movf	indf2,w,c
 24136  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24137  000C94  0E05               	movlw	5
 24138  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24139  000C98                     u11385:
 24140  000C98  90D8               	bcf	status,0,c
 24141  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24142  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24143  000C9E  D7FC               	goto	u11385
 24144  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24145  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24146                           
 24147                           ; BSR set to: 0
 24148                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24149  000CA4  EE20 F001          	lfsr	2,1
 24150  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24151  000CAA  26D9               	addwf	fsr2l,f,c
 24152  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24153  000CAE  22DA               	addwfc	fsr2h,f,c
 24154  000CB0  50DF               	movf	indf2,w,c
 24155  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24156  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24157  000CB6  0BF0               	andlw	240
 24158  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24159                           
 24160                           ; BSR set to: 0
 24161                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24162  000CBA  EE20 F008          	lfsr	2,8
 24163  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24164  000CC0  26D9               	addwf	fsr2l,f,c
 24165  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24166  000CC4  22DA               	addwfc	fsr2h,f,c
 24167  000CC6  50DF               	movf	indf2,w,c
 24168  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24169  000CCA  90D8               	bcf	status,0,c
 24170  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24171  000CCE  90D8               	bcf	status,0,c
 24172  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24173  000CD2  90D8               	bcf	status,0,c
 24174  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24175  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24179  000CD8  EE20 F003          	lfsr	2,3
 24180  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24181  000CDE  26D9               	addwf	fsr2l,f,c
 24182  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24183  000CE2  22DA               	addwfc	fsr2h,f,c
 24184  000CE4  50DF               	movf	indf2,w,c
 24185  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24186  000CE8  90D8               	bcf	status,0,c
 24187  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24188  000CEC  90D8               	bcf	status,0,c
 24189  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24190  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24191                           
 24192                           ; BSR set to: 0
 24193                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24194  000CF2  0E00               	movlw	0
 24195  000CF4  6E9C               	movwf	3996,c	;volatile
 24196                           
 24197                           ; BSR set to: 0
 24198                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24199  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24200  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24201  000CFE  50DF               	movf	indf2,w,c
 24202  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24203  000D02  0E00               	movlw	0
 24204  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24205  000D06  0E80               	movlw	128
 24206  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24207  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24208  000D0C  129C               	iorwf	3996,f,c	;volatile
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24212  000D0E  EE20 F005          	lfsr	2,5
 24213  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24214  000D14  26D9               	addwf	fsr2l,f,c
 24215  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24216  000D18  22DA               	addwfc	fsr2h,f,c
 24217  000D1A  50DF               	movf	indf2,w,c
 24218  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24219  000D1E  0E06               	movlw	6
 24220  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24221  000D22                     u11395:
 24222  000D22  90D8               	bcf	status,0,c
 24223  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24224  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24225  000D28  D7FC               	goto	u11395
 24226  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24227  000D2C  129C               	iorwf	3996,f,c	;volatile
 24228                           
 24229                           ; BSR set to: 0
 24230                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24231  000D2E  EE20 F007          	lfsr	2,7
 24232  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24233  000D34  26D9               	addwf	fsr2l,f,c
 24234  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24235  000D38  22DA               	addwfc	fsr2h,f,c
 24236  000D3A  50DF               	movf	indf2,w,c
 24237  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24238  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24239  000D40  0BF0               	andlw	240
 24240  000D42  129C               	iorwf	3996,f,c	;volatile
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24244  000D44  0E00               	movlw	0
 24245  000D46  6E7C               	movwf	3964,c	;volatile
 24246                           
 24247                           ; BSR set to: 0
 24248                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24249  000D48  EE20 F002          	lfsr	2,2
 24250  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24251  000D4E  26D9               	addwf	fsr2l,f,c
 24252  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24253  000D52  22DA               	addwfc	fsr2h,f,c
 24254  000D54  50DF               	movf	indf2,w,c
 24255  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24256  000D58  90D8               	bcf	status,0,c
 24257  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24258  000D5C  90D8               	bcf	status,0,c
 24259  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24260  000D60  90D8               	bcf	status,0,c
 24261  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24262  000D64  127C               	iorwf	3964,f,c	;volatile
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24266  000D66  EE20 F00A          	lfsr	2,10
 24267  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24268  000D6C  26D9               	addwf	fsr2l,f,c
 24269  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24270  000D70  22DA               	addwfc	fsr2h,f,c
 24271  000D72  50DF               	movf	indf2,w,c
 24272  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24273  000D76  90D8               	bcf	status,0,c
 24274  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24275  000D7A  127C               	iorwf	3964,f,c	;volatile
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24279  000D7C  EE20 F009          	lfsr	2,9
 24280  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24281  000D82  26D9               	addwf	fsr2l,f,c
 24282  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24283  000D86  22DA               	addwfc	fsr2h,f,c
 24284  000D88  50DF               	movf	indf2,w,c
 24285  000D8A  127C               	iorwf	3964,f,c	;volatile
 24286                           
 24287                           ; BSR set to: 0
 24288                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24289  000D8C  EE20 F00B          	lfsr	2,11
 24290  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24291  000D92  26D9               	addwf	fsr2l,f,c
 24292  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24293  000D96  22DA               	addwfc	fsr2h,f,c
 24294  000D98  50DF               	movf	indf2,w,c
 24295  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24296  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24297  000D9E  50A3               	movf	4003,w,c	;volatile
 24298  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24299  000DA2  0BEF               	andlw	-17
 24300  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24301  000DA6  6EA3               	movwf	4003,c	;volatile
 24302                           
 24303                           ; BSR set to: 0
 24304                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24305  000DA8  EE20 F00C          	lfsr	2,12
 24306  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24307  000DAE  26D9               	addwf	fsr2l,f,c
 24308  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24309  000DB2  22DA               	addwfc	fsr2h,f,c
 24310  000DB4  50DF               	movf	indf2,w,c
 24311  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24312  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24313  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24314  000DBC  50A3               	movf	4003,w,c	;volatile
 24315  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24316  000DC0  0BDF               	andlw	-33
 24317  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24318  000DC4  6EA3               	movwf	4003,c	;volatile
 24319                           
 24320                           ; BSR set to: 0
 24321  000DC6  0012               	return	
 24322  000DC8                     __end_of_Uart_InitUartModule:
 24323                           	opt stack 0
 24324                           tosu	equ	0xFFF
 24325                           tosh	equ	0xFFE
 24326                           tosl	equ	0xFFD
 24327                           pclath	equ	0xFFA
 24328                           tblptru	equ	0xFF8
 24329                           tblptrh	equ	0xFF7
 24330                           tblptrl	equ	0xFF6
 24331                           tablat	equ	0xFF5
 24332                           prodh	equ	0xFF4
 24333                           prodl	equ	0xFF3
 24334                           intcon	equ	0xFF2
 24335                           intcon2	equ	0xFF1
 24336                           intcon3	equ	0xFF0
 24337                           indf0	equ	0xFEF
 24338                           postinc0	equ	0xFEE
 24339                           plusw0	equ	0xFEB
 24340                           fsr0h	equ	0xFEA
 24341                           fsr0l	equ	0xFE9
 24342                           wreg	equ	0xFE8
 24343                           indf1	equ	0xFE7
 24344                           postinc1	equ	0xFE6
 24345                           postdec1	equ	0xFE5
 24346                           plusw1	equ	0xFE3
 24347                           fsr1h	equ	0xFE2
 24348                           fsr1l	equ	0xFE1
 24349                           indf2	equ	0xFDF
 24350                           postinc2	equ	0xFDE
 24351                           postdec2	equ	0xFDD
 24352                           plusw2	equ	0xFDB
 24353                           fsr2h	equ	0xFDA
 24354                           fsr2l	equ	0xFD9
 24355                           status	equ	0xFD8
 24356                           
 24357 ;; *************** function _SetUartBaudRate *****************
 24358 ;; Defined at:
 24359 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24360 ;; Parameters:    Size  Location     Type
 24361 ;;  Module          1    wreg     unsigned char 
 24362 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24363 ;;		 -> UartConfig(21), 
 24364 ;; Auto vars:     Size  Location     Type
 24365 ;;  Module          1   57[BANK0 ] unsigned char 
 24366 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24367 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  1    wreg      void 
 24370 ;; Registers used:
 24371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24372 ;; Tracked objects:
 24373 ;;		On entry : 0/0
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24381 ;;Total ram usage:        7 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:   12
 24384 ;; This function calls:
 24385 ;;		___lldiv
 24386 ;;		___lmul
 24387 ;; This function is called by:
 24388 ;;		_Uart_InitUartModule
 24389 ;; This function uses a non-reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text113
 24393  0027C8                     __ptext113:
 24394                           	opt stack 0
 24395  0027C8                     _SetUartBaudRate:
 24396                           	opt stack 14
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;incstack = 0
 24400                           ;SetUartBaudRate@Module stored from wreg
 24401  0027C8  0100               	movlb	0	; () banked
 24402  0027CA  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 24403                           
 24404                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 24405  0027CC  0E00               	movlw	0
 24406  0027CE  0100               	movlb	0	; () banked
 24407  0027D0  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24408  0027D2  0E00               	movlw	0
 24409  0027D4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24410                           
 24411                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 24412  0027D6  0E00               	movlw	0
 24413  0027D8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24414                           
 24415                           ; BSR set to: 0
 24416                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 24417  0027DA  EE20 F002          	lfsr	2,2
 24418  0027DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24419  0027E0  26D9               	addwf	fsr2l,f,c
 24420  0027E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24421  0027E4  22DA               	addwfc	fsr2h,f,c
 24422  0027E6  50DF               	movf	indf2,w,c
 24423  0027E8  A4D8               	btfss	status,2,c
 24424  0027EA  D00B               	goto	l625
 24425                           
 24426                           ; BSR set to: 0
 24427  0027EC  EE20 F002          	lfsr	2,2
 24428  0027F0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24429  0027F2  26D9               	addwf	fsr2l,f,c
 24430  0027F4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24431  0027F6  22DA               	addwfc	fsr2h,f,c
 24432  0027F8  50DF               	movf	indf2,w,c
 24433  0027FA  A4D8               	btfss	status,2,c
 24434  0027FC  D002               	goto	l625
 24435                           
 24436                           ; BSR set to: 0
 24437                           ;uart_drv.c: 128: {
 24438                           ;uart_drv.c: 129: DivisionFactor = 64;
 24439  0027FE  0E40               	movlw	64
 24440  002800  D039               	goto	L29
 24441  002802                     l625:
 24442                           
 24443                           ; BSR set to: 0
 24444                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 24445                           
 24446                           ; BSR set to: 0
 24447  002802  EE20 F002          	lfsr	2,2
 24448  002806  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24449  002808  26D9               	addwf	fsr2l,f,c
 24450  00280A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24451  00280C  22DA               	addwfc	fsr2h,f,c
 24452  00280E  04DE               	decf	postinc2,w,c
 24453  002810  A4D8               	btfss	status,2,c
 24454  002812  D009               	goto	l627
 24455                           
 24456                           ; BSR set to: 0
 24457  002814  EE20 F002          	lfsr	2,2
 24458  002818  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24459  00281A  26D9               	addwf	fsr2l,f,c
 24460  00281C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24461  00281E  22DA               	addwfc	fsr2h,f,c
 24462  002820  50DF               	movf	indf2,w,c
 24463  002822  B4D8               	btfsc	status,2,c
 24464  002824  D012               	goto	u10750
 24465  002826                     l627:
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24469                           
 24470                           ; BSR set to: 0
 24471  002826  EE20 F002          	lfsr	2,2
 24472  00282A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24473  00282C  26D9               	addwf	fsr2l,f,c
 24474  00282E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24475  002830  22DA               	addwfc	fsr2h,f,c
 24476  002832  50DF               	movf	indf2,w,c
 24477  002834  A4D8               	btfss	status,2,c
 24478  002836  D00B               	goto	l629
 24479                           
 24480                           ; BSR set to: 0
 24481  002838  EE20 F002          	lfsr	2,2
 24482  00283C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24483  00283E  26D9               	addwf	fsr2l,f,c
 24484  002840  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24485  002842  22DA               	addwfc	fsr2h,f,c
 24486  002844  04DE               	decf	postinc2,w,c
 24487  002846  A4D8               	btfss	status,2,c
 24488  002848  D002               	goto	l629
 24489  00284A                     u10750:
 24490                           
 24491                           ; BSR set to: 0
 24492                           ;uart_drv.c: 136: {
 24493                           ;uart_drv.c: 137: DivisionFactor = 16;
 24494  00284A  0E10               	movlw	16
 24495  00284C  D013               	goto	L29
 24496  00284E                     l629:
 24497                           
 24498                           ; BSR set to: 0
 24499                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24500                           
 24501                           ; BSR set to: 0
 24502  00284E  EE20 F002          	lfsr	2,2
 24503  002852  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24504  002854  26D9               	addwf	fsr2l,f,c
 24505  002856  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24506  002858  22DA               	addwfc	fsr2h,f,c
 24507  00285A  04DE               	decf	postinc2,w,c
 24508  00285C  A4D8               	btfss	status,2,c
 24509  00285E  D00B               	goto	l631
 24510                           
 24511                           ; BSR set to: 0
 24512  002860  EE20 F002          	lfsr	2,2
 24513  002864  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24514  002866  26D9               	addwf	fsr2l,f,c
 24515  002868  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24516  00286A  22DA               	addwfc	fsr2h,f,c
 24517  00286C  04DE               	decf	postinc2,w,c
 24518  00286E  A4D8               	btfss	status,2,c
 24519  002870  D002               	goto	l631
 24520                           
 24521                           ; BSR set to: 0
 24522                           ;uart_drv.c: 140: {
 24523                           ;uart_drv.c: 141: DivisionFactor = 4;
 24524  002872  0E04               	movlw	4
 24525  002874                     L29:
 24526  002874  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24527  002876                     l631:
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;uart_drv.c: 146: }
 24531                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 24532                           
 24533                           ; BSR set to: 0
 24534                           
 24535                           ; BSR set to: 0
 24536                           
 24537                           ; BSR set to: 0
 24538                           
 24539                           ; BSR set to: 0
 24540                           
 24541                           ;uart_drv.c: 143: else
 24542                           ;uart_drv.c: 144: {
 24543                           
 24544                           ; BSR set to: 0
 24545  002876  EE20 F00D          	lfsr	2,13
 24546  00287A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24547  00287C  26D9               	addwf	fsr2l,f,c
 24548  00287E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24549  002880  22DA               	addwfc	fsr2h,f,c
 24550  002882  CFDE F089          	movff	postinc2,___lldiv@dividend
 24551  002886  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 24552  00288A  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 24553  00288E  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 24554  002892  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 24555  002894  6F7D               	movwf	___lmul@multiplier& (0+255),b
 24556  002896  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24557  002898  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24558  00289A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 24559  00289C  EE20 F011          	lfsr	2,17
 24560  0028A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24561  0028A2  26D9               	addwf	fsr2l,f,c
 24562  0028A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24563  0028A6  22DA               	addwfc	fsr2h,f,c
 24564  0028A8  CFDE F081          	movff	postinc2,___lmul@multiplicand
 24565  0028AC  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 24566  0028B0  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 24567  0028B4  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 24568  0028B8  ECE9  F027         	call	___lmul	;wreg free
 24569  0028BC  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 24570  0028C0  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 24571  0028C4  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 24572  0028C8  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 24573  0028CC  EC01  F025         	call	___lldiv	;wreg free
 24574  0028D0  0EFF               	movlw	255
 24575  0028D2  0100               	movlb	0	; () banked
 24576  0028D4  2589               	addwf	?___lldiv& (0+255),w,b
 24577  0028D6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24578  0028D8  0EFF               	movlw	255
 24579  0028DA  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 24580  0028DC  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24581                           
 24582                           ; BSR set to: 0
 24583                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 24584  0028DE  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 24585  0028E0  A4D8               	btfss	status,2,c
 24586  0028E2  D005               	goto	l633
 24587                           
 24588                           ; BSR set to: 0
 24589                           ;uart_drv.c: 152: {
 24590                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24591  0028E4  0E00               	movlw	0
 24592  0028E6  6E7F               	movwf	3967,c	;volatile
 24593                           
 24594                           ; BSR set to: 0
 24595                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24596  0028E8  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 24597                           
 24598                           ;uart_drv.c: 156: }
 24599  0028EC  0012               	return	
 24600  0028EE                     l633:
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 24604                           
 24605                           ; BSR set to: 0
 24606  0028EE  0E02               	movlw	2
 24607  0028F0  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 24608  0028F2  A4D8               	btfss	status,2,c
 24609  0028F4  0012               	return	
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;uart_drv.c: 158: {
 24613                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24614  0028F6  0E00               	movlw	0
 24615  0028F8  6E7D               	movwf	3965,c	;volatile
 24616                           
 24617                           ; BSR set to: 0
 24618                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24619  0028FA  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 24620                           
 24621                           ; BSR set to: 0
 24622  0028FE  0012               	return	
 24623  002900                     __end_of_SetUartBaudRate:
 24624                           	opt stack 0
 24625                           tosu	equ	0xFFF
 24626                           tosh	equ	0xFFE
 24627                           tosl	equ	0xFFD
 24628                           pclath	equ	0xFFA
 24629                           tblptru	equ	0xFF8
 24630                           tblptrh	equ	0xFF7
 24631                           tblptrl	equ	0xFF6
 24632                           tablat	equ	0xFF5
 24633                           prodh	equ	0xFF4
 24634                           prodl	equ	0xFF3
 24635                           intcon	equ	0xFF2
 24636                           intcon2	equ	0xFF1
 24637                           intcon3	equ	0xFF0
 24638                           indf0	equ	0xFEF
 24639                           postinc0	equ	0xFEE
 24640                           plusw0	equ	0xFEB
 24641                           fsr0h	equ	0xFEA
 24642                           fsr0l	equ	0xFE9
 24643                           wreg	equ	0xFE8
 24644                           indf1	equ	0xFE7
 24645                           postinc1	equ	0xFE6
 24646                           postdec1	equ	0xFE5
 24647                           plusw1	equ	0xFE3
 24648                           fsr1h	equ	0xFE2
 24649                           fsr1l	equ	0xFE1
 24650                           indf2	equ	0xFDF
 24651                           postinc2	equ	0xFDE
 24652                           postdec2	equ	0xFDD
 24653                           plusw2	equ	0xFDB
 24654                           fsr2h	equ	0xFDA
 24655                           fsr2l	equ	0xFD9
 24656                           status	equ	0xFD8
 24657                           
 24658 ;; *************** function ___lmul *****************
 24659 ;; Defined at:
 24660 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 24661 ;; Parameters:    Size  Location     Type
 24662 ;;  multiplier      4   29[BANK0 ] unsigned long 
 24663 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 24664 ;; Auto vars:     Size  Location     Type
 24665 ;;  product         4   37[BANK0 ] unsigned long 
 24666 ;; Return value:  Size  Location     Type
 24667 ;;                  4   29[BANK0 ] unsigned long 
 24668 ;; Registers used:
 24669 ;;		wreg, status,2, status,0
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24675 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24679 ;;Total ram usage:       12 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:   11
 24682 ;; This function calls:
 24683 ;;		Nothing
 24684 ;; This function is called by:
 24685 ;;		_Tmr_TmrBPrSet
 24686 ;;		_SetUartBaudRate
 24687 ;;		_strtol
 24688 ;; This function uses a non-reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text114
 24692  004FD2                     __ptext114:
 24693                           	opt stack 0
 24694  004FD2                     ___lmul:
 24695                           	opt stack 15
 24696                           
 24697                           ; BSR set to: 0
 24698                           ;incstack = 0
 24699  004FD2  0E00               	movlw	0
 24700  004FD4  0100               	movlb	0	; () banked
 24701  004FD6  6F85               	movwf	___lmul@product& (0+255),b
 24702  004FD8  0E00               	movlw	0
 24703  004FDA  6F86               	movwf	(___lmul@product+1)& (0+255),b
 24704  004FDC  0E00               	movlw	0
 24705  004FDE  6F87               	movwf	(___lmul@product+2)& (0+255),b
 24706  004FE0  0E00               	movlw	0
 24707  004FE2  6F88               	movwf	(___lmul@product+3)& (0+255),b
 24708  004FE4                     
 24709                           ; BSR set to: 0
 24710                           
 24711                           ; BSR set to: 0
 24712  004FE4  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 24713  004FE6  D008               	goto	l2605
 24714                           
 24715                           ; BSR set to: 0
 24716  004FE8  5181               	movf	___lmul@multiplicand& (0+255),w,b
 24717  004FEA  2785               	addwf	___lmul@product& (0+255),f,b
 24718  004FEC  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24719  004FEE  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 24720  004FF0  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24721  004FF2  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 24722  004FF4  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24723  004FF6  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 24724  004FF8                     l2605:
 24725                           
 24726                           ; BSR set to: 0
 24727                           
 24728                           ; BSR set to: 0
 24729  004FF8  90D8               	bcf	status,0,c
 24730  004FFA  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 24731  004FFC  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24732  004FFE  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24733  005000  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24734                           
 24735                           ; BSR set to: 0
 24736  005002  90D8               	bcf	status,0,c
 24737  005004  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24738  005006  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24739  005008  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24740  00500A  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 24741  00500C  517D               	movf	___lmul@multiplier& (0+255),w,b
 24742  00500E  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24743  005010  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24744  005012  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24745  005014  A4D8               	btfss	status,2,c
 24746  005016  D7E6               	goto	l2604
 24747                           
 24748                           ; BSR set to: 0
 24749  005018  C085  F07D         	movff	___lmul@product,?___lmul
 24750  00501C  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 24751  005020  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 24752  005024  C088  F080         	movff	___lmul@product+3,?___lmul+3
 24753                           
 24754                           ; BSR set to: 0
 24755  005028  0012               	return		;funcret
 24756  00502A                     __end_of___lmul:
 24757                           	opt stack 0
 24758                           tosu	equ	0xFFF
 24759                           tosh	equ	0xFFE
 24760                           tosl	equ	0xFFD
 24761                           pclath	equ	0xFFA
 24762                           tblptru	equ	0xFF8
 24763                           tblptrh	equ	0xFF7
 24764                           tblptrl	equ	0xFF6
 24765                           tablat	equ	0xFF5
 24766                           prodh	equ	0xFF4
 24767                           prodl	equ	0xFF3
 24768                           intcon	equ	0xFF2
 24769                           intcon2	equ	0xFF1
 24770                           intcon3	equ	0xFF0
 24771                           indf0	equ	0xFEF
 24772                           postinc0	equ	0xFEE
 24773                           plusw0	equ	0xFEB
 24774                           fsr0h	equ	0xFEA
 24775                           fsr0l	equ	0xFE9
 24776                           wreg	equ	0xFE8
 24777                           indf1	equ	0xFE7
 24778                           postinc1	equ	0xFE6
 24779                           postdec1	equ	0xFE5
 24780                           plusw1	equ	0xFE3
 24781                           fsr1h	equ	0xFE2
 24782                           fsr1l	equ	0xFE1
 24783                           indf2	equ	0xFDF
 24784                           postinc2	equ	0xFDE
 24785                           postdec2	equ	0xFDD
 24786                           plusw2	equ	0xFDB
 24787                           fsr2h	equ	0xFDA
 24788                           fsr2l	equ	0xFD9
 24789                           status	equ	0xFD8
 24790                           
 24791 ;; *************** function _UartSetConfigLow *****************
 24792 ;; Defined at:
 24793 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24794 ;; Parameters:    Size  Location     Type
 24795 ;;		None
 24796 ;; Auto vars:     Size  Location     Type
 24797 ;;		None
 24798 ;; Return value:  Size  Location     Type
 24799 ;;                  1    wreg      void 
 24800 ;; Registers used:
 24801 ;;		wreg, status,2
 24802 ;; Tracked objects:
 24803 ;;		On entry : 0/0
 24804 ;;		On exit  : 0/0
 24805 ;;		Unchanged: 0/0
 24806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24811 ;;Total ram usage:        0 bytes
 24812 ;; Hardware stack levels used:    1
 24813 ;; Hardware stack levels required when called:   11
 24814 ;; This function calls:
 24815 ;;		Nothing
 24816 ;; This function is called by:
 24817 ;;		_ConfigureModem
 24818 ;; This function uses a non-reentrant model
 24819 ;;
 24820                           
 24821                           	psect	text115
 24822  00502A                     __ptext115:
 24823                           	opt stack 0
 24824  00502A                     _UartSetConfigLow:
 24825                           	opt stack 15
 24826                           
 24827                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 24828                           
 24829                           ; BSR set to: 0
 24830                           ;incstack = 0
 24831  00502A  0E01               	movlw	1
 24832  00502C  0103               	movlb	3	; () banked
 24833  00502E  6F28               	movwf	_UartConfig& (0+255),b
 24834                           
 24835                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 24836  005030  0E00               	movlw	0
 24837  005032  6F29               	movwf	(_UartConfig+1)& (0+255),b
 24838                           
 24839                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 24840  005034  0E00               	movlw	0
 24841  005036  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 24842                           
 24843                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 24844  005038  0E00               	movlw	0
 24845  00503A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 24846                           
 24847                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 24848  00503C  0E00               	movlw	0
 24849  00503E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 24850                           
 24851                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 24852  005040  0E00               	movlw	0
 24853  005042  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 24854                           
 24855                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 24856  005044  0E01               	movlw	1
 24857  005046  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 24858                           
 24859                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 24860  005048  0E01               	movlw	1
 24861  00504A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 24862                           
 24863                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 24864  00504C  0E00               	movlw	0
 24865  00504E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 24866                           
 24867                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 24868  005050  0E00               	movlw	0
 24869  005052  6F31               	movwf	(_UartConfig+9)& (0+255),b
 24870                           
 24871                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 24872  005054  0E00               	movlw	0
 24873  005056  6F32               	movwf	(_UartConfig+10)& (0+255),b
 24874                           
 24875                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24876  005058  0E00               	movlw	0
 24877  00505A  6F33               	movwf	(_UartConfig+11)& (0+255),b
 24878                           
 24879                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24880  00505C  0E01               	movlw	1
 24881  00505E  6F34               	movwf	(_UartConfig+12)& (0+255),b
 24882                           
 24883                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 24884  005060  0E00               	movlw	0
 24885  005062  6F35               	movwf	(_UartConfig+13)& (0+255),b
 24886  005064  0E6C               	movlw	108
 24887  005066  6F36               	movwf	(_UartConfig+14)& (0+255),b
 24888  005068  0EDC               	movlw	220
 24889  00506A  6F37               	movwf	(_UartConfig+15)& (0+255),b
 24890  00506C  0E02               	movlw	2
 24891  00506E  6F38               	movwf	(_UartConfig+16)& (0+255),b
 24892                           
 24893                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24894  005070  0E80               	movlw	128
 24895  005072  6F39               	movwf	(_UartConfig+17)& (0+255),b
 24896  005074  0E25               	movlw	37
 24897  005076  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 24898  005078  0E00               	movlw	0
 24899  00507A  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 24900  00507C  0E00               	movlw	0
 24901  00507E  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 24902                           
 24903                           ; BSR set to: 3
 24904  005080  0012               	return		;funcret
 24905  005082                     __end_of_UartSetConfigLow:
 24906                           	opt stack 0
 24907                           tosu	equ	0xFFF
 24908                           tosh	equ	0xFFE
 24909                           tosl	equ	0xFFD
 24910                           pclath	equ	0xFFA
 24911                           tblptru	equ	0xFF8
 24912                           tblptrh	equ	0xFF7
 24913                           tblptrl	equ	0xFF6
 24914                           tablat	equ	0xFF5
 24915                           prodh	equ	0xFF4
 24916                           prodl	equ	0xFF3
 24917                           intcon	equ	0xFF2
 24918                           intcon2	equ	0xFF1
 24919                           intcon3	equ	0xFF0
 24920                           indf0	equ	0xFEF
 24921                           postinc0	equ	0xFEE
 24922                           plusw0	equ	0xFEB
 24923                           fsr0h	equ	0xFEA
 24924                           fsr0l	equ	0xFE9
 24925                           wreg	equ	0xFE8
 24926                           indf1	equ	0xFE7
 24927                           postinc1	equ	0xFE6
 24928                           postdec1	equ	0xFE5
 24929                           plusw1	equ	0xFE3
 24930                           fsr1h	equ	0xFE2
 24931                           fsr1l	equ	0xFE1
 24932                           indf2	equ	0xFDF
 24933                           postinc2	equ	0xFDE
 24934                           postdec2	equ	0xFDD
 24935                           plusw2	equ	0xFDB
 24936                           fsr2h	equ	0xFDA
 24937                           fsr2l	equ	0xFD9
 24938                           status	equ	0xFD8
 24939                           
 24940 ;; *************** function _CheckModem *****************
 24941 ;; Defined at:
 24942 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24943 ;; Parameters:    Size  Location     Type
 24944 ;;		None
 24945 ;; Auto vars:     Size  Location     Type
 24946 ;;		None
 24947 ;; Return value:  Size  Location     Type
 24948 ;;                  1    wreg      void 
 24949 ;; Registers used:
 24950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24951 ;; Tracked objects:
 24952 ;;		On entry : 0/0
 24953 ;;		On exit  : 0/0
 24954 ;;		Unchanged: 0/0
 24955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24960 ;;Total ram usage:        0 bytes
 24961 ;; Hardware stack levels used:    1
 24962 ;; Hardware stack levels required when called:   14
 24963 ;; This function calls:
 24964 ;;		_GenerateEvt
 24965 ;;		_OsTmr_GetTimerStatus
 24966 ;;		_OsTmr_StartTimer
 24967 ;;		_ReceiveEvt
 24968 ;;		_Uart_WriteConstString
 24969 ;; This function is called by:
 24970 ;;		_Mdm_MainTask
 24971 ;; This function uses a non-reentrant model
 24972 ;;
 24973                           
 24974                           	psect	text116
 24975  0022AA                     __ptext116:
 24976                           	opt stack 0
 24977  0022AA                     _CheckModem:
 24978                           	opt stack 13
 24979                           
 24980                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 24981                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24982                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 24983                           
 24984                           ; BSR set to: 3
 24985                           ;incstack = 0
 24986  0022AA  D096               	goto	l976
 24987  0022AC                     
 24988                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 24989  0022AC  0EED               	movlw	low CheckModem@Timeout
 24990  0022AE  0100               	movlb	0	; () banked
 24991  0022B0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24992  0022B2  0E03               	movlw	high CheckModem@Timeout
 24993  0022B4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24994  0022B6  0ED0               	movlw	208
 24995  0022B8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24996  0022BA  0E07               	movlw	7
 24997  0022BC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24998  0022BE  0E00               	movlw	0
 24999  0022C0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25000  0022C2  0E00               	movlw	0
 25001  0022C4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25002  0022C6  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25003                           
 25004                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 25005  0022CA  0E01               	movlw	1
 25006  0022CC  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25007                           
 25008                           ;mdm_gsm_gprs.c: 290: break;
 25009  0022CE  0012               	return	
 25010  0022D0                     
 25011                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25012  0022D0  0EED               	movlw	low CheckModem@Timeout
 25013  0022D2  0100               	movlb	0	; () banked
 25014  0022D4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25015  0022D6  0E03               	movlw	high CheckModem@Timeout
 25016  0022D8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25017  0022DA  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25018  0022DE  06E8               	decf	wreg,f,c
 25019  0022E0  A4D8               	btfss	status,2,c
 25020  0022E2  0012               	return	
 25021                           
 25022                           ;mdm_gsm_gprs.c: 295: {
 25023                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 25024  0022E4  0E02               	movlw	2
 25025  0022E6  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25026                           
 25027                           ;mdm_gsm_gprs.c: 298: }
 25028                           ;mdm_gsm_gprs.c: 299: break;
 25029  0022E8  0012               	return	
 25030  0022EA                     
 25031                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 25032  0022EA  0EE5               	movlw	low STR_1
 25033  0022EC  0100               	movlb	0	; () banked
 25034  0022EE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25035  0022F0  0EFF               	movlw	high STR_1
 25036  0022F2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25037  0022F4  0E01               	movlw	1
 25038  0022F6  EC3F  F02B         	call	_Uart_WriteConstString
 25039                           
 25040                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 25041  0022FA  0EED               	movlw	low CheckModem@Timeout
 25042  0022FC  0100               	movlb	0	; () banked
 25043  0022FE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25044  002300  0E03               	movlw	high CheckModem@Timeout
 25045  002302  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25046  002304  0ED0               	movlw	208
 25047  002306  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25048  002308  0E07               	movlw	7
 25049  00230A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25050  00230C  0E00               	movlw	0
 25051  00230E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25052  002310  0E00               	movlw	0
 25053  002312  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25054  002314  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25055                           
 25056                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 25057  002318  0E03               	movlw	3
 25058  00231A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25059                           
 25060                           ;mdm_gsm_gprs.c: 308: break;
 25061  00231C  0012               	return	
 25062  00231E                     
 25063                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 25064  00231E  0E3C               	movlw	low _NewStringReceived
 25065  002320  0100               	movlb	0	; () banked
 25066  002322  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25067  002324  0E00               	movlw	high _NewStringReceived
 25068  002326  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25069  002328  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 25070  00232C  0900               	iorlw	0
 25071  00232E  B4D8               	btfsc	status,2,c
 25072  002330  D02F               	goto	l983
 25073                           
 25074                           ;mdm_gsm_gprs.c: 313: {
 25075                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25076  002332  CC58  FFE8         	movff	_RxBuffer,wreg
 25077  002336  0A4F               	xorlw	79
 25078  002338  A4D8               	btfss	status,2,c
 25079  00233A  D005               	goto	u12200
 25080  00233C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25081  002340  0A4B               	xorlw	75
 25082  002342  B4D8               	btfsc	status,2,c
 25083  002344  D00A               	goto	u12220
 25084  002346                     u12200:
 25085  002346  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25086  00234A  0A4F               	xorlw	79
 25087  00234C  A4D8               	btfss	status,2,c
 25088  00234E  0012               	return	
 25089  002350  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25090  002354  0A4B               	xorlw	75
 25091  002356  A4D8               	btfss	status,2,c
 25092  002358  0012               	return	
 25093  00235A                     u12220:
 25094                           
 25095                           ;mdm_gsm_gprs.c: 316: {
 25096                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 25097  00235A  0E02               	movlw	2
 25098  00235C  0100               	movlb	0	; () banked
 25099  00235E  6FCF               	movwf	_MdmStatus& (0+255),b
 25100                           
 25101                           ; BSR set to: 0
 25102                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 25103  002360  0EDE               	movlw	low _MdmOnOffPulseRequest
 25104  002362  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25105  002364  0E00               	movlw	high _MdmOnOffPulseRequest
 25106  002366  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25107  002368  EC47  F02F         	call	_GenerateEvt	;wreg free
 25108                           
 25109                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 25110  00236C  0EED               	movlw	low CheckModem@Timeout
 25111  00236E  0100               	movlb	0	; () banked
 25112  002370  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25113  002372  0E03               	movlw	high CheckModem@Timeout
 25114  002374  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25115  002376  0EE8               	movlw	232
 25116  002378  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25117  00237A  0E03               	movlw	3
 25118  00237C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25119  00237E  0E00               	movlw	0
 25120  002380  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25121  002382  0E00               	movlw	0
 25122  002384  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25123  002386  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25124                           
 25125                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 25126  00238A  0E04               	movlw	4
 25127  00238C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25128                           
 25129                           ;mdm_gsm_gprs.c: 324: }
 25130                           ;mdm_gsm_gprs.c: 325: }
 25131  00238E  0012               	return	
 25132  002390                     l983:
 25133                           
 25134                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25135  002390  0EED               	movlw	low CheckModem@Timeout
 25136  002392  0100               	movlb	0	; () banked
 25137  002394  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25138  002396  0E03               	movlw	high CheckModem@Timeout
 25139  002398  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25140  00239A  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25141  00239E  06E8               	decf	wreg,f,c
 25142  0023A0  A4D8               	btfss	status,2,c
 25143  0023A2  0012               	return	
 25144                           
 25145                           ;mdm_gsm_gprs.c: 327: {
 25146                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 25147  0023A4  0E00               	movlw	0
 25148  0023A6  0100               	movlb	0	; () banked
 25149  0023A8  6FCF               	movwf	_MdmStatus& (0+255),b
 25150                           
 25151                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 25152  0023AA  0E01               	movlw	1
 25153  0023AC  6E2B               	movwf	_ComChecCompleted,c
 25154                           
 25155                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 25156  0023AE  0E05               	movlw	5
 25157  0023B0  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;mdm_gsm_gprs.c: 338: }
 25161                           ;mdm_gsm_gprs.c: 339: break;
 25162                           
 25163                           ; BSR set to: 0
 25164                           
 25165                           ;mdm_gsm_gprs.c: 335: else
 25166                           ;mdm_gsm_gprs.c: 336: {
 25167                           
 25168                           ; BSR set to: 0
 25169                           
 25170                           ;mdm_gsm_gprs.c: 334: }
 25171  0023B2  0012               	return	
 25172  0023B4                     
 25173                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25174                           
 25175                           ; BSR set to: 0
 25176  0023B4  0EED               	movlw	low CheckModem@Timeout
 25177  0023B6  0100               	movlb	0	; () banked
 25178  0023B8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25179  0023BA  0E03               	movlw	high CheckModem@Timeout
 25180  0023BC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25181  0023BE  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25182  0023C2  06E8               	decf	wreg,f,c
 25183  0023C4  A4D8               	btfss	status,2,c
 25184  0023C6  0012               	return	
 25185                           
 25186                           ;mdm_gsm_gprs.c: 344: {
 25187                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 25188  0023C8  0E00               	movlw	0
 25189  0023CA  0100               	movlb	0	; () banked
 25190  0023CC  6FCF               	movwf	_MdmStatus& (0+255),b
 25191                           
 25192                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 25193  0023CE  0E01               	movlw	1
 25194  0023D0  6E2B               	movwf	_ComChecCompleted,c
 25195                           
 25196                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 25197  0023D2  0E05               	movlw	5
 25198  0023D4  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;mdm_gsm_gprs.c: 360: }
 25202                           
 25203                           ; BSR set to: 0
 25204                           ;mdm_gsm_gprs.c: 359: break;
 25205                           
 25206                           ;mdm_gsm_gprs.c: 358: default:
 25207                           
 25208                           ; BSR set to: 0
 25209                           ;mdm_gsm_gprs.c: 356: break;
 25210                           
 25211                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 25212                           
 25213                           ; BSR set to: 0
 25214                           ;mdm_gsm_gprs.c: 351: }
 25215                           ;mdm_gsm_gprs.c: 352: break;
 25216  0023D6  0012               	return	
 25217  0023D8                     l976:
 25218                           
 25219                           ; BSR set to: 0
 25220  0023D8  502A               	movf	CheckModem@CheckMdmSts,w,c
 25221                           
 25222                           ; Switch size 1, requested type "space"
 25223                           ; Number of cases is 6, Range of values is 0 to 5
 25224                           ; switch strategies available:
 25225                           ; Name         Instructions Cycles
 25226                           ; simple_byte           19    10 (average)
 25227                           ;	Chosen strategy is simple_byte
 25228  0023DA  0A00               	xorlw	0	; case 0
 25229  0023DC  B4D8               	btfsc	status,2,c
 25230  0023DE  D766               	goto	l977
 25231  0023E0  0A01               	xorlw	1	; case 1
 25232  0023E2  B4D8               	btfsc	status,2,c
 25233  0023E4  D775               	goto	l979
 25234  0023E6  0A03               	xorlw	3	; case 2
 25235  0023E8  B4D8               	btfsc	status,2,c
 25236  0023EA  D77F               	goto	l981
 25237  0023EC  0A01               	xorlw	1	; case 3
 25238  0023EE  B4D8               	btfsc	status,2,c
 25239  0023F0  D796               	goto	l982
 25240  0023F2  0A07               	xorlw	7	; case 4
 25241  0023F4  B4D8               	btfsc	status,2,c
 25242  0023F6  D7DE               	goto	l992
 25243  0023F8  0A01               	xorlw	1	; case 5
 25244  0023FA  0012               	return	
 25245  0023FC                     __end_of_CheckModem:
 25246                           	opt stack 0
 25247                           tosu	equ	0xFFF
 25248                           tosh	equ	0xFFE
 25249                           tosl	equ	0xFFD
 25250                           pclath	equ	0xFFA
 25251                           tblptru	equ	0xFF8
 25252                           tblptrh	equ	0xFF7
 25253                           tblptrl	equ	0xFF6
 25254                           tablat	equ	0xFF5
 25255                           prodh	equ	0xFF4
 25256                           prodl	equ	0xFF3
 25257                           intcon	equ	0xFF2
 25258                           intcon2	equ	0xFF1
 25259                           intcon3	equ	0xFF0
 25260                           indf0	equ	0xFEF
 25261                           postinc0	equ	0xFEE
 25262                           plusw0	equ	0xFEB
 25263                           fsr0h	equ	0xFEA
 25264                           fsr0l	equ	0xFE9
 25265                           wreg	equ	0xFE8
 25266                           indf1	equ	0xFE7
 25267                           postinc1	equ	0xFE6
 25268                           postdec1	equ	0xFE5
 25269                           plusw1	equ	0xFE3
 25270                           fsr1h	equ	0xFE2
 25271                           fsr1l	equ	0xFE1
 25272                           indf2	equ	0xFDF
 25273                           postinc2	equ	0xFDE
 25274                           postdec2	equ	0xFDD
 25275                           plusw2	equ	0xFDB
 25276                           fsr2h	equ	0xFDA
 25277                           fsr2l	equ	0xFD9
 25278                           status	equ	0xFD8
 25279                           
 25280 ;; *************** function _MdmCntSm *****************
 25281 ;; Defined at:
 25282 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25283 ;; Parameters:    Size  Location     Type
 25284 ;;		None
 25285 ;; Auto vars:     Size  Location     Type
 25286 ;;		None
 25287 ;; Return value:  Size  Location     Type
 25288 ;;                  1    wreg      void 
 25289 ;; Registers used:
 25290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25291 ;; Tracked objects:
 25292 ;;		On entry : 0/0
 25293 ;;		On exit  : 0/0
 25294 ;;		Unchanged: 0/0
 25295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25300 ;;Total ram usage:        0 bytes
 25301 ;; Hardware stack levels used:    1
 25302 ;; Hardware stack levels required when called:   12
 25303 ;; This function calls:
 25304 ;;		_InitModemInterface
 25305 ;;		_ReceiveEvt
 25306 ;; This function is called by:
 25307 ;;		_Mdm_DrvMainFn
 25308 ;; This function uses a non-reentrant model
 25309 ;;
 25310                           
 25311                           	psect	text117
 25312  0041B6                     __ptext117:
 25313                           	opt stack 0
 25314  0041B6                     _MdmCntSm:
 25315                           	opt stack 15
 25316                           
 25317                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25318                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25319                           ;mdm_drv.c: 204: switch (MdmCntState)
 25320                           
 25321                           ;incstack = 0
 25322  0041B6  D045               	goto	l315
 25323  0041B8                     
 25324                           ;mdm_drv.c: 208: InitModemInterface();
 25325  0041B8  ECFA  F02F         	call	_InitModemInterface	;wreg free
 25326                           
 25327                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25328  0041BC  0E01               	movlw	1
 25329  0041BE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25330                           
 25331                           ;mdm_drv.c: 211: break;
 25332  0041C0  0012               	return	
 25333  0041C2                     
 25334                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25335  0041C2  0EDE               	movlw	low _MdmOnOffPulseRequest
 25336  0041C4  0100               	movlb	0	; () banked
 25337  0041C6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25338  0041C8  0E00               	movlw	high _MdmOnOffPulseRequest
 25339  0041CA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25340  0041CC  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 25341  0041D0  0900               	iorlw	0
 25342  0041D2  B4D8               	btfsc	status,2,c
 25343  0041D4  D009               	goto	l319
 25344                           
 25345                           ;mdm_drv.c: 216: {
 25346                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25347  0041D6  0E02               	movlw	2
 25348  0041D8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25349                           
 25350                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 25351  0041DA  8284               	bsf	3972,1,c	;volatile
 25352                           
 25353                           ;mdm_drv.c: 222: Counter = 0;
 25354  0041DC  0E00               	movlw	0
 25355  0041DE  0102               	movlb	2	; () banked
 25356  0041E0  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25357  0041E2  0E00               	movlw	0
 25358  0041E4  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 25359                           
 25360                           ;mdm_drv.c: 223: }
 25361  0041E6  0012               	return	
 25362  0041E8                     l319:
 25363                           
 25364                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 25365                           
 25366                           ; BSR set to: 2
 25367  0041E8  0E3D               	movlw	low _MdmResetRequest
 25368  0041EA  0100               	movlb	0	; () banked
 25369  0041EC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25370  0041EE  0E00               	movlw	high _MdmResetRequest
 25371  0041F0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25372  0041F2  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 25373  0041F6  0900               	iorlw	0
 25374  0041F8  B4D8               	btfsc	status,2,c
 25375  0041FA  0012               	return	
 25376                           
 25377                           ;mdm_drv.c: 225: {
 25378                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 25379  0041FC  0E03               	movlw	3
 25380  0041FE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25381                           
 25382                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 25383  004200  8084               	bsf	3972,0,c	;volatile
 25384                           
 25385                           ;mdm_drv.c: 231: Counter = 0;
 25386  004202  0E00               	movlw	0
 25387  004204  0102               	movlb	2	; () banked
 25388  004206  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25389  004208  0E00               	movlw	0
 25390  00420A  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 25391                           
 25392                           ; BSR set to: 2
 25393                           ;mdm_drv.c: 236: }
 25394                           ;mdm_drv.c: 237: break;
 25395                           
 25396                           ; BSR set to: 2
 25397                           
 25398                           ;mdm_drv.c: 233: else
 25399                           ;mdm_drv.c: 234: {
 25400                           
 25401                           ; BSR set to: 2
 25402                           
 25403                           ;mdm_drv.c: 232: }
 25404  00420C  0012               	return	
 25405  00420E                     
 25406                           ;mdm_drv.c: 241: Counter++;
 25407                           
 25408                           ; BSR set to: 2
 25409  00420E  0102               	movlb	2	; () banked
 25410  004210  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25411  004212  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25412                           
 25413                           ; BSR set to: 2
 25414                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 25415  004214  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25416  004216  E104               	bnz	u12140
 25417  004218  0E96               	movlw	150
 25418  00421A  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 25419  00421C  A0D8               	btfss	status,0,c
 25420  00421E  0012               	return	
 25421  004220                     u12140:
 25422                           
 25423                           ; BSR set to: 2
 25424                           ;mdm_drv.c: 244: {
 25425                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 25426  004220  9284               	bcf	3972,1,c	;volatile
 25427                           
 25428                           ; BSR set to: 2
 25429                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 25430  004222  0E01               	movlw	1
 25431  004224  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25432                           
 25433                           ; BSR set to: 2
 25434                           ;mdm_drv.c: 249: }
 25435                           ;mdm_drv.c: 250: break;
 25436  004226  0012               	return	
 25437  004228                     
 25438                           ;mdm_drv.c: 254: Counter++;
 25439                           
 25440                           ; BSR set to: 2
 25441  004228  0102               	movlb	2	; () banked
 25442  00422A  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25443  00422C  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25444                           
 25445                           ; BSR set to: 2
 25446                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 25447  00422E  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25448  004230  E104               	bnz	u12150
 25449  004232  0E0A               	movlw	10
 25450  004234  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 25451  004236  A0D8               	btfss	status,0,c
 25452  004238  0012               	return	
 25453  00423A                     u12150:
 25454                           
 25455                           ; BSR set to: 2
 25456                           ;mdm_drv.c: 257: {
 25457                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 25458  00423A  9084               	bcf	3972,0,c	;volatile
 25459                           
 25460                           ; BSR set to: 2
 25461                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 25462  00423C  0E01               	movlw	1
 25463  00423E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25464                           
 25465                           ; BSR set to: 2
 25466                           ;mdm_drv.c: 267: }
 25467                           
 25468                           ; BSR set to: 2
 25469                           ;mdm_drv.c: 266: break;
 25470                           
 25471                           ;mdm_drv.c: 265: default:
 25472                           
 25473                           ; BSR set to: 2
 25474                           ;mdm_drv.c: 262: }
 25475                           ;mdm_drv.c: 263: break;
 25476  004240  0012               	return	
 25477  004242                     l315:
 25478                           
 25479                           ; BSR set to: 2
 25480  004242  502E               	movf	MdmCntSm@MdmCntState,w,c
 25481                           
 25482                           ; Switch size 1, requested type "space"
 25483                           ; Number of cases is 4, Range of values is 0 to 3
 25484                           ; switch strategies available:
 25485                           ; Name         Instructions Cycles
 25486                           ; simple_byte           13     7 (average)
 25487                           ;	Chosen strategy is simple_byte
 25488  004244  0A00               	xorlw	0	; case 0
 25489  004246  B4D8               	btfsc	status,2,c
 25490  004248  D7B7               	goto	l316
 25491  00424A  0A01               	xorlw	1	; case 1
 25492  00424C  B4D8               	btfsc	status,2,c
 25493  00424E  D7B9               	goto	l318
 25494  004250  0A03               	xorlw	3	; case 2
 25495  004252  B4D8               	btfsc	status,2,c
 25496  004254  D7DC               	goto	l323
 25497  004256  0A01               	xorlw	1	; case 3
 25498  004258  A4D8               	btfss	status,2,c
 25499  00425A  0012               	return	
 25500  00425C  D7E5               	goto	l325
 25501  00425E                     __end_of_MdmCntSm:
 25502                           	opt stack 0
 25503                           tosu	equ	0xFFF
 25504                           tosh	equ	0xFFE
 25505                           tosl	equ	0xFFD
 25506                           pclath	equ	0xFFA
 25507                           tblptru	equ	0xFF8
 25508                           tblptrh	equ	0xFF7
 25509                           tblptrl	equ	0xFF6
 25510                           tablat	equ	0xFF5
 25511                           prodh	equ	0xFF4
 25512                           prodl	equ	0xFF3
 25513                           intcon	equ	0xFF2
 25514                           intcon2	equ	0xFF1
 25515                           intcon3	equ	0xFF0
 25516                           indf0	equ	0xFEF
 25517                           postinc0	equ	0xFEE
 25518                           plusw0	equ	0xFEB
 25519                           fsr0h	equ	0xFEA
 25520                           fsr0l	equ	0xFE9
 25521                           wreg	equ	0xFE8
 25522                           indf1	equ	0xFE7
 25523                           postinc1	equ	0xFE6
 25524                           postdec1	equ	0xFE5
 25525                           plusw1	equ	0xFE3
 25526                           fsr1h	equ	0xFE2
 25527                           fsr1l	equ	0xFE1
 25528                           indf2	equ	0xFDF
 25529                           postinc2	equ	0xFDE
 25530                           postdec2	equ	0xFDD
 25531                           plusw2	equ	0xFDB
 25532                           fsr2h	equ	0xFDA
 25533                           fsr2l	equ	0xFD9
 25534                           status	equ	0xFD8
 25535                           
 25536 ;; *************** function _InitModemInterface *****************
 25537 ;; Defined at:
 25538 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25539 ;; Parameters:    Size  Location     Type
 25540 ;;		None
 25541 ;; Auto vars:     Size  Location     Type
 25542 ;;		None
 25543 ;; Return value:  Size  Location     Type
 25544 ;;                  1    wreg      void 
 25545 ;; Registers used:
 25546 ;;		None
 25547 ;; Tracked objects:
 25548 ;;		On entry : 0/0
 25549 ;;		On exit  : 0/0
 25550 ;;		Unchanged: 0/0
 25551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25556 ;;Total ram usage:        0 bytes
 25557 ;; Hardware stack levels used:    1
 25558 ;; Hardware stack levels required when called:   11
 25559 ;; This function calls:
 25560 ;;		Nothing
 25561 ;; This function is called by:
 25562 ;;		_MdmCntSm
 25563 ;; This function uses a non-reentrant model
 25564 ;;
 25565                           
 25566                           	psect	text118
 25567  005FF4                     __ptext118:
 25568                           	opt stack 0
 25569  005FF4                     _InitModemInterface:
 25570                           	opt stack 15
 25571                           
 25572                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 25573                           
 25574                           ;incstack = 0
 25575  005FF4  9096               	bcf	3990,0,c	;volatile
 25576                           
 25577                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 25578  005FF6  9296               	bcf	3990,1,c	;volatile
 25579                           
 25580                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 25581  005FF8  8496               	bsf	3990,2,c	;volatile
 25582  005FFA  0012               	return		;funcret
 25583  005FFC                     __end_of_InitModemInterface:
 25584                           	opt stack 0
 25585                           tosu	equ	0xFFF
 25586                           tosh	equ	0xFFE
 25587                           tosl	equ	0xFFD
 25588                           pclath	equ	0xFFA
 25589                           tblptru	equ	0xFF8
 25590                           tblptrh	equ	0xFF7
 25591                           tblptrl	equ	0xFF6
 25592                           tablat	equ	0xFF5
 25593                           prodh	equ	0xFF4
 25594                           prodl	equ	0xFF3
 25595                           intcon	equ	0xFF2
 25596                           intcon2	equ	0xFF1
 25597                           intcon3	equ	0xFF0
 25598                           indf0	equ	0xFEF
 25599                           postinc0	equ	0xFEE
 25600                           plusw0	equ	0xFEB
 25601                           fsr0h	equ	0xFEA
 25602                           fsr0l	equ	0xFE9
 25603                           wreg	equ	0xFE8
 25604                           indf1	equ	0xFE7
 25605                           postinc1	equ	0xFE6
 25606                           postdec1	equ	0xFE5
 25607                           plusw1	equ	0xFE3
 25608                           fsr1h	equ	0xFE2
 25609                           fsr1l	equ	0xFE1
 25610                           indf2	equ	0xFDF
 25611                           postinc2	equ	0xFDE
 25612                           postdec2	equ	0xFDD
 25613                           plusw2	equ	0xFDB
 25614                           fsr2h	equ	0xFDA
 25615                           fsr2l	equ	0xFD9
 25616                           status	equ	0xFD8
 25617                           
 25618 ;; *************** function _InitGprsNetwork *****************
 25619 ;; Defined at:
 25620 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25621 ;; Parameters:    Size  Location     Type
 25622 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 25623 ;;		 -> NULL(0), 
 25624 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 25625 ;; Auto vars:     Size  Location     Type
 25626 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25627 ;;  Index           1   50[BANK1 ] unsigned char 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;                  1    wreg      enum E8905
 25630 ;; Registers used:
 25631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/0
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25637 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25638 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25639 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25640 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25641 ;;Total ram usage:       56 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:   14
 25644 ;; This function calls:
 25645 ;;		_ClearBuffer
 25646 ;;		_OsTmr_GetTimerStatus
 25647 ;;		_OsTmr_StartTimer
 25648 ;;		_ReceiveEvt
 25649 ;;		_StringCopy
 25650 ;;		_Uart_WriteConstString
 25651 ;;		_Uart_WriteString
 25652 ;; This function is called by:
 25653 ;;		_MdmHttp_MainTask
 25654 ;; This function uses a non-reentrant model
 25655 ;;
 25656                           
 25657                           	psect	text119
 25658  000DC8                     __ptext119:
 25659                           	opt stack 0
 25660  000DC8                     _InitGprsNetwork:
 25661                           	opt stack 13
 25662                           
 25663                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 25664                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 25665                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 25666                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 25667                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 25668                           
 25669                           ;incstack = 0
 25670  000DC8  0E00               	movlw	0
 25671  000DCA  0101               	movlb	1	; () banked
 25672  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25673                           
 25674                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 25675  000DCE  D154               	goto	l1202
 25676  000DD0                     
 25677                           ; BSR set to: 1
 25678                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 25679                           
 25680                           ; BSR set to: 1
 25681  000DD0  0ED8               	movlw	low _InitNetwork
 25682  000DD2  0100               	movlb	0	; () banked
 25683  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25684  000DD6  0E00               	movlw	high _InitNetwork
 25685  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25686  000DDA  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 25687  000DDE  0900               	iorlw	0
 25688  000DE0  B4D8               	btfsc	status,2,c
 25689  000DE2  D166               	goto	l1205
 25690                           
 25691                           ;mdm_gsm_gprs_http.c: 137: {
 25692                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 25693  000DE4  0E01               	movlw	1
 25694  000DE6  D141               	goto	L69
 25695  000DE8                     
 25696                           ; BSR set to: 1
 25697                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 25698                           
 25699                           ; BSR set to: 1
 25700  000DE8  0EB6               	movlw	low STR_8
 25701  000DEA  0100               	movlb	0	; () banked
 25702  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25703  000DEE  0EFE               	movlw	high STR_8
 25704  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25705  000DF2  0E01               	movlw	1
 25706  000DF4  EC3F  F02B         	call	_Uart_WriteConstString
 25707                           
 25708                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 25709  000DF8  0E07               	movlw	7
 25710  000DFA  0101               	movlb	1	; () banked
 25711  000DFC  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25712                           
 25713                           ; BSR set to: 1
 25714                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 25715  000DFE  0E02               	movlw	2
 25716  000E00  0100               	movlb	0	; () banked
 25717  000E02  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 25721  000E04  0EF5               	movlw	low _ConnTimeout
 25722  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25723  000E08  0E02               	movlw	high _ConnTimeout
 25724  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25725  000E0C  0E20               	movlw	32
 25726  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25727  000E10  0E4E               	movlw	78
 25728  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25729  000E14  0E00               	movlw	0
 25730  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25731  000E18  0E00               	movlw	0
 25732  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25733  000E1C  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25734  000E20  D0C7               	goto	l13353
 25735  000E22                     
 25736                           ; BSR set to: 1
 25737                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 25738                           
 25739                           ; BSR set to: 1
 25740  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 25741  000E24  0100               	movlb	0	; () banked
 25742  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25743  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 25744  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25745  000E2C  0E00               	movlw	0
 25746  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25747  000E30  0E32               	movlw	50
 25748  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25749  000E34  ECB1  F02C         	call	_ClearBuffer	;wreg free
 25750                           
 25751                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 25752  000E38  0EEA               	movlw	low STR_9
 25753  000E3A  0100               	movlb	0	; () banked
 25754  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25755  000E3E  0EFE               	movlw	high STR_9
 25756  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25757  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 25758  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25759  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 25760  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25761  000E4A  0E00               	movlw	0
 25762  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25763  000E4E  0E14               	movlw	20
 25764  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 25765  000E52  EC00  F027         	call	_StringCopy	;wreg free
 25766                           
 25767                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 25768  000E56  0E00               	movlw	0
 25769  000E58  0101               	movlb	1	; () banked
 25770  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25771  000E5C  D01C               	goto	l1208
 25772  000E5E                     
 25773                           ; BSR set to: 1
 25774                           ;mdm_gsm_gprs_http.c: 161: {
 25775                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 25776                           
 25777                           ; BSR set to: 1
 25778  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25779  000E60  0D01               	mullw	1
 25780  000E62  50F3               	movf	prodl,w,c
 25781  000E64  0100               	movlb	0	; () banked
 25782  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 25783  000E68  6ED9               	movwf	fsr2l,c
 25784  000E6A  50F4               	movf	prodh,w,c
 25785  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 25786  000E6E  6EDA               	movwf	fsr2h,c
 25787  000E70  0101               	movlb	1	; () banked
 25788  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25789  000E74  0100               	movlb	0	; () banked
 25790  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25791  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25792  000E7A  0E14               	movlw	20
 25793  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25794  000E7E  0E00               	movlw	0
 25795  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25796  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 25797  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25798  000E86  6EE1               	movwf	fsr1l,c
 25799  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 25800  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25801  000E8C  6EE2               	movwf	fsr1h,c
 25802  000E8E  CFDF FFE7          	movff	indf2,indf1
 25803                           
 25804                           ; BSR set to: 0
 25805  000E92  0101               	movlb	1	; () banked
 25806  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 25807  000E96                     l1208:
 25808                           
 25809                           ; BSR set to: 1
 25810                           
 25811                           ; BSR set to: 1
 25812  000E96  0100               	movlb	0	; () banked
 25813  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 25814  000E9A  0101               	movlb	1	; () banked
 25815  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 25816  000E9E  A0D8               	btfss	status,0,c
 25817  000EA0  D7DE               	goto	l1209
 25818                           
 25819                           ; BSR set to: 1
 25820                           ;mdm_gsm_gprs_http.c: 163: }
 25821                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 25822                           
 25823                           ; BSR set to: 1
 25824  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25825  000EA4  0100               	movlb	0	; () banked
 25826  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25827  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25828  000EAA  0E14               	movlw	20
 25829  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25830  000EAE  0E00               	movlw	0
 25831  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25832  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 25833  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25834  000EB6  6ED9               	movwf	fsr2l,c
 25835  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 25836  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25837  000EBC  6EDA               	movwf	fsr2h,c
 25838  000EBE  0E22               	movlw	34
 25839  000EC0  6EDF               	movwf	indf2,c
 25840                           
 25841                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 25842  000EC2  0101               	movlb	1	; () banked
 25843  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25844  000EC6  0100               	movlb	0	; () banked
 25845  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25846  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25847  000ECC  0E15               	movlw	21
 25848  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25849  000ED0  0E00               	movlw	0
 25850  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25851  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 25852  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25853  000ED8  6ED9               	movwf	fsr2l,c
 25854  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 25855  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25856  000EDE  6EDA               	movwf	fsr2h,c
 25857  000EE0  0E0D               	movlw	13
 25858  000EE2  6EDF               	movwf	indf2,c
 25859                           
 25860                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 25861  000EE4  0101               	movlb	1	; () banked
 25862  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25863  000EE8  0100               	movlb	0	; () banked
 25864  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25865  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25866  000EEE  0E16               	movlw	22
 25867  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25868  000EF2  0E00               	movlw	0
 25869  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25870  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 25871  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25872  000EFA  6ED9               	movwf	fsr2l,c
 25873  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 25874  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25875  000F00  6EDA               	movwf	fsr2h,c
 25876  000F02  0E00               	movlw	0
 25877  000F04  6EDF               	movwf	indf2,c
 25878                           
 25879                           ; BSR set to: 0
 25880                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 25881  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 25882  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25883  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 25884  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25885  000F0E  0E01               	movlw	1
 25886  000F10  ECFF  F02B         	call	_Uart_WriteString
 25887                           
 25888                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 25889  000F14  0E07               	movlw	7
 25890  000F16  0101               	movlb	1	; () banked
 25891  000F18  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25892                           
 25893                           ; BSR set to: 1
 25894                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 25895  000F1A  0E03               	movlw	3
 25896  000F1C  0100               	movlb	0	; () banked
 25897  000F1E  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 25901  000F20  0EF5               	movlw	low _ConnTimeout
 25902  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25903  000F24  0E02               	movlw	high _ConnTimeout
 25904  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25905  000F28  0E20               	movlw	32
 25906  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25907  000F2C  0E4E               	movlw	78
 25908  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25909  000F30  0E00               	movlw	0
 25910  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25911  000F34  0E00               	movlw	0
 25912  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25913  000F38  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25914  000F3C  D039               	goto	l13353
 25915  000F3E                     
 25916                           ; BSR set to: 1
 25917                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 25918                           
 25919                           ; BSR set to: 1
 25920  000F3E  0E57               	movlw	low STR_10
 25921  000F40  0100               	movlb	0	; () banked
 25922  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25923  000F44  0EFF               	movlw	high STR_10
 25924  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25925  000F48  0E01               	movlw	1
 25926  000F4A  EC3F  F02B         	call	_Uart_WriteConstString
 25927                           
 25928                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 25929  000F4E  0E07               	movlw	7
 25930  000F50  0101               	movlb	1	; () banked
 25931  000F52  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25932                           
 25933                           ; BSR set to: 1
 25934                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 25935  000F54  0E05               	movlw	5
 25936  000F56  0100               	movlb	0	; () banked
 25937  000F58  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25938                           
 25939                           ; BSR set to: 0
 25940                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 25941  000F5A  0EF5               	movlw	low _ConnTimeout
 25942  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25943  000F5E  0E02               	movlw	high _ConnTimeout
 25944  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25945  000F62  0E20               	movlw	32
 25946  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25947  000F66  0E4E               	movlw	78
 25948  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25949  000F6A  0E00               	movlw	0
 25950  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25951  000F6E  0E00               	movlw	0
 25952  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25953  000F72  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25954  000F76  D01C               	goto	l13353
 25955  000F78                     
 25956                           ; BSR set to: 1
 25957                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 25958                           
 25959                           ; BSR set to: 1
 25960  000F78  0E65               	movlw	low STR_11
 25961  000F7A  0100               	movlb	0	; () banked
 25962  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25963  000F7E  0EFF               	movlw	high STR_11
 25964  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25965  000F82  0E01               	movlw	1
 25966  000F84  EC3F  F02B         	call	_Uart_WriteConstString
 25967                           
 25968                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 25969  000F88  0E08               	movlw	8
 25970  000F8A  0101               	movlb	1	; () banked
 25971  000F8C  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25972                           
 25973                           ; BSR set to: 1
 25974                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 25975  000F8E  0E05               	movlw	5
 25976  000F90  0100               	movlb	0	; () banked
 25977  000F92  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25978                           
 25979                           ; BSR set to: 0
 25980                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 25981  000F94  0EF5               	movlw	low _ConnTimeout
 25982  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25983  000F98  0E02               	movlw	high _ConnTimeout
 25984  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25985  000F9C  0E20               	movlw	32
 25986  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25987  000FA0  0E4E               	movlw	78
 25988  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25989  000FA4  0E00               	movlw	0
 25990  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25991  000FA8  0E00               	movlw	0
 25992  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25993  000FAC  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25994  000FB0                     l13353:
 25995                           
 25996                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 25997  000FB0  0E01               	movlw	1
 25998  000FB2  0101               	movlb	1	; () banked
 25999  000FB4  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26000                           
 26001                           ;mdm_gsm_gprs_http.c: 201: break;
 26002  000FB6  D07C               	goto	l1205
 26003  000FB8                     
 26004                           ; BSR set to: 1
 26005                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26006                           
 26007                           ; BSR set to: 1
 26008  000FB8  0E02               	movlw	2
 26009  000FBA  D05A               	goto	L68
 26010  000FBC                     
 26011                           ; BSR set to: 1
 26012                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26013                           
 26014                           ; BSR set to: 1
 26015  000FBC  0E3C               	movlw	low _NewStringReceived
 26016  000FBE  0100               	movlb	0	; () banked
 26017  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26018  000FC2  0E00               	movlw	high _NewStringReceived
 26019  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26020  000FC6  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26021  000FCA  0900               	iorlw	0
 26022  000FCC  B4D8               	btfsc	status,2,c
 26023  000FCE  D018               	goto	l1215
 26024                           
 26025                           ;mdm_gsm_gprs_http.c: 212: {
 26026                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26027  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26028  000FD4  0A4F               	xorlw	79
 26029  000FD6  A4D8               	btfss	status,2,c
 26030  000FD8  D06B               	goto	l1205
 26031  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26032  000FDE  0A4B               	xorlw	75
 26033  000FE0  A4D8               	btfss	status,2,c
 26034  000FE2  D066               	goto	l1205
 26035                           
 26036                           ;mdm_gsm_gprs_http.c: 215: {
 26037                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26038  000FE4  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26039                           
 26040                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26041  000FE8  0E58               	movlw	low _RxBuffer
 26042  000FEA  0100               	movlb	0	; () banked
 26043  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26044  000FEE  0E0C               	movlw	high _RxBuffer
 26045  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26046  000FF2  0E01               	movlw	1
 26047  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26048  000FF6  0E90               	movlw	144
 26049  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26050  000FFA  ECB1  F02C         	call	_ClearBuffer	;wreg free
 26051                           
 26052                           ;mdm_gsm_gprs_http.c: 220: }
 26053                           ;mdm_gsm_gprs_http.c: 221: }
 26054  000FFE  D058               	goto	l1205
 26055  001000                     l1215:
 26056                           
 26057                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26058  001000  0EF5               	movlw	low _ConnTimeout
 26059  001002  0100               	movlb	0	; () banked
 26060  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26061  001006  0E02               	movlw	high _ConnTimeout
 26062  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26063  00100A  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26064  00100E  D029               	goto	L33
 26065  001010                     
 26066                           ; BSR set to: 1
 26067                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26068                           
 26069                           ; BSR set to: 1
 26070  001010  0E3C               	movlw	low _NewStringReceived
 26071  001012  0100               	movlb	0	; () banked
 26072  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26073  001016  0E00               	movlw	high _NewStringReceived
 26074  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26075  00101A  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26076  00101E  0900               	iorlw	0
 26077  001020  B4D8               	btfsc	status,2,c
 26078  001022  D018               	goto	l1220
 26079                           
 26080                           ;mdm_gsm_gprs_http.c: 232: {
 26081                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26082  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26083  001028  0A2B               	xorlw	43
 26084  00102A  A4D8               	btfss	status,2,c
 26085  00102C  D041               	goto	l1205
 26086  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26087  001032  0A53               	xorlw	83
 26088  001034  A4D8               	btfss	status,2,c
 26089  001036  D03C               	goto	l1205
 26090                           
 26091                           ;mdm_gsm_gprs_http.c: 235: {
 26092                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26093  001038  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26094                           
 26095                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26096  00103C  0E58               	movlw	low _RxBuffer
 26097  00103E  0100               	movlb	0	; () banked
 26098  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26099  001042  0E0C               	movlw	high _RxBuffer
 26100  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26101  001046  0E01               	movlw	1
 26102  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26103  00104A  0E90               	movlw	144
 26104  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26105  00104E  ECB1  F02C         	call	_ClearBuffer	;wreg free
 26106                           
 26107                           ;mdm_gsm_gprs_http.c: 240: }
 26108                           ;mdm_gsm_gprs_http.c: 241: }
 26109  001052  D02E               	goto	l1205
 26110  001054                     l1220:
 26111                           
 26112                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26113  001054  0EF5               	movlw	low _ConnTimeout
 26114  001056  0100               	movlb	0	; () banked
 26115  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26116  00105A  0E02               	movlw	high _ConnTimeout
 26117  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26118  00105E  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26119  001062                     L33:
 26120  001062  06E8               	decf	wreg,f,c
 26121  001064  A4D8               	btfss	status,2,c
 26122  001066  D024               	goto	l1205
 26123                           
 26124                           ;mdm_gsm_gprs_http.c: 243: {
 26125                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26126  001068  0E06               	movlw	6
 26127  00106A                     L69:
 26128  00106A  0101               	movlb	1	; () banked
 26129  00106C  D003               	goto	L32
 26130  00106E                     
 26131                           ; BSR set to: 1
 26132                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26133                           
 26134                           ; BSR set to: 1
 26135  00106E  0E03               	movlw	3
 26136  001070                     L68:
 26137  001070  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26138                           
 26139                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26140  001072  0E00               	movlw	0
 26141  001074                     L32:
 26142  001074  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26143                           
 26144                           ; BSR set to: 1
 26145                           ;mdm_gsm_gprs_http.c: 257: }
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;mdm_gsm_gprs_http.c: 256: break;
 26149                           
 26150                           ;mdm_gsm_gprs_http.c: 255: default:
 26151                           
 26152                           ;mdm_gsm_gprs_http.c: 253: break;
 26153  001076  D01C               	goto	l1205
 26154  001078                     l1202:
 26155                           
 26156                           ; BSR set to: 1
 26157                           
 26158                           ; BSR set to: 1
 26159  001078  51EE               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26160                           
 26161                           ; Switch size 1, requested type "space"
 26162                           ; Number of cases is 9, Range of values is 0 to 8
 26163                           ; switch strategies available:
 26164                           ; Name         Instructions Cycles
 26165                           ; simple_byte           28    15 (average)
 26166                           ;	Chosen strategy is simple_byte
 26167  00107A  0A00               	xorlw	0	; case 0
 26168  00107C  B4D8               	btfsc	status,2,c
 26169  00107E  D6A8               	goto	l1203
 26170  001080  0A01               	xorlw	1	; case 1
 26171  001082  B4D8               	btfsc	status,2,c
 26172  001084  D6B1               	goto	l1206
 26173  001086  0A03               	xorlw	3	; case 2
 26174  001088  B4D8               	btfsc	status,2,c
 26175  00108A  D6CB               	goto	l1207
 26176  00108C  0A01               	xorlw	1	; case 3
 26177  00108E  B4D8               	btfsc	status,2,c
 26178  001090  D756               	goto	l1211
 26179  001092  0A07               	xorlw	7	; case 4
 26180  001094  B4D8               	btfsc	status,2,c
 26181  001096  D770               	goto	l1212
 26182  001098  0A01               	xorlw	1	; case 5
 26183  00109A  B4D8               	btfsc	status,2,c
 26184  00109C  D78D               	goto	l1213
 26185  00109E  0A03               	xorlw	3	; case 6
 26186  0010A0  B4D8               	btfsc	status,2,c
 26187  0010A2  D7E5               	goto	l1224
 26188  0010A4  0A01               	xorlw	1	; case 7
 26189  0010A6  B4D8               	btfsc	status,2,c
 26190  0010A8  D789               	goto	l1214
 26191  0010AA  0A0F               	xorlw	15	; case 8
 26192  0010AC  B4D8               	btfsc	status,2,c
 26193  0010AE  D7B0               	goto	l1219
 26194  0010B0                     l1205:
 26195                           
 26196                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26197                           
 26198                           ; BSR set to: 1
 26199  0010B0  0101               	movlb	1	; () banked
 26200  0010B2  51FE               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26201  0010B4  0012               	return	
 26202  0010B6                     __end_of_InitGprsNetwork:
 26203                           	opt stack 0
 26204                           tosu	equ	0xFFF
 26205                           tosh	equ	0xFFE
 26206                           tosl	equ	0xFFD
 26207                           pclath	equ	0xFFA
 26208                           tblptru	equ	0xFF8
 26209                           tblptrh	equ	0xFF7
 26210                           tblptrl	equ	0xFF6
 26211                           tablat	equ	0xFF5
 26212                           prodh	equ	0xFF4
 26213                           prodl	equ	0xFF3
 26214                           intcon	equ	0xFF2
 26215                           intcon2	equ	0xFF1
 26216                           intcon3	equ	0xFF0
 26217                           indf0	equ	0xFEF
 26218                           postinc0	equ	0xFEE
 26219                           plusw0	equ	0xFEB
 26220                           fsr0h	equ	0xFEA
 26221                           fsr0l	equ	0xFE9
 26222                           wreg	equ	0xFE8
 26223                           indf1	equ	0xFE7
 26224                           postinc1	equ	0xFE6
 26225                           postdec1	equ	0xFE5
 26226                           plusw1	equ	0xFE3
 26227                           fsr1h	equ	0xFE2
 26228                           fsr1l	equ	0xFE1
 26229                           indf2	equ	0xFDF
 26230                           postinc2	equ	0xFDE
 26231                           postdec2	equ	0xFDD
 26232                           plusw2	equ	0xFDB
 26233                           fsr2h	equ	0xFDA
 26234                           fsr2l	equ	0xFD9
 26235                           status	equ	0xFD8
 26236                           
 26237 ;; *************** function _HttpGetMethod *****************
 26238 ;; Defined at:
 26239 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26240 ;; Parameters:    Size  Location     Type
 26241 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26242 ;;		 -> HttpGetDataLocal(5), 
 26243 ;; Auto vars:     Size  Location     Type
 26244 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26245 ;;  Index           1  200[BANK1 ] unsigned char 
 26246 ;; Return value:  Size  Location     Type
 26247 ;;                  1    wreg      enum E8905
 26248 ;; Registers used:
 26249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26250 ;; Tracked objects:
 26251 ;;		On entry : 0/0
 26252 ;;		On exit  : 0/0
 26253 ;;		Unchanged: 0/0
 26254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26256 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26258 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26259 ;;Total ram usage:      207 bytes
 26260 ;; Hardware stack levels used:    1
 26261 ;; Hardware stack levels required when called:   14
 26262 ;; This function calls:
 26263 ;;		_ClearBuffer
 26264 ;;		_OsTmr_GetTimerStatus
 26265 ;;		_OsTmr_StartTimer
 26266 ;;		_ReceiveEvt
 26267 ;;		_StringCopy
 26268 ;;		_Uart_WriteConstString
 26269 ;;		_Uart_WriteString
 26270 ;; This function is called by:
 26271 ;;		_MdmHttp_MainTask
 26272 ;; This function uses a non-reentrant model
 26273 ;;
 26274                           
 26275                           	psect	text120
 26276  0005EC                     __ptext120:
 26277                           	opt stack 0
 26278  0005EC                     _HttpGetMethod:
 26279                           	opt stack 13
 26280                           
 26281                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26282                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26283                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26284                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26285                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26286                           
 26287                           ; BSR set to: 1
 26288                           ;incstack = 0
 26289  0005EC  0E00               	movlw	0
 26290  0005EE  0101               	movlb	1	; () banked
 26291  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26292                           
 26293                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26294  0005F2  D230               	goto	l1235
 26295  0005F4                     
 26296                           ; BSR set to: 1
 26297                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26298                           
 26299                           ; BSR set to: 1
 26300  0005F4  0ED7               	movlw	low _GetMethod
 26301  0005F6  0100               	movlb	0	; () banked
 26302  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26303  0005FA  0E00               	movlw	high _GetMethod
 26304  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26305  0005FE  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26306  000602  0900               	iorlw	0
 26307  000604  B4D8               	btfsc	status,2,c
 26308  000606  D257               	goto	l1238
 26309                           
 26310                           ;mdm_gsm_gprs_http.c: 284: {
 26311                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26312  000608  0E01               	movlw	1
 26313  00060A  D18C               	goto	L35
 26314  00060C                     
 26315                           ; BSR set to: 1
 26316                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26317                           
 26318                           ; BSR set to: 1
 26319  00060C  0EA9               	movlw	low STR_12
 26320  00060E  0100               	movlb	0	; () banked
 26321  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26322  000612  0EFF               	movlw	high STR_12
 26323  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26324  000616  0E01               	movlw	1
 26325  000618  EC3F  F02B         	call	_Uart_WriteConstString
 26326                           
 26327                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26328  00061C  0E0A               	movlw	10
 26329  00061E  0101               	movlb	1	; () banked
 26330  000620  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26331                           
 26332                           ; BSR set to: 1
 26333                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26334  000622  0E02               	movlw	2
 26335  000624  0100               	movlb	0	; () banked
 26336  000626  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26340  000628  0EF5               	movlw	low _ConnTimeout
 26341  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26342  00062C  0E02               	movlw	high _ConnTimeout
 26343  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26344  000630  0E20               	movlw	32
 26345  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26346  000634  0E4E               	movlw	78
 26347  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26348  000638  0E00               	movlw	0
 26349  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26350  00063C  0E00               	movlw	0
 26351  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26352  000640  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26353  000644  D1AF               	goto	l13519
 26354  000646                     
 26355                           ; BSR set to: 1
 26356                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 26357                           
 26358                           ; BSR set to: 1
 26359  000646  0E73               	movlw	low STR_13
 26360  000648  0100               	movlb	0	; () banked
 26361  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26362  00064C  0EFF               	movlw	high STR_13
 26363  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26364  000650  0E01               	movlw	1
 26365  000652  EC3F  F02B         	call	_Uart_WriteConstString
 26366                           
 26367                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 26368  000656  0E0A               	movlw	10
 26369  000658  0101               	movlb	1	; () banked
 26370  00065A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26371                           
 26372                           ; BSR set to: 1
 26373                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 26374  00065C  0E03               	movlw	3
 26375  00065E  0100               	movlb	0	; () banked
 26376  000660  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 26380  000662  0EF5               	movlw	low _ConnTimeout
 26381  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26382  000666  0E02               	movlw	high _ConnTimeout
 26383  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26384  00066A  0E20               	movlw	32
 26385  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26386  00066E  0E4E               	movlw	78
 26387  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26388  000672  0E00               	movlw	0
 26389  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26390  000676  0E00               	movlw	0
 26391  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26392  00067A  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26393  00067E  D192               	goto	l13519
 26394  000680                     
 26395                           ; BSR set to: 1
 26396                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 26397                           
 26398                           ; BSR set to: 1
 26399  000680  0ED5               	movlw	low STR_14
 26400  000682  0100               	movlb	0	; () banked
 26401  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26402  000686  0EFE               	movlw	high STR_14
 26403  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26404  00068A  0E01               	movlw	1
 26405  00068C  EC3F  F02B         	call	_Uart_WriteConstString
 26406                           
 26407                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 26408  000690  0E0A               	movlw	10
 26409  000692  0101               	movlb	1	; () banked
 26410  000694  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26411                           
 26412                           ; BSR set to: 1
 26413                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 26414  000696  0E04               	movlw	4
 26415  000698  0100               	movlb	0	; () banked
 26416  00069A  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26417                           
 26418                           ; BSR set to: 0
 26419                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 26420  00069C  0EF5               	movlw	low _ConnTimeout
 26421  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26422  0006A0  0E02               	movlw	high _ConnTimeout
 26423  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26424  0006A4  0E20               	movlw	32
 26425  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26426  0006A8  0E4E               	movlw	78
 26427  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26428  0006AC  0E00               	movlw	0
 26429  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26430  0006B0  0E00               	movlw	0
 26431  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26432  0006B4  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26433  0006B8  D175               	goto	l13519
 26434  0006BA                     
 26435                           ; BSR set to: 1
 26436                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 26437                           
 26438                           ; BSR set to: 1
 26439  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26440  0006BC  0100               	movlb	0	; () banked
 26441  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26442  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 26443  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26444  0006C4  0E00               	movlw	0
 26445  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26446  0006C8  0EC8               	movlw	200
 26447  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26448  0006CC  ECB1  F02C         	call	_ClearBuffer	;wreg free
 26449                           
 26450                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 26451  0006D0  0E13               	movlw	low STR_15
 26452  0006D2  0100               	movlb	0	; () banked
 26453  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26454  0006D6  0EFF               	movlw	high STR_15
 26455  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26456  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 26457  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26458  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 26459  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26460  0006E2  0E00               	movlw	0
 26461  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26462  0006E6  0E13               	movlw	19
 26463  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 26464  0006EA  EC00  F027         	call	_StringCopy	;wreg free
 26465                           
 26466                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 26467  0006EE  0E00               	movlw	0
 26468  0006F0  0101               	movlb	1	; () banked
 26469  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26470  0006F4  D024               	goto	l1243
 26471  0006F6                     
 26472                           ; BSR set to: 1
 26473                           ;mdm_gsm_gprs_http.c: 332: {
 26474                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 26475                           
 26476                           ; BSR set to: 1
 26477  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26478  0006F8  0D01               	mullw	1
 26479  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 26480  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 26481  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 26482  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 26483  00070A  50F3               	movf	prodl,w,c
 26484  00070C  0100               	movlb	0	; () banked
 26485  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26486  000710  6ED9               	movwf	fsr2l,c
 26487  000712  50F4               	movf	prodh,w,c
 26488  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26489  000716  6EDA               	movwf	fsr2h,c
 26490  000718  0101               	movlb	1	; () banked
 26491  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26492  00071C  0100               	movlb	0	; () banked
 26493  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 26494  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 26495  000722  0E13               	movlw	19
 26496  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 26497  000726  0E00               	movlw	0
 26498  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 26499  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 26500  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 26501  00072E  6EE1               	movwf	fsr1l,c
 26502  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 26503  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 26504  000734  6EE2               	movwf	fsr1h,c
 26505  000736  CFDF FFE7          	movff	indf2,indf1
 26506                           
 26507                           ; BSR set to: 0
 26508  00073A  0101               	movlb	1	; () banked
 26509  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 26510  00073E                     l1243:
 26511                           
 26512                           ; BSR set to: 1
 26513                           
 26514                           ; BSR set to: 1
 26515  00073E  0100               	movlb	0	; () banked
 26516  000740  EE20 F002          	lfsr	2,2
 26517  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26518  000746  26D9               	addwf	fsr2l,f,c
 26519  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26520  00074A  22DA               	addwfc	fsr2h,f,c
 26521  00074C  50DE               	movf	postinc2,w,c
 26522  00074E  0101               	movlb	1	; () banked
 26523  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 26524  000752  A0D8               	btfss	status,0,c
 26525  000754  D7D0               	goto	l1244
 26526                           
 26527                           ; BSR set to: 1
 26528                           ;mdm_gsm_gprs_http.c: 334: }
 26529                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 26530                           
 26531                           ; BSR set to: 1
 26532  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26533  000758  0100               	movlb	0	; () banked
 26534  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26535  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26536  00075E  0E13               	movlw	19
 26537  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26538  000762  0E00               	movlw	0
 26539  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26540  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 26541  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26542  00076A  6ED9               	movwf	fsr2l,c
 26543  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 26544  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26545  000770  6EDA               	movwf	fsr2h,c
 26546  000772  0E22               	movlw	34
 26547  000774  6EDF               	movwf	indf2,c
 26548                           
 26549                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 26550  000776  0101               	movlb	1	; () banked
 26551  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26552  00077A  0100               	movlb	0	; () banked
 26553  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26554  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26555  000780  0E14               	movlw	20
 26556  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26557  000784  0E00               	movlw	0
 26558  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26559  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 26560  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26561  00078C  6ED9               	movwf	fsr2l,c
 26562  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 26563  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26564  000792  6EDA               	movwf	fsr2h,c
 26565  000794  0E0D               	movlw	13
 26566  000796  6EDF               	movwf	indf2,c
 26567                           
 26568                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 26569  000798  0101               	movlb	1	; () banked
 26570  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26571  00079C  0100               	movlb	0	; () banked
 26572  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26573  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26574  0007A2  0E15               	movlw	21
 26575  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26576  0007A6  0E00               	movlw	0
 26577  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26578  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 26579  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26580  0007AE  6ED9               	movwf	fsr2l,c
 26581  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 26582  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26583  0007B4  6EDA               	movwf	fsr2h,c
 26584  0007B6  0E00               	movlw	0
 26585  0007B8  6EDF               	movwf	indf2,c
 26586                           
 26587                           ; BSR set to: 0
 26588                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 26589  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26590  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26591  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 26592  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26593  0007C2  0E01               	movlw	1
 26594  0007C4  ECFF  F02B         	call	_Uart_WriteString
 26595                           
 26596                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 26597  0007C8  0E0A               	movlw	10
 26598  0007CA  0101               	movlb	1	; () banked
 26599  0007CC  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26600                           
 26601                           ; BSR set to: 1
 26602                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 26603  0007CE  0E05               	movlw	5
 26604  0007D0  0100               	movlb	0	; () banked
 26605  0007D2  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26606                           
 26607                           ; BSR set to: 0
 26608                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 26609  0007D4  0EF5               	movlw	low _ConnTimeout
 26610  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26611  0007D8  0E02               	movlw	high _ConnTimeout
 26612  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26613  0007DC  0E20               	movlw	32
 26614  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26615  0007E0  0E4E               	movlw	78
 26616  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26617  0007E4  0E00               	movlw	0
 26618  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26619  0007E8  0E00               	movlw	0
 26620  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26621  0007EC  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26622  0007F0  D0D9               	goto	l13519
 26623  0007F2                     
 26624                           ; BSR set to: 1
 26625                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 26626                           
 26627                           ; BSR set to: 1
 26628  0007F2  0E38               	movlw	low STR_16
 26629  0007F4  0100               	movlb	0	; () banked
 26630  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26631  0007F8  0EFF               	movlw	high STR_16
 26632  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26633  0007FC  0E01               	movlw	1
 26634  0007FE  EC3F  F02B         	call	_Uart_WriteConstString
 26635                           
 26636                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 26637  000802  0E0A               	movlw	10
 26638  000804  0101               	movlb	1	; () banked
 26639  000806  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 26643  000808  0E06               	movlw	6
 26644  00080A  0100               	movlb	0	; () banked
 26645  00080C  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 26649  00080E  0EF5               	movlw	low _ConnTimeout
 26650  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26651  000812  0E02               	movlw	high _ConnTimeout
 26652  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26653  000816  0E20               	movlw	32
 26654  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26655  00081A  0E4E               	movlw	78
 26656  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26657  00081E  0E00               	movlw	0
 26658  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26659  000822  0E00               	movlw	0
 26660  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26661  000826  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26662                           
 26663                           ;mdm_gsm_gprs_http.c: 358: break;
 26664  00082A  D145               	goto	l1238
 26665  00082C                     
 26666                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 26667  00082C  0E07               	movlw	7
 26668  00082E  0101               	movlb	1	; () banked
 26669  000830  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26670                           
 26671                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 26672  000832  0E09               	movlw	9
 26673  000834  0100               	movlb	0	; () banked
 26674  000836  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26675                           
 26676                           ; BSR set to: 0
 26677                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 26678  000838  0EF5               	movlw	low _ConnTimeout
 26679  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26680  00083C  0E02               	movlw	high _ConnTimeout
 26681  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26682  000840  0E20               	movlw	32
 26683  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26684  000844  0E4E               	movlw	78
 26685  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26686  000848  0E00               	movlw	0
 26687  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26688  00084C  0E00               	movlw	0
 26689  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26690  000850  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26691                           
 26692                           ;mdm_gsm_gprs_http.c: 371: break;
 26693  000854  D130               	goto	l1238
 26694  000856                     
 26695                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 26696  000856  0E8F               	movlw	low STR_17
 26697  000858  0100               	movlb	0	; () banked
 26698  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26699  00085C  0EFF               	movlw	high STR_17
 26700  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26701  000860  0E01               	movlw	1
 26702  000862  EC3F  F02B         	call	_Uart_WriteConstString
 26703                           
 26704                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 26705  000866  0E0D               	movlw	13
 26706  000868  0101               	movlb	1	; () banked
 26707  00086A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26708                           
 26709                           ; BSR set to: 1
 26710                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 26711  00086C  0E09               	movlw	9
 26712  00086E  0100               	movlb	0	; () banked
 26713  000870  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 26717  000872  0EF5               	movlw	low _ConnTimeout
 26718  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26719  000876  0E02               	movlw	high _ConnTimeout
 26720  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26721  00087A  0E20               	movlw	32
 26722  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26723  00087E  0E4E               	movlw	78
 26724  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26725  000882  0E00               	movlw	0
 26726  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26727  000886  0E00               	movlw	0
 26728  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26729  00088A  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26730  00088E  D08A               	goto	l13519
 26731  000890                     
 26732                           ; BSR set to: 1
 26733                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 26734                           
 26735                           ; BSR set to: 1
 26736  000890  0E9C               	movlw	low STR_18
 26737  000892  0100               	movlb	0	; () banked
 26738  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26739  000896  0EFF               	movlw	high STR_18
 26740  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26741  00089A  0E01               	movlw	1
 26742  00089C  EC3F  F02B         	call	_Uart_WriteConstString
 26743                           
 26744                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 26745  0008A0  0E0A               	movlw	10
 26746  0008A2  0101               	movlb	1	; () banked
 26747  0008A4  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26748                           
 26749                           ; BSR set to: 1
 26750                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 26751  0008A6  0E0E               	movlw	14
 26752  0008A8  0100               	movlb	0	; () banked
 26753  0008AA  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26754                           
 26755                           ; BSR set to: 0
 26756                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 26757  0008AC  0EF5               	movlw	low _ConnTimeout
 26758  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26759  0008B0  0E02               	movlw	high _ConnTimeout
 26760  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26761  0008B4  0E20               	movlw	32
 26762  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26763  0008B8  0E4E               	movlw	78
 26764  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26765  0008BC  0E00               	movlw	0
 26766  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26767  0008C0  0E00               	movlw	0
 26768  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26769  0008C4  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26770  0008C8  D06D               	goto	l13519
 26771  0008CA                     
 26772                           ; BSR set to: 1
 26773                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 26774                           
 26775                           ; BSR set to: 1
 26776  0008CA  0E3C               	movlw	low _NewStringReceived
 26777  0008CC  0100               	movlb	0	; () banked
 26778  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26779  0008D0  0E00               	movlw	high _NewStringReceived
 26780  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26781  0008D4  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26782  0008D8  0900               	iorlw	0
 26783  0008DA  B4D8               	btfsc	status,2,c
 26784  0008DC  D018               	goto	l1251
 26785                           
 26786                           ;mdm_gsm_gprs_http.c: 400: {
 26787                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26788  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 26789  0008E2  0A4F               	xorlw	79
 26790  0008E4  A4D8               	btfss	status,2,c
 26791  0008E6  D0E7               	goto	l1238
 26792  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26793  0008EC  0A4B               	xorlw	75
 26794  0008EE  A4D8               	btfss	status,2,c
 26795  0008F0  D0E2               	goto	l1238
 26796                           
 26797                           ;mdm_gsm_gprs_http.c: 403: {
 26798                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 26799  0008F2  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26800                           
 26801                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 26802  0008F6  0E58               	movlw	low _RxBuffer
 26803  0008F8  0100               	movlb	0	; () banked
 26804  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26805  0008FC  0E0C               	movlw	high _RxBuffer
 26806  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26807  000900  0E01               	movlw	1
 26808  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26809  000904  0E90               	movlw	144
 26810  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26811  000908  ECB1  F02C         	call	_ClearBuffer	;wreg free
 26812                           
 26813                           ;mdm_gsm_gprs_http.c: 408: }
 26814                           ;mdm_gsm_gprs_http.c: 409: }
 26815  00090C  D0D4               	goto	l1238
 26816  00090E                     l1251:
 26817                           
 26818                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26819  00090E  0EF5               	movlw	low _ConnTimeout
 26820  000910  0100               	movlb	0	; () banked
 26821  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26822  000914  0E02               	movlw	high _ConnTimeout
 26823  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26824  000918  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26825  00091C                     L36:
 26826  00091C  06E8               	decf	wreg,f,c
 26827  00091E  A4D8               	btfss	status,2,c
 26828  000920  D0CA               	goto	l1238
 26829                           
 26830                           ;mdm_gsm_gprs_http.c: 411: {
 26831                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 26832  000922  0E0F               	movlw	15
 26833  000924                     L35:
 26834  000924  0101               	movlb	1	; () banked
 26835  000926  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26836                           
 26837                           ; BSR set to: 1
 26838                           ;mdm_gsm_gprs_http.c: 414: }
 26839                           ;mdm_gsm_gprs_http.c: 415: break;
 26840                           
 26841                           ; BSR set to: 1
 26842  000928  D0C6               	goto	l1238
 26843  00092A                     
 26844                           ; BSR set to: 1
 26845                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 26846                           
 26847                           ; BSR set to: 1
 26848  00092A  0E3C               	movlw	low _NewStringReceived
 26849  00092C  0100               	movlb	0	; () banked
 26850  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26851  000930  0E00               	movlw	high _NewStringReceived
 26852  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26853  000934  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26854  000938  0900               	iorlw	0
 26855  00093A  B4D8               	btfsc	status,2,c
 26856  00093C  D018               	goto	l1256
 26857                           
 26858                           ;mdm_gsm_gprs_http.c: 420: {
 26859                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26860  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 26861  000942  0A2B               	xorlw	43
 26862  000944  A4D8               	btfss	status,2,c
 26863  000946  D0B7               	goto	l1238
 26864  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26865  00094C  0A48               	xorlw	72
 26866  00094E  A4D8               	btfss	status,2,c
 26867  000950  D0B2               	goto	l1238
 26868                           
 26869                           ;mdm_gsm_gprs_http.c: 423: {
 26870                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 26871  000952  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26872                           
 26873                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 26874  000956  0E58               	movlw	low _RxBuffer
 26875  000958  0100               	movlb	0	; () banked
 26876  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26877  00095C  0E0C               	movlw	high _RxBuffer
 26878  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26879  000960  0E01               	movlw	1
 26880  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26881  000964  0E90               	movlw	144
 26882  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26883  000968  ECB1  F02C         	call	_ClearBuffer	;wreg free
 26884                           
 26885                           ;mdm_gsm_gprs_http.c: 428: }
 26886                           ;mdm_gsm_gprs_http.c: 429: }
 26887  00096C  D0A4               	goto	l1238
 26888  00096E                     l1256:
 26889                           
 26890                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26891  00096E  0EF5               	movlw	low _ConnTimeout
 26892  000970  0100               	movlb	0	; () banked
 26893  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26894  000974  0E02               	movlw	high _ConnTimeout
 26895  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26896  000978  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26897  00097C  D7CF               	goto	L36
 26898  00097E                     
 26899                           ; BSR set to: 1
 26900                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 26901                           
 26902                           ; BSR set to: 1
 26903  00097E  0E0C               	movlw	12
 26904  000980  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26905                           
 26906                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 26907  000982  0E05               	movlw	5
 26908  000984  0100               	movlb	0	; () banked
 26909  000986  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 26913  000988  0ED7               	movlw	low _ConnWait
 26914  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26915  00098C  0E03               	movlw	high _ConnWait
 26916  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26917  000990  0EE8               	movlw	232
 26918  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26919  000994  0E03               	movlw	3
 26920  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26921  000998  0E00               	movlw	0
 26922  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26923  00099C  0E00               	movlw	0
 26924  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26925  0009A0  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26926  0009A4                     l13519:
 26927                           
 26928                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 26929  0009A4  0E01               	movlw	1
 26930  0009A6  0101               	movlb	1	; () banked
 26931  0009A8  D053               	goto	L38
 26932  0009AA                     
 26933                           ; BSR set to: 1
 26934                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 26935                           
 26936                           ; BSR set to: 1
 26937  0009AA  0ED7               	movlw	low _ConnWait
 26938  0009AC  0100               	movlb	0	; () banked
 26939  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26940  0009B0  0E03               	movlw	high _ConnWait
 26941  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26942  0009B4  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26943  0009B8  06E8               	decf	wreg,f,c
 26944  0009BA  A4D8               	btfss	status,2,c
 26945  0009BC  D07C               	goto	l1238
 26946                           
 26947                           ;mdm_gsm_gprs_http.c: 450: {
 26948                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 26949  0009BE  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26950                           
 26951                           ;mdm_gsm_gprs_http.c: 453: }
 26952                           ;mdm_gsm_gprs_http.c: 454: break;
 26953  0009C2  D079               	goto	l1238
 26954  0009C4                     
 26955                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 26956  0009C4  0E3C               	movlw	low _NewStringReceived
 26957  0009C6  0100               	movlb	0	; () banked
 26958  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26959  0009CA  0E00               	movlw	high _NewStringReceived
 26960  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26961  0009CE  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 26962  0009D2  0900               	iorlw	0
 26963  0009D4  B4D8               	btfsc	status,2,c
 26964  0009D6  D02D               	goto	l1264
 26965                           
 26966                           ;mdm_gsm_gprs_http.c: 459: {
 26967                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26968  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 26969  0009DC  0A2B               	xorlw	43
 26970  0009DE  A4D8               	btfss	status,2,c
 26971  0009E0  D06A               	goto	l1238
 26972  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26973  0009E6  0A48               	xorlw	72
 26974  0009E8  A4D8               	btfss	status,2,c
 26975  0009EA  D065               	goto	l1238
 26976                           
 26977                           ;mdm_gsm_gprs_http.c: 462: {
 26978                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 26979  0009EC  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26980                           
 26981                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 26982  0009F0  0E58               	movlw	low _RxBuffer
 26983  0009F2  0100               	movlb	0	; () banked
 26984  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26985  0009F6  0E0C               	movlw	high _RxBuffer
 26986  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26987  0009FA  EE20 F003          	lfsr	2,3
 26988  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26989  000A00  26D9               	addwf	fsr2l,f,c
 26990  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26991  000A04  22DA               	addwfc	fsr2h,f,c
 26992  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 26993  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 26994  000A0E  0E01               	movlw	1
 26995  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26996  000A12  0E90               	movlw	144
 26997  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 26998  000A16  EC00  F027         	call	_StringCopy	;wreg free
 26999                           
 27000                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27001  000A1A  0E58               	movlw	low _RxBuffer
 27002  000A1C  0100               	movlb	0	; () banked
 27003  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27004  000A20  0E0C               	movlw	high _RxBuffer
 27005  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27006  000A24  0E01               	movlw	1
 27007  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27008  000A28  0E90               	movlw	144
 27009  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27010  000A2C  ECB1  F02C         	call	_ClearBuffer	;wreg free
 27011                           
 27012                           ;mdm_gsm_gprs_http.c: 469: }
 27013                           ;mdm_gsm_gprs_http.c: 470: }
 27014  000A30  D042               	goto	l1238
 27015  000A32                     l1264:
 27016                           
 27017                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27018  000A32  0EF5               	movlw	low _ConnTimeout
 27019  000A34  0100               	movlb	0	; () banked
 27020  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27021  000A38  0E02               	movlw	high _ConnTimeout
 27022  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27023  000A3C  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 27024  000A40  D76D               	goto	L36
 27025  000A42                     
 27026                           ; BSR set to: 1
 27027                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27028                           
 27029                           ; BSR set to: 1
 27030  000A42  0E00               	movlw	0
 27031  000A44  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27032                           
 27033                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27034  000A46  0E02               	movlw	2
 27035  000A48  D003               	goto	L38
 27036  000A4A                     
 27037                           ; BSR set to: 1
 27038                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27039                           
 27040                           ; BSR set to: 1
 27041  000A4A  0E00               	movlw	0
 27042  000A4C  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27043                           
 27044                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27045  000A4E  0E03               	movlw	3
 27046  000A50                     L38:
 27047  000A50  6FEC               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27048                           
 27049                           ; BSR set to: 1
 27050                           ;mdm_gsm_gprs_http.c: 494: }
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;mdm_gsm_gprs_http.c: 493: break;
 27054                           
 27055                           ;mdm_gsm_gprs_http.c: 492: default:
 27056                           
 27057                           ;mdm_gsm_gprs_http.c: 490: break;
 27058  000A52  D031               	goto	l1238
 27059  000A54                     l1235:
 27060                           
 27061                           ; BSR set to: 1
 27062                           
 27063                           ; BSR set to: 1
 27064  000A54  51ED               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27065                           
 27066                           ; Switch size 1, requested type "space"
 27067                           ; Number of cases is 16, Range of values is 0 to 15
 27068                           ; switch strategies available:
 27069                           ; Name         Instructions Cycles
 27070                           ; simple_byte           49    25 (average)
 27071                           ;	Chosen strategy is simple_byte
 27072  000A56  0A00               	xorlw	0	; case 0
 27073  000A58  B4D8               	btfsc	status,2,c
 27074  000A5A  D5CC               	goto	l1236
 27075  000A5C  0A01               	xorlw	1	; case 1
 27076  000A5E  B4D8               	btfsc	status,2,c
 27077  000A60  D5D5               	goto	l1239
 27078  000A62  0A03               	xorlw	3	; case 2
 27079  000A64  B4D8               	btfsc	status,2,c
 27080  000A66  D5EF               	goto	l1240
 27081  000A68  0A01               	xorlw	1	; case 3
 27082  000A6A  B4D8               	btfsc	status,2,c
 27083  000A6C  D609               	goto	l1241
 27084  000A6E  0A07               	xorlw	7	; case 4
 27085  000A70  B4D8               	btfsc	status,2,c
 27086  000A72  D623               	goto	l1242
 27087  000A74  0A01               	xorlw	1	; case 5
 27088  000A76  B4D8               	btfsc	status,2,c
 27089  000A78  D6BC               	goto	l1246
 27090  000A7A  0A03               	xorlw	3	; case 6
 27091  000A7C  B4D8               	btfsc	status,2,c
 27092  000A7E  D6D6               	goto	l1247
 27093  000A80  0A01               	xorlw	1	; case 7
 27094  000A82  B4D8               	btfsc	status,2,c
 27095  000A84  D752               	goto	l1255
 27096  000A86  0A0F               	xorlw	15	; case 8
 27097  000A88  B4D8               	btfsc	status,2,c
 27098  000A8A  D6E5               	goto	l1248
 27099  000A8C  0A01               	xorlw	1	; case 9
 27100  000A8E  B4D8               	btfsc	status,2,c
 27101  000A90  D6FF               	goto	l1249
 27102  000A92  0A03               	xorlw	3	; case 10
 27103  000A94  B4D8               	btfsc	status,2,c
 27104  000A96  D719               	goto	l1250
 27105  000A98  0A01               	xorlw	1	; case 11
 27106  000A9A  B4D8               	btfsc	status,2,c
 27107  000A9C  D770               	goto	l1260
 27108  000A9E  0A07               	xorlw	7	; case 12
 27109  000AA0  B4D8               	btfsc	status,2,c
 27110  000AA2  D783               	goto	l1261
 27111  000AA4  0A01               	xorlw	1	; case 13
 27112  000AA6  B4D8               	btfsc	status,2,c
 27113  000AA8  D78D               	goto	l1263
 27114  000AAA  0A03               	xorlw	3	; case 14
 27115  000AAC  B4D8               	btfsc	status,2,c
 27116  000AAE  D7C9               	goto	l1268
 27117  000AB0  0A01               	xorlw	1	; case 15
 27118  000AB2  B4D8               	btfsc	status,2,c
 27119  000AB4  D7CA               	goto	l1269
 27120  000AB6                     l1238:
 27121                           
 27122                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27123                           
 27124                           ; BSR set to: 1
 27125  000AB6  0101               	movlb	1	; () banked
 27126  000AB8  51EC               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27127  000ABA  0012               	return	
 27128  000ABC                     __end_of_HttpGetMethod:
 27129                           	opt stack 0
 27130                           tosu	equ	0xFFF
 27131                           tosh	equ	0xFFE
 27132                           tosl	equ	0xFFD
 27133                           pclath	equ	0xFFA
 27134                           tblptru	equ	0xFF8
 27135                           tblptrh	equ	0xFF7
 27136                           tblptrl	equ	0xFF6
 27137                           tablat	equ	0xFF5
 27138                           prodh	equ	0xFF4
 27139                           prodl	equ	0xFF3
 27140                           intcon	equ	0xFF2
 27141                           intcon2	equ	0xFF1
 27142                           intcon3	equ	0xFF0
 27143                           indf0	equ	0xFEF
 27144                           postinc0	equ	0xFEE
 27145                           plusw0	equ	0xFEB
 27146                           fsr0h	equ	0xFEA
 27147                           fsr0l	equ	0xFE9
 27148                           wreg	equ	0xFE8
 27149                           indf1	equ	0xFE7
 27150                           postinc1	equ	0xFE6
 27151                           postdec1	equ	0xFE5
 27152                           plusw1	equ	0xFE3
 27153                           fsr1h	equ	0xFE2
 27154                           fsr1l	equ	0xFE1
 27155                           indf2	equ	0xFDF
 27156                           postinc2	equ	0xFDE
 27157                           postdec2	equ	0xFDD
 27158                           plusw2	equ	0xFDB
 27159                           fsr2h	equ	0xFDA
 27160                           fsr2l	equ	0xFD9
 27161                           status	equ	0xFD8
 27162                           
 27163 ;; *************** function _Uart_WriteString *****************
 27164 ;; Defined at:
 27165 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27166 ;; Parameters:    Size  Location     Type
 27167 ;;  Module          1    wreg     unsigned char 
 27168 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27169 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27170 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27171 ;; Auto vars:     Size  Location     Type
 27172 ;;  Module          1   34[BANK0 ] unsigned char 
 27173 ;; Return value:  Size  Location     Type
 27174 ;;                  1    wreg      void 
 27175 ;; Registers used:
 27176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27177 ;; Tracked objects:
 27178 ;;		On entry : 0/0
 27179 ;;		On exit  : 0/0
 27180 ;;		Unchanged: 0/0
 27181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27185 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27186 ;;Total ram usage:        3 bytes
 27187 ;; Hardware stack levels used:    1
 27188 ;; Hardware stack levels required when called:   12
 27189 ;; This function calls:
 27190 ;;		_UartTxBufferStatus
 27191 ;;		_UartWriteByte
 27192 ;; This function is called by:
 27193 ;;		_Mdm_SetSmsFormat
 27194 ;;		_InitGprsNetwork
 27195 ;;		_HttpGetMethod
 27196 ;;		_Mdm_PinUnlock
 27197 ;;		_Mdm_MakePhoneCall
 27198 ;; This function uses a non-reentrant model
 27199 ;;
 27200                           
 27201                           	psect	text121
 27202  0057FE                     __ptext121:
 27203                           	opt stack 0
 27204  0057FE                     _Uart_WriteString:
 27205                           	opt stack 13
 27206                           
 27207                           ; BSR set to: 1
 27208                           ;incstack = 0
 27209                           ;Uart_WriteString@Module stored from wreg
 27210  0057FE  0100               	movlb	0	; () banked
 27211  005800  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27212                           
 27213                           ;uart_drv.c: 521: while (*StringToWrite)
 27214  005802  D014               	goto	u10800
 27215  005804                     
 27216                           ;uart_drv.c: 522: {
 27217                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27218  005804  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27219  005808  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27220  00580C  50DF               	movf	indf2,w,c
 27221  00580E  0100               	movlb	0	; () banked
 27222  005810  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27223  005812  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27224  005814  ECCB  F02E         	call	_UartWriteByte
 27225                           
 27226                           ;uart_drv.c: 526: StringToWrite++;
 27227  005818  0100               	movlb	0	; () banked
 27228  00581A  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27229  00581C  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27230  00581E                     
 27231                           ; BSR set to: 0
 27232                           
 27233                           ; BSR set to: 0
 27234  00581E  0100               	movlb	0	; () banked
 27235  005820  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27236  005822  ECB6  F029         	call	_UartTxBufferStatus
 27237  005826  06E8               	decf	wreg,f,c
 27238  005828  B4D8               	btfsc	status,2,c
 27239  00582A  D7F9               	goto	l709
 27240  00582C                     u10800:
 27241  00582C  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27242  005830  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27243  005834  50DF               	movf	indf2,w,c
 27244  005836  B4D8               	btfsc	status,2,c
 27245  005838  0012               	return	
 27246  00583A  D7E4               	goto	l707
 27247  00583C                     __end_of_Uart_WriteString:
 27248                           	opt stack 0
 27249                           tosu	equ	0xFFF
 27250                           tosh	equ	0xFFE
 27251                           tosl	equ	0xFFD
 27252                           pclath	equ	0xFFA
 27253                           tblptru	equ	0xFF8
 27254                           tblptrh	equ	0xFF7
 27255                           tblptrl	equ	0xFF6
 27256                           tablat	equ	0xFF5
 27257                           prodh	equ	0xFF4
 27258                           prodl	equ	0xFF3
 27259                           intcon	equ	0xFF2
 27260                           intcon2	equ	0xFF1
 27261                           intcon3	equ	0xFF0
 27262                           indf0	equ	0xFEF
 27263                           postinc0	equ	0xFEE
 27264                           plusw0	equ	0xFEB
 27265                           fsr0h	equ	0xFEA
 27266                           fsr0l	equ	0xFE9
 27267                           wreg	equ	0xFE8
 27268                           indf1	equ	0xFE7
 27269                           postinc1	equ	0xFE6
 27270                           postdec1	equ	0xFE5
 27271                           plusw1	equ	0xFE3
 27272                           fsr1h	equ	0xFE2
 27273                           fsr1l	equ	0xFE1
 27274                           indf2	equ	0xFDF
 27275                           postinc2	equ	0xFDE
 27276                           postdec2	equ	0xFDD
 27277                           plusw2	equ	0xFDB
 27278                           fsr2h	equ	0xFDA
 27279                           fsr2l	equ	0xFD9
 27280                           status	equ	0xFD8
 27281                           
 27282 ;; *************** function _Uart_WriteConstString *****************
 27283 ;; Defined at:
 27284 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;  Module          1    wreg     unsigned char 
 27287 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27288 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 27289 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 27290 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 27291 ;;		 -> STR_6(5), STR_4(11), STR_3(7), STR_2(14), 
 27292 ;;		 -> STR_1(5), 
 27293 ;; Auto vars:     Size  Location     Type
 27294 ;;  Module          1   34[BANK0 ] unsigned char 
 27295 ;; Return value:  Size  Location     Type
 27296 ;;                  1    wreg      void 
 27297 ;; Registers used:
 27298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27299 ;; Tracked objects:
 27300 ;;		On entry : 0/0
 27301 ;;		On exit  : 0/0
 27302 ;;		Unchanged: 0/0
 27303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27307 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27308 ;;Total ram usage:        3 bytes
 27309 ;; Hardware stack levels used:    1
 27310 ;; Hardware stack levels required when called:   12
 27311 ;; This function calls:
 27312 ;;		_UartTxBufferStatus
 27313 ;;		_UartWriteByte
 27314 ;; This function is called by:
 27315 ;;		_CheckModem
 27316 ;;		_ConfigureModem
 27317 ;;		_GetSmsSm
 27318 ;;		_InitGprsNetwork
 27319 ;;		_HttpGetMethod
 27320 ;;		_Mdm_HangPhoneCall
 27321 ;;		_Mdm_GetPhoneCall
 27322 ;;		_MdmHttp_SetSsl
 27323 ;; This function uses a non-reentrant model
 27324 ;;
 27325                           
 27326                           	psect	text122
 27327  00567E                     __ptext122:
 27328                           	opt stack 0
 27329  00567E                     _Uart_WriteConstString:
 27330                           	opt stack 14
 27331                           
 27332                           ;incstack = 0
 27333                           ;Uart_WriteConstString@Module stored from wreg
 27334  00567E  0100               	movlb	0	; () banked
 27335  005680  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27336                           
 27337                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27338  005682  D015               	goto	u11400
 27339  005684                     
 27340                           ;uart_drv.c: 500: {
 27341                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27342  005684  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27343  005688  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27344  00568C                     	if	0	;tblptru may be non-zero
 27345  00568C                     	endif
 27346  00568C                     	if	0	;tblptru may be non-zero
 27347  00568C                     	endif
 27348  00568C  0008               	tblrd		*
 27349  00568E  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 27350  005692  0100               	movlb	0	; () banked
 27351  005694  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27352  005696  ECCB  F02E         	call	_UartWriteByte
 27353                           
 27354                           ;uart_drv.c: 504: ConstStringToWrite++;
 27355  00569A  0100               	movlb	0	; () banked
 27356  00569C  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 27357  00569E  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 27358  0056A0                     
 27359                           ; BSR set to: 0
 27360                           
 27361                           ; BSR set to: 0
 27362  0056A0  0100               	movlb	0	; () banked
 27363  0056A2  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27364  0056A4  ECB6  F029         	call	_UartTxBufferStatus
 27365  0056A8  06E8               	decf	wreg,f,c
 27366  0056AA  B4D8               	btfsc	status,2,c
 27367  0056AC  D7F9               	goto	l700
 27368  0056AE                     u11400:
 27369  0056AE  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27370  0056B2  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27371  0056B6                     	if	0	;tblptru may be non-zero
 27372  0056B6                     	endif
 27373  0056B6                     	if	0	;tblptru may be non-zero
 27374  0056B6                     	endif
 27375  0056B6  0008               	tblrd		*
 27376  0056B8  50F5               	movf	tablat,w,c
 27377  0056BA  0900               	iorlw	0
 27378  0056BC  B4D8               	btfsc	status,2,c
 27379  0056BE  0012               	return	
 27380  0056C0  D7E1               	goto	l698
 27381  0056C2                     __end_of_Uart_WriteConstString:
 27382                           	opt stack 0
 27383                           tosu	equ	0xFFF
 27384                           tosh	equ	0xFFE
 27385                           tosl	equ	0xFFD
 27386                           pclath	equ	0xFFA
 27387                           tblptru	equ	0xFF8
 27388                           tblptrh	equ	0xFF7
 27389                           tblptrl	equ	0xFF6
 27390                           tablat	equ	0xFF5
 27391                           prodh	equ	0xFF4
 27392                           prodl	equ	0xFF3
 27393                           intcon	equ	0xFF2
 27394                           intcon2	equ	0xFF1
 27395                           intcon3	equ	0xFF0
 27396                           indf0	equ	0xFEF
 27397                           postinc0	equ	0xFEE
 27398                           plusw0	equ	0xFEB
 27399                           fsr0h	equ	0xFEA
 27400                           fsr0l	equ	0xFE9
 27401                           wreg	equ	0xFE8
 27402                           indf1	equ	0xFE7
 27403                           postinc1	equ	0xFE6
 27404                           postdec1	equ	0xFE5
 27405                           plusw1	equ	0xFE3
 27406                           fsr1h	equ	0xFE2
 27407                           fsr1l	equ	0xFE1
 27408                           indf2	equ	0xFDF
 27409                           postinc2	equ	0xFDE
 27410                           postdec2	equ	0xFDD
 27411                           plusw2	equ	0xFDB
 27412                           fsr2h	equ	0xFDA
 27413                           fsr2l	equ	0xFD9
 27414                           status	equ	0xFD8
 27415                           
 27416 ;; *************** function _UartWriteByte *****************
 27417 ;; Defined at:
 27418 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27419 ;; Parameters:    Size  Location     Type
 27420 ;;  Module          1    wreg     unsigned char 
 27421 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 27422 ;; Auto vars:     Size  Location     Type
 27423 ;;  Module          1   30[BANK0 ] unsigned char 
 27424 ;; Return value:  Size  Location     Type
 27425 ;;                  1    wreg      void 
 27426 ;; Registers used:
 27427 ;;		wreg, status,2, status,0
 27428 ;; Tracked objects:
 27429 ;;		On entry : 0/0
 27430 ;;		On exit  : 0/0
 27431 ;;		Unchanged: 0/0
 27432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27433 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27436 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27437 ;;Total ram usage:        2 bytes
 27438 ;; Hardware stack levels used:    1
 27439 ;; Hardware stack levels required when called:   11
 27440 ;; This function calls:
 27441 ;;		Nothing
 27442 ;; This function is called by:
 27443 ;;		_Uart_WriteConstString
 27444 ;;		_Uart_WriteString
 27445 ;;		_Uart_WriteStringLen
 27446 ;; This function uses a non-reentrant model
 27447 ;;
 27448                           
 27449                           	psect	text123
 27450  005D96                     __ptext123:
 27451                           	opt stack 0
 27452  005D96                     _UartWriteByte:
 27453                           	opt stack 13
 27454                           
 27455                           ;incstack = 0
 27456                           ;UartWriteByte@Module stored from wreg
 27457  005D96  0100               	movlb	0	; () banked
 27458  005D98  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 27459                           
 27460                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 27461  005D9A  0100               	movlb	0	; () banked
 27462  005D9C  057E               	decf	UartWriteByte@Module& (0+255),w,b
 27463  005D9E  A4D8               	btfss	status,2,c
 27464  005DA0  D003               	goto	l639
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;uart_drv.c: 176: {
 27468                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 27469  005DA2  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 27470                           
 27471                           ;uart_drv.c: 179: }
 27472  005DA6  0012               	return	
 27473  005DA8                     l639:
 27474                           
 27475                           ; BSR set to: 0
 27476                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 27477                           
 27478                           ; BSR set to: 0
 27479  005DA8  0E02               	movlw	2
 27480  005DAA  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 27481  005DAC  A4D8               	btfss	status,2,c
 27482  005DAE  0012               	return	
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;uart_drv.c: 181: {
 27486                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 27487  005DB0  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 27488                           
 27489                           ; BSR set to: 0
 27490  005DB4  0012               	return	
 27491  005DB6                     __end_of_UartWriteByte:
 27492                           	opt stack 0
 27493                           tosu	equ	0xFFF
 27494                           tosh	equ	0xFFE
 27495                           tosl	equ	0xFFD
 27496                           pclath	equ	0xFFA
 27497                           tblptru	equ	0xFF8
 27498                           tblptrh	equ	0xFF7
 27499                           tblptrl	equ	0xFF6
 27500                           tablat	equ	0xFF5
 27501                           prodh	equ	0xFF4
 27502                           prodl	equ	0xFF3
 27503                           intcon	equ	0xFF2
 27504                           intcon2	equ	0xFF1
 27505                           intcon3	equ	0xFF0
 27506                           indf0	equ	0xFEF
 27507                           postinc0	equ	0xFEE
 27508                           plusw0	equ	0xFEB
 27509                           fsr0h	equ	0xFEA
 27510                           fsr0l	equ	0xFE9
 27511                           wreg	equ	0xFE8
 27512                           indf1	equ	0xFE7
 27513                           postinc1	equ	0xFE6
 27514                           postdec1	equ	0xFE5
 27515                           plusw1	equ	0xFE3
 27516                           fsr1h	equ	0xFE2
 27517                           fsr1l	equ	0xFE1
 27518                           indf2	equ	0xFDF
 27519                           postinc2	equ	0xFDE
 27520                           postdec2	equ	0xFDD
 27521                           plusw2	equ	0xFDB
 27522                           fsr2h	equ	0xFDA
 27523                           fsr2l	equ	0xFD9
 27524                           status	equ	0xFD8
 27525                           
 27526 ;; *************** function _UartTxBufferStatus *****************
 27527 ;; Defined at:
 27528 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27529 ;; Parameters:    Size  Location     Type
 27530 ;;  Module          1    wreg     unsigned char 
 27531 ;; Auto vars:     Size  Location     Type
 27532 ;;  Module          1   30[BANK0 ] unsigned char 
 27533 ;;  TxBufferStat    1   31[BANK0 ] enum E9017
 27534 ;; Return value:  Size  Location     Type
 27535 ;;                  1    wreg      enum E9017
 27536 ;; Registers used:
 27537 ;;		wreg, status,2, status,0
 27538 ;; Tracked objects:
 27539 ;;		On entry : 0/0
 27540 ;;		On exit  : 0/0
 27541 ;;		Unchanged: 0/0
 27542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27546 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27547 ;;Total ram usage:        3 bytes
 27548 ;; Hardware stack levels used:    1
 27549 ;; Hardware stack levels required when called:   11
 27550 ;; This function calls:
 27551 ;;		Nothing
 27552 ;; This function is called by:
 27553 ;;		_Uart_WriteConstString
 27554 ;;		_Uart_WriteString
 27555 ;;		_Uart_WriteStringLen
 27556 ;; This function uses a non-reentrant model
 27557 ;;
 27558                           
 27559                           	psect	text124
 27560  00536C                     __ptext124:
 27561                           	opt stack 0
 27562  00536C                     _UartTxBufferStatus:
 27563                           	opt stack 13
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;incstack = 0
 27567                           ;UartTxBufferStatus@Module stored from wreg
 27568  00536C  0100               	movlb	0	; () banked
 27569  00536E  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 27570                           
 27571                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 27572  005370  0E00               	movlw	0
 27573  005372  0100               	movlb	0	; () banked
 27574  005374  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27575                           
 27576                           ; BSR set to: 0
 27577                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 27578  005376  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 27579  005378  A4D8               	btfss	status,2,c
 27580  00537A  D00B               	goto	l651
 27581                           
 27582                           ; BSR set to: 0
 27583                           ;uart_drv.c: 228: {
 27584                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27585  00537C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27586  005380  90D8               	bcf	status,0,c
 27587  005382  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27588  005384  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 27589  005386  D002               	goto	l652
 27590  005388                     u10420:
 27591                           
 27592                           ; BSR set to: 0
 27593                           ;uart_drv.c: 231: {
 27594                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 27595  005388  0E01               	movlw	1
 27596  00538A  D014               	goto	L41
 27597  00538C                     l652:
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27601                           
 27602                           ; BSR set to: 0
 27603  00538C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27604  005390  D00C               	goto	L70
 27605  005392                     l651:
 27606                           
 27607                           ; BSR set to: 0
 27608                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 27609                           
 27610                           ; BSR set to: 0
 27611  005392  0E02               	movlw	2
 27612  005394  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 27613  005396  A4D8               	btfss	status,2,c
 27614  005398  D00E               	goto	l660
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;uart_drv.c: 244: {
 27618                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27619  00539A  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27620  00539E  90D8               	bcf	status,0,c
 27621  0053A0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27622  0053A2  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27623  0053A4  D7F1               	goto	u10420
 27624                           
 27625                           ; BSR set to: 0
 27626                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27627                           
 27628                           ; BSR set to: 0
 27629                           
 27630                           ;uart_drv.c: 249: }
 27631                           
 27632                           ; BSR set to: 0
 27633                           ;uart_drv.c: 247: {
 27634                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 27635  0053A6  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27636  0053AA                     L70:
 27637  0053AA  90D8               	bcf	status,0,c
 27638  0053AC  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27639  0053AE  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27640  0053B0  D002               	goto	l660
 27641                           
 27642                           ; BSR set to: 0
 27643                           ;uart_drv.c: 251: {
 27644                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 27645  0053B2  0E02               	movlw	2
 27646  0053B4                     L41:
 27647  0053B4  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27648  0053B6                     l660:
 27649                           
 27650                           ; BSR set to: 0
 27651                           ;uart_drv.c: 257: }
 27652                           ;uart_drv.c: 258: }
 27653                           ;uart_drv.c: 260: return TxBufferStatus;
 27654                           
 27655                           ; BSR set to: 0
 27656                           
 27657                           ; BSR set to: 0
 27658                           
 27659                           ; BSR set to: 0
 27660                           
 27661                           ; BSR set to: 0
 27662                           
 27663                           ;uart_drv.c: 254: else
 27664                           ;uart_drv.c: 255: {
 27665                           
 27666                           ; BSR set to: 0
 27667  0053B6  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 27668  0053B8  0012               	return	
 27669  0053BA                     __end_of_UartTxBufferStatus:
 27670                           	opt stack 0
 27671                           tosu	equ	0xFFF
 27672                           tosh	equ	0xFFE
 27673                           tosl	equ	0xFFD
 27674                           pclath	equ	0xFFA
 27675                           tblptru	equ	0xFF8
 27676                           tblptrh	equ	0xFF7
 27677                           tblptrl	equ	0xFF6
 27678                           tablat	equ	0xFF5
 27679                           prodh	equ	0xFF4
 27680                           prodl	equ	0xFF3
 27681                           intcon	equ	0xFF2
 27682                           intcon2	equ	0xFF1
 27683                           intcon3	equ	0xFF0
 27684                           indf0	equ	0xFEF
 27685                           postinc0	equ	0xFEE
 27686                           plusw0	equ	0xFEB
 27687                           fsr0h	equ	0xFEA
 27688                           fsr0l	equ	0xFE9
 27689                           wreg	equ	0xFE8
 27690                           indf1	equ	0xFE7
 27691                           postinc1	equ	0xFE6
 27692                           postdec1	equ	0xFE5
 27693                           plusw1	equ	0xFE3
 27694                           fsr1h	equ	0xFE2
 27695                           fsr1l	equ	0xFE1
 27696                           indf2	equ	0xFDF
 27697                           postinc2	equ	0xFDE
 27698                           postdec2	equ	0xFDD
 27699                           plusw2	equ	0xFDB
 27700                           fsr2h	equ	0xFDA
 27701                           fsr2l	equ	0xFD9
 27702                           status	equ	0xFD8
 27703                           
 27704 ;; *************** function _StringCopy *****************
 27705 ;; Defined at:
 27706 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27707 ;; Parameters:    Size  Location     Type
 27708 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 27709 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 27710 ;;		 -> STR_5(10), Mdm_SmsRx(132), RxBuffer(400), 
 27711 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 27712 ;;		 -> MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 27713 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 27714 ;;  Len             2   33[BANK0 ] unsigned short 
 27715 ;; Auto vars:     Size  Location     Type
 27716 ;;  Index           2   37[BANK0 ] unsigned short 
 27717 ;; Return value:  Size  Location     Type
 27718 ;;                  1    wreg      void 
 27719 ;; Registers used:
 27720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27721 ;; Tracked objects:
 27722 ;;		On entry : 0/0
 27723 ;;		On exit  : 0/0
 27724 ;;		Unchanged: 0/0
 27725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27726 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27727 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27729 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27730 ;;Total ram usage:       10 bytes
 27731 ;; Hardware stack levels used:    1
 27732 ;; Hardware stack levels required when called:   11
 27733 ;; This function calls:
 27734 ;;		Nothing
 27735 ;; This function is called by:
 27736 ;;		_GetSmsSm
 27737 ;;		_SendSmsSm
 27738 ;;		_Mdm_GetSmsData
 27739 ;;		_InitGprsNetwork
 27740 ;;		_HttpGetMethod
 27741 ;;		_Mdm_SendSmsData
 27742 ;; This function uses a non-reentrant model
 27743 ;;
 27744                           
 27745                           	psect	text125
 27746  004E00                     __ptext125:
 27747                           	opt stack 0
 27748  004E00                     _StringCopy:
 27749                           	opt stack 15
 27750                           
 27751                           ;sf.c: 106: UINT16 Index = 0;
 27752                           
 27753                           ; BSR set to: 0
 27754                           ;incstack = 0
 27755  004E00  0E00               	movlw	0
 27756  004E02  0100               	movlb	0	; () banked
 27757  004E04  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27758  004E06  0E00               	movlw	0
 27759  004E08  6F85               	movwf	StringCopy@Index& (0+255),b
 27760                           
 27761                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 27762  004E0A  0E00               	movlw	0
 27763  004E0C  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27764  004E0E  0E00               	movlw	0
 27765  004E10  6F85               	movwf	StringCopy@Index& (0+255),b
 27766  004E12  D020               	goto	l2204
 27767  004E14                     
 27768                           ; BSR set to: 0
 27769                           ;sf.c: 110: {
 27770                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 27771                           
 27772                           ; BSR set to: 0
 27773  004E14  5185               	movf	StringCopy@Index& (0+255),w,b
 27774  004E16  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 27775  004E18  6F83               	movwf	??_StringCopy& (0+255),b
 27776  004E1A  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27777  004E1C  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 27778  004E1E  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 27779  004E20  C083  FFF6         	movff	??_StringCopy,tblptrl
 27780  004E24  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 27781  004E28  6AF8               	clrf	tblptru,c
 27782  004E2A  5185               	movf	StringCopy@Index& (0+255),w,b
 27783  004E2C  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 27784  004E2E  6ED9               	movwf	fsr2l,c
 27785  004E30  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27786  004E32  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 27787  004E34  6EDA               	movwf	fsr2h,c
 27788  004E36  0E0E               	movlw	(high __ramtop+-1)
 27789  004E38  64F7               	cpfsgt	tblptrh,c
 27790  004E3A  D003               	bra	u11447
 27791  004E3C  0008               	tblrd		*
 27792  004E3E  50F5               	movf	tablat,w,c
 27793  004E40  D005               	bra	u11440
 27794  004E42                     u11447:
 27795  004E42  CFF6 FFE9          	movff	tblptrl,fsr0l
 27796  004E46  CFF7 FFEA          	movff	tblptrh,fsr0h
 27797  004E4A  50EF               	movf	indf0,w,c
 27798  004E4C                     u11440:
 27799  004E4C  6EDF               	movwf	indf2,c
 27800  004E4E  0100               	movlb	0	; () banked
 27801  004E50  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 27802  004E52  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 27803  004E54                     l2204:
 27804                           
 27805                           ; BSR set to: 0
 27806                           
 27807                           ; BSR set to: 0
 27808  004E54  5181               	movf	StringCopy@Len& (0+255),w,b
 27809  004E56  5D85               	subwf	StringCopy@Index& (0+255),w,b
 27810  004E58  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 27811  004E5A  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 27812  004E5C  B0D8               	btfsc	status,0,c
 27813  004E5E  0012               	return	
 27814  004E60  D7D9               	goto	l2205
 27815  004E62                     __end_of_StringCopy:
 27816                           	opt stack 0
 27817                           tosu	equ	0xFFF
 27818                           tosh	equ	0xFFE
 27819                           tosl	equ	0xFFD
 27820                           pclath	equ	0xFFA
 27821                           tblptru	equ	0xFF8
 27822                           tblptrh	equ	0xFF7
 27823                           tblptrl	equ	0xFF6
 27824                           tablat	equ	0xFF5
 27825                           prodh	equ	0xFF4
 27826                           prodl	equ	0xFF3
 27827                           intcon	equ	0xFF2
 27828                           intcon2	equ	0xFF1
 27829                           intcon3	equ	0xFF0
 27830                           indf0	equ	0xFEF
 27831                           postinc0	equ	0xFEE
 27832                           plusw0	equ	0xFEB
 27833                           fsr0h	equ	0xFEA
 27834                           fsr0l	equ	0xFE9
 27835                           wreg	equ	0xFE8
 27836                           indf1	equ	0xFE7
 27837                           postinc1	equ	0xFE6
 27838                           postdec1	equ	0xFE5
 27839                           plusw1	equ	0xFE3
 27840                           fsr1h	equ	0xFE2
 27841                           fsr1l	equ	0xFE1
 27842                           indf2	equ	0xFDF
 27843                           postinc2	equ	0xFDE
 27844                           postdec2	equ	0xFDD
 27845                           plusw2	equ	0xFDB
 27846                           fsr2h	equ	0xFDA
 27847                           fsr2l	equ	0xFD9
 27848                           status	equ	0xFD8
 27849                           
 27850 ;; *************** function _OsTmr_StartTimer *****************
 27851 ;; Defined at:
 27852 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27853 ;; Parameters:    Size  Location     Type
 27854 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 27855 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27856 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27857 ;;  Timeout         4   35[BANK0 ] unsigned long 
 27858 ;; Auto vars:     Size  Location     Type
 27859 ;;		None
 27860 ;; Return value:  Size  Location     Type
 27861 ;;                  1    wreg      void 
 27862 ;; Registers used:
 27863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27864 ;; Tracked objects:
 27865 ;;		On entry : 0/0
 27866 ;;		On exit  : 0/0
 27867 ;;		Unchanged: 0/0
 27868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27869 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27873 ;;Total ram usage:        6 bytes
 27874 ;; Hardware stack levels used:    1
 27875 ;; Hardware stack levels required when called:   12
 27876 ;; This function calls:
 27877 ;;		_GetOsTickCounter
 27878 ;; This function is called by:
 27879 ;;		_OsTmr_Wait
 27880 ;;		_CheckModem
 27881 ;;		_SendSmsSm
 27882 ;;		_InitGprsNetwork
 27883 ;;		_HttpGetMethod
 27884 ;;		_Term_MainSm
 27885 ;;		_I2cSlv_QueryI2cData
 27886 ;; This function uses a non-reentrant model
 27887 ;;
 27888                           
 27889                           	psect	text126
 27890  004EC0                     __ptext126:
 27891                           	opt stack 0
 27892  004EC0                     _OsTmr_StartTimer:
 27893                           	opt stack 12
 27894                           
 27895                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 27896                           
 27897                           ; BSR set to: 0
 27898                           ;incstack = 0
 27899  004EC0  0100               	movlb	0	; () banked
 27900  004EC2  EE20 F001          	lfsr	2,1
 27901  004EC6  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27902  004EC8  26D9               	addwf	fsr2l,f,c
 27903  004ECA  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27904  004ECC  22DA               	addwfc	fsr2h,f,c
 27905  004ECE  0E00               	movlw	0
 27906  004ED0  6EDF               	movwf	indf2,c
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 27910  004ED2  EC9C  F02F         	call	_GetOsTickCounter	;wreg free
 27911  004ED6  0100               	movlb	0	; () banked
 27912  004ED8  EE20 F002          	lfsr	2,2
 27913  004EDC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27914  004EDE  26D9               	addwf	fsr2l,f,c
 27915  004EE0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27916  004EE2  22DA               	addwfc	fsr2h,f,c
 27917  004EE4  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 27918  004EE8  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 27919  004EEC  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 27920  004EF0  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 27921                           
 27922                           ; BSR set to: 0
 27923                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 27924  004EF4  EE20 F006          	lfsr	2,6
 27925  004EF8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27926  004EFA  26D9               	addwf	fsr2l,f,c
 27927  004EFC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27928  004EFE  22DA               	addwfc	fsr2h,f,c
 27929  004F00  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 27930  004F04  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 27931  004F08  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 27932  004F0C  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;os_timers.c: 127: Timer->Enabled = 1u;
 27936  004F10  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 27937  004F14  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 27938  004F18  0E01               	movlw	1
 27939  004F1A  6EDF               	movwf	indf2,c
 27940                           
 27941                           ; BSR set to: 0
 27942  004F1C  0012               	return		;funcret
 27943  004F1E                     __end_of_OsTmr_StartTimer:
 27944                           	opt stack 0
 27945                           tosu	equ	0xFFF
 27946                           tosh	equ	0xFFE
 27947                           tosl	equ	0xFFD
 27948                           pclath	equ	0xFFA
 27949                           tblptru	equ	0xFF8
 27950                           tblptrh	equ	0xFF7
 27951                           tblptrl	equ	0xFF6
 27952                           tablat	equ	0xFF5
 27953                           prodh	equ	0xFF4
 27954                           prodl	equ	0xFF3
 27955                           intcon	equ	0xFF2
 27956                           intcon2	equ	0xFF1
 27957                           intcon3	equ	0xFF0
 27958                           indf0	equ	0xFEF
 27959                           postinc0	equ	0xFEE
 27960                           plusw0	equ	0xFEB
 27961                           fsr0h	equ	0xFEA
 27962                           fsr0l	equ	0xFE9
 27963                           wreg	equ	0xFE8
 27964                           indf1	equ	0xFE7
 27965                           postinc1	equ	0xFE6
 27966                           postdec1	equ	0xFE5
 27967                           plusw1	equ	0xFE3
 27968                           fsr1h	equ	0xFE2
 27969                           fsr1l	equ	0xFE1
 27970                           indf2	equ	0xFDF
 27971                           postinc2	equ	0xFDE
 27972                           postdec2	equ	0xFDD
 27973                           plusw2	equ	0xFDB
 27974                           fsr2h	equ	0xFDA
 27975                           fsr2l	equ	0xFD9
 27976                           status	equ	0xFD8
 27977                           
 27978 ;; *************** function _OsTmr_GetTimerStatus *****************
 27979 ;; Defined at:
 27980 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27981 ;; Parameters:    Size  Location     Type
 27982 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 27983 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27984 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27985 ;; Auto vars:     Size  Location     Type
 27986 ;;		None
 27987 ;; Return value:  Size  Location     Type
 27988 ;;                  1    wreg      enum E7740
 27989 ;; Registers used:
 27990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27991 ;; Tracked objects:
 27992 ;;		On entry : 0/0
 27993 ;;		On exit  : 0/0
 27994 ;;		Unchanged: 0/0
 27995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27998 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27999 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28000 ;;Total ram usage:        6 bytes
 28001 ;; Hardware stack levels used:    1
 28002 ;; Hardware stack levels required when called:   13
 28003 ;; This function calls:
 28004 ;;		_GetElapsedTime
 28005 ;; This function is called by:
 28006 ;;		_OsTmr_Wait
 28007 ;;		_CheckModem
 28008 ;;		_SendSmsSm
 28009 ;;		_InitGprsNetwork
 28010 ;;		_HttpGetMethod
 28011 ;;		_Term_MainSm
 28012 ;;		_I2cSlv_QueryI2cData
 28013 ;; This function uses a non-reentrant model
 28014 ;;
 28015                           
 28016                           	psect	text127
 28017  0047D2                     __ptext127:
 28018                           	opt stack 0
 28019  0047D2                     _OsTmr_GetTimerStatus:
 28020                           	opt stack 11
 28021                           
 28022                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28023                           
 28024                           ; BSR set to: 0
 28025                           ;incstack = 0
 28026  0047D2  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28027  0047D6  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28028  0047DA  04DE               	decf	postinc2,w,c
 28029  0047DC  A4D8               	btfss	status,2,c
 28030  0047DE  D030               	goto	l864
 28031                           
 28032                           ;os_timers.c: 197: {
 28033                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28034  0047E0  0100               	movlb	0	; () banked
 28035  0047E2  EE20 F006          	lfsr	2,6
 28036  0047E6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28037  0047E8  26D9               	addwf	fsr2l,f,c
 28038  0047EA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28039  0047EC  22DA               	addwfc	fsr2h,f,c
 28040  0047EE  EE10 F002          	lfsr	1,2
 28041  0047F2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28042  0047F4  26E1               	addwf	fsr1l,f,c
 28043  0047F6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28044  0047F8  22E2               	addwfc	fsr1h,f,c
 28045  0047FA  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28046  0047FE  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28047  004802  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28048  004806  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28049  00480A  EC37  F01D         	call	_GetElapsedTime	;wreg free
 28050  00480E  50DE               	movf	postinc2,w,c
 28051  004810  0100               	movlb	0	; () banked
 28052  004812  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28053  004814  50DE               	movf	postinc2,w,c
 28054  004816  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28055  004818  50DE               	movf	postinc2,w,c
 28056  00481A  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28057  00481C  50DE               	movf	postinc2,w,c
 28058  00481E  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28059  004820  A0D8               	btfss	status,0,c
 28060  004822  D017               	goto	l867
 28061                           
 28062                           ; BSR set to: 0
 28063                           ;os_timers.c: 200: {
 28064                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28065  004824  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28066  004828  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28067  00482C  0E00               	movlw	0
 28068  00482E  6EDF               	movwf	indf2,c
 28069                           
 28070                           ; BSR set to: 0
 28071                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28072  004830  EE20 F001          	lfsr	2,1
 28073  004834  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28074  004836  26D9               	addwf	fsr2l,f,c
 28075  004838  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28076  00483A  22DA               	addwfc	fsr2h,f,c
 28077  00483C  0E01               	movlw	1
 28078  00483E  D008               	goto	L71
 28079  004840                     l864:
 28080                           
 28081                           ;os_timers.c: 211: else
 28082                           ;os_timers.c: 212: {
 28083                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28084                           
 28085                           ; BSR set to: 0
 28086  004840  0100               	movlb	0	; () banked
 28087  004842  EE20 F001          	lfsr	2,1
 28088  004846  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28089  004848  26D9               	addwf	fsr2l,f,c
 28090  00484A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28091  00484C  22DA               	addwfc	fsr2h,f,c
 28092  00484E  0E02               	movlw	2
 28093  004850                     L71:
 28094  004850  6EDF               	movwf	indf2,c
 28095  004852                     l867:
 28096                           
 28097                           ; BSR set to: 0
 28098                           ;os_timers.c: 215: }
 28099                           ;os_timers.c: 218: return Timer->Status;
 28100  004852  EE20 F001          	lfsr	2,1
 28101  004856  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28102  004858  26D9               	addwf	fsr2l,f,c
 28103  00485A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28104  00485C  22DA               	addwfc	fsr2h,f,c
 28105  00485E  50DF               	movf	indf2,w,c
 28106  004860  0012               	return	
 28107  004862                     __end_of_OsTmr_GetTimerStatus:
 28108                           	opt stack 0
 28109                           tosu	equ	0xFFF
 28110                           tosh	equ	0xFFE
 28111                           tosl	equ	0xFFD
 28112                           pclath	equ	0xFFA
 28113                           tblptru	equ	0xFF8
 28114                           tblptrh	equ	0xFF7
 28115                           tblptrl	equ	0xFF6
 28116                           tablat	equ	0xFF5
 28117                           prodh	equ	0xFF4
 28118                           prodl	equ	0xFF3
 28119                           intcon	equ	0xFF2
 28120                           intcon2	equ	0xFF1
 28121                           intcon3	equ	0xFF0
 28122                           indf0	equ	0xFEF
 28123                           postinc0	equ	0xFEE
 28124                           plusw0	equ	0xFEB
 28125                           fsr0h	equ	0xFEA
 28126                           fsr0l	equ	0xFE9
 28127                           wreg	equ	0xFE8
 28128                           indf1	equ	0xFE7
 28129                           postinc1	equ	0xFE6
 28130                           postdec1	equ	0xFE5
 28131                           plusw1	equ	0xFE3
 28132                           fsr1h	equ	0xFE2
 28133                           fsr1l	equ	0xFE1
 28134                           indf2	equ	0xFDF
 28135                           postinc2	equ	0xFDE
 28136                           postdec2	equ	0xFDD
 28137                           plusw2	equ	0xFDB
 28138                           fsr2h	equ	0xFDA
 28139                           fsr2l	equ	0xFD9
 28140                           status	equ	0xFD8
 28141                           
 28142 ;; *************** function _GetElapsedTime *****************
 28143 ;; Defined at:
 28144 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28145 ;; Parameters:    Size  Location     Type
 28146 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28147 ;; Auto vars:     Size  Location     Type
 28148 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28149 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28150 ;; Return value:  Size  Location     Type
 28151 ;;                  4   33[BANK0 ] unsigned long 
 28152 ;; Registers used:
 28153 ;;		wreg, status,2, status,0, cstack
 28154 ;; Tracked objects:
 28155 ;;		On entry : 0/0
 28156 ;;		On exit  : 0/0
 28157 ;;		Unchanged: 0/0
 28158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28160 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28161 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28162 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28163 ;;Total ram usage:       20 bytes
 28164 ;; Hardware stack levels used:    1
 28165 ;; Hardware stack levels required when called:   12
 28166 ;; This function calls:
 28167 ;;		_GetOsTickCounter
 28168 ;; This function is called by:
 28169 ;;		_OsTmr_GetTimerStatus
 28170 ;;		_OsTmr_GetRemainingTime
 28171 ;; This function uses a non-reentrant model
 28172 ;;
 28173                           
 28174                           	psect	text128
 28175  003A6E                     __ptext128:
 28176                           	opt stack 0
 28177  003A6E                     _GetElapsedTime:
 28178                           	opt stack 11
 28179                           
 28180                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28181                           ;os_timers.c: 87: UINT32 TimeValue;
 28182                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28183                           
 28184                           ; BSR set to: 0
 28185                           ;incstack = 0
 28186  003A6E  EC9C  F02F         	call	_GetOsTickCounter	;wreg free
 28187  003A72  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28188  003A76  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28189  003A7A  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28190  003A7E  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28191                           
 28192                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28193  003A82  0100               	movlb	0	; () banked
 28194  003A84  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28195  003A86  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28196  003A88  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28197  003A8A  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28198  003A8C  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28199  003A8E  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28200  003A90  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28201  003A92  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28202  003A94  A0D8               	btfss	status,0,c
 28203  003A96  D01D               	goto	l844
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;os_timers.c: 94: {
 28207                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28208  003A98  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28209  003A9C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28210  003AA0  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28211  003AA4  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28212  003AA8  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28213  003AAA  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28214  003AAC  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28215  003AAE  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28216  003AB0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28217  003AB2  0E00               	movlw	0
 28218  003AB4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28219  003AB6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28220  003AB8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28221  003ABA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28222  003ABC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28223  003ABE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28224  003AC0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28225  003AC2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28226  003AC4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28227  003AC6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28228  003AC8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28229  003ACA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28230  003ACC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28231  003ACE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28232  003AD0  D028               	goto	L42
 28233  003AD2                     l844:
 28234                           
 28235                           ; BSR set to: 0
 28236                           ;os_timers.c: 97: else
 28237                           ;os_timers.c: 98: {
 28238                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28239                           
 28240                           ; BSR set to: 0
 28241  003AD2  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28242  003AD6  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28243  003ADA  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28244  003ADE  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28245  003AE2  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28246  003AE4  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28247  003AE6  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28248  003AE8  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28249  003AEA  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28250  003AEC  0E00               	movlw	0
 28251  003AEE  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28252  003AF0  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28253  003AF2  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28254  003AF4  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28255  003AF6  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28256  003AF8  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28257  003AFA  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28258  003AFC  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28259  003AFE  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28260  003B00  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28261  003B02  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28262  003B04  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28263  003B06  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28264  003B08  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28265  003B0A  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28266  003B0C  0EFF               	movlw	255
 28267  003B0E  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28268  003B10  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28269  003B12  0EFF               	movlw	255
 28270  003B14  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28271  003B16  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28272  003B18  0EFF               	movlw	255
 28273  003B1A  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28274  003B1C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28275  003B1E  0EFF               	movlw	255
 28276  003B20  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28277  003B22                     L42:
 28278  003B22  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;os_timers.c: 100: }
 28282                           ;os_timers.c: 102: return TimeValue;
 28283                           
 28284                           ; BSR set to: 0
 28285  003B24  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28286  003B28  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28287  003B2C  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28288  003B30  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28289  003B34  0012               	return	
 28290  003B36                     __end_of_GetElapsedTime:
 28291                           	opt stack 0
 28292                           tosu	equ	0xFFF
 28293                           tosh	equ	0xFFE
 28294                           tosl	equ	0xFFD
 28295                           pclath	equ	0xFFA
 28296                           tblptru	equ	0xFF8
 28297                           tblptrh	equ	0xFF7
 28298                           tblptrl	equ	0xFF6
 28299                           tablat	equ	0xFF5
 28300                           prodh	equ	0xFF4
 28301                           prodl	equ	0xFF3
 28302                           intcon	equ	0xFF2
 28303                           intcon2	equ	0xFF1
 28304                           intcon3	equ	0xFF0
 28305                           indf0	equ	0xFEF
 28306                           postinc0	equ	0xFEE
 28307                           plusw0	equ	0xFEB
 28308                           fsr0h	equ	0xFEA
 28309                           fsr0l	equ	0xFE9
 28310                           wreg	equ	0xFE8
 28311                           indf1	equ	0xFE7
 28312                           postinc1	equ	0xFE6
 28313                           postdec1	equ	0xFE5
 28314                           plusw1	equ	0xFE3
 28315                           fsr1h	equ	0xFE2
 28316                           fsr1l	equ	0xFE1
 28317                           indf2	equ	0xFDF
 28318                           postinc2	equ	0xFDE
 28319                           postdec2	equ	0xFDD
 28320                           plusw2	equ	0xFDB
 28321                           fsr2h	equ	0xFDA
 28322                           fsr2l	equ	0xFD9
 28323                           status	equ	0xFD8
 28324                           
 28325 ;; *************** function _GetOsTickCounter *****************
 28326 ;; Defined at:
 28327 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28328 ;; Parameters:    Size  Location     Type
 28329 ;;		None
 28330 ;; Auto vars:     Size  Location     Type
 28331 ;;		None
 28332 ;; Return value:  Size  Location     Type
 28333 ;;                  4   29[BANK0 ] unsigned long 
 28334 ;; Registers used:
 28335 ;;		None
 28336 ;; Tracked objects:
 28337 ;;		On entry : 0/0
 28338 ;;		On exit  : 0/0
 28339 ;;		Unchanged: 0/0
 28340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28341 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28344 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28345 ;;Total ram usage:        4 bytes
 28346 ;; Hardware stack levels used:    1
 28347 ;; Hardware stack levels required when called:   11
 28348 ;; This function calls:
 28349 ;;		Nothing
 28350 ;; This function is called by:
 28351 ;;		_GetElapsedTime
 28352 ;;		_OsTmr_StartTimer
 28353 ;;		_OsTmr_GetElapsedTime
 28354 ;; This function uses a non-reentrant model
 28355 ;;
 28356                           
 28357                           	psect	text129
 28358  005F38                     __ptext129:
 28359                           	opt stack 0
 28360  005F38                     _GetOsTickCounter:
 28361                           	opt stack 12
 28362                           
 28363                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 28364                           
 28365                           ; BSR set to: 0
 28366                           ;incstack = 0
 28367  005F38  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 28368  005F3C  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 28369  005F40  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 28370  005F44  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 28371  005F48  0012               	return		;funcret
 28372  005F4A                     __end_of_GetOsTickCounter:
 28373                           	opt stack 0
 28374                           tosu	equ	0xFFF
 28375                           tosh	equ	0xFFE
 28376                           tosl	equ	0xFFD
 28377                           pclath	equ	0xFFA
 28378                           tblptru	equ	0xFF8
 28379                           tblptrh	equ	0xFF7
 28380                           tblptrl	equ	0xFF6
 28381                           tablat	equ	0xFF5
 28382                           prodh	equ	0xFF4
 28383                           prodl	equ	0xFF3
 28384                           intcon	equ	0xFF2
 28385                           intcon2	equ	0xFF1
 28386                           intcon3	equ	0xFF0
 28387                           indf0	equ	0xFEF
 28388                           postinc0	equ	0xFEE
 28389                           plusw0	equ	0xFEB
 28390                           fsr0h	equ	0xFEA
 28391                           fsr0l	equ	0xFE9
 28392                           wreg	equ	0xFE8
 28393                           indf1	equ	0xFE7
 28394                           postinc1	equ	0xFE6
 28395                           postdec1	equ	0xFE5
 28396                           plusw1	equ	0xFE3
 28397                           fsr1h	equ	0xFE2
 28398                           fsr1l	equ	0xFE1
 28399                           indf2	equ	0xFDF
 28400                           postinc2	equ	0xFDE
 28401                           postdec2	equ	0xFDD
 28402                           plusw2	equ	0xFDB
 28403                           fsr2h	equ	0xFDA
 28404                           fsr2l	equ	0xFD9
 28405                           status	equ	0xFD8
 28406                           
 28407 ;; *************** function _ClearBuffer *****************
 28408 ;; Defined at:
 28409 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28410 ;; Parameters:    Size  Location     Type
 28411 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 28412 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), RxBuffer(400),
      + 
 28413 ;;  Len             2   31[BANK0 ] unsigned short 
 28414 ;; Auto vars:     Size  Location     Type
 28415 ;;  Index           2   33[BANK0 ] unsigned short 
 28416 ;; Return value:  Size  Location     Type
 28417 ;;                  1    wreg      void 
 28418 ;; Registers used:
 28419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28420 ;; Tracked objects:
 28421 ;;		On entry : 0/0
 28422 ;;		On exit  : 0/0
 28423 ;;		Unchanged: 0/0
 28424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28428 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28429 ;;Total ram usage:        6 bytes
 28430 ;; Hardware stack levels used:    1
 28431 ;; Hardware stack levels required when called:   11
 28432 ;; This function calls:
 28433 ;;		Nothing
 28434 ;; This function is called by:
 28435 ;;		_InitGprsNetwork
 28436 ;;		_HttpGetMethod
 28437 ;;		_GsmGprsTerminal
 28438 ;; This function uses a non-reentrant model
 28439 ;;
 28440                           
 28441                           	psect	text130
 28442  005962                     __ptext130:
 28443                           	opt stack 0
 28444  005962                     _ClearBuffer:
 28445                           	opt stack 15
 28446                           
 28447                           ;sf.c: 126: UINT16 Index = 0;
 28448                           
 28449                           ;incstack = 0
 28450  005962  0E00               	movlw	0
 28451  005964  0100               	movlb	0	; () banked
 28452  005966  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28453  005968  0E00               	movlw	0
 28454  00596A  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28455                           
 28456                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 28457  00596C  0E00               	movlw	0
 28458  00596E  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28459  005970  0E00               	movlw	0
 28460  005972  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28461  005974  D00A               	goto	l2210
 28462  005976                     
 28463                           ; BSR set to: 0
 28464                           ;sf.c: 130: {
 28465                           ;sf.c: 131: *(Buffer + Index) = 0;
 28466                           
 28467                           ; BSR set to: 0
 28468  005976  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28469  005978  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 28470  00597A  6ED9               	movwf	fsr2l,c
 28471  00597C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28472  00597E  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 28473  005980  6EDA               	movwf	fsr2h,c
 28474  005982  0E00               	movlw	0
 28475  005984  6EDF               	movwf	indf2,c
 28476                           
 28477                           ; BSR set to: 0
 28478  005986  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 28479  005988  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 28480  00598A                     l2210:
 28481                           
 28482                           ; BSR set to: 0
 28483                           
 28484                           ; BSR set to: 0
 28485  00598A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28486  00598C  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 28487  00598E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28488  005990  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 28489  005992  A0D8               	btfss	status,0,c
 28490  005994  0012               	return	
 28491  005996  D7EF               	goto	l2211
 28492  005998                     __end_of_ClearBuffer:
 28493                           	opt stack 0
 28494                           tosu	equ	0xFFF
 28495                           tosh	equ	0xFFE
 28496                           tosl	equ	0xFFD
 28497                           pclath	equ	0xFFA
 28498                           tblptru	equ	0xFF8
 28499                           tblptrh	equ	0xFF7
 28500                           tblptrl	equ	0xFF6
 28501                           tablat	equ	0xFF5
 28502                           prodh	equ	0xFF4
 28503                           prodl	equ	0xFF3
 28504                           intcon	equ	0xFF2
 28505                           intcon2	equ	0xFF1
 28506                           intcon3	equ	0xFF0
 28507                           indf0	equ	0xFEF
 28508                           postinc0	equ	0xFEE
 28509                           plusw0	equ	0xFEB
 28510                           fsr0h	equ	0xFEA
 28511                           fsr0l	equ	0xFE9
 28512                           wreg	equ	0xFE8
 28513                           indf1	equ	0xFE7
 28514                           postinc1	equ	0xFE6
 28515                           postdec1	equ	0xFE5
 28516                           plusw1	equ	0xFE3
 28517                           fsr1h	equ	0xFE2
 28518                           fsr1l	equ	0xFE1
 28519                           indf2	equ	0xFDF
 28520                           postinc2	equ	0xFDE
 28521                           postdec2	equ	0xFDD
 28522                           plusw2	equ	0xFDB
 28523                           fsr2h	equ	0xFDA
 28524                           fsr2l	equ	0xFD9
 28525                           status	equ	0xFD8
 28526                           
 28527 ;; *************** function _LedStateMachine *****************
 28528 ;; Defined at:
 28529 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28530 ;; Parameters:    Size  Location     Type
 28531 ;;  Led             1    wreg     unsigned char 
 28532 ;;  LedSts          2   47[BANK0 ] PTR enum E8934
 28533 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 28534 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 28535 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 28536 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 28537 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28538 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 28539 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28540 ;; Auto vars:     Size  Location     Type
 28541 ;;  Led             1   57[BANK0 ] unsigned char 
 28542 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 28543 ;; Return value:  Size  Location     Type
 28544 ;;                  1    wreg      unsigned char 
 28545 ;; Registers used:
 28546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28547 ;; Tracked objects:
 28548 ;;		On entry : 0/0
 28549 ;;		On exit  : 0/0
 28550 ;;		Unchanged: 0/0
 28551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28552 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28553 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28555 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28556 ;;Total ram usage:       11 bytes
 28557 ;; Hardware stack levels used:    1
 28558 ;; Hardware stack levels required when called:   13
 28559 ;; This function calls:
 28560 ;;		_LedBlinkStateMachine
 28561 ;;		_LedPulseStateMachine
 28562 ;;		_Led_SetLedStatus
 28563 ;; This function is called by:
 28564 ;;		_Led_MainTask
 28565 ;; This function uses a non-reentrant model
 28566 ;;
 28567                           
 28568                           	psect	text131
 28569  00425E                     __ptext131:
 28570                           	opt stack 0
 28571  00425E                     _LedStateMachine:
 28572                           	opt stack 14
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;incstack = 0
 28576                           ;LedStateMachine@Led stored from wreg
 28577  00425E  0100               	movlb	0	; () banked
 28578  004260  6F99               	movwf	LedStateMachine@Led& (0+255),b
 28579                           
 28580                           ;led.c: 238: UINT8 LedOutSts = 0u;
 28581  004262  0E00               	movlw	0
 28582  004264  0100               	movlb	0	; () banked
 28583  004266  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28584                           
 28585                           ;led.c: 241: switch (*LedSts)
 28586  004268  D037               	goto	l2069
 28587  00426A                     
 28588                           ; BSR set to: 0
 28589                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 28590                           
 28591                           ; BSR set to: 0
 28592  00426A  0E00               	movlw	0
 28593  00426C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28594                           
 28595                           ; BSR set to: 0
 28596                           ;led.c: 246: *LedOut = ((UINT8)(0));
 28597  00426E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28598  004272  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28599  004276  0E00               	movlw	0
 28600  004278  D007               	goto	L43
 28601  00427A                     
 28602                           ; BSR set to: 0
 28603                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 28604                           
 28605                           ; BSR set to: 0
 28606  00427A  0E01               	movlw	1
 28607  00427C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28608                           
 28609                           ; BSR set to: 0
 28610                           ;led.c: 252: *LedOut = ((UINT8)(1));
 28611  00427E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28612  004282  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28613  004286  0E01               	movlw	1
 28614  004288                     L43:
 28615  004288  6EDF               	movwf	indf2,c
 28616                           
 28617                           ;led.c: 253: break;
 28618  00428A  D03A               	goto	l2071
 28619  00428C                     
 28620                           ; BSR set to: 0
 28621                           ;led.c: 257: if (*LedOut == 1)
 28622                           
 28623                           ; BSR set to: 0
 28624  00428C  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28625  004290  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28626  004294  04DE               	decf	postinc2,w,c
 28627  004296  A4D8               	btfss	status,2,c
 28628  004298  D006               	goto	l2074
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;led.c: 258: {
 28632                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 28633  00429A  0E00               	movlw	0
 28634  00429C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28635  00429E  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28636  0042A0  EC60  F02D         	call	_Led_SetLedStatus
 28637                           
 28638                           ;led.c: 261: }
 28639  0042A4  D02D               	goto	l2071
 28640  0042A6                     l2074:
 28641                           
 28642                           ;led.c: 262: else
 28643                           ;led.c: 263: {
 28644                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 28645  0042A6  0E01               	movlw	1
 28646  0042A8  0100               	movlb	0	; () banked
 28647  0042AA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28648  0042AC  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28649  0042AE  EC60  F02D         	call	_Led_SetLedStatus
 28650                           
 28651                           ;led.c: 266: }
 28652                           ;led.c: 267: break;
 28653  0042B2  D026               	goto	l2071
 28654  0042B4                     
 28655                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 28656  0042B4  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 28657  0042B8  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 28658  0042BC  ECFE  F011         	call	_LedBlinkStateMachine	;wreg free
 28659  0042C0  D008               	goto	L44
 28660  0042C2                     
 28661                           ; BSR set to: 0
 28662                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 28663                           
 28664                           ; BSR set to: 0
 28665  0042C2  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 28666  0042C6  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 28667  0042CA  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 28668  0042CE  EC32  F018         	call	_LedPulseStateMachine	;wreg free
 28669  0042D2                     L44:
 28670  0042D2  0100               	movlb	0	; () banked
 28671  0042D4  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28672                           
 28673                           ; BSR set to: 0
 28674                           ;led.c: 281: }
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;led.c: 280: break;
 28678                           
 28679                           ;led.c: 279: default:
 28680                           
 28681                           ;led.c: 277: break;
 28682  0042D6  D014               	goto	l2071
 28683  0042D8                     l2069:
 28684                           
 28685                           ; BSR set to: 0
 28686                           
 28687                           ; BSR set to: 0
 28688  0042D8  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 28689  0042DC  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 28690  0042E0  50DF               	movf	indf2,w,c
 28691                           
 28692                           ; Switch size 1, requested type "space"
 28693                           ; Number of cases is 5, Range of values is 0 to 4
 28694                           ; switch strategies available:
 28695                           ; Name         Instructions Cycles
 28696                           ; simple_byte           16     9 (average)
 28697                           ;	Chosen strategy is simple_byte
 28698  0042E2  0A00               	xorlw	0	; case 0
 28699  0042E4  B4D8               	btfsc	status,2,c
 28700  0042E6  D7C1               	goto	l2070
 28701  0042E8  0A01               	xorlw	1	; case 1
 28702  0042EA  B4D8               	btfsc	status,2,c
 28703  0042EC  D7C6               	goto	l2072
 28704  0042EE  0A03               	xorlw	3	; case 2
 28705  0042F0  B4D8               	btfsc	status,2,c
 28706  0042F2  D7CC               	goto	l2073
 28707  0042F4  0A01               	xorlw	1	; case 3
 28708  0042F6  B4D8               	btfsc	status,2,c
 28709  0042F8  D7DD               	goto	l2076
 28710  0042FA  0A07               	xorlw	7	; case 4
 28711  0042FC  B4D8               	btfsc	status,2,c
 28712  0042FE  D7E1               	goto	l2077
 28713  004300                     l2071:
 28714                           
 28715                           ;led.c: 283: return LedOutSts;
 28716                           
 28717                           ; BSR set to: 0
 28718  004300  0100               	movlb	0	; () banked
 28719  004302  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 28720  004304  0012               	return	
 28721  004306                     __end_of_LedStateMachine:
 28722                           	opt stack 0
 28723                           tosu	equ	0xFFF
 28724                           tosh	equ	0xFFE
 28725                           tosl	equ	0xFFD
 28726                           pclath	equ	0xFFA
 28727                           tblptru	equ	0xFF8
 28728                           tblptrh	equ	0xFF7
 28729                           tblptrl	equ	0xFF6
 28730                           tablat	equ	0xFF5
 28731                           prodh	equ	0xFF4
 28732                           prodl	equ	0xFF3
 28733                           intcon	equ	0xFF2
 28734                           intcon2	equ	0xFF1
 28735                           intcon3	equ	0xFF0
 28736                           indf0	equ	0xFEF
 28737                           postinc0	equ	0xFEE
 28738                           plusw0	equ	0xFEB
 28739                           fsr0h	equ	0xFEA
 28740                           fsr0l	equ	0xFE9
 28741                           wreg	equ	0xFE8
 28742                           indf1	equ	0xFE7
 28743                           postinc1	equ	0xFE6
 28744                           postdec1	equ	0xFE5
 28745                           plusw1	equ	0xFE3
 28746                           fsr1h	equ	0xFE2
 28747                           fsr1l	equ	0xFE1
 28748                           indf2	equ	0xFDF
 28749                           postinc2	equ	0xFDE
 28750                           postdec2	equ	0xFDD
 28751                           plusw2	equ	0xFDB
 28752                           fsr2h	equ	0xFDA
 28753                           fsr2l	equ	0xFD9
 28754                           status	equ	0xFD8
 28755                           
 28756 ;; *************** function _LedPulseStateMachine *****************
 28757 ;; Defined at:
 28758 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28759 ;; Parameters:    Size  Location     Type
 28760 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 28761 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28762 ;;  Led             1   44[BANK0 ] unsigned char 
 28763 ;; Auto vars:     Size  Location     Type
 28764 ;;		None
 28765 ;; Return value:  Size  Location     Type
 28766 ;;                  1    wreg      unsigned char 
 28767 ;; Registers used:
 28768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28769 ;; Tracked objects:
 28770 ;;		On entry : 0/0
 28771 ;;		On exit  : 0/0
 28772 ;;		Unchanged: 0/0
 28773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28774 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28776 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28777 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28778 ;;Total ram usage:        5 bytes
 28779 ;; Hardware stack levels used:    1
 28780 ;; Hardware stack levels required when called:   12
 28781 ;; This function calls:
 28782 ;;		_Led_SetLedStatus
 28783 ;;		___lwdiv
 28784 ;; This function is called by:
 28785 ;;		_LedStateMachine
 28786 ;; This function uses a non-reentrant model
 28787 ;;
 28788                           
 28789                           	psect	text132
 28790  003064                     __ptext132:
 28791                           	opt stack 0
 28792  003064                     _LedPulseStateMachine:
 28793                           	opt stack 14
 28794                           
 28795                           ;led.c: 185: switch (LedPulse->LedPulseState)
 28796                           
 28797                           ; BSR set to: 0
 28798                           ;incstack = 0
 28799  003064  D05C               	goto	l2059
 28800  003066                     
 28801                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 28802  003066  0100               	movlb	0	; () banked
 28803  003068  EE20 F001          	lfsr	2,1
 28804  00306C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28805  00306E  26D9               	addwf	fsr2l,f,c
 28806  003070  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28807  003072  22DA               	addwfc	fsr2h,f,c
 28808  003074  0E01               	movlw	1
 28809  003076  6EDF               	movwf	indf2,c
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 28813  003078  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28814  00307C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28815  003080  0E01               	movlw	1
 28816  003082  D036               	goto	L45
 28817  003084                     
 28818                           ;led.c: 196: LedPulse->LedPulseCounter++;
 28819                           
 28820                           ; BSR set to: 0
 28821  003084  0100               	movlb	0	; () banked
 28822  003086  EE20 F002          	lfsr	2,2
 28823  00308A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28824  00308C  26D9               	addwf	fsr2l,f,c
 28825  00308E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28826  003090  22DA               	addwfc	fsr2h,f,c
 28827  003092  2ADE               	incf	postinc2,f,c
 28828  003094  0E00               	movlw	0
 28829  003096  22DD               	addwfc	postdec2,f,c
 28830                           
 28831                           ; BSR set to: 0
 28832                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 28833  003098  EE20 F004          	lfsr	2,4
 28834  00309C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28835  00309E  26D9               	addwf	fsr2l,f,c
 28836  0030A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28837  0030A2  22DA               	addwfc	fsr2h,f,c
 28838  0030A4  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28839  0030A8  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28840  0030AC  0E00               	movlw	0
 28841  0030AE  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28842  0030B0  0E32               	movlw	50
 28843  0030B2  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28844  0030B4  ECEB  F028         	call	___lwdiv	;wreg free
 28845  0030B8  0100               	movlb	0	; () banked
 28846  0030BA  EE20 F002          	lfsr	2,2
 28847  0030BE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28848  0030C0  26D9               	addwf	fsr2l,f,c
 28849  0030C2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28850  0030C4  22DA               	addwfc	fsr2h,f,c
 28851  0030C6  5183               	movf	?___lwdiv& (0+255),w,b
 28852  0030C8  5CDE               	subwf	postinc2,w,c
 28853  0030CA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28854  0030CC  58DE               	subwfb	postinc2,w,c
 28855  0030CE  A0D8               	btfss	status,0,c
 28856  0030D0  D034               	goto	l2061
 28857                           
 28858                           ; BSR set to: 0
 28859                           ;led.c: 199: {
 28860                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 28861  0030D2  EE20 F002          	lfsr	2,2
 28862  0030D6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28863  0030D8  26D9               	addwf	fsr2l,f,c
 28864  0030DA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28865  0030DC  22DA               	addwfc	fsr2h,f,c
 28866  0030DE  0E00               	movlw	0
 28867  0030E0  6EDE               	movwf	postinc2,c
 28868  0030E2  0E00               	movlw	0
 28869  0030E4  6EDD               	movwf	postdec2,c
 28870                           
 28871                           ; BSR set to: 0
 28872                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 28873  0030E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28874  0030EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28875  0030EE  0E02               	movlw	2
 28876  0030F0                     L45:
 28877  0030F0  6EDF               	movwf	indf2,c
 28878                           
 28879                           ; BSR set to: 0
 28880                           ;led.c: 204: }
 28881                           ;led.c: 205: break;
 28882  0030F2  D023               	goto	l2061
 28883  0030F4                     
 28884                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 28885                           
 28886                           ; BSR set to: 0
 28887  0030F4  0100               	movlb	0	; () banked
 28888  0030F6  EE20 F001          	lfsr	2,1
 28889  0030FA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28890  0030FC  26D9               	addwf	fsr2l,f,c
 28891  0030FE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28892  003100  22DA               	addwfc	fsr2h,f,c
 28893  003102  0E00               	movlw	0
 28894  003104  6EDF               	movwf	indf2,c
 28895                           
 28896                           ; BSR set to: 0
 28897                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 28898  003106  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28899  00310A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28900  00310E  0E00               	movlw	0
 28901  003110  6EDF               	movwf	indf2,c
 28902                           
 28903                           ; BSR set to: 0
 28904                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 28905  003112  0E00               	movlw	0
 28906  003114  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28907  003116  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 28908  003118  EC60  F02D         	call	_Led_SetLedStatus
 28909                           
 28910                           ;led.c: 218: }
 28911                           
 28912                           ;led.c: 217: break;
 28913                           
 28914                           ;led.c: 216: default:
 28915                           
 28916                           ;led.c: 214: break;
 28917  00311C  D00E               	goto	l2061
 28918  00311E                     l2059:
 28919  00311E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28920  003122  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28921  003126  50DF               	movf	indf2,w,c
 28922                           
 28923                           ; Switch size 1, requested type "space"
 28924                           ; Number of cases is 3, Range of values is 0 to 2
 28925                           ; switch strategies available:
 28926                           ; Name         Instructions Cycles
 28927                           ; simple_byte           10     6 (average)
 28928                           ;	Chosen strategy is simple_byte
 28929  003128  0A00               	xorlw	0	; case 0
 28930  00312A  B4D8               	btfsc	status,2,c
 28931  00312C  D79C               	goto	l2060
 28932  00312E  0A01               	xorlw	1	; case 1
 28933  003130  B4D8               	btfsc	status,2,c
 28934  003132  D7A8               	goto	l2062
 28935  003134  0A03               	xorlw	3	; case 2
 28936  003136  B4D8               	btfsc	status,2,c
 28937  003138  D7DD               	goto	l2064
 28938  00313A                     l2061:
 28939                           
 28940                           ;led.c: 221: return (LedPulse->LedOutState);
 28941  00313A  0100               	movlb	0	; () banked
 28942  00313C  EE20 F001          	lfsr	2,1
 28943  003140  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28944  003142  26D9               	addwf	fsr2l,f,c
 28945  003144  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28946  003146  22DA               	addwfc	fsr2h,f,c
 28947  003148  50DF               	movf	indf2,w,c
 28948  00314A  0012               	return	
 28949  00314C                     __end_of_LedPulseStateMachine:
 28950                           	opt stack 0
 28951                           tosu	equ	0xFFF
 28952                           tosh	equ	0xFFE
 28953                           tosl	equ	0xFFD
 28954                           pclath	equ	0xFFA
 28955                           tblptru	equ	0xFF8
 28956                           tblptrh	equ	0xFF7
 28957                           tblptrl	equ	0xFF6
 28958                           tablat	equ	0xFF5
 28959                           prodh	equ	0xFF4
 28960                           prodl	equ	0xFF3
 28961                           intcon	equ	0xFF2
 28962                           intcon2	equ	0xFF1
 28963                           intcon3	equ	0xFF0
 28964                           indf0	equ	0xFEF
 28965                           postinc0	equ	0xFEE
 28966                           plusw0	equ	0xFEB
 28967                           fsr0h	equ	0xFEA
 28968                           fsr0l	equ	0xFE9
 28969                           wreg	equ	0xFE8
 28970                           indf1	equ	0xFE7
 28971                           postinc1	equ	0xFE6
 28972                           postdec1	equ	0xFE5
 28973                           plusw1	equ	0xFE3
 28974                           fsr1h	equ	0xFE2
 28975                           fsr1l	equ	0xFE1
 28976                           indf2	equ	0xFDF
 28977                           postinc2	equ	0xFDE
 28978                           postdec2	equ	0xFDD
 28979                           plusw2	equ	0xFDB
 28980                           fsr2h	equ	0xFDA
 28981                           fsr2l	equ	0xFD9
 28982                           status	equ	0xFD8
 28983                           
 28984 ;; *************** function _Led_SetLedStatus *****************
 28985 ;; Defined at:
 28986 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28987 ;; Parameters:    Size  Location     Type
 28988 ;;  Led             1    wreg     unsigned char 
 28989 ;;  LedSts          1   29[BANK0 ] enum E8934
 28990 ;; Auto vars:     Size  Location     Type
 28991 ;;  Led             1   30[BANK0 ] unsigned char 
 28992 ;; Return value:  Size  Location     Type
 28993 ;;                  1    wreg      void 
 28994 ;; Registers used:
 28995 ;;		wreg, status,2, status,0
 28996 ;; Tracked objects:
 28997 ;;		On entry : 0/0
 28998 ;;		On exit  : 0/0
 28999 ;;		Unchanged: 0/0
 29000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29001 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29005 ;;Total ram usage:        2 bytes
 29006 ;; Hardware stack levels used:    1
 29007 ;; Hardware stack levels required when called:   11
 29008 ;; This function calls:
 29009 ;;		Nothing
 29010 ;; This function is called by:
 29011 ;;		_LedPulseStateMachine
 29012 ;;		_LedStateMachine
 29013 ;;		_initGprsModem
 29014 ;;		_blinkForSeconds
 29015 ;; This function uses a non-reentrant model
 29016 ;;
 29017                           
 29018                           	psect	text133
 29019  005AC0                     __ptext133:
 29020                           	opt stack 0
 29021  005AC0                     _Led_SetLedStatus:
 29022                           	opt stack 15
 29023                           
 29024                           ; BSR set to: 0
 29025                           ;incstack = 0
 29026                           ;Led_SetLedStatus@Led stored from wreg
 29027  005AC0  0100               	movlb	0	; () banked
 29028  005AC2  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29029                           
 29030                           ;led.c: 341: switch (Led)
 29031  005AC4  D009               	goto	l2090
 29032  005AC6                     l2091:
 29033                           
 29034                           ; BSR set to: 0
 29035                           ;led.c: 344: Led1Sts = LedSts;
 29036  005AC6  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29037                           
 29038                           ;led.c: 345: break;
 29039  005ACA  0012               	return	
 29040  005ACC                     l2093:
 29041                           
 29042                           ; BSR set to: 0
 29043                           ;led.c: 348: Led2Sts = LedSts;
 29044  005ACC  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29045                           
 29046                           ;led.c: 349: break;
 29047  005AD0  0012               	return	
 29048  005AD2                     l2094:
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;led.c: 352: Led3Sts = LedSts;
 29052  005AD2  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29053                           
 29054                           ; BSR set to: 0
 29055                           ;led.c: 357: }
 29056                           
 29057                           ; BSR set to: 0
 29058                           ;led.c: 356: break;
 29059                           
 29060                           ;led.c: 355: default:
 29061                           
 29062                           ;led.c: 353: break;
 29063  005AD6  0012               	return	
 29064  005AD8                     l2090:
 29065                           
 29066                           ; BSR set to: 0
 29067  005AD8  0100               	movlb	0	; () banked
 29068  005ADA  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29069                           
 29070                           ; Switch size 1, requested type "space"
 29071                           ; Number of cases is 3, Range of values is 1 to 3
 29072                           ; switch strategies available:
 29073                           ; Name         Instructions Cycles
 29074                           ; simple_byte           10     6 (average)
 29075                           ;	Chosen strategy is simple_byte
 29076  005ADC  0A01               	xorlw	1	; case 1
 29077  005ADE  B4D8               	btfsc	status,2,c
 29078  005AE0  D7F2               	goto	l2091
 29079  005AE2  0A03               	xorlw	3	; case 2
 29080  005AE4  B4D8               	btfsc	status,2,c
 29081  005AE6  D7F2               	goto	l2093
 29082  005AE8  0A01               	xorlw	1	; case 3
 29083  005AEA  A4D8               	btfss	status,2,c
 29084  005AEC  0012               	return	
 29085  005AEE  D7F1               	goto	l2094
 29086  005AF0                     __end_of_Led_SetLedStatus:
 29087                           	opt stack 0
 29088                           tosu	equ	0xFFF
 29089                           tosh	equ	0xFFE
 29090                           tosl	equ	0xFFD
 29091                           pclath	equ	0xFFA
 29092                           tblptru	equ	0xFF8
 29093                           tblptrh	equ	0xFF7
 29094                           tblptrl	equ	0xFF6
 29095                           tablat	equ	0xFF5
 29096                           prodh	equ	0xFF4
 29097                           prodl	equ	0xFF3
 29098                           intcon	equ	0xFF2
 29099                           intcon2	equ	0xFF1
 29100                           intcon3	equ	0xFF0
 29101                           indf0	equ	0xFEF
 29102                           postinc0	equ	0xFEE
 29103                           plusw0	equ	0xFEB
 29104                           fsr0h	equ	0xFEA
 29105                           fsr0l	equ	0xFE9
 29106                           wreg	equ	0xFE8
 29107                           indf1	equ	0xFE7
 29108                           postinc1	equ	0xFE6
 29109                           postdec1	equ	0xFE5
 29110                           plusw1	equ	0xFE3
 29111                           fsr1h	equ	0xFE2
 29112                           fsr1l	equ	0xFE1
 29113                           indf2	equ	0xFDF
 29114                           postinc2	equ	0xFDE
 29115                           postdec2	equ	0xFDD
 29116                           plusw2	equ	0xFDB
 29117                           fsr2h	equ	0xFDA
 29118                           fsr2l	equ	0xFD9
 29119                           status	equ	0xFD8
 29120                           
 29121 ;; *************** function _LedBlinkStateMachine *****************
 29122 ;; Defined at:
 29123 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29124 ;; Parameters:    Size  Location     Type
 29125 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29126 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29127 ;; Auto vars:     Size  Location     Type
 29128 ;;		None
 29129 ;; Return value:  Size  Location     Type
 29130 ;;                  1    wreg      unsigned char 
 29131 ;; Registers used:
 29132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29133 ;; Tracked objects:
 29134 ;;		On entry : 0/0
 29135 ;;		On exit  : 0/0
 29136 ;;		Unchanged: 0/0
 29137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29142 ;;Total ram usage:        4 bytes
 29143 ;; Hardware stack levels used:    1
 29144 ;; Hardware stack levels required when called:   12
 29145 ;; This function calls:
 29146 ;;		___lwdiv
 29147 ;; This function is called by:
 29148 ;;		_LedStateMachine
 29149 ;; This function uses a non-reentrant model
 29150 ;;
 29151                           
 29152                           	psect	text134
 29153  0023FC                     __ptext134:
 29154                           	opt stack 0
 29155  0023FC                     _LedBlinkStateMachine:
 29156                           	opt stack 14
 29157                           
 29158                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29159                           
 29160                           ; BSR set to: 0
 29161                           ;incstack = 0
 29162  0023FC  D08F               	goto	l2046
 29163  0023FE                     
 29164                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29165  0023FE  0100               	movlb	0	; () banked
 29166  002400  EE20 F008          	lfsr	2,8
 29167  002404  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29168  002406  26D9               	addwf	fsr2l,f,c
 29169  002408  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29170  00240A  22DA               	addwfc	fsr2h,f,c
 29171  00240C  EE10 F001          	lfsr	1,1
 29172  002410  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29173  002412  26E1               	addwf	fsr1l,f,c
 29174  002414  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29175  002416  22E2               	addwfc	fsr1h,f,c
 29176  002418  CFDF FFE7          	movff	indf2,indf1
 29177                           
 29178                           ; BSR set to: 0
 29179                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29180  00241C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29181  002420  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29182  002424  D040               	goto	L46
 29183  002426                     
 29184                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29185                           
 29186                           ; BSR set to: 0
 29187  002426  0100               	movlb	0	; () banked
 29188  002428  EE20 F002          	lfsr	2,2
 29189  00242C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29190  00242E  26D9               	addwf	fsr2l,f,c
 29191  002430  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29192  002432  22DA               	addwfc	fsr2h,f,c
 29193  002434  2ADE               	incf	postinc2,f,c
 29194  002436  0E00               	movlw	0
 29195  002438  22DD               	addwfc	postdec2,f,c
 29196                           
 29197                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29198  00243A  EE20 F001          	lfsr	2,1
 29199  00243E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29200  002440  26D9               	addwf	fsr2l,f,c
 29201  002442  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29202  002444  22DA               	addwfc	fsr2h,f,c
 29203  002446  50DF               	movf	indf2,w,c
 29204  002448  A4D8               	btfss	status,2,c
 29205  00244A  D02F               	goto	l2050
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;led.c: 142: {
 29209                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29210  00244C  EE20 F006          	lfsr	2,6
 29211  002450  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29212  002452  26D9               	addwf	fsr2l,f,c
 29213  002454  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29214  002456  22DA               	addwfc	fsr2h,f,c
 29215  002458  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29216  00245C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29217  002460  0E00               	movlw	0
 29218  002462  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29219  002464  0E32               	movlw	50
 29220  002466  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29221  002468  ECEB  F028         	call	___lwdiv	;wreg free
 29222  00246C  0100               	movlb	0	; () banked
 29223  00246E  EE20 F002          	lfsr	2,2
 29224  002472  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29225  002474  26D9               	addwf	fsr2l,f,c
 29226  002476  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29227  002478  22DA               	addwfc	fsr2h,f,c
 29228  00247A  5183               	movf	?___lwdiv& (0+255),w,b
 29229  00247C  5CDE               	subwf	postinc2,w,c
 29230  00247E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29231  002480  58DE               	subwfb	postinc2,w,c
 29232  002482  A0D8               	btfss	status,0,c
 29233  002484  D056               	goto	l2048
 29234                           
 29235                           ; BSR set to: 0
 29236                           ;led.c: 145: {
 29237                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29238  002486  EE20 F002          	lfsr	2,2
 29239  00248A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29240  00248C  26D9               	addwf	fsr2l,f,c
 29241  00248E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29242  002490  22DA               	addwfc	fsr2h,f,c
 29243  002492  0E00               	movlw	0
 29244  002494  6EDE               	movwf	postinc2,c
 29245  002496  0E00               	movlw	0
 29246  002498  6EDD               	movwf	postdec2,c
 29247                           
 29248                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29249  00249A  EE20 F001          	lfsr	2,1
 29250  00249E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29251  0024A0  26D9               	addwf	fsr2l,f,c
 29252  0024A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29253  0024A4  22DA               	addwfc	fsr2h,f,c
 29254  0024A6                     L46:
 29255  0024A6  0E01               	movlw	1
 29256  0024A8  D037               	goto	L47
 29257  0024AA                     l2050:
 29258                           
 29259                           ; BSR set to: 0
 29260                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29261                           
 29262                           ; BSR set to: 0
 29263  0024AA  EE20 F001          	lfsr	2,1
 29264  0024AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29265  0024B0  26D9               	addwf	fsr2l,f,c
 29266  0024B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29267  0024B4  22DA               	addwfc	fsr2h,f,c
 29268  0024B6  04DE               	decf	postinc2,w,c
 29269  0024B8  A4D8               	btfss	status,2,c
 29270  0024BA  D03B               	goto	l2048
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;led.c: 153: {
 29274                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29275  0024BC  EE20 F004          	lfsr	2,4
 29276  0024C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29277  0024C2  26D9               	addwf	fsr2l,f,c
 29278  0024C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29279  0024C6  22DA               	addwfc	fsr2h,f,c
 29280  0024C8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29281  0024CC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29282  0024D0  0E00               	movlw	0
 29283  0024D2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29284  0024D4  0E32               	movlw	50
 29285  0024D6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29286  0024D8  ECEB  F028         	call	___lwdiv	;wreg free
 29287  0024DC  0100               	movlb	0	; () banked
 29288  0024DE  EE20 F002          	lfsr	2,2
 29289  0024E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29290  0024E4  26D9               	addwf	fsr2l,f,c
 29291  0024E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29292  0024E8  22DA               	addwfc	fsr2h,f,c
 29293  0024EA  5183               	movf	?___lwdiv& (0+255),w,b
 29294  0024EC  5CDE               	subwf	postinc2,w,c
 29295  0024EE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29296  0024F0  58DE               	subwfb	postinc2,w,c
 29297  0024F2  A0D8               	btfss	status,0,c
 29298  0024F4  D01E               	goto	l2048
 29299                           
 29300                           ; BSR set to: 0
 29301                           ;led.c: 156: {
 29302                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29303  0024F6  EE20 F002          	lfsr	2,2
 29304  0024FA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29305  0024FC  26D9               	addwf	fsr2l,f,c
 29306  0024FE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29307  002500  22DA               	addwfc	fsr2h,f,c
 29308  002502  0E00               	movlw	0
 29309  002504  6EDE               	movwf	postinc2,c
 29310  002506  0E00               	movlw	0
 29311  002508  6EDD               	movwf	postdec2,c
 29312                           
 29313                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29314  00250A  EE20 F001          	lfsr	2,1
 29315  00250E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29316  002510  26D9               	addwf	fsr2l,f,c
 29317  002512  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29318  002514  22DA               	addwfc	fsr2h,f,c
 29319  002516  0E00               	movlw	0
 29320  002518                     L47:
 29321  002518  6EDF               	movwf	indf2,c
 29322                           
 29323                           ; BSR set to: 0
 29324                           ;led.c: 167: }
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;led.c: 166: break;
 29328                           
 29329                           ;led.c: 165: default:
 29330                           
 29331                           ; BSR set to: 0
 29332                           ;led.c: 161: }
 29333                           ;led.c: 162: }
 29334                           ;led.c: 163: break;
 29335                           
 29336                           ; BSR set to: 0
 29337                           
 29338                           ; BSR set to: 0
 29339  00251A  D00B               	goto	l2048
 29340  00251C                     l2046:
 29341                           
 29342                           ; BSR set to: 0
 29343  00251C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29344  002520  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29345  002524  50DF               	movf	indf2,w,c
 29346                           
 29347                           ; Switch size 1, requested type "space"
 29348                           ; Number of cases is 2, Range of values is 0 to 1
 29349                           ; switch strategies available:
 29350                           ; Name         Instructions Cycles
 29351                           ; simple_byte            7     4 (average)
 29352                           ;	Chosen strategy is simple_byte
 29353  002526  0A00               	xorlw	0	; case 0
 29354  002528  B4D8               	btfsc	status,2,c
 29355  00252A  D769               	goto	l2047
 29356  00252C  0A01               	xorlw	1	; case 1
 29357  00252E  B4D8               	btfsc	status,2,c
 29358  002530  D77A               	goto	l2049
 29359  002532                     l2048:
 29360                           
 29361                           ;led.c: 170: return (LedBlink->LedOutState);
 29362  002532  0100               	movlb	0	; () banked
 29363  002534  EE20 F001          	lfsr	2,1
 29364  002538  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29365  00253A  26D9               	addwf	fsr2l,f,c
 29366  00253C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29367  00253E  22DA               	addwfc	fsr2h,f,c
 29368  002540  50DF               	movf	indf2,w,c
 29369  002542  0012               	return	
 29370  002544                     __end_of_LedBlinkStateMachine:
 29371                           	opt stack 0
 29372                           tosu	equ	0xFFF
 29373                           tosh	equ	0xFFE
 29374                           tosl	equ	0xFFD
 29375                           pclath	equ	0xFFA
 29376                           tblptru	equ	0xFF8
 29377                           tblptrh	equ	0xFF7
 29378                           tblptrl	equ	0xFF6
 29379                           tablat	equ	0xFF5
 29380                           prodh	equ	0xFF4
 29381                           prodl	equ	0xFF3
 29382                           intcon	equ	0xFF2
 29383                           intcon2	equ	0xFF1
 29384                           intcon3	equ	0xFF0
 29385                           indf0	equ	0xFEF
 29386                           postinc0	equ	0xFEE
 29387                           plusw0	equ	0xFEB
 29388                           fsr0h	equ	0xFEA
 29389                           fsr0l	equ	0xFE9
 29390                           wreg	equ	0xFE8
 29391                           indf1	equ	0xFE7
 29392                           postinc1	equ	0xFE6
 29393                           postdec1	equ	0xFE5
 29394                           plusw1	equ	0xFE3
 29395                           fsr1h	equ	0xFE2
 29396                           fsr1l	equ	0xFE1
 29397                           indf2	equ	0xFDF
 29398                           postinc2	equ	0xFDE
 29399                           postdec2	equ	0xFDD
 29400                           plusw2	equ	0xFDB
 29401                           fsr2h	equ	0xFDA
 29402                           fsr2l	equ	0xFD9
 29403                           status	equ	0xFD8
 29404                           
 29405 ;; *************** function ___lwdiv *****************
 29406 ;; Defined at:
 29407 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 29408 ;; Parameters:    Size  Location     Type
 29409 ;;  dividend        2   35[BANK0 ] unsigned int 
 29410 ;;  divisor         2   37[BANK0 ] unsigned int 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;  quotient        2   40[BANK0 ] unsigned int 
 29413 ;;  counter         1   39[BANK0 ] unsigned char 
 29414 ;; Return value:  Size  Location     Type
 29415 ;;                  2   35[BANK0 ] unsigned int 
 29416 ;; Registers used:
 29417 ;;		wreg, status,2, status,0
 29418 ;; Tracked objects:
 29419 ;;		On entry : 0/0
 29420 ;;		On exit  : 0/0
 29421 ;;		Unchanged: 0/0
 29422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29424 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;Total ram usage:        7 bytes
 29428 ;; Hardware stack levels used:    1
 29429 ;; Hardware stack levels required when called:   11
 29430 ;; This function calls:
 29431 ;;		Nothing
 29432 ;; This function is called by:
 29433 ;;		_LedBlinkStateMachine
 29434 ;;		_LedPulseStateMachine
 29435 ;;		_secondsAppTimer
 29436 ;;		_utoa
 29437 ;; This function uses a non-reentrant model
 29438 ;;
 29439                           
 29440                           	psect	text135
 29441  0051D6                     __ptext135:
 29442                           	opt stack 0
 29443  0051D6                     ___lwdiv:
 29444                           	opt stack 14
 29445                           
 29446                           ; BSR set to: 0
 29447                           ;incstack = 0
 29448  0051D6  0E00               	movlw	0
 29449  0051D8  0100               	movlb	0	; () banked
 29450  0051DA  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29451  0051DC  0E00               	movlw	0
 29452  0051DE  6F88               	movwf	___lwdiv@quotient& (0+255),b
 29453                           
 29454                           ; BSR set to: 0
 29455  0051E0  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29456  0051E2  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29457  0051E4  B4D8               	btfsc	status,2,c
 29458  0051E6  D01C               	goto	l3035
 29459                           
 29460                           ; BSR set to: 0
 29461  0051E8  0E01               	movlw	1
 29462  0051EA  6F87               	movwf	___lwdiv@counter& (0+255),b
 29463  0051EC  D004               	goto	l3030
 29464  0051EE                     
 29465                           ; BSR set to: 0
 29466                           
 29467                           ; BSR set to: 0
 29468  0051EE  90D8               	bcf	status,0,c
 29469  0051F0  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 29470  0051F2  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29471  0051F4  2B87               	incf	___lwdiv@counter& (0+255),f,b
 29472  0051F6                     l3030:
 29473                           
 29474                           ; BSR set to: 0
 29475                           
 29476                           ; BSR set to: 0
 29477  0051F6  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29478  0051F8  D7FA               	goto	l3031
 29479  0051FA                     u10310:
 29480                           
 29481                           ; BSR set to: 0
 29482                           
 29483                           ; BSR set to: 0
 29484                           
 29485                           ; BSR set to: 0
 29486  0051FA  90D8               	bcf	status,0,c
 29487  0051FC  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 29488  0051FE  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29489                           
 29490                           ; BSR set to: 0
 29491  005200  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29492  005202  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 29493  005204  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29494  005206  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29495  005208  A0D8               	btfss	status,0,c
 29496  00520A  D005               	goto	l3034
 29497                           
 29498                           ; BSR set to: 0
 29499  00520C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29500  00520E  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 29501  005210  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29502  005212  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29503                           
 29504                           ; BSR set to: 0
 29505  005214  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 29506  005216                     l3034:
 29507                           
 29508                           ; BSR set to: 0
 29509                           
 29510                           ; BSR set to: 0
 29511  005216  90D8               	bcf	status,0,c
 29512  005218  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29513  00521A  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 29514                           
 29515                           ; BSR set to: 0
 29516  00521C  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 29517  00521E  D7ED               	goto	u10310
 29518  005220                     l3035:
 29519                           
 29520                           ; BSR set to: 0
 29521                           
 29522                           ; BSR set to: 0
 29523  005220  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 29524  005224  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29525                           
 29526                           ; BSR set to: 0
 29527  005228  0012               	return		;funcret
 29528  00522A                     __end_of___lwdiv:
 29529                           	opt stack 0
 29530                           tosu	equ	0xFFF
 29531                           tosh	equ	0xFFE
 29532                           tosl	equ	0xFFD
 29533                           pclath	equ	0xFFA
 29534                           tblptru	equ	0xFF8
 29535                           tblptrh	equ	0xFF7
 29536                           tblptrl	equ	0xFF6
 29537                           tablat	equ	0xFF5
 29538                           prodh	equ	0xFF4
 29539                           prodl	equ	0xFF3
 29540                           intcon	equ	0xFF2
 29541                           intcon2	equ	0xFF1
 29542                           intcon3	equ	0xFF0
 29543                           indf0	equ	0xFEF
 29544                           postinc0	equ	0xFEE
 29545                           plusw0	equ	0xFEB
 29546                           fsr0h	equ	0xFEA
 29547                           fsr0l	equ	0xFE9
 29548                           wreg	equ	0xFE8
 29549                           indf1	equ	0xFE7
 29550                           postinc1	equ	0xFE6
 29551                           postdec1	equ	0xFE5
 29552                           plusw1	equ	0xFE3
 29553                           fsr1h	equ	0xFE2
 29554                           fsr1l	equ	0xFE1
 29555                           indf2	equ	0xFDF
 29556                           postinc2	equ	0xFDE
 29557                           postdec2	equ	0xFDD
 29558                           plusw2	equ	0xFDB
 29559                           fsr2h	equ	0xFDA
 29560                           fsr2l	equ	0xFD9
 29561                           status	equ	0xFD8
 29562                           
 29563 ;; *************** function _OsAlrm_SetOsAlarm *****************
 29564 ;; Defined at:
 29565 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 29566 ;; Parameters:    Size  Location     Type
 29567 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 29568 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 29569 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 29570 ;;		 -> I2cDummyTx(1), 
 29571 ;; Auto vars:     Size  Location     Type
 29572 ;;		None
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  1    wreg      void 
 29575 ;; Registers used:
 29576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29577 ;; Tracked objects:
 29578 ;;		On entry : 0/0
 29579 ;;		On exit  : 0/0
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29582 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29585 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29586 ;;Total ram usage:        8 bytes
 29587 ;; Hardware stack levels used:    1
 29588 ;; Hardware stack levels required when called:   12
 29589 ;; This function calls:
 29590 ;;		___wmul
 29591 ;; This function is called by:
 29592 ;;		_I2cSlv_MainTask
 29593 ;; This function uses a non-reentrant model
 29594 ;;
 29595                           
 29596                           	psect	text136
 29597  003B36                     __ptext136:
 29598                           	opt stack 0
 29599  003B36                     _OsAlrm_SetOsAlarm:
 29600                           	opt stack 15
 29601                           
 29602                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 29603                           
 29604                           ; BSR set to: 0
 29605                           ;incstack = 0
 29606  003B36  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29607  003B3A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29608  003B3E  0E00               	movlw	0
 29609  003B40  0100               	movlb	0	; () banked
 29610  003B42  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29611  003B44  0E0B               	movlw	11
 29612  003B46  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29613  003B48  ECE6  F02D         	call	___wmul	;wreg free
 29614  003B4C  0E00               	movlw	low _OsAlarms
 29615  003B4E  0100               	movlb	0	; () banked
 29616  003B50  257D               	addwf	?___wmul& (0+255),w,b
 29617  003B52  6ED9               	movwf	fsr2l,c
 29618  003B54  0E06               	movlw	high _OsAlarms
 29619  003B56  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29620  003B58  6EDA               	movwf	fsr2h,c
 29621  003B5A  0E01               	movlw	1
 29622  003B5C  6EDF               	movwf	indf2,c
 29623                           
 29624                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 29625  003B5E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29626  003B62  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29627  003B66  0E00               	movlw	0
 29628  003B68  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29629  003B6A  0E0B               	movlw	11
 29630  003B6C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29631  003B6E  ECE6  F02D         	call	___wmul	;wreg free
 29632  003B72  0E01               	movlw	1
 29633  003B74  0100               	movlb	0	; () banked
 29634  003B76  277D               	addwf	?___wmul& (0+255),f,b
 29635  003B78  0E00               	movlw	0
 29636  003B7A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29637  003B7C  0E00               	movlw	low _OsAlarms
 29638  003B7E  257D               	addwf	?___wmul& (0+255),w,b
 29639  003B80  6ED9               	movwf	fsr2l,c
 29640  003B82  0E06               	movlw	high _OsAlarms
 29641  003B84  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29642  003B86  6EDA               	movwf	fsr2h,c
 29643  003B88  6ADE               	clrf	postinc2,c
 29644  003B8A  6ADE               	clrf	postinc2,c
 29645  003B8C  6ADE               	clrf	postinc2,c
 29646  003B8E  6ADD               	clrf	postdec2,c
 29647                           
 29648                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 29649  003B90  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29650  003B94  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29651  003B98  0E00               	movlw	0
 29652  003B9A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29653  003B9C  0E0B               	movlw	11
 29654  003B9E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29655  003BA0  ECE6  F02D         	call	___wmul	;wreg free
 29656  003BA4  0E05               	movlw	5
 29657  003BA6  0100               	movlb	0	; () banked
 29658  003BA8  277D               	addwf	?___wmul& (0+255),f,b
 29659  003BAA  0E00               	movlw	0
 29660  003BAC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29661  003BAE  0E00               	movlw	low _OsAlarms
 29662  003BB0  257D               	addwf	?___wmul& (0+255),w,b
 29663  003BB2  6ED9               	movwf	fsr2l,c
 29664  003BB4  0E06               	movlw	high _OsAlarms
 29665  003BB6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29666  003BB8  6EDA               	movwf	fsr2h,c
 29667  003BBA  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 29668  003BBE  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 29669  003BC2  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 29670  003BC6  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 29671                           
 29672                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 29673  003BCA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29674  003BCE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29675  003BD2  0E00               	movlw	0
 29676  003BD4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29677  003BD6  0E0B               	movlw	11
 29678  003BD8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29679  003BDA  ECE6  F02D         	call	___wmul	;wreg free
 29680  003BDE  0E09               	movlw	9
 29681  003BE0  0100               	movlb	0	; () banked
 29682  003BE2  277D               	addwf	?___wmul& (0+255),f,b
 29683  003BE4  0E00               	movlw	0
 29684  003BE6  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29685  003BE8  0E00               	movlw	low _OsAlarms
 29686  003BEA  257D               	addwf	?___wmul& (0+255),w,b
 29687  003BEC  6ED9               	movwf	fsr2l,c
 29688  003BEE  0E06               	movlw	high _OsAlarms
 29689  003BF0  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29690  003BF2  6EDA               	movwf	fsr2h,c
 29691  003BF4  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 29692  003BF8  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 29693                           
 29694                           ; BSR set to: 0
 29695  003BFC  0012               	return		;funcret
 29696  003BFE                     __end_of_OsAlrm_SetOsAlarm:
 29697                           	opt stack 0
 29698                           tosu	equ	0xFFF
 29699                           tosh	equ	0xFFE
 29700                           tosl	equ	0xFFD
 29701                           pclath	equ	0xFFA
 29702                           tblptru	equ	0xFF8
 29703                           tblptrh	equ	0xFF7
 29704                           tblptrl	equ	0xFF6
 29705                           tablat	equ	0xFF5
 29706                           prodh	equ	0xFF4
 29707                           prodl	equ	0xFF3
 29708                           intcon	equ	0xFF2
 29709                           intcon2	equ	0xFF1
 29710                           intcon3	equ	0xFF0
 29711                           indf0	equ	0xFEF
 29712                           postinc0	equ	0xFEE
 29713                           plusw0	equ	0xFEB
 29714                           fsr0h	equ	0xFEA
 29715                           fsr0l	equ	0xFE9
 29716                           wreg	equ	0xFE8
 29717                           indf1	equ	0xFE7
 29718                           postinc1	equ	0xFE6
 29719                           postdec1	equ	0xFE5
 29720                           plusw1	equ	0xFE3
 29721                           fsr1h	equ	0xFE2
 29722                           fsr1l	equ	0xFE1
 29723                           indf2	equ	0xFDF
 29724                           postinc2	equ	0xFDE
 29725                           postdec2	equ	0xFDD
 29726                           plusw2	equ	0xFDB
 29727                           fsr2h	equ	0xFDA
 29728                           fsr2l	equ	0xFD9
 29729                           status	equ	0xFD8
 29730                           
 29731 ;; *************** function ___wmul *****************
 29732 ;; Defined at:
 29733 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 29734 ;; Parameters:    Size  Location     Type
 29735 ;;  multiplier      2   29[BANK0 ] unsigned int 
 29736 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 29737 ;; Auto vars:     Size  Location     Type
 29738 ;;  product         2   33[BANK0 ] unsigned int 
 29739 ;; Return value:  Size  Location     Type
 29740 ;;                  2   29[BANK0 ] unsigned int 
 29741 ;; Registers used:
 29742 ;;		wreg, status,2, status,0, prodl, prodh
 29743 ;; Tracked objects:
 29744 ;;		On entry : 0/0
 29745 ;;		On exit  : 0/0
 29746 ;;		Unchanged: 0/0
 29747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29751 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29752 ;;Total ram usage:        6 bytes
 29753 ;; Hardware stack levels used:    1
 29754 ;; Hardware stack levels required when called:   11
 29755 ;; This function calls:
 29756 ;;		Nothing
 29757 ;; This function is called by:
 29758 ;;		_OsAlrm_SetOsAlarm
 29759 ;;		_secondsAppTimer
 29760 ;;		_atoi
 29761 ;; This function uses a non-reentrant model
 29762 ;;
 29763                           
 29764                           	psect	text137
 29765  005BCC                     __ptext137:
 29766                           	opt stack 0
 29767  005BCC                     ___wmul:
 29768                           	opt stack 13
 29769                           
 29770                           ; BSR set to: 0
 29771                           ;incstack = 0
 29772  005BCC  0100               	movlb	0	; () banked
 29773  005BCE  517D               	movf	___wmul@multiplier& (0+255),w,b
 29774  005BD0  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29775  005BD2  CFF3 F081          	movff	prodl,___wmul@product
 29776  005BD6  CFF4 F082          	movff	prodh,___wmul@product+1
 29777  005BDA  517D               	movf	___wmul@multiplier& (0+255),w,b
 29778  005BDC  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29779  005BDE  50F3               	movf	prodl,w,c
 29780  005BE0  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29781  005BE2  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29782  005BE4  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29783  005BE6  50F3               	movf	prodl,w,c
 29784  005BE8  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29785                           
 29786                           ; BSR set to: 0
 29787  005BEA  C081  F07D         	movff	___wmul@product,?___wmul
 29788  005BEE  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 29789  005BF2  0012               	return	
 29790  005BF4                     __end_of___wmul:
 29791                           	opt stack 0
 29792                           tosu	equ	0xFFF
 29793                           tosh	equ	0xFFE
 29794                           tosl	equ	0xFFD
 29795                           pclath	equ	0xFFA
 29796                           tblptru	equ	0xFF8
 29797                           tblptrh	equ	0xFF7
 29798                           tblptrl	equ	0xFF6
 29799                           tablat	equ	0xFF5
 29800                           prodh	equ	0xFF4
 29801                           prodl	equ	0xFF3
 29802                           intcon	equ	0xFF2
 29803                           intcon2	equ	0xFF1
 29804                           intcon3	equ	0xFF0
 29805                           indf0	equ	0xFEF
 29806                           postinc0	equ	0xFEE
 29807                           plusw0	equ	0xFEB
 29808                           fsr0h	equ	0xFEA
 29809                           fsr0l	equ	0xFE9
 29810                           wreg	equ	0xFE8
 29811                           indf1	equ	0xFE7
 29812                           postinc1	equ	0xFE6
 29813                           postdec1	equ	0xFE5
 29814                           plusw1	equ	0xFE3
 29815                           fsr1h	equ	0xFE2
 29816                           fsr1l	equ	0xFE1
 29817                           indf2	equ	0xFDF
 29818                           postinc2	equ	0xFDE
 29819                           postdec2	equ	0xFDD
 29820                           plusw2	equ	0xFDB
 29821                           fsr2h	equ	0xFDA
 29822                           fsr2l	equ	0xFD9
 29823                           status	equ	0xFD8
 29824                           
 29825 ;; *************** function _I2c_InitI2cModule *****************
 29826 ;; Defined at:
 29827 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29828 ;; Parameters:    Size  Location     Type
 29829 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 29830 ;;		 -> I2cConfig(10), 
 29831 ;; Auto vars:     Size  Location     Type
 29832 ;;		None
 29833 ;; Return value:  Size  Location     Type
 29834 ;;                  1    wreg      void 
 29835 ;; Registers used:
 29836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29837 ;; Tracked objects:
 29838 ;;		On entry : 0/0
 29839 ;;		On exit  : 0/0
 29840 ;;		Unchanged: 0/0
 29841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29846 ;;Total ram usage:        4 bytes
 29847 ;; Hardware stack levels used:    1
 29848 ;; Hardware stack levels required when called:   13
 29849 ;; This function calls:
 29850 ;;		_SetBaudRate
 29851 ;; This function is called by:
 29852 ;;		_I2cSlv_MainTask
 29853 ;; This function uses a non-reentrant model
 29854 ;;
 29855                           
 29856                           	psect	text138
 29857  004B7A                     __ptext138:
 29858                           	opt stack 0
 29859  004B7A                     _I2c_InitI2cModule:
 29860                           	opt stack 14
 29861                           
 29862                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 29863                           
 29864                           ; BSR set to: 0
 29865                           ;incstack = 0
 29866  004B7A  8295               	bsf	3989,1,c	;volatile
 29867                           
 29868                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 29869  004B7C  8095               	bsf	3989,0,c	;volatile
 29870                           
 29871                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 29872  004B7E  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 29873  004B82  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 29874  004B86  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 29875  004B8A  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 29876  004B8E  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 29877  004B92  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 29878  004B96  0100               	movlb	0	; () banked
 29879  004B98  EE20 F004          	lfsr	2,4
 29880  004B9C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29881  004B9E  26D9               	addwf	fsr2l,f,c
 29882  004BA0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29883  004BA2  22DA               	addwfc	fsr2h,f,c
 29884  004BA4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 29885  004BA8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 29886  004BAC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 29887  004BB0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 29888  004BB4  ECDD  F029         	call	_SetBaudRate	;wreg free
 29889                           
 29890                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 29891  004BB8  0100               	movlb	0	; () banked
 29892  004BBA  EE20 F008          	lfsr	2,8
 29893  004BBE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29894  004BC0  26D9               	addwf	fsr2l,f,c
 29895  004BC2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29896  004BC4  22DA               	addwfc	fsr2h,f,c
 29897  004BC6  50DF               	movf	indf2,w,c
 29898  004BC8  1272               	iorwf	3954,f,c	;volatile
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 29902  004BCA  EE20 F009          	lfsr	2,9
 29903  004BCE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29904  004BD0  26D9               	addwf	fsr2l,f,c
 29905  004BD2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29906  004BD4  22DA               	addwfc	fsr2h,f,c
 29907  004BD6  50DF               	movf	indf2,w,c
 29908  004BD8  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 29909  004BDA  0E05               	movlw	5
 29910  004BDC  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 29911  004BDE                     u7945:
 29912  004BDE  90D8               	bcf	status,0,c
 29913  004BE0  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 29914  004BE2  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 29915  004BE4  D7FC               	goto	u7945
 29916  004BE6  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 29917  004BE8  1272               	iorwf	3954,f,c	;volatile
 29918                           
 29919                           ; BSR set to: 0
 29920  004BEA  0012               	return		;funcret
 29921  004BEC                     __end_of_I2c_InitI2cModule:
 29922                           	opt stack 0
 29923                           tosu	equ	0xFFF
 29924                           tosh	equ	0xFFE
 29925                           tosl	equ	0xFFD
 29926                           pclath	equ	0xFFA
 29927                           tblptru	equ	0xFF8
 29928                           tblptrh	equ	0xFF7
 29929                           tblptrl	equ	0xFF6
 29930                           tablat	equ	0xFF5
 29931                           prodh	equ	0xFF4
 29932                           prodl	equ	0xFF3
 29933                           intcon	equ	0xFF2
 29934                           intcon2	equ	0xFF1
 29935                           intcon3	equ	0xFF0
 29936                           indf0	equ	0xFEF
 29937                           postinc0	equ	0xFEE
 29938                           plusw0	equ	0xFEB
 29939                           fsr0h	equ	0xFEA
 29940                           fsr0l	equ	0xFE9
 29941                           wreg	equ	0xFE8
 29942                           indf1	equ	0xFE7
 29943                           postinc1	equ	0xFE6
 29944                           postdec1	equ	0xFE5
 29945                           plusw1	equ	0xFE3
 29946                           fsr1h	equ	0xFE2
 29947                           fsr1l	equ	0xFE1
 29948                           indf2	equ	0xFDF
 29949                           postinc2	equ	0xFDE
 29950                           postdec2	equ	0xFDD
 29951                           plusw2	equ	0xFDB
 29952                           fsr2h	equ	0xFDA
 29953                           fsr2l	equ	0xFD9
 29954                           status	equ	0xFD8
 29955                           
 29956 ;; *************** function _SetBaudRate *****************
 29957 ;; Defined at:
 29958 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29959 ;; Parameters:    Size  Location     Type
 29960 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 29961 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 29962 ;; Auto vars:     Size  Location     Type
 29963 ;;		None
 29964 ;; Return value:  Size  Location     Type
 29965 ;;                  1    wreg      void 
 29966 ;; Registers used:
 29967 ;;		wreg, status,2, status,0, cstack
 29968 ;; Tracked objects:
 29969 ;;		On entry : 0/0
 29970 ;;		On exit  : 0/0
 29971 ;;		Unchanged: 0/0
 29972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29973 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29976 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29977 ;;Total ram usage:       12 bytes
 29978 ;; Hardware stack levels used:    1
 29979 ;; Hardware stack levels required when called:   12
 29980 ;; This function calls:
 29981 ;;		___lldiv
 29982 ;; This function is called by:
 29983 ;;		_I2c_InitI2cModule
 29984 ;; This function uses a non-reentrant model
 29985 ;;
 29986                           
 29987                           	psect	text139
 29988  0053BA                     __ptext139:
 29989                           	opt stack 0
 29990  0053BA                     _SetBaudRate:
 29991                           	opt stack 14
 29992                           
 29993                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 29994                           
 29995                           ; BSR set to: 0
 29996                           ;incstack = 0
 29997  0053BA  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 29998  0053BE  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 29999  0053C2  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30000  0053C6  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30001  0053CA  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30002  0053CE  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30003  0053D2  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30004  0053D6  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30005  0053DA  0E02               	movlw	2
 30006  0053DC                     u6915:
 30007  0053DC  90D8               	bcf	status,0,c
 30008  0053DE  0100               	movlb	0	; () banked
 30009  0053E0  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30010  0053E2  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30011  0053E4  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30012  0053E6  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30013  0053E8  2EE8               	decfsz	wreg,f,c
 30014  0053EA  D7F8               	goto	u6915
 30015  0053EC  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30016  0053F0  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30017  0053F4  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30018  0053F8  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30019  0053FC  EC01  F025         	call	___lldiv	;wreg free
 30020  005400  0100               	movlb	0	; () banked
 30021  005402  0589               	decf	?___lldiv& (0+255),w,b
 30022  005404  6E74               	movwf	3956,c	;volatile
 30023                           
 30024                           ; BSR set to: 0
 30025  005406  0012               	return		;funcret
 30026  005408                     __end_of_SetBaudRate:
 30027                           	opt stack 0
 30028                           tosu	equ	0xFFF
 30029                           tosh	equ	0xFFE
 30030                           tosl	equ	0xFFD
 30031                           pclath	equ	0xFFA
 30032                           tblptru	equ	0xFF8
 30033                           tblptrh	equ	0xFF7
 30034                           tblptrl	equ	0xFF6
 30035                           tablat	equ	0xFF5
 30036                           prodh	equ	0xFF4
 30037                           prodl	equ	0xFF3
 30038                           intcon	equ	0xFF2
 30039                           intcon2	equ	0xFF1
 30040                           intcon3	equ	0xFF0
 30041                           indf0	equ	0xFEF
 30042                           postinc0	equ	0xFEE
 30043                           plusw0	equ	0xFEB
 30044                           fsr0h	equ	0xFEA
 30045                           fsr0l	equ	0xFE9
 30046                           wreg	equ	0xFE8
 30047                           indf1	equ	0xFE7
 30048                           postinc1	equ	0xFE6
 30049                           postdec1	equ	0xFE5
 30050                           plusw1	equ	0xFE3
 30051                           fsr1h	equ	0xFE2
 30052                           fsr1l	equ	0xFE1
 30053                           indf2	equ	0xFDF
 30054                           postinc2	equ	0xFDE
 30055                           postdec2	equ	0xFDD
 30056                           plusw2	equ	0xFDB
 30057                           fsr2h	equ	0xFDA
 30058                           fsr2l	equ	0xFD9
 30059                           status	equ	0xFD8
 30060                           
 30061 ;; *************** function ___lldiv *****************
 30062 ;; Defined at:
 30063 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30064 ;; Parameters:    Size  Location     Type
 30065 ;;  dividend        4   41[BANK0 ] unsigned long 
 30066 ;;  divisor         4   45[BANK0 ] unsigned long 
 30067 ;; Auto vars:     Size  Location     Type
 30068 ;;  quotient        4   49[BANK0 ] unsigned long 
 30069 ;;  counter         1   53[BANK0 ] unsigned char 
 30070 ;; Return value:  Size  Location     Type
 30071 ;;                  4   41[BANK0 ] unsigned long 
 30072 ;; Registers used:
 30073 ;;		wreg, status,2, status,0
 30074 ;; Tracked objects:
 30075 ;;		On entry : 0/0
 30076 ;;		On exit  : 0/0
 30077 ;;		Unchanged: 0/0
 30078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30079 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30080 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;Total ram usage:       13 bytes
 30084 ;; Hardware stack levels used:    1
 30085 ;; Hardware stack levels required when called:   11
 30086 ;; This function calls:
 30087 ;;		Nothing
 30088 ;; This function is called by:
 30089 ;;		_SetBaudRate
 30090 ;;		_Tmr_TmrBPrSet
 30091 ;;		_SetUartBaudRate
 30092 ;; This function uses a non-reentrant model
 30093 ;;
 30094                           
 30095                           	psect	text140
 30096  004A02                     __ptext140:
 30097                           	opt stack 0
 30098  004A02                     ___lldiv:
 30099                           	opt stack 15
 30100                           
 30101                           ; BSR set to: 0
 30102                           ;incstack = 0
 30103  004A02  0E00               	movlw	0
 30104  004A04  0100               	movlb	0	; () banked
 30105  004A06  6F91               	movwf	___lldiv@quotient& (0+255),b
 30106  004A08  0E00               	movlw	0
 30107  004A0A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30108  004A0C  0E00               	movlw	0
 30109  004A0E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30110  004A10  0E00               	movlw	0
 30111  004A12  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30112                           
 30113                           ; BSR set to: 0
 30114  004A14  518D               	movf	___lldiv@divisor& (0+255),w,b
 30115  004A16  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30116  004A18  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30117  004A1A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30118  004A1C  B4D8               	btfsc	status,2,c
 30119  004A1E  D02A               	goto	l2982
 30120                           
 30121                           ; BSR set to: 0
 30122  004A20  0E01               	movlw	1
 30123  004A22  6F95               	movwf	___lldiv@counter& (0+255),b
 30124  004A24  D006               	goto	l2977
 30125  004A26                     
 30126                           ; BSR set to: 0
 30127                           
 30128                           ; BSR set to: 0
 30129  004A26  90D8               	bcf	status,0,c
 30130  004A28  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30131  004A2A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30132  004A2C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30133  004A2E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30134  004A30  2B95               	incf	___lldiv@counter& (0+255),f,b
 30135  004A32                     l2977:
 30136                           
 30137                           ; BSR set to: 0
 30138                           
 30139                           ; BSR set to: 0
 30140  004A32  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30141  004A34  D7F8               	goto	l2978
 30142  004A36                     u6010:
 30143                           
 30144                           ; BSR set to: 0
 30145                           
 30146                           ; BSR set to: 0
 30147                           
 30148                           ; BSR set to: 0
 30149  004A36  90D8               	bcf	status,0,c
 30150  004A38  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30151  004A3A  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30152  004A3C  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30153  004A3E  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30154                           
 30155                           ; BSR set to: 0
 30156  004A40  518D               	movf	___lldiv@divisor& (0+255),w,b
 30157  004A42  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30158  004A44  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30159  004A46  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30160  004A48  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30161  004A4A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30162  004A4C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30163  004A4E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30164  004A50  A0D8               	btfss	status,0,c
 30165  004A52  D009               	goto	l2981
 30166                           
 30167                           ; BSR set to: 0
 30168  004A54  518D               	movf	___lldiv@divisor& (0+255),w,b
 30169  004A56  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30170  004A58  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30171  004A5A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30172  004A5C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30173  004A5E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30174  004A60  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30175  004A62  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30176                           
 30177                           ; BSR set to: 0
 30178  004A64  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30179  004A66                     l2981:
 30180                           
 30181                           ; BSR set to: 0
 30182                           
 30183                           ; BSR set to: 0
 30184  004A66  90D8               	bcf	status,0,c
 30185  004A68  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30186  004A6A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30187  004A6C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30188  004A6E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30189                           
 30190                           ; BSR set to: 0
 30191  004A70  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30192  004A72  D7E1               	goto	u6010
 30193  004A74                     l2982:
 30194                           
 30195                           ; BSR set to: 0
 30196                           
 30197                           ; BSR set to: 0
 30198  004A74  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30199  004A78  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30200  004A7C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30201  004A80  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30202                           
 30203                           ; BSR set to: 0
 30204  004A84  0012               	return		;funcret
 30205  004A86                     __end_of___lldiv:
 30206                           	opt stack 0
 30207                           tosu	equ	0xFFF
 30208                           tosh	equ	0xFFE
 30209                           tosl	equ	0xFFD
 30210                           pclath	equ	0xFFA
 30211                           tblptru	equ	0xFF8
 30212                           tblptrh	equ	0xFF7
 30213                           tblptrl	equ	0xFF6
 30214                           tablat	equ	0xFF5
 30215                           prodh	equ	0xFF4
 30216                           prodl	equ	0xFF3
 30217                           intcon	equ	0xFF2
 30218                           intcon2	equ	0xFF1
 30219                           intcon3	equ	0xFF0
 30220                           indf0	equ	0xFEF
 30221                           postinc0	equ	0xFEE
 30222                           plusw0	equ	0xFEB
 30223                           fsr0h	equ	0xFEA
 30224                           fsr0l	equ	0xFE9
 30225                           wreg	equ	0xFE8
 30226                           indf1	equ	0xFE7
 30227                           postinc1	equ	0xFE6
 30228                           postdec1	equ	0xFE5
 30229                           plusw1	equ	0xFE3
 30230                           fsr1h	equ	0xFE2
 30231                           fsr1l	equ	0xFE1
 30232                           indf2	equ	0xFDF
 30233                           postinc2	equ	0xFDE
 30234                           postdec2	equ	0xFDD
 30235                           plusw2	equ	0xFDB
 30236                           fsr2h	equ	0xFDA
 30237                           fsr2l	equ	0xFD9
 30238                           status	equ	0xFD8
 30239                           
 30240 ;; *************** function _I2cSetConfig *****************
 30241 ;; Defined at:
 30242 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30243 ;; Parameters:    Size  Location     Type
 30244 ;;		None
 30245 ;; Auto vars:     Size  Location     Type
 30246 ;;		None
 30247 ;; Return value:  Size  Location     Type
 30248 ;;                  1    wreg      void 
 30249 ;; Registers used:
 30250 ;;		wreg, status,2
 30251 ;; Tracked objects:
 30252 ;;		On entry : 0/0
 30253 ;;		On exit  : 0/0
 30254 ;;		Unchanged: 0/0
 30255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30260 ;;Total ram usage:        0 bytes
 30261 ;; Hardware stack levels used:    1
 30262 ;; Hardware stack levels required when called:   11
 30263 ;; This function calls:
 30264 ;;		Nothing
 30265 ;; This function is called by:
 30266 ;;		_I2cSlv_MainTask
 30267 ;; This function uses a non-reentrant model
 30268 ;;
 30269                           
 30270                           	psect	text141
 30271  005B4C                     __ptext141:
 30272                           	opt stack 0
 30273  005B4C                     _I2cSetConfig:
 30274                           	opt stack 16
 30275                           
 30276                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30277                           
 30278                           ; BSR set to: 0
 30279                           ;incstack = 0
 30280  005B4C  0E80               	movlw	128
 30281  005B4E  0103               	movlb	3	; () banked
 30282  005B50  6F53               	movwf	_I2cConfig& (0+255),b
 30283  005B52  0E1A               	movlw	26
 30284  005B54  6F54               	movwf	(_I2cConfig+1)& (0+255),b
 30285  005B56  0E06               	movlw	6
 30286  005B58  6F55               	movwf	(_I2cConfig+2)& (0+255),b
 30287  005B5A  0E00               	movlw	0
 30288  005B5C  6F56               	movwf	(_I2cConfig+3)& (0+255),b
 30289                           
 30290                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30291  005B5E  0E00               	movlw	0
 30292  005B60  6F57               	movwf	(_I2cConfig+4)& (0+255),b
 30293  005B62  0E6C               	movlw	108
 30294  005B64  6F58               	movwf	(_I2cConfig+5)& (0+255),b
 30295  005B66  0EDC               	movlw	220
 30296  005B68  6F59               	movwf	(_I2cConfig+6)& (0+255),b
 30297  005B6A  0E02               	movlw	2
 30298  005B6C  6F5A               	movwf	(_I2cConfig+7)& (0+255),b
 30299                           
 30300                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30301  005B6E  0E08               	movlw	8
 30302  005B70  6F5B               	movwf	(_I2cConfig+8)& (0+255),b
 30303                           
 30304                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30305  005B72  0E01               	movlw	1
 30306  005B74  6F5C               	movwf	(_I2cConfig+9)& (0+255),b
 30307                           
 30308                           ; BSR set to: 3
 30309  005B76  0012               	return		;funcret
 30310  005B78                     __end_of_I2cSetConfig:
 30311                           	opt stack 0
 30312                           tosu	equ	0xFFF
 30313                           tosh	equ	0xFFE
 30314                           tosl	equ	0xFFD
 30315                           pclath	equ	0xFFA
 30316                           tblptru	equ	0xFF8
 30317                           tblptrh	equ	0xFF7
 30318                           tblptrl	equ	0xFF6
 30319                           tablat	equ	0xFF5
 30320                           prodh	equ	0xFF4
 30321                           prodl	equ	0xFF3
 30322                           intcon	equ	0xFF2
 30323                           intcon2	equ	0xFF1
 30324                           intcon3	equ	0xFF0
 30325                           indf0	equ	0xFEF
 30326                           postinc0	equ	0xFEE
 30327                           plusw0	equ	0xFEB
 30328                           fsr0h	equ	0xFEA
 30329                           fsr0l	equ	0xFE9
 30330                           wreg	equ	0xFE8
 30331                           indf1	equ	0xFE7
 30332                           postinc1	equ	0xFE6
 30333                           postdec1	equ	0xFE5
 30334                           plusw1	equ	0xFE3
 30335                           fsr1h	equ	0xFE2
 30336                           fsr1l	equ	0xFE1
 30337                           indf2	equ	0xFDF
 30338                           postinc2	equ	0xFDE
 30339                           postdec2	equ	0xFDD
 30340                           plusw2	equ	0xFDB
 30341                           fsr2h	equ	0xFDA
 30342                           fsr2l	equ	0xFD9
 30343                           status	equ	0xFD8
 30344                           
 30345 ;; *************** function _I2cSendMsgSm *****************
 30346 ;; Defined at:
 30347 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30348 ;; Parameters:    Size  Location     Type
 30349 ;;		None
 30350 ;; Auto vars:     Size  Location     Type
 30351 ;;		None
 30352 ;; Return value:  Size  Location     Type
 30353 ;;                  1    wreg      void 
 30354 ;; Registers used:
 30355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30356 ;; Tracked objects:
 30357 ;;		On entry : 0/0
 30358 ;;		On exit  : 0/0
 30359 ;;		Unchanged: 0/0
 30360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30365 ;;Total ram usage:        0 bytes
 30366 ;; Hardware stack levels used:    1
 30367 ;; Hardware stack levels required when called:   13
 30368 ;; This function calls:
 30369 ;;		_I2c_ReadData
 30370 ;;		_I2c_WriteData
 30371 ;;		_ReceiveEvt
 30372 ;; This function is called by:
 30373 ;;		_I2cSlv_MainTask
 30374 ;; This function uses a non-reentrant model
 30375 ;;
 30376                           
 30377                           	psect	text142
 30378  003BFE                     __ptext142:
 30379                           	opt stack 0
 30380  003BFE                     _I2cSendMsgSm:
 30381                           	opt stack 14
 30382                           
 30383                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 30384                           ;i2c_slv.c: 122: switch(I2cComState)
 30385                           
 30386                           ; BSR set to: 3
 30387                           ;incstack = 0
 30388  003BFE  D04F               	goto	l1365
 30389  003C00                     
 30390                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 30391  003C00  0ED6               	movlw	low _I2cWriteDataEvt
 30392  003C02  0100               	movlb	0	; () banked
 30393  003C04  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30394  003C06  0E00               	movlw	high _I2cWriteDataEvt
 30395  003C08  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30396  003C0A  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 30397  003C0E  0900               	iorlw	0
 30398  003C10  B4D8               	btfsc	status,2,c
 30399  003C12  D007               	goto	l1367
 30400                           
 30401                           ;i2c_slv.c: 127: {
 30402                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 30403  003C14  0E01               	movlw	1
 30404  003C16  0101               	movlb	1	; () banked
 30405  003C18  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30406                           
 30407                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 30408  003C1A  0E01               	movlw	1
 30409  003C1C  0100               	movlb	0	; () banked
 30410  003C1E  6FCC               	movwf	_I2cComSts& (0+255),b
 30411                           
 30412                           ;i2c_slv.c: 132: }
 30413  003C20  0012               	return	
 30414  003C22                     l1367:
 30415                           
 30416                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 30417                           
 30418                           ; BSR set to: 0
 30419  003C22  0ED5               	movlw	low _I2cReadDataEvt
 30420  003C24  0100               	movlb	0	; () banked
 30421  003C26  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30422  003C28  0E00               	movlw	high _I2cReadDataEvt
 30423  003C2A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30424  003C2C  EC8F  F02D         	call	_ReceiveEvt	;wreg free
 30425  003C30  0900               	iorlw	0
 30426  003C32  B4D8               	btfsc	status,2,c
 30427  003C34  D007               	goto	l1369
 30428                           
 30429                           ;i2c_slv.c: 134: {
 30430                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 30431  003C36  0E02               	movlw	2
 30432  003C38  0101               	movlb	1	; () banked
 30433  003C3A  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30434                           
 30435                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 30436  003C3C  0E02               	movlw	2
 30437  003C3E  0100               	movlb	0	; () banked
 30438  003C40  6FCC               	movwf	_I2cComSts& (0+255),b
 30439                           
 30440                           ;i2c_slv.c: 139: }
 30441  003C42  0012               	return	
 30442  003C44                     l1369:
 30443                           
 30444                           ;i2c_slv.c: 140: else
 30445                           ;i2c_slv.c: 141: {
 30446                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 30447                           
 30448                           ; BSR set to: 0
 30449  003C44  0E00               	movlw	0
 30450  003C46  0100               	movlb	0	; () banked
 30451  003C48  6FCC               	movwf	_I2cComSts& (0+255),b
 30452                           
 30453                           ; BSR set to: 0
 30454                           ;i2c_slv.c: 144: }
 30455                           ;i2c_slv.c: 145: break;
 30456                           
 30457                           ; BSR set to: 0
 30458  003C4A  0012               	return	
 30459  003C4C                     
 30460                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 30461                           
 30462                           ; BSR set to: 0
 30463  003C4C  0E9F               	movlw	low _I2cTxPacket
 30464  003C4E  0100               	movlb	0	; () banked
 30465  003C50  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 30466  003C52  0E03               	movlw	high _I2cTxPacket
 30467  003C54  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 30468  003C56  EC99  F00E         	call	_I2c_WriteData	;wreg free
 30469  003C5A  0900               	iorlw	0
 30470  003C5C  B4D8               	btfsc	status,2,c
 30471  003C5E  0012               	return	
 30472                           
 30473                           ;i2c_slv.c: 150: {
 30474                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 30475  003C60  0E03               	movlw	3
 30476  003C62  0101               	movlb	1	; () banked
 30477  003C64  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30478                           
 30479                           ; BSR set to: 1
 30480                           ;i2c_slv.c: 153: }
 30481                           ;i2c_slv.c: 154: break;
 30482  003C66  0012               	return	
 30483  003C68                     
 30484                           ; BSR set to: 1
 30485                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 30486                           
 30487                           ; BSR set to: 1
 30488  003C68  0E99               	movlw	low _I2cRxPacket
 30489  003C6A  0100               	movlb	0	; () banked
 30490  003C6C  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 30491  003C6E  0E03               	movlw	high _I2cRxPacket
 30492  003C70  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 30493  003C72  EC50  F00F         	call	_I2c_ReadData	;wreg free
 30494  003C76  0900               	iorlw	0
 30495  003C78  B4D8               	btfsc	status,2,c
 30496  003C7A  0012               	return	
 30497                           
 30498                           ;i2c_slv.c: 159: {
 30499                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 30500  003C7C  0E04               	movlw	4
 30501  003C7E  0101               	movlb	1	; () banked
 30502  003C80  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30503                           
 30504                           ; BSR set to: 1
 30505                           ;i2c_slv.c: 162: }
 30506                           ;i2c_slv.c: 164: break;
 30507  003C82  0012               	return	
 30508  003C84                     
 30509                           ; BSR set to: 1
 30510                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 30511                           
 30512                           ; BSR set to: 1
 30513  003C84  0E00               	movlw	0
 30514  003C86  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30515                           
 30516                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 30517  003C88  0E00               	movlw	0
 30518  003C8A  0100               	movlb	0	; () banked
 30519  003C8C  6FCC               	movwf	_I2cComSts& (0+255),b
 30520                           
 30521                           ;i2c_slv.c: 171: break;
 30522  003C8E  0012               	return	
 30523  003C90                     
 30524                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 30525                           
 30526                           ; BSR set to: 0
 30527  003C90  0E00               	movlw	0
 30528  003C92  0101               	movlb	1	; () banked
 30529  003C94  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30530                           
 30531                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 30532  003C96  0E00               	movlw	0
 30533  003C98  0100               	movlb	0	; () banked
 30534  003C9A  6FCC               	movwf	_I2cComSts& (0+255),b
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;i2c_slv.c: 182: }
 30538                           
 30539                           ; BSR set to: 0
 30540                           ;i2c_slv.c: 181: break;
 30541                           
 30542                           ;i2c_slv.c: 180: default:
 30543                           
 30544                           ;i2c_slv.c: 178: break;
 30545  003C9C  0012               	return	
 30546  003C9E                     l1365:
 30547                           
 30548                           ; BSR set to: 0
 30549  003C9E  0101               	movlb	1	; () banked
 30550  003CA0  51EA               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 30551                           
 30552                           ; Switch size 1, requested type "space"
 30553                           ; Number of cases is 5, Range of values is 0 to 4
 30554                           ; switch strategies available:
 30555                           ; Name         Instructions Cycles
 30556                           ; simple_byte           16     9 (average)
 30557                           ;	Chosen strategy is simple_byte
 30558  003CA2  0A00               	xorlw	0	; case 0
 30559  003CA4  B4D8               	btfsc	status,2,c
 30560  003CA6  D7AC               	goto	l1366
 30561  003CA8  0A01               	xorlw	1	; case 1
 30562  003CAA  B4D8               	btfsc	status,2,c
 30563  003CAC  D7CF               	goto	l1372
 30564  003CAE  0A03               	xorlw	3	; case 2
 30565  003CB0  B4D8               	btfsc	status,2,c
 30566  003CB2  D7DA               	goto	l1374
 30567  003CB4  0A01               	xorlw	1	; case 3
 30568  003CB6  B4D8               	btfsc	status,2,c
 30569  003CB8  D7E5               	goto	l1376
 30570  003CBA  0A07               	xorlw	7	; case 4
 30571  003CBC  A4D8               	btfss	status,2,c
 30572  003CBE  0012               	return	
 30573  003CC0  D7E7               	goto	l1377
 30574  003CC2                     __end_of_I2cSendMsgSm:
 30575                           	opt stack 0
 30576                           tosu	equ	0xFFF
 30577                           tosh	equ	0xFFE
 30578                           tosl	equ	0xFFD
 30579                           pclath	equ	0xFFA
 30580                           tblptru	equ	0xFF8
 30581                           tblptrh	equ	0xFF7
 30582                           tblptrl	equ	0xFF6
 30583                           tablat	equ	0xFF5
 30584                           prodh	equ	0xFF4
 30585                           prodl	equ	0xFF3
 30586                           intcon	equ	0xFF2
 30587                           intcon2	equ	0xFF1
 30588                           intcon3	equ	0xFF0
 30589                           indf0	equ	0xFEF
 30590                           postinc0	equ	0xFEE
 30591                           plusw0	equ	0xFEB
 30592                           fsr0h	equ	0xFEA
 30593                           fsr0l	equ	0xFE9
 30594                           wreg	equ	0xFE8
 30595                           indf1	equ	0xFE7
 30596                           postinc1	equ	0xFE6
 30597                           postdec1	equ	0xFE5
 30598                           plusw1	equ	0xFE3
 30599                           fsr1h	equ	0xFE2
 30600                           fsr1l	equ	0xFE1
 30601                           indf2	equ	0xFDF
 30602                           postinc2	equ	0xFDE
 30603                           postdec2	equ	0xFDD
 30604                           plusw2	equ	0xFDB
 30605                           fsr2h	equ	0xFDA
 30606                           fsr2l	equ	0xFD9
 30607                           status	equ	0xFD8
 30608                           
 30609 ;; *************** function _ReceiveEvt *****************
 30610 ;; Defined at:
 30611 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 30612 ;; Parameters:    Size  Location     Type
 30613 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 30614 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 30615 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 30616 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 30617 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 30618 ;; Auto vars:     Size  Location     Type
 30619 ;;  EventStatus     1   32[BANK0 ] enum E7727
 30620 ;; Return value:  Size  Location     Type
 30621 ;;                  1    wreg      enum E7699
 30622 ;; Registers used:
 30623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30624 ;; Tracked objects:
 30625 ;;		On entry : 0/0
 30626 ;;		On exit  : 0/0
 30627 ;;		Unchanged: 0/0
 30628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30633 ;;Total ram usage:        4 bytes
 30634 ;; Hardware stack levels used:    1
 30635 ;; Hardware stack levels required when called:   11
 30636 ;; This function calls:
 30637 ;;		Nothing
 30638 ;; This function is called by:
 30639 ;;		_MdmCntSm
 30640 ;;		_CheckModem
 30641 ;;		_ModemEvtParser
 30642 ;;		_GetSmsSm
 30643 ;;		_SendSmsSm
 30644 ;;		_Mdm_GetSmsData
 30645 ;;		_Mdm_IsSmsReceived
 30646 ;;		_Mdm_IsRinging
 30647 ;;		_InitGprsNetwork
 30648 ;;		_HttpGetMethod
 30649 ;;		_I2cSendMsgSm
 30650 ;;		_I2cSlv_I2cReadMsgSts
 30651 ;;		_RiSm
 30652 ;;		_GsmGprsTerminal
 30653 ;; This function uses a non-reentrant model
 30654 ;;
 30655                           
 30656                           	psect	text143
 30657  005B1E                     __ptext143:
 30658                           	opt stack 0
 30659  005B1E                     _ReceiveEvt:
 30660                           	opt stack 13
 30661                           
 30662                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 30663                           
 30664                           ;incstack = 0
 30665  005B1E  0E00               	movlw	0
 30666  005B20  0100               	movlb	0	; () banked
 30667  005B22  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30668                           
 30669                           ; BSR set to: 0
 30670                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 30671  005B24  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30672  005B28  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30673  005B2C  0E02               	movlw	2
 30674  005B2E  18DE               	xorwf	postinc2,w,c
 30675  005B30  A4D8               	btfss	status,2,c
 30676  005B32  D008               	goto	l832
 30677                           
 30678                           ; BSR set to: 0
 30679                           ;os_ser.c: 106: {
 30680                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 30681  005B34  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30682  005B38  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30683  005B3C  0E01               	movlw	1
 30684  005B3E  6EDF               	movwf	indf2,c
 30685                           
 30686                           ; BSR set to: 0
 30687                           ;os_ser.c: 110: EventStatus = EventReceived;
 30688  005B40  0E01               	movlw	1
 30689  005B42  D001               	goto	L48
 30690  005B44                     l832:
 30691                           
 30692                           ; BSR set to: 0
 30693                           ;os_ser.c: 112: else
 30694                           ;os_ser.c: 113: {
 30695                           ;os_ser.c: 115: EventStatus = EventIdle;
 30696                           
 30697                           ; BSR set to: 0
 30698  005B44  0E00               	movlw	0
 30699  005B46                     L48:
 30700  005B46  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30701                           
 30702                           ; BSR set to: 0
 30703                           ;os_ser.c: 116: }
 30704                           ;os_ser.c: 119: return(EventStatus);
 30705  005B48  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 30706  005B4A  0012               	return	
 30707  005B4C                     __end_of_ReceiveEvt:
 30708                           	opt stack 0
 30709                           tosu	equ	0xFFF
 30710                           tosh	equ	0xFFE
 30711                           tosl	equ	0xFFD
 30712                           pclath	equ	0xFFA
 30713                           tblptru	equ	0xFF8
 30714                           tblptrh	equ	0xFF7
 30715                           tblptrl	equ	0xFF6
 30716                           tablat	equ	0xFF5
 30717                           prodh	equ	0xFF4
 30718                           prodl	equ	0xFF3
 30719                           intcon	equ	0xFF2
 30720                           intcon2	equ	0xFF1
 30721                           intcon3	equ	0xFF0
 30722                           indf0	equ	0xFEF
 30723                           postinc0	equ	0xFEE
 30724                           plusw0	equ	0xFEB
 30725                           fsr0h	equ	0xFEA
 30726                           fsr0l	equ	0xFE9
 30727                           wreg	equ	0xFE8
 30728                           indf1	equ	0xFE7
 30729                           postinc1	equ	0xFE6
 30730                           postdec1	equ	0xFE5
 30731                           plusw1	equ	0xFE3
 30732                           fsr1h	equ	0xFE2
 30733                           fsr1l	equ	0xFE1
 30734                           indf2	equ	0xFDF
 30735                           postinc2	equ	0xFDE
 30736                           postdec2	equ	0xFDD
 30737                           plusw2	equ	0xFDB
 30738                           fsr2h	equ	0xFDA
 30739                           fsr2l	equ	0xFD9
 30740                           status	equ	0xFD8
 30741                           
 30742 ;; *************** function _I2c_WriteData *****************
 30743 ;; Defined at:
 30744 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30745 ;; Parameters:    Size  Location     Type
 30746 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 30747 ;;		 -> I2cTxPacket(5), 
 30748 ;; Auto vars:     Size  Location     Type
 30749 ;;		None
 30750 ;; Return value:  Size  Location     Type
 30751 ;;                  1    wreg      enum E7740
 30752 ;; Registers used:
 30753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30754 ;; Tracked objects:
 30755 ;;		On entry : 0/0
 30756 ;;		On exit  : 0/0
 30757 ;;		Unchanged: 0/0
 30758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30763 ;;Total ram usage:        4 bytes
 30764 ;; Hardware stack levels used:    1
 30765 ;; Hardware stack levels required when called:   12
 30766 ;; This function calls:
 30767 ;;		_CheckAckStatus
 30768 ;;		_CheckTxStatus
 30769 ;;		_StartCondition
 30770 ;;		_StopCondition
 30771 ;;		_WriteByte
 30772 ;; This function is called by:
 30773 ;;		_I2cSendMsgSm
 30774 ;; This function uses a non-reentrant model
 30775 ;;
 30776                           
 30777                           	psect	text144
 30778  001D32                     __ptext144:
 30779                           	opt stack 0
 30780  001D32                     _I2c_WriteData:
 30781                           	opt stack 14
 30782                           
 30783                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 30784                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 30785                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 30786                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 30787                           ;i2c_drv.c: 260: switch (I2cWriteState)
 30788                           
 30789                           ; BSR set to: 0
 30790                           ;incstack = 0
 30791  001D32  D095               	goto	l160
 30792  001D34                     
 30793                           ;i2c_drv.c: 264: StartCondition();
 30794  001D34  EC08  F030         	call	_StartCondition	;wreg free
 30795                           
 30796                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 30797  001D38  0E00               	movlw	0
 30798  001D3A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30799                           
 30800                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 30801  001D3C  0E01               	movlw	1
 30802  001D3E  D084               	goto	L55
 30803  001D40                     
 30804                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 30805  001D40  0100               	movlb	0	; () banked
 30806  001D42  EE20 F001          	lfsr	2,1
 30807  001D46  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30808  001D48  26D9               	addwf	fsr2l,f,c
 30809  001D4A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30810  001D4C  22DA               	addwfc	fsr2h,f,c
 30811  001D4E  50DF               	movf	indf2,w,c
 30812  001D50  6F80               	movwf	??_I2c_WriteData& (0+255),b
 30813  001D52  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30814  001D56  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30815  001D5A  50DF               	movf	indf2,w,c
 30816  001D5C  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 30817  001D5E  90D8               	bcf	status,0,c
 30818  001D60  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 30819  001D62  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 30820  001D64  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30821  001D68  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30822  001D6C  6EDF               	movwf	indf2,c
 30823                           
 30824                           ; BSR set to: 0
 30825                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 30826  001D6E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30827  001D72  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30828  001D76  50DF               	movf	indf2,w,c
 30829  001D78  ECE6  F02F         	call	_WriteByte
 30830                           
 30831                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 30832  001D7C  0E02               	movlw	2
 30833  001D7E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30834  001D80                     
 30835                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 30836  001D80  ECF0  F02F         	call	_CheckTxStatus	;wreg free
 30837  001D84  0900               	iorlw	0
 30838  001D86  A4D8               	btfss	status,2,c
 30839  001D88  D089               	goto	l162
 30840                           
 30841                           ;i2c_drv.c: 282: {
 30842                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 30843  001D8A  0E03               	movlw	3
 30844  001D8C  D01A               	goto	L57
 30845  001D8E                     
 30846                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 30847  001D8E  0100               	movlb	0	; () banked
 30848  001D90  EE20 F002          	lfsr	2,2
 30849  001D94  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30850  001D96  26D9               	addwf	fsr2l,f,c
 30851  001D98  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30852  001D9A  22DA               	addwfc	fsr2h,f,c
 30853  001D9C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 30854  001DA0  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 30855  001DA4  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 30856  001DA8  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 30857  001DAC  50DF               	movf	indf2,w,c
 30858  001DAE  ECE6  F02F         	call	_WriteByte
 30859                           
 30860                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 30861  001DB2  0E04               	movlw	4
 30862  001DB4  D049               	goto	L55
 30863  001DB6                     
 30864                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 30865  001DB6  ECF0  F02F         	call	_CheckTxStatus	;wreg free
 30866  001DBA  0900               	iorlw	0
 30867  001DBC  A4D8               	btfss	status,2,c
 30868  001DBE  D06E               	goto	l162
 30869                           
 30870                           ;i2c_drv.c: 300: {
 30871                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 30872  001DC0  0E05               	movlw	5
 30873  001DC2                     L57:
 30874  001DC2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30875                           
 30876                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 30877  001DC4  0E08               	movlw	8
 30878  001DC6  D040               	goto	L55
 30879  001DC8                     
 30880                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 30881  001DC8  0100               	movlb	0	; () banked
 30882  001DCA  EE20 F004          	lfsr	2,4
 30883  001DCE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30884  001DD0  26D9               	addwf	fsr2l,f,c
 30885  001DD2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30886  001DD4  22DA               	addwfc	fsr2h,f,c
 30887  001DD6  50DF               	movf	indf2,w,c
 30888  001DD8  B4D8               	btfsc	status,2,c
 30889  001DDA  D010               	goto	l170
 30890                           
 30891                           ; BSR set to: 0
 30892                           ;i2c_drv.c: 310: {
 30893                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 30894  001DDC  EE20 F004          	lfsr	2,4
 30895  001DE0  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30896  001DE2  26D9               	addwf	fsr2l,f,c
 30897  001DE4  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30898  001DE6  22DA               	addwfc	fsr2h,f,c
 30899  001DE8  06DF               	decf	indf2,f,c
 30900                           
 30901                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 30902  001DEA  EE20 F002          	lfsr	2,2
 30903  001DEE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30904  001DF0  26D9               	addwf	fsr2l,f,c
 30905  001DF2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30906  001DF4  22DA               	addwfc	fsr2h,f,c
 30907  001DF6  2ADE               	incf	postinc2,f,c
 30908  001DF8  0E00               	movlw	0
 30909  001DFA  22DD               	addwfc	postdec2,f,c
 30910  001DFC                     l170:
 30911                           
 30912                           ; BSR set to: 0
 30913                           ;i2c_drv.c: 315: }
 30914                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 30915  001DFC  EE20 F004          	lfsr	2,4
 30916  001E00  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30917  001E02  26D9               	addwf	fsr2l,f,c
 30918  001E04  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30919  001E06  22DA               	addwfc	fsr2h,f,c
 30920  001E08  50DF               	movf	indf2,w,c
 30921  001E0A  A4D8               	btfss	status,2,c
 30922  001E0C  D002               	goto	l171
 30923                           
 30924                           ; BSR set to: 0
 30925                           ;i2c_drv.c: 319: {
 30926                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 30927  001E0E  0E06               	movlw	6
 30928  001E10  D01B               	goto	L55
 30929  001E12                     l171:
 30930                           
 30931                           ; BSR set to: 0
 30932                           ;i2c_drv.c: 323: else
 30933                           ;i2c_drv.c: 324: {
 30934                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 30935                           
 30936                           ; BSR set to: 0
 30937  001E12  0E03               	movlw	3
 30938  001E14  D019               	goto	L55
 30939  001E16                     
 30940                           ;i2c_drv.c: 332: StopCondition();
 30941                           
 30942                           ; BSR set to: 0
 30943  001E16  EC06  F030         	call	_StopCondition	;wreg free
 30944                           
 30945                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 30946  001E1A  0E07               	movlw	7
 30947  001E1C  D015               	goto	L55
 30948  001E1E                     
 30949                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 30950  001E1E  0E00               	movlw	0
 30951  001E20  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30952                           
 30953                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 30954  001E22  0E00               	movlw	0
 30955  001E24  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30956                           
 30957                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 30958  001E26  0E02               	movlw	2
 30959  001E28  D018               	goto	L56
 30960  001E2A                     
 30961                           ;i2c_drv.c: 347: TentativeCounter++;
 30962  001E2A  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 30963                           
 30964                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 30965  001E2C  ECF5  F02F         	call	_CheckAckStatus	;wreg free
 30966  001E30  0900               	iorlw	0
 30967  001E32  A4D8               	btfss	status,2,c
 30968  001E34  D005               	goto	l176
 30969                           
 30970                           ;i2c_drv.c: 350: {
 30971                           ;i2c_drv.c: 352: TentativeCounter = 0;
 30972  001E36  0E00               	movlw	0
 30973  001E38  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30974                           
 30975                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 30976  001E3A  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 30977                           
 30978                           ;i2c_drv.c: 355: }
 30979  001E3E  D02E               	goto	l162
 30980  001E40                     l176:
 30981                           
 30982                           ;i2c_drv.c: 356: else
 30983                           ;i2c_drv.c: 357: {
 30984                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 30985  001E40  0E02               	movlw	2
 30986  001E42  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 30987  001E44  D02B               	goto	l162
 30988                           
 30989                           ;i2c_drv.c: 360: {
 30990                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 30991  001E46  0E09               	movlw	9
 30992  001E48                     L55:
 30993  001E48  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30994                           
 30995                           ;i2c_drv.c: 363: }
 30996                           ;i2c_drv.c: 364: }
 30997                           ;i2c_drv.c: 365: break;
 30998  001E4A  D028               	goto	l162
 30999  001E4C                     
 31000                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31001  001E4C  0E00               	movlw	0
 31002  001E4E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31003                           
 31004                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31005  001E50  0E00               	movlw	0
 31006  001E52  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31007                           
 31008                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31009  001E54  0E00               	movlw	0
 31010  001E56  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31011                           
 31012                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31013  001E58  0E01               	movlw	1
 31014  001E5A                     L56:
 31015  001E5A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31016                           
 31017                           ;i2c_drv.c: 379: }
 31018                           
 31019                           ;i2c_drv.c: 378: break;
 31020                           
 31021                           ;i2c_drv.c: 377: default:
 31022                           
 31023                           ;i2c_drv.c: 375: break;
 31024  001E5C  D01F               	goto	l162
 31025  001E5E                     l160:
 31026  001E5E  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31027                           
 31028                           ; Switch size 1, requested type "space"
 31029                           ; Number of cases is 10, Range of values is 0 to 9
 31030                           ; switch strategies available:
 31031                           ; Name         Instructions Cycles
 31032                           ; simple_byte           31    16 (average)
 31033                           ;	Chosen strategy is simple_byte
 31034  001E60  0A00               	xorlw	0	; case 0
 31035  001E62  B4D8               	btfsc	status,2,c
 31036  001E64  D767               	goto	l161
 31037  001E66  0A01               	xorlw	1	; case 1
 31038  001E68  B4D8               	btfsc	status,2,c
 31039  001E6A  D76A               	goto	l163
 31040  001E6C  0A03               	xorlw	3	; case 2
 31041  001E6E  B4D8               	btfsc	status,2,c
 31042  001E70  D787               	goto	l164
 31043  001E72  0A01               	xorlw	1	; case 3
 31044  001E74  B4D8               	btfsc	status,2,c
 31045  001E76  D78B               	goto	l166
 31046  001E78  0A07               	xorlw	7	; case 4
 31047  001E7A  B4D8               	btfsc	status,2,c
 31048  001E7C  D79C               	goto	l167
 31049  001E7E  0A01               	xorlw	1	; case 5
 31050  001E80  B4D8               	btfsc	status,2,c
 31051  001E82  D7A2               	goto	l169
 31052  001E84  0A03               	xorlw	3	; case 6
 31053  001E86  B4D8               	btfsc	status,2,c
 31054  001E88  D7C6               	goto	l173
 31055  001E8A  0A01               	xorlw	1	; case 7
 31056  001E8C  B4D8               	btfsc	status,2,c
 31057  001E8E  D7C7               	goto	l174
 31058  001E90  0A0F               	xorlw	15	; case 8
 31059  001E92  B4D8               	btfsc	status,2,c
 31060  001E94  D7CA               	goto	l175
 31061  001E96  0A01               	xorlw	1	; case 9
 31062  001E98  B4D8               	btfsc	status,2,c
 31063  001E9A  D7D8               	goto	l179
 31064  001E9C                     l162:
 31065                           
 31066                           ;i2c_drv.c: 382: return WriteStatus;
 31067  001E9C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31068  001E9E  0012               	return	
 31069  001EA0                     __end_of_I2c_WriteData:
 31070                           	opt stack 0
 31071                           tosu	equ	0xFFF
 31072                           tosh	equ	0xFFE
 31073                           tosl	equ	0xFFD
 31074                           pclath	equ	0xFFA
 31075                           tblptru	equ	0xFF8
 31076                           tblptrh	equ	0xFF7
 31077                           tblptrl	equ	0xFF6
 31078                           tablat	equ	0xFF5
 31079                           prodh	equ	0xFF4
 31080                           prodl	equ	0xFF3
 31081                           intcon	equ	0xFF2
 31082                           intcon2	equ	0xFF1
 31083                           intcon3	equ	0xFF0
 31084                           indf0	equ	0xFEF
 31085                           postinc0	equ	0xFEE
 31086                           plusw0	equ	0xFEB
 31087                           fsr0h	equ	0xFEA
 31088                           fsr0l	equ	0xFE9
 31089                           wreg	equ	0xFE8
 31090                           indf1	equ	0xFE7
 31091                           postinc1	equ	0xFE6
 31092                           postdec1	equ	0xFE5
 31093                           plusw1	equ	0xFE3
 31094                           fsr1h	equ	0xFE2
 31095                           fsr1l	equ	0xFE1
 31096                           indf2	equ	0xFDF
 31097                           postinc2	equ	0xFDE
 31098                           postdec2	equ	0xFDD
 31099                           plusw2	equ	0xFDB
 31100                           fsr2h	equ	0xFDA
 31101                           fsr2l	equ	0xFD9
 31102                           status	equ	0xFD8
 31103                           
 31104 ;; *************** function _I2c_ReadData *****************
 31105 ;; Defined at:
 31106 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31107 ;; Parameters:    Size  Location     Type
 31108 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31109 ;;		 -> I2cRxPacket(6), 
 31110 ;; Auto vars:     Size  Location     Type
 31111 ;;		None
 31112 ;; Return value:  Size  Location     Type
 31113 ;;                  1    wreg      enum E7787
 31114 ;; Registers used:
 31115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31116 ;; Tracked objects:
 31117 ;;		On entry : 0/0
 31118 ;;		On exit  : 0/0
 31119 ;;		Unchanged: 0/0
 31120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31125 ;;Total ram usage:        4 bytes
 31126 ;; Hardware stack levels used:    1
 31127 ;; Hardware stack levels required when called:   12
 31128 ;; This function calls:
 31129 ;;		_CheckAckStatus
 31130 ;;		_CheckTxStatus
 31131 ;;		_EnableReceiver
 31132 ;;		_GenerateEvt
 31133 ;;		_ReadByte
 31134 ;;		_SetAckStatus
 31135 ;;		_StartCondition
 31136 ;;		_StopCondition
 31137 ;;		_WriteByte
 31138 ;; This function is called by:
 31139 ;;		_I2cSendMsgSm
 31140 ;; This function uses a non-reentrant model
 31141 ;;
 31142                           
 31143                           	psect	text145
 31144  001EA0                     __ptext145:
 31145                           	opt stack 0
 31146  001EA0                     _I2c_ReadData:
 31147                           	opt stack 14
 31148                           
 31149                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31150                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31151                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31152                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31153                           ;i2c_drv.c: 402: switch (I2cReadState)
 31154                           
 31155                           ;incstack = 0
 31156  001EA0  D090               	goto	l192
 31157  001EA2                     
 31158                           ;i2c_drv.c: 406: StartCondition();
 31159  001EA2  EC08  F030         	call	_StartCondition	;wreg free
 31160                           
 31161                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31162  001EA6  0E00               	movlw	0
 31163  001EA8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31164                           
 31165                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31166  001EAA  0E01               	movlw	1
 31167  001EAC  D083               	goto	L65
 31168  001EAE                     
 31169                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31170  001EAE  0100               	movlb	0	; () banked
 31171  001EB0  EE20 F001          	lfsr	2,1
 31172  001EB4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31173  001EB6  26D9               	addwf	fsr2l,f,c
 31174  001EB8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31175  001EBA  22DA               	addwfc	fsr2h,f,c
 31176  001EBC  50DF               	movf	indf2,w,c
 31177  001EBE  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31178  001EC0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31179  001EC4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31180  001EC8  50DF               	movf	indf2,w,c
 31181  001ECA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31182  001ECC  90D8               	bcf	status,0,c
 31183  001ECE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31184  001ED0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31185  001ED2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31186  001ED6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31187  001EDA  6EDF               	movwf	indf2,c
 31188                           
 31189                           ; BSR set to: 0
 31190                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31191  001EDC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31192  001EE0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31193  001EE4  50DF               	movf	indf2,w,c
 31194  001EE6  ECE6  F02F         	call	_WriteByte
 31195                           
 31196                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31197  001EEA  0E02               	movlw	2
 31198  001EEC  D063               	goto	L65
 31199  001EEE                     
 31200                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31201  001EEE  ECF0  F02F         	call	_CheckTxStatus	;wreg free
 31202  001EF2  0900               	iorlw	0
 31203  001EF4  A4D8               	btfss	status,2,c
 31204  001EF6  D081               	goto	l194
 31205                           
 31206                           ;i2c_drv.c: 425: {
 31207                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31208  001EF8  0E03               	movlw	3
 31209  001EFA  D05C               	goto	L65
 31210  001EFC                     
 31211                           ;i2c_drv.c: 433: TentativeCounter++;
 31212  001EFC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 31213                           
 31214                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31215  001EFE  ECF5  F02F         	call	_CheckAckStatus	;wreg free
 31216  001F02  0900               	iorlw	0
 31217  001F04  A4D8               	btfss	status,2,c
 31218  001F06  D004               	goto	l199
 31219                           
 31220                           ;i2c_drv.c: 436: {
 31221                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31222  001F08  0E00               	movlw	0
 31223  001F0A  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 31224  001F0C                     
 31225                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31226  001F0C  0E04               	movlw	4
 31227  001F0E  D052               	goto	L65
 31228  001F10                     l199:
 31229                           
 31230                           ;i2c_drv.c: 442: else
 31231                           ;i2c_drv.c: 443: {
 31232                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31233  001F10  0E02               	movlw	2
 31234  001F12  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31235  001F14  D072               	goto	l194
 31236                           
 31237                           ;i2c_drv.c: 446: {
 31238                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31239  001F16  0E08               	movlw	8
 31240  001F18  D04D               	goto	L65
 31241  001F1A                     
 31242                           ;i2c_drv.c: 455: EnableReceiver();
 31243  001F1A  EC0A  F030         	call	_EnableReceiver	;wreg free
 31244                           
 31245                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31246  001F1E  0E05               	movlw	5
 31247  001F20  D049               	goto	L65
 31248  001F22                     
 31249                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31250  001F22  ECF0  F02F         	call	_CheckTxStatus	;wreg free
 31251  001F26  0900               	iorlw	0
 31252  001F28  A4D8               	btfss	status,2,c
 31253  001F2A  D067               	goto	l194
 31254                           
 31255                           ;i2c_drv.c: 463: {
 31256                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31257  001F2C  0100               	movlb	0	; () banked
 31258  001F2E  EE20 F002          	lfsr	2,2
 31259  001F32  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31260  001F34  26D9               	addwf	fsr2l,f,c
 31261  001F36  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31262  001F38  22DA               	addwfc	fsr2h,f,c
 31263  001F3A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31264  001F3E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31265  001F42  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31266  001F46  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31267  001F4A  ECEB  F02F         	call	_ReadByte	;wreg free
 31268  001F4E  6EDF               	movwf	indf2,c
 31269                           
 31270                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31271  001F50  0100               	movlb	0	; () banked
 31272  001F52  EE20 F002          	lfsr	2,2
 31273  001F56  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31274  001F58  26D9               	addwf	fsr2l,f,c
 31275  001F5A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31276  001F5C  22DA               	addwfc	fsr2h,f,c
 31277  001F5E  2ADE               	incf	postinc2,f,c
 31278  001F60  0E00               	movlw	0
 31279  001F62  22DD               	addwfc	postdec2,f,c
 31280                           
 31281                           ; BSR set to: 0
 31282                           ;i2c_drv.c: 469: DataCounter++;
 31283  001F64  2A33               	incf	I2c_ReadData@DataCounter,f,c
 31284                           
 31285                           ; BSR set to: 0
 31286                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31287  001F66  0E06               	movlw	6
 31288  001F68  D025               	goto	L65
 31289  001F6A                     
 31290                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31291                           
 31292                           ; BSR set to: 0
 31293  001F6A  0100               	movlb	0	; () banked
 31294  001F6C  EE20 F004          	lfsr	2,4
 31295  001F70  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31296  001F72  26D9               	addwf	fsr2l,f,c
 31297  001F74  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31298  001F76  22DA               	addwfc	fsr2h,f,c
 31299  001F78  50DE               	movf	postinc2,w,c
 31300  001F7A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 31301  001F7C  A0D8               	btfss	status,0,c
 31302  001F7E  D008               	goto	l206
 31303                           
 31304                           ; BSR set to: 0
 31305                           ;i2c_drv.c: 478: {
 31306                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31307  001F80  0E01               	movlw	1
 31308  001F82  EC89  F02F         	call	_SetAckStatus
 31309                           
 31310                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31311  001F86  0E07               	movlw	7
 31312  001F88  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31313                           
 31314                           ;i2c_drv.c: 484: DataCounter = 0;
 31315  001F8A  0E00               	movlw	0
 31316  001F8C  6E33               	movwf	I2c_ReadData@DataCounter,c
 31317                           
 31318                           ;i2c_drv.c: 485: }
 31319  001F8E  D035               	goto	l194
 31320  001F90                     l206:
 31321                           
 31322                           ;i2c_drv.c: 486: else
 31323                           ;i2c_drv.c: 487: {
 31324                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31325  001F90  0E00               	movlw	0
 31326  001F92  EC89  F02F         	call	_SetAckStatus
 31327  001F96  D7BA               	goto	L66
 31328  001F98                     
 31329                           ;i2c_drv.c: 497: StopCondition();
 31330  001F98  EC06  F030         	call	_StopCondition	;wreg free
 31331                           
 31332                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31333  001F9C  0E02               	movlw	2
 31334  001F9E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31335                           
 31336                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31337  001FA0  0E05               	movlw	5
 31338  001FA2  0100               	movlb	0	; () banked
 31339  001FA4  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 31340  001FA6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 31341  001FA8  0E00               	movlw	0
 31342  001FAA  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31343  001FAC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 31344  001FAE  EC47  F02F         	call	_GenerateEvt	;wreg free
 31345                           
 31346                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 31347  001FB2  0E00               	movlw	0
 31348  001FB4                     L65:
 31349  001FB4  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31350                           
 31351                           ;i2c_drv.c: 504: break;
 31352  001FB6  D021               	goto	l194
 31353  001FB8                     
 31354                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 31355  001FB8  0E00               	movlw	0
 31356  001FBA  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31357                           
 31358                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 31359  001FBC  0E01               	movlw	1
 31360  001FBE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31361                           
 31362                           ;i2c_drv.c: 515: }
 31363                           
 31364                           ;i2c_drv.c: 514: break;
 31365                           
 31366                           ;i2c_drv.c: 513: default:
 31367                           
 31368                           ;i2c_drv.c: 511: break;
 31369  001FC0  D01C               	goto	l194
 31370  001FC2                     l192:
 31371  001FC2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 31372                           
 31373                           ; Switch size 1, requested type "space"
 31374                           ; Number of cases is 9, Range of values is 0 to 8
 31375                           ; switch strategies available:
 31376                           ; Name         Instructions Cycles
 31377                           ; simple_byte           28    15 (average)
 31378                           ;	Chosen strategy is simple_byte
 31379  001FC4  0A00               	xorlw	0	; case 0
 31380  001FC6  B4D8               	btfsc	status,2,c
 31381  001FC8  D76C               	goto	l193
 31382  001FCA  0A01               	xorlw	1	; case 1
 31383  001FCC  B4D8               	btfsc	status,2,c
 31384  001FCE  D76F               	goto	l195
 31385  001FD0  0A03               	xorlw	3	; case 2
 31386  001FD2  B4D8               	btfsc	status,2,c
 31387  001FD4  D78C               	goto	l196
 31388  001FD6  0A01               	xorlw	1	; case 3
 31389  001FD8  B4D8               	btfsc	status,2,c
 31390  001FDA  D790               	goto	l198
 31391  001FDC  0A07               	xorlw	7	; case 4
 31392  001FDE  B4D8               	btfsc	status,2,c
 31393  001FE0  D79C               	goto	l202
 31394  001FE2  0A01               	xorlw	1	; case 5
 31395  001FE4  B4D8               	btfsc	status,2,c
 31396  001FE6  D79D               	goto	l203
 31397  001FE8  0A03               	xorlw	3	; case 6
 31398  001FEA  B4D8               	btfsc	status,2,c
 31399  001FEC  D7BE               	goto	l205
 31400  001FEE  0A01               	xorlw	1	; case 7
 31401  001FF0  B4D8               	btfsc	status,2,c
 31402  001FF2  D7D2               	goto	l208
 31403  001FF4  0A0F               	xorlw	15	; case 8
 31404  001FF6  B4D8               	btfsc	status,2,c
 31405  001FF8  D7DF               	goto	l209
 31406  001FFA                     l194:
 31407                           
 31408                           ;i2c_drv.c: 518: return ReadStatus;
 31409  001FFA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 31410  001FFC  0012               	return	
 31411  001FFE                     __end_of_I2c_ReadData:
 31412                           	opt stack 0
 31413                           tosu	equ	0xFFF
 31414                           tosh	equ	0xFFE
 31415                           tosl	equ	0xFFD
 31416                           pclath	equ	0xFFA
 31417                           tblptru	equ	0xFF8
 31418                           tblptrh	equ	0xFF7
 31419                           tblptrl	equ	0xFF6
 31420                           tablat	equ	0xFF5
 31421                           prodh	equ	0xFF4
 31422                           prodl	equ	0xFF3
 31423                           intcon	equ	0xFF2
 31424                           intcon2	equ	0xFF1
 31425                           intcon3	equ	0xFF0
 31426                           indf0	equ	0xFEF
 31427                           postinc0	equ	0xFEE
 31428                           plusw0	equ	0xFEB
 31429                           fsr0h	equ	0xFEA
 31430                           fsr0l	equ	0xFE9
 31431                           wreg	equ	0xFE8
 31432                           indf1	equ	0xFE7
 31433                           postinc1	equ	0xFE6
 31434                           postdec1	equ	0xFE5
 31435                           plusw1	equ	0xFE3
 31436                           fsr1h	equ	0xFE2
 31437                           fsr1l	equ	0xFE1
 31438                           indf2	equ	0xFDF
 31439                           postinc2	equ	0xFDE
 31440                           postdec2	equ	0xFDD
 31441                           plusw2	equ	0xFDB
 31442                           fsr2h	equ	0xFDA
 31443                           fsr2l	equ	0xFD9
 31444                           status	equ	0xFD8
 31445                           
 31446 ;; *************** function _WriteByte *****************
 31447 ;; Defined at:
 31448 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31449 ;; Parameters:    Size  Location     Type
 31450 ;;  Byte            1    wreg     unsigned char 
 31451 ;; Auto vars:     Size  Location     Type
 31452 ;;  Byte            1   29[BANK0 ] unsigned char 
 31453 ;; Return value:  Size  Location     Type
 31454 ;;                  1    wreg      void 
 31455 ;; Registers used:
 31456 ;;		wreg
 31457 ;; Tracked objects:
 31458 ;;		On entry : 0/0
 31459 ;;		On exit  : 0/0
 31460 ;;		Unchanged: 0/0
 31461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;Total ram usage:        1 bytes
 31467 ;; Hardware stack levels used:    1
 31468 ;; Hardware stack levels required when called:   11
 31469 ;; This function calls:
 31470 ;;		Nothing
 31471 ;; This function is called by:
 31472 ;;		_I2c_WriteData
 31473 ;;		_I2c_ReadData
 31474 ;; This function uses a non-reentrant model
 31475 ;;
 31476                           
 31477                           	psect	text146
 31478  005FCC                     __ptext146:
 31479                           	opt stack 0
 31480  005FCC                     _WriteByte:
 31481                           	opt stack 14
 31482                           
 31483                           ;incstack = 0
 31484                           ;WriteByte@Byte stored from wreg
 31485  005FCC  0100               	movlb	0	; () banked
 31486  005FCE  6F7D               	movwf	WriteByte@Byte& (0+255),b
 31487                           
 31488                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 31489  005FD0  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 31490  005FD4  0012               	return		;funcret
 31491  005FD6                     __end_of_WriteByte:
 31492                           	opt stack 0
 31493                           tosu	equ	0xFFF
 31494                           tosh	equ	0xFFE
 31495                           tosl	equ	0xFFD
 31496                           pclath	equ	0xFFA
 31497                           tblptru	equ	0xFF8
 31498                           tblptrh	equ	0xFF7
 31499                           tblptrl	equ	0xFF6
 31500                           tablat	equ	0xFF5
 31501                           prodh	equ	0xFF4
 31502                           prodl	equ	0xFF3
 31503                           intcon	equ	0xFF2
 31504                           intcon2	equ	0xFF1
 31505                           intcon3	equ	0xFF0
 31506                           indf0	equ	0xFEF
 31507                           postinc0	equ	0xFEE
 31508                           plusw0	equ	0xFEB
 31509                           fsr0h	equ	0xFEA
 31510                           fsr0l	equ	0xFE9
 31511                           wreg	equ	0xFE8
 31512                           indf1	equ	0xFE7
 31513                           postinc1	equ	0xFE6
 31514                           postdec1	equ	0xFE5
 31515                           plusw1	equ	0xFE3
 31516                           fsr1h	equ	0xFE2
 31517                           fsr1l	equ	0xFE1
 31518                           indf2	equ	0xFDF
 31519                           postinc2	equ	0xFDE
 31520                           postdec2	equ	0xFDD
 31521                           plusw2	equ	0xFDB
 31522                           fsr2h	equ	0xFDA
 31523                           fsr2l	equ	0xFD9
 31524                           status	equ	0xFD8
 31525                           
 31526 ;; *************** function _StopCondition *****************
 31527 ;; Defined at:
 31528 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31529 ;; Parameters:    Size  Location     Type
 31530 ;;		None
 31531 ;; Auto vars:     Size  Location     Type
 31532 ;;		None
 31533 ;; Return value:  Size  Location     Type
 31534 ;;                  1    wreg      void 
 31535 ;; Registers used:
 31536 ;;		status,2, status,0
 31537 ;; Tracked objects:
 31538 ;;		On entry : 0/0
 31539 ;;		On exit  : 0/0
 31540 ;;		Unchanged: 0/0
 31541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31546 ;;Total ram usage:        0 bytes
 31547 ;; Hardware stack levels used:    1
 31548 ;; Hardware stack levels required when called:   11
 31549 ;; This function calls:
 31550 ;;		Nothing
 31551 ;; This function is called by:
 31552 ;;		_I2c_WriteData
 31553 ;;		_I2c_ReadData
 31554 ;; This function uses a non-reentrant model
 31555 ;;
 31556                           
 31557                           	psect	text147
 31558  00600C                     __ptext147:
 31559                           	opt stack 0
 31560  00600C                     _StopCondition:
 31561                           	opt stack 14
 31562                           
 31563                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 31564                           
 31565                           ;incstack = 0
 31566  00600C  8471               	bsf	3953,2,c	;volatile
 31567  00600E  0012               	return		;funcret
 31568  006010                     __end_of_StopCondition:
 31569                           	opt stack 0
 31570                           tosu	equ	0xFFF
 31571                           tosh	equ	0xFFE
 31572                           tosl	equ	0xFFD
 31573                           pclath	equ	0xFFA
 31574                           tblptru	equ	0xFF8
 31575                           tblptrh	equ	0xFF7
 31576                           tblptrl	equ	0xFF6
 31577                           tablat	equ	0xFF5
 31578                           prodh	equ	0xFF4
 31579                           prodl	equ	0xFF3
 31580                           intcon	equ	0xFF2
 31581                           intcon2	equ	0xFF1
 31582                           intcon3	equ	0xFF0
 31583                           indf0	equ	0xFEF
 31584                           postinc0	equ	0xFEE
 31585                           plusw0	equ	0xFEB
 31586                           fsr0h	equ	0xFEA
 31587                           fsr0l	equ	0xFE9
 31588                           wreg	equ	0xFE8
 31589                           indf1	equ	0xFE7
 31590                           postinc1	equ	0xFE6
 31591                           postdec1	equ	0xFE5
 31592                           plusw1	equ	0xFE3
 31593                           fsr1h	equ	0xFE2
 31594                           fsr1l	equ	0xFE1
 31595                           indf2	equ	0xFDF
 31596                           postinc2	equ	0xFDE
 31597                           postdec2	equ	0xFDD
 31598                           plusw2	equ	0xFDB
 31599                           fsr2h	equ	0xFDA
 31600                           fsr2l	equ	0xFD9
 31601                           status	equ	0xFD8
 31602                           
 31603 ;; *************** function _StartCondition *****************
 31604 ;; Defined at:
 31605 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31606 ;; Parameters:    Size  Location     Type
 31607 ;;		None
 31608 ;; Auto vars:     Size  Location     Type
 31609 ;;		None
 31610 ;; Return value:  Size  Location     Type
 31611 ;;                  1    wreg      void 
 31612 ;; Registers used:
 31613 ;;		status,2, status,0
 31614 ;; Tracked objects:
 31615 ;;		On entry : 0/0
 31616 ;;		On exit  : 0/0
 31617 ;;		Unchanged: 0/0
 31618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31623 ;;Total ram usage:        0 bytes
 31624 ;; Hardware stack levels used:    1
 31625 ;; Hardware stack levels required when called:   11
 31626 ;; This function calls:
 31627 ;;		Nothing
 31628 ;; This function is called by:
 31629 ;;		_I2c_WriteData
 31630 ;;		_I2c_ReadData
 31631 ;; This function uses a non-reentrant model
 31632 ;;
 31633                           
 31634                           	psect	text148
 31635  006010                     __ptext148:
 31636                           	opt stack 0
 31637  006010                     _StartCondition:
 31638                           	opt stack 14
 31639                           
 31640                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 31641                           
 31642                           ;incstack = 0
 31643  006010  8071               	bsf	3953,0,c	;volatile
 31644  006012  0012               	return		;funcret
 31645  006014                     __end_of_StartCondition:
 31646                           	opt stack 0
 31647                           tosu	equ	0xFFF
 31648                           tosh	equ	0xFFE
 31649                           tosl	equ	0xFFD
 31650                           pclath	equ	0xFFA
 31651                           tblptru	equ	0xFF8
 31652                           tblptrh	equ	0xFF7
 31653                           tblptrl	equ	0xFF6
 31654                           tablat	equ	0xFF5
 31655                           prodh	equ	0xFF4
 31656                           prodl	equ	0xFF3
 31657                           intcon	equ	0xFF2
 31658                           intcon2	equ	0xFF1
 31659                           intcon3	equ	0xFF0
 31660                           indf0	equ	0xFEF
 31661                           postinc0	equ	0xFEE
 31662                           plusw0	equ	0xFEB
 31663                           fsr0h	equ	0xFEA
 31664                           fsr0l	equ	0xFE9
 31665                           wreg	equ	0xFE8
 31666                           indf1	equ	0xFE7
 31667                           postinc1	equ	0xFE6
 31668                           postdec1	equ	0xFE5
 31669                           plusw1	equ	0xFE3
 31670                           fsr1h	equ	0xFE2
 31671                           fsr1l	equ	0xFE1
 31672                           indf2	equ	0xFDF
 31673                           postinc2	equ	0xFDE
 31674                           postdec2	equ	0xFDD
 31675                           plusw2	equ	0xFDB
 31676                           fsr2h	equ	0xFDA
 31677                           fsr2l	equ	0xFD9
 31678                           status	equ	0xFD8
 31679                           
 31680 ;; *************** function _SetAckStatus *****************
 31681 ;; Defined at:
 31682 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31683 ;; Parameters:    Size  Location     Type
 31684 ;;  AckSts          1    wreg     unsigned char 
 31685 ;; Auto vars:     Size  Location     Type
 31686 ;;  AckSts          1   29[BANK0 ] unsigned char 
 31687 ;; Return value:  Size  Location     Type
 31688 ;;                  1    wreg      void 
 31689 ;; Registers used:
 31690 ;;		wreg
 31691 ;; Tracked objects:
 31692 ;;		On entry : 0/0
 31693 ;;		On exit  : 0/0
 31694 ;;		Unchanged: 0/0
 31695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31700 ;;Total ram usage:        1 bytes
 31701 ;; Hardware stack levels used:    1
 31702 ;; Hardware stack levels required when called:   11
 31703 ;; This function calls:
 31704 ;;		Nothing
 31705 ;; This function is called by:
 31706 ;;		_I2c_ReadData
 31707 ;; This function uses a non-reentrant model
 31708 ;;
 31709                           
 31710                           	psect	text149
 31711  005F12                     __ptext149:
 31712                           	opt stack 0
 31713  005F12                     _SetAckStatus:
 31714                           	opt stack 14
 31715                           
 31716                           ;incstack = 0
 31717                           ;SetAckStatus@AckSts stored from wreg
 31718  005F12  0100               	movlb	0	; () banked
 31719  005F14  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 31720                           
 31721                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 31722  005F16  0100               	movlb	0	; () banked
 31723  005F18  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 31724  005F1A  D002               	bra	u6185
 31725  005F1C  9A71               	bcf	3953,5,c	;volatile
 31726  005F1E  D001               	bra	u6186
 31727  005F20                     u6185:
 31728  005F20  8A71               	bsf	3953,5,c	;volatile
 31729  005F22                     u6186:
 31730                           
 31731                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 31732  005F22  8871               	bsf	3953,4,c	;volatile
 31733  005F24  0012               	return		;funcret
 31734  005F26                     __end_of_SetAckStatus:
 31735                           	opt stack 0
 31736                           tosu	equ	0xFFF
 31737                           tosh	equ	0xFFE
 31738                           tosl	equ	0xFFD
 31739                           pclath	equ	0xFFA
 31740                           tblptru	equ	0xFF8
 31741                           tblptrh	equ	0xFF7
 31742                           tblptrl	equ	0xFF6
 31743                           tablat	equ	0xFF5
 31744                           prodh	equ	0xFF4
 31745                           prodl	equ	0xFF3
 31746                           intcon	equ	0xFF2
 31747                           intcon2	equ	0xFF1
 31748                           intcon3	equ	0xFF0
 31749                           indf0	equ	0xFEF
 31750                           postinc0	equ	0xFEE
 31751                           plusw0	equ	0xFEB
 31752                           fsr0h	equ	0xFEA
 31753                           fsr0l	equ	0xFE9
 31754                           wreg	equ	0xFE8
 31755                           indf1	equ	0xFE7
 31756                           postinc1	equ	0xFE6
 31757                           postdec1	equ	0xFE5
 31758                           plusw1	equ	0xFE3
 31759                           fsr1h	equ	0xFE2
 31760                           fsr1l	equ	0xFE1
 31761                           indf2	equ	0xFDF
 31762                           postinc2	equ	0xFDE
 31763                           postdec2	equ	0xFDD
 31764                           plusw2	equ	0xFDB
 31765                           fsr2h	equ	0xFDA
 31766                           fsr2l	equ	0xFD9
 31767                           status	equ	0xFD8
 31768                           
 31769 ;; *************** function _ReadByte *****************
 31770 ;; Defined at:
 31771 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31772 ;; Parameters:    Size  Location     Type
 31773 ;;		None
 31774 ;; Auto vars:     Size  Location     Type
 31775 ;;  Byte            1   29[BANK0 ] unsigned char 
 31776 ;; Return value:  Size  Location     Type
 31777 ;;                  1    wreg      unsigned char 
 31778 ;; Registers used:
 31779 ;;		wreg, status,2
 31780 ;; Tracked objects:
 31781 ;;		On entry : 0/0
 31782 ;;		On exit  : 0/0
 31783 ;;		Unchanged: 0/0
 31784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31789 ;;Total ram usage:        1 bytes
 31790 ;; Hardware stack levels used:    1
 31791 ;; Hardware stack levels required when called:   11
 31792 ;; This function calls:
 31793 ;;		Nothing
 31794 ;; This function is called by:
 31795 ;;		_I2c_ReadData
 31796 ;; This function uses a non-reentrant model
 31797 ;;
 31798                           
 31799                           	psect	text150
 31800  005FD6                     __ptext150:
 31801                           	opt stack 0
 31802  005FD6                     _ReadByte:
 31803                           	opt stack 14
 31804                           
 31805                           ;i2c_drv.c: 207: UINT8 Byte;
 31806                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 31807                           
 31808                           ;incstack = 0
 31809  005FD6  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 31810                           
 31811                           ;i2c_drv.c: 213: return Byte;
 31812  005FDA  0100               	movlb	0	; () banked
 31813  005FDC  517D               	movf	ReadByte@Byte& (0+255),w,b
 31814  005FDE  0012               	return	
 31815  005FE0                     __end_of_ReadByte:
 31816                           	opt stack 0
 31817                           tosu	equ	0xFFF
 31818                           tosh	equ	0xFFE
 31819                           tosl	equ	0xFFD
 31820                           pclath	equ	0xFFA
 31821                           tblptru	equ	0xFF8
 31822                           tblptrh	equ	0xFF7
 31823                           tblptrl	equ	0xFF6
 31824                           tablat	equ	0xFF5
 31825                           prodh	equ	0xFF4
 31826                           prodl	equ	0xFF3
 31827                           intcon	equ	0xFF2
 31828                           intcon2	equ	0xFF1
 31829                           intcon3	equ	0xFF0
 31830                           indf0	equ	0xFEF
 31831                           postinc0	equ	0xFEE
 31832                           plusw0	equ	0xFEB
 31833                           fsr0h	equ	0xFEA
 31834                           fsr0l	equ	0xFE9
 31835                           wreg	equ	0xFE8
 31836                           indf1	equ	0xFE7
 31837                           postinc1	equ	0xFE6
 31838                           postdec1	equ	0xFE5
 31839                           plusw1	equ	0xFE3
 31840                           fsr1h	equ	0xFE2
 31841                           fsr1l	equ	0xFE1
 31842                           indf2	equ	0xFDF
 31843                           postinc2	equ	0xFDE
 31844                           postdec2	equ	0xFDD
 31845                           plusw2	equ	0xFDB
 31846                           fsr2h	equ	0xFDA
 31847                           fsr2l	equ	0xFD9
 31848                           status	equ	0xFD8
 31849                           
 31850 ;; *************** function _GenerateEvt *****************
 31851 ;; Defined at:
 31852 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31855 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 31856 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 31857 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 31858 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 31859 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 31860 ;; Auto vars:     Size  Location     Type
 31861 ;;  EventStatus     1   31[BANK0 ] enum E7727
 31862 ;; Return value:  Size  Location     Type
 31863 ;;                  1    wreg      enum E7699
 31864 ;; Registers used:
 31865 ;;		wreg, fsr2l, fsr2h, status,2
 31866 ;; Tracked objects:
 31867 ;;		On entry : 0/0
 31868 ;;		On exit  : 0/0
 31869 ;;		Unchanged: 0/0
 31870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31874 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31875 ;;Total ram usage:        3 bytes
 31876 ;; Hardware stack levels used:    1
 31877 ;; Hardware stack levels required when called:   11
 31878 ;; This function calls:
 31879 ;;		Nothing
 31880 ;; This function is called by:
 31881 ;;		_I2c_ReadData
 31882 ;;		_CheckModem
 31883 ;;		_TurnOnModem
 31884 ;;		_ConfigureModem
 31885 ;;		_ModemEvtParser
 31886 ;;		_GetSmsSm
 31887 ;;		_Mdm_RequestSmsData
 31888 ;;		_I2cSlv_SendI2cMsg
 31889 ;;		_I2cSlv_ReceiveI2cMsg
 31890 ;;		_RiSm
 31891 ;;		_Mdm_SendSmsData
 31892 ;;		_MdmHttp_InitGprsNetwork
 31893 ;;		_MdmHttp_GetMethod
 31894 ;;		_Alarm
 31895 ;; This function uses a non-reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text151
 31899  005E8E                     __ptext151:
 31900                           	opt stack 0
 31901  005E8E                     _GenerateEvt:
 31902                           	opt stack 13
 31903                           
 31904                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 31905                           
 31906                           ; BSR set to: 0
 31907                           ;incstack = 0
 31908  005E8E  0E00               	movlw	0
 31909  005E90  0100               	movlb	0	; () banked
 31910  005E92  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31911                           
 31912                           ; BSR set to: 0
 31913                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 31914  005E94  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 31915  005E98  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 31916  005E9C  0E02               	movlw	2
 31917  005E9E  6EDF               	movwf	indf2,c
 31918                           
 31919                           ; BSR set to: 0
 31920                           ;os_ser.c: 83: EventStatus = EventSent;
 31921  005EA0  0E02               	movlw	2
 31922  005EA2  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31923  005EA4  0012               	return	
 31924  005EA6                     __end_of_GenerateEvt:
 31925                           	opt stack 0
 31926                           tosu	equ	0xFFF
 31927                           tosh	equ	0xFFE
 31928                           tosl	equ	0xFFD
 31929                           pclath	equ	0xFFA
 31930                           tblptru	equ	0xFF8
 31931                           tblptrh	equ	0xFF7
 31932                           tblptrl	equ	0xFF6
 31933                           tablat	equ	0xFF5
 31934                           prodh	equ	0xFF4
 31935                           prodl	equ	0xFF3
 31936                           intcon	equ	0xFF2
 31937                           intcon2	equ	0xFF1
 31938                           intcon3	equ	0xFF0
 31939                           indf0	equ	0xFEF
 31940                           postinc0	equ	0xFEE
 31941                           plusw0	equ	0xFEB
 31942                           fsr0h	equ	0xFEA
 31943                           fsr0l	equ	0xFE9
 31944                           wreg	equ	0xFE8
 31945                           indf1	equ	0xFE7
 31946                           postinc1	equ	0xFE6
 31947                           postdec1	equ	0xFE5
 31948                           plusw1	equ	0xFE3
 31949                           fsr1h	equ	0xFE2
 31950                           fsr1l	equ	0xFE1
 31951                           indf2	equ	0xFDF
 31952                           postinc2	equ	0xFDE
 31953                           postdec2	equ	0xFDD
 31954                           plusw2	equ	0xFDB
 31955                           fsr2h	equ	0xFDA
 31956                           fsr2l	equ	0xFD9
 31957                           status	equ	0xFD8
 31958                           
 31959 ;; *************** function _EnableReceiver *****************
 31960 ;; Defined at:
 31961 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31962 ;; Parameters:    Size  Location     Type
 31963 ;;		None
 31964 ;; Auto vars:     Size  Location     Type
 31965 ;;		None
 31966 ;; Return value:  Size  Location     Type
 31967 ;;                  1    wreg      void 
 31968 ;; Registers used:
 31969 ;;		status,2, status,0
 31970 ;; Tracked objects:
 31971 ;;		On entry : 0/0
 31972 ;;		On exit  : 0/0
 31973 ;;		Unchanged: 0/0
 31974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31979 ;;Total ram usage:        0 bytes
 31980 ;; Hardware stack levels used:    1
 31981 ;; Hardware stack levels required when called:   11
 31982 ;; This function calls:
 31983 ;;		Nothing
 31984 ;; This function is called by:
 31985 ;;		_I2c_ReadData
 31986 ;; This function uses a non-reentrant model
 31987 ;;
 31988                           
 31989                           	psect	text152
 31990  006014                     __ptext152:
 31991                           	opt stack 0
 31992  006014                     _EnableReceiver:
 31993                           	opt stack 14
 31994                           
 31995                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 31996                           
 31997                           ; BSR set to: 0
 31998                           ;incstack = 0
 31999  006014  8671               	bsf	3953,3,c	;volatile
 32000  006016  0012               	return		;funcret
 32001  006018                     __end_of_EnableReceiver:
 32002                           	opt stack 0
 32003                           tosu	equ	0xFFF
 32004                           tosh	equ	0xFFE
 32005                           tosl	equ	0xFFD
 32006                           pclath	equ	0xFFA
 32007                           tblptru	equ	0xFF8
 32008                           tblptrh	equ	0xFF7
 32009                           tblptrl	equ	0xFF6
 32010                           tablat	equ	0xFF5
 32011                           prodh	equ	0xFF4
 32012                           prodl	equ	0xFF3
 32013                           intcon	equ	0xFF2
 32014                           intcon2	equ	0xFF1
 32015                           intcon3	equ	0xFF0
 32016                           indf0	equ	0xFEF
 32017                           postinc0	equ	0xFEE
 32018                           plusw0	equ	0xFEB
 32019                           fsr0h	equ	0xFEA
 32020                           fsr0l	equ	0xFE9
 32021                           wreg	equ	0xFE8
 32022                           indf1	equ	0xFE7
 32023                           postinc1	equ	0xFE6
 32024                           postdec1	equ	0xFE5
 32025                           plusw1	equ	0xFE3
 32026                           fsr1h	equ	0xFE2
 32027                           fsr1l	equ	0xFE1
 32028                           indf2	equ	0xFDF
 32029                           postinc2	equ	0xFDE
 32030                           postdec2	equ	0xFDD
 32031                           plusw2	equ	0xFDB
 32032                           fsr2h	equ	0xFDA
 32033                           fsr2l	equ	0xFD9
 32034                           status	equ	0xFD8
 32035                           
 32036 ;; *************** function _CheckTxStatus *****************
 32037 ;; Defined at:
 32038 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32039 ;; Parameters:    Size  Location     Type
 32040 ;;		None
 32041 ;; Auto vars:     Size  Location     Type
 32042 ;;		None
 32043 ;; Return value:  Size  Location     Type
 32044 ;;                  1    wreg      unsigned char 
 32045 ;; Registers used:
 32046 ;;		wreg, status,2, status,0
 32047 ;; Tracked objects:
 32048 ;;		On entry : 0/0
 32049 ;;		On exit  : 0/0
 32050 ;;		Unchanged: 0/0
 32051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32056 ;;Total ram usage:        0 bytes
 32057 ;; Hardware stack levels used:    1
 32058 ;; Hardware stack levels required when called:   11
 32059 ;; This function calls:
 32060 ;;		Nothing
 32061 ;; This function is called by:
 32062 ;;		_I2c_WriteData
 32063 ;;		_I2c_ReadData
 32064 ;; This function uses a non-reentrant model
 32065 ;;
 32066                           
 32067                           	psect	text153
 32068  005FE0                     __ptext153:
 32069                           	opt stack 0
 32070  005FE0                     _CheckTxStatus:
 32071                           	opt stack 14
 32072                           
 32073                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32074                           
 32075                           ;incstack = 0
 32076  005FE0  4073               	rrncf	3955,w,c	;volatile
 32077  005FE2  42E8               	rrncf	wreg,f,c
 32078  005FE4  0B3F               	andlw	63
 32079  005FE6  0B01               	andlw	1
 32080  005FE8  0012               	return	
 32081  005FEA                     __end_of_CheckTxStatus:
 32082                           	opt stack 0
 32083                           tosu	equ	0xFFF
 32084                           tosh	equ	0xFFE
 32085                           tosl	equ	0xFFD
 32086                           pclath	equ	0xFFA
 32087                           tblptru	equ	0xFF8
 32088                           tblptrh	equ	0xFF7
 32089                           tblptrl	equ	0xFF6
 32090                           tablat	equ	0xFF5
 32091                           prodh	equ	0xFF4
 32092                           prodl	equ	0xFF3
 32093                           intcon	equ	0xFF2
 32094                           intcon2	equ	0xFF1
 32095                           intcon3	equ	0xFF0
 32096                           indf0	equ	0xFEF
 32097                           postinc0	equ	0xFEE
 32098                           plusw0	equ	0xFEB
 32099                           fsr0h	equ	0xFEA
 32100                           fsr0l	equ	0xFE9
 32101                           wreg	equ	0xFE8
 32102                           indf1	equ	0xFE7
 32103                           postinc1	equ	0xFE6
 32104                           postdec1	equ	0xFE5
 32105                           plusw1	equ	0xFE3
 32106                           fsr1h	equ	0xFE2
 32107                           fsr1l	equ	0xFE1
 32108                           indf2	equ	0xFDF
 32109                           postinc2	equ	0xFDE
 32110                           postdec2	equ	0xFDD
 32111                           plusw2	equ	0xFDB
 32112                           fsr2h	equ	0xFDA
 32113                           fsr2l	equ	0xFD9
 32114                           status	equ	0xFD8
 32115                           
 32116 ;; *************** function _CheckAckStatus *****************
 32117 ;; Defined at:
 32118 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32119 ;; Parameters:    Size  Location     Type
 32120 ;;		None
 32121 ;; Auto vars:     Size  Location     Type
 32122 ;;		None
 32123 ;; Return value:  Size  Location     Type
 32124 ;;                  1    wreg      unsigned char 
 32125 ;; Registers used:
 32126 ;;		wreg, status,2, status,0
 32127 ;; Tracked objects:
 32128 ;;		On entry : 0/0
 32129 ;;		On exit  : 0/0
 32130 ;;		Unchanged: 0/0
 32131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32136 ;;Total ram usage:        0 bytes
 32137 ;; Hardware stack levels used:    1
 32138 ;; Hardware stack levels required when called:   11
 32139 ;; This function calls:
 32140 ;;		Nothing
 32141 ;; This function is called by:
 32142 ;;		_I2c_WriteData
 32143 ;;		_I2c_ReadData
 32144 ;; This function uses a non-reentrant model
 32145 ;;
 32146                           
 32147                           	psect	text154
 32148  005FEA                     __ptext154:
 32149                           	opt stack 0
 32150  005FEA                     _CheckAckStatus:
 32151                           	opt stack 14
 32152                           
 32153                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32154                           
 32155                           ;incstack = 0
 32156  005FEA  4471               	rlncf	3953,w,c	;volatile
 32157  005FEC  46E8               	rlncf	wreg,f,c
 32158  005FEE  0B03               	andlw	3
 32159  005FF0  0B01               	andlw	1
 32160  005FF2  0012               	return	
 32161  005FF4                     __end_of_CheckAckStatus:
 32162                           	opt stack 0
 32163                           tosu	equ	0xFFF
 32164                           tosh	equ	0xFFE
 32165                           tosl	equ	0xFFD
 32166                           pclath	equ	0xFFA
 32167                           tblptru	equ	0xFF8
 32168                           tblptrh	equ	0xFF7
 32169                           tblptrl	equ	0xFF6
 32170                           tablat	equ	0xFF5
 32171                           prodh	equ	0xFF4
 32172                           prodl	equ	0xFF3
 32173                           intcon	equ	0xFF2
 32174                           intcon2	equ	0xFF1
 32175                           intcon3	equ	0xFF0
 32176                           indf0	equ	0xFEF
 32177                           postinc0	equ	0xFEE
 32178                           plusw0	equ	0xFEB
 32179                           fsr0h	equ	0xFEA
 32180                           fsr0l	equ	0xFE9
 32181                           wreg	equ	0xFE8
 32182                           indf1	equ	0xFE7
 32183                           postinc1	equ	0xFE6
 32184                           postdec1	equ	0xFE5
 32185                           plusw1	equ	0xFE3
 32186                           fsr1h	equ	0xFE2
 32187                           fsr1l	equ	0xFE1
 32188                           indf2	equ	0xFDF
 32189                           postinc2	equ	0xFDE
 32190                           postdec2	equ	0xFDD
 32191                           plusw2	equ	0xFDB
 32192                           fsr2h	equ	0xFDA
 32193                           fsr2l	equ	0xFD9
 32194                           status	equ	0xFD8
 32195                           
 32196 ;; *************** function _LowPriorityIsr *****************
 32197 ;; Defined at:
 32198 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32199 ;; Parameters:    Size  Location     Type
 32200 ;;		None
 32201 ;; Auto vars:     Size  Location     Type
 32202 ;;		None
 32203 ;; Return value:  Size  Location     Type
 32204 ;;                  1    wreg      void 
 32205 ;; Registers used:
 32206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32207 ;; Tracked objects:
 32208 ;;		On entry : 0/0
 32209 ;;		On exit  : 0/0
 32210 ;;		Unchanged: 0/0
 32211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32214 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32215 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32216 ;;Total ram usage:       21 bytes
 32217 ;; Hardware stack levels used:    1
 32218 ;; Hardware stack levels required when called:   10
 32219 ;; This function calls:
 32220 ;;		_Tmr_Tmr2Isr
 32221 ;; This function is called by:
 32222 ;;		Interrupt level 1
 32223 ;; This function uses a non-reentrant model
 32224 ;;
 32225                           
 32226                           	psect	intcodelo
 32227  000018                     __pintcodelo:
 32228                           	opt stack 0
 32229  000018                     _LowPriorityIsr:
 32230                           	opt stack 8
 32231                           
 32232                           ;incstack = 0
 32233  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32234  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32235  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32236  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32237  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32238  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32239  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32240  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32241  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32242  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32243  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32244  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32245  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32246  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32247  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32248  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32249  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32250  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32251  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32252  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32253  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32254  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32255                           
 32256                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32257  00006E  B29E               	btfsc	3998,1,c	;volatile
 32258                           
 32259                           ;irq.c: 259: {
 32260                           ;irq.c: 261: Tmr_Tmr2Isr();
 32261  000070  EC43  F02E         	call	_Tmr_Tmr2Isr	;wreg free
 32262  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32263  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32264  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32265  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32266  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32267  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32268  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32269  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32270  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32271  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32272  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32273  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32274  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32275  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32276  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32277  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32278  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32279  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32280  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32281  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32282  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32283  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32284  0000CA  0010               	retfie	
 32285  0000CC                     __end_of_LowPriorityIsr:
 32286                           	opt stack 0
 32287                           tosu	equ	0xFFF
 32288                           tosh	equ	0xFFE
 32289                           tosl	equ	0xFFD
 32290                           pclatu	equ	0xFFB
 32291                           pclath	equ	0xFFA
 32292                           tblptru	equ	0xFF8
 32293                           tblptrh	equ	0xFF7
 32294                           tblptrl	equ	0xFF6
 32295                           tablat	equ	0xFF5
 32296                           prodh	equ	0xFF4
 32297                           prodl	equ	0xFF3
 32298                           intcon	equ	0xFF2
 32299                           intcon2	equ	0xFF1
 32300                           intcon3	equ	0xFF0
 32301                           indf0	equ	0xFEF
 32302                           postinc0	equ	0xFEE
 32303                           plusw0	equ	0xFEB
 32304                           fsr0h	equ	0xFEA
 32305                           fsr0l	equ	0xFE9
 32306                           wreg	equ	0xFE8
 32307                           indf1	equ	0xFE7
 32308                           postinc1	equ	0xFE6
 32309                           postdec1	equ	0xFE5
 32310                           plusw1	equ	0xFE3
 32311                           fsr1h	equ	0xFE2
 32312                           fsr1l	equ	0xFE1
 32313                           bsr	equ	0xFE0
 32314                           indf2	equ	0xFDF
 32315                           postinc2	equ	0xFDE
 32316                           postdec2	equ	0xFDD
 32317                           plusw2	equ	0xFDB
 32318                           fsr2h	equ	0xFDA
 32319                           fsr2l	equ	0xFD9
 32320                           status	equ	0xFD8
 32321                           
 32322 ;; *************** function _Tmr_Tmr2Isr *****************
 32323 ;; Defined at:
 32324 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32325 ;; Parameters:    Size  Location     Type
 32326 ;;		None
 32327 ;; Auto vars:     Size  Location     Type
 32328 ;;		None
 32329 ;; Return value:  Size  Location     Type
 32330 ;;                  1    wreg      void 
 32331 ;; Registers used:
 32332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32333 ;; Tracked objects:
 32334 ;;		On entry : 0/0
 32335 ;;		On exit  : 0/0
 32336 ;;		Unchanged: 0/0
 32337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32342 ;;Total ram usage:        0 bytes
 32343 ;; Hardware stack levels used:    1
 32344 ;; Hardware stack levels required when called:    9
 32345 ;; This function calls:
 32346 ;;		Absolute function
 32347 ;;		_Sch_SchmIntService
 32348 ;; This function is called by:
 32349 ;;		_LowPriorityIsr
 32350 ;; This function uses a non-reentrant model
 32351 ;;
 32352                           
 32353                           	psect	text156
 32354  005C86                     __ptext156:
 32355                           	opt stack 0
 32356  005C86                     _Tmr_Tmr2Isr:
 32357                           	opt stack 8
 32358                           
 32359                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 32360                           
 32361                           ;incstack = 0
 32362  005C86  929E               	bcf	3998,1,c	;volatile
 32363                           
 32364                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 32365  005C88  0102               	movlb	2	; () banked
 32366  005C8A  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 32367  005C8C  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32368  005C8E  B4D8               	btfsc	status,2,c
 32369  005C90  0012               	return	
 32370                           
 32371                           ; BSR set to: 2
 32372                           ;tmr_drv.c: 315: {
 32373                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 32374  005C92  D801               	call	i1u1356_28
 32375  005C94  0012               	return	
 32376  005C96                     i1u1356_28:
 32377  005C96  0005               	push	
 32378  005C98  6EFA               	movwf	pclath,c
 32379  005C9A  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 32380  005C9C  6EFD               	movwf	tosl,c
 32381  005C9E  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32382  005CA0  6EFE               	movwf	tosh,c
 32383  005CA2  50F8               	movf	tblptru,w,c
 32384  005CA4  6EFF               	movwf	tosu,c
 32385  005CA6  50FA               	movf	pclath,w,c
 32386  005CA8  0012               	return		;indir
 32387  005CAA                     __end_of_Tmr_Tmr2Isr:
 32388                           	opt stack 0
 32389                           tosu	equ	0xFFF
 32390                           tosh	equ	0xFFE
 32391                           tosl	equ	0xFFD
 32392                           pclatu	equ	0xFFB
 32393                           pclath	equ	0xFFA
 32394                           tblptru	equ	0xFF8
 32395                           tblptrh	equ	0xFF7
 32396                           tblptrl	equ	0xFF6
 32397                           tablat	equ	0xFF5
 32398                           prodh	equ	0xFF4
 32399                           prodl	equ	0xFF3
 32400                           intcon	equ	0xFF2
 32401                           intcon2	equ	0xFF1
 32402                           intcon3	equ	0xFF0
 32403                           indf0	equ	0xFEF
 32404                           postinc0	equ	0xFEE
 32405                           plusw0	equ	0xFEB
 32406                           fsr0h	equ	0xFEA
 32407                           fsr0l	equ	0xFE9
 32408                           wreg	equ	0xFE8
 32409                           indf1	equ	0xFE7
 32410                           postinc1	equ	0xFE6
 32411                           postdec1	equ	0xFE5
 32412                           plusw1	equ	0xFE3
 32413                           fsr1h	equ	0xFE2
 32414                           fsr1l	equ	0xFE1
 32415                           bsr	equ	0xFE0
 32416                           indf2	equ	0xFDF
 32417                           postinc2	equ	0xFDE
 32418                           postdec2	equ	0xFDD
 32419                           plusw2	equ	0xFDB
 32420                           fsr2h	equ	0xFDA
 32421                           fsr2l	equ	0xFD9
 32422                           status	equ	0xFD8
 32423                           
 32424 ;; *************** function _Sch_SchmIntService *****************
 32425 ;; Defined at:
 32426 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32427 ;; Parameters:    Size  Location     Type
 32428 ;;		None
 32429 ;; Auto vars:     Size  Location     Type
 32430 ;;		None
 32431 ;; Return value:  Size  Location     Type
 32432 ;;                  1    wreg      void 
 32433 ;; Registers used:
 32434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32435 ;; Tracked objects:
 32436 ;;		On entry : 0/0
 32437 ;;		On exit  : 0/0
 32438 ;;		Unchanged: 0/0
 32439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32444 ;;Total ram usage:        0 bytes
 32445 ;; Hardware stack levels used:    1
 32446 ;; Hardware stack levels required when called:    8
 32447 ;; This function calls:
 32448 ;;		_OsAlrm_ProcessOsAlarms
 32449 ;;		_UpdateOsCounters
 32450 ;;		_UpdateSchFlag
 32451 ;; This function is called by:
 32452 ;;		_SystemInit
 32453 ;;		_Tmr_Tmr2Isr
 32454 ;; This function uses a non-reentrant model
 32455 ;;
 32456                           
 32457                           	psect	text157
 32458  005F9A                     __ptext157:
 32459                           	opt stack 0
 32460  005F9A                     _Sch_SchmIntService:
 32461                           	opt stack 8
 32462                           
 32463                           ;os_sched.c: 217: UpdateSchFlag();
 32464                           
 32465                           ;incstack = 0
 32466  005F9A  ECF9  F02E         	call	_UpdateSchFlag	;wreg free
 32467                           
 32468                           ;os_sched.c: 219: UpdateOsCounters();
 32469  005F9E  ECBD  F02F         	call	_UpdateOsCounters	;wreg free
 32470                           
 32471                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 32472  005FA2  ECAA  F010         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 32473  005FA6  0012               	return		;funcret
 32474  005FA8                     __end_of_Sch_SchmIntService:
 32475                           	opt stack 0
 32476                           tosu	equ	0xFFF
 32477                           tosh	equ	0xFFE
 32478                           tosl	equ	0xFFD
 32479                           pclatu	equ	0xFFB
 32480                           pclath	equ	0xFFA
 32481                           tblptru	equ	0xFF8
 32482                           tblptrh	equ	0xFF7
 32483                           tblptrl	equ	0xFF6
 32484                           tablat	equ	0xFF5
 32485                           prodh	equ	0xFF4
 32486                           prodl	equ	0xFF3
 32487                           intcon	equ	0xFF2
 32488                           intcon2	equ	0xFF1
 32489                           intcon3	equ	0xFF0
 32490                           indf0	equ	0xFEF
 32491                           postinc0	equ	0xFEE
 32492                           plusw0	equ	0xFEB
 32493                           fsr0h	equ	0xFEA
 32494                           fsr0l	equ	0xFE9
 32495                           wreg	equ	0xFE8
 32496                           indf1	equ	0xFE7
 32497                           postinc1	equ	0xFE6
 32498                           postdec1	equ	0xFE5
 32499                           plusw1	equ	0xFE3
 32500                           fsr1h	equ	0xFE2
 32501                           fsr1l	equ	0xFE1
 32502                           bsr	equ	0xFE0
 32503                           indf2	equ	0xFDF
 32504                           postinc2	equ	0xFDE
 32505                           postdec2	equ	0xFDD
 32506                           plusw2	equ	0xFDB
 32507                           fsr2h	equ	0xFDA
 32508                           fsr2l	equ	0xFD9
 32509                           status	equ	0xFD8
 32510                           
 32511 ;; *************** function _UpdateSchFlag *****************
 32512 ;; Defined at:
 32513 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32514 ;; Parameters:    Size  Location     Type
 32515 ;;		None
 32516 ;; Auto vars:     Size  Location     Type
 32517 ;;		None
 32518 ;; Return value:  Size  Location     Type
 32519 ;;                  1    wreg      void 
 32520 ;; Registers used:
 32521 ;;		wreg, status,2, status,0
 32522 ;; Tracked objects:
 32523 ;;		On entry : 0/0
 32524 ;;		On exit  : 0/0
 32525 ;;		Unchanged: 0/0
 32526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;Total ram usage:        0 bytes
 32532 ;; Hardware stack levels used:    1
 32533 ;; Hardware stack levels required when called:    4
 32534 ;; This function calls:
 32535 ;;		Nothing
 32536 ;; This function is called by:
 32537 ;;		_Sch_SchmIntService
 32538 ;; This function uses a non-reentrant model
 32539 ;;
 32540                           
 32541                           	psect	text158
 32542  005DF2                     __ptext158:
 32543                           	opt stack 0
 32544  005DF2                     _UpdateSchFlag:
 32545                           	opt stack 11
 32546                           
 32547                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 32548                           ;os_sched.c: 138: InterruptCounter++;
 32549                           
 32550                           ;incstack = 0
 32551  005DF2  0102               	movlb	2	; () banked
 32552  005DF4  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 32553  005DF6  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 32554                           
 32555                           ; BSR set to: 2
 32556                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 32557  005DF8  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 32558  005DFA  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 32559  005DFC  B4D8               	btfsc	status,2,c
 32560  005DFE  0012               	return	
 32561                           
 32562                           ; BSR set to: 2
 32563                           ;os_sched.c: 141: {
 32564                           ;os_sched.c: 143: InterruptCounter = 0;
 32565  005E00  0E00               	movlw	0
 32566  005E02  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 32567  005E04  0E00               	movlw	0
 32568  005E06  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 32569                           
 32570                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 32571  005E08  0E00               	movlw	0
 32572  005E0A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 32573  005E0C  0012               	return	
 32574  005E0E                     __end_of_UpdateSchFlag:
 32575                           	opt stack 0
 32576                           tosu	equ	0xFFF
 32577                           tosh	equ	0xFFE
 32578                           tosl	equ	0xFFD
 32579                           pclatu	equ	0xFFB
 32580                           pclath	equ	0xFFA
 32581                           tblptru	equ	0xFF8
 32582                           tblptrh	equ	0xFF7
 32583                           tblptrl	equ	0xFF6
 32584                           tablat	equ	0xFF5
 32585                           prodh	equ	0xFF4
 32586                           prodl	equ	0xFF3
 32587                           intcon	equ	0xFF2
 32588                           intcon2	equ	0xFF1
 32589                           intcon3	equ	0xFF0
 32590                           indf0	equ	0xFEF
 32591                           postinc0	equ	0xFEE
 32592                           plusw0	equ	0xFEB
 32593                           fsr0h	equ	0xFEA
 32594                           fsr0l	equ	0xFE9
 32595                           wreg	equ	0xFE8
 32596                           indf1	equ	0xFE7
 32597                           postinc1	equ	0xFE6
 32598                           postdec1	equ	0xFE5
 32599                           plusw1	equ	0xFE3
 32600                           fsr1h	equ	0xFE2
 32601                           fsr1l	equ	0xFE1
 32602                           bsr	equ	0xFE0
 32603                           indf2	equ	0xFDF
 32604                           postinc2	equ	0xFDE
 32605                           postdec2	equ	0xFDD
 32606                           plusw2	equ	0xFDB
 32607                           fsr2h	equ	0xFDA
 32608                           fsr2l	equ	0xFD9
 32609                           status	equ	0xFD8
 32610                           
 32611 ;; *************** function _UpdateOsCounters *****************
 32612 ;; Defined at:
 32613 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32614 ;; Parameters:    Size  Location     Type
 32615 ;;		None
 32616 ;; Auto vars:     Size  Location     Type
 32617 ;;		None
 32618 ;; Return value:  Size  Location     Type
 32619 ;;                  1    wreg      void 
 32620 ;; Registers used:
 32621 ;;		wreg, status,2, status,0
 32622 ;; Tracked objects:
 32623 ;;		On entry : 0/0
 32624 ;;		On exit  : 0/0
 32625 ;;		Unchanged: 0/0
 32626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32631 ;;Total ram usage:        0 bytes
 32632 ;; Hardware stack levels used:    1
 32633 ;; Hardware stack levels required when called:    4
 32634 ;; This function calls:
 32635 ;;		Nothing
 32636 ;; This function is called by:
 32637 ;;		_Sch_SchmIntService
 32638 ;; This function uses a non-reentrant model
 32639 ;;
 32640                           
 32641                           	psect	text159
 32642  005F7A                     __ptext159:
 32643                           	opt stack 0
 32644  005F7A                     _UpdateOsCounters:
 32645                           	opt stack 11
 32646                           
 32647                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 32648                           
 32649                           ; BSR set to: 2
 32650                           ;incstack = 0
 32651  005F7A  0E01               	movlw	1
 32652  005F7C  0103               	movlb	3	; () banked
 32653  005F7E  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 32654  005F80  0E00               	movlw	0
 32655  005F82  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 32656  005F84  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 32657  005F86  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 32658                           
 32659                           ; BSR set to: 3
 32660  005F88  0012               	return		;funcret
 32661  005F8A                     __end_of_UpdateOsCounters:
 32662                           	opt stack 0
 32663                           tosu	equ	0xFFF
 32664                           tosh	equ	0xFFE
 32665                           tosl	equ	0xFFD
 32666                           pclatu	equ	0xFFB
 32667                           pclath	equ	0xFFA
 32668                           tblptru	equ	0xFF8
 32669                           tblptrh	equ	0xFF7
 32670                           tblptrl	equ	0xFF6
 32671                           tablat	equ	0xFF5
 32672                           prodh	equ	0xFF4
 32673                           prodl	equ	0xFF3
 32674                           intcon	equ	0xFF2
 32675                           intcon2	equ	0xFF1
 32676                           intcon3	equ	0xFF0
 32677                           indf0	equ	0xFEF
 32678                           postinc0	equ	0xFEE
 32679                           plusw0	equ	0xFEB
 32680                           fsr0h	equ	0xFEA
 32681                           fsr0l	equ	0xFE9
 32682                           wreg	equ	0xFE8
 32683                           indf1	equ	0xFE7
 32684                           postinc1	equ	0xFE6
 32685                           postdec1	equ	0xFE5
 32686                           plusw1	equ	0xFE3
 32687                           fsr1h	equ	0xFE2
 32688                           fsr1l	equ	0xFE1
 32689                           bsr	equ	0xFE0
 32690                           indf2	equ	0xFDF
 32691                           postinc2	equ	0xFDE
 32692                           postdec2	equ	0xFDD
 32693                           plusw2	equ	0xFDB
 32694                           fsr2h	equ	0xFDA
 32695                           fsr2l	equ	0xFD9
 32696                           status	equ	0xFD8
 32697                           
 32698 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 32699 ;; Defined at:
 32700 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;		None
 32703 ;; Auto vars:     Size  Location     Type
 32704 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 32705 ;; Return value:  Size  Location     Type
 32706 ;;                  1    wreg      void 
 32707 ;; Registers used:
 32708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32709 ;; Tracked objects:
 32710 ;;		On entry : 0/0
 32711 ;;		On exit  : 0/0
 32712 ;;		Unchanged: 0/0
 32713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32716 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32717 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32718 ;;Total ram usage:       10 bytes
 32719 ;; Hardware stack levels used:    1
 32720 ;; Hardware stack levels required when called:    7
 32721 ;; This function calls:
 32722 ;;		_I2cDummyTx
 32723 ;;		_OsAlrm_ClearOsAlarm
 32724 ;;		i1___wmul
 32725 ;; This function is called by:
 32726 ;;		_Sch_SchmIntService
 32727 ;; This function uses a non-reentrant model
 32728 ;;
 32729                           
 32730                           	psect	text160
 32731  002154                     __ptext160:
 32732                           	opt stack 0
 32733  002154                     _OsAlrm_ProcessOsAlarms:
 32734                           	opt stack 8
 32735                           
 32736                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 32737                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 32738                           
 32739                           ; BSR set to: 3
 32740                           ;incstack = 0
 32741  002154  0E00               	movlw	0
 32742  002156  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 32743  002158  0E00               	movlw	0
 32744  00215A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 32745  00215C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32746  00215E  E105               	bnz	i1u1334_20
 32747  002160  0E14               	movlw	20
 32748  002162  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32749  002164  B0D8               	btfsc	status,0,c
 32750  002166  0012               	return	
 32751  002168  D001               	goto	i1l742
 32752  00216A                     i1u1334_20:
 32753  00216A  0012               	return	
 32754  00216C                     i1l742:
 32755                           
 32756                           ;os_alarms.c: 121: {
 32757                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 32758  00216C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32759  002170  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32760  002174  0E00               	movlw	0
 32761  002176  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32762  002178  0E0B               	movlw	11
 32763  00217A  6E1B               	movwf	i1___wmul@multiplicand,c
 32764  00217C  ECFA  F02D         	call	i1___wmul	;wreg free
 32765  002180  0E00               	movlw	low _OsAlarms
 32766  002182  2419               	addwf	?i1___wmul,w,c
 32767  002184  6ED9               	movwf	fsr2l,c
 32768  002186  0E06               	movlw	high _OsAlarms
 32769  002188  201A               	addwfc	?i1___wmul+1,w,c
 32770  00218A  6EDA               	movwf	fsr2h,c
 32771  00218C  04DE               	decf	postinc2,w,c
 32772  00218E  A4D8               	btfss	status,2,c
 32773  002190  D086               	goto	i1u1338_29
 32774                           
 32775                           ;os_alarms.c: 124: {
 32776                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 32777  002192  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32778  002196  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32779  00219A  0E00               	movlw	0
 32780  00219C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32781  00219E  0E0B               	movlw	11
 32782  0021A0  6E1B               	movwf	i1___wmul@multiplicand,c
 32783  0021A2  ECFA  F02D         	call	i1___wmul	;wreg free
 32784  0021A6  0E01               	movlw	1
 32785  0021A8  2619               	addwf	?i1___wmul,f,c
 32786  0021AA  0E00               	movlw	0
 32787  0021AC  221A               	addwfc	?i1___wmul+1,f,c
 32788  0021AE  0E00               	movlw	low _OsAlarms
 32789  0021B0  2419               	addwf	?i1___wmul,w,c
 32790  0021B2  6ED9               	movwf	fsr2l,c
 32791  0021B4  0E06               	movlw	high _OsAlarms
 32792  0021B6  201A               	addwfc	?i1___wmul+1,w,c
 32793  0021B8  6EDA               	movwf	fsr2h,c
 32794  0021BA  2ADE               	incf	postinc2,f,c
 32795  0021BC  0E00               	movlw	0
 32796  0021BE  22DE               	addwfc	postinc2,f,c
 32797  0021C0  22DE               	addwfc	postinc2,f,c
 32798  0021C2  22DE               	addwfc	postinc2,f,c
 32799                           
 32800                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 32801  0021C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32802  0021C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32803  0021CC  0E00               	movlw	0
 32804  0021CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32805  0021D0  0E0B               	movlw	11
 32806  0021D2  6E1B               	movwf	i1___wmul@multiplicand,c
 32807  0021D4  ECFA  F02D         	call	i1___wmul	;wreg free
 32808  0021D8  0E05               	movlw	5
 32809  0021DA  2619               	addwf	?i1___wmul,f,c
 32810  0021DC  0E00               	movlw	0
 32811  0021DE  221A               	addwfc	?i1___wmul+1,f,c
 32812  0021E0  0E00               	movlw	low _OsAlarms
 32813  0021E2  2419               	addwf	?i1___wmul,w,c
 32814  0021E4  6ED9               	movwf	fsr2l,c
 32815  0021E6  0E06               	movlw	high _OsAlarms
 32816  0021E8  201A               	addwfc	?i1___wmul+1,w,c
 32817  0021EA  6EDA               	movwf	fsr2h,c
 32818  0021EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32819  0021F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32820  0021F4  0E00               	movlw	0
 32821  0021F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32822  0021F8  0E0B               	movlw	11
 32823  0021FA  6E1B               	movwf	i1___wmul@multiplicand,c
 32824  0021FC  ECFA  F02D         	call	i1___wmul	;wreg free
 32825  002200  0E01               	movlw	1
 32826  002202  2619               	addwf	?i1___wmul,f,c
 32827  002204  0E00               	movlw	0
 32828  002206  221A               	addwfc	?i1___wmul+1,f,c
 32829  002208  0E00               	movlw	low _OsAlarms
 32830  00220A  2419               	addwf	?i1___wmul,w,c
 32831  00220C  6EE1               	movwf	fsr1l,c
 32832  00220E  0E06               	movlw	high _OsAlarms
 32833  002210  201A               	addwfc	?i1___wmul+1,w,c
 32834  002212  6EE2               	movwf	fsr1h,c
 32835  002214  50DE               	movf	postinc2,w,c
 32836  002216  5CE6               	subwf	postinc1,w,c
 32837  002218  50DE               	movf	postinc2,w,c
 32838  00221A  58E6               	subwfb	postinc1,w,c
 32839  00221C  50DE               	movf	postinc2,w,c
 32840  00221E  58E6               	subwfb	postinc1,w,c
 32841  002220  50DE               	movf	postinc2,w,c
 32842  002222  58E6               	subwfb	postinc1,w,c
 32843  002224  A0D8               	btfss	status,0,c
 32844  002226  D03B               	goto	i1u1338_29
 32845                           
 32846                           ;os_alarms.c: 129: {
 32847                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 32848  002228  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32849  00222A  EC41  F028         	call	_OsAlrm_ClearOsAlarm
 32850                           
 32851                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 32852  00222E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32853  002232  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32854  002236  0E00               	movlw	0
 32855  002238  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32856  00223A  0E0B               	movlw	11
 32857  00223C  6E1B               	movwf	i1___wmul@multiplicand,c
 32858  00223E  ECFA  F02D         	call	i1___wmul	;wreg free
 32859  002242  0E09               	movlw	9
 32860  002244  2619               	addwf	?i1___wmul,f,c
 32861  002246  0E00               	movlw	0
 32862  002248  221A               	addwfc	?i1___wmul+1,f,c
 32863  00224A  0E00               	movlw	low _OsAlarms
 32864  00224C  2419               	addwf	?i1___wmul,w,c
 32865  00224E  6ED9               	movwf	fsr2l,c
 32866  002250  0E06               	movlw	high _OsAlarms
 32867  002252  201A               	addwfc	?i1___wmul+1,w,c
 32868  002254  6EDA               	movwf	fsr2h,c
 32869  002256  50DE               	movf	postinc2,w,c
 32870  002258  10DE               	iorwf	postinc2,w,c
 32871  00225A  B4D8               	btfsc	status,2,c
 32872  00225C  D020               	goto	i1u1338_29
 32873                           
 32874                           ;os_alarms.c: 134: {
 32875                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 32876  00225E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32877  002262  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32878  002266  0E00               	movlw	0
 32879  002268  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32880  00226A  0E0B               	movlw	11
 32881  00226C  6E1B               	movwf	i1___wmul@multiplicand,c
 32882  00226E  ECFA  F02D         	call	i1___wmul	;wreg free
 32883  002272  0E09               	movlw	9
 32884  002274  2619               	addwf	?i1___wmul,f,c
 32885  002276  0E00               	movlw	0
 32886  002278  221A               	addwfc	?i1___wmul+1,f,c
 32887  00227A  0E00               	movlw	low _OsAlarms
 32888  00227C  2419               	addwf	?i1___wmul,w,c
 32889  00227E  6ED9               	movwf	fsr2l,c
 32890  002280  0E06               	movlw	high _OsAlarms
 32891  002282  201A               	addwfc	?i1___wmul+1,w,c
 32892  002284  6EDA               	movwf	fsr2h,c
 32893  002286  D801               	call	i1u1338_28
 32894  002288  D00A               	goto	i1u1338_29
 32895  00228A                     i1u1338_28:
 32896  00228A  0005               	push	
 32897  00228C  6EFA               	movwf	pclath,c
 32898  00228E  50DE               	movf	postinc2,w,c
 32899  002290  6EFD               	movwf	tosl,c
 32900  002292  50DE               	movf	postinc2,w,c
 32901  002294  6EFE               	movwf	tosh,c
 32902  002296  50F8               	movf	tblptru,w,c
 32903  002298  6EFF               	movwf	tosu,c
 32904  00229A  50FA               	movf	pclath,w,c
 32905  00229C  0012               	return		;indir
 32906  00229E                     i1u1338_29:
 32907  00229E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 32908  0022A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 32909  0022A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32910  0022A4  E101               	bnz	i1l747
 32911  0022A6  D75C               	goto	L67
 32912  0022A8                     i1l747:
 32913  0022A8  0012               	return		;funcret
 32914  0022AA                     __end_of_OsAlrm_ProcessOsAlarms:
 32915                           	opt stack 0
 32916                           tosu	equ	0xFFF
 32917                           tosh	equ	0xFFE
 32918                           tosl	equ	0xFFD
 32919                           pclatu	equ	0xFFB
 32920                           pclath	equ	0xFFA
 32921                           tblptru	equ	0xFF8
 32922                           tblptrh	equ	0xFF7
 32923                           tblptrl	equ	0xFF6
 32924                           tablat	equ	0xFF5
 32925                           prodh	equ	0xFF4
 32926                           prodl	equ	0xFF3
 32927                           intcon	equ	0xFF2
 32928                           intcon2	equ	0xFF1
 32929                           intcon3	equ	0xFF0
 32930                           indf0	equ	0xFEF
 32931                           postinc0	equ	0xFEE
 32932                           plusw0	equ	0xFEB
 32933                           fsr0h	equ	0xFEA
 32934                           fsr0l	equ	0xFE9
 32935                           wreg	equ	0xFE8
 32936                           indf1	equ	0xFE7
 32937                           postinc1	equ	0xFE6
 32938                           postdec1	equ	0xFE5
 32939                           plusw1	equ	0xFE3
 32940                           fsr1h	equ	0xFE2
 32941                           fsr1l	equ	0xFE1
 32942                           bsr	equ	0xFE0
 32943                           indf2	equ	0xFDF
 32944                           postinc2	equ	0xFDE
 32945                           postdec2	equ	0xFDD
 32946                           plusw2	equ	0xFDB
 32947                           fsr2h	equ	0xFDA
 32948                           fsr2l	equ	0xFD9
 32949                           status	equ	0xFD8
 32950                           
 32951 ;; *************** function i1___wmul *****************
 32952 ;; Defined at:
 32953 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32954 ;; Parameters:    Size  Location     Type
 32955 ;;  multiplier      2   24[COMRAM] unsigned int 
 32956 ;;  multiplicand    2   26[COMRAM] unsigned int 
 32957 ;; Auto vars:     Size  Location     Type
 32958 ;;  __wmul          2   28[COMRAM] unsigned int 
 32959 ;; Return value:  Size  Location     Type
 32960 ;;                  2   24[COMRAM] unsigned int 
 32961 ;; Registers used:
 32962 ;;		wreg, status,2, status,0, prodl, prodh
 32963 ;; Tracked objects:
 32964 ;;		On entry : 0/0
 32965 ;;		On exit  : 0/0
 32966 ;;		Unchanged: 0/0
 32967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32972 ;;Total ram usage:        6 bytes
 32973 ;; Hardware stack levels used:    1
 32974 ;; Hardware stack levels required when called:    4
 32975 ;; This function calls:
 32976 ;;		Nothing
 32977 ;; This function is called by:
 32978 ;;		_OsAlrm_ProcessOsAlarms
 32979 ;; This function uses a non-reentrant model
 32980 ;;
 32981                           
 32982                           	psect	text161
 32983  005BF4                     __ptext161:
 32984                           	opt stack 0
 32985  005BF4                     i1___wmul:
 32986                           	opt stack 10
 32987                           
 32988                           ;incstack = 0
 32989  005BF4  5019               	movf	i1___wmul@multiplier,w,c
 32990  005BF6  021B               	mulwf	i1___wmul@multiplicand,c
 32991  005BF8  CFF3 F01D          	movff	prodl,i1___wmul@product
 32992  005BFC  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 32993  005C00  5019               	movf	i1___wmul@multiplier,w,c
 32994  005C02  021C               	mulwf	i1___wmul@multiplicand+1,c
 32995  005C04  50F3               	movf	prodl,w,c
 32996  005C06  261E               	addwf	i1___wmul@product+1,f,c
 32997  005C08  501A               	movf	i1___wmul@multiplier+1,w,c
 32998  005C0A  021B               	mulwf	i1___wmul@multiplicand,c
 32999  005C0C  50F3               	movf	prodl,w,c
 33000  005C0E  261E               	addwf	i1___wmul@product+1,f,c
 33001  005C10  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33002  005C14  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33003  005C18  0012               	return	
 33004  005C1A                     __end_ofi1___wmul:
 33005                           	opt stack 0
 33006                           tosu	equ	0xFFF
 33007                           tosh	equ	0xFFE
 33008                           tosl	equ	0xFFD
 33009                           pclatu	equ	0xFFB
 33010                           pclath	equ	0xFFA
 33011                           tblptru	equ	0xFF8
 33012                           tblptrh	equ	0xFF7
 33013                           tblptrl	equ	0xFF6
 33014                           tablat	equ	0xFF5
 33015                           prodh	equ	0xFF4
 33016                           prodl	equ	0xFF3
 33017                           intcon	equ	0xFF2
 33018                           intcon2	equ	0xFF1
 33019                           intcon3	equ	0xFF0
 33020                           indf0	equ	0xFEF
 33021                           postinc0	equ	0xFEE
 33022                           plusw0	equ	0xFEB
 33023                           fsr0h	equ	0xFEA
 33024                           fsr0l	equ	0xFE9
 33025                           wreg	equ	0xFE8
 33026                           indf1	equ	0xFE7
 33027                           postinc1	equ	0xFE6
 33028                           postdec1	equ	0xFE5
 33029                           plusw1	equ	0xFE3
 33030                           fsr1h	equ	0xFE2
 33031                           fsr1l	equ	0xFE1
 33032                           bsr	equ	0xFE0
 33033                           indf2	equ	0xFDF
 33034                           postinc2	equ	0xFDE
 33035                           postdec2	equ	0xFDD
 33036                           plusw2	equ	0xFDB
 33037                           fsr2h	equ	0xFDA
 33038                           fsr2l	equ	0xFD9
 33039                           status	equ	0xFD8
 33040                           
 33041 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33042 ;; Defined at:
 33043 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33044 ;; Parameters:    Size  Location     Type
 33045 ;;  OsAlarmId       1    wreg     unsigned char 
 33046 ;; Auto vars:     Size  Location     Type
 33047 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33048 ;; Return value:  Size  Location     Type
 33049 ;;                  1    wreg      void 
 33050 ;; Registers used:
 33051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33052 ;; Tracked objects:
 33053 ;;		On entry : 0/0
 33054 ;;		On exit  : 0/0
 33055 ;;		Unchanged: 0/0
 33056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;Total ram usage:        1 bytes
 33062 ;; Hardware stack levels used:    1
 33063 ;; Hardware stack levels required when called:    4
 33064 ;; This function calls:
 33065 ;;		Nothing
 33066 ;; This function is called by:
 33067 ;;		_OsAlrm_ProcessOsAlarms
 33068 ;; This function uses a non-reentrant model
 33069 ;;
 33070                           
 33071                           	psect	text162
 33072  005082                     __ptext162:
 33073                           	opt stack 0
 33074  005082                     _OsAlrm_ClearOsAlarm:
 33075                           	opt stack 10
 33076                           
 33077                           ;incstack = 0
 33078                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33079  005082  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33080                           
 33081                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33082  005084  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33083  005086  0D0B               	mullw	11
 33084  005088  0E00               	movlw	low _OsAlarms
 33085  00508A  24F3               	addwf	prodl,w,c
 33086  00508C  6ED9               	movwf	fsr2l,c
 33087  00508E  0E06               	movlw	high _OsAlarms
 33088  005090  20F4               	addwfc	prodh,w,c
 33089  005092  6EDA               	movwf	fsr2h,c
 33090  005094  0E00               	movlw	0
 33091  005096  6EDF               	movwf	indf2,c
 33092                           
 33093                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33094  005098  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33095  00509A  0D0B               	mullw	11
 33096  00509C  0E01               	movlw	1
 33097  00509E  26F3               	addwf	prodl,f,c
 33098  0050A0  0E00               	movlw	0
 33099  0050A2  22F4               	addwfc	prodh,f,c
 33100  0050A4  0E00               	movlw	low _OsAlarms
 33101  0050A6  24F3               	addwf	prodl,w,c
 33102  0050A8  6ED9               	movwf	fsr2l,c
 33103  0050AA  0E06               	movlw	high _OsAlarms
 33104  0050AC  20F4               	addwfc	prodh,w,c
 33105  0050AE  6EDA               	movwf	fsr2h,c
 33106  0050B0  6ADE               	clrf	postinc2,c
 33107  0050B2  6ADE               	clrf	postinc2,c
 33108  0050B4  6ADE               	clrf	postinc2,c
 33109  0050B6  6ADD               	clrf	postdec2,c
 33110                           
 33111                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33112  0050B8  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33113  0050BA  0D0B               	mullw	11
 33114  0050BC  0E05               	movlw	5
 33115  0050BE  26F3               	addwf	prodl,f,c
 33116  0050C0  0E00               	movlw	0
 33117  0050C2  22F4               	addwfc	prodh,f,c
 33118  0050C4  0E00               	movlw	low _OsAlarms
 33119  0050C6  24F3               	addwf	prodl,w,c
 33120  0050C8  6ED9               	movwf	fsr2l,c
 33121  0050CA  0E06               	movlw	high _OsAlarms
 33122  0050CC  20F4               	addwfc	prodh,w,c
 33123  0050CE  6EDA               	movwf	fsr2h,c
 33124  0050D0  6ADE               	clrf	postinc2,c
 33125  0050D2  6ADE               	clrf	postinc2,c
 33126  0050D4  6ADE               	clrf	postinc2,c
 33127  0050D6  6ADD               	clrf	postdec2,c
 33128  0050D8  0012               	return		;funcret
 33129  0050DA                     __end_of_OsAlrm_ClearOsAlarm:
 33130                           	opt stack 0
 33131                           tosu	equ	0xFFF
 33132                           tosh	equ	0xFFE
 33133                           tosl	equ	0xFFD
 33134                           pclatu	equ	0xFFB
 33135                           pclath	equ	0xFFA
 33136                           tblptru	equ	0xFF8
 33137                           tblptrh	equ	0xFF7
 33138                           tblptrl	equ	0xFF6
 33139                           tablat	equ	0xFF5
 33140                           prodh	equ	0xFF4
 33141                           prodl	equ	0xFF3
 33142                           intcon	equ	0xFF2
 33143                           intcon2	equ	0xFF1
 33144                           intcon3	equ	0xFF0
 33145                           indf0	equ	0xFEF
 33146                           postinc0	equ	0xFEE
 33147                           plusw0	equ	0xFEB
 33148                           fsr0h	equ	0xFEA
 33149                           fsr0l	equ	0xFE9
 33150                           wreg	equ	0xFE8
 33151                           indf1	equ	0xFE7
 33152                           postinc1	equ	0xFE6
 33153                           postdec1	equ	0xFE5
 33154                           plusw1	equ	0xFE3
 33155                           fsr1h	equ	0xFE2
 33156                           fsr1l	equ	0xFE1
 33157                           bsr	equ	0xFE0
 33158                           indf2	equ	0xFDF
 33159                           postinc2	equ	0xFDE
 33160                           postdec2	equ	0xFDD
 33161                           plusw2	equ	0xFDB
 33162                           fsr2h	equ	0xFDA
 33163                           fsr2l	equ	0xFD9
 33164                           status	equ	0xFD8
 33165                           
 33166 ;; *************** function _I2cDummyTx *****************
 33167 ;; Defined at:
 33168 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33169 ;; Parameters:    Size  Location     Type
 33170 ;;		None
 33171 ;; Auto vars:     Size  Location     Type
 33172 ;;		None
 33173 ;; Return value:  Size  Location     Type
 33174 ;;                  1    wreg      void 
 33175 ;; Registers used:
 33176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33177 ;; Tracked objects:
 33178 ;;		On entry : 0/0
 33179 ;;		On exit  : 0/0
 33180 ;;		Unchanged: 0/0
 33181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33186 ;;Total ram usage:        0 bytes
 33187 ;; Hardware stack levels used:    1
 33188 ;; Hardware stack levels required when called:    6
 33189 ;; This function calls:
 33190 ;;		i1_I2cSlv_SendI2cMsg
 33191 ;; This function is called by:
 33192 ;;		_I2cSlv_MainTask
 33193 ;;		_OsAlrm_ProcessOsAlarms
 33194 ;; This function uses a non-reentrant model
 33195 ;;
 33196                           
 33197                           	psect	text163
 33198  005E0E                     __ptext163:
 33199                           	opt stack 0
 33200  005E0E                     _I2cDummyTx:
 33201                           	opt stack 8
 33202                           
 33203                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33204                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33205                           
 33206                           ;incstack = 0
 33207  005E0E  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 33208  005E10  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33209  005E12  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33210  005E14  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33211  005E16  0E00               	movlw	0
 33212  005E18  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33213  005E1A  0E01               	movlw	1
 33214  005E1C  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33215  005E1E  EC94  F02C         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33216                           
 33217                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33218  005E22  0E01               	movlw	1
 33219  005E24  0101               	movlb	1	; () banked
 33220  005E26  6FEB               	movwf	_I2cBusStatus& (0+255),b
 33221                           
 33222                           ; BSR set to: 1
 33223  005E28  0012               	return		;funcret
 33224  005E2A                     __end_of_I2cDummyTx:
 33225                           	opt stack 0
 33226                           tosu	equ	0xFFF
 33227                           tosh	equ	0xFFE
 33228                           tosl	equ	0xFFD
 33229                           pclatu	equ	0xFFB
 33230                           pclath	equ	0xFFA
 33231                           tblptru	equ	0xFF8
 33232                           tblptrh	equ	0xFF7
 33233                           tblptrl	equ	0xFF6
 33234                           tablat	equ	0xFF5
 33235                           prodh	equ	0xFF4
 33236                           prodl	equ	0xFF3
 33237                           intcon	equ	0xFF2
 33238                           intcon2	equ	0xFF1
 33239                           intcon3	equ	0xFF0
 33240                           indf0	equ	0xFEF
 33241                           postinc0	equ	0xFEE
 33242                           plusw0	equ	0xFEB
 33243                           fsr0h	equ	0xFEA
 33244                           fsr0l	equ	0xFE9
 33245                           wreg	equ	0xFE8
 33246                           indf1	equ	0xFE7
 33247                           postinc1	equ	0xFE6
 33248                           postdec1	equ	0xFE5
 33249                           plusw1	equ	0xFE3
 33250                           fsr1h	equ	0xFE2
 33251                           fsr1l	equ	0xFE1
 33252                           bsr	equ	0xFE0
 33253                           indf2	equ	0xFDF
 33254                           postinc2	equ	0xFDE
 33255                           postdec2	equ	0xFDD
 33256                           plusw2	equ	0xFDB
 33257                           fsr2h	equ	0xFDA
 33258                           fsr2l	equ	0xFD9
 33259                           status	equ	0xFD8
 33260                           
 33261 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33262 ;; Defined at:
 33263 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33264 ;; Parameters:    Size  Location     Type
 33265 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33266 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33267 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33268 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33269 ;; Auto vars:     Size  Location     Type
 33270 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33271 ;; Return value:  Size  Location     Type
 33272 ;;                  1    wreg      unsigned char 
 33273 ;; Registers used:
 33274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33275 ;; Tracked objects:
 33276 ;;		On entry : 0/0
 33277 ;;		On exit  : 0/0
 33278 ;;		Unchanged: 0/0
 33279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33284 ;;Total ram usage:        5 bytes
 33285 ;; Hardware stack levels used:    1
 33286 ;; Hardware stack levels required when called:    5
 33287 ;; This function calls:
 33288 ;;		i1_GenerateEvt
 33289 ;; This function is called by:
 33290 ;;		_I2cDummyTx
 33291 ;; This function uses a non-reentrant model
 33292 ;;
 33293                           
 33294                           	psect	text164
 33295  005928                     __ptext164:
 33296                           	opt stack 0
 33297  005928                     i1_I2cSlv_SendI2cMsg:
 33298                           	opt stack 8
 33299                           
 33300                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33301                           
 33302                           ; BSR set to: 1
 33303                           ;incstack = 0
 33304  005928  0E00               	movlw	0
 33305  00592A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33306                           
 33307                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33308  00592C  0100               	movlb	0	; () banked
 33309  00592E  05CC               	decf	_I2cComSts& (0+255),w,b
 33310  005930  B4D8               	btfsc	status,2,c
 33311  005932  D014               	goto	i1l1395
 33312                           
 33313                           ; BSR set to: 0
 33314                           ;i2c_slv.c: 257: {
 33315                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33316  005934  C01E  F39F         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33317                           
 33318                           ; BSR set to: 0
 33319                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33320  005938  0E00               	movlw	0
 33321  00593A  0103               	movlb	3	; () banked
 33322  00593C  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 33323                           
 33324                           ; BSR set to: 3
 33325                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33326  00593E  C01F  F3A3         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33327                           
 33328                           ; BSR set to: 3
 33329                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33330  005942  C01C  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33331  005946  C01D  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33332                           
 33333                           ; BSR set to: 3
 33334                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33335  00594A  0ED6               	movlw	low _I2cWriteDataEvt
 33336  00594C  6E19               	movwf	i1GenerateEvt@Event,c
 33337  00594E  0E00               	movlw	high _I2cWriteDataEvt
 33338  005950  6E1A               	movwf	i1GenerateEvt@Event+1,c
 33339  005952  EC69  F02F         	call	i1_GenerateEvt	;wreg free
 33340                           
 33341                           ;i2c_slv.c: 267: TxSts = 1u;
 33342  005956  0E01               	movlw	1
 33343  005958  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33344                           
 33345                           ;i2c_slv.c: 268: }
 33346  00595A  0012               	return	
 33347  00595C                     i1l1395:
 33348                           
 33349                           ;i2c_slv.c: 269: else
 33350                           ;i2c_slv.c: 270: {
 33351                           ;i2c_slv.c: 272: TxSts = 0u;
 33352  00595C  0E00               	movlw	0
 33353  00595E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33354  005960  0012               	return	
 33355  005962                     __end_ofi1_I2cSlv_SendI2cMsg:
 33356                           	opt stack 0
 33357                           tosu	equ	0xFFF
 33358                           tosh	equ	0xFFE
 33359                           tosl	equ	0xFFD
 33360                           pclatu	equ	0xFFB
 33361                           pclath	equ	0xFFA
 33362                           tblptru	equ	0xFF8
 33363                           tblptrh	equ	0xFF7
 33364                           tblptrl	equ	0xFF6
 33365                           tablat	equ	0xFF5
 33366                           prodh	equ	0xFF4
 33367                           prodl	equ	0xFF3
 33368                           intcon	equ	0xFF2
 33369                           intcon2	equ	0xFF1
 33370                           intcon3	equ	0xFF0
 33371                           indf0	equ	0xFEF
 33372                           postinc0	equ	0xFEE
 33373                           plusw0	equ	0xFEB
 33374                           fsr0h	equ	0xFEA
 33375                           fsr0l	equ	0xFE9
 33376                           wreg	equ	0xFE8
 33377                           indf1	equ	0xFE7
 33378                           postinc1	equ	0xFE6
 33379                           postdec1	equ	0xFE5
 33380                           plusw1	equ	0xFE3
 33381                           fsr1h	equ	0xFE2
 33382                           fsr1l	equ	0xFE1
 33383                           bsr	equ	0xFE0
 33384                           indf2	equ	0xFDF
 33385                           postinc2	equ	0xFDE
 33386                           postdec2	equ	0xFDD
 33387                           plusw2	equ	0xFDB
 33388                           fsr2h	equ	0xFDA
 33389                           fsr2l	equ	0xFD9
 33390                           status	equ	0xFD8
 33391                           
 33392 ;; *************** function i1_GenerateEvt *****************
 33393 ;; Defined at:
 33394 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33395 ;; Parameters:    Size  Location     Type
 33396 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 33397 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33398 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33399 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33400 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33401 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33402 ;; Auto vars:     Size  Location     Type
 33403 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 33404 ;; Return value:  Size  Location     Type
 33405 ;;                  1    wreg      enum E7699
 33406 ;; Registers used:
 33407 ;;		wreg, fsr2l, fsr2h, status,2
 33408 ;; Tracked objects:
 33409 ;;		On entry : 0/0
 33410 ;;		On exit  : 0/0
 33411 ;;		Unchanged: 0/0
 33412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33417 ;;Total ram usage:        3 bytes
 33418 ;; Hardware stack levels used:    1
 33419 ;; Hardware stack levels required when called:    4
 33420 ;; This function calls:
 33421 ;;		Nothing
 33422 ;; This function is called by:
 33423 ;;		i1_I2cSlv_SendI2cMsg
 33424 ;; This function uses a non-reentrant model
 33425 ;;
 33426                           
 33427                           	psect	text165
 33428  005ED2                     __ptext165:
 33429                           	opt stack 0
 33430  005ED2                     i1_GenerateEvt:
 33431                           	opt stack 8
 33432                           
 33433                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33434                           
 33435                           ;incstack = 0
 33436  005ED2  0E00               	movlw	0
 33437  005ED4  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33438                           
 33439                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33440  005ED6  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 33441  005EDA  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 33442  005EDE  0E02               	movlw	2
 33443  005EE0  6EDF               	movwf	indf2,c
 33444                           
 33445                           ;os_ser.c: 83: EventStatus = EventSent;
 33446  005EE2  0E02               	movlw	2
 33447  005EE4  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33448  005EE6  0012               	return	
 33449  005EE8                     __end_ofi1_GenerateEvt:
 33450                           	opt stack 0
 33451                           tosu	equ	0xFFF
 33452                           tosh	equ	0xFFE
 33453                           tosl	equ	0xFFD
 33454                           pclatu	equ	0xFFB
 33455                           pclath	equ	0xFFA
 33456                           tblptru	equ	0xFF8
 33457                           tblptrh	equ	0xFF7
 33458                           tblptrl	equ	0xFF6
 33459                           tablat	equ	0xFF5
 33460                           prodh	equ	0xFF4
 33461                           prodl	equ	0xFF3
 33462                           intcon	equ	0xFF2
 33463                           intcon2	equ	0xFF1
 33464                           intcon3	equ	0xFF0
 33465                           indf0	equ	0xFEF
 33466                           postinc0	equ	0xFEE
 33467                           plusw0	equ	0xFEB
 33468                           fsr0h	equ	0xFEA
 33469                           fsr0l	equ	0xFE9
 33470                           wreg	equ	0xFE8
 33471                           indf1	equ	0xFE7
 33472                           postinc1	equ	0xFE6
 33473                           postdec1	equ	0xFE5
 33474                           plusw1	equ	0xFE3
 33475                           fsr1h	equ	0xFE2
 33476                           fsr1l	equ	0xFE1
 33477                           bsr	equ	0xFE0
 33478                           indf2	equ	0xFDF
 33479                           postinc2	equ	0xFDE
 33480                           postdec2	equ	0xFDD
 33481                           plusw2	equ	0xFDB
 33482                           fsr2h	equ	0xFDA
 33483                           fsr2l	equ	0xFD9
 33484                           status	equ	0xFD8
 33485                           
 33486 ;; *************** function _HighPriorityIsr *****************
 33487 ;; Defined at:
 33488 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33489 ;; Parameters:    Size  Location     Type
 33490 ;;		None
 33491 ;; Auto vars:     Size  Location     Type
 33492 ;;		None
 33493 ;; Return value:  Size  Location     Type
 33494 ;;                  1    wreg      void 
 33495 ;; Registers used:
 33496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33497 ;; Tracked objects:
 33498 ;;		On entry : 0/0
 33499 ;;		On exit  : 0/0
 33500 ;;		Unchanged: 0/0
 33501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33504 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33505 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33506 ;;Total ram usage:       18 bytes
 33507 ;; Hardware stack levels used:    1
 33508 ;; Hardware stack levels required when called:    3
 33509 ;; This function calls:
 33510 ;;		_Mcu_Int0Isr
 33511 ;;		_Mcu_Int1Isr
 33512 ;;		_Rtcc_RtcIsr
 33513 ;;		_Uart_Uart1RxIsr
 33514 ;; This function is called by:
 33515 ;;		Interrupt level 2
 33516 ;; This function uses a non-reentrant model
 33517 ;;
 33518                           
 33519                           	psect	intcode
 33520  000008                     __pintcode:
 33521                           	opt stack 0
 33522  000008                     _HighPriorityIsr:
 33523                           	opt stack 8
 33524                           
 33525                           ;incstack = 0
 33526  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33527  00000A  EF30  F020         	goto	int_func
 33528                           tosu	equ	0xFFF
 33529                           tosh	equ	0xFFE
 33530                           tosl	equ	0xFFD
 33531                           pclatu	equ	0xFFB
 33532                           pclath	equ	0xFFA
 33533                           tblptru	equ	0xFF8
 33534                           tblptrh	equ	0xFF7
 33535                           tblptrl	equ	0xFF6
 33536                           tablat	equ	0xFF5
 33537                           prodh	equ	0xFF4
 33538                           prodl	equ	0xFF3
 33539                           intcon	equ	0xFF2
 33540                           intcon2	equ	0xFF1
 33541                           intcon3	equ	0xFF0
 33542                           indf0	equ	0xFEF
 33543                           postinc0	equ	0xFEE
 33544                           plusw0	equ	0xFEB
 33545                           fsr0h	equ	0xFEA
 33546                           fsr0l	equ	0xFE9
 33547                           wreg	equ	0xFE8
 33548                           indf1	equ	0xFE7
 33549                           postinc1	equ	0xFE6
 33550                           postdec1	equ	0xFE5
 33551                           plusw1	equ	0xFE3
 33552                           fsr1h	equ	0xFE2
 33553                           fsr1l	equ	0xFE1
 33554                           bsr	equ	0xFE0
 33555                           indf2	equ	0xFDF
 33556                           postinc2	equ	0xFDE
 33557                           postdec2	equ	0xFDD
 33558                           plusw2	equ	0xFDB
 33559                           fsr2h	equ	0xFDA
 33560                           fsr2l	equ	0xFD9
 33561                           status	equ	0xFD8
 33562                           
 33563                           	psect	intcode_body
 33564  004060                     __pintcode_body:
 33565                           	opt stack 8
 33566  004060                     int_func:
 33567                           	opt stack 8
 33568  004060  CFFA F007          	movff	pclath,??_HighPriorityIsr
 33569  004064  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 33570  004068  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 33571  00406C  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 33572  004070  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 33573  004074  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 33574  004078  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 33575  00407C  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 33576  004080  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 33577  004084  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 33578  004088  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 33579  00408C  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 33580  004090  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 33581  004094  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 33582  004098  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 33583  00409C  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 33584  0040A0  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 33585  0040A4  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 33586                           
 33587                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 33588  0040A8  B2F2               	btfsc	intcon,1,c	;volatile
 33589                           
 33590                           ;irq.c: 158: {
 33591                           ;irq.c: 160: Mcu_Int0Isr();
 33592  0040AA  EC10  F030         	call	_Mcu_Int0Isr	;wreg free
 33593                           
 33594                           ;irq.c: 161: }
 33595                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 33596  0040AE  B0F0               	btfsc	intcon3,0,c	;volatile
 33597                           
 33598                           ;irq.c: 167: {
 33599                           ;irq.c: 169: Mcu_Int1Isr();
 33600  0040B0  EC0E  F030         	call	_Mcu_Int1Isr	;wreg free
 33601                           
 33602                           ;irq.c: 170: }
 33603                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 33604  0040B4  B0A4               	btfsc	4004,0,c	;volatile
 33605                           
 33606                           ;irq.c: 203: {
 33607                           ;irq.c: 205: Rtcc_RtcIsr();
 33608  0040B6  EC0C  F030         	call	_Rtcc_RtcIsr	;wreg free
 33609                           
 33610                           ;irq.c: 206: }
 33611                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 33612  0040BA  BA9E               	btfsc	3998,5,c	;volatile
 33613                           
 33614                           ;irq.c: 212: {
 33615                           ;irq.c: 214: Uart_Uart1RxIsr();
 33616  0040BC  ECC5  F02F         	call	_Uart_Uart1RxIsr	;wreg free
 33617  0040C0  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 33618  0040C4  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 33619  0040C8  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 33620  0040CC  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 33621  0040D0  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 33622  0040D4  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 33623  0040D8  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 33624  0040DC  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 33625  0040E0  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 33626  0040E4  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 33627  0040E8  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 33628  0040EC  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 33629  0040F0  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 33630  0040F4  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 33631  0040F8  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 33632  0040FC  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 33633  004100  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 33634  004104  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 33635  004108  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33636  00410A  0011               	retfie		f
 33637  00410C                     __end_of_HighPriorityIsr:
 33638                           	opt stack 0
 33639                           tosu	equ	0xFFF
 33640                           tosh	equ	0xFFE
 33641                           tosl	equ	0xFFD
 33642                           pclatu	equ	0xFFB
 33643                           pclath	equ	0xFFA
 33644                           tblptru	equ	0xFF8
 33645                           tblptrh	equ	0xFF7
 33646                           tblptrl	equ	0xFF6
 33647                           tablat	equ	0xFF5
 33648                           prodh	equ	0xFF4
 33649                           prodl	equ	0xFF3
 33650                           intcon	equ	0xFF2
 33651                           intcon2	equ	0xFF1
 33652                           intcon3	equ	0xFF0
 33653                           indf0	equ	0xFEF
 33654                           postinc0	equ	0xFEE
 33655                           plusw0	equ	0xFEB
 33656                           fsr0h	equ	0xFEA
 33657                           fsr0l	equ	0xFE9
 33658                           wreg	equ	0xFE8
 33659                           indf1	equ	0xFE7
 33660                           postinc1	equ	0xFE6
 33661                           postdec1	equ	0xFE5
 33662                           plusw1	equ	0xFE3
 33663                           fsr1h	equ	0xFE2
 33664                           fsr1l	equ	0xFE1
 33665                           bsr	equ	0xFE0
 33666                           indf2	equ	0xFDF
 33667                           postinc2	equ	0xFDE
 33668                           postdec2	equ	0xFDD
 33669                           plusw2	equ	0xFDB
 33670                           fsr2h	equ	0xFDA
 33671                           fsr2l	equ	0xFD9
 33672                           status	equ	0xFD8
 33673                           
 33674 ;; *************** function _Uart_Uart1RxIsr *****************
 33675 ;; Defined at:
 33676 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33677 ;; Parameters:    Size  Location     Type
 33678 ;;		None
 33679 ;; Auto vars:     Size  Location     Type
 33680 ;;		None
 33681 ;; Return value:  Size  Location     Type
 33682 ;;                  1    wreg      void 
 33683 ;; Registers used:
 33684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33685 ;; Tracked objects:
 33686 ;;		On entry : 0/0
 33687 ;;		On exit  : 0/0
 33688 ;;		Unchanged: 0/0
 33689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33694 ;;Total ram usage:        0 bytes
 33695 ;; Hardware stack levels used:    1
 33696 ;; Hardware stack levels required when called:    2
 33697 ;; This function calls:
 33698 ;;		_Uart_MdmGsmGprsReadService
 33699 ;; This function is called by:
 33700 ;;		_HighPriorityIsr
 33701 ;; This function uses a non-reentrant model
 33702 ;;
 33703                           
 33704                           	psect	text167
 33705  005F8A                     __ptext167:
 33706                           	opt stack 0
 33707  005F8A                     _Uart_Uart1RxIsr:
 33708                           	opt stack 8
 33709                           
 33710                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 33711                           ;uart_drv.c: 590: UartRxData = RCREG1;
 33712                           
 33713                           ;incstack = 0
 33714  005F8A  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 33715                           
 33716                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 33717  005F8E  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 33718  005F92  0E01               	movlw	1
 33719  005F94  EC6E  F01C         	call	_Uart_MdmGsmGprsReadService
 33720  005F98  0012               	return		;funcret
 33721  005F9A                     __end_of_Uart_Uart1RxIsr:
 33722                           	opt stack 0
 33723                           tosu	equ	0xFFF
 33724                           tosh	equ	0xFFE
 33725                           tosl	equ	0xFFD
 33726                           pclatu	equ	0xFFB
 33727                           pclath	equ	0xFFA
 33728                           tblptru	equ	0xFF8
 33729                           tblptrh	equ	0xFF7
 33730                           tblptrl	equ	0xFF6
 33731                           tablat	equ	0xFF5
 33732                           prodh	equ	0xFF4
 33733                           prodl	equ	0xFF3
 33734                           intcon	equ	0xFF2
 33735                           intcon2	equ	0xFF1
 33736                           intcon3	equ	0xFF0
 33737                           indf0	equ	0xFEF
 33738                           postinc0	equ	0xFEE
 33739                           plusw0	equ	0xFEB
 33740                           fsr0h	equ	0xFEA
 33741                           fsr0l	equ	0xFE9
 33742                           wreg	equ	0xFE8
 33743                           indf1	equ	0xFE7
 33744                           postinc1	equ	0xFE6
 33745                           postdec1	equ	0xFE5
 33746                           plusw1	equ	0xFE3
 33747                           fsr1h	equ	0xFE2
 33748                           fsr1l	equ	0xFE1
 33749                           bsr	equ	0xFE0
 33750                           indf2	equ	0xFDF
 33751                           postinc2	equ	0xFDE
 33752                           postdec2	equ	0xFDD
 33753                           plusw2	equ	0xFDB
 33754                           fsr2h	equ	0xFDA
 33755                           fsr2l	equ	0xFD9
 33756                           status	equ	0xFD8
 33757                           
 33758 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 33759 ;; Defined at:
 33760 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33761 ;; Parameters:    Size  Location     Type
 33762 ;;  Module          1    wreg     unsigned char 
 33763 ;;  UartData        1    3[COMRAM] unsigned char 
 33764 ;; Auto vars:     Size  Location     Type
 33765 ;;  Module          1    0[COMRAM] unsigned char 
 33766 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 33767 ;; Return value:  Size  Location     Type
 33768 ;;                  1    wreg      void 
 33769 ;; Registers used:
 33770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33771 ;; Tracked objects:
 33772 ;;		On entry : 0/0
 33773 ;;		On exit  : 0/0
 33774 ;;		Unchanged: 0/0
 33775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33779 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33780 ;;Total ram usage:        3 bytes
 33781 ;; Hardware stack levels used:    1
 33782 ;; Hardware stack levels required when called:    1
 33783 ;; This function calls:
 33784 ;;		i2_GenerateEvt
 33785 ;; This function is called by:
 33786 ;;		_Uart_Uart1RxIsr
 33787 ;; This function uses a non-reentrant model
 33788 ;;
 33789                           
 33790                           	psect	text168
 33791  0038DC                     __ptext168:
 33792                           	opt stack 0
 33793  0038DC                     _Uart_MdmGsmGprsReadService:
 33794                           	opt stack 8
 33795                           
 33796                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 33797                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 33798                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 33799                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 33800                           
 33801                           ;incstack = 0
 33802  0038DC  0E00               	movlw	0
 33803  0038DE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33804  0038E0  0E00               	movlw	0
 33805  0038E2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33806                           
 33807                           ;uart_drv.c: 383: switch (RxState)
 33808  0038E4  D058               	goto	i2l680
 33809  0038E6                     
 33810                           ;uart_drv.c: 387: if (UartData == '\r')
 33811  0038E6  0E0D               	movlw	13
 33812  0038E8  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33813  0038EA  A4D8               	btfss	status,2,c
 33814  0038EC  D003               	goto	i2l682
 33815                           
 33816                           ;uart_drv.c: 388: {
 33817                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 33818  0038EE  0E01               	movlw	1
 33819  0038F0  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33820                           
 33821                           ;uart_drv.c: 391: }
 33822  0038F2  0012               	return	
 33823  0038F4                     i2l682:
 33824                           
 33825                           ;uart_drv.c: 392: else
 33826                           ;uart_drv.c: 393: {
 33827                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 33828  0038F4  0E90               	movlw	144
 33829  0038F6  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33830  0038F8  0E01               	movlw	1
 33831  0038FA  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33832  0038FC  B0D8               	btfsc	status,0,c
 33833  0038FE  0012               	return	
 33834                           
 33835                           ;uart_drv.c: 395: {
 33836                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 33837  003900  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33838  003902  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33839  003904  6ED9               	movwf	fsr2l,c
 33840  003906  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33841  003908  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33842  00390A  6EDA               	movwf	fsr2h,c
 33843  00390C  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 33844                           
 33845                           ;uart_drv.c: 399: RxCounter++;
 33846  003910  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 33847  003912  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 33848                           
 33849                           ;uart_drv.c: 400: }
 33850                           ;uart_drv.c: 401: }
 33851                           ;uart_drv.c: 402: break;
 33852  003914  0012               	return	
 33853  003916                     
 33854                           ;uart_drv.c: 406: if (UartData == '\n')
 33855  003916  0E0A               	movlw	10
 33856  003918  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33857  00391A  A4D8               	btfss	status,2,c
 33858  00391C  D035               	goto	i2l688
 33859                           
 33860                           ;uart_drv.c: 407: {
 33861                           ;uart_drv.c: 409: if (RxCounter > 0)
 33862  00391E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33863  003920  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33864  003922  B4D8               	btfsc	status,2,c
 33865  003924  D031               	goto	i2l688
 33866                           
 33867                           ;uart_drv.c: 410: {
 33868                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 33869  003926  0E00               	movlw	0
 33870  003928  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33871  00392A  0E00               	movlw	0
 33872  00392C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33873  00392E  D010               	goto	i2l689
 33874  003930                     
 33875                           ;uart_drv.c: 413: {
 33876                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 33877  003930  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33878  003932  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33879  003934  6ED9               	movwf	fsr2l,c
 33880  003936  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33881  003938  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33882  00393A  6EDA               	movwf	fsr2h,c
 33883  00393C  0E58               	movlw	low _RxBuffer
 33884  00393E  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33885  003940  6EE1               	movwf	fsr1l,c
 33886  003942  0E0C               	movlw	high _RxBuffer
 33887  003944  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33888  003946  6EE2               	movwf	fsr1h,c
 33889  003948  CFDF FFE7          	movff	indf2,indf1
 33890  00394C  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 33891  00394E  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 33892  003950                     i2l689:
 33893  003950  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33894  003952  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33895  003954  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33896  003956  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33897  003958  A0D8               	btfss	status,0,c
 33898  00395A  D7EA               	goto	i2l690
 33899                           
 33900                           ;uart_drv.c: 415: }
 33901                           ;uart_drv.c: 417: RxLen = RxCounter;
 33902  00395C  C023  F0BE         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 33903  003960  C024  F0BF         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 33904                           
 33905                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 33906  003964  0E3C               	movlw	low _NewStringReceived
 33907  003966  6E01               	movwf	i2GenerateEvt@Event,c
 33908  003968  0E00               	movlw	high _NewStringReceived
 33909  00396A  6E02               	movwf	i2GenerateEvt@Event+1,c
 33910  00396C  EC74  F02F         	call	i2_GenerateEvt	;wreg free
 33911                           
 33912                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 33913  003970  0E3B               	movlw	low _NewMdmEvtParserRequest
 33914  003972  6E01               	movwf	i2GenerateEvt@Event,c
 33915  003974  0E00               	movlw	high _NewMdmEvtParserRequest
 33916  003976  6E02               	movwf	i2GenerateEvt@Event+1,c
 33917  003978  EC74  F02F         	call	i2_GenerateEvt	;wreg free
 33918                           
 33919                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 33920  00397C  0E3A               	movlw	low _NewStringMdmTerminal
 33921  00397E  6E01               	movwf	i2GenerateEvt@Event,c
 33922  003980  0E00               	movlw	high _NewStringMdmTerminal
 33923  003982  6E02               	movwf	i2GenerateEvt@Event+1,c
 33924  003984  EC74  F02F         	call	i2_GenerateEvt	;wreg free
 33925  003988                     i2l688:
 33926                           
 33927                           ;uart_drv.c: 427: }
 33928                           ;uart_drv.c: 429: RxState = ReadData;
 33929                           
 33930                           ;uart_drv.c: 424: else
 33931                           ;uart_drv.c: 425: {
 33932                           
 33933                           ;uart_drv.c: 422: }
 33934                           ;uart_drv.c: 423: }
 33935  003988  0E00               	movlw	0
 33936  00398A  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33937                           
 33938                           ;uart_drv.c: 431: RxCounter = 0;
 33939  00398C  0E00               	movlw	0
 33940  00398E  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 33941  003990  0E00               	movlw	0
 33942  003992  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 33943                           
 33944                           ;uart_drv.c: 436: }
 33945                           
 33946                           ;uart_drv.c: 435: break;
 33947                           
 33948                           ;uart_drv.c: 434: default:
 33949                           
 33950                           ;uart_drv.c: 432: break;
 33951  003994  0012               	return	
 33952  003996                     i2l680:
 33953  003996  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 33954                           
 33955                           ; Switch size 1, requested type "space"
 33956                           ; Number of cases is 2, Range of values is 0 to 1
 33957                           ; switch strategies available:
 33958                           ; Name         Instructions Cycles
 33959                           ; simple_byte            7     4 (average)
 33960                           ;	Chosen strategy is simple_byte
 33961  003998  0A00               	xorlw	0	; case 0
 33962  00399A  B4D8               	btfsc	status,2,c
 33963  00399C  D7A4               	goto	i2l681
 33964  00399E  0A01               	xorlw	1	; case 1
 33965  0039A0  A4D8               	btfss	status,2,c
 33966  0039A2  0012               	return	
 33967  0039A4  D7B8               	goto	i2l686
 33968  0039A6                     __end_of_Uart_MdmGsmGprsReadService:
 33969                           	opt stack 0
 33970                           tosu	equ	0xFFF
 33971                           tosh	equ	0xFFE
 33972                           tosl	equ	0xFFD
 33973                           pclatu	equ	0xFFB
 33974                           pclath	equ	0xFFA
 33975                           tblptru	equ	0xFF8
 33976                           tblptrh	equ	0xFF7
 33977                           tblptrl	equ	0xFF6
 33978                           tablat	equ	0xFF5
 33979                           prodh	equ	0xFF4
 33980                           prodl	equ	0xFF3
 33981                           intcon	equ	0xFF2
 33982                           intcon2	equ	0xFF1
 33983                           intcon3	equ	0xFF0
 33984                           indf0	equ	0xFEF
 33985                           postinc0	equ	0xFEE
 33986                           plusw0	equ	0xFEB
 33987                           fsr0h	equ	0xFEA
 33988                           fsr0l	equ	0xFE9
 33989                           wreg	equ	0xFE8
 33990                           indf1	equ	0xFE7
 33991                           postinc1	equ	0xFE6
 33992                           postdec1	equ	0xFE5
 33993                           plusw1	equ	0xFE3
 33994                           fsr1h	equ	0xFE2
 33995                           fsr1l	equ	0xFE1
 33996                           bsr	equ	0xFE0
 33997                           indf2	equ	0xFDF
 33998                           postinc2	equ	0xFDE
 33999                           postdec2	equ	0xFDD
 34000                           plusw2	equ	0xFDB
 34001                           fsr2h	equ	0xFDA
 34002                           fsr2l	equ	0xFD9
 34003                           status	equ	0xFD8
 34004                           
 34005 ;; *************** function i2_GenerateEvt *****************
 34006 ;; Defined at:
 34007 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34008 ;; Parameters:    Size  Location     Type
 34009 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34010 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34011 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34012 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 34013 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 34014 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34015 ;; Auto vars:     Size  Location     Type
 34016 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34017 ;; Return value:  Size  Location     Type
 34018 ;;                  1    wreg      enum E7699
 34019 ;; Registers used:
 34020 ;;		wreg, fsr2l, fsr2h, status,2
 34021 ;; Tracked objects:
 34022 ;;		On entry : 0/0
 34023 ;;		On exit  : 0/0
 34024 ;;		Unchanged: 0/0
 34025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34030 ;;Total ram usage:        3 bytes
 34031 ;; Hardware stack levels used:    1
 34032 ;; This function calls:
 34033 ;;		Nothing
 34034 ;; This function is called by:
 34035 ;;		_Uart_MdmGsmGprsReadService
 34036 ;; This function uses a non-reentrant model
 34037 ;;
 34038                           
 34039                           	psect	text169
 34040  005EE8                     __ptext169:
 34041                           	opt stack 0
 34042  005EE8                     i2_GenerateEvt:
 34043                           	opt stack 8
 34044                           
 34045                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34046                           
 34047                           ;incstack = 0
 34048  005EE8  0E00               	movlw	0
 34049  005EEA  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34050                           
 34051                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34052  005EEC  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34053  005EF0  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34054  005EF4  0E02               	movlw	2
 34055  005EF6  6EDF               	movwf	indf2,c
 34056                           
 34057                           ;os_ser.c: 83: EventStatus = EventSent;
 34058  005EF8  0E02               	movlw	2
 34059  005EFA  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34060  005EFC  0012               	return	
 34061  005EFE                     __end_ofi2_GenerateEvt:
 34062                           	opt stack 0
 34063                           tosu	equ	0xFFF
 34064                           tosh	equ	0xFFE
 34065                           tosl	equ	0xFFD
 34066                           pclatu	equ	0xFFB
 34067                           pclath	equ	0xFFA
 34068                           tblptru	equ	0xFF8
 34069                           tblptrh	equ	0xFF7
 34070                           tblptrl	equ	0xFF6
 34071                           tablat	equ	0xFF5
 34072                           prodh	equ	0xFF4
 34073                           prodl	equ	0xFF3
 34074                           intcon	equ	0xFF2
 34075                           intcon2	equ	0xFF1
 34076                           intcon3	equ	0xFF0
 34077                           indf0	equ	0xFEF
 34078                           postinc0	equ	0xFEE
 34079                           plusw0	equ	0xFEB
 34080                           fsr0h	equ	0xFEA
 34081                           fsr0l	equ	0xFE9
 34082                           wreg	equ	0xFE8
 34083                           indf1	equ	0xFE7
 34084                           postinc1	equ	0xFE6
 34085                           postdec1	equ	0xFE5
 34086                           plusw1	equ	0xFE3
 34087                           fsr1h	equ	0xFE2
 34088                           fsr1l	equ	0xFE1
 34089                           bsr	equ	0xFE0
 34090                           indf2	equ	0xFDF
 34091                           postinc2	equ	0xFDE
 34092                           postdec2	equ	0xFDD
 34093                           plusw2	equ	0xFDB
 34094                           fsr2h	equ	0xFDA
 34095                           fsr2l	equ	0xFD9
 34096                           status	equ	0xFD8
 34097                           
 34098 ;; *************** function _Rtcc_RtcIsr *****************
 34099 ;; Defined at:
 34100 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34101 ;; Parameters:    Size  Location     Type
 34102 ;;		None
 34103 ;; Auto vars:     Size  Location     Type
 34104 ;;		None
 34105 ;; Return value:  Size  Location     Type
 34106 ;;                  1    wreg      void 
 34107 ;; Registers used:
 34108 ;;		wreg, status,2, status,0
 34109 ;; Tracked objects:
 34110 ;;		On entry : 0/0
 34111 ;;		On exit  : 0/0
 34112 ;;		Unchanged: 0/0
 34113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34118 ;;Total ram usage:        0 bytes
 34119 ;; Hardware stack levels used:    1
 34120 ;; This function calls:
 34121 ;;		Nothing
 34122 ;; This function is called by:
 34123 ;;		_HighPriorityIsr
 34124 ;; This function uses a non-reentrant model
 34125 ;;
 34126                           
 34127                           	psect	text170
 34128  006018                     __ptext170:
 34129                           	opt stack 0
 34130  006018                     _Rtcc_RtcIsr:
 34131                           	opt stack 10
 34132                           
 34133                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34134                           
 34135                           ;incstack = 0
 34136  006018  90A4               	bcf	4004,0,c	;volatile
 34137  00601A  0012               	return	
 34138  00601C                     __end_of_Rtcc_RtcIsr:
 34139                           	opt stack 0
 34140                           tosu	equ	0xFFF
 34141                           tosh	equ	0xFFE
 34142                           tosl	equ	0xFFD
 34143                           pclatu	equ	0xFFB
 34144                           pclath	equ	0xFFA
 34145                           tblptru	equ	0xFF8
 34146                           tblptrh	equ	0xFF7
 34147                           tblptrl	equ	0xFF6
 34148                           tablat	equ	0xFF5
 34149                           prodh	equ	0xFF4
 34150                           prodl	equ	0xFF3
 34151                           intcon	equ	0xFF2
 34152                           intcon2	equ	0xFF1
 34153                           intcon3	equ	0xFF0
 34154                           indf0	equ	0xFEF
 34155                           postinc0	equ	0xFEE
 34156                           plusw0	equ	0xFEB
 34157                           fsr0h	equ	0xFEA
 34158                           fsr0l	equ	0xFE9
 34159                           wreg	equ	0xFE8
 34160                           indf1	equ	0xFE7
 34161                           postinc1	equ	0xFE6
 34162                           postdec1	equ	0xFE5
 34163                           plusw1	equ	0xFE3
 34164                           fsr1h	equ	0xFE2
 34165                           fsr1l	equ	0xFE1
 34166                           bsr	equ	0xFE0
 34167                           indf2	equ	0xFDF
 34168                           postinc2	equ	0xFDE
 34169                           postdec2	equ	0xFDD
 34170                           plusw2	equ	0xFDB
 34171                           fsr2h	equ	0xFDA
 34172                           fsr2l	equ	0xFD9
 34173                           status	equ	0xFD8
 34174                           
 34175 ;; *************** function _Mcu_Int1Isr *****************
 34176 ;; Defined at:
 34177 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34178 ;; Parameters:    Size  Location     Type
 34179 ;;		None
 34180 ;; Auto vars:     Size  Location     Type
 34181 ;;		None
 34182 ;; Return value:  Size  Location     Type
 34183 ;;                  1    wreg      void 
 34184 ;; Registers used:
 34185 ;;		wreg, status,2, status,0
 34186 ;; Tracked objects:
 34187 ;;		On entry : 0/0
 34188 ;;		On exit  : 0/0
 34189 ;;		Unchanged: 0/0
 34190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34195 ;;Total ram usage:        0 bytes
 34196 ;; Hardware stack levels used:    1
 34197 ;; This function calls:
 34198 ;;		Nothing
 34199 ;; This function is called by:
 34200 ;;		_HighPriorityIsr
 34201 ;; This function uses a non-reentrant model
 34202 ;;
 34203                           
 34204                           	psect	text171
 34205  00601C                     __ptext171:
 34206                           	opt stack 0
 34207  00601C                     _Mcu_Int1Isr:
 34208                           	opt stack 10
 34209                           
 34210                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34211                           
 34212                           ;incstack = 0
 34213  00601C  90F0               	bcf	intcon3,0,c	;volatile
 34214  00601E  0012               	return	
 34215  006020                     __end_of_Mcu_Int1Isr:
 34216                           	opt stack 0
 34217                           tosu	equ	0xFFF
 34218                           tosh	equ	0xFFE
 34219                           tosl	equ	0xFFD
 34220                           pclatu	equ	0xFFB
 34221                           pclath	equ	0xFFA
 34222                           tblptru	equ	0xFF8
 34223                           tblptrh	equ	0xFF7
 34224                           tblptrl	equ	0xFF6
 34225                           tablat	equ	0xFF5
 34226                           prodh	equ	0xFF4
 34227                           prodl	equ	0xFF3
 34228                           intcon	equ	0xFF2
 34229                           intcon2	equ	0xFF1
 34230                           intcon3	equ	0xFF0
 34231                           indf0	equ	0xFEF
 34232                           postinc0	equ	0xFEE
 34233                           plusw0	equ	0xFEB
 34234                           fsr0h	equ	0xFEA
 34235                           fsr0l	equ	0xFE9
 34236                           wreg	equ	0xFE8
 34237                           indf1	equ	0xFE7
 34238                           postinc1	equ	0xFE6
 34239                           postdec1	equ	0xFE5
 34240                           plusw1	equ	0xFE3
 34241                           fsr1h	equ	0xFE2
 34242                           fsr1l	equ	0xFE1
 34243                           bsr	equ	0xFE0
 34244                           indf2	equ	0xFDF
 34245                           postinc2	equ	0xFDE
 34246                           postdec2	equ	0xFDD
 34247                           plusw2	equ	0xFDB
 34248                           fsr2h	equ	0xFDA
 34249                           fsr2l	equ	0xFD9
 34250                           status	equ	0xFD8
 34251                           
 34252 ;; *************** function _Mcu_Int0Isr *****************
 34253 ;; Defined at:
 34254 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34255 ;; Parameters:    Size  Location     Type
 34256 ;;		None
 34257 ;; Auto vars:     Size  Location     Type
 34258 ;;		None
 34259 ;; Return value:  Size  Location     Type
 34260 ;;                  1    wreg      void 
 34261 ;; Registers used:
 34262 ;;		wreg, status,2, status,0
 34263 ;; Tracked objects:
 34264 ;;		On entry : 0/0
 34265 ;;		On exit  : 0/0
 34266 ;;		Unchanged: 0/0
 34267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34272 ;;Total ram usage:        0 bytes
 34273 ;; Hardware stack levels used:    1
 34274 ;; This function calls:
 34275 ;;		Nothing
 34276 ;; This function is called by:
 34277 ;;		_HighPriorityIsr
 34278 ;; This function uses a non-reentrant model
 34279 ;;
 34280                           
 34281                           	psect	text172
 34282  006020                     __ptext172:
 34283                           	opt stack 0
 34284  006020                     _Mcu_Int0Isr:
 34285                           	opt stack 10
 34286                           
 34287                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34288                           
 34289                           ;incstack = 0
 34290  006020  92F2               	bcf	intcon,1,c	;volatile
 34291  006022  0012               	return	
 34292  006024                     __end_of_Mcu_Int0Isr:
 34293                           	opt stack 0
 34294                           tosu	equ	0xFFF
 34295                           tosh	equ	0xFFE
 34296                           tosl	equ	0xFFD
 34297                           pclatu	equ	0xFFB
 34298                           pclath	equ	0xFFA
 34299                           tblptru	equ	0xFF8
 34300                           tblptrh	equ	0xFF7
 34301                           tblptrl	equ	0xFF6
 34302                           tablat	equ	0xFF5
 34303                           prodh	equ	0xFF4
 34304                           prodl	equ	0xFF3
 34305                           intcon	equ	0xFF2
 34306                           intcon2	equ	0xFF1
 34307                           intcon3	equ	0xFF0
 34308                           indf0	equ	0xFEF
 34309                           postinc0	equ	0xFEE
 34310                           plusw0	equ	0xFEB
 34311                           fsr0h	equ	0xFEA
 34312                           fsr0l	equ	0xFE9
 34313                           wreg	equ	0xFE8
 34314                           indf1	equ	0xFE7
 34315                           postinc1	equ	0xFE6
 34316                           postdec1	equ	0xFE5
 34317                           plusw1	equ	0xFE3
 34318                           fsr1h	equ	0xFE2
 34319                           fsr1l	equ	0xFE1
 34320                           bsr	equ	0xFE0
 34321                           indf2	equ	0xFDF
 34322                           postinc2	equ	0xFDE
 34323                           postdec2	equ	0xFDD
 34324                           plusw2	equ	0xFDB
 34325                           fsr2h	equ	0xFDA
 34326                           fsr2l	equ	0xFD9
 34327                           status	equ	0xFD8
 34328                           tosu	equ	0xFFF
 34329                           tosh	equ	0xFFE
 34330                           tosl	equ	0xFFD
 34331                           pclatu	equ	0xFFB
 34332                           pclath	equ	0xFFA
 34333                           tblptru	equ	0xFF8
 34334                           tblptrh	equ	0xFF7
 34335                           tblptrl	equ	0xFF6
 34336                           tablat	equ	0xFF5
 34337                           prodh	equ	0xFF4
 34338                           prodl	equ	0xFF3
 34339                           intcon	equ	0xFF2
 34340                           intcon2	equ	0xFF1
 34341                           intcon3	equ	0xFF0
 34342                           indf0	equ	0xFEF
 34343                           postinc0	equ	0xFEE
 34344                           plusw0	equ	0xFEB
 34345                           fsr0h	equ	0xFEA
 34346                           fsr0l	equ	0xFE9
 34347                           wreg	equ	0xFE8
 34348                           indf1	equ	0xFE7
 34349                           postinc1	equ	0xFE6
 34350                           postdec1	equ	0xFE5
 34351                           plusw1	equ	0xFE3
 34352                           fsr1h	equ	0xFE2
 34353                           fsr1l	equ	0xFE1
 34354                           bsr	equ	0xFE0
 34355                           indf2	equ	0xFDF
 34356                           postinc2	equ	0xFDE
 34357                           postdec2	equ	0xFDD
 34358                           plusw2	equ	0xFDB
 34359                           fsr2h	equ	0xFDA
 34360                           fsr2l	equ	0xFD9
 34361                           status	equ	0xFD8
 34362                           
 34363                           	psect	text173
 34364  000000                     __ptext173:
 34365                           	opt stack 0
 34366                           tosu	equ	0xFFF
 34367                           tosh	equ	0xFFE
 34368                           tosl	equ	0xFFD
 34369                           pclatu	equ	0xFFB
 34370                           pclath	equ	0xFFA
 34371                           tblptru	equ	0xFF8
 34372                           tblptrh	equ	0xFF7
 34373                           tblptrl	equ	0xFF6
 34374                           tablat	equ	0xFF5
 34375                           prodh	equ	0xFF4
 34376                           prodl	equ	0xFF3
 34377                           intcon	equ	0xFF2
 34378                           intcon2	equ	0xFF1
 34379                           intcon3	equ	0xFF0
 34380                           indf0	equ	0xFEF
 34381                           postinc0	equ	0xFEE
 34382                           plusw0	equ	0xFEB
 34383                           fsr0h	equ	0xFEA
 34384                           fsr0l	equ	0xFE9
 34385                           wreg	equ	0xFE8
 34386                           indf1	equ	0xFE7
 34387                           postinc1	equ	0xFE6
 34388                           postdec1	equ	0xFE5
 34389                           plusw1	equ	0xFE3
 34390                           fsr1h	equ	0xFE2
 34391                           fsr1l	equ	0xFE1
 34392                           bsr	equ	0xFE0
 34393                           indf2	equ	0xFDF
 34394                           postinc2	equ	0xFDE
 34395                           postdec2	equ	0xFDD
 34396                           plusw2	equ	0xFDB
 34397                           fsr2h	equ	0xFDA
 34398                           fsr2l	equ	0xFD9
 34399                           status	equ	0xFD8
 34400                           
 34401                           	psect	rparam
 34402  0000                     tosu	equ	0xFFF
 34403                           tosh	equ	0xFFE
 34404                           tosl	equ	0xFFD
 34405                           pclatu	equ	0xFFB
 34406                           pclath	equ	0xFFA
 34407                           tblptru	equ	0xFF8
 34408                           tblptrh	equ	0xFF7
 34409                           tblptrl	equ	0xFF6
 34410                           tablat	equ	0xFF5
 34411                           prodh	equ	0xFF4
 34412                           prodl	equ	0xFF3
 34413                           intcon	equ	0xFF2
 34414                           intcon2	equ	0xFF1
 34415                           intcon3	equ	0xFF0
 34416                           indf0	equ	0xFEF
 34417                           postinc0	equ	0xFEE
 34418                           plusw0	equ	0xFEB
 34419                           fsr0h	equ	0xFEA
 34420                           fsr0l	equ	0xFE9
 34421                           wreg	equ	0xFE8
 34422                           indf1	equ	0xFE7
 34423                           postinc1	equ	0xFE6
 34424                           postdec1	equ	0xFE5
 34425                           plusw1	equ	0xFE3
 34426                           fsr1h	equ	0xFE2
 34427                           fsr1l	equ	0xFE1
 34428                           bsr	equ	0xFE0
 34429                           indf2	equ	0xFDF
 34430                           postinc2	equ	0xFDE
 34431                           postdec2	equ	0xFDD
 34432                           plusw2	equ	0xFDB
 34433                           fsr2h	equ	0xFDA
 34434                           fsr2l	equ	0xFD9
 34435                           status	equ	0xFD8
 34436                           
 34437                           	psect	temp
 34438  000042                     btemp:
 34439                           	opt stack 0
 34440  000042                     	ds	1
 34441  0000                     int$flags	set	btemp
 34442  0000                     wtemp6	set	btemp+1
 34443                           tosu	equ	0xFFF
 34444                           tosh	equ	0xFFE
 34445                           tosl	equ	0xFFD
 34446                           pclatu	equ	0xFFB
 34447                           pclath	equ	0xFFA
 34448                           tblptru	equ	0xFF8
 34449                           tblptrh	equ	0xFF7
 34450                           tblptrl	equ	0xFF6
 34451                           tablat	equ	0xFF5
 34452                           prodh	equ	0xFF4
 34453                           prodl	equ	0xFF3
 34454                           intcon	equ	0xFF2
 34455                           intcon2	equ	0xFF1
 34456                           intcon3	equ	0xFF0
 34457                           indf0	equ	0xFEF
 34458                           postinc0	equ	0xFEE
 34459                           plusw0	equ	0xFEB
 34460                           fsr0h	equ	0xFEA
 34461                           fsr0l	equ	0xFE9
 34462                           wreg	equ	0xFE8
 34463                           indf1	equ	0xFE7
 34464                           postinc1	equ	0xFE6
 34465                           postdec1	equ	0xFE5
 34466                           plusw1	equ	0xFE3
 34467                           fsr1h	equ	0xFE2
 34468                           fsr1l	equ	0xFE1
 34469                           bsr	equ	0xFE0
 34470                           indf2	equ	0xFDF
 34471                           postinc2	equ	0xFDE
 34472                           postdec2	equ	0xFDD
 34473                           plusw2	equ	0xFDB
 34474                           fsr2h	equ	0xFDA
 34475                           fsr2l	equ	0xFD9
 34476                           status	equ	0xFD8


Data Sizes:
    Strings     362
    Constant    567
    Data        178
    BSS         2325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     76     127
    BANK1           256    201     255
    BANK2           256    200     256
    BANK3           256      0     250
    BANK4           192      0     185
    BANK5           256      0     210
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK7[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 10
		 -> ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8934 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK4[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3055$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3045$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3045$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3021$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3021$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3021$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3021$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2517_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2517_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[11]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  561522
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  557112
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  278649
                                             71 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  278463
                                             71 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   51775
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   47243
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   27130
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26491
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20484
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8054
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58418
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58418
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41208
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          67    67      0   39290
                                              0 BANK1     66    66      0
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   13330
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11824
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    6373
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   58377
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14533
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    5902
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6     960
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   10683
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8110
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13478
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   37523
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   18798
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   18725
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2439
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3627
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    1797
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6723
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6723
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2565
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     748
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16270
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D2      16       82.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9      FF       7       99.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B9      14       96.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     96E       8        0.0%
DATA                 0      0     C8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 15:50:39 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5082  
                              _USB_SD_Ptr FC55                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 5DB6               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 1FFE  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 1F1A                                       l203 1F22  
                                     l205 1F6A                                       l206 1F90  
                                     l208 1F98                                       l160 1E5E  
                                     l209 1FB8                                       l161 1D34  
                                     l162 1E9C                                       l170 1DFC  
                                     l171 1E12                                       l163 1D40  
                                     l315 4242                                       l323 420E  
                                     l164 1D80                                       l316 41B8  
                                     l420 4752                                       l500 4602  
                                     l173 1E16                                       l325 4228  
                                     l421 4772                                       l237 5DC2  
                                     l174 1E1E                                       l166 1D8E  
                                     l318 41C2                                       l422 477E  
             __end_of_USBStdGetDscHandler 2A2E                                       l510 45D4  
                                     l502 4594                                       l175 1E2A  
                                     l167 1DB6                                       l319 41E8  
                                     l423 478A                                       l511 45C4  
                                     l503 4584                                       l192 1FC2  
                                     l176 1E40                                       l416 479E  
                                     l424 4796                                       l512 45E8  
                                     l504 45AA                                       l520 5442  
                                     l193 1EA2                                       l169 1DC8  
                                     l417 4744                                       l441 17EC  
                                     l513 45C8                                       l505 4588  
                                     l521 540E                                       l194 1FFA  
                                     l418 47CC                                       l442 15F4  
                                     l514 45CE                                       l506 458E  
                                     l530 2F0A                                       l195 1EAE  
                                     l179 1E4C                                       l419 474C  
                                     l523 5428                                       l531 2F70  
                                     l196 1EEE                                       l700 56A0  
                                     l444 163C                                       l532 2F36  
                                     l445 1684                                       l541 5D80  
                                     l198 1EFC                                       l446 16CC  
                                     l199 1F10                                       l631 2876  
                                     l447 1714                                       l448 175C  
                                     l528 2F76                                       l633 28EE  
                                     l625 2802                                       l449 17A4  
                                     l529 2F62                                       l538 5D84  
                                     l546 39FE                                       l651 5392  
                                     l707 5804                                       l627 2826  
                                     l715 5738                                       l539 5D7C  
                                     l547 3A1A                                       l660 53B6  
                                     l652 538C                                       l716 570E  
                                     l709 581E                                       l629 284E  
                                     l718 5726                                       l639 5DA8  
                                     l832 5B44                                       l844 3AD2  
                                     l668 0C44                                       _BDT 000400  
                                     l790 5DDE                                       l855 4AE8  
                                     l775 2C70                                       l864 4840  
                                     l856 4A8E                                       l857 4B02  
                                     l698 5684                                       l858 4ABE  
                                     l867 4852                                       l981 22EA  
                                     l982 231E                                       l983 2390  
                                     l976 23D8                                       l992 23B4  
                                     l977 22AC                                       l979 22D0  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 410C  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 59CC                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CB  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5702  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 22AA  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1003 555C  
         InitGprsNetwork@GprsNetInitState 01EE                                      l1004 552A  
                                    l1100 52E4                                      l1021 38B8  
                                    l1101 52F8                                      l1022 3814  
                             RiSm@Counter 02E0                                      l1007 5542  
                                    l1111 5350                                      l1025 3824  
                                    l1202 1078                                      l1026 385C  
                                    l1050 2D3A                                      l1211 0F3E  
                                    l1203 0DD0                                      l1027 3880  
                                    l1220 1054                                      l1212 0F78  
                                    l1060 3048                                      l1044 2D68  
                                    l2100 5188                                      l1205 10B0  
                                    l1213 0FB8                                      l1029 38A0  
                                    l1061 2F88                                      l1045 2CD2  
                                    l1214 0FBC                                      l1206 0DE8  
                                    l2102 519A                                      l1142 5C80  
                                    l1126 5C5C                                      l1215 1000  
                                    l1207 0E22                                      l1047 2D7C  
                                    l2103 51AC                                      l1240 0646  
                                    l1224 106E                                      l1208 0E96  
                                    l1064 2FA2                                      l1048 2D04  
                                    l1400 56FC                                      l1241 0680  
                                    l1209 0E5E                                      l1065 2FB8  
                                    l1081 1B80                                      l2050 24AA  
                                    l2210 598A                                      l1250 08CA  
                                    l1242 06BA                                      l1090 1B1A  
                                    l1082 19FE                                      l2211 5976  
                                    l1235 0A54                                      l1251 090E  
                                    l1243 073E                                      l1219 1010  
                                    l1091 1B66                                      l2060 3066  
                                    l2204 4E54                                      l1260 097E  
                                    l1244 06F6                                      l1236 05F4  
                                    l1068 2FFE                                      l2061 313A  
                                    l2205 4E14                                      l1261 09AA  
                                    l1085 1A1A                                      l1405 5D6C  
                                    l3030 51F6                                      l2046 251C  
                                    l2062 3084                                      l2070 426A  
                                    l1238 0AB6                                      l1246 07F2  
                                    l1086 1AD0                                      l3031 51EE  
                                    l2047 23FE                                      l2071 4300  
                                    l1263 09C4                                      l1255 092A  
                                    l1247 082C                                      l1239 060C  
                                    l1087 1AF4                                      l2048 2532  
                                    l2064 30F4                                      l2072 427A  
                                    l1264 0A32                                      l1256 096E  
                                    l1248 0856                                      l3040 5652  
                                    l1600 1BCA                                      l2049 2426  
                                    l2073 428C                                      l1249 0890  
                                    l3041 564A                                      l3201 5792  
                                    l1097 530A                                      l3034 5216  
                                    l2090 5AD8                                      l2074 42A6  
                                    l3202 578C                                      l1098 52CE  
                                    l1274 54D0                                      l2082 3734  
                                    l3035 5220                                      l2091 5AC6  
                                    l2059 311E                                      l1611 1C6A  
                                    l1603 1BF2                                      l2083 367C  
                                    l2171 48CA                                      l1372 3C4C  
                                    l2076 42B4                                      l1268 0A42  
                                    l3044 566A                                      l3060 5A7C  
                                    l1700 2AE8                                      l1612 1C76  
                                    l1604 1C02                                      l1365 3C9E  
                                    l2093 5ACC                                      l2069 42D8  
                                    l2077 42C2                                      l1269 0A4A  
                                    l3045 5674                                      l3221 18C8  
                                    l3061 5A6A                                      l2413 131E  
                                    l1621 1D0A                                      l1613 1CA0  
                                    l1605 1C0A                                      l1277 549E  
                                    l2085 368A                                      l1374 3C68  
                                    l1366 3C00                                      l2094 5AD2  
                                    l3230 1902                                      l3310 586E  
                                    l2414 10B8                                      l1710 320E  
                                    l3054 5488                                      l1614 1CAC  
                                    l1606 1C20                                      l1390 5116  
                                    l1367 3C22                                      l1631 3D9E  
                                    l3303 5D08                                      l2431 12F8  
                                    l2423 110E                                      l3055 5466  
                                    l1623 1D28                                      l1607 1C2C  
                                    l1376 3C84                                      l2360 01AE  
                                    l2416 10DE                                      l1720 29AE  
                                    l1800 335E                                      l1616 1CC0  
                                    l2168 48DE                                      l1377 3C90  
                                    l1369 3C44                                      l1633 3DC8  
                                    l3241 5E8A                                      l3233 1914  
                                    l3217 185C                                      l2353 05D2  
                                    l2361 019C                                      l2433 1318  
                                    l2425 112E                                      l1801 337C  
                                    l1609 1C54                                      l2169 4864  
                                    l2441 5E46                                      l2530 5522  
                                    l3234 1980                                      l3314 5E72  
                                    l2354 00E2                                      l2418 10FA  
                                    l1650 378E                                      l1626 55C6  
                                    l1722 29B6                                      l1730 3F0A  
                                    l1802 3398                                      l2099 51BE  
                                    l1395 57F6                                      l1635 3E24  
                                    l3227 18D8                                      l3219 1874  
                                    l2371 0392                                      l2427 114E  
                                    l1627 55D6                                      l1811 13F6  
                                    l1723 2A06                                      l1619 1CE6  
                                    l1387 511C                                      l2604 4FE4  
                                    l2516 4368                                      l3236 19A6  
                                    l3228 18E8                                      l2372 0326  
                                    l1820 14D0                                      l1716 2A16  
                                    l1708 319A                                      l1388 50DC  
              USBConfigureEndpoint@handle 0083                                      l2605 4FF8  
                                    l2197 526C                                      l3237 19E0  
                                    l3261 32D0                                      l2373 02B4  
                                    l2357 0152                                      l2429 128E  
                                    l1813 143E                                      l1725 2A0E  
                                    l1717 2912                                      l1733 3F9A  
                                    l2461 5CB4                                      l2198 5242  
                                    l2518 4394                                      l2534 591A  
                                    l1910 4652                                      l3262 3288  
                                    l2374 0250                                      l2358 01E2  
                                    l2366 01D0                                      l3190 4F3E  
                                    l1662 454C                                      l1822 1532  
                                    l1814 1440                                      l1734 3F1C  
                                    l2438 5E4C                                      l2199 5268  
                                    l2519 43A4                                      l1911 467E  
                                    l3263 32A0                                      l3255 3248  
                                    l2391 045E                                      l2383 0402  
                                    l1823 153E                                      l1815 145C  
                                    l1719 2926                                      l1735 3F22  
                                    l1591 20B0                                      l1743 55AE  
                                    l1751 58E2                                      l1912 4658  
                                    l3264 32B0                                      l3256 3242  
                                    l2392 0578                                      l2384 03D2  
                                    l2376 0304                                      l1824 15BA  
                                    l1808 137E                                      l1736 3F42  
                                    l1656 4498                                      l1672 2E38  
                                    l1744 55AC                                      l1752 58E0  
                                    l2377 02C6                                      l1681 341C  
                                    l1817 14EA                                      l1809 1384  
                                    l1729 3F84                                      l3258 3270  
                                    l2394 04B4                                      l3186 4F2E  
                                    l1690 3492                                      l1770 4D92  
                                    l1658 44B2                                      l2458 5CBA  
                                    l1907 46A4                                      l3195 5A12  
                                    l3267 330E                                      l2395 0478  
                                    l3187 4F28                                      l1683 3426  
                                    l1827 1570                                      l1819 14B2  
                                    l1667 2E0E                                      l1587 2048  
                                    l2459 5CAC                                      l2563 3EEC  
                                    l3196 5A08                                      l2580 35D2  
                                    l1668 2DB6                                      l2564 3E6E  
                                    l3293 5AB6                                      l2389 041E  
                                    l2581 3634                                      l3189 4F48  
                                    l1685 348A                                      l1781 3D5C  
                                    l1829 15C6                                      l1757 472C  
                                    l1589 2070                                      l2398 0524  
                                    l2590 3654                                      l1950 2614  
                                    l1942 25AE                                      l1686 3450  
                                    l1758 4726                                      l1598 1BD6  
                                    l2566 3E88                                      l2399 0570  
                                    l1943 25B2                                      l1935 255A  
                                    l1791 33B8                                      l1599 1BCC  
                                    l2584 35D8                                      l1776 3CF4  
                                    l1696 2A8A                                      l1768 4D44  
                                    l1792 3328                                      l2568 3EAC  
                                    l1953 2666                                      l1945 260A  
                                    l1937 2568                                      l1689 34CC  
                                    l1777 3CFA                                      l1697 2A64  
                                    l2569 3ED8                                      l2762 356E  
                                    l3298 5BC4                                      l2586 3620  
                                    l1954 266A                                      l1946 25D2  
                                    l1778 3D76                                      l1890 401A  
                                    l1794 3332                                      l2763 3530  
                                    l2587 3602                                      l2579 35B8  
                                    l1939 259C                                      l1779 3D3C  
                                    l1699 2B02                                      l1891 4032  
                                    l1795 3338                                      l2756 34DC  
                                    l1796 333E                                      l2765 35A2  
                                    l2757 34D6                                      l1949 264C  
                                    l1885 403C                                      l1797 3352  
                                    l2782 49E0                                      l2950 4192  
                                    l1886 3FD6                                      l1798 3358  
                                    l2783 49EA                                      l2775 4992  
                                    l2791 4B40                                      l2759 351E  
                                    l2943 561C                                      l1983 4E70  
                                    l1991 4E6A                                      l1975 5C2C  
              __size_of_Mdm_IsSmsReceived 0024                                      l2784 49F8  
                                    l2776 49A2                                      l2792 4B38  
                                    l1888 3FEE                                      l1976 5C1C  
                              _Led1OutSts 01FA                                      l2937 5D4C  
                                    l1889 3FFC                                      l2778 49C0  
                                    l1978 5C22                                      l2779 49B8  
                                    l2795 4B58                                      l2947 4114  
                                    l2796 4B62                                      l2788 4B1E  
                                    l2981 4A66                                      l2797 4B70  
                                    l2789 4B2A                                      l2949 4150  
                                    l1989 4E64                                      l2982 4A74  
                                    l2977 4A32                                      l2978 4A26  
                                    l9135 59AA                                      l7647 3426  
                                    l8475 5466                                      STR_1 FFE5  
                                    STR_2 FF81                                      STR_3 FFDE  
                                    STR_4 FFC2                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FEB6                                      l8999 4758  
                                    STR_9 FEEA                                _Led2OutSts 01F8  
                                    u5200 34BA                                _Led3OutSts 01F6  
                                    u6010 4A36                                      u5207 34B0  
                                    u5180 3478                                      u5340 2978  
                                    u5350 29A8                                      u5370 29FA  
                                    u7035 5ECC                                      u5187 346E  
                                    u5347 296E                                      u7036 5ECE  
                                    u5357 299E                                      u8015 5EB6  
                                    u8016 5EBA                                      u6185 5F20  
                                    u5377 29F0                                      u8025 5418  
                                    u6186 5F22                                      u8026 541A  
                                    u8035 5424                                      u8036 5426  
                                    u9101 4DF6                                      u8045 5432  
                                    u7190 5278                                      u8046 5434  
                                    u8055 543E                     ??_USBCtrlTrfTxService 007D  
                                    u8056 5440                                      u6820 49C4  
                                    _UCFG 000F39                                      u6915 53DC  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u9351 48BC                                      u9415 5B86  
                                    u6880 4B44                                      u9416 5B88  
                                    u9361 48D4                                      u9425 5B92  
                                    u9426 5B94                                      u9435 5B9E  
                                    _UEIE 000F37                                      u9436 5BA0  
                __size_of_Uart_Uart1RxIsr 0010                                      u7945 4BDE  
                                    u7955 5F34                                      u7956 5F36  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 5FF4  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 34D4  
                                    _main 5FB6                           ??_Mdm_IsRinging 0081  
                                    _itoa 55F6                          ?_SetUartBaudRate 0096  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 410C  
                                    _xtoi 3232                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 5FFC               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 473E               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 5742  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 5EA6  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 33FC                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 5F4A  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3A6E  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 50DA                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0089  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 57FE                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDD8                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DA  
                                   l13025 2F76                                     l12147 356A  
                                   l14031 4BF6                                     l11529 3192  
                                   l13163 2D34                                     l14043 2B5C  
                                   l13149 2CCA                                     l11485 5A6A  
                                   l12551 2040                                     l10871 5DC2  
                                   l13353 0FB0                                     l13519 09A4  
                                   l12579 20A8                                     l14367 4E8A  
                                   l14369 4EBA                                     l12965 43A4  
                                   l13669 1CB8                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4A02                                     STR_10 FF57  
                                   STR_11 FF65                                     STR_12 FFA9  
                                   STR_20 FF49                                     STR_13 FF73  
                                   STR_21 FE8C                                     STR_14 FED5  
                                   STR_15 FF13                                     STR_23 FEFF  
                                   STR_24 FFF4                                     STR_16 FF38  
                                   STR_25 FFF4                                     STR_17 FF8F  
                                   STR_26 FEB3                                     STR_18 FF9C  
                                   STR_27 FF27                                     STR_28 FFB6  
                         __end_of___awmod 4B7A                                     STR_29 FFD7  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 4A86  
                                   ?_utoa 008A                                     u10310 51FA  
                                   u11110 18AE                                     u10080 31C6  
                                   u10420 5388                                     u10340 5656  
                                   u11060 1864                                     u12020 4F70  
                                   u10260 1554                                     u11400 56AE  
                                   u12200 2346                                     u11090 189E  
                                   u12027 4F66                                     u12140 4220  
                                   u12220 235A                           ___awdiv@divisor 007F  
                                   u12150 423A                                     u11335 0AF4  
                                   u11440 4E4C                                     u10800 582C  
                                   u12080 366C                                     u11520 210C  
                                   u13040 1D2E                                     u11345 0B14  
                                   u10570 5BC0                                     u13130 25FA  
                  __end_of_USBDeviceTasks 1D32                                     u11355 0B9E  
                                   u10660 5852                                     u10750 284A  
                                   u12350 2D82                                     u10590 5AA6  
                                   u13150 263C                                     u11447 4E42  
                                   u11375 0C78                                     ?_xtoi 0083  
                                   u10680 585E                                     u13160 2654  
                                   u11385 0C98                                     u12281 2C8E  
                                   u13137 25F0                                     u11490 2064  
                                   u11395 0D22                                     u12291 2CA0  
                                   u13157 2632                                     u10870 462E  
                                   u13431 3E64                                     u13290 54F2  
                                   u11960 04BE                                     u13528 2C24  
                                   u13529 2C52                 ?_USBCtrlEPServiceComplete 0001  
                                   u13488 4C28                                     u13489 4C56  
                         __end_of___lwdiv 522A                           __end_of___lwmod 567E  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 216C                                     i1l747 22A8  
                                   i2l680 3996                                     i2l681 38E6  
                                   i2l690 3930                                     i2l682 38F4  
                                   i2l686 3916                                     i2l688 3988  
                                   i2l689 3950                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B1  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01EA  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4306  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00BE  
         __end_of_USBCtrlEPAllowDataStage 44E6                             _StringCompare 522A  
                                   _sd000 FE88                                     _sd001 FE41  
                                   _sd002 FE1B            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3746  
                             _ApnLenLocal 01F2                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5AC0  
                         __end_of_isdigit 5D54                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5962  
                         __end_of_isspace 5BCC                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5D10                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5C1A  
               __end_of_Rtcc_GetRtccValue 47D2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4CC8                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 50DA  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 367A  
                         __end_of_tolower 5E76                       __end_of_Mcu_Int0Isr 6024  
                     __end_of_Mcu_Int1Isr 6020                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 5E8E  
                  __end_of_GetElapsedTime 3B36                     __end_of_UartSetConfig 4FD2  
                  __size_of_initGprsModem 0046               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5E5E                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 3064                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5B78  
                          _InitSchedTimer 5AF0                           __initialization 268A  
                        __end_of_MdmCntSm 425E                      __end_of_I2c_ReadData 1FFE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3CC2  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 3E42  
                            __end_of_atoi 35AC                              __end_of_main 5FC2  
                     StringCompare@Result 0085                              __end_of_itoa 563A  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01E2  
                            __end_of_utoa 41B6                              __end_of_xtoi 3318  
                __end_of_Rtcm_SetRtccDate 5182                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 5FE0  
                    Term_MainSm@TermDelay 03CC                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE76                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00AC  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4614                                _ReceiveEvt 5B1E  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 5F6A                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 4A86  
                            _cdc_mem_type 01E3                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03ED                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00B8  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 39A6  
              _Uart_MdmGsmGprsReadService 38DC                __end_of_UsbDevice_MainTask 5C3E  
                         getsUSBUSART@len 0086                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 5DB6                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1395 595C                               _GenerateEvt 5E8E  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC5D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 4D34  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5B1E  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6014                                _UartConfig 0328  
                    __end_of_Mdm_MainTask 531C                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CA                             ??_Term_MainSm 00A7  
                                  _Relay1 01DD                                    _Relay2 01DC  
                                  _Relay3 01DB                                    _Relay4 01DA  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 54E2                                    _SmsLen 00D1  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5408  
                                  ___lmul 4FD2                      _I2cSlv_ReceiveI2cMsg 56C2  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 5BCC                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 531C                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5182                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 46AA                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 55B2  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 5454  
                  __size_of_HttpGetMethod 04D0                                    _memset 5A60  
                                  clear_0 272A                                    clear_1 273C  
                                  clear_2 2748                                    clear_3 2754  
                                  clear_4 2760                                    clear_5 276C  
                                  clear_6 2778                                    clear_7 2784  
                                  clear_8 2790                                    clear_9 279C  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E4  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EF  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 0026                        ?_USBEnableEndpoint 0085  
                                  _strcat 4F1E                                    _strcpy 59FE  
                                  _strlen 5782                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 5878                  HttpGetMethod@UartMessage 0100  
                           _initGprsModem 54E2                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                            _CDCTxService 2544                       ModemEvtParser@F9090 04EF  
                     ModemEvtParser@F9086 03C0                       ModemEvtParser@F9088 03BB  
                     MdmCntSm@MdmCntState 002E                              MyApp_Task@on 013E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC54                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 600C  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 512E                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6020  
                             _Mcu_Int1Isr 601C                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 009B  
                    _controlTransferState 00C9                     __end_ofi1_GenerateEvt 5EE8  
                   __end_of_Rtcm_MainTask 48F0                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E2                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 27BA  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 6018                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 011A               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 53BA           I2cSlv_QueryI2cData@TimeoutTimer 033D  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 4E00                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FC                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DE                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 55F6  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE8C  
                           __end_of_sd001 FE5F                             __end_of_sd002 FE41  
                            __pidataBANK1 6024                              __pidataBANK2 5FA8  
                            __pidataBANK3 5742                              __pidataBANK4 5EFE  
                            __pidataBANK5 527C                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 567E  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 59CC  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 5E2A               __end_of_USBCtrlTrfInHandler 3D84  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 5ED2                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E9  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5A30                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 2F7C                       __end_of_Rtcc_RtcIsr 601C  
                              _cdc_rx_len 00C2                         __end_of_MsgFormat FD4F  
                              _cdc_tx_len 00C0                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5962                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E4                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4306                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5B78                    _USBStdGetStatusHandler 3EFE  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F1                            _Rtcc_RtcConfig 43A8  
                              __pbssBANK0 00AC                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 07C4                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 5EFE                  __end_of_Uart_WriteString 583C  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5CAA                               _SetBaudRate 53BA  
               initGprsModem@modemCounter 03B9               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F3                               _pBDTEntryIn 00B2  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 2E8E  
                               ?_TmrBInit 007D                             _CheckTxStatus 5FE0  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 367A  
                          _Rtcc_UnlockRtc 5F4A                              _I2cBusStatus 01EB  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2B52                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 01D4                     __end_of_I2c_WriteData 1EA0  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE76                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 46AA                     __end_of_UpdateSchFlag 5E0E  
                       MyApp_Task@smsText 0100                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D6                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2B52                         __end_of_WriteByte 5FD6  
                      _USBCheckStdRequest 3318                         _configDescriptor1 FDD8  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04C6  
             __end_of_USBCtrlTrfTxService 34D4                       _USBStdSetCfgHandler 314C  
                       triggerRelay@F8966 03CA                   __size_of_ConfigureModem 00CA  
                  I2cSlv_QueryI2cData@Ret 01E8                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5B4C                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4448  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 1EA0  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3BFE                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01E0            __end_of_Pm_DsReleasePinControl 6002  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00BC                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DE                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 002A  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 5FA8                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0088                             _cdc_trf_state 00C1  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6008                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 5C86  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DF  
                                 _RelayB2 01DE                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D5  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4C5C                    __end_of_Rtcc_UnlockRtc 5F5A  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 5F26                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD4F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 5DD4  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 5EBC  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 497C  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4B08  
                                 ___lldiv 4A02                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 51D6  
                       ??_USBStallHandler 007D                                   ___lwmod 563A  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6018                      __size_of_putUSBUSART 0022  
                                 __pcinit 268A                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CC  
                     __end_of_TurnOnModem 556E                           __size_of_memset 0030  
                               _I2cConfig 0353                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FE1B                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0089                     MyApp_Task@countRelay1 01FD  
                   MyApp_Task@countRelay2 03C8                               Terminal@Len 03AD  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 5FB6  
                                 __ptext1 5A30                                   __ptext2 5FC2  
                                 __ptext3 5FFC                                   __ptext4 5DB6  
                                 __ptext5 5E2A                                   __ptext6 5B78  
                                 __ptext7 5AF0                                   __ptext8 39A6  
                                 __ptext9 2E8E                                   _inPipes 00AC  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 43A8                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5A90  
                                 _isdigit 5D32                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00AC                               ?_SystemInit 0001  
                                 clear_10 27A8                                   clear_11 27B4  
                        ___awmod@dividend 007D                         ??_InitializeTasks 00A7  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02EA  
     __end_of_Tmr_RegisterTmr2IsrCallback 5FCC               _Tmr_RegisterTmr2IsrCallback 5FC2  
                                 _isspace 5BA2                              _Mdm_MainTask 52CC  
                                 _isupper 5CEE               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2154                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC5D                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 5C86                                   _sprintf 35AC  
                                 _tolower 5E5E           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 5F8A                          _HttpGetDataLocal 03A4  
                __end_of_Mdm_SetSmsFormat 536C                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 4060                                   _toupper 5E76  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 27BA                              _getsUSBUSART 4614  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00D9  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC5B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0083  
                                 memcpy@n 0081                                   memcpy@s 0085  
                     _pBDTEntryEP0OutNext 00BA                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC54  
                          _ModemEvtParser 2C74                                   int_func 4060  
                               i1u1334_20 216A                           _USB1msTickCount 0318  
                               i1u1338_28 228A                                 i1u1338_29 229E  
         _dummy_encapsulated_cmd_response 0378                                 i1u1356_28 5C96  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                           MyApp_Task@off 013C                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 5DF2                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 5EA6                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 59FE                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 4448  
                      _UsbDevice_MainTask 5C1A                              _Mcu_ClearWdg 6008  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 2D8E  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EC  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 23FC  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C5  
              _USBStatusStageEnabledFlag2 00C4                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5CCC                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5D76  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01F0  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E5                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 003C                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 2D8E  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D3                     __end_of_StopCondition 6010  
                __size_of_HighPriorityIsr 4104                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 036F                                 _Led2Blink 0366  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035D  
            __end_of_USBTransferOnePacket 3E42                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0393                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 5EBC                                 _Led2Pulse 038D  
                               _Led3Pulse 0387                         _I2cSlv_SendI2cMsg 57C0  
         SetBaudRate@DesiredI2cBusClockHz 0096                         ??_blinkForSeconds 0095  
                         ??_ScheduleTasks 00A7                            _Tmr_TmrBConfig 39A6  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 5F38  
                       _OsAlrm_SetOsAlarm 3B36                      Terminal@TermRxBuffer 0550  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5408                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5528                              ??_MyApp_Task 0099  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D7  
                  _USBCtrlTrfSetupHandler 48F0                        ?_OsAlrm_SetOsAlarm 0083  
                   __end_of_USBDeviceInit 2154     __end_of_USBIncrement1msInternalTimers 5CEE  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 5CCC  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 502A  
                          _CheckAckStatus 5FEA                            __end_of___wmul 5BF4  
                     ??_I2cSlv_SendI2cMsg 0084                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 549C                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5A90  
                      _UartTxBufferStatus 536C                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E6                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 5F9A                                 _MdmStatus 00CF  
                          __end_of_strcat 4F7A                            __end_of_strcpy 5A30  
                          __end_of_strlen 57C0                            __end_of_strtol 19F2  
                     start_initialization 268A                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3812  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5998  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0454                               _cdc_data_tx 0784  
            __end_of_USBConfigureEndpoint 457E           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC5F                        __end_of_MyApp_Task 3EFE  
                        _UpdateOsCounters 5F7A                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 00E8  
       __end_of_USBCtrlEPAllowStatusStage 3812                 __end_of_I2cSlv_SendI2cMsg 57FE  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 473E                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 5F6A  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3A6E                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3BFE                    __end_of_Tmr_TmrBIrqSet 5454  
                               _TaskTable 0582                                 _RingEvent 00DC  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D2                         __size_of_ReadByte 000A  
                               _RtcConfig 03B5                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 4F7A  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5B4C  
                  _pBDTEntryEP0OutCurrent 00BC                             _Term_MainTask 5E44  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                             _isxdigit$6415 0081  
                  __end_of_CheckAckStatus 5FF4                                  ??___lmul 0085  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2900                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4B08                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FD                               __pdataBANK2 02F3  
                             __pdataBANK3 03BB                               __pdataBANK4 04E5  
                             __pdataBANK5 0582                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 51D6                    __end_of_ConfigureModem 38DC  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D4  
          __end_of_USBStdGetStatusHandler 3FB0                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC5F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 527C  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D3                              _SetAckStatus 5F12  
                            _isalpha$6405 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 5FCC                              _isdigit$6139 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DC  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5702  
     InitGprsNetwork@GprsNetInitNextState 00CE                      MyApp_Task@blickTicks 03F8  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 5D96  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 58EE  
            __end_of_LedBlinkStateMachine 2544                               sprintf@flag 0083  
                         _USBStallHandler 556E                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 5E2A  
              __end_of_USBCheckCDCRequest 4060              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5082                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 5D96                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5AC0                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 5D54  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC54  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5C62  
                               __ptext101 5878                                 __ptext110 2F7C  
                               __ptext102 5182                                 __ptext111 3812  
                               __ptext103 4F7A                                 __ptext120 05EC  
                               __ptext112 0ABC                                 __ptext104 5528  
                               __ptext121 57FE                                 __ptext113 27C8  
                               __ptext105 19F2                                 __ptext130 5962  
                               __ptext122 567E                                 __ptext114 4FD2  
                               __ptext106 5702                             Terminal@Index 00A6  
                               __ptext131 425E                                 __ptext123 5D96  
                               __ptext115 502A                                 __ptext107 2C74  
                               __ptext140 4A02                                 __ptext132 3064  
                               __ptext124 536C                                 __ptext116 22AA  
                               __ptext108 5998                                 __ptext141 5B4C  
                               __ptext133 5AC0                                 __ptext125 4E00  
                               __ptext117 41B6                                 __ptext109 522A  
                               __ptext150 5FD6                                 __ptext142 3BFE  
                               __ptext134 23FC                                 __ptext126 4EC0  
                               __ptext118 5FF4                                 __ptext151 5E8E  
                               __ptext143 5B1E                                 __ptext135 51D6  
                               __ptext127 47D2                                 __ptext119 0DC8  
                               __ptext160 2154                                 __ptext152 6014  
                               __ptext144 1D32                                 __ptext136 3B36  
                               __ptext128 3A6E                                 __ptext161 5BF4  
                               __ptext153 5FE0                                 __ptext145 1EA0  
                               __ptext137 5BCC                                 __ptext129 5F38  
                               __ptext170 6018                                 __ptext162 5082  
                               __ptext154 5FEA                                 __ptext146 5FCC  
                               __ptext138 4B7A                                 __ptext171 601C  
                               __ptext163 5E0E                                 __ptext147 600C  
                               __ptext139 53BA                                 __ptext172 6020  
                               __ptext164 5928                                 __ptext156 5C86  
                               __ptext148 6010                                 __ptext173 0000  
                               __ptext165 5ED2                                 __ptext157 5F9A  
                               __ptext149 5F12                                 __ptext158 5DF2  
                               __ptext167 5F8A                                 __ptext159 5F7A  
                               __ptext168 38DC                                 __ptext169 5EE8  
                                ?___awmod 007D                        _Sch_SchmIntService 5F9A  
                         _InitializeTasks 4BEC                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 0348  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 0399                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 3D84  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
                    MyApp_Task@isRelay1On 01D7                      MyApp_Task@isRelay2On 01D6  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 0440  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039F  
          InitializeTasks@ActiveTaskIndex 00A9                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 5878  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0500  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 4D9A  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 4D9A                ConfigureModem@DelayCounter 02D6  
                      __end_of_StringCopy 4E62                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00DD                           Terminal@SwTimer 04DA  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 01D9                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D8                          _OsTmr_StartTimer 4EC0  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 5ED2                __end_of_Mcu_StartSystemPll 5DD4  
                            _PhoneNumbLen 00D0                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 5CAA                             _Rtcm_MainTask 4862  
                          ___wmul@product 0081                          SendSmsSm@SwTimer 03E2  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00CD                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4B7A                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5A60                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 00C3  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 4862                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 009C  
                    _USBConfigureEndpoint 44E6          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 22AA  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 5BF4  
                   __end_of_initGprsModem 5528                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 5FFC  
                  __end_of_Mdm_GetSmsData 58B4                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E7                                  _ApnLocal 0326  
                          _StartCondition 6010                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01ED  
                           _Tmr_TmrBPrSet 2E8E                         _NewStringReceived 003C  
                            _isspace$6408 007E                          _UartSetConfigLow 502A  
                                _GetSmsSm 2F7C                   __end_of_USBStallHandler 55B2  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 58EE  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03D7  
                                _MdmCntSm 41B6                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 269E  
                               copy_data1 26BE                                 copy_data2 26DE  
                               copy_data3 2716              __end_of_LedPulseStateMachine 314C  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3232                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 5FD6  
                           i2_GenerateEvt 5EE8                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE88  
               __end_of_I2c_InitI2cModule 4BEC                                  _MsgReady FE5F  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 4C5C  
              initGprsModem@isInitialized 01D8                   ?_USBCtrlTrfSetupHandler 0001  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 457E                      __size_of_SetBaudRate 004E  
                            ?_TurnOnModem 0001                                  _TxBuffer 0322  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0087  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DB                           _SetUartBaudRate 27C8  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 1D32  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 5F8A                           MyApp_Task@F8990 03C6  
                        __size_of___lldiv 0084                           MyApp_Task@F8993 03C4  
                         MyApp_Task@F8996 0320                           MyApp_Task@F8999 04E5  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 5DF2  
                     __end_of_putUSBUSART 5D32                               _line_coding 0380  
                            _Rtcc_LockRtc 5F5A                      _LedBlinkStateMachine 23FC  
                  __end_of_StartCondition 6014                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F4  
               Rtcm_GetRtccDate@LocalDate 008A                           ?_Mdm_GetSmsData 0087  
                I2c_WriteData@WriteStatus 0035                              _isupper$6411 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 5F38                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A9  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0132                                  __ptext10 5408  
                                __ptext11 5D76                                  __ptext20 5C1A  
                                __ptext12 457E                                  __ptext21 549C  
                                __ptext13 5DD4                           ??_UartWriteByte 007E  
                                __ptext30 59CC                                  __ptext22 52CC  
                                __ptext14 2B52                                  __ptext31 556E  
                                __ptext23 50DA                                  __ptext15 4BEC  
                                __ptext40 314C                                  __ptext32 5CCC  
                                __ptext24 6002                                  __ptext16 3E42  
                                __ptext41 3EFE                                  __ptext33 1FFE  
                                __ptext25 5CAA                                  __ptext17 5E44  
                                __ptext50 2A2E                                  __ptext42 2900  
                                __ptext34 46AA                                  __ptext26 5F26  
                                __ptext18 4862                                  __ptext51 3746  
                                __ptext43 135A                                  __ptext35 5454  
                                __ptext27 6008                                  __ptext19 367A  
                                __ptext60 00D0                                  __ptext52 3CC2  
                                __ptext44 4E62                                  __ptext36 48F0  
                                __ptext28 1BAA                                  __ptext61 3232  
                                __ptext53 33FC                                  __ptext45 3FB0  
                                __ptext37 2D8E                                  __ptext29 58B4  
                                __ptext70 5D10                                  __ptext62 5E5E  
                                __ptext54 2544                                  __ptext46 4C5C  
                                __ptext38 4448                                  __ptext71 55F6  
                                __ptext63 583C                                  __ptext55 10B6  
                                __ptext47 55B2                                  __ptext39 3318  
                                __ptext80 56C2                                  __ptext72 410C  
                                __ptext64 181C                                  __ptext56 5782  
                                __ptext48 44E6                                  __ptext81 5D54  
                                __ptext73 563A                                  __ptext65 5E76  
                                __ptext57 4F1E                                  __ptext49 4D34  
                                __ptext90 5EA6                                  __ptext82 512E  
                                __ptext74 4614                                  __ptext66 5BA2  
                                __ptext58 35AC                                  __ptext91 43A8  
                                __ptext83 5F4A                                  __ptext75 3D84  
                                __ptext67 5A90                                  __ptext59 5A60  
                                __ptext92 5EBC                                  __ptext84 15EE  
                                __ptext76 34D4                                  __ptext68 5CEE  
                                __ptext93 4CC8                                  __ptext85 4B08  
                                __ptext77 5D32                                  __ptext69 59FE  
                                __ptext94 54E2                                  __ptext86 497C  
                                __ptext78 4A86                                  __ptext95 531C  
                                __ptext87 5F5A                                  __ptext79 57C0  
                                __ptext96 58EE                                  __ptext88 4D9A  
                                __ptext97 4306                                  __ptext89 473E  
                                __ptext98 5F6A                                  __ptext99 5C3E  
                        __size_of_isupper 0022                                _I2cDummyTx 5E0E  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5C3E  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 497C  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 5FEA  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6002  
                      ??_USBCtrlEPService 0097                                  _isxdigit 583C  
                           _Mdm_IsRinging 5C62                       _USBCtrlTrfInHandler 3CC2  
                I2c_ReadData@I2cReadState 0034                __end_of_Mdm_RequestSmsData 5F7A  
                   __end_of_ScheduleTasks 2C74                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                 blinkForSeconds@blickTicks 0093  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4D34  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3746  
                     ??_Mdm_IsSmsReceived 0081                 MyApp_Task@I2cTxBufferTest 0140  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 00AB  
                              strtol@sign 0093                           Term_MainSm@Data 0494  
                          _PhoneNumberLen 0324                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5928  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5928  
                __end_of_Mcu_ConfigExtInt 5E44                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C6                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5D76                  __end_of_Led_SetLedStatus 5AF0  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 512E                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 5C62                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 47D2  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4EC0  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 4E62                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                            MyApp_Task@test 01D5  
                 __end_of_SetUartBaudRate 2900                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0092                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 56C2                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate 4E00  
                             _putUSBUSART 5D10                       _USBCtrlTrfRxService 2A2E  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 58B4                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 4F1E                      _LedPulseStateMachine 3064  
                      _USBCheckCDCRequest 3FB0                       _USBCtrlTrfTxService 33FC  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                        _Rtcc_AlarmConfig 4CC8                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FE                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01E1                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 549C                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5BA2  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00C8  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 425E          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 600C                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C7  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 5998                      __end_of_CDCTxService 268A  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC5B                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 0027                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 5F26  
