

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 26 20:46:40 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   218                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   219                           	psect	text181,global,reloc=2,class=CODE,delta=1
   220                           	psect	text182,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   226                           	psect	text187,global,reloc=2,class=CODE,delta=1
   227                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   228                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   229                           	dabs	1,0x400,48,_BDT
   230                           	dabs	1,0x438,8,_CtrlTrfData
   231                           	dabs	1,0x430,8,_SetupPkt
   232  0000                     
   233                           ; Version 1.45
   234                           ; Generated 16/11/2017 GMT
   235                           ; 
   236                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   237                           ; All rights reserved.
   238                           ; 
   239                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   240                           ; 
   241                           ; Redistribution and use in source and binary forms, with or without modification, are
   242                           ; permitted provided that the following conditions are met:
   243                           ; 
   244                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   245                           ;        conditions and the following disclaimer.
   246                           ; 
   247                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   248                           ;        of conditions and the following disclaimer in the documentation and/or other
   249                           ;        materials provided with the distribution.
   250                           ; 
   251                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   252                           ;        software without specific prior written permission.
   253                           ; 
   254                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   255                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   256                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   257                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   258                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   259                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   260                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   261                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   262                           ; 
   263                           ; 
   264                           ; Code-generator required, PIC18F46J50 Definitions
   265                           ; 
   266                           ; SFR Addresses
   267  0000                     
   268                           	psect	idataBANK0
   269  0067AC                     __pidataBANK0:
   270                           	opt stack 0
   271                           
   272                           ;initializer for isNumberInMemory@currentPosition
   273  0067AC  10                 	db	16
   274                           
   275                           	psect	idataBANK1
   276  0067AA                     __pidataBANK1:
   277                           	opt stack 0
   278                           
   279                           ;initializer for _isMemoryEmpty
   280  0067AA  01                 	db	1
   281                           
   282                           ;initializer for InitGprsNetwork@GprsInitSts
   283  0067AB  01                 	db	1
   284                           
   285                           	psect	idataBANK2
   286  006722                     __pidataBANK2:
   287                           	opt stack 0
   288                           
   289                           ;initializer for Terminal@EchoOption
   290  006722  01                 	db	1
   291                           
   292                           ;initializer for _MainSystemTimebaseFlag
   293  006723  01                 	db	1
   294                           
   295                           ;initializer for _ConnTimeout
   296  006724  00                 	db	0
   297  006725  01                 	db	1
   298  006726  0000               	dw	0
   299  006728  0000               	dw	0
   300  00672A  0000               	dw	0
   301  00672C  0000               	dw	0
   302  00672E  00                 	db	0
   303                           
   304                           	psect	idataBANK3
   305  005B8A                     __pidataBANK3:
   306                           	opt stack 0
   307                           
   308                           ;initializer for ModemEvtParser@F9112
   309  005B8A  43                 	db	67
   310  005B8B  61                 	db	97
   311  005B8C  6C                 	db	108
   312  005B8D  6C                 	db	108
   313  005B8E  20                 	db	32
   314  005B8F  52                 	db	82
   315  005B90  65                 	db	101
   316  005B91  61                 	db	97
   317  005B92  64                 	db	100
   318  005B93  79                 	db	121
   319                           
   320                           ;initializer for ModemEvtParser@F9110
   321  005B94  2B                 	db	43
   322  005B95  43                 	db	67
   323  005B96  4D                 	db	77
   324  005B97  54                 	db	84
   325  005B98  49                 	db	73
   326                           
   327                           ;initializer for ModemEvtParser@F9108
   328  005B99  2B                 	db	43
   329  005B9A  43                 	db	67
   330  005B9B  4C                 	db	76
   331  005B9C  49                 	db	73
   332  005B9D  50                 	db	80
   333                           
   334                           ;initializer for ModemEvtParser@F9106
   335  005B9E  52                 	db	82
   336  005B9F  49                 	db	73
   337  005BA0  4E                 	db	78
   338  005BA1  47                 	db	71
   339                           
   340                           ;initializer for MyApp_Task@F9031
   341  005BA2  63                 	db	99
   342  005BA3  61                 	db	97
   343  005BA4  74                 	db	116
   344                           
   345                           ;initializer for triggerRelay@F9023
   346  005BA5  50                 	db	80
   347  005BA6  00                 	db	0
   348                           
   349                           ;initializer for Term_MainSm@TermDelay
   350  005BA7  01                 	db	1
   351  005BA8  01                 	db	1
   352  005BA9  0000               	dw	0
   353  005BAB  0000               	dw	0
   354  005BAD  0000               	dw	0
   355  005BAF  0000               	dw	0
   356  005BB1  00                 	db	0
   357                           
   358                           ;initializer for _ConnWait
   359  005BB2  00                 	db	0
   360  005BB3  01                 	db	1
   361  005BB4  0000               	dw	0
   362  005BB6  0000               	dw	0
   363  005BB8  0000               	dw	0
   364  005BBA  0000               	dw	0
   365  005BBC  00                 	db	0
   366                           
   367                           ;initializer for SendSmsSm@SwTimer
   368  005BBD  01                 	db	1
   369  005BBE  01                 	db	1
   370  005BBF  0000               	dw	0
   371  005BC1  0000               	dw	0
   372  005BC3  0000               	dw	0
   373  005BC5  0000               	dw	0
   374  005BC7  00                 	db	0
   375                           
   376                           ;initializer for CheckModem@Timeout
   377  005BC8  00                 	db	0
   378  005BC9  01                 	db	1
   379  005BCA  0000               	dw	0
   380  005BCC  0000               	dw	0
   381  005BCE  0000               	dw	0
   382  005BD0  0000               	dw	0
   383  005BD2  00                 	db	0
   384                           
   385                           	psect	idataBANK4
   386  00672F                     __pidataBANK4:
   387                           	opt stack 0
   388                           
   389                           ;initializer for MyApp_Task@smsPhoneNumber
   390  00672F  2B                 	db	43
   391  006730  33                 	db	51
   392  006731  39                 	db	57
   393  006732  30                 	db	48
   394  006733  31                 	db	49
   395  006734  32                 	db	50
   396  006735  33                 	db	51
   397  006736  34                 	db	52
   398  006737  35                 	db	53
   399  006738  36                 	db	54
   400  006739  37                 	db	55
   401  00673A  38                 	db	56
   402  00673B  39                 	db	57
   403                           
   404                           	psect	idataBANK5
   405  005964                     __pidataBANK5:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _TaskTable
   409  005964  88                 	db	low _Mdm_DrvMainFn
   410  005965  67                 	db	high _Mdm_DrvMainFn
   411  005966  00                 	db	0
   412  005967  0000               	dw	0
   413  005969  000A               	dw	10
   414  00596B  00                 	db	0
   415  00596C  1C                 	db	low _I2cSlv_MainTask
   416  00596D  57                 	db	high _I2cSlv_MainTask
   417  00596E  00                 	db	0
   418  00596F  0000               	dw	0
   419  005971  0001               	dw	1
   420  005973  00                 	db	0
   421  005974  B4                 	db	low _Mdm_MainTask
   422  005975  59                 	db	high _Mdm_MainTask
   423  005976  00                 	db	0
   424  005977  0000               	dw	0
   425  005979  0001               	dw	1
   426  00597B  00                 	db	0
   427  00597C  64                 	db	low _MdmHttp_MainTask
   428  00597D  5C                 	db	high _MdmHttp_MainTask
   429  00597E  00                 	db	0
   430  00597F  0000               	dw	0
   431  005981  0001               	dw	1
   432  005983  00                 	db	0
   433  005984  42                 	db	low _UsbDevice_MainTask
   434  005985  63                 	db	high _UsbDevice_MainTask
   435  005986  00                 	db	0
   436  005987  0000               	dw	0
   437  005989  0001               	dw	1
   438  00598B  00                 	db	0
   439  00598C  D2                 	db	low _Wdg_MainTask
   440  00598D  63                 	db	high _Wdg_MainTask
   441  00598E  00                 	db	0
   442  00598F  0000               	dw	0
   443  005991  0064               	dw	100
   444  005993  00                 	db	0
   445  005994  3C                 	db	low _Led_MainTask
   446  005995  3B                 	db	high _Led_MainTask
   447  005996  00                 	db	0
   448  005997  0000               	dw	0
   449  005999  0032               	dw	50
   450  00599B  00                 	db	0
   451  00599C  BE                 	db	low _Rtcm_MainTask
   452  00599D  4C                 	db	high _Rtcm_MainTask
   453  00599E  00                 	db	0
   454  00599F  0000               	dw	0
   455  0059A1  0064               	dw	100
   456  0059A3  00                 	db	0
   457  0059A4  8C                 	db	low _Term_MainTask
   458  0059A5  65                 	db	high _Term_MainTask
   459  0059A6  00                 	db	0
   460  0059A7  0000               	dw	0
   461  0059A9  0001               	dw	1
   462  0059AB  00                 	db	0
   463  0059AC  EE                 	db	low _MyApp_Task
   464  0059AD  15                 	db	high _MyApp_Task
   465  0059AE  00                 	db	0
   466  0059AF  0000               	dw	0
   467  0059B1  0064               	dw	100
   468  0059B3  00                 	db	0
   469                           
   470                           	psect	mediumconst
   471  00FC1C                     __pmediumconst:
   472                           	opt stack 0
   473  00FC1C  00                 	db	0
   474  00FC1D                     _USB_SD_Ptr:
   475                           	opt stack 0
   476  00FC1D  5A                 	db	low _sd000
   477  00FC1E  FE                 	db	high _sd000
   478  00FC1F  13                 	db	low _sd001
   479  00FC20  FE                 	db	high _sd001
   480  00FC21  ED                 	db	low _sd002
   481  00FC22  FD                 	db	high _sd002
   482  00FC23                     __end_of_USB_SD_Ptr:
   483                           	opt stack 0
   484  00FC23                     MyApp_Task@F9029:
   485                           	opt stack 0
   486  00FC23  4E                 	db	78
   487  00FC24  55                 	db	85
   488  00FC25  4D                 	db	77
   489  00FC26  2B                 	db	43
   490  00FC27                     __end_ofMyApp_Task@F9029:
   491                           	opt stack 0
   492  00FC27                     parseCommand@F9017:
   493                           	opt stack 0
   494  00FC27  44                 	db	68
   495  00FC28  45                 	db	69
   496  00FC29  4C                 	db	76
   497  00FC2A                     __end_ofparseCommand@F9017:
   498                           	opt stack 0
   499  00FC2A                     parseCommand@F9015:
   500                           	opt stack 0
   501  00FC2A  41                 	db	65
   502  00FC2B  44                 	db	68
   503  00FC2C  44                 	db	68
   504  00FC2D                     __end_ofparseCommand@F9015:
   505                           	opt stack 0
   506  00FC2D                     _USB_CD_Ptr:
   507                           	opt stack 0
   508  00FC2D  AA                 	db	low _configDescriptor1
   509  00FC2E  FD                 	db	high _configDescriptor1
   510  00FC2F                     __end_of_USB_CD_Ptr:
   511                           	opt stack 0
   512  00FC2F                     _TaskNumber:
   513                           	opt stack 0
   514  00FC2F  000A               	dw	10
   515  00FC31                     __end_of_TaskNumber:
   516                           	opt stack 0
   517  00FC31                     _MsgFormat:
   518                           	opt stack 0
   519  00FC31  48                 	db	72
   520  00FC32  6F                 	db	111
   521  00FC33  73                 	db	115
   522  00FC34  74                 	db	116
   523  00FC35  20                 	db	32
   524  00FC36  6D                 	db	109
   525  00FC37  65                 	db	101
   526  00FC38  73                 	db	115
   527  00FC39  73                 	db	115
   528  00FC3A  61                 	db	97
   529  00FC3B  67                 	db	103
   530  00FC3C  65                 	db	101
   531  00FC3D  20                 	db	32
   532  00FC3E  66                 	db	102
   533  00FC3F  6F                 	db	111
   534  00FC40  72                 	db	114
   535  00FC41  6D                 	db	109
   536  00FC42  61                 	db	97
   537  00FC43  74                 	db	116
   538  00FC44  3A                 	db	58
   539  00FC45  20                 	db	32
   540  00FC46  0D                 	db	13
   541  00FC47  0A                 	db	10
   542  00FC48  5B                 	db	91
   543  00FC49  6F                 	db	111
   544  00FC4A  70                 	db	112
   545  00FC4B  5F                 	db	95
   546  00FC4C  74                 	db	116
   547  00FC4D  79                 	db	121
   548  00FC4E  70                 	db	112
   549  00FC4F  65                 	db	101
   550  00FC50  5D                 	db	93
   551  00FC51  3A                 	db	58
   552  00FC52  5B                 	db	91
   553  00FC53  6F                 	db	111
   554  00FC54  70                 	db	112
   555  00FC55  5D                 	db	93
   556  00FC56  3A                 	db	58
   557  00FC57  5B                 	db	91
   558  00FC58  6C                 	db	108
   559  00FC59  65                 	db	101
   560  00FC5A  6E                 	db	110
   561  00FC5B  5D                 	db	93
   562  00FC5C  3A                 	db	58
   563  00FC5D  5B                 	db	91
   564  00FC5E  61                 	db	97
   565  00FC5F  64                 	db	100
   566  00FC60  64                 	db	100
   567  00FC61  72                 	db	114
   568  00FC62  5D                 	db	93
   569  00FC63  3A                 	db	58
   570  00FC64  5B                 	db	91
   571  00FC65  70                 	db	112
   572  00FC66  61                 	db	97
   573  00FC67  79                 	db	121
   574  00FC68  6C                 	db	108
   575  00FC69  6F                 	db	111
   576  00FC6A  61                 	db	97
   577  00FC6B  64                 	db	100
   578  00FC6C  5D                 	db	93
   579  00FC6D  0D                 	db	13
   580  00FC6E  0A                 	db	10
   581  00FC6F  0D                 	db	13
   582  00FC70  0A                 	db	10
   583  00FC71  5B                 	db	91
   584  00FC72  6F                 	db	111
   585  00FC73  70                 	db	112
   586  00FC74  5F                 	db	95
   587  00FC75  74                 	db	116
   588  00FC76  79                 	db	121
   589  00FC77  70                 	db	112
   590  00FC78  65                 	db	101
   591  00FC79  5D                 	db	93
   592  00FC7A  20                 	db	32
   593  00FC7B  3D                 	db	61
   594  00FC7C  20                 	db	32
   595  00FC7D  53                 	db	83
   596  00FC7E  4F                 	db	79
   597  00FC7F  2C                 	db	44
   598  00FC80  53                 	db	83
   599  00FC81  42                 	db	66
   600  00FC82  0D                 	db	13
   601  00FC83  0A                 	db	10
   602  00FC84  5B                 	db	91
   603  00FC85  6F                 	db	111
   604  00FC86  70                 	db	112
   605  00FC87  5D                 	db	93
   606  00FC88  20                 	db	32
   607  00FC89  3D                 	db	61
   608  00FC8A  20                 	db	32
   609  00FC8B  52                 	db	82
   610  00FC8C  3A                 	db	58
   611  00FC8D  20                 	db	32
   612  00FC8E  72                 	db	114
   613  00FC8F  65                 	db	101
   614  00FC90  61                 	db	97
   615  00FC91  64                 	db	100
   616  00FC92  2C                 	db	44
   617  00FC93  57                 	db	87
   618  00FC94  3A                 	db	58
   619  00FC95  20                 	db	32
   620  00FC96  77                 	db	119
   621  00FC97  72                 	db	114
   622  00FC98  69                 	db	105
   623  00FC99  74                 	db	116
   624  00FC9A  65                 	db	101
   625  00FC9B  0D                 	db	13
   626  00FC9C  0A                 	db	10
   627  00FC9D  5B                 	db	91
   628  00FC9E  6C                 	db	108
   629  00FC9F  65                 	db	101
   630  00FCA0  6E                 	db	110
   631  00FCA1  5D                 	db	93
   632  00FCA2  20                 	db	32
   633  00FCA3  3D                 	db	61
   634  00FCA4  20                 	db	32
   635  00FCA5  32                 	db	50
   636  00FCA6  20                 	db	32
   637  00FCA7  62                 	db	98
   638  00FCA8  79                 	db	121
   639  00FCA9  74                 	db	116
   640  00FCAA  65                 	db	101
   641  00FCAB  20                 	db	32
   642  00FCAC  41                 	db	65
   643  00FCAD  53                 	db	83
   644  00FCAE  43                 	db	67
   645  00FCAF  49                 	db	73
   646  00FCB0  49                 	db	73
   647  00FCB1  0D                 	db	13
   648  00FCB2  0A                 	db	10
   649  00FCB3  5B                 	db	91
   650  00FCB4  61                 	db	97
   651  00FCB5  64                 	db	100
   652  00FCB6  64                 	db	100
   653  00FCB7  72                 	db	114
   654  00FCB8  5D                 	db	93
   655  00FCB9  20                 	db	32
   656  00FCBA  3D                 	db	61
   657  00FCBB  20                 	db	32
   658  00FCBC  32                 	db	50
   659  00FCBD  20                 	db	32
   660  00FCBE  62                 	db	98
   661  00FCBF  79                 	db	121
   662  00FCC0  74                 	db	116
   663  00FCC1  65                 	db	101
   664  00FCC2  20                 	db	32
   665  00FCC3  41                 	db	65
   666  00FCC4  53                 	db	83
   667  00FCC5  43                 	db	67
   668  00FCC6  49                 	db	73
   669  00FCC7  49                 	db	73
   670  00FCC8  0D                 	db	13
   671  00FCC9  0A                 	db	10
   672  00FCCA  5B                 	db	91
   673  00FCCB  70                 	db	112
   674  00FCCC  61                 	db	97
   675  00FCCD  79                 	db	121
   676  00FCCE  6C                 	db	108
   677  00FCCF  6F                 	db	111
   678  00FCD0  61                 	db	97
   679  00FCD1  64                 	db	100
   680  00FCD2  5D                 	db	93
   681  00FCD3  20                 	db	32
   682  00FCD4  3D                 	db	61
   683  00FCD5  20                 	db	32
   684  00FCD6  6D                 	db	109
   685  00FCD7  61                 	db	97
   686  00FCD8  78                 	db	120
   687  00FCD9  20                 	db	32
   688  00FCDA  32                 	db	50
   689  00FCDB  30                 	db	48
   690  00FCDC  20                 	db	32
   691  00FCDD  62                 	db	98
   692  00FCDE  79                 	db	121
   693  00FCDF  74                 	db	116
   694  00FCE0  65                 	db	101
   695  00FCE1  20                 	db	32
   696  00FCE2  41                 	db	65
   697  00FCE3  53                 	db	83
   698  00FCE4  43                 	db	67
   699  00FCE5  49                 	db	73
   700  00FCE6  49                 	db	73
   701  00FCE7  0D                 	db	13
   702  00FCE8  0A                 	db	10
   703  00FCE9  0D                 	db	13
   704  00FCEA  0A                 	db	10
   705  00FCEB  54                 	db	84
   706  00FCEC  65                 	db	101
   707  00FCED  72                 	db	114
   708  00FCEE  6D                 	db	109
   709  00FCEF  69                 	db	105
   710  00FCF0  6E                 	db	110
   711  00FCF1  61                 	db	97
   712  00FCF2  6C                 	db	108
   713  00FCF3  20                 	db	32
   714  00FCF4  4D                 	db	77
   715  00FCF5  6F                 	db	111
   716  00FCF6  64                 	db	100
   717  00FCF7  65                 	db	101
   718  00FCF8  3A                 	db	58
   719  00FCF9  20                 	db	32
   720  00FCFA  43                 	db	67
   721  00FCFB  4F                 	db	79
   722  00FCFC  4D                 	db	77
   723  00FCFD  4D                 	db	77
   724  00FCFE  41                 	db	65
   725  00FCFF  4E                 	db	78
   726  00FD00  44                 	db	68
   727  00FD01  20                 	db	32
   728  00FD02  4D                 	db	77
   729  00FD03  4F                 	db	79
   730  00FD04  44                 	db	68
   731  00FD05  45                 	db	69
   732  00FD06  0D                 	db	13
   733  00FD07  0A                 	db	10
   734  00FD08  4D                 	db	77
   735  00FD09  6F                 	db	111
   736  00FD0A  64                 	db	100
   737  00FD0B  65                 	db	101
   738  00FD0C  6D                 	db	109
   739  00FD0D  20                 	db	32
   740  00FD0E  54                 	db	84
   741  00FD0F  79                 	db	121
   742  00FD10  70                 	db	112
   743  00FD11  65                 	db	101
   744  00FD12  3A                 	db	58
   745  00FD13  20                 	db	32
   746  00FD14  47                 	db	71
   747  00FD15  53                 	db	83
   748  00FD16  4D                 	db	77
   749  00FD17  2F                 	db	47
   750  00FD18  47                 	db	71
   751  00FD19  50                 	db	80
   752  00FD1A  52                 	db	82
   753  00FD1B  53                 	db	83
   754  00FD1C  0D                 	db	13
   755  00FD1D  0A                 	db	10
   756  00FD1E  0D                 	db	13
   757  00FD1F  0A                 	db	10
   758  00FD20  00                 	db	0
   759  00FD21                     __end_of_MsgFormat:
   760                           	opt stack 0
   761  00FD21                     _Welcome:
   762                           	opt stack 0
   763  00FD21  2A                 	db	42
   764  00FD22  2A                 	db	42
   765  00FD23  2A                 	db	42
   766  00FD24  2A                 	db	42
   767  00FD25  2A                 	db	42
   768  00FD26  2A                 	db	42
   769  00FD27  2A                 	db	42
   770  00FD28  2A                 	db	42
   771  00FD29  2A                 	db	42
   772  00FD2A  2A                 	db	42
   773  00FD2B  2A                 	db	42
   774  00FD2C  2A                 	db	42
   775  00FD2D  2A                 	db	42
   776  00FD2E  2A                 	db	42
   777  00FD2F  2A                 	db	42
   778  00FD30  2A                 	db	42
   779  00FD31  2A                 	db	42
   780  00FD32  2A                 	db	42
   781  00FD33  2A                 	db	42
   782  00FD34  2A                 	db	42
   783  00FD35  2A                 	db	42
   784  00FD36  2A                 	db	42
   785  00FD37  2A                 	db	42
   786  00FD38  2A                 	db	42
   787  00FD39  2A                 	db	42
   788  00FD3A  2A                 	db	42
   789  00FD3B  2A                 	db	42
   790  00FD3C  2A                 	db	42
   791  00FD3D  2A                 	db	42
   792  00FD3E  2A                 	db	42
   793  00FD3F  2A                 	db	42
   794  00FD40  2A                 	db	42
   795  00FD41  2A                 	db	42
   796  00FD42  2A                 	db	42
   797  00FD43  2A                 	db	42
   798  00FD44  2A                 	db	42
   799  00FD45  2A                 	db	42
   800  00FD46  2A                 	db	42
   801  00FD47  2A                 	db	42
   802  00FD48  2A                 	db	42
   803  00FD49  2A                 	db	42
   804  00FD4A  2A                 	db	42
   805  00FD4B  2A                 	db	42
   806  00FD4C  2A                 	db	42
   807  00FD4D  2A                 	db	42
   808  00FD4E  2A                 	db	42
   809  00FD4F  2A                 	db	42
   810  00FD50  2A                 	db	42
   811  00FD51  2A                 	db	42
   812  00FD52  0D                 	db	13
   813  00FD53  0A                 	db	10
   814  00FD54  20                 	db	32
   815  00FD55  20                 	db	32
   816  00FD56  20                 	db	32
   817  00FD57  20                 	db	32
   818  00FD58  20                 	db	32
   819  00FD59  20                 	db	32
   820  00FD5A  20                 	db	32
   821  00FD5B  20                 	db	32
   822  00FD5C  20                 	db	32
   823  00FD5D  20                 	db	32
   824  00FD5E  20                 	db	32
   825  00FD5F  20                 	db	32
   826  00FD60  20                 	db	32
   827  00FD61  20                 	db	32
   828  00FD62  20                 	db	32
   829  00FD63  20                 	db	32
   830  00FD64  20                 	db	32
   831  00FD65  20                 	db	32
   832  00FD66  4D                 	db	77
   833  00FD67  45                 	db	69
   834  00FD68  52                 	db	82
   835  00FD69  43                 	db	67
   836  00FD6A  55                 	db	85
   837  00FD6B  52                 	db	82
   838  00FD6C  59                 	db	89
   839  00FD6D  20                 	db	32
   840  00FD6E  53                 	db	83
   841  00FD6F  59                 	db	89
   842  00FD70  53                 	db	83
   843  00FD71  54                 	db	84
   844  00FD72  45                 	db	69
   845  00FD73  4D                 	db	77
   846  00FD74  0D                 	db	13
   847  00FD75  0A                 	db	10
   848  00FD76  2A                 	db	42
   849  00FD77  2A                 	db	42
   850  00FD78  2A                 	db	42
   851  00FD79  2A                 	db	42
   852  00FD7A  2A                 	db	42
   853  00FD7B  2A                 	db	42
   854  00FD7C  2A                 	db	42
   855  00FD7D  2A                 	db	42
   856  00FD7E  2A                 	db	42
   857  00FD7F  2A                 	db	42
   858  00FD80  2A                 	db	42
   859  00FD81  2A                 	db	42
   860  00FD82  2A                 	db	42
   861  00FD83  2A                 	db	42
   862  00FD84  2A                 	db	42
   863  00FD85  2A                 	db	42
   864  00FD86  2A                 	db	42
   865  00FD87  2A                 	db	42
   866  00FD88  2A                 	db	42
   867  00FD89  2A                 	db	42
   868  00FD8A  2A                 	db	42
   869  00FD8B  2A                 	db	42
   870  00FD8C  2A                 	db	42
   871  00FD8D  2A                 	db	42
   872  00FD8E  2A                 	db	42
   873  00FD8F  2A                 	db	42
   874  00FD90  2A                 	db	42
   875  00FD91  2A                 	db	42
   876  00FD92  2A                 	db	42
   877  00FD93  2A                 	db	42
   878  00FD94  2A                 	db	42
   879  00FD95  2A                 	db	42
   880  00FD96  2A                 	db	42
   881  00FD97  2A                 	db	42
   882  00FD98  2A                 	db	42
   883  00FD99  2A                 	db	42
   884  00FD9A  2A                 	db	42
   885  00FD9B  2A                 	db	42
   886  00FD9C  2A                 	db	42
   887  00FD9D  2A                 	db	42
   888  00FD9E  2A                 	db	42
   889  00FD9F  2A                 	db	42
   890  00FDA0  2A                 	db	42
   891  00FDA1  2A                 	db	42
   892  00FDA2  2A                 	db	42
   893  00FDA3  2A                 	db	42
   894  00FDA4  2A                 	db	42
   895  00FDA5  2A                 	db	42
   896  00FDA6  2A                 	db	42
   897  00FDA7  0D                 	db	13
   898  00FDA8  0A                 	db	10
   899  00FDA9  00                 	db	0
   900  00FDAA                     __end_of_Welcome:
   901                           	opt stack 0
   902  00FDAA                     _configDescriptor1:
   903                           	opt stack 0
   904  00FDAA  09                 	db	9
   905  00FDAB  02                 	db	2
   906  00FDAC  43                 	db	67
   907  00FDAD  00                 	db	0
   908  00FDAE  02                 	db	2
   909  00FDAF  01                 	db	1
   910  00FDB0  00                 	db	0
   911  00FDB1  C0                 	db	192
   912  00FDB2  32                 	db	50
   913  00FDB3  09                 	db	9
   914  00FDB4  04                 	db	4
   915  00FDB5  00                 	db	0
   916  00FDB6  00                 	db	0
   917  00FDB7  01                 	db	1
   918  00FDB8  02                 	db	2
   919  00FDB9  02                 	db	2
   920  00FDBA  01                 	db	1
   921  00FDBB  00                 	db	0
   922  00FDBC  05                 	db	5
   923  00FDBD  24                 	db	36
   924  00FDBE  00                 	db	0
   925  00FDBF  10                 	db	16
   926  00FDC0  01                 	db	1
   927  00FDC1  04                 	db	4
   928  00FDC2  24                 	db	36
   929  00FDC3  02                 	db	2
   930  00FDC4  02                 	db	2
   931  00FDC5  05                 	db	5
   932  00FDC6  24                 	db	36
   933  00FDC7  06                 	db	6
   934  00FDC8  00                 	db	0
   935  00FDC9  01                 	db	1
   936  00FDCA  05                 	db	5
   937  00FDCB  24                 	db	36
   938  00FDCC  01                 	db	1
   939  00FDCD  00                 	db	0
   940  00FDCE  01                 	db	1
   941  00FDCF  07                 	db	7
   942  00FDD0  05                 	db	5
   943  00FDD1  81                 	db	129
   944  00FDD2  03                 	db	3
   945  00FDD3  08                 	db	8
   946  00FDD4  00                 	db	0
   947  00FDD5  02                 	db	2
   948  00FDD6  09                 	db	9
   949  00FDD7  04                 	db	4
   950  00FDD8  01                 	db	1
   951  00FDD9  00                 	db	0
   952  00FDDA  02                 	db	2
   953  00FDDB  0A                 	db	10
   954  00FDDC  00                 	db	0
   955  00FDDD  00                 	db	0
   956  00FDDE  00                 	db	0
   957  00FDDF  07                 	db	7
   958  00FDE0  05                 	db	5
   959  00FDE1  02                 	db	2
   960  00FDE2  02                 	db	2
   961  00FDE3  40                 	db	64
   962  00FDE4  00                 	db	0
   963  00FDE5  00                 	db	0
   964  00FDE6  07                 	db	7
   965  00FDE7  05                 	db	5
   966  00FDE8  82                 	db	130
   967  00FDE9  02                 	db	2
   968  00FDEA  40                 	db	64
   969  00FDEB  00                 	db	0
   970  00FDEC  00                 	db	0
   971  00FDED                     __end_of_configDescriptor1:
   972                           	opt stack 0
   973  00FDED                     _sd002:
   974                           	opt stack 0
   975  00FDED  26                 	db	38
   976  00FDEE  03                 	db	3
   977  00FDEF  0054               	dw	84
   978  00FDF1  0065               	dw	101
   979  00FDF3  0072               	dw	114
   980  00FDF5  006D               	dw	109
   981  00FDF7  0069               	dw	105
   982  00FDF9  006E               	dw	110
   983  00FDFB  0061               	dw	97
   984  00FDFD  006C               	dw	108
   985  00FDFF  0020               	dw	32
   986  00FE01  0049               	dw	73
   987  00FE03  006E               	dw	110
   988  00FE05  0074               	dw	116
   989  00FE07  0065               	dw	101
   990  00FE09  0072               	dw	114
   991  00FE0B  0066               	dw	102
   992  00FE0D  0061               	dw	97
   993  00FE0F  0063               	dw	99
   994  00FE11  0065               	dw	101
   995  00FE13                     __end_of_sd002:
   996                           	opt stack 0
   997  00FE13                     _sd001:
   998                           	opt stack 0
   999  00FE13  1E                 	db	30
  1000  00FE14  03                 	db	3
  1001  00FE15  004D               	dw	77
  1002  00FE17  0065               	dw	101
  1003  00FE19  0072               	dw	114
  1004  00FE1B  0063               	dw	99
  1005  00FE1D  0075               	dw	117
  1006  00FE1F  0072               	dw	114
  1007  00FE21  0079               	dw	121
  1008  00FE23  0020               	dw	32
  1009  00FE25  0053               	dw	83
  1010  00FE27  0079               	dw	121
  1011  00FE29  0073               	dw	115
  1012  00FE2B  0074               	dw	116
  1013  00FE2D  0065               	dw	101
  1014  00FE2F  006D               	dw	109
  1015  00FE31                     __end_of_sd001:
  1016                           	opt stack 0
  1017  00FE31                     _MsgReady:
  1018                           	opt stack 0
  1019  00FE31  0D                 	db	13
  1020  00FE32  0A                 	db	10
  1021  00FE33  53                 	db	83
  1022  00FE34  79                 	db	121
  1023  00FE35  73                 	db	115
  1024  00FE36  74                 	db	116
  1025  00FE37  65                 	db	101
  1026  00FE38  6D                 	db	109
  1027  00FE39  20                 	db	32
  1028  00FE3A  52                 	db	82
  1029  00FE3B  65                 	db	101
  1030  00FE3C  61                 	db	97
  1031  00FE3D  64                 	db	100
  1032  00FE3E  79                 	db	121
  1033  00FE3F  2E                 	db	46
  1034  00FE40  2E                 	db	46
  1035  00FE41  2E                 	db	46
  1036  00FE42  20                 	db	32
  1037  00FE43  0D                 	db	13
  1038  00FE44  0A                 	db	10
  1039  00FE45  0D                 	db	13
  1040  00FE46  0A                 	db	10
  1041  00FE47  00                 	db	0
  1042  00FE48                     __end_of_MsgReady:
  1043                           	opt stack 0
  1044  00FE48                     _device_dsc:
  1045                           	opt stack 0
  1046  00FE48  12                 	db	18
  1047  00FE49  01                 	db	1
  1048  00FE4A  0200               	dw	512
  1049  00FE4C  02                 	db	2
  1050  00FE4D  00                 	db	0
  1051  00FE4E  00                 	db	0
  1052  00FE4F  08                 	db	8
  1053  00FE50  04D8               	dw	1240
  1054  00FE52  000A               	dw	10
  1055  00FE54  0100               	dw	256
  1056  00FE56  01                 	db	1
  1057  00FE57  02                 	db	2
  1058  00FE58  00                 	db	0
  1059  00FE59  01                 	db	1
  1060  00FE5A                     __end_of_device_dsc:
  1061                           	opt stack 0
  1062  00FE5A                     _sd000:
  1063                           	opt stack 0
  1064  00FE5A  04                 	db	4
  1065  00FE5B  03                 	db	3
  1066  00FE5C  0409               	dw	1033
  1067  00FE5E                     __end_of_sd000:
  1068                           	opt stack 0
  1069  0000                     _RPINR1	set	3815
  1070  0000                     _UEP0bits	set	3878
  1071  0000                     _UIEbits	set	3894
  1072  0000                     _UADDR	set	3896
  1073  0000                     _UIE	set	3894
  1074  0000                     _UEIE	set	3895
  1075  0000                     _UCFG	set	3897
  1076  0000                     _RTCCAL	set	3902
  1077  0000                     _PADCFG1bits	set	3900
  1078  0000                     _RTCCFGbits	set	3903
  1079  0000                     _DSCONLbits	set	3916
  1080  0000                     _DSGPR1	set	3919
  1081  0000                     _DSGPR0	set	3918
  1082  0000                     _DSCONHbits	set	3917
  1083  0000                     _ANCON1bits	set	3913
  1084  0000                     _UEP1	set	3879
  1085  0000                     _UEP0	set	3878
  1086  0000                     _T1CONbits	set	4045
  1087  0000                     _PORTDbits	set	3971
  1088  0000                     _USTAT	set	3940
  1089  0000                     _PIR2bits	set	4001
  1090  0000                     _UCON	set	3941
  1091  0000                     _UIRbits	set	3938
  1092  0000                     _UCONbits	set	3941
  1093  0000                     _UIR	set	3938
  1094  0000                     _UEIR	set	3939
  1095  0000                     _PIE2bits	set	4000
  1096  0000                     _BAUDCON2	set	3964
  1097  0000                     _RCSTA2	set	3996
  1098  0000                     _BAUDCON1	set	3966
  1099  0000                     _RCSTA1	set	4012
  1100  0000                     _TRISCbits	set	3988
  1101  0000                     _TXSTA2	set	4008
  1102  0000                     _TXSTA1	set	4013
  1103  0000                     _RCREG2	set	4010
  1104  0000                     _RCREG1	set	4015
  1105  0000                     _TXREG2	set	4009
  1106  0000                     _TXREG1	set	4014
  1107  0000                     _SPBRG2	set	4011
  1108  0000                     _SPBRGH2	set	3965
  1109  0000                     _SPBRG1	set	4016
  1110  0000                     _SPBRGH1	set	3967
  1111  0000                     _PR4	set	3959
  1112  0000                     _PR2	set	4043
  1113  0000                     _PIE1bits	set	3997
  1114  0000                     _IPR1bits	set	3999
  1115  0000                     _T4CONbits	set	3958
  1116  0000                     _T2CONbits	set	4042
  1117  0000                     _ALRMVALL	set	3982
  1118  0000                     _ALRMVALH	set	3983
  1119  0000                     _RTCVALH	set	3993
  1120  0000                     _RTCVALL	set	3992
  1121  0000                     _ALRMRPTbits	set	3984
  1122  0000                     _ALRMCFGbits	set	3985
  1123  0000                     _PIE3bits	set	4003
  1124  0000                     _IPR3bits	set	4005
  1125  0000                     _OSCCONbits	set	4051
  1126  0000                     _PORTEbits	set	3972
  1127  0000                     _TRISEbits	set	3990
  1128  0000                     _WDTCONbits	set	4032
  1129  0000                     _INTCON2bits	set	4081
  1130  0000                     _TRISBbits	set	3987
  1131  0000                     _OSCTUNEbits	set	3995
  1132  0000                     _SSP2CON1	set	3954
  1133  0000                     _TRISDbits	set	3989
  1134  0000                     _SSP2BUF	set	3957
  1135  0000                     _SSP2CON2bits	set	3953
  1136  0000                     _SSP2STAT	set	3955
  1137  0000                     _SSP2CON2	set	3953
  1138  0000                     _SSP2ADD	set	3956
  1139  0000                     _PIR1bits	set	3998
  1140  0000                     _PIR3bits	set	4004
  1141  0000                     _INTCON3bits	set	4080
  1142  0000                     _INTCONbits	set	4082
  1143  0000                     _RCONbits	set	4048
  1144  00FE5E                     STR_21:
  1145  00FE5E  20                 	db	32
  1146  00FE5F  4C                 	db	76	;'L'
  1147  00FE60  61                 	db	97	;'a'
  1148  00FE61  7A                 	db	122	;'z'
  1149  00FE62  79                 	db	121	;'y'
  1150  00FE63  20                 	db	32
  1151  00FE64  64                 	db	100	;'d'
  1152  00FE65  65                 	db	101	;'e'
  1153  00FE66  76                 	db	118	;'v'
  1154  00FE67  69                 	db	105	;'i'
  1155  00FE68  63                 	db	99	;'c'
  1156  00FE69  65                 	db	101	;'e'
  1157  00FE6A  2E                 	db	46
  1158  00FE6B  2E                 	db	46
  1159  00FE6C  2E                 	db	46
  1160  00FE6D  79                 	db	121	;'y'
  1161  00FE6E  6F                 	db	111	;'o'
  1162  00FE6F  75                 	db	117	;'u'
  1163  00FE70  27                 	db	39
  1164  00FE71  76                 	db	118	;'v'
  1165  00FE72  65                 	db	101	;'e'
  1166  00FE73  20                 	db	32
  1167  00FE74  62                 	db	98	;'b'
  1168  00FE75  65                 	db	101	;'e'
  1169  00FE76  65                 	db	101	;'e'
  1170  00FE77  6E                 	db	110	;'n'
  1171  00FE78  20                 	db	32
  1172  00FE79  74                 	db	116	;'t'
  1173  00FE7A  69                 	db	105	;'i'
  1174  00FE7B  6D                 	db	109	;'m'
  1175  00FE7C  65                 	db	101	;'e'
  1176  00FE7D  64                 	db	100	;'d'
  1177  00FE7E  2D                 	db	45
  1178  00FE7F  6F                 	db	111	;'o'
  1179  00FE80  75                 	db	117	;'u'
  1180  00FE81  74                 	db	116	;'t'
  1181  00FE82  21                 	db	33
  1182  00FE83  21                 	db	33
  1183  00FE84  21                 	db	33
  1184  00FE85  0D                 	db	13
  1185  00FE86  0A                 	db	10
  1186  00FE87  00                 	db	0
  1187  00FE88                     STR_8:
  1188  00FE88  41                 	db	65	;'A'
  1189  00FE89  54                 	db	84	;'T'
  1190  00FE8A  2B                 	db	43
  1191  00FE8B  53                 	db	83	;'S'
  1192  00FE8C  41                 	db	65	;'A'
  1193  00FE8D  50                 	db	80	;'P'
  1194  00FE8E  42                 	db	66	;'B'
  1195  00FE8F  52                 	db	82	;'R'
  1196  00FE90  3D                 	db	61	;'='
  1197  00FE91  33                 	db	51	;'3'
  1198  00FE92  2C                 	db	44
  1199  00FE93  31                 	db	49	;'1'
  1200  00FE94  2C                 	db	44
  1201  00FE95  22                 	db	34
  1202  00FE96  43                 	db	67	;'C'
  1203  00FE97  6F                 	db	111	;'o'
  1204  00FE98  6E                 	db	110	;'n'
  1205  00FE99  74                 	db	116	;'t'
  1206  00FE9A  79                 	db	121	;'y'
  1207  00FE9B  70                 	db	112	;'p'
  1208  00FE9C  65                 	db	101	;'e'
  1209  00FE9D  22                 	db	34
  1210  00FE9E  2C                 	db	44
  1211  00FE9F  22                 	db	34
  1212  00FEA0  47                 	db	71	;'G'
  1213  00FEA1  50                 	db	80	;'P'
  1214  00FEA2  52                 	db	82	;'R'
  1215  00FEA3  53                 	db	83	;'S'
  1216  00FEA4  22                 	db	34
  1217  00FEA5  0D                 	db	13
  1218  00FEA6  00                 	db	0
  1219  00FEA7                     STR_14:
  1220  00FEA7  41                 	db	65	;'A'
  1221  00FEA8  54                 	db	84	;'T'
  1222  00FEA9  2B                 	db	43
  1223  00FEAA  48                 	db	72	;'H'
  1224  00FEAB  54                 	db	84	;'T'
  1225  00FEAC  54                 	db	84	;'T'
  1226  00FEAD  50                 	db	80	;'P'
  1227  00FEAE  50                 	db	80	;'P'
  1228  00FEAF  41                 	db	65	;'A'
  1229  00FEB0  52                 	db	82	;'R'
  1230  00FEB1  41                 	db	65	;'A'
  1231  00FEB2  3D                 	db	61	;'='
  1232  00FEB3  22                 	db	34
  1233  00FEB4  43                 	db	67	;'C'
  1234  00FEB5  49                 	db	73	;'I'
  1235  00FEB6  44                 	db	68	;'D'
  1236  00FEB7  22                 	db	34
  1237  00FEB8  2C                 	db	44
  1238  00FEB9  31                 	db	49	;'1'
  1239  00FEBA  0D                 	db	13
  1240  00FEBB  00                 	db	0
  1241  00FEBC                     STR_9:
  1242  00FEBC  41                 	db	65	;'A'
  1243  00FEBD  54                 	db	84	;'T'
  1244  00FEBE  2B                 	db	43
  1245  00FEBF  53                 	db	83	;'S'
  1246  00FEC0  41                 	db	65	;'A'
  1247  00FEC1  50                 	db	80	;'P'
  1248  00FEC2  42                 	db	66	;'B'
  1249  00FEC3  52                 	db	82	;'R'
  1250  00FEC4  3D                 	db	61	;'='
  1251  00FEC5  33                 	db	51	;'3'
  1252  00FEC6  2C                 	db	44
  1253  00FEC7  31                 	db	49	;'1'
  1254  00FEC8  2C                 	db	44
  1255  00FEC9  22                 	db	34
  1256  00FECA  41                 	db	65	;'A'
  1257  00FECB  50                 	db	80	;'P'
  1258  00FECC  4E                 	db	78	;'N'
  1259  00FECD  22                 	db	34
  1260  00FECE  2C                 	db	44
  1261  00FECF  22                 	db	34
  1262  00FED0  00                 	db	0
  1263  00FED1                     STR_23:
  1264  00FED1  46                 	db	70	;'F'
  1265  00FED2  72                 	db	114	;'r'
  1266  00FED3  61                 	db	97	;'a'
  1267  00FED4  6D                 	db	109	;'m'
  1268  00FED5  65                 	db	101	;'e'
  1269  00FED6  77                 	db	119	;'w'
  1270  00FED7  6F                 	db	111	;'o'
  1271  00FED8  72                 	db	114	;'r'
  1272  00FED9  6B                 	db	107	;'k'
  1273  00FEDA  20                 	db	32
  1274  00FEDB  56                 	db	86	;'V'
  1275  00FEDC  65                 	db	101	;'e'
  1276  00FEDD  72                 	db	114	;'r'
  1277  00FEDE  73                 	db	115	;'s'
  1278  00FEDF  69                 	db	105	;'i'
  1279  00FEE0  6F                 	db	111	;'o'
  1280  00FEE1  6E                 	db	110	;'n'
  1281  00FEE2  3A                 	db	58	;':'
  1282  00FEE3  20                 	db	32
  1283  00FEE4  00                 	db	0
  1284  00FEE5                     STR_15:
  1285  00FEE5  41                 	db	65	;'A'
  1286  00FEE6  54                 	db	84	;'T'
  1287  00FEE7  2B                 	db	43
  1288  00FEE8  48                 	db	72	;'H'
  1289  00FEE9  54                 	db	84	;'T'
  1290  00FEEA  54                 	db	84	;'T'
  1291  00FEEB  50                 	db	80	;'P'
  1292  00FEEC  50                 	db	80	;'P'
  1293  00FEED  41                 	db	65	;'A'
  1294  00FEEE  52                 	db	82	;'R'
  1295  00FEEF  41                 	db	65	;'A'
  1296  00FEF0  3D                 	db	61	;'='
  1297  00FEF1  22                 	db	34
  1298  00FEF2  55                 	db	85	;'U'
  1299  00FEF3  52                 	db	82	;'R'
  1300  00FEF4  4C                 	db	76	;'L'
  1301  00FEF5  22                 	db	34
  1302  00FEF6  2C                 	db	44
  1303  00FEF7  22                 	db	34
  1304  00FEF8  00                 	db	0
  1305  00FEF9                     STR_31:
  1306  00FEF9  41                 	db	65	;'A'
  1307  00FEFA  54                 	db	84	;'T'
  1308  00FEFB  2B                 	db	43
  1309  00FEFC  43                 	db	67	;'C'
  1310  00FEFD  4D                 	db	77	;'M'
  1311  00FEFE  47                 	db	71	;'G'
  1312  00FEFF  44                 	db	68	;'D'
  1313  00FF00  41                 	db	65	;'A'
  1314  00FF01  3D                 	db	61	;'='
  1315  00FF02  44                 	db	68	;'D'
  1316  00FF03  45                 	db	69	;'E'
  1317  00FF04  4C                 	db	76	;'L'
  1318  00FF05  20                 	db	32
  1319  00FF06  41                 	db	65	;'A'
  1320  00FF07  4C                 	db	76	;'L'
  1321  00FF08  4C                 	db	76	;'L'
  1322  00FF09  0D                 	db	13
  1323  00FF0A  0A                 	db	10
  1324  00FF0B  00                 	db	0
  1325  00FF0C                     STR_27:
  1326  00FF0C  42                 	db	66	;'B'
  1327  00FF0D  75                 	db	117	;'u'
  1328  00FF0E  69                 	db	105	;'i'
  1329  00FF0F  6C                 	db	108	;'l'
  1330  00FF10  64                 	db	100	;'d'
  1331  00FF11  20                 	db	32
  1332  00FF12  44                 	db	68	;'D'
  1333  00FF13  61                 	db	97	;'a'
  1334  00FF14  74                 	db	116	;'t'
  1335  00FF15  65                 	db	101	;'e'
  1336  00FF16  3A                 	db	58	;':'
  1337  00FF17  20                 	db	32
  1338  00FF18  25                 	db	37
  1339  00FF19  73                 	db	115	;'s'
  1340  00FF1A  0D                 	db	13
  1341  00FF1B  0A                 	db	10
  1342  00FF1C  00                 	db	0
  1343  00FF1D                     STR_16:
  1344  00FF1D  41                 	db	65	;'A'
  1345  00FF1E  54                 	db	84	;'T'
  1346  00FF1F  2B                 	db	43
  1347  00FF20  48                 	db	72	;'H'
  1348  00FF21  54                 	db	84	;'T'
  1349  00FF22  54                 	db	84	;'T'
  1350  00FF23  50                 	db	80	;'P'
  1351  00FF24  41                 	db	65	;'A'
  1352  00FF25  43                 	db	67	;'C'
  1353  00FF26  54                 	db	84	;'T'
  1354  00FF27  49                 	db	73	;'I'
  1355  00FF28  4F                 	db	79	;'O'
  1356  00FF29  4E                 	db	78	;'N'
  1357  00FF2A  3D                 	db	61	;'='
  1358  00FF2B  30                 	db	48	;'0'
  1359  00FF2C  0D                 	db	13
  1360  00FF2D  00                 	db	0
  1361  00FF2E                     STR_29:
  1362  00FF2E  41                 	db	65	;'A'
  1363  00FF2F  54                 	db	84	;'T'
  1364  00FF30  2B                 	db	43
  1365  00FF31  43                 	db	67	;'C'
  1366  00FF32  4D                 	db	77	;'M'
  1367  00FF33  47                 	db	71	;'G'
  1368  00FF34  44                 	db	68	;'D'
  1369  00FF35  3D                 	db	61	;'='
  1370  00FF36  31                 	db	49	;'1'
  1371  00FF37  2C                 	db	44
  1372  00FF38  30                 	db	48	;'0'
  1373  00FF39  0D                 	db	13
  1374  00FF3A  0A                 	db	10
  1375  00FF3B  00                 	db	0
  1376  00FF3C  41                 	db	65	;'A'
  1377  00FF3D  54                 	db	84	;'T'
  1378  00FF3E  2B                 	db	43
  1379  00FF3F  48                 	db	72	;'H'
  1380  00FF40  54                 	db	84	;'T'
  1381  00FF41  54                 	db	84	;'T'
  1382  00FF42  50                 	db	80	;'P'
  1383  00FF43  53                 	db	83	;'S'
  1384  00FF44  53                 	db	83	;'S'
  1385  00FF45  4C                 	db	76	;'L'
  1386  00FF46  3D                 	db	61	;'='
  1387  00FF47  30                 	db	48	;'0'
  1388  00FF48  0D                 	db	13
  1389  00FF49  00                 	db	0
  1390  00FF4A                     STR_10:
  1391  00FF4A  41                 	db	65	;'A'
  1392  00FF4B  54                 	db	84	;'T'
  1393  00FF4C  2B                 	db	43
  1394  00FF4D  53                 	db	83	;'S'
  1395  00FF4E  41                 	db	65	;'A'
  1396  00FF4F  50                 	db	80	;'P'
  1397  00FF50  42                 	db	66	;'B'
  1398  00FF51  52                 	db	82	;'R'
  1399  00FF52  3D                 	db	61	;'='
  1400  00FF53  31                 	db	49	;'1'
  1401  00FF54  2C                 	db	44
  1402  00FF55  31                 	db	49	;'1'
  1403  00FF56  0D                 	db	13
  1404  00FF57  00                 	db	0
  1405  00FF58                     STR_11:
  1406  00FF58  41                 	db	65	;'A'
  1407  00FF59  54                 	db	84	;'T'
  1408  00FF5A  2B                 	db	43
  1409  00FF5B  53                 	db	83	;'S'
  1410  00FF5C  41                 	db	65	;'A'
  1411  00FF5D  50                 	db	80	;'P'
  1412  00FF5E  42                 	db	66	;'B'
  1413  00FF5F  52                 	db	82	;'R'
  1414  00FF60  3D                 	db	61	;'='
  1415  00FF61  32                 	db	50	;'2'
  1416  00FF62  2C                 	db	44
  1417  00FF63  31                 	db	49	;'1'
  1418  00FF64  0D                 	db	13
  1419  00FF65  00                 	db	0
  1420  00FF66                     STR_13:
  1421  00FF66  41                 	db	65	;'A'
  1422  00FF67  54                 	db	84	;'T'
  1423  00FF68  2B                 	db	43
  1424  00FF69  48                 	db	72	;'H'
  1425  00FF6A  54                 	db	84	;'T'
  1426  00FF6B  54                 	db	84	;'T'
  1427  00FF6C  50                 	db	80	;'P'
  1428  00FF6D  53                 	db	83	;'S'
  1429  00FF6E  53                 	db	83	;'S'
  1430  00FF6F  4C                 	db	76	;'L'
  1431  00FF70  3D                 	db	61	;'='
  1432  00FF71  31                 	db	49	;'1'
  1433  00FF72  0D                 	db	13
  1434  00FF73  00                 	db	0
  1435  00FF74                     STR_2:
  1436  00FF74  41                 	db	65	;'A'
  1437  00FF75  54                 	db	84	;'T'
  1438  00FF76  2B                 	db	43
  1439  00FF77  49                 	db	73	;'I'
  1440  00FF78  50                 	db	80	;'P'
  1441  00FF79  52                 	db	82	;'R'
  1442  00FF7A  3D                 	db	61	;'='
  1443  00FF7B  39                 	db	57	;'9'
  1444  00FF7C  36                 	db	54	;'6'
  1445  00FF7D  30                 	db	48	;'0'
  1446  00FF7E  30                 	db	48	;'0'
  1447  00FF7F  0D                 	db	13
  1448  00FF80  0A                 	db	10
  1449  00FF81  00                 	db	0
  1450  00FF82                     STR_17:
  1451  00FF82  41                 	db	65	;'A'
  1452  00FF83  54                 	db	84	;'T'
  1453  00FF84  2B                 	db	43
  1454  00FF85  48                 	db	72	;'H'
  1455  00FF86  54                 	db	84	;'T'
  1456  00FF87  54                 	db	84	;'T'
  1457  00FF88  50                 	db	80	;'P'
  1458  00FF89  52                 	db	82	;'R'
  1459  00FF8A  45                 	db	69	;'E'
  1460  00FF8B  41                 	db	65	;'A'
  1461  00FF8C  44                 	db	68	;'D'
  1462  00FF8D  0D                 	db	13
  1463  00FF8E  00                 	db	0
  1464  00FF8F                     STR_18:
  1465  00FF8F  41                 	db	65	;'A'
  1466  00FF90  54                 	db	84	;'T'
  1467  00FF91  2B                 	db	43
  1468  00FF92  48                 	db	72	;'H'
  1469  00FF93  54                 	db	84	;'T'
  1470  00FF94  54                 	db	84	;'T'
  1471  00FF95  50                 	db	80	;'P'
  1472  00FF96  54                 	db	84	;'T'
  1473  00FF97  45                 	db	69	;'E'
  1474  00FF98  52                 	db	82	;'R'
  1475  00FF99  4D                 	db	77	;'M'
  1476  00FF9A  0D                 	db	13
  1477  00FF9B  00                 	db	0
  1478  00FF9C                     STR_12:
  1479  00FF9C  41                 	db	65	;'A'
  1480  00FF9D  54                 	db	84	;'T'
  1481  00FF9E  2B                 	db	43
  1482  00FF9F  48                 	db	72	;'H'
  1483  00FFA0  54                 	db	84	;'T'
  1484  00FFA1  54                 	db	84	;'T'
  1485  00FFA2  50                 	db	80	;'P'
  1486  00FFA3  49                 	db	73	;'I'
  1487  00FFA4  4E                 	db	78	;'N'
  1488  00FFA5  49                 	db	73	;'I'
  1489  00FFA6  54                 	db	84	;'T'
  1490  00FFA7  0D                 	db	13
  1491  00FFA8  00                 	db	0
  1492  00FFA9                     STR_32:
  1493  00FFA9  41                 	db	65	;'A'
  1494  00FFAA  54                 	db	84	;'T'
  1495  00FFAB  2B                 	db	43
  1496  00FFAC  43                 	db	67	;'C'
  1497  00FFAD  4C                 	db	76	;'L'
  1498  00FFAE  49                 	db	73	;'I'
  1499  00FFAF  50                 	db	80	;'P'
  1500  00FFB0  3D                 	db	61	;'='
  1501  00FFB1  31                 	db	49	;'1'
  1502  00FFB2  0D                 	db	13
  1503  00FFB3  0A                 	db	10
  1504  00FFB4  00                 	db	0
  1505  00FFB5                     STR_28:
  1506  00FFB5  4D                 	db	77	;'M'
  1507  00FFB6  61                 	db	97	;'a'
  1508  00FFB7  72                 	db	114	;'r'
  1509  00FFB8  20                 	db	32
  1510  00FFB9  32                 	db	50	;'2'
  1511  00FFBA  36                 	db	54	;'6'
  1512  00FFBB  20                 	db	32
  1513  00FFBC  32                 	db	50	;'2'
  1514  00FFBD  30                 	db	48	;'0'
  1515  00FFBE  32                 	db	50	;'2'
  1516  00FFBF  32                 	db	50	;'2'
  1517  00FFC0  00                 	db	0
  1518  00FFC1                     STR_4:
  1519  00FFC1  41                 	db	65	;'A'
  1520  00FFC2  54                 	db	84	;'T'
  1521  00FFC3  2B                 	db	43
  1522  00FFC4  43                 	db	67	;'C'
  1523  00FFC5  4D                 	db	77	;'M'
  1524  00FFC6  47                 	db	71	;'G'
  1525  00FFC7  52                 	db	82	;'R'
  1526  00FFC8  3D                 	db	61	;'='
  1527  00FFC9  31                 	db	49	;'1'
  1528  00FFCA  0D                 	db	13
  1529  00FFCB  0A                 	db	10
  1530  00FFCC  00                 	db	0
  1531  00FFCD                     STR_5:
  1532  00FFCD  41                 	db	65	;'A'
  1533  00FFCE  54                 	db	84	;'T'
  1534  00FFCF  2B                 	db	43
  1535  00FFD0  43                 	db	67	;'C'
  1536  00FFD1  4D                 	db	77	;'M'
  1537  00FFD2  47                 	db	71	;'G'
  1538  00FFD3  53                 	db	83	;'S'
  1539  00FFD4  3D                 	db	61	;'='
  1540  00FFD5  22                 	db	34
  1541  00FFD6  00                 	db	0
  1542  00FFD7                     STR_33:
  1543  00FFD7  28                 	db	40
  1544  00FFD8  6E                 	db	110	;'n'
  1545  00FFD9  75                 	db	117	;'u'
  1546  00FFDA  6C                 	db	108	;'l'
  1547  00FFDB  6C                 	db	108	;'l'
  1548  00FFDC  29                 	db	41
  1549  00FFDD  00                 	db	0
  1550  00FFDE                     STR_3:
  1551  00FFDE  41                 	db	65	;'A'
  1552  00FFDF  54                 	db	84	;'T'
  1553  00FFE0  45                 	db	69	;'E'
  1554  00FFE1  30                 	db	48	;'0'
  1555  00FFE2  0D                 	db	13
  1556  00FFE3  0A                 	db	10
  1557  00FFE4  00                 	db	0
  1558  00FFE5                     STR_1:
  1559  00FFE5  41                 	db	65	;'A'
  1560  00FFE6  54                 	db	84	;'T'
  1561  00FFE7  0D                 	db	13
  1562  00FFE8  0A                 	db	10
  1563  00FFE9  00                 	db	0
  1564  00FFEA  41                 	db	65	;'A'
  1565  00FFEB  54                 	db	84	;'T'
  1566  00FFEC  41                 	db	65	;'A'
  1567  00FFED  0D                 	db	13
  1568  00FFEE  00                 	db	0
  1569  00FFEF                     STR_6:
  1570  00FFEF  41                 	db	65	;'A'
  1571  00FFF0  54                 	db	84	;'T'
  1572  00FFF1  48                 	db	72	;'H'
  1573  00FFF2  0D                 	db	13
  1574  00FFF3  00                 	db	0
  1575  00FFF4                     STR_24:
  1576  00FFF4  2E                 	db	46
  1577  00FFF5  00                 	db	0
  1578  0000                     
  1579                           ; #config settings
  1580  00FFF6  00                 	db	0	; dummy byte at the end
  1581  0000                     
  1582                           	psect	cinit
  1583  0027CA                     __pcinit:
  1584                           	opt stack 0
  1585  0027CA                     start_initialization:
  1586                           	opt stack 0
  1587  0027CA                     __initialization:
  1588                           	opt stack 0
  1589                           
  1590                           ; Initialize objects allocated to BANK5 (80 bytes)
  1591                           ; load TBLPTR registers with __pidataBANK5
  1592  0027CA  0E64               	movlw	low __pidataBANK5
  1593  0027CC  6EF6               	movwf	tblptrl,c
  1594  0027CE  0E59               	movlw	high __pidataBANK5
  1595  0027D0  6EF7               	movwf	tblptrh,c
  1596  0027D2  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1597  0027D4  6EF8               	movwf	tblptru,c
  1598  0027D6  EE05  F0A4         	lfsr	0,__pdataBANK5
  1599  0027DA  EE10 F050          	lfsr	1,80
  1600  0027DE                     copy_data0:
  1601  0027DE  0009               	tblrd		*+
  1602  0027E0  CFF5 FFEE          	movff	tablat,postinc0
  1603  0027E4  50E5               	movf	postdec1,w,c
  1604  0027E6  50E1               	movf	fsr1l,w,c
  1605  0027E8  E1FA               	bnz	copy_data0
  1606                           
  1607                           ; Initialize objects allocated to BANK3 (73 bytes)
  1608                           ; load TBLPTR registers with __pidataBANK3
  1609  0027EA  0E8A               	movlw	low __pidataBANK3
  1610  0027EC  6EF6               	movwf	tblptrl,c
  1611  0027EE  0E5B               	movlw	high __pidataBANK3
  1612  0027F0  6EF7               	movwf	tblptrh,c
  1613  0027F2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1614  0027F4  6EF8               	movwf	tblptru,c
  1615  0027F6  EE03  F0B7         	lfsr	0,__pdataBANK3
  1616  0027FA  EE10 F049          	lfsr	1,73
  1617  0027FE                     copy_data1:
  1618  0027FE  0009               	tblrd		*+
  1619  002800  CFF5 FFEE          	movff	tablat,postinc0
  1620  002804  50E5               	movf	postdec1,w,c
  1621  002806  50E1               	movf	fsr1l,w,c
  1622  002808  E1FA               	bnz	copy_data1
  1623                           
  1624                           ; Initialize objects allocated to BANK2 (13 bytes)
  1625                           ; load TBLPTR registers with __pidataBANK2
  1626  00280A  0E22               	movlw	low __pidataBANK2
  1627  00280C  6EF6               	movwf	tblptrl,c
  1628  00280E  0E67               	movlw	high __pidataBANK2
  1629  002810  6EF7               	movwf	tblptrh,c
  1630  002812  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1631  002814  6EF8               	movwf	tblptru,c
  1632  002816  EE02  F0F3         	lfsr	0,__pdataBANK2
  1633  00281A  EE10 F00D          	lfsr	1,13
  1634  00281E                     copy_data2:
  1635  00281E  0009               	tblrd		*+
  1636  002820  CFF5 FFEE          	movff	tablat,postinc0
  1637  002824  50E5               	movf	postdec1,w,c
  1638  002826  50E1               	movf	fsr1l,w,c
  1639  002828  E1FA               	bnz	copy_data2
  1640                           
  1641                           ; Initialize objects allocated to BANK1 (2 bytes)
  1642                           ; load TBLPTR registers with __pidataBANK1
  1643  00282A  0EAA               	movlw	low __pidataBANK1
  1644  00282C  6EF6               	movwf	tblptrl,c
  1645  00282E  0E67               	movlw	high __pidataBANK1
  1646  002830  6EF7               	movwf	tblptrh,c
  1647  002832  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1648  002834  6EF8               	movwf	tblptru,c
  1649  002836  0009               	tblrd		*+	;fetch initializer
  1650  002838  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1651  00283C  0009               	tblrd		*+	;fetch initializer
  1652  00283E  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1653                           
  1654                           ; Initialize objects allocated to BANK4 (13 bytes)
  1655                           ; load TBLPTR registers with __pidataBANK4
  1656  002842  0E2F               	movlw	low __pidataBANK4
  1657  002844  6EF6               	movwf	tblptrl,c
  1658  002846  0E67               	movlw	high __pidataBANK4
  1659  002848  6EF7               	movwf	tblptrh,c
  1660  00284A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1661  00284C  6EF8               	movwf	tblptru,c
  1662  00284E  EE04  F0EF         	lfsr	0,__pdataBANK4
  1663  002852  EE10 F00D          	lfsr	1,13
  1664  002856                     copy_data3:
  1665  002856  0009               	tblrd		*+
  1666  002858  CFF5 FFEE          	movff	tablat,postinc0
  1667  00285C  50E5               	movf	postdec1,w,c
  1668  00285E  50E1               	movf	fsr1l,w,c
  1669  002860  E1FA               	bnz	copy_data3
  1670                           
  1671                           ; Initialize objects allocated to BANK0 (1 bytes)
  1672                           ; load TBLPTR registers with __pidataBANK0
  1673  002862  0EAC               	movlw	low __pidataBANK0
  1674  002864  6EF6               	movwf	tblptrl,c
  1675  002866  0E67               	movlw	high __pidataBANK0
  1676  002868  6EF7               	movwf	tblptrh,c
  1677  00286A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1678  00286C  6EF8               	movwf	tblptru,c
  1679  00286E  0009               	tblrd		*+	;fetch initializer
  1680  002870  CFF5 F0E2          	movff	tablat,__pdataBANK0
  1681                           
  1682                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1683  002874  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1684  002878  EE13 F020          	lfsr	1,800
  1685  00287C                     clear_0:
  1686  00287C  6AEE               	clrf	postinc0,c
  1687  00287E  50E5               	movf	postdec1,w,c
  1688  002880  50E1               	movf	fsr1l,w,c
  1689  002882  E1FC               	bnz	clear_0
  1690  002884  50E2               	movf	fsr1h,w,c
  1691  002886  E1FA               	bnz	clear_0
  1692                           
  1693                           ; Clear objects allocated to BANK9 (200 bytes)
  1694  002888  EE09  F000         	lfsr	0,__pbssBANK9
  1695  00288C  0EC8               	movlw	200
  1696  00288E                     clear_1:
  1697  00288E  6AEE               	clrf	postinc0,c
  1698  002890  06E8               	decf	wreg,f,c
  1699  002892  E1FD               	bnz	clear_1
  1700                           
  1701                           ; Clear objects allocated to BANK8 (200 bytes)
  1702  002894  EE08  F000         	lfsr	0,__pbssBANK8
  1703  002898  0EC8               	movlw	200
  1704  00289A                     clear_2:
  1705  00289A  6AEE               	clrf	postinc0,c
  1706  00289C  06E8               	decf	wreg,f,c
  1707  00289E  E1FD               	bnz	clear_2
  1708                           
  1709                           ; Clear objects allocated to BANK7 (246 bytes)
  1710  0028A0  EE07  F000         	lfsr	0,__pbssBANK7
  1711  0028A4  0EF6               	movlw	246
  1712  0028A6                     clear_3:
  1713  0028A6  6AEE               	clrf	postinc0,c
  1714  0028A8  06E8               	decf	wreg,f,c
  1715  0028AA  E1FD               	bnz	clear_3
  1716                           
  1717                           ; Clear objects allocated to BANK6 (220 bytes)
  1718  0028AC  EE06  F000         	lfsr	0,__pbssBANK6
  1719  0028B0  0EDC               	movlw	220
  1720  0028B2                     clear_4:
  1721  0028B2  6AEE               	clrf	postinc0,c
  1722  0028B4  06E8               	decf	wreg,f,c
  1723  0028B6  E1FD               	bnz	clear_4
  1724                           
  1725                           ; Clear objects allocated to BANK5 (164 bytes)
  1726  0028B8  EE05  F000         	lfsr	0,__pbssBANK5
  1727  0028BC  0EA4               	movlw	164
  1728  0028BE                     clear_5:
  1729  0028BE  6AEE               	clrf	postinc0,c
  1730  0028C0  06E8               	decf	wreg,f,c
  1731  0028C2  E1FD               	bnz	clear_5
  1732                           
  1733                           ; Clear objects allocated to BANK3 (183 bytes)
  1734  0028C4  EE03  F000         	lfsr	0,__pbssBANK3
  1735  0028C8  0EB7               	movlw	183
  1736  0028CA                     clear_6:
  1737  0028CA  6AEE               	clrf	postinc0,c
  1738  0028CC  06E8               	decf	wreg,f,c
  1739  0028CE  E1FD               	bnz	clear_6
  1740                           
  1741                           ; Clear objects allocated to BANK2 (42 bytes)
  1742  0028D0  EE02  F0C9         	lfsr	0,__pbssBANK2
  1743  0028D4  0E2A               	movlw	42
  1744  0028D6                     clear_7:
  1745  0028D6  6AEE               	clrf	postinc0,c
  1746  0028D8  06E8               	decf	wreg,f,c
  1747  0028DA  E1FD               	bnz	clear_7
  1748                           
  1749                           ; Clear objects allocated to BANK1 (53 bytes)
  1750  0028DC  EE01  F0C9         	lfsr	0,__pbssBANK1
  1751  0028E0  0E35               	movlw	53
  1752  0028E2                     clear_8:
  1753  0028E2  6AEE               	clrf	postinc0,c
  1754  0028E4  06E8               	decf	wreg,f,c
  1755  0028E6  E1FD               	bnz	clear_8
  1756                           
  1757                           ; Clear objects allocated to BANK4 (175 bytes)
  1758  0028E8  EE04  F040         	lfsr	0,__pbssBANK4
  1759  0028EC  0EAF               	movlw	175
  1760  0028EE                     clear_9:
  1761  0028EE  6AEE               	clrf	postinc0,c
  1762  0028F0  06E8               	decf	wreg,f,c
  1763  0028F2  E1FD               	bnz	clear_9
  1764                           
  1765                           ; Clear objects allocated to BANK0 (50 bytes)
  1766  0028F4  EE00  F0B0         	lfsr	0,__pbssBANK0
  1767  0028F8  0E32               	movlw	50
  1768  0028FA                     clear_10:
  1769  0028FA  6AEE               	clrf	postinc0,c
  1770  0028FC  06E8               	decf	wreg,f,c
  1771  0028FE  E1FD               	bnz	clear_10
  1772                           
  1773                           ; Clear objects allocated to COMRAM (31 bytes)
  1774  002900  EE00  F023         	lfsr	0,__pbssCOMRAM
  1775  002904  0E1F               	movlw	31
  1776  002906                     clear_11:
  1777  002906  6AEE               	clrf	postinc0,c
  1778  002908  06E8               	decf	wreg,f,c
  1779  00290A  E1FD               	bnz	clear_11
  1780  00290C                     end_of_initialization:
  1781                           	opt stack 0
  1782  00290C                     __end_of__initialization:
  1783                           	opt stack 0
  1784  00290C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1785  00290E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1786  002910  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1787  002912  6EF8               	movwf	tblptru,c
  1788  002914  0100               	movlb	0
  1789  002916  EF9E  F033         	goto	_main	;jump to C main() function
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1h	equ	0xFE2
  1798                           fsr1l	equ	0xFE1
  1799                           
  1800                           	psect	bssCOMRAM
  1801  000023                     __pbssCOMRAM:
  1802                           	opt stack 0
  1803  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1804                           	opt stack 0
  1805  000023                     	ds	2
  1806  000025                     _USBDeferOUTDataStagePackets:
  1807                           	opt stack 0
  1808  000025                     	ds	1
  1809  000026                     _USBDeferINDataStagePackets:
  1810                           	opt stack 0
  1811  000026                     	ds	1
  1812  000027                     _USBStatusStageEnabledFlag2:
  1813                           	opt stack 0
  1814  000027                     	ds	1
  1815  000028                     TurnOnModem@TurnOnMdmState:
  1816                           	opt stack 0
  1817  000028                     	ds	1
  1818  000029                     CheckModem@CheckMdmSts:
  1819                           	opt stack 0
  1820  000029                     	ds	1
  1821  00002A                     _ComChecCompleted:
  1822                           	opt stack 0
  1823  00002A                     	ds	1
  1824  00002B                     Uart_Uart1RxIsr@UartRxData:
  1825                           	opt stack 0
  1826  00002B                     	ds	1
  1827  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1828                           	opt stack 0
  1829  00002C                     	ds	1
  1830  00002D                     MdmCntSm@MdmCntState:
  1831                           	opt stack 0
  1832  00002D                     	ds	1
  1833  00002E                     RiSm@MdmDrvState:
  1834                           	opt stack 0
  1835  00002E                     	ds	1
  1836  00002F                     _Mmd_RingIndicator:
  1837                           	opt stack 0
  1838  00002F                     	ds	1
  1839  000030                     I2c_ReadData@ReadStatus:
  1840                           	opt stack 0
  1841  000030                     	ds	1
  1842  000031                     I2c_ReadData@TentativeCounter:
  1843                           	opt stack 0
  1844  000031                     	ds	1
  1845  000032                     I2c_ReadData@DataCounter:
  1846                           	opt stack 0
  1847  000032                     	ds	1
  1848  000033                     I2c_ReadData@I2cReadState:
  1849                           	opt stack 0
  1850  000033                     	ds	1
  1851  000034                     I2c_WriteData@WriteStatus:
  1852                           	opt stack 0
  1853  000034                     	ds	1
  1854  000035                     I2c_WriteData@TentativeCounter:
  1855                           	opt stack 0
  1856  000035                     	ds	1
  1857  000036                     I2c_WriteData@I2cNextState:
  1858                           	opt stack 0
  1859  000036                     	ds	1
  1860  000037                     I2c_WriteData@I2cWriteState:
  1861                           	opt stack 0
  1862  000037                     	ds	1
  1863  000038                     _memorizedNumbersCount:
  1864                           	opt stack 0
  1865  000038                     	ds	1
  1866  000039                     _MdmStsReady:
  1867                           	opt stack 0
  1868  000039                     	ds	1
  1869  00003A                     _NewStringMdmTerminal:
  1870                           	opt stack 0
  1871  00003A                     	ds	1
  1872  00003B                     _NewMdmEvtParserRequest:
  1873                           	opt stack 0
  1874  00003B                     	ds	1
  1875  00003C                     _NewStringReceived:
  1876                           	opt stack 0
  1877  00003C                     	ds	1
  1878  00003D                     _MdmResetRequest:
  1879                           	opt stack 0
  1880  00003D                     	ds	1
  1881  00003E                     _CallClosedEvent:
  1882                           	opt stack 0
  1883  00003E                     	ds	1
  1884  00003F                     _IncomingCallEvent:
  1885                           	opt stack 0
  1886  00003F                     	ds	1
  1887  000040                     _NewSmsEvent:
  1888                           	opt stack 0
  1889  000040                     	ds	1
  1890  000041                     _ActivateRiDetection:
  1891                           	opt stack 0
  1892  000041                     	ds	1
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postdec1	equ	0xFE5
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           
  1903                           	psect	bssBANK0
  1904  0000B0                     __pbssBANK0:
  1905                           	opt stack 0
  1906  0000B0                     _inPipes:
  1907                           	opt stack 0
  1908  0000B0                     	ds	6
  1909  0000B6                     _pBDTEntryIn:
  1910                           	opt stack 0
  1911  0000B6                     	ds	6
  1912  0000BC                     _CDCDataOutHandle:
  1913                           	opt stack 0
  1914  0000BC                     	ds	2
  1915  0000BE                     _pBDTEntryEP0OutNext:
  1916                           	opt stack 0
  1917  0000BE                     	ds	2
  1918  0000C0                     _pBDTEntryEP0OutCurrent:
  1919                           	opt stack 0
  1920  0000C0                     	ds	2
  1921  0000C2                     _RxLen:
  1922                           	opt stack 0
  1923  0000C2                     	ds	2
  1924  0000C4                     _cdc_tx_len:
  1925                           	opt stack 0
  1926  0000C4                     	ds	1
  1927  0000C5                     _cdc_trf_state:
  1928                           	opt stack 0
  1929  0000C5                     	ds	1
  1930  0000C6                     _cdc_rx_len:
  1931                           	opt stack 0
  1932  0000C6                     	ds	1
  1933  0000C7                     _USBStatusStageEnabledFlag1:
  1934                           	opt stack 0
  1935  0000C7                     	ds	1
  1936  0000C8                     _USBDeferStatusStagePacket:
  1937                           	opt stack 0
  1938  0000C8                     	ds	1
  1939  0000C9                     _USBStatusStageTimeoutCounter:
  1940                           	opt stack 0
  1941  0000C9                     	ds	1
  1942  0000CA                     _endpoint_number:
  1943                           	opt stack 0
  1944  0000CA                     	ds	1
  1945  0000CB                     _controlTransferState:
  1946                           	opt stack 0
  1947  0000CB                     	ds	1
  1948  0000CC                     _shortPacketStatus:
  1949                           	opt stack 0
  1950  0000CC                     	ds	1
  1951  0000CD                     _USBDeviceState:
  1952                           	opt stack 0
  1953  0000CD                     	ds	1
  1954  0000CE                     _I2cComSts:
  1955                           	opt stack 0
  1956  0000CE                     	ds	1
  1957  0000CF                     HttpGetMethod@GetMethodNextState:
  1958                           	opt stack 0
  1959  0000CF                     	ds	1
  1960  0000D0                     InitGprsNetwork@GprsNetInitNextState:
  1961                           	opt stack 0
  1962  0000D0                     	ds	1
  1963  0000D1                     _MdmStatus:
  1964                           	opt stack 0
  1965  0000D1                     	ds	1
  1966  0000D2                     _PhoneNumbLen:
  1967                           	opt stack 0
  1968  0000D2                     	ds	1
  1969  0000D3                     _SmsLen:
  1970                           	opt stack 0
  1971  0000D3                     	ds	1
  1972  0000D4                     _SystemState:
  1973                           	opt stack 0
  1974  0000D4                     	ds	1
  1975  0000D5                     _USTATcopy:
  1976                           	opt stack 0
  1977  0000D5                     	ds	1
  1978  0000D6                     _USBActiveConfiguration:
  1979                           	opt stack 0
  1980  0000D6                     	ds	1
  1981  0000D7                     _I2cReadDataEvt:
  1982                           	opt stack 0
  1983  0000D7                     	ds	1
  1984  0000D8                     _I2cWriteDataEvt:
  1985                           	opt stack 0
  1986  0000D8                     	ds	1
  1987  0000D9                     _GetMethod:
  1988                           	opt stack 0
  1989  0000D9                     	ds	1
  1990  0000DA                     _InitNetwork:
  1991                           	opt stack 0
  1992  0000DA                     	ds	1
  1993  0000DB                     _SmsTxtReady:
  1994                           	opt stack 0
  1995  0000DB                     	ds	1
  1996  0000DC                     _GetSmsText:
  1997                           	opt stack 0
  1998  0000DC                     	ds	1
  1999  0000DD                     _SmsEvent:
  2000                           	opt stack 0
  2001  0000DD                     	ds	1
  2002  0000DE                     _ClipEvent:
  2003                           	opt stack 0
  2004  0000DE                     	ds	1
  2005  0000DF                     _RingEvent:
  2006                           	opt stack 0
  2007  0000DF                     	ds	1
  2008  0000E0                     _SendSmsEvent:
  2009                           	opt stack 0
  2010  0000E0                     	ds	1
  2011  0000E1                     _MdmOnOffPulseRequest:
  2012                           	opt stack 0
  2013  0000E1                     	ds	1
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           postdec1	equ	0xFE5
  2021                           fsr1h	equ	0xFE2
  2022                           fsr1l	equ	0xFE1
  2023                           
  2024                           	psect	dataBANK0
  2025  0000E2                     __pdataBANK0:
  2026                           	opt stack 0
  2027  0000E2                     isNumberInMemory@currentPosition:
  2028                           	opt stack 0
  2029  0000E2                     	ds	1
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           
  2040                           	psect	bssBANK1
  2041  0001C9                     __pbssBANK1:
  2042                           	opt stack 0
  2043  0001C9                     _outPipes:
  2044                           	opt stack 0
  2045  0001C9                     	ds	8
  2046  0001D1                     _CDCDataInHandle:
  2047                           	opt stack 0
  2048  0001D1                     	ds	2
  2049  0001D3                     initFsm@currentState:
  2050                           	opt stack 0
  2051  0001D3                     	ds	1
  2052  0001D4                     initEeprom@currentState:
  2053                           	opt stack 0
  2054  0001D4                     	ds	1
  2055  0001D5                     initGprsModem@currentState:
  2056                           	opt stack 0
  2057  0001D5                     	ds	1
  2058  0001D6                     MyApp_Task@currentState:
  2059                           	opt stack 0
  2060  0001D6                     	ds	1
  2061  0001D7                     	ds	1
  2062  0001D8                     	ds	1
  2063  0001D9                     	ds	1
  2064  0001DA                     	ds	1
  2065  0001DB                     	ds	1
  2066  0001DC                     	ds	1
  2067  0001DD                     GsmGprsTerminal@SMS:
  2068                           	opt stack 0
  2069  0001DD                     	ds	1
  2070  0001DE                     	ds	1
  2071  0001DF                     _control_signal_bitmap:
  2072                           	opt stack 0
  2073  0001DF                     	ds	1
  2074  0001E0                     _cdc_mem_type:
  2075                           	opt stack 0
  2076  0001E0                     	ds	1
  2077  0001E1                     _USBTicksSinceSuspendEnd:
  2078                           	opt stack 0
  2079  0001E1                     	ds	1
  2080  0001E2                     _BothEP0OutUOWNsSet:
  2081                           	opt stack 0
  2082  0001E2                     	ds	1
  2083  0001E3                     _USBBusIsSuspended:
  2084                           	opt stack 0
  2085  0001E3                     	ds	1
  2086  0001E4                     _RemoteWakeup:
  2087                           	opt stack 0
  2088  0001E4                     	ds	1
  2089  0001E5                     I2cSlv_QueryI2cData@Ret:
  2090                           	opt stack 0
  2091  0001E5                     	ds	1
  2092  0001E6                     I2cSlv_QueryI2cData@I2cOpState:
  2093                           	opt stack 0
  2094  0001E6                     	ds	1
  2095  0001E7                     I2cSendMsgSm@I2cComState:
  2096                           	opt stack 0
  2097  0001E7                     	ds	1
  2098  0001E8                     _I2cBusStatus:
  2099                           	opt stack 0
  2100  0001E8                     	ds	1
  2101  0001E9                     HttpGetMethod@GetMOutSts:
  2102                           	opt stack 0
  2103  0001E9                     	ds	1
  2104  0001EA                     HttpGetMethod@GetMethodState:
  2105                           	opt stack 0
  2106  0001EA                     	ds	1
  2107  0001EB                     InitGprsNetwork@GprsNetInitState:
  2108                           	opt stack 0
  2109  0001EB                     	ds	1
  2110  0001EC                     _PostMethod:
  2111                           	opt stack 0
  2112  0001EC                     	ds	1
  2113  0001ED                     _HttpGetMethodSts:
  2114                           	opt stack 0
  2115  0001ED                     	ds	1
  2116  0001EE                     _GprsNetworkSts:
  2117                           	opt stack 0
  2118  0001EE                     	ds	1
  2119  0001EF                     _ApnLenLocal:
  2120                           	opt stack 0
  2121  0001EF                     	ds	1
  2122  0001F0                     SendSmsSm@SendSms_NextState:
  2123                           	opt stack 0
  2124  0001F0                     	ds	1
  2125  0001F1                     SendSmsSm@SendSms_State:
  2126                           	opt stack 0
  2127  0001F1                     	ds	1
  2128  0001F2                     GetSmsSm@GetSmsState:
  2129                           	opt stack 0
  2130  0001F2                     	ds	1
  2131  0001F3                     ConfigureModem@NextState:
  2132                           	opt stack 0
  2133  0001F3                     	ds	1
  2134  0001F4                     ConfigureModem@MdmConfigState:
  2135                           	opt stack 0
  2136  0001F4                     	ds	1
  2137  0001F5                     _AlarmEvent:
  2138                           	opt stack 0
  2139  0001F5                     	ds	1
  2140  0001F6                     _Led3OutSts:
  2141                           	opt stack 0
  2142  0001F6                     	ds	1
  2143  0001F7                     _Led3Sts:
  2144                           	opt stack 0
  2145  0001F7                     	ds	1
  2146  0001F8                     _Led2OutSts:
  2147                           	opt stack 0
  2148  0001F8                     	ds	1
  2149  0001F9                     _Led2Sts:
  2150                           	opt stack 0
  2151  0001F9                     	ds	1
  2152  0001FA                     _Led1OutSts:
  2153                           	opt stack 0
  2154  0001FA                     	ds	1
  2155  0001FB                     _Led1Sts:
  2156                           	opt stack 0
  2157  0001FB                     	ds	1
  2158  0001FC                     _ReadAddress:
  2159                           	opt stack 0
  2160  0001FC                     	ds	1
  2161  0001FD                     I2cDummyTx@DummyBuffer:
  2162                           	opt stack 0
  2163  0001FD                     	ds	1
  2164                           tblptru	equ	0xFF8
  2165                           tblptrh	equ	0xFF7
  2166                           tblptrl	equ	0xFF6
  2167                           tablat	equ	0xFF5
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postdec1	equ	0xFE5
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           
  2174                           	psect	dataBANK1
  2175  0001FE                     __pdataBANK1:
  2176                           	opt stack 0
  2177  0001FE                     _isMemoryEmpty:
  2178                           	opt stack 0
  2179  0001FE                     	ds	1
  2180  0001FF                     InitGprsNetwork@GprsInitSts:
  2181                           	opt stack 0
  2182  0001FF                     	ds	1
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1h	equ	0xFE2
  2191                           fsr1l	equ	0xFE1
  2192                           
  2193                           	psect	bssBANK2
  2194  0002C9                     __pbssBANK2:
  2195                           	opt stack 0
  2196  0002C9                     _pCDCDst:
  2197                           	opt stack 0
  2198  0002C9                     	ds	3
  2199  0002CC                     _pCDCSrc:
  2200                           	opt stack 0
  2201  0002CC                     	ds	3
  2202  0002CF                     _ep_data_out:
  2203                           	opt stack 0
  2204  0002CF                     	ds	3
  2205  0002D2                     _ep_data_in:
  2206                           	opt stack 0
  2207  0002D2                     	ds	3
  2208  0002D5                     _pDst:
  2209                           	opt stack 0
  2210  0002D5                     	ds	2
  2211  0002D7                     ConfigureModem@DelayValueMs:
  2212                           	opt stack 0
  2213  0002D7                     	ds	2
  2214  0002D9                     TurnOnModem@Counter:
  2215                           	opt stack 0
  2216  0002D9                     	ds	2
  2217  0002DB                     UpdateSchFlag@InterruptCounter:
  2218                           	opt stack 0
  2219  0002DB                     	ds	2
  2220  0002DD                     MdmCntSm@Counter:
  2221                           	opt stack 0
  2222  0002DD                     	ds	2
  2223  0002DF                     RiSm@Counter:
  2224                           	opt stack 0
  2225  0002DF                     	ds	2
  2226  0002E1                     _ExtInt1IsrCallback:
  2227                           	opt stack 0
  2228  0002E1                     	ds	2
  2229  0002E3                     _ExtInt0IsrCallback:
  2230                           	opt stack 0
  2231  0002E3                     	ds	2
  2232  0002E5                     _RtccIsrCallback:
  2233                           	opt stack 0
  2234  0002E5                     	ds	2
  2235  0002E7                     _Tmr4IsrCallback:
  2236                           	opt stack 0
  2237  0002E7                     	ds	2
  2238  0002E9                     _Tmr2IsrCallback:
  2239                           	opt stack 0
  2240  0002E9                     	ds	2
  2241  0002EB                     	ds	1
  2242  0002EC                     Term_MainSm@TermMainSmState:
  2243                           	opt stack 0
  2244  0002EC                     	ds	1
  2245  0002ED                     Terminal@FormatOption:
  2246                           	opt stack 0
  2247  0002ED                     	ds	1
  2248  0002EE                     Terminal@SlaveAddr:
  2249                           	opt stack 0
  2250  0002EE                     	ds	1
  2251  0002EF                     Terminal@PackageLen:
  2252                           	opt stack 0
  2253  0002EF                     	ds	1
  2254  0002F0                     Terminal@TermState:
  2255                           	opt stack 0
  2256  0002F0                     	ds	1
  2257  0002F1                     _USBAlternateInterface:
  2258                           	opt stack 0
  2259  0002F1                     	ds	2
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           postdec1	equ	0xFE5
  2267                           fsr1h	equ	0xFE2
  2268                           fsr1l	equ	0xFE1
  2269                           
  2270                           	psect	dataBANK2
  2271  0002F3                     __pdataBANK2:
  2272                           	opt stack 0
  2273  0002F3                     Terminal@EchoOption:
  2274                           	opt stack 0
  2275  0002F3                     	ds	1
  2276  0002F4                     _MainSystemTimebaseFlag:
  2277                           	opt stack 0
  2278  0002F4                     	ds	1
  2279  0002F5                     _ConnTimeout:
  2280                           	opt stack 0
  2281  0002F5                     	ds	11
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           
  2292                           	psect	bssBANK3
  2293  000300                     __pbssBANK3:
  2294                           	opt stack 0
  2295  000300                     _Rtcm_SystemDate:
  2296                           	opt stack 0
  2297  000300                     	ds	8
  2298  000308                     _Rtcm_RtccAlarm:
  2299                           	opt stack 0
  2300  000308                     	ds	6
  2301  00030E                     _pBDTEntryOut:
  2302                           	opt stack 0
  2303  00030E                     	ds	6
  2304  000314                     _BaudRateGen:
  2305                           	opt stack 0
  2306  000314                     	ds	4
  2307  000318                     _USB1msTickCount:
  2308                           	opt stack 0
  2309  000318                     	ds	4
  2310  00031C                     _OsTmr_OsTickCounter:
  2311                           	opt stack 0
  2312  00031C                     	ds	4
  2313  000320                     	ds	2
  2314  000322                     _UsbMasterPhoneNumberLen:
  2315                           	opt stack 0
  2316  000322                     	ds	2
  2317  000324                     _ApnLocal:
  2318                           	opt stack 0
  2319  000324                     	ds	2
  2320  000326                     ConfigureModem@DelayCounter:
  2321                           	opt stack 0
  2322  000326                     	ds	2
  2323  000328                     _UartConfig:
  2324                           	opt stack 0
  2325  000328                     	ds	21
  2326  00033D                     I2cSlv_QueryI2cData@TimeoutTimer:
  2327                           	opt stack 0
  2328  00033D                     	ds	11
  2329  000348                     _I2cConfig:
  2330                           	opt stack 0
  2331  000348                     	ds	10
  2332  000352                     _Led3Blink:
  2333                           	opt stack 0
  2334  000352                     	ds	9
  2335  00035B                     _Led2Blink:
  2336                           	opt stack 0
  2337  00035B                     	ds	9
  2338  000364                     _Led1Blink:
  2339                           	opt stack 0
  2340  000364                     	ds	9
  2341  00036D                     _dummy_encapsulated_cmd_response:
  2342                           	opt stack 0
  2343  00036D                     	ds	8
  2344  000375                     _line_coding:
  2345                           	opt stack 0
  2346  000375                     	ds	7
  2347  00037C                     _Led3Pulse:
  2348                           	opt stack 0
  2349  00037C                     	ds	6
  2350  000382                     _Led2Pulse:
  2351                           	opt stack 0
  2352  000382                     	ds	6
  2353  000388                     _Led1Pulse:
  2354                           	opt stack 0
  2355  000388                     	ds	6
  2356  00038E                     _I2cRxPacket:
  2357                           	opt stack 0
  2358  00038E                     	ds	6
  2359  000394                     _memoryPreamble:
  2360                           	opt stack 0
  2361  000394                     	ds	5
  2362  000399                     _I2cTxPacket:
  2363                           	opt stack 0
  2364  000399                     	ds	5
  2365  00039E                     _HttpGetDataLocal:
  2366                           	opt stack 0
  2367  00039E                     	ds	5
  2368  0003A3                     Terminal@Addr:
  2369                           	opt stack 0
  2370  0003A3                     	ds	4
  2371  0003A7                     Terminal@Len:
  2372                           	opt stack 0
  2373  0003A7                     	ds	4
  2374  0003AB                     _AlCfg:
  2375                           	opt stack 0
  2376  0003AB                     	ds	4
  2377  0003AF                     _RtcConfig:
  2378                           	opt stack 0
  2379  0003AF                     	ds	4
  2380  0003B3                     _setupCallTicks:
  2381                           	opt stack 0
  2382  0003B3                     	ds	2
  2383  0003B5                     initGprsModem@modemCounter:
  2384                           	opt stack 0
  2385  0003B5                     	ds	2
  2386                           tblptru	equ	0xFF8
  2387                           tblptrh	equ	0xFF7
  2388                           tblptrl	equ	0xFF6
  2389                           tablat	equ	0xFF5
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           postdec1	equ	0xFE5
  2393                           fsr1h	equ	0xFE2
  2394                           fsr1l	equ	0xFE1
  2395                           
  2396                           	psect	dataBANK3
  2397  0003B7                     __pdataBANK3:
  2398                           	opt stack 0
  2399  0003B7                     ModemEvtParser@F9112:
  2400                           	opt stack 0
  2401  0003B7                     	ds	10
  2402  0003C1                     ModemEvtParser@F9110:
  2403                           	opt stack 0
  2404  0003C1                     	ds	5
  2405  0003C6                     ModemEvtParser@F9108:
  2406                           	opt stack 0
  2407  0003C6                     	ds	5
  2408  0003CB                     ModemEvtParser@F9106:
  2409                           	opt stack 0
  2410  0003CB                     	ds	4
  2411  0003CF                     MyApp_Task@F9031:
  2412                           	opt stack 0
  2413  0003CF                     	ds	3
  2414  0003D2                     triggerRelay@F9023:
  2415                           	opt stack 0
  2416  0003D2                     	ds	2
  2417  0003D4                     Term_MainSm@TermDelay:
  2418                           	opt stack 0
  2419  0003D4                     	ds	11
  2420  0003DF                     _ConnWait:
  2421                           	opt stack 0
  2422  0003DF                     	ds	11
  2423  0003EA                     SendSmsSm@SwTimer:
  2424                           	opt stack 0
  2425  0003EA                     	ds	11
  2426  0003F5                     CheckModem@Timeout:
  2427                           	opt stack 0
  2428  0003F5                     	ds	11
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	bssBANK4
  2440  000440                     __pbssBANK4:
  2441                           	opt stack 0
  2442  000440                     _UsbMasterPhoneNumber:
  2443                           	opt stack 0
  2444  000440                     	ds	15
  2445  00044F                     	ds	10
  2446  000459                     _cdc_notice:
  2447                           	opt stack 0
  2448  000459                     	ds	10
  2449  000463                     Term_MainSm@Data:
  2450                           	opt stack 0
  2451  000463                     	ds	50
  2452  000495                     _smsText:
  2453                           	opt stack 0
  2454  000495                     	ds	20
  2455  0004A9                     _PhoneNumber:
  2456                           	opt stack 0
  2457  0004A9                     	ds	20
  2458  0004BD                     _EepromBuffer:
  2459                           	opt stack 0
  2460  0004BD                     	ds	15
  2461  0004CC                     _callerNumber:
  2462                           	opt stack 0
  2463  0004CC                     	ds	13
  2464  0004D9                     Terminal@SwTimer:
  2465                           	opt stack 0
  2466  0004D9                     	ds	11
  2467  0004E4                     I2cSlv_QueryI2cData@QueryTimer:
  2468                           	opt stack 0
  2469  0004E4                     	ds	11
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1h	equ	0xFE2
  2478                           fsr1l	equ	0xFE1
  2479                           
  2480                           	psect	dataBANK4
  2481  0004EF                     __pdataBANK4:
  2482                           	opt stack 0
  2483  0004EF                     	ds	13
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           
  2494                           	psect	bssBANK5
  2495  000500                     __pbssBANK5:
  2496                           	opt stack 0
  2497  000500                     _cdc_data_rx:
  2498                           	opt stack 0
  2499  000500                     	ds	64
  2500  000540                     Terminal@TermRxBuffer:
  2501                           	opt stack 0
  2502  000540                     	ds	50
  2503  000572                     _MessageText:
  2504                           	opt stack 0
  2505  000572                     	ds	50
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           postdec1	equ	0xFE5
  2513                           fsr1h	equ	0xFE2
  2514                           fsr1l	equ	0xFE1
  2515                           
  2516                           	psect	dataBANK5
  2517  0005A4                     __pdataBANK5:
  2518                           	opt stack 0
  2519  0005A4                     _TaskTable:
  2520                           	opt stack 0
  2521  0005A4                     	ds	80
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           
  2532                           	psect	bssBANK6
  2533  000600                     __pbssBANK6:
  2534                           	opt stack 0
  2535  000600                     _OsAlarms:
  2536                           	opt stack 0
  2537  000600                     	ds	220
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1h	equ	0xFE2
  2546                           fsr1l	equ	0xFE1
  2547                           
  2548                           	psect	bssBANK7
  2549  000700                     __pbssBANK7:
  2550                           	opt stack 0
  2551  000700                     _Mdm_SmsRx:
  2552                           	opt stack 0
  2553  000700                     	ds	102
  2554  000766                     Terminal@Payload:
  2555                           	opt stack 0
  2556  000766                     	ds	80
  2557  0007B6                     _cdc_data_tx:
  2558                           	opt stack 0
  2559  0007B6                     	ds	64
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           postinc0	equ	0xFEE
  2565                           wreg	equ	0xFE8
  2566                           postdec1	equ	0xFE5
  2567                           fsr1h	equ	0xFE2
  2568                           fsr1l	equ	0xFE1
  2569                           
  2570                           	psect	bssBANK8
  2571  000800                     __pbssBANK8:
  2572                           	opt stack 0
  2573  000800                     GsmGprsTerminal@UsbBuffer:
  2574                           	opt stack 0
  2575  000800                     	ds	200
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           
  2586                           	psect	bssBANK9
  2587  000900                     __pbssBANK9:
  2588                           	opt stack 0
  2589  000900                     GsmGprsTerminal@UartBuffer:
  2590                           	opt stack 0
  2591  000900                     	ds	200
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           
  2602                           	psect	bssBIGRAMl
  2603  000AC8                     __pbssBIGRAMl:
  2604                           	opt stack 0
  2605  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2606                           	opt stack 0
  2607  000AC8                     	ds	400
  2608  000C58                     _RxBuffer:
  2609                           	opt stack 0
  2610  000C58                     	ds	400
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           postdec1	equ	0xFE5
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           
  2621                           	psect	cstackBANK10
  2622  000A00                     __pcstackBANK10:
  2623                           	opt stack 0
  2624  000A00                     Terminal@UsbRxBuffer:
  2625                           	opt stack 0
  2626                           
  2627                           ; 200 bytes @ 0x0
  2628  000A00                     	ds	200
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1h	equ	0xFE2
  2637                           fsr1l	equ	0xFE1
  2638                           
  2639                           	psect	cstackBANK4
  2640  0004FC                     __pcstackBANK4:
  2641                           	opt stack 0
  2642  0004FC                     ??_InitializeTasks:
  2643  0004FC                     ??_ScheduleTasks:
  2644                           
  2645                           ; 1 bytes @ 0x0
  2646  0004FC                     	ds	4
  2647                           tblptru	equ	0xFF8
  2648                           tblptrh	equ	0xFF7
  2649                           tblptrl	equ	0xFF6
  2650                           tablat	equ	0xFF5
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           postdec1	equ	0xFE5
  2654                           fsr1h	equ	0xFE2
  2655                           fsr1l	equ	0xFE1
  2656                           
  2657                           	psect	cstackBANK2
  2658  000200                     __pcstackBANK2:
  2659                           	opt stack 0
  2660  000200                     Terminal@UsbTxBuffer:
  2661                           	opt stack 0
  2662                           
  2663                           ; 200 bytes @ 0x0
  2664  000200                     	ds	200
  2665  0002C8                     InitializeTasks@ActiveTaskIndex:
  2666                           	opt stack 0
  2667  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2668                           	opt stack 0
  2669                           
  2670                           ; 1 bytes @ 0xC8
  2671  0002C8                     	ds	1
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1h	equ	0xFE2
  2680                           fsr1l	equ	0xFE1
  2681                           
  2682                           	psect	cstackBANK1
  2683  000100                     __pcstackBANK1:
  2684                           	opt stack 0
  2685  000100                     initEeprom@addressToRead:
  2686                           	opt stack 0
  2687  000100                     isNumberInMemory@phoneNumber:
  2688                           	opt stack 0
  2689  000100                     SendSmsSm@UartMessage:
  2690                           	opt stack 0
  2691  000100                     InitGprsNetwork@UartMessage:
  2692                           	opt stack 0
  2693  000100                     Terminal@TermTxBuffer:
  2694                           	opt stack 0
  2695  000100                     HttpGetMethod@UartMessage:
  2696                           	opt stack 0
  2697                           
  2698                           ; 200 bytes @ 0x0
  2699  000100                     	ds	1
  2700  000101                     initEeprom@memoryOpResult:
  2701                           	opt stack 0
  2702                           
  2703                           ; 1 bytes @ 0x1
  2704  000101                     	ds	1
  2705  000102                     initEeprom@isInitialized:
  2706                           	opt stack 0
  2707  000102                     isNumberInMemory@readBuffer:
  2708                           	opt stack 0
  2709                           
  2710                           ; 13 bytes @ 0x2
  2711  000102                     	ds	1
  2712  000103                     initFsm@isInitialized:
  2713                           	opt stack 0
  2714                           
  2715                           ; 1 bytes @ 0x3
  2716  000103                     	ds	12
  2717  00010F                     isNumberInMemory@searchFailed:
  2718                           	opt stack 0
  2719                           
  2720                           ; 1 bytes @ 0xF
  2721  00010F                     	ds	1
  2722  000110                     isNumberInMemory@searchInProgress:
  2723                           	opt stack 0
  2724                           
  2725                           ; 1 bytes @ 0x10
  2726  000110                     	ds	1
  2727  000111                     isNumberInMemory@positionInMemory:
  2728                           	opt stack 0
  2729                           
  2730                           ; 1 bytes @ 0x11
  2731  000111                     	ds	1
  2732  000112                     isNumberInMemory@memoryOpResult:
  2733                           	opt stack 0
  2734                           
  2735                           ; 1 bytes @ 0x12
  2736  000112                     	ds	1
  2737  000113                     MyApp_Task@cmpString:
  2738                           	opt stack 0
  2739                           
  2740                           ; 3 bytes @ 0x13
  2741  000113                     	ds	3
  2742  000116                     MyApp_Task@cmdAddNumber:
  2743                           	opt stack 0
  2744                           
  2745                           ; 4 bytes @ 0x16
  2746  000116                     	ds	4
  2747  00011A                     MyApp_Task@memoryResult:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x1A
  2751  00011A                     	ds	1
  2752  00011B                     MyApp_Task@numberInMemory:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0x1B
  2756  00011B                     	ds	23
  2757  000132                     InitGprsNetwork@Index:
  2758                           	opt stack 0
  2759  000132                     Term_MainSm@FwkMajorStr:
  2760                           	opt stack 0
  2761                           
  2762                           ; 4 bytes @ 0x32
  2763  000132                     	ds	4
  2764  000136                     Term_MainSm@FwkMinorStr:
  2765                           	opt stack 0
  2766                           
  2767                           ; 4 bytes @ 0x36
  2768  000136                     	ds	4
  2769  00013A                     Term_MainSm@FwkBuildStr:
  2770                           	opt stack 0
  2771                           
  2772                           ; 4 bytes @ 0x3A
  2773  00013A                     	ds	142
  2774  0001C8                     HttpGetMethod@Index:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0xC8
  2778  0001C8                     	ds	1
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           postinc0	equ	0xFEE
  2784                           wreg	equ	0xFE8
  2785                           postdec1	equ	0xFE5
  2786                           fsr1h	equ	0xFE2
  2787                           fsr1l	equ	0xFE1
  2788                           
  2789                           	psect	cstackBANK0
  2790  000060                     __pcstackBANK0:
  2791                           	opt stack 0
  2792  000060                     
  2793                           ; 1 bytes @ 0x0
  2794  000060                     	ds	8
  2795  000068                     ??_LowPriorityIsr:
  2796                           
  2797                           ; 1 bytes @ 0x8
  2798  000068                     	ds	21
  2799  00007D                     ??_isdigit:
  2800  00007D                     ??_isspace:
  2801  00007D                     ??_isupper:
  2802  00007D                     ??_Rtcc_GetRtccValue:
  2803  00007D                     ??_UartTxBufferStatus:
  2804  00007D                     ??_USBStdGetDscHandler:
  2805  00007D                     ??_USBStdGetStatusHandler:
  2806  00007D                     ?_USBTransferOnePacket:
  2807                           	opt stack 0
  2808  00007D                     ?_strlen:
  2809                           	opt stack 0
  2810  00007D                     ?_sprintf:
  2811                           	opt stack 0
  2812  00007D                     ?_initPreamble:
  2813                           	opt stack 0
  2814  00007D                     ?___wmul:
  2815                           	opt stack 0
  2816  00007D                     ?___awdiv:
  2817                           	opt stack 0
  2818  00007D                     ?___awmod:
  2819                           	opt stack 0
  2820  00007D                     ?___lwmod:
  2821                           	opt stack 0
  2822  00007D                     ?_GetOsTickCounter:
  2823                           	opt stack 0
  2824  00007D                     ?___lmul:
  2825                           	opt stack 0
  2826  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2827                           	opt stack 0
  2828  00007D                     SetAckStatus@AckSts:
  2829                           	opt stack 0
  2830  00007D                     WriteByte@Byte:
  2831                           	opt stack 0
  2832  00007D                     ReadByte@Byte:
  2833                           	opt stack 0
  2834  00007D                     Mcu_SetWdgSts@WdgSts:
  2835                           	opt stack 0
  2836  00007D                     RtccIrqInit@Priority:
  2837                           	opt stack 0
  2838  00007D                     Rtcc_SetRtcStatus@Status:
  2839                           	opt stack 0
  2840  00007D                     TmrBInit@Prescaler:
  2841                           	opt stack 0
  2842  00007D                     Tmr_TmrBIrqSet@Priority:
  2843                           	opt stack 0
  2844  00007D                     Tmr_StartTmr@TmrNumb:
  2845                           	opt stack 0
  2846  00007D                     UartWriteByte@ByteToWrite:
  2847                           	opt stack 0
  2848  00007D                     USBTransferOnePacket@dir:
  2849                           	opt stack 0
  2850  00007D                     USBConfigureEndpoint@direction:
  2851                           	opt stack 0
  2852  00007D                     USBCtrlTrfTxService@byteToSend:
  2853                           	opt stack 0
  2854  00007D                     USBCtrlTrfRxService@i:
  2855                           	opt stack 0
  2856  00007D                     Led_SetLedStatus@LedSts:
  2857                           	opt stack 0
  2858  00007D                     toupper@c:
  2859                           	opt stack 0
  2860  00007D                     tolower@c:
  2861                           	opt stack 0
  2862  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2863                           	opt stack 0
  2864  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2865                           	opt stack 0
  2866  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2867                           	opt stack 0
  2868  00007D                     Uart_ClearRxBuffer@Index:
  2869                           	opt stack 0
  2870  00007D                     GenerateEvt@Event:
  2871                           	opt stack 0
  2872  00007D                     ReceiveEvt@Event:
  2873                           	opt stack 0
  2874  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2875                           	opt stack 0
  2876  00007D                     StringCompare@String1:
  2877                           	opt stack 0
  2878  00007D                     StringCopy@SourceStr:
  2879                           	opt stack 0
  2880  00007D                     ClearBuffer@Buffer:
  2881                           	opt stack 0
  2882  00007D                     isNumberValid@phoneNumber:
  2883                           	opt stack 0
  2884  00007D                     sprintf@sp:
  2885                           	opt stack 0
  2886  00007D                     ___wmul@multiplier:
  2887                           	opt stack 0
  2888  00007D                     ___awdiv@dividend:
  2889                           	opt stack 0
  2890  00007D                     ___awmod@dividend:
  2891                           	opt stack 0
  2892  00007D                     ___lwmod@dividend:
  2893                           	opt stack 0
  2894  00007D                     memcpy@d1:
  2895                           	opt stack 0
  2896  00007D                     memset@p1:
  2897                           	opt stack 0
  2898  00007D                     strcat@to:
  2899                           	opt stack 0
  2900  00007D                     strcpy@to:
  2901                           	opt stack 0
  2902  00007D                     strlen@s:
  2903                           	opt stack 0
  2904  00007D                     ___lmul@multiplier:
  2905                           	opt stack 0
  2906                           
  2907                           ; 4 bytes @ 0x1D
  2908  00007D                     	ds	1
  2909  00007E                     ??_USBConfigureEndpoint:
  2910  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2911                           	opt stack 0
  2912  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2913                           	opt stack 0
  2914  00007E                     TmrBInit@Postscaler:
  2915                           	opt stack 0
  2916  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2917                           	opt stack 0
  2918  00007E                     UartWriteByte@Module:
  2919                           	opt stack 0
  2920  00007E                     UartTxBufferStatus@Module:
  2921                           	opt stack 0
  2922  00007E                     USBCtrlTrfRxService@byteToRead:
  2923                           	opt stack 0
  2924  00007E                     USBCtrlTrfInHandler@lastDTS:
  2925                           	opt stack 0
  2926  00007E                     Led_SetLedStatus@Led:
  2927                           	opt stack 0
  2928  00007E                     _isdigit$6346:
  2929                           	opt stack 0
  2930  00007E                     _isspace$6615:
  2931                           	opt stack 0
  2932  00007E                     _isupper$6618:
  2933                           	opt stack 0
  2934  00007E                     I2c_WriteData@WritePacket:
  2935                           	opt stack 0
  2936  00007E                     Rtcc_RtcConfig@RtcConfig:
  2937                           	opt stack 0
  2938  00007E                     USBTransferOnePacket@data:
  2939                           	opt stack 0
  2940  00007E                     USBStdGetStatusHandler@p:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x1E
  2944  00007E                     	ds	1
  2945  00007F                     ??_strlen:
  2946  00007F                     ??_Rtcc_AlarmConfig:
  2947  00007F                     ??_TmrBInit:
  2948  00007F                     Irq_InitIntController@IntPriorityEn:
  2949                           	opt stack 0
  2950  00007F                     Rtcc_GetRtccValue@RetValue:
  2951                           	opt stack 0
  2952  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2953                           	opt stack 0
  2954  00007F                     UartTxBufferStatus@TxBufferStatus:
  2955                           	opt stack 0
  2956  00007F                     GenerateEvt@EventStatus:
  2957                           	opt stack 0
  2958  00007F                     isdigit@c:
  2959                           	opt stack 0
  2960  00007F                     isspace@c:
  2961                           	opt stack 0
  2962  00007F                     isupper@c:
  2963                           	opt stack 0
  2964  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2965                           	opt stack 0
  2966  00007F                     StringCompare@String2:
  2967                           	opt stack 0
  2968  00007F                     StringCopy@DestStr:
  2969                           	opt stack 0
  2970  00007F                     ClearBuffer@Len:
  2971                           	opt stack 0
  2972  00007F                     sprintf@f:
  2973                           	opt stack 0
  2974  00007F                     ___wmul@multiplicand:
  2975                           	opt stack 0
  2976  00007F                     ___awdiv@divisor:
  2977                           	opt stack 0
  2978  00007F                     ___awmod@divisor:
  2979                           	opt stack 0
  2980  00007F                     ___lwmod@divisor:
  2981                           	opt stack 0
  2982  00007F                     memcpy@s1:
  2983                           	opt stack 0
  2984  00007F                     memset@c:
  2985                           	opt stack 0
  2986  00007F                     strcat@from:
  2987                           	opt stack 0
  2988  00007F                     strcpy@from:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x1F
  2992  00007F                     	ds	1
  2993  000080                     ??_isalpha:
  2994  000080                     ??_isxdigit:
  2995  000080                     ??_I2c_WriteData:
  2996  000080                     ??_Rtcc_RtcConfig:
  2997  000080                     Rtcc_GetRtccValue@RegValue:
  2998                           	opt stack 0
  2999  000080                     TmrBInit@TmrNumb:
  3000                           	opt stack 0
  3001  000080                     ReceiveEvt@EventStatus:
  3002                           	opt stack 0
  3003  000080                     USBTransferOnePacket@len:
  3004                           	opt stack 0
  3005  000080                     isNumberValid@isNumberOk:
  3006                           	opt stack 0
  3007  000080                     I2c_ReadData@ReadPacket:
  3008                           	opt stack 0
  3009  000080                     Uart_WriteConstString@ConstStringToWrite:
  3010                           	opt stack 0
  3011  000080                     Uart_WriteString@StringToWrite:
  3012                           	opt stack 0
  3013  000080                     Uart_WriteStringLen@StringToWrite:
  3014                           	opt stack 0
  3015  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3016                           	opt stack 0
  3017  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x20
  3021  000080                     	ds	1
  3022  000081                     ?_GetElapsedTime:
  3023                           	opt stack 0
  3024  000081                     ?_Rtcm_GetRtccDate:
  3025                           	opt stack 0
  3026  000081                     Mdm_IsSmsReceived@Ret:
  3027                           	opt stack 0
  3028  000081                     Mdm_IsRinging@Ret:
  3029                           	opt stack 0
  3030  000081                     I2cSlv_I2cReadMsgSts@Result:
  3031                           	opt stack 0
  3032  000081                     USBTransferOnePacket@ep:
  3033                           	opt stack 0
  3034  000081                     Led_SetLedBlinkTime@Led:
  3035                           	opt stack 0
  3036  000081                     isNumberValid@i:
  3037                           	opt stack 0
  3038  000081                     ___awdiv@counter:
  3039                           	opt stack 0
  3040  000081                     ___awmod@counter:
  3041                           	opt stack 0
  3042  000081                     ___lwmod@counter:
  3043                           	opt stack 0
  3044  000081                     _isalpha$6612:
  3045                           	opt stack 0
  3046  000081                     _isxdigit$6622:
  3047                           	opt stack 0
  3048  000081                     OsTmr_StartTimer@Timer:
  3049                           	opt stack 0
  3050  000081                     StringCompare@Len:
  3051                           	opt stack 0
  3052  000081                     StringCopy@Len:
  3053                           	opt stack 0
  3054  000081                     ClearBuffer@Index:
  3055                           	opt stack 0
  3056  000081                     ___wmul@product:
  3057                           	opt stack 0
  3058  000081                     memcpy@n:
  3059                           	opt stack 0
  3060  000081                     memset@n:
  3061                           	opt stack 0
  3062  000081                     strcat@cp:
  3063                           	opt stack 0
  3064  000081                     strcpy@cp:
  3065                           	opt stack 0
  3066  000081                     strlen@cp:
  3067                           	opt stack 0
  3068  000081                     GetElapsedTime@StartTime:
  3069                           	opt stack 0
  3070  000081                     ___lmul@multiplicand:
  3071                           	opt stack 0
  3072                           
  3073                           ; 4 bytes @ 0x21
  3074  000081                     	ds	1
  3075  000082                     ??_I2c_ReadData:
  3076  000082                     Uart_WriteConstString@Module:
  3077                           	opt stack 0
  3078  000082                     Uart_WriteString@Module:
  3079                           	opt stack 0
  3080  000082                     Uart_WriteStringLen@Len:
  3081                           	opt stack 0
  3082  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3083                           	opt stack 0
  3084  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3085                           	opt stack 0
  3086  000082                     USBConfigureEndpoint@EPNum:
  3087                           	opt stack 0
  3088  000082                     ___awdiv@sign:
  3089                           	opt stack 0
  3090  000082                     ___awmod@sign:
  3091                           	opt stack 0
  3092  000082                     isalpha@c:
  3093                           	opt stack 0
  3094  000082                     isxdigit@c:
  3095                           	opt stack 0
  3096  000082                     USBTransferOnePacket@handle:
  3097                           	opt stack 0
  3098                           
  3099                           ; 2 bytes @ 0x22
  3100  000082                     	ds	1
  3101  000083                     ??_StringCopy:
  3102  000083                     ?_GetCallerNumber:
  3103                           	opt stack 0
  3104  000083                     ?_atoi:
  3105                           	opt stack 0
  3106  000083                     ?_xtoi:
  3107                           	opt stack 0
  3108  000083                     ?___lwdiv:
  3109                           	opt stack 0
  3110  000083                     Uart_WriteStringLen@Index:
  3111                           	opt stack 0
  3112  000083                     Mdm_SetSmsFormat@Index:
  3113                           	opt stack 0
  3114  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3115                           	opt stack 0
  3116  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3117                           	opt stack 0
  3118  000083                     getSetupCall@isCalledReceived:
  3119                           	opt stack 0
  3120  000083                     sprintf@flag:
  3121                           	opt stack 0
  3122  000083                     memcpy@tmp:
  3123                           	opt stack 0
  3124  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3125                           	opt stack 0
  3126  000083                     USBConfigureEndpoint@handle:
  3127                           	opt stack 0
  3128  000083                     putUSBUSART@data:
  3129                           	opt stack 0
  3130  000083                     atoi@s:
  3131                           	opt stack 0
  3132  000083                     ___awdiv@quotient:
  3133                           	opt stack 0
  3134  000083                     ___lwdiv@dividend:
  3135                           	opt stack 0
  3136  000083                     memset@p:
  3137                           	opt stack 0
  3138  000083                     xtoi@s:
  3139                           	opt stack 0
  3140  000083                     OsTmr_StartTimer@Timeout:
  3141                           	opt stack 0
  3142                           
  3143                           ; 4 bytes @ 0x23
  3144  000083                     	ds	1
  3145  000084                     Uart_WriteStringLen@Module:
  3146                           	opt stack 0
  3147  000084                     I2cSlv_SendI2cMsg@TxSts:
  3148                           	opt stack 0
  3149  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3150                           	opt stack 0
  3151  000084                     CDCTxService@i:
  3152                           	opt stack 0
  3153  000084                     getsUSBUSART@buffer:
  3154                           	opt stack 0
  3155  000084                     sprintf@ap:
  3156                           	opt stack 0
  3157  000084                     memcpy@d:
  3158                           	opt stack 0
  3159  000084                     Mdm_SetSmsFormat@UartMessage:
  3160                           	opt stack 0
  3161                           
  3162                           ; 20 bytes @ 0x24
  3163  000084                     	ds	1
  3164  000085                     ??_atoi:
  3165  000085                     ??_xtoi:
  3166  000085                     ??_GetElapsedTime:
  3167  000085                     Rtcc_SetRtccValue@Value:
  3168                           	opt stack 0
  3169  000085                     USBDeviceInit@i:
  3170                           	opt stack 0
  3171  000085                     USBEnableEndpoint@options:
  3172                           	opt stack 0
  3173  000085                     putUSBUSART@length:
  3174                           	opt stack 0
  3175  000085                     CDCTxService@byte_to_send:
  3176                           	opt stack 0
  3177  000085                     StringCompare@Result:
  3178                           	opt stack 0
  3179  000085                     StringCopy@Index:
  3180                           	opt stack 0
  3181  000085                     ___lwdiv@divisor:
  3182                           	opt stack 0
  3183  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3184                           	opt stack 0
  3185  000085                     ___lmul@product:
  3186                           	opt stack 0
  3187                           
  3188                           ; 4 bytes @ 0x25
  3189  000085                     	ds	1
  3190  000086                     ??_Rtcc_SetRtccValue:
  3191  000086                     getsUSBUSART@len:
  3192                           	opt stack 0
  3193  000086                     sprintf@c:
  3194                           	opt stack 0
  3195  000086                     USBEnableEndpoint@p:
  3196                           	opt stack 0
  3197  000086                     StringCompare@Index:
  3198                           	opt stack 0
  3199  000086                     memcpy@s:
  3200                           	opt stack 0
  3201                           
  3202                           ; 2 bytes @ 0x26
  3203  000086                     	ds	1
  3204  000087                     atoi@sign:
  3205                           	opt stack 0
  3206  000087                     ___lwdiv@counter:
  3207                           	opt stack 0
  3208  000087                     xtoi@sign:
  3209                           	opt stack 0
  3210  000087                     Mdm_GetSmsData@MessageText:
  3211                           	opt stack 0
  3212  000087                     Eeprom_Write@WriteBuffer:
  3213                           	opt stack 0
  3214  000087                     sprintf@cp:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x27
  3218  000087                     	ds	1
  3219  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3220                           	opt stack 0
  3221  000088                     USBEnableEndpoint@ep:
  3222                           	opt stack 0
  3223  000088                     parseCommand@text:
  3224                           	opt stack 0
  3225  000088                     atoi@a:
  3226                           	opt stack 0
  3227  000088                     ___lwdiv@quotient:
  3228                           	opt stack 0
  3229  000088                     xtoi@val:
  3230                           	opt stack 0
  3231  000088                     ModemEvtParser@CallReadyString:
  3232                           	opt stack 0
  3233                           
  3234                           ; 10 bytes @ 0x28
  3235  000088                     	ds	1
  3236  000089                     ??_Rtcm_GetRtccDate:
  3237  000089                     ?_strtol:
  3238                           	opt stack 0
  3239  000089                     ?___lldiv:
  3240                           	opt stack 0
  3241  000089                     Mdm_GetSmsData@GetSmsStatus:
  3242                           	opt stack 0
  3243  000089                     Eeprom_Write@DataLength:
  3244                           	opt stack 0
  3245  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3246                           	opt stack 0
  3247  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3248                           	opt stack 0
  3249  000089                     strtol@s:
  3250                           	opt stack 0
  3251  000089                     ___lldiv@dividend:
  3252                           	opt stack 0
  3253  000089                     Rtcm_SetRtccDate@Date:
  3254                           	opt stack 0
  3255                           
  3256                           ; 8 bytes @ 0x29
  3257  000089                     	ds	1
  3258  00008A                     Eeprom_Write@WriteSts:
  3259                           	opt stack 0
  3260  00008A                     xtoi@c:
  3261                           	opt stack 0
  3262  00008A                     LedBlinkStateMachine@LedBlink:
  3263                           	opt stack 0
  3264  00008A                     LedPulseStateMachine@LedPulse:
  3265                           	opt stack 0
  3266  00008A                     secondsAppTimer@counter:
  3267                           	opt stack 0
  3268  00008A                     utoa@buf:
  3269                           	opt stack 0
  3270  00008A                     parseCommand@addNumberCmd:
  3271                           	opt stack 0
  3272  00008A                     Rtcm_GetRtccDate@LocalDate:
  3273                           	opt stack 0
  3274                           
  3275                           ; 8 bytes @ 0x2A
  3276  00008A                     	ds	1
  3277  00008B                     Eeprom_Write@MemoryAddress:
  3278                           	opt stack 0
  3279  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3280                           	opt stack 0
  3281  00008B                     strtol@endptr:
  3282                           	opt stack 0
  3283                           
  3284                           ; 2 bytes @ 0x2B
  3285  00008B                     	ds	1
  3286  00008C                     Eeprom_Write@SlaveAddress:
  3287                           	opt stack 0
  3288  00008C                     LedPulseStateMachine@Led:
  3289                           	opt stack 0
  3290  00008C                     secondsAppTimer@isCyclic:
  3291                           	opt stack 0
  3292  00008C                     utoa@val:
  3293                           	opt stack 0
  3294                           
  3295                           ; 2 bytes @ 0x2C
  3296  00008C                     	ds	1
  3297  00008D                     Eeprom_Write@CommandLength:
  3298                           	opt stack 0
  3299  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3300                           	opt stack 0
  3301  00008D                     strtol@base:
  3302                           	opt stack 0
  3303  00008D                     parseCommand@deleteNumberCmd:
  3304                           	opt stack 0
  3305  00008D                     GetElapsedTime@TimeValue:
  3306                           	opt stack 0
  3307  00008D                     ___lldiv@divisor:
  3308                           	opt stack 0
  3309                           
  3310                           ; 4 bytes @ 0x2D
  3311  00008D                     	ds	1
  3312  00008E                     saveNumberInMemory@phoneNumber:
  3313                           	opt stack 0
  3314  00008E                     utoa@base:
  3315                           	opt stack 0
  3316                           
  3317                           ; 2 bytes @ 0x2E
  3318  00008E                     	ds	1
  3319  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3320  00008F                     ??_strtol:
  3321  00008F                     secondsAppTimer@seconds:
  3322                           	opt stack 0
  3323  00008F                     LedStateMachine@LedSts:
  3324                           	opt stack 0
  3325                           
  3326                           ; 2 bytes @ 0x2F
  3327  00008F                     	ds	1
  3328  000090                     parseCommand@state:
  3329                           	opt stack 0
  3330  000090                     secondsAppTimer@isExpired:
  3331                           	opt stack 0
  3332  000090                     saveNumberInMemory@address:
  3333                           	opt stack 0
  3334  000090                     utoa@v:
  3335                           	opt stack 0
  3336                           
  3337                           ; 2 bytes @ 0x30
  3338  000090                     	ds	1
  3339  000091                     ??_USBStdFeatureReqHandler:
  3340  000091                     USBStdSetCfgHandler@i:
  3341                           	opt stack 0
  3342  000091                     LedStateMachine@LedOut:
  3343                           	opt stack 0
  3344  000091                     secondsAppTimer@destinationTicks:
  3345                           	opt stack 0
  3346  000091                     GetElapsedTime@CurrentTimestamp:
  3347                           	opt stack 0
  3348  000091                     ___lldiv@quotient:
  3349                           	opt stack 0
  3350                           
  3351                           ; 4 bytes @ 0x31
  3352  000091                     	ds	1
  3353  000092                     utoa@c:
  3354                           	opt stack 0
  3355  000092                     USBStdFeatureReqHandler@pUEP:
  3356                           	opt stack 0
  3357  000092                     ModemEvtParser@ClipString:
  3358                           	opt stack 0
  3359                           
  3360                           ; 5 bytes @ 0x32
  3361  000092                     	ds	1
  3362  000093                     waitSetupCall@isCallArrived:
  3363                           	opt stack 0
  3364  000093                     strtol@sign:
  3365                           	opt stack 0
  3366  000093                     LedStateMachine@LedBlink:
  3367                           	opt stack 0
  3368  000093                     itoa@buf:
  3369                           	opt stack 0
  3370                           
  3371                           ; 2 bytes @ 0x33
  3372  000093                     	ds	1
  3373  000094                     USBStdFeatureReqHandler@current_ep_data:
  3374                           	opt stack 0
  3375  000094                     strtol@a:
  3376                           	opt stack 0
  3377                           
  3378                           ; 4 bytes @ 0x34
  3379  000094                     	ds	1
  3380  000095                     ___lldiv@counter:
  3381                           	opt stack 0
  3382  000095                     OsTmr_GetTimerStatus@Timer:
  3383                           	opt stack 0
  3384  000095                     USBStdFeatureReqHandler@p:
  3385                           	opt stack 0
  3386  000095                     LedStateMachine@LedPulse:
  3387                           	opt stack 0
  3388  000095                     itoa@val:
  3389                           	opt stack 0
  3390                           
  3391                           ; 2 bytes @ 0x35
  3392  000095                     	ds	1
  3393  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3394                           	opt stack 0
  3395  000096                     SetUartBaudRate@UartConfig:
  3396                           	opt stack 0
  3397  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3398                           	opt stack 0
  3399                           
  3400                           ; 4 bytes @ 0x36
  3401  000096                     	ds	1
  3402  000097                     ??_USBCtrlEPService:
  3403  000097                     itoa@base:
  3404                           	opt stack 0
  3405  000097                     ModemEvtParser@SmsString:
  3406                           	opt stack 0
  3407                           
  3408                           ; 5 bytes @ 0x37
  3409  000097                     	ds	1
  3410  000098                     Tmr_TmrBPrSet@Prescaler:
  3411                           	opt stack 0
  3412  000098                     Mdm_SetSmsFormat@TextFormat:
  3413                           	opt stack 0
  3414  000098                     USBDeviceTasks@i:
  3415                           	opt stack 0
  3416  000098                     LedStateMachine@LedOutSts:
  3417                           	opt stack 0
  3418  000098                     strtol@c:
  3419                           	opt stack 0
  3420                           
  3421                           ; 1 bytes @ 0x38
  3422  000098                     	ds	1
  3423  000099                     Tmr_TmrBPrSet@Postscaler:
  3424                           	opt stack 0
  3425  000099                     SetUartBaudRate@Module:
  3426                           	opt stack 0
  3427  000099                     LedStateMachine@Led:
  3428                           	opt stack 0
  3429  000099                     initGprsModem@isInitialized:
  3430                           	opt stack 0
  3431  000099                     itoa@cp:
  3432                           	opt stack 0
  3433                           
  3434                           ; 2 bytes @ 0x39
  3435  000099                     	ds	1
  3436  00009A                     ??_Led_MainTask:
  3437  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3438                           	opt stack 0
  3439  00009A                     SetUartBaudRate@BaudRateRegister:
  3440                           	opt stack 0
  3441  00009A                     SetBaudRate@McuClockHz:
  3442                           	opt stack 0
  3443                           
  3444                           ; 4 bytes @ 0x3A
  3445  00009A                     	ds	1
  3446  00009B                     ??_SendSmsSm:
  3447  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3448                           	opt stack 0
  3449  00009B                     OsTmr_Wait@WaitTimer:
  3450                           	opt stack 0
  3451  00009B                     InitGprsNetwork@Apn:
  3452                           	opt stack 0
  3453  00009B                     HttpGetMethod@GetData:
  3454                           	opt stack 0
  3455                           
  3456                           ; 2 bytes @ 0x3B
  3457  00009B                     	ds	1
  3458  00009C                     SetUartBaudRate@DivisionFactor:
  3459                           	opt stack 0
  3460  00009C                     Tmr_TmrBPrSet@Divisor:
  3461                           	opt stack 0
  3462  00009C                     ModemEvtParser@RingString:
  3463                           	opt stack 0
  3464                           
  3465                           ; 4 bytes @ 0x3C
  3466  00009C                     	ds	1
  3467  00009D                     ??_HttpGetMethod:
  3468  00009D                     InitGprsNetwork@ApnLen:
  3469                           	opt stack 0
  3470  00009D                     Uart_InitUartModule@UartConfig:
  3471                           	opt stack 0
  3472  00009D                     OsTmr_Wait@DelayMs:
  3473                           	opt stack 0
  3474                           
  3475                           ; 4 bytes @ 0x3D
  3476  00009D                     	ds	1
  3477  00009E                     ??_SetBaudRate:
  3478  00009E                     ??_InitGprsNetwork:
  3479                           
  3480                           ; 1 bytes @ 0x3E
  3481  00009E                     	ds	1
  3482  00009F                     ??_Uart_InitUartModule:
  3483                           
  3484                           ; 1 bytes @ 0x3F
  3485  00009F                     	ds	1
  3486  0000A0                     ModemEvtParser@Match:
  3487                           	opt stack 0
  3488  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3489                           	opt stack 0
  3490                           
  3491                           ; 2 bytes @ 0x40
  3492  0000A0                     	ds	1
  3493  0000A1                     Uart_InitUartModule@Module:
  3494                           	opt stack 0
  3495  0000A1                     OsTmr_Wait@Ret:
  3496                           	opt stack 0
  3497  0000A1                     ModemEvtParser@CompareIdx:
  3498                           	opt stack 0
  3499                           
  3500                           ; 1 bytes @ 0x41
  3501  0000A1                     	ds	1
  3502  0000A2                     ??_Terminal:
  3503  0000A2                     I2c_InitI2cModule@I2cConfig:
  3504                           	opt stack 0
  3505  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3506                           	opt stack 0
  3507                           
  3508                           ; 2 bytes @ 0x42
  3509  0000A2                     	ds	1
  3510  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3511                           	opt stack 0
  3512                           
  3513                           ; 1 bytes @ 0x43
  3514  0000A3                     	ds	1
  3515  0000A4                     ??_I2c_InitI2cModule:
  3516  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3517                           	opt stack 0
  3518  0000A4                     Terminal@i:
  3519                           	opt stack 0
  3520  0000A4                     InitSchedTimer@TmrBConfig:
  3521                           	opt stack 0
  3522                           
  3523                           ; 7 bytes @ 0x44
  3524  0000A4                     	ds	1
  3525  0000A5                     Terminal@ReceivedBytes:
  3526                           	opt stack 0
  3527  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x45
  3531  0000A5                     	ds	1
  3532  0000A6                     Terminal@Index:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0x46
  3536  0000A6                     	ds	1
  3537  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3538                           	opt stack 0
  3539                           
  3540                           ; 1 bytes @ 0x47
  3541  0000A7                     	ds	1
  3542  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3543                           	opt stack 0
  3544                           
  3545                           ; 1 bytes @ 0x48
  3546  0000A8                     	ds	1
  3547  0000A9                     Eeprom_Read@ReadBuffer:
  3548                           	opt stack 0
  3549                           
  3550                           ; 2 bytes @ 0x49
  3551  0000A9                     	ds	2
  3552  0000AB                     Eeprom_Read@DataLength:
  3553                           	opt stack 0
  3554                           
  3555                           ; 1 bytes @ 0x4B
  3556  0000AB                     	ds	1
  3557  0000AC                     Eeprom_Read@MemoryAddress:
  3558                           	opt stack 0
  3559                           
  3560                           ; 1 bytes @ 0x4C
  3561  0000AC                     	ds	1
  3562  0000AD                     Eeprom_Read@SlaveAddress:
  3563                           	opt stack 0
  3564                           
  3565                           ; 1 bytes @ 0x4D
  3566  0000AD                     	ds	1
  3567  0000AE                     Eeprom_Read@ReadSts:
  3568                           	opt stack 0
  3569                           
  3570                           ; 1 bytes @ 0x4E
  3571  0000AE                     	ds	1
  3572  0000AF                     Eeprom_Read@QuerySts:
  3573                           	opt stack 0
  3574                           
  3575                           ; 1 bytes @ 0x4F
  3576  0000AF                     	ds	1
  3577  0000B0                     tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           
  3587                           ; 1 bytes @ 0x50
  3588                           
  3589                           	psect	cstackCOMRAM
  3590  000001                     __pcstackCOMRAM:
  3591                           	opt stack 0
  3592  000001                     i2GenerateEvt@Event:
  3593                           	opt stack 0
  3594                           
  3595                           ; 2 bytes @ 0x0
  3596  000001                     	ds	2
  3597  000003                     i2GenerateEvt@EventStatus:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x2
  3601  000003                     	ds	1
  3602  000004                     Uart_MdmGsmGprsReadService@UartData:
  3603                           	opt stack 0
  3604                           
  3605                           ; 1 bytes @ 0x3
  3606  000004                     	ds	1
  3607  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3608                           	opt stack 0
  3609                           
  3610                           ; 2 bytes @ 0x4
  3611  000005                     	ds	2
  3612  000007                     ??_HighPriorityIsr:
  3613                           
  3614                           ; 1 bytes @ 0x6
  3615  000007                     	ds	18
  3616  000019                     ?i1___wmul:
  3617                           	opt stack 0
  3618  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3619                           	opt stack 0
  3620  000019                     i1GenerateEvt@Event:
  3621                           	opt stack 0
  3622  000019                     i1___wmul@multiplier:
  3623                           	opt stack 0
  3624                           
  3625                           ; 2 bytes @ 0x18
  3626  000019                     	ds	2
  3627  00001B                     i1GenerateEvt@EventStatus:
  3628                           	opt stack 0
  3629  00001B                     i1___wmul@multiplicand:
  3630                           	opt stack 0
  3631                           
  3632                           ; 2 bytes @ 0x1A
  3633  00001B                     	ds	1
  3634  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3635                           	opt stack 0
  3636                           
  3637                           ; 2 bytes @ 0x1B
  3638  00001C                     	ds	1
  3639  00001D                     i1___wmul@product:
  3640                           	opt stack 0
  3641                           
  3642                           ; 2 bytes @ 0x1C
  3643  00001D                     	ds	1
  3644  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3645                           	opt stack 0
  3646                           
  3647                           ; 1 bytes @ 0x1D
  3648  00001E                     	ds	1
  3649  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3650                           	opt stack 0
  3651                           
  3652                           ; 1 bytes @ 0x1E
  3653  00001F                     	ds	1
  3654  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3655                           	opt stack 0
  3656                           
  3657                           ; 1 bytes @ 0x1F
  3658  000020                     	ds	1
  3659  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3660                           	opt stack 0
  3661                           
  3662                           ; 2 bytes @ 0x20
  3663  000021                     	ds	2
  3664  000023                     tblptru	equ	0xFF8
  3665                           tblptrh	equ	0xFF7
  3666                           tblptrl	equ	0xFF6
  3667                           tablat	equ	0xFF5
  3668                           postinc0	equ	0xFEE
  3669                           wreg	equ	0xFE8
  3670                           postdec1	equ	0xFE5
  3671                           fsr1h	equ	0xFE2
  3672                           fsr1l	equ	0xFE1
  3673                           
  3674                           ; 1 bytes @ 0x22
  3675 ;;
  3676 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3677 ;;
  3678 ;; *************** function _main *****************
  3679 ;; Defined at:
  3680 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2   14[None  ] short 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels required when called:   23
  3700 ;; This function calls:
  3701 ;;		_Sch_MainScheduler
  3702 ;;		_SystemInit
  3703 ;; This function is called by:
  3704 ;;		Startup code after reset
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text0
  3709  00673C                     __ptext0:
  3710                           	opt stack 0
  3711  00673C                     _main:
  3712                           	opt stack 8
  3713                           
  3714                           ;main.c: 61: SystemInit();
  3715                           
  3716                           ;incstack = 0
  3717  00673C  EC99  F030         	call	_SystemInit	;wreg free
  3718                           
  3719                           ;main.c: 64: Sch_MainScheduler();
  3720  006740  EC8E  F032         	call	_Sch_MainScheduler	;wreg free
  3721                           
  3722                           ;main.c: 67: return 0;
  3723                           ;	Return value of _main is never used
  3724  006744  EF66  F000         	goto	start
  3725  006748                     __end_of_main:
  3726                           	opt stack 0
  3727                           tblptru	equ	0xFF8
  3728                           tblptrh	equ	0xFF7
  3729                           tblptrl	equ	0xFF6
  3730                           tablat	equ	0xFF5
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postdec1	equ	0xFE5
  3734                           fsr1h	equ	0xFE2
  3735                           fsr1l	equ	0xFE1
  3736                           
  3737 ;; *************** function _SystemInit *****************
  3738 ;; Defined at:
  3739 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:   15
  3760 ;; This function calls:
  3761 ;;		_InitSchedTimer
  3762 ;;		_Irq_InitIntController
  3763 ;;		_Mcu_ConfigExtInt
  3764 ;;		_Mcu_StartSystemPll
  3765 ;;		_Pm_DsReleasePinControl
  3766 ;;		_Tmr_RegisterTmr2IsrCallback
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text1
  3773  006132                     __ptext1:
  3774                           	opt stack 0
  3775  006132                     _SystemInit:
  3776                           	opt stack 15
  3777                           
  3778                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3779                           
  3780                           ;incstack = 0
  3781  006132  ECC1  F033         	call	_Pm_DsReleasePinControl	;wreg free
  3782                           
  3783                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3784  006136  EC7F  F032         	call	_Mcu_StartSystemPll	;wreg free
  3785                           
  3786                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3787  00613A  0E01               	movlw	1
  3788  00613C  0100               	movlb	0	; () banked
  3789  00613E  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3790  006140  0E01               	movlw	1
  3791  006142  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3792  006144  0E01               	movlw	1
  3793  006146  EC3D  F031         	call	_Irq_InitIntController
  3794                           
  3795                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3796  00614A  0E14               	movlw	low _Sch_SchmIntService
  3797  00614C  0100               	movlb	0	; () banked
  3798  00614E  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3799  006150  0E67               	movlw	high _Sch_SchmIntService
  3800  006152  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3801  006154  ECA4  F033         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3802                           
  3803                           ;sys_init.c: 132: InitSchedTimer();
  3804  006158  ECF9  F030         	call	_InitSchedTimer	;wreg free
  3805                           
  3806                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3807  00615C  ECB9  F032         	call	_Mcu_ConfigExtInt	;wreg free
  3808  006160  0012               	return		;funcret
  3809  006162                     __end_of_SystemInit:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           postdec1	equ	0xFE5
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           
  3821 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3822 ;; Defined at:
  3823 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3826 ;;		 -> Sch_SchmIntService(1), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;Total ram usage:        2 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:   11
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_SystemInit
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text2
  3853  006748                     __ptext2:
  3854                           	opt stack 0
  3855  006748                     _Tmr_RegisterTmr2IsrCallback:
  3856                           	opt stack 18
  3857                           
  3858                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3859                           
  3860                           ;incstack = 0
  3861  006748  C07D  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3862  00674C  C07E  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3863  006750  0012               	return		;funcret
  3864  006752                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           
  3876 ;; *************** function _Pm_DsReleasePinControl *****************
  3877 ;; Defined at:
  3878 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		None
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:   11
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_SystemInit
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text3
  3907  006782                     __ptext3:
  3908                           	opt stack 0
  3909  006782                     _Pm_DsReleasePinControl:
  3910                           	opt stack 18
  3911                           
  3912                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3913                           
  3914                           ;incstack = 0
  3915  006782  010F               	movlb	15	; () banked
  3916  006784  914C               	bcf	76,0,b	;volatile
  3917                           
  3918                           ; BSR set to: 15
  3919  006786  0012               	return		;funcret
  3920  006788                     __end_of_Pm_DsReleasePinControl:
  3921                           	opt stack 0
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           postdec1	equ	0xFE5
  3929                           fsr1h	equ	0xFE2
  3930                           fsr1l	equ	0xFE1
  3931                           
  3932 ;; *************** function _Mcu_StartSystemPll *****************
  3933 ;; Defined at:
  3934 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;Total ram usage:        2 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:   11
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_SystemInit
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text4
  3963  0064FE                     __ptext4:
  3964                           	opt stack 0
  3965  0064FE                     _Mcu_StartSystemPll:
  3966                           	opt stack 18
  3967                           
  3968                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3969                           
  3970                           ; BSR set to: 15
  3971                           ;incstack = 0
  3972  0064FE  0E03               	movlw	3
  3973  006500  0100               	movlb	0	; () banked
  3974  006502  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3975  006504  0EE8               	movlw	232
  3976  006506  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3980  006508  8C9B               	bsf	3995,6,c	;volatile
  3981  00650A                     l11766:
  3982                           
  3983                           ; BSR set to: 0
  3984  00650A  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3985  00650C  A0D8               	btfss	status,0,c
  3986  00650E  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3987  006510  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3988  006512  E1FB               	bnz	l11766
  3989  006514  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3990  006516  B4D8               	btfsc	status,2,c
  3991  006518  0012               	return	
  3992  00651A  D7F7               	goto	l237
  3993  00651C                     __end_of_Mcu_StartSystemPll:
  3994                           	opt stack 0
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           postdec1	equ	0xFE5
  4002                           fsr1h	equ	0xFE2
  4003                           fsr1l	equ	0xFE1
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _Mcu_ConfigExtInt *****************
  4007 ;; Defined at:
  4008 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:   11
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_SystemInit
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text5
  4037  006572                     __ptext5:
  4038                           	opt stack 0
  4039  006572                     _Mcu_ConfigExtInt:
  4040                           	opt stack 18
  4041                           
  4042                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;incstack = 0
  4046  006572  8093               	bsf	3987,0,c	;volatile
  4047                           
  4048                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4049  006574  8695               	bsf	3989,3,c	;volatile
  4050                           
  4051                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4052  006576  010F               	movlb	15	; () banked
  4053  006578  8949               	bsf	73,4,b	;volatile
  4054                           
  4055                           ; BSR set to: 15
  4056                           ;mcu_drv.c: 108: RPINR1 = 20;
  4057  00657A  0E14               	movlw	20
  4058  00657C  010E               	movlb	14	; () banked
  4059  00657E  6FE7               	movwf	231,b	;volatile
  4060                           
  4061                           ; BSR set to: 14
  4062                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4063  006580  88F2               	bsf	intcon,4,c	;volatile
  4064                           
  4065                           ; BSR set to: 14
  4066                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4067  006582  86F0               	bsf	intcon3,3,c	;volatile
  4068                           
  4069                           ; BSR set to: 14
  4070                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4071  006584  8CF0               	bsf	intcon3,6,c	;volatile
  4072                           
  4073                           ; BSR set to: 14
  4074                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4075  006586  9CF1               	bcf	intcon2,6,c	;volatile
  4076                           
  4077                           ; BSR set to: 14
  4078                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4079  006588  9AF1               	bcf	intcon2,5,c	;volatile
  4080                           
  4081                           ; BSR set to: 14
  4082  00658A  0012               	return		;funcret
  4083  00658C                     __end_of_Mcu_ConfigExtInt:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           intcon	equ	0xFF2
  4090                           intcon2	equ	0xFF1
  4091                           intcon3	equ	0xFF0
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           postdec1	equ	0xFE5
  4095                           fsr1h	equ	0xFE2
  4096                           fsr1l	equ	0xFE1
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _Irq_InitIntController *****************
  4100 ;; Defined at:
  4101 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  IntPriorityE    1    wreg     enum E7720
  4104 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4105 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;Total ram usage:        3 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   11
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_SystemInit
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text6
  4132  00627A                     __ptext6:
  4133                           	opt stack 0
  4134  00627A                     _Irq_InitIntController:
  4135                           	opt stack 18
  4136                           
  4137                           ; BSR set to: 14
  4138                           ;incstack = 0
  4139                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4140  00627A  0100               	movlb	0	; () banked
  4141  00627C  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4142                           
  4143                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4144  00627E  0100               	movlb	0	; () banked
  4145  006280  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4146  006282  D002               	bra	u10275
  4147  006284  9ED0               	bcf	4048,7,c	;volatile
  4148  006286  D001               	bra	u10276
  4149  006288                     u10275:
  4150  006288  8ED0               	bsf	4048,7,c	;volatile
  4151  00628A                     u10276:
  4152                           
  4153                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4154  00628A  0100               	movlb	0	; () banked
  4155  00628C  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4156  00628E  D002               	bra	u10285
  4157  006290  9EF2               	bcf	intcon,7,c	;volatile
  4158  006292  D001               	bra	u10286
  4159  006294                     u10285:
  4160  006294  8EF2               	bsf	intcon,7,c	;volatile
  4161  006296                     u10286:
  4162                           
  4163                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4164  006296  0100               	movlb	0	; () banked
  4165  006298  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4166  00629A  D002               	bra	u10295
  4167  00629C  9CF2               	bcf	intcon,6,c	;volatile
  4168  00629E  D001               	bra	u10296
  4169  0062A0                     u10295:
  4170  0062A0  8CF2               	bsf	intcon,6,c	;volatile
  4171  0062A2                     u10296:
  4172  0062A2  0012               	return		;funcret
  4173  0062A4                     __end_of_Irq_InitIntController:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           intcon	equ	0xFF2
  4180                           intcon2	equ	0xFF1
  4181                           intcon3	equ	0xFF0
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function _InitSchedTimer *****************
  4190 ;; Defined at:
  4191 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;Total ram usage:        7 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:   14
  4212 ;; This function calls:
  4213 ;;		_Tmr_TmrBConfig
  4214 ;; This function is called by:
  4215 ;;		_SystemInit
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text7
  4220  0061F2                     __ptext7:
  4221                           	opt stack 0
  4222  0061F2                     _InitSchedTimer:
  4223                           	opt stack 15
  4224                           
  4225                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4226                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4227                           
  4228                           ;incstack = 0
  4229  0061F2  0E04               	movlw	4
  4230  0061F4  0100               	movlb	0	; () banked
  4231  0061F6  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4232                           
  4233                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4234  0061F8  0E0C               	movlw	12
  4235  0061FA  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4236                           
  4237                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4238  0061FC  0E00               	movlw	0
  4239  0061FE  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4240                           
  4241                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4242  006200  0E01               	movlw	1
  4243  006202  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4244                           
  4245                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4246  006204  0E03               	movlw	3
  4247  006206  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4248  006208  0EE8               	movlw	232
  4249  00620A  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4250                           
  4251                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4252  00620C  0E01               	movlw	1
  4253  00620E  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4257  006210  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4258  006212  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4259  006214  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4260  006216  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4261  006218  0E02               	movlw	2
  4262  00621A  ECCF  F01E         	call	_Tmr_TmrBConfig
  4263  00621E  0012               	return		;funcret
  4264  006220                     __end_of_InitSchedTimer:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           intcon	equ	0xFF2
  4271                           intcon2	equ	0xFF1
  4272                           intcon3	equ	0xFF0
  4273                           postinc0	equ	0xFEE
  4274                           wreg	equ	0xFE8
  4275                           postdec1	equ	0xFE5
  4276                           fsr1h	equ	0xFE2
  4277                           fsr1l	equ	0xFE1
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _Tmr_TmrBConfig *****************
  4281 ;; Defined at:
  4282 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  TmrNumb         1    wreg     unsigned char 
  4285 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4286 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4301 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;Total ram usage:        4 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:   13
  4305 ;; This function calls:
  4306 ;;		_TmrBInit
  4307 ;;		_Tmr_StartTmr
  4308 ;;		_Tmr_TmrBIrqSet
  4309 ;;		_Tmr_TmrBPrSet
  4310 ;; This function is called by:
  4311 ;;		_InitSchedTimer
  4312 ;;		_InitAuxTimer
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text8
  4317  003D9E                     __ptext8:
  4318                           	opt stack 0
  4319  003D9E                     _Tmr_TmrBConfig:
  4320                           	opt stack 15
  4321                           
  4322                           ;incstack = 0
  4323                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4324  003D9E  0100               	movlb	0	; () banked
  4325  003DA0  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4326                           
  4327                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4328  003DA2  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4329  003DA6  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4330  003DAA  50DF               	movf	indf2,w,c
  4331  003DAC  0100               	movlb	0	; () banked
  4332  003DAE  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4333  003DB0  EE20 F001          	lfsr	2,1
  4334  003DB4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4335  003DB6  26D9               	addwf	fsr2l,f,c
  4336  003DB8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4337  003DBA  22DA               	addwfc	fsr2h,f,c
  4338  003DBC  50DF               	movf	indf2,w,c
  4339  003DBE  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4340  003DC0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4341  003DC2  EC5D  F024         	call	_TmrBInit
  4342                           
  4343                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4344  003DC6  0100               	movlb	0	; () banked
  4345  003DC8  EE20 F002          	lfsr	2,2
  4346  003DCC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4347  003DCE  26D9               	addwf	fsr2l,f,c
  4348  003DD0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4349  003DD2  22DA               	addwfc	fsr2h,f,c
  4350  003DD4  04DE               	decf	postinc2,w,c
  4351  003DD6  A4D8               	btfss	status,2,c
  4352  003DD8  D00E               	goto	l546
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;tmr_drv.c: 277: {
  4356                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4357  003DDA  EE20 F003          	lfsr	2,3
  4358  003DDE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4359  003DE0  26D9               	addwf	fsr2l,f,c
  4360  003DE2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4361  003DE4  22DA               	addwfc	fsr2h,f,c
  4362  003DE6  50DF               	movf	indf2,w,c
  4363  003DE8  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4364  003DEA  0E01               	movlw	1
  4365  003DEC  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4366  003DEE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4367  003DF0  EC9F  F02D         	call	_Tmr_TmrBIrqSet
  4368                           
  4369                           ;tmr_drv.c: 280: }
  4370  003DF4  D00E               	goto	l547
  4371  003DF6                     l546:
  4372                           
  4373                           ;tmr_drv.c: 281: else
  4374                           ;tmr_drv.c: 282: {
  4375                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4376  003DF6  0100               	movlb	0	; () banked
  4377  003DF8  EE20 F003          	lfsr	2,3
  4378  003DFC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4379  003DFE  26D9               	addwf	fsr2l,f,c
  4380  003E00  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4381  003E02  22DA               	addwfc	fsr2h,f,c
  4382  003E04  50DF               	movf	indf2,w,c
  4383  003E06  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4384  003E08  0E00               	movlw	0
  4385  003E0A  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4386  003E0C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4387  003E0E  EC9F  F02D         	call	_Tmr_TmrBIrqSet
  4388  003E12                     l547:
  4389                           
  4390                           ;tmr_drv.c: 285: }
  4391                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4392  003E12  0100               	movlb	0	; () banked
  4393  003E14  EE20 F004          	lfsr	2,4
  4394  003E18  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4395  003E1A  26D9               	addwf	fsr2l,f,c
  4396  003E1C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4397  003E1E  22DA               	addwfc	fsr2h,f,c
  4398  003E20  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4399  003E24  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4400  003E28  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4401  003E2C  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4402  003E30  50DF               	movf	indf2,w,c
  4403  003E32  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4404  003E34  EE20 F001          	lfsr	2,1
  4405  003E38  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4406  003E3A  26D9               	addwf	fsr2l,f,c
  4407  003E3C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4408  003E3E  22DA               	addwfc	fsr2h,f,c
  4409  003E40  50DF               	movf	indf2,w,c
  4410  003E42  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4411  003E44  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4412  003E46  EC45  F019         	call	_Tmr_TmrBPrSet
  4413                           
  4414                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4415  003E4A  0100               	movlb	0	; () banked
  4416  003E4C  EE20 F006          	lfsr	2,6
  4417  003E50  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4418  003E52  26D9               	addwf	fsr2l,f,c
  4419  003E54  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4420  003E56  22DA               	addwfc	fsr2h,f,c
  4421  003E58  04DE               	decf	postinc2,w,c
  4422  003E5A  A4D8               	btfss	status,2,c
  4423  003E5C  0012               	return	
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;tmr_drv.c: 290: {
  4427                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4428  003E5E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4429  003E60  EC4F  F032         	call	_Tmr_StartTmr
  4430                           
  4431                           ;tmr_drv.c: 293: }
  4432  003E64  0012               	return	
  4433  003E66                     __end_of_Tmr_TmrBConfig:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           intcon	equ	0xFF2
  4440                           intcon2	equ	0xFF1
  4441                           intcon3	equ	0xFF0
  4442                           postinc0	equ	0xFEE
  4443                           wreg	equ	0xFE8
  4444                           postdec1	equ	0xFE5
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           postdec2	equ	0xFDD
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _Tmr_TmrBPrSet *****************
  4455 ;; Defined at:
  4456 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  TmrNumb         1    wreg     unsigned char 
  4459 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4460 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4461 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4464 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4465 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      enum E7736
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:       10 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   12
  4482 ;; This function calls:
  4483 ;;		___lldiv
  4484 ;;		___lmul
  4485 ;; This function is called by:
  4486 ;;		_Tmr_TmrBConfig
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text9
  4491  00328A                     __ptext9:
  4492                           	opt stack 0
  4493  00328A                     _Tmr_TmrBPrSet:
  4494                           	opt stack 15
  4495                           
  4496                           ;incstack = 0
  4497                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4498  00328A  0100               	movlb	0	; () banked
  4499  00328C  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4500                           
  4501                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4502                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4503  00328E  0E00               	movlw	0
  4504  003290  0100               	movlb	0	; () banked
  4505  003292  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4506  003294  0E00               	movlw	0
  4507  003296  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4508  003298  0E00               	movlw	0
  4509  00329A  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4510  00329C  0E00               	movlw	0
  4511  00329E  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4515  0032A0  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4516  0032A2  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4517  0032A4  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4518  0032A8  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4519  0032AC  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4520  0032AE  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4521  0032B0  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4522  0032B4  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4523  0032B8  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4524  0032BA  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4525  0032BC  EC0A  F02B         	call	___lmul	;wreg free
  4526  0032C0  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4527  0032C4  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4528  0032C8  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4529  0032CC  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4530                           
  4531                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4532  0032D0  0E00               	movlw	0
  4533  0032D2  0100               	movlb	0	; () banked
  4534  0032D4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4535  0032D6  0E1B               	movlw	27
  4536  0032D8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4537  0032DA  0EB7               	movlw	183
  4538  0032DC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4539  0032DE  0E00               	movlw	0
  4540  0032E0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4541  0032E2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4542  0032E6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4543  0032EA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4544  0032EE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4545  0032F2  ECB9  F027         	call	___lldiv	;wreg free
  4546  0032F6  0100               	movlb	0	; () banked
  4547  0032F8  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4548  0032FA  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4549  0032FC  E13A               	bnz	l14726
  4550  0032FE  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4551  003300  A0D8               	btfss	status,0,c
  4552  003302  D02D               	goto	l529
  4553  003304  D036               	goto	l528
  4554  003306                     
  4555                           ; BSR set to: 0
  4556                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4557                           
  4558                           ; BSR set to: 0
  4559  003306  0E00               	movlw	0
  4560  003308  6F89               	movwf	___lldiv@dividend& (0+255),b
  4561  00330A  0E1B               	movlw	27
  4562  00330C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4563  00330E  0EB7               	movlw	183
  4564  003310  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4565  003312  0E00               	movlw	0
  4566  003314  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4567  003316  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4568  00331A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4569  00331E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4570  003322  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4571  003326  ECB9  F027         	call	___lldiv	;wreg free
  4572  00332A  0100               	movlb	0	; () banked
  4573  00332C  5189               	movf	?___lldiv& (0+255),w,b
  4574  00332E  6ECB               	movwf	4043,c	;volatile
  4575                           
  4576                           ;tmr_drv.c: 210: break;
  4577  003330  D01D               	goto	l531
  4578  003332                     
  4579                           ; BSR set to: 0
  4580                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4581                           
  4582                           ; BSR set to: 0
  4583  003332  0E00               	movlw	0
  4584  003334  6F89               	movwf	___lldiv@dividend& (0+255),b
  4585  003336  0E1B               	movlw	27
  4586  003338  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4587  00333A  0EB7               	movlw	183
  4588  00333C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4589  00333E  0E00               	movlw	0
  4590  003340  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4591  003342  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4592  003346  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4593  00334A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4594  00334E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4595  003352  ECB9  F027         	call	___lldiv	;wreg free
  4596  003356  0100               	movlb	0	; () banked
  4597  003358  5189               	movf	?___lldiv& (0+255),w,b
  4598  00335A  6E77               	movwf	3959,c	;volatile
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;tmr_drv.c: 219: }
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;tmr_drv.c: 218: break;
  4605                           
  4606                           ;tmr_drv.c: 217: default:
  4607                           
  4608                           ;tmr_drv.c: 215: break;
  4609  00335C  D007               	goto	l531
  4610  00335E                     l529:
  4611                           
  4612                           ; BSR set to: 0
  4613                           
  4614                           ; BSR set to: 0
  4615  00335E  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4616                           
  4617                           ; Switch size 1, requested type "space"
  4618                           ; Number of cases is 2, Range of values is 2 to 4
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte            7     4 (average)
  4622                           ;	Chosen strategy is simple_byte
  4623  003360  0A02               	xorlw	2	; case 2
  4624  003362  B4D8               	btfsc	status,2,c
  4625  003364  D7D0               	goto	l530
  4626  003366  0A06               	xorlw	6	; case 4
  4627  003368  B4D8               	btfsc	status,2,c
  4628  00336A  D7E3               	goto	l532
  4629  00336C                     l531:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4633                           
  4634                           ; BSR set to: 0
  4635  00336C  0E00               	movlw	0
  4636  00336E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4637                           
  4638                           ;tmr_drv.c: 223: }
  4639  003370  0012               	return	
  4640  003372                     l528:
  4641  003372                     l14726:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;tmr_drv.c: 224: else
  4645                           ;tmr_drv.c: 225: {
  4646                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4647  003372  0E01               	movlw	1
  4648  003374  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651  003376  0012               	return	
  4652  003378                     __end_of_Tmr_TmrBPrSet:
  4653                           	opt stack 0
  4654                           tblptru	equ	0xFF8
  4655                           tblptrh	equ	0xFF7
  4656                           tblptrl	equ	0xFF6
  4657                           tablat	equ	0xFF5
  4658                           prodh	equ	0xFF4
  4659                           prodl	equ	0xFF3
  4660                           intcon	equ	0xFF2
  4661                           intcon2	equ	0xFF1
  4662                           intcon3	equ	0xFF0
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postdec1	equ	0xFE5
  4666                           fsr1h	equ	0xFE2
  4667                           fsr1l	equ	0xFE1
  4668                           indf2	equ	0xFDF
  4669                           postinc2	equ	0xFDE
  4670                           postdec2	equ	0xFDD
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _Tmr_TmrBIrqSet *****************
  4676 ;; Defined at:
  4677 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  TmrNumb         1    wreg     unsigned char 
  4680 ;;  Priority        1   29[BANK0 ] enum E7716
  4681 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4696 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4697 ;;Total ram usage:        3 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:   11
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_Tmr_TmrBConfig
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text10
  4708  005B3E                     __ptext10:
  4709                           	opt stack 0
  4710  005B3E                     _Tmr_TmrBIrqSet:
  4711                           	opt stack 16
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;incstack = 0
  4715                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4716  005B3E  0100               	movlb	0	; () banked
  4717  005B40  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4718                           
  4719                           ;tmr_drv.c: 156: switch (TmrNumb)
  4720  005B42  D01A               	goto	l520
  4721  005B44                     l521:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4725  005B44  929E               	bcf	3998,1,c	;volatile
  4726                           
  4727                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4728  005B46  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4729  005B48  D002               	bra	u8665
  4730  005B4A  929F               	bcf	3999,1,c	;volatile
  4731  005B4C  D001               	bra	u8666
  4732  005B4E                     u8665:
  4733  005B4E  829F               	bsf	3999,1,c	;volatile
  4734  005B50                     u8666:
  4735                           
  4736                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4737  005B50  0100               	movlb	0	; () banked
  4738  005B52  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4739  005B54  D002               	bra	u8675
  4740  005B56  929D               	bcf	3997,1,c	;volatile
  4741  005B58  D001               	bra	u8676
  4742  005B5A                     u8675:
  4743  005B5A  829D               	bsf	3997,1,c	;volatile
  4744  005B5C                     u8676:
  4745                           
  4746                           ;tmr_drv.c: 165: break;
  4747  005B5C  0012               	return	
  4748  005B5E                     l523:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4752  005B5E  96A4               	bcf	4004,3,c	;volatile
  4753                           
  4754                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4755  005B60  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4756  005B62  D002               	bra	u8685
  4757  005B64  96A5               	bcf	4005,3,c	;volatile
  4758  005B66  D001               	bra	u8686
  4759  005B68                     u8685:
  4760  005B68  86A5               	bsf	4005,3,c	;volatile
  4761  005B6A                     u8686:
  4762                           
  4763                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4764  005B6A  0100               	movlb	0	; () banked
  4765  005B6C  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4766  005B6E  D002               	bra	u8695
  4767  005B70  96A3               	bcf	4003,3,c	;volatile
  4768  005B72  D001               	bra	u8696
  4769  005B74                     u8695:
  4770  005B74  86A3               	bsf	4003,3,c	;volatile
  4771  005B76                     u8696:
  4772                           
  4773                           ;tmr_drv.c: 178: }
  4774                           
  4775                           ;tmr_drv.c: 177: break;
  4776                           
  4777                           ;tmr_drv.c: 176: default:
  4778                           
  4779                           ;tmr_drv.c: 174: break;
  4780  005B76  0012               	return	
  4781  005B78                     l520:
  4782  005B78  0100               	movlb	0	; () banked
  4783  005B7A  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4784                           
  4785                           ; Switch size 1, requested type "space"
  4786                           ; Number of cases is 2, Range of values is 2 to 4
  4787                           ; switch strategies available:
  4788                           ; Name         Instructions Cycles
  4789                           ; simple_byte            7     4 (average)
  4790                           ;	Chosen strategy is simple_byte
  4791  005B7C  0A02               	xorlw	2	; case 2
  4792  005B7E  B4D8               	btfsc	status,2,c
  4793  005B80  D7E1               	goto	l521
  4794  005B82  0A06               	xorlw	6	; case 4
  4795  005B84  A4D8               	btfss	status,2,c
  4796  005B86  0012               	return	
  4797  005B88  D7EA               	goto	l523
  4798  005B8A                     __end_of_Tmr_TmrBIrqSet:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           intcon2	equ	0xFF1
  4808                           intcon3	equ	0xFF0
  4809                           postinc0	equ	0xFEE
  4810                           wreg	equ	0xFE8
  4811                           postdec1	equ	0xFE5
  4812                           fsr1h	equ	0xFE2
  4813                           fsr1l	equ	0xFE1
  4814                           indf2	equ	0xFDF
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _Tmr_StartTmr *****************
  4822 ;; Defined at:
  4823 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  TmrNumb         1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   11
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_Tmr_TmrBConfig
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text11
  4852  00649E                     __ptext11:
  4853                           	opt stack 0
  4854  00649E                     _Tmr_StartTmr:
  4855                           	opt stack 16
  4856                           
  4857                           ;incstack = 0
  4858                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4859  00649E  0100               	movlb	0	; () banked
  4860  0064A0  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4861                           
  4862                           ;tmr_drv.c: 245: switch (TmrNumb)
  4863  0064A2  D004               	goto	l538
  4864  0064A4                     l539:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4868  0064A4  84CA               	bsf	4042,2,c	;volatile
  4869                           
  4870                           ;tmr_drv.c: 250: break;
  4871  0064A6  0012               	return	
  4872  0064A8                     l541:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4876  0064A8  8476               	bsf	3958,2,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;tmr_drv.c: 259: }
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;tmr_drv.c: 258: break;
  4883                           
  4884                           ;tmr_drv.c: 257: default:
  4885                           
  4886                           ;tmr_drv.c: 255: break;
  4887  0064AA  0012               	return	
  4888  0064AC                     l538:
  4889                           
  4890                           ; BSR set to: 0
  4891  0064AC  0100               	movlb	0	; () banked
  4892  0064AE  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4893                           
  4894                           ; Switch size 1, requested type "space"
  4895                           ; Number of cases is 2, Range of values is 2 to 4
  4896                           ; switch strategies available:
  4897                           ; Name         Instructions Cycles
  4898                           ; simple_byte            7     4 (average)
  4899                           ;	Chosen strategy is simple_byte
  4900  0064B0  0A02               	xorlw	2	; case 2
  4901  0064B2  B4D8               	btfsc	status,2,c
  4902  0064B4  D7F7               	goto	l539
  4903  0064B6  0A06               	xorlw	6	; case 4
  4904  0064B8  A4D8               	btfss	status,2,c
  4905  0064BA  0012               	return	
  4906  0064BC  D7F5               	goto	l541
  4907  0064BE                     __end_of_Tmr_StartTmr:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           intcon3	equ	0xFF0
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           postdec1	equ	0xFE5
  4921                           fsr1h	equ	0xFE2
  4922                           fsr1l	equ	0xFE1
  4923                           indf2	equ	0xFDF
  4924                           postinc2	equ	0xFDE
  4925                           postdec2	equ	0xFDD
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function _TmrBInit *****************
  4931 ;; Defined at:
  4932 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  TmrNumb         1    wreg     unsigned char 
  4935 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4936 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;Total ram usage:        4 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:   11
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_Tmr_TmrBConfig
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text12
  4963  0048BA                     __ptext12:
  4964                           	opt stack 0
  4965  0048BA                     _TmrBInit:
  4966                           	opt stack 16
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;incstack = 0
  4970                           ;TmrBInit@TmrNumb stored from wreg
  4971  0048BA  0100               	movlb	0	; () banked
  4972  0048BC  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4973                           
  4974                           ;tmr_drv.c: 75: switch (TmrNumb)
  4975  0048BE  D03F               	goto	l500
  4976  0048C0                     l503:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4980  0048C0  90CA               	bcf	4042,0,c	;volatile
  4981  0048C2  D001               	goto	L1
  4982  0048C4                     l505:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4986  0048C4  80CA               	bsf	4042,0,c	;volatile
  4987  0048C6                     L1:
  4988                           
  4989                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4990  0048C6  92CA               	bcf	4042,1,c	;volatile
  4991                           
  4992                           ;tmr_drv.c: 91: break;
  4993  0048C8  D00E               	goto	l504
  4994  0048CA                     l506:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4998  0048CA  80CA               	bsf	4042,0,c	;volatile
  4999                           
  5000                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5001  0048CC  82CA               	bsf	4042,1,c	;volatile
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;tmr_drv.c: 100: }
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;tmr_drv.c: 99: break;
  5008                           
  5009                           ;tmr_drv.c: 98: default:
  5010                           
  5011                           ;tmr_drv.c: 96: break;
  5012  0048CE  D00B               	goto	l504
  5013  0048D0                     
  5014                           ; BSR set to: 0
  5015  0048D0  0100               	movlb	0	; () banked
  5016  0048D2  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5017                           
  5018                           ; Switch size 1, requested type "space"
  5019                           ; Number of cases is 3, Range of values is 1 to 16
  5020                           ; switch strategies available:
  5021                           ; Name         Instructions Cycles
  5022                           ; simple_byte           10     6 (average)
  5023                           ;	Chosen strategy is simple_byte
  5024  0048D4  0A01               	xorlw	1	; case 1
  5025  0048D6  B4D8               	btfsc	status,2,c
  5026  0048D8  D7F3               	goto	l503
  5027  0048DA  0A05               	xorlw	5	; case 4
  5028  0048DC  B4D8               	btfsc	status,2,c
  5029  0048DE  D7F2               	goto	l505
  5030  0048E0  0A14               	xorlw	20	; case 16
  5031  0048E2  B4D8               	btfsc	status,2,c
  5032  0048E4  D7F2               	goto	l506
  5033  0048E6                     l504:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5037                           
  5038                           ; BSR set to: 0
  5039  0048E6  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5040  0048EA  0EFF               	movlw	255
  5041  0048EC  277F               	addwf	??_TmrBInit& (0+255),f,b
  5042  0048EE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5043  0048F0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5044  0048F2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5045  0048F4  50CA               	movf	4042,w,c	;volatile
  5046  0048F6  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5047  0048F8  0B87               	andlw	-121
  5048  0048FA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5049  0048FC  6ECA               	movwf	4042,c	;volatile
  5050                           
  5051                           ;tmr_drv.c: 104: break;
  5052  0048FE  0012               	return	
  5053  004900                     l511:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5057  004900  9076               	bcf	3958,0,c	;volatile
  5058  004902  D001               	goto	L2
  5059  004904                     l513:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5063  004904  8076               	bsf	3958,0,c	;volatile
  5064  004906                     L2:
  5065                           
  5066                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5067  004906  9276               	bcf	3958,1,c	;volatile
  5068                           
  5069                           ;tmr_drv.c: 120: break;
  5070  004908  D00D               	goto	l512
  5071  00490A                     l514:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5075  00490A  8076               	bsf	3958,0,c	;volatile
  5076                           
  5077                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5078  00490C  8276               	bsf	3958,1,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;tmr_drv.c: 129: }
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;tmr_drv.c: 128: break;
  5085                           
  5086                           ;tmr_drv.c: 127: default:
  5087                           
  5088                           ;tmr_drv.c: 125: break;
  5089  00490E  D00A               	goto	l512
  5090  004910                     
  5091                           ; BSR set to: 0
  5092                           
  5093                           ; BSR set to: 0
  5094  004910  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5095                           
  5096                           ; Switch size 1, requested type "space"
  5097                           ; Number of cases is 3, Range of values is 1 to 16
  5098                           ; switch strategies available:
  5099                           ; Name         Instructions Cycles
  5100                           ; simple_byte           10     6 (average)
  5101                           ;	Chosen strategy is simple_byte
  5102  004912  0A01               	xorlw	1	; case 1
  5103  004914  B4D8               	btfsc	status,2,c
  5104  004916  D7F4               	goto	l511
  5105  004918  0A05               	xorlw	5	; case 4
  5106  00491A  B4D8               	btfsc	status,2,c
  5107  00491C  D7F3               	goto	l513
  5108  00491E  0A14               	xorlw	20	; case 16
  5109  004920  B4D8               	btfsc	status,2,c
  5110  004922  D7F3               	goto	l514
  5111  004924                     l512:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5115                           
  5116                           ; BSR set to: 0
  5117  004924  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5118  004928  0EFF               	movlw	255
  5119  00492A  277F               	addwf	??_TmrBInit& (0+255),f,b
  5120  00492C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5121  00492E  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5122  004930  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5123  004932  5076               	movf	3958,w,c	;volatile
  5124  004934  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5125  004936  0B87               	andlw	-121
  5126  004938  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5127  00493A  6E76               	movwf	3958,c	;volatile
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;tmr_drv.c: 137: }
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;tmr_drv.c: 136: break;
  5134                           
  5135                           ;tmr_drv.c: 135: default:
  5136                           
  5137                           ;tmr_drv.c: 133: break;
  5138  00493C  0012               	return	
  5139  00493E                     l500:
  5140                           
  5141                           ; BSR set to: 0
  5142  00493E  0100               	movlb	0	; () banked
  5143  004940  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5144                           
  5145                           ; Switch size 1, requested type "space"
  5146                           ; Number of cases is 2, Range of values is 2 to 4
  5147                           ; switch strategies available:
  5148                           ; Name         Instructions Cycles
  5149                           ; simple_byte            7     4 (average)
  5150                           ;	Chosen strategy is simple_byte
  5151  004942  0A02               	xorlw	2	; case 2
  5152  004944  B4D8               	btfsc	status,2,c
  5153  004946  D7C4               	goto	l502
  5154  004948  0A06               	xorlw	6	; case 4
  5155  00494A  A4D8               	btfss	status,2,c
  5156  00494C  0012               	return	
  5157  00494E  D7E0               	goto	l510
  5158  004950                     __end_of_TmrBInit:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           intcon3	equ	0xFF0
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           postdec1	equ	0xFE5
  5172                           fsr1h	equ	0xFE2
  5173                           fsr1l	equ	0xFE1
  5174                           indf2	equ	0xFDF
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _Sch_MainScheduler *****************
  5182 ;; Defined at:
  5183 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   22
  5204 ;; This function calls:
  5205 ;;		_InitializeTasks
  5206 ;;		_ScheduleTasks
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text13
  5213  00651C                     __ptext13:
  5214                           	opt stack 0
  5215  00651C                     _Sch_MainScheduler:
  5216                           	opt stack 8
  5217                           
  5218                           ;os_sched.c: 178: InitializeTasks();
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;incstack = 0
  5222  00651C  EC3C  F028         	call	_InitializeTasks	;wreg free
  5223                           
  5224                           ;os_sched.c: 180: SystemState = RunningState;
  5225  006520  0E01               	movlw	1
  5226  006522  0100               	movlb	0	; () banked
  5227  006524  6FD4               	movwf	_SystemState& (0+255),b
  5228  006526                     
  5229                           ;os_sched.c: 188: {
  5230                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5231                           
  5232                           ; BSR set to: 0
  5233  006526  0102               	movlb	2	; () banked
  5234  006528  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5235  00652A  A4D8               	btfss	status,2,c
  5236  00652C  D7FC               	goto	l790
  5237                           
  5238                           ; BSR set to: 2
  5239                           ;os_sched.c: 191: {
  5240                           ;os_sched.c: 196: ScheduleTasks();
  5241  00652E  ECA0  F017         	call	_ScheduleTasks	;wreg free
  5242                           
  5243                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5244  006532  0E01               	movlw	1
  5245  006534  0102               	movlb	2	; () banked
  5246  006536  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5247                           
  5248                           ; BSR set to: 2
  5249                           
  5250                           ; BSR set to: 2
  5251  006538  D7F6               	goto	l790
  5252  00653A                     __end_of_Sch_MainScheduler:
  5253                           	opt stack 0
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           intcon	equ	0xFF2
  5261                           intcon2	equ	0xFF1
  5262                           intcon3	equ	0xFF0
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           indf2	equ	0xFDF
  5269                           postinc2	equ	0xFDE
  5270                           postdec2	equ	0xFDD
  5271                           fsr2h	equ	0xFDA
  5272                           fsr2l	equ	0xFD9
  5273                           status	equ	0xFD8
  5274                           
  5275 ;; *************** function _ScheduleTasks *****************
  5276 ;; Defined at:
  5277 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;      Totals:         0       0       0       1       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5295 ;;Total ram usage:        5 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:   21
  5298 ;; This function calls:
  5299 ;;		_I2cSlv_MainTask
  5300 ;;		_Led_MainTask
  5301 ;;		_MdmHttp_MainTask
  5302 ;;		_Mdm_DrvMainFn
  5303 ;;		_Mdm_MainTask
  5304 ;;		_MyApp_Task
  5305 ;;		_Rtcm_MainTask
  5306 ;;		_Term_MainTask
  5307 ;;		_UsbDevice_MainTask
  5308 ;;		_Wdg_MainTask
  5309 ;; This function is called by:
  5310 ;;		_Sch_MainScheduler
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text14
  5315  002F40                     __ptext14:
  5316                           	opt stack 0
  5317  002F40                     _ScheduleTasks:
  5318                           	opt stack 8
  5319                           
  5320                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5321                           
  5322                           ; BSR set to: 2
  5323                           ;incstack = 0
  5324  002F40  0E00               	movlw	0
  5325  002F42  0102               	movlb	2	; () banked
  5326  002F44  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5327                           
  5328                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5329  002F46  0E00               	movlw	0
  5330  002F48  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5331  002F4A                     l15960:
  5332                           
  5333                           ; BSR set to: 2
  5334  002F4A  0E2F               	movlw	low _TaskNumber
  5335  002F4C  6EF6               	movwf	tblptrl,c
  5336  002F4E                     	if	1	;There is more than 1 active tblptr byte
  5337  002F4E  0EFC               	movlw	high _TaskNumber
  5338  002F50  6EF7               	movwf	tblptrh,c
  5339  002F52                     	endif
  5340  002F52                     	if	0	;There are less than 3 active tblptr bytes
  5341  002F52                     	endif
  5342  002F52  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5343  002F54  0104               	movlb	4	; () banked
  5344  002F56  6FFC               	movwf	??_ScheduleTasks& (0+255),b
  5345  002F58  6BFD               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5346  002F5A  0009               	tblrd		*+
  5347  002F5C  50F5               	movf	tablat,w,c
  5348  002F5E  5DFC               	subwf	??_ScheduleTasks& (0+255),w,b
  5349  002F60  0009               	tblrd		*+
  5350  002F62  50F5               	movf	tablat,w,c
  5351  002F64  59FD               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5352  002F66  B0D8               	btfsc	status,0,c
  5353  002F68  0012               	return	
  5354                           
  5355                           ; BSR set to: 4
  5356                           ;os_sched.c: 106: {
  5357                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5358                           
  5359                           ; BSR set to: 4
  5360                           
  5361                           ; BSR set to: 4
  5362  002F6A  0102               	movlb	2	; () banked
  5363  002F6C  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5364  002F6E  0D08               	mullw	8
  5365  002F70  0E03               	movlw	3
  5366  002F72  26F3               	addwf	prodl,f,c
  5367  002F74  0E00               	movlw	0
  5368  002F76  22F4               	addwfc	prodh,f,c
  5369  002F78  0EA4               	movlw	low _TaskTable
  5370  002F7A  24F3               	addwf	prodl,w,c
  5371  002F7C  6ED9               	movwf	fsr2l,c
  5372  002F7E  0E05               	movlw	high _TaskTable
  5373  002F80  20F4               	addwfc	prodh,w,c
  5374  002F82  6EDA               	movwf	fsr2h,c
  5375  002F84  2ADE               	incf	postinc2,f,c
  5376  002F86  0E00               	movlw	0
  5377  002F88  22DD               	addwfc	postdec2,f,c
  5378                           
  5379                           ; BSR set to: 2
  5380                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5381  002F8A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5382  002F8C  0D08               	mullw	8
  5383  002F8E  0E05               	movlw	5
  5384  002F90  26F3               	addwf	prodl,f,c
  5385  002F92  0E00               	movlw	0
  5386  002F94  22F4               	addwfc	prodh,f,c
  5387  002F96  0EA4               	movlw	low _TaskTable
  5388  002F98  24F3               	addwf	prodl,w,c
  5389  002F9A  6ED9               	movwf	fsr2l,c
  5390  002F9C  0E05               	movlw	high _TaskTable
  5391  002F9E  20F4               	addwfc	prodh,w,c
  5392  002FA0  6EDA               	movwf	fsr2h,c
  5393  002FA2  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5394  002FA4  0D08               	mullw	8
  5395  002FA6  0E03               	movlw	3
  5396  002FA8  26F3               	addwf	prodl,f,c
  5397  002FAA  0E00               	movlw	0
  5398  002FAC  22F4               	addwfc	prodh,f,c
  5399  002FAE  0EA4               	movlw	low _TaskTable
  5400  002FB0  24F3               	addwf	prodl,w,c
  5401  002FB2  6EE1               	movwf	fsr1l,c
  5402  002FB4  0E05               	movlw	high _TaskTable
  5403  002FB6  20F4               	addwfc	prodh,w,c
  5404  002FB8  6EE2               	movwf	fsr1h,c
  5405  002FBA  50DE               	movf	postinc2,w,c
  5406  002FBC  5CE6               	subwf	postinc1,w,c
  5407  002FBE  50DE               	movf	postinc2,w,c
  5408  002FC0  58E6               	subwfb	postinc1,w,c
  5409  002FC2  A0D8               	btfss	status,0,c
  5410  002FC4  D04E               	goto	l775
  5411                           
  5412                           ; BSR set to: 2
  5413                           ;os_sched.c: 111: {
  5414                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5415  002FC6  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5416  002FC8  0D08               	mullw	8
  5417  002FCA  0E03               	movlw	3
  5418  002FCC  26F3               	addwf	prodl,f,c
  5419  002FCE  0E00               	movlw	0
  5420  002FD0  22F4               	addwfc	prodh,f,c
  5421  002FD2  0EA4               	movlw	low _TaskTable
  5422  002FD4  24F3               	addwf	prodl,w,c
  5423  002FD6  6ED9               	movwf	fsr2l,c
  5424  002FD8  0E05               	movlw	high _TaskTable
  5425  002FDA  20F4               	addwfc	prodh,w,c
  5426  002FDC  6EDA               	movwf	fsr2h,c
  5427  002FDE  0E00               	movlw	0
  5428  002FE0  6EDE               	movwf	postinc2,c
  5429  002FE2  0E00               	movlw	0
  5430  002FE4  6EDD               	movwf	postdec2,c
  5431                           
  5432                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5433  002FE6  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5434  002FE8  0D08               	mullw	8
  5435  002FEA  0E02               	movlw	2
  5436  002FEC  26F3               	addwf	prodl,f,c
  5437  002FEE  0E00               	movlw	0
  5438  002FF0  22F4               	addwfc	prodh,f,c
  5439  002FF2  0EA4               	movlw	low _TaskTable
  5440  002FF4  24F3               	addwf	prodl,w,c
  5441  002FF6  6ED9               	movwf	fsr2l,c
  5442  002FF8  0E05               	movlw	high _TaskTable
  5443  002FFA  20F4               	addwfc	prodh,w,c
  5444  002FFC  6EDA               	movwf	fsr2h,c
  5445  002FFE  0E01               	movlw	1
  5446  003000  6EDF               	movwf	indf2,c
  5447                           
  5448                           ; BSR set to: 2
  5449                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5450  003002  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5451  003004  0D08               	mullw	8
  5452  003006  0EA4               	movlw	low _TaskTable
  5453  003008  24F3               	addwf	prodl,w,c
  5454  00300A  6ED9               	movwf	fsr2l,c
  5455  00300C  0E05               	movlw	high _TaskTable
  5456  00300E  20F4               	addwfc	prodh,w,c
  5457  003010  6EDA               	movwf	fsr2h,c
  5458  003012  D801               	call	u15688
  5459  003014  D017               	goto	u15689
  5460  003016                     u15688:
  5461  003016  0005               	push	
  5462  003018  6EFA               	movwf	pclath,c
  5463  00301A  50DE               	movf	postinc2,w,c
  5464  00301C  6EFD               	movwf	tosl,c
  5465  00301E  50DE               	movf	postinc2,w,c
  5466  003020  6EFE               	movwf	tosh,c
  5467  003022  50F8               	movf	tblptru,w,c
  5468  003024  6EFF               	movwf	tosu,c
  5469  003026  50FA               	movf	pclath,w,c
  5470  003028  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5471  00302A  0D08               	mullw	8
  5472  00302C  0E07               	movlw	7
  5473  00302E  26F3               	addwf	prodl,f,c
  5474  003030  0E00               	movlw	0
  5475  003032  22F4               	addwfc	prodh,f,c
  5476  003034  0EA4               	movlw	low _TaskTable
  5477  003036  24F3               	addwf	prodl,w,c
  5478  003038  6ED9               	movwf	fsr2l,c
  5479  00303A  0E05               	movlw	high _TaskTable
  5480  00303C  20F4               	addwfc	prodh,w,c
  5481  00303E  6EDA               	movwf	fsr2h,c
  5482  003040  50DF               	movf	indf2,w,c
  5483  003042  0012               	return		;indir
  5484  003044                     u15689:
  5485                           
  5486                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5487  003044  0102               	movlb	2	; () banked
  5488  003046  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5489  003048  0D08               	mullw	8
  5490  00304A  0E02               	movlw	2
  5491  00304C  26F3               	addwf	prodl,f,c
  5492  00304E  0E00               	movlw	0
  5493  003050  22F4               	addwfc	prodh,f,c
  5494  003052  0EA4               	movlw	low _TaskTable
  5495  003054  24F3               	addwf	prodl,w,c
  5496  003056  6ED9               	movwf	fsr2l,c
  5497  003058  0E05               	movlw	high _TaskTable
  5498  00305A  20F4               	addwfc	prodh,w,c
  5499  00305C  6EDA               	movwf	fsr2h,c
  5500  00305E  0E00               	movlw	0
  5501  003060  6EDF               	movwf	indf2,c
  5502  003062                     l775:
  5503                           
  5504                           ; BSR set to: 2
  5505                           
  5506                           ; BSR set to: 2
  5507                           
  5508                           ;os_sched.c: 117: else
  5509                           ;os_sched.c: 118: {
  5510                           
  5511                           ; BSR set to: 2
  5512  003062  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5513  003064  D772               	goto	l15960
  5514  003066                     __end_of_ScheduleTasks:
  5515                           	opt stack 0
  5516                           tosu	equ	0xFFF
  5517                           tosh	equ	0xFFE
  5518                           tosl	equ	0xFFD
  5519                           pclath	equ	0xFFA
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           prodh	equ	0xFF4
  5525                           prodl	equ	0xFF3
  5526                           intcon	equ	0xFF2
  5527                           intcon2	equ	0xFF1
  5528                           intcon3	equ	0xFF0
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postinc1	equ	0xFE6
  5532                           postdec1	equ	0xFE5
  5533                           fsr1h	equ	0xFE2
  5534                           fsr1l	equ	0xFE1
  5535                           indf2	equ	0xFDF
  5536                           postinc2	equ	0xFDE
  5537                           postdec2	equ	0xFDD
  5538                           fsr2h	equ	0xFDA
  5539                           fsr2l	equ	0xFD9
  5540                           status	equ	0xFD8
  5541                           
  5542 ;; *************** function _InitializeTasks *****************
  5543 ;; Defined at:
  5544 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Totals:         0       0       0       1       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;Total ram usage:        3 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:   21
  5565 ;; This function calls:
  5566 ;;		_I2cSlv_MainTask
  5567 ;;		_Led_MainTask
  5568 ;;		_MdmHttp_MainTask
  5569 ;;		_Mdm_DrvMainFn
  5570 ;;		_Mdm_MainTask
  5571 ;;		_MyApp_Task
  5572 ;;		_Rtcm_MainTask
  5573 ;;		_Term_MainTask
  5574 ;;		_UsbDevice_MainTask
  5575 ;;		_Wdg_MainTask
  5576 ;; This function is called by:
  5577 ;;		_Sch_MainScheduler
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text15
  5582  005078                     __ptext15:
  5583                           	opt stack 0
  5584  005078                     _InitializeTasks:
  5585                           	opt stack 8
  5586                           
  5587                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5588                           
  5589                           ; BSR set to: 4
  5590                           ;incstack = 0
  5591  005078  0E00               	movlw	0
  5592  00507A  0102               	movlb	2	; () banked
  5593  00507C  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5594                           
  5595                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5596  00507E  0E00               	movlw	0
  5597  005080  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5598  005082                     l15948:
  5599                           
  5600                           ; BSR set to: 2
  5601  005082  0E2F               	movlw	low _TaskNumber
  5602  005084  6EF6               	movwf	tblptrl,c
  5603  005086                     	if	1	;There is more than 1 active tblptr byte
  5604  005086  0EFC               	movlw	high _TaskNumber
  5605  005088  6EF7               	movwf	tblptrh,c
  5606  00508A                     	endif
  5607  00508A                     	if	0	;There are less than 3 active tblptr bytes
  5608  00508A                     	endif
  5609  00508A  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5610  00508C  0104               	movlb	4	; () banked
  5611  00508E  6FFC               	movwf	??_InitializeTasks& (0+255),b
  5612  005090  6BFD               	clrf	(??_InitializeTasks+1)& (0+255),b
  5613  005092  0009               	tblrd		*+
  5614  005094  50F5               	movf	tablat,w,c
  5615  005096  5DFC               	subwf	??_InitializeTasks& (0+255),w,b
  5616  005098  0009               	tblrd		*+
  5617  00509A  50F5               	movf	tablat,w,c
  5618  00509C  59FD               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5619  00509E  B0D8               	btfsc	status,0,c
  5620  0050A0  0012               	return	
  5621                           
  5622                           ; BSR set to: 4
  5623                           ;os_sched.c: 86: {
  5624                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5625                           
  5626                           ; BSR set to: 4
  5627                           
  5628                           ; BSR set to: 4
  5629  0050A2  0102               	movlb	2	; () banked
  5630  0050A4  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5631  0050A6  0D08               	mullw	8
  5632  0050A8  0EA4               	movlw	low _TaskTable
  5633  0050AA  24F3               	addwf	prodl,w,c
  5634  0050AC  6ED9               	movwf	fsr2l,c
  5635  0050AE  0E05               	movlw	high _TaskTable
  5636  0050B0  20F4               	addwfc	prodh,w,c
  5637  0050B2  6EDA               	movwf	fsr2h,c
  5638  0050B4  D801               	call	u15648
  5639  0050B6  D017               	goto	u15649
  5640  0050B8                     u15648:
  5641  0050B8  0005               	push	
  5642  0050BA  6EFA               	movwf	pclath,c
  5643  0050BC  50DE               	movf	postinc2,w,c
  5644  0050BE  6EFD               	movwf	tosl,c
  5645  0050C0  50DE               	movf	postinc2,w,c
  5646  0050C2  6EFE               	movwf	tosh,c
  5647  0050C4  50F8               	movf	tblptru,w,c
  5648  0050C6  6EFF               	movwf	tosu,c
  5649  0050C8  50FA               	movf	pclath,w,c
  5650  0050CA  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5651  0050CC  0D08               	mullw	8
  5652  0050CE  0E07               	movlw	7
  5653  0050D0  26F3               	addwf	prodl,f,c
  5654  0050D2  0E00               	movlw	0
  5655  0050D4  22F4               	addwfc	prodh,f,c
  5656  0050D6  0EA4               	movlw	low _TaskTable
  5657  0050D8  24F3               	addwf	prodl,w,c
  5658  0050DA  6ED9               	movwf	fsr2l,c
  5659  0050DC  0E05               	movlw	high _TaskTable
  5660  0050DE  20F4               	addwfc	prodh,w,c
  5661  0050E0  6EDA               	movwf	fsr2h,c
  5662  0050E2  50DF               	movf	indf2,w,c
  5663  0050E4  0012               	return		;indir
  5664  0050E6                     u15649:
  5665  0050E6  0102               	movlb	2	; () banked
  5666  0050E8  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5667  0050EA  D7CB               	goto	l15948
  5668  0050EC                     __end_of_InitializeTasks:
  5669                           	opt stack 0
  5670                           tosu	equ	0xFFF
  5671                           tosh	equ	0xFFE
  5672                           tosl	equ	0xFFD
  5673                           pclath	equ	0xFFA
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           intcon2	equ	0xFF1
  5682                           intcon3	equ	0xFF0
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           postinc1	equ	0xFE6
  5686                           postdec1	equ	0xFE5
  5687                           fsr1h	equ	0xFE2
  5688                           fsr1l	equ	0xFE1
  5689                           indf2	equ	0xFDF
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function _MyApp_Task *****************
  5697 ;; Defined at:
  5698 ;;		line 171 in file "../Source/c/04_App/app.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  Options         1    wreg     unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  Options         1    0[COMRAM] unsigned char 
  5703 ;;  cmdAddNumber    4   22[BANK1 ] const unsigned char [4]
  5704 ;;  cmpString       3   19[BANK1 ] unsigned char [3]
  5705 ;;  numberInMemo    1   27[BANK1 ] unsigned char 
  5706 ;;  memoryResult    1   26[BANK1 ] enum E8114
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;Total ram usage:        9 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:   19
  5723 ;; This function calls:
  5724 ;;		_GetCallerNumber
  5725 ;;		_Led_SetLedBlinkTime
  5726 ;;		_Led_SetLedStatus
  5727 ;;		_Mdm_GetSmsData
  5728 ;;		_Mdm_HangPhoneCall
  5729 ;;		_Mdm_IsRinging
  5730 ;;		_Mdm_IsSmsReceived
  5731 ;;		_Mdm_RequestSmsData
  5732 ;;		_StringCompare
  5733 ;;		_Uart_WriteConstString
  5734 ;;		_initFsm
  5735 ;;		_initMemorizedNumbersCount
  5736 ;;		_isNumberInMemory
  5737 ;;		_isNumberValid
  5738 ;;		_parseCommand
  5739 ;;		_saveNumberInMemory
  5740 ;;		_waitSetupCall
  5741 ;; This function is called by:
  5742 ;;		_InitializeTasks
  5743 ;;		_ScheduleTasks
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text16
  5748  0015EE                     __ptext16:
  5749                           	opt stack 0
  5750  0015EE                     _MyApp_Task:
  5751                           	opt stack 9
  5752                           
  5753                           ;app.c: 173: static UINT8 smsPhoneNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5754                           ;app.c: 178: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5755                           
  5756                           ; BSR set to: 4
  5757                           ;incstack = 0
  5758  0015EE  0E23               	movlw	low MyApp_Task@F9029
  5759  0015F0  6EF6               	movwf	tblptrl,c
  5760  0015F2                     	if	1	;There is more than 1 active tblptr byte
  5761  0015F2  0EFC               	movlw	high MyApp_Task@F9029
  5762  0015F4  6EF7               	movwf	tblptrh,c
  5763  0015F6                     	endif
  5764  0015F6                     	if	0	;There are less than 3 active tblptr bytes
  5765  0015F6                     	endif
  5766  0015F6  0009               	tblrd		*+
  5767  0015F8  CFF5 F116          	movff	tablat,MyApp_Task@cmdAddNumber
  5768  0015FC  0009               	tblrd		*+
  5769  0015FE  CFF5 F117          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5770  001602  0009               	tblrd		*+
  5771  001604  CFF5 F118          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5772  001608  000A               	tblrd		*-
  5773  00160A  CFF5 F119          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5774                           
  5775                           ;app.c: 179: uint8_t cmpString[] = {'c', 'a', 't'};
  5776  00160E  C3CF  F113         	movff	MyApp_Task@F9031,MyApp_Task@cmpString
  5777  001612  C3D0  F114         	movff	MyApp_Task@F9031+1,MyApp_Task@cmpString+1
  5778  001616  C3D1  F115         	movff	MyApp_Task@F9031+2,MyApp_Task@cmpString+2
  5779                           
  5780                           ;app.c: 181: static gateFsmStates currentState = GATE_INIT;
  5781                           ;app.c: 182: I2cOpStsType memoryResult = OP_COMPLETE;
  5782  00161A  0E01               	movlw	1
  5783  00161C  0101               	movlb	1	; () banked
  5784  00161E  6F1A               	movwf	MyApp_Task@memoryResult& (0+255),b
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;app.c: 183: uint8_t numberInMemory = 0;
  5788  001620  0E00               	movlw	0
  5789  001622  6F1B               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5790                           
  5791                           ;app.c: 185: switch (SystemState)
  5792  001624  D101               	goto	l2595
  5793  001626                     
  5794                           ;app.c: 190: Led_SetLedBlinkTime(1u,100,900);
  5795                           
  5796                           ; BSR set to: 1
  5797  001626  0E00               	movlw	0
  5798  001628  0100               	movlb	0	; () banked
  5799  00162A  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5800  00162C  0E64               	movlw	100
  5801  00162E  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5802  001630  0E03               	movlw	3
  5803  001632  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5804  001634  0E84               	movlw	132
  5805  001636  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5806  001638  0E01               	movlw	1
  5807  00163A  EC0C  F02C         	call	_Led_SetLedBlinkTime
  5808                           
  5809                           ;app.c: 191: break;
  5810  00163E  0012               	return	
  5811  001640                     
  5812                           ;app.c: 198: if (initFsm())
  5813  001640  EC0E  F02E         	call	_initFsm	;wreg free
  5814  001644  0900               	iorlw	0
  5815  001646  B4D8               	btfsc	status,2,c
  5816  001648  0012               	return	
  5817                           
  5818                           ;app.c: 199: {
  5819                           ;app.c: 200: if (isMemoryEmpty)
  5820  00164A  0101               	movlb	1	; () banked
  5821  00164C  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5822  00164E  B4D8               	btfsc	status,2,c
  5823  001650  D036               	goto	l2602
  5824                           
  5825                           ; BSR set to: 1
  5826                           ;app.c: 201: {
  5827                           ;app.c: 202: if (waitSetupCall())
  5828  001652  EC2A  F02D         	call	_waitSetupCall	;wreg free
  5829  001656  0900               	iorlw	0
  5830  001658  B4D8               	btfsc	status,2,c
  5831  00165A  D003               	goto	l2603
  5832                           
  5833                           ;app.c: 203: {
  5834                           ;app.c: 204: currentState = GATE_SAVE_FIRST_MASTER;
  5835  00165C  0E01               	movlw	1
  5836  00165E  0101               	movlb	1	; () banked
  5837  001660  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5838  001662                     l2603:
  5839                           
  5840                           ;app.c: 205: }
  5841                           ;app.c: 206: if (Mdm_IsSmsReceived())
  5842                           
  5843                           ; BSR set to: 1
  5844  001662  ECC5  F031         	call	_Mdm_IsSmsReceived	;wreg free
  5845  001666  0900               	iorlw	0
  5846  001668  A4D8               	btfss	status,2,c
  5847                           
  5848                           ;app.c: 207: {
  5849                           ;app.c: 208: Mdm_RequestSmsData();
  5850  00166A  EC72  F033         	call	_Mdm_RequestSmsData	;wreg free
  5851                           
  5852                           ;app.c: 209: }
  5853                           ;app.c: 210: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5854  00166E  0E95               	movlw	low _smsText
  5855  001670  0100               	movlb	0	; () banked
  5856  001672  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5857  001674  0E04               	movlw	high _smsText
  5858  001676  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5859  001678  EC54  F029         	call	_Mdm_GetSmsData	;wreg free
  5860  00167C  06E8               	decf	wreg,f,c
  5861  00167E  A4D8               	btfss	status,2,c
  5862  001680  0012               	return	
  5863                           
  5864                           ;app.c: 211: {
  5865                           ;app.c: 212: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5866  001682  0E2E               	movlw	low STR_29
  5867  001684  0100               	movlb	0	; () banked
  5868  001686  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5869  001688  0EFF               	movlw	high STR_29
  5870  00168A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5871  00168C  0E01               	movlw	1
  5872  00168E  EC00  F02F         	call	_Uart_WriteConstString
  5873                           
  5874                           ;app.c: 213: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5875  001692  0E95               	movlw	low _smsText
  5876  001694  0100               	movlb	0	; () banked
  5877  001696  6F7D               	movwf	StringCompare@String1& (0+255),b
  5878  001698  0E04               	movlw	high _smsText
  5879  00169A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5880  00169C  0E16               	movlw	low MyApp_Task@cmdAddNumber
  5881  00169E  6F7F               	movwf	StringCompare@String2& (0+255),b
  5882  0016A0  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5883  0016A2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5884  0016A4  0E00               	movlw	0
  5885  0016A6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5886  0016A8  0E04               	movlw	4
  5887  0016AA  6F81               	movwf	StringCompare@Len& (0+255),b
  5888  0016AC  EC89  F02C         	call	_StringCompare	;wreg free
  5889  0016B0  0900               	iorlw	0
  5890  0016B2  B4D8               	btfsc	status,2,c
  5891  0016B4  0012               	return	
  5892                           
  5893                           ;app.c: 214: {
  5894                           ;app.c: 215: currentState = GATE_SAVE_FIRST_MASTER;
  5895  0016B6  0E01               	movlw	1
  5896  0016B8  0101               	movlb	1	; () banked
  5897  0016BA  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;app.c: 216: }
  5901                           ;app.c: 217: }
  5902                           ;app.c: 218: }
  5903                           
  5904                           ; BSR set to: 1
  5905  0016BC  0012               	return	
  5906  0016BE                     l2602:
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;app.c: 219: else
  5910                           ;app.c: 220: {
  5911                           ;app.c: 221: Led_SetLedStatus(1u, LED_STS_ON);
  5912                           
  5913                           ; BSR set to: 1
  5914  0016BE  0E01               	movlw	1
  5915  0016C0  0100               	movlb	0	; () banked
  5916  0016C2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5917  0016C4  0E01               	movlw	1
  5918  0016C6  ECE1  F030         	call	_Led_SetLedStatus
  5919                           
  5920                           ;app.c: 222: currentState = GATE_WAIT_EVENT;
  5921  0016CA  0E03               	movlw	3
  5922  0016CC  0101               	movlb	1	; () banked
  5923  0016CE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;app.c: 223: }
  5927                           ;app.c: 224: }
  5928                           ;app.c: 225: break;
  5929                           
  5930                           ; BSR set to: 1
  5931  0016D0  0012               	return	
  5932  0016D2                     
  5933                           ; BSR set to: 1
  5934                           ;app.c: 228: saveNumberInMemory(16, GetCallerNumber());
  5935                           
  5936                           ; BSR set to: 1
  5937  0016D2  EC17  F030         	call	_GetCallerNumber	;wreg free
  5938  0016D6  C083  F08E         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  5939  0016DA  C084  F08F         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  5940  0016DE  0E10               	movlw	16
  5941  0016E0  ECD3  F032         	call	_saveNumberInMemory
  5942                           
  5943                           ;app.c: 229: currentState = GATE_UPDATE_NUMBERS_COUNT;
  5944  0016E4  0E02               	movlw	2
  5945  0016E6  0101               	movlb	1	; () banked
  5946  0016E8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5947                           
  5948                           ;app.c: 230: break;
  5949  0016EA  0012               	return	
  5950  0016EC                     
  5951                           ; BSR set to: 1
  5952                           ;app.c: 233: initMemorizedNumbersCount();
  5953                           
  5954                           ; BSR set to: 1
  5955  0016EC  ECE0  F032         	call	_initMemorizedNumbersCount	;wreg free
  5956                           
  5957                           ;app.c: 234: Led_SetLedStatus(1u, LED_STS_ON);
  5958  0016F0  0E01               	movlw	1
  5959  0016F2  0100               	movlb	0	; () banked
  5960  0016F4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5961  0016F6  0E01               	movlw	1
  5962  0016F8  ECE1  F030         	call	_Led_SetLedStatus
  5963                           
  5964                           ;app.c: 235: currentState = GATE_WAIT_EVENT;
  5965  0016FC  0E03               	movlw	3
  5966  0016FE  0101               	movlb	1	; () banked
  5967  001700  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5968                           
  5969                           ;app.c: 236: break;
  5970  001702  0012               	return	
  5971  001704                     
  5972                           ; BSR set to: 1
  5973                           ;app.c: 239: if (Mdm_IsSmsReceived())
  5974                           
  5975                           ; BSR set to: 1
  5976  001704  ECC5  F031         	call	_Mdm_IsSmsReceived	;wreg free
  5977  001708  0900               	iorlw	0
  5978  00170A  A4D8               	btfss	status,2,c
  5979                           
  5980                           ;app.c: 240: {
  5981                           ;app.c: 241: Mdm_RequestSmsData();
  5982  00170C  EC72  F033         	call	_Mdm_RequestSmsData	;wreg free
  5983                           
  5984                           ;app.c: 242: }
  5985                           ;app.c: 243: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5986  001710  0E95               	movlw	low _smsText
  5987  001712  0100               	movlb	0	; () banked
  5988  001714  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5989  001716  0E04               	movlw	high _smsText
  5990  001718  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5991  00171A  EC54  F029         	call	_Mdm_GetSmsData	;wreg free
  5992  00171E  06E8               	decf	wreg,f,c
  5993  001720  A4D8               	btfss	status,2,c
  5994  001722  D011               	goto	l2613
  5995                           
  5996                           ;app.c: 244: {
  5997                           ;app.c: 245: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5998  001724  0E2E               	movlw	low STR_29
  5999  001726  0100               	movlb	0	; () banked
  6000  001728  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6001  00172A  0EFF               	movlw	high STR_29
  6002  00172C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6003  00172E  0E01               	movlw	1
  6004  001730  EC00  F02F         	call	_Uart_WriteConstString
  6005                           
  6006                           ;app.c: 246: currentState = parseCommand(smsText);
  6007  001734  0E95               	movlw	low _smsText
  6008  001736  0100               	movlb	0	; () banked
  6009  001738  6F88               	movwf	parseCommand@text& (0+255),b
  6010  00173A  0E04               	movlw	high _smsText
  6011  00173C  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6012  00173E  EC87  F025         	call	_parseCommand	;wreg free
  6013  001742  0101               	movlb	1	; () banked
  6014  001744  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6015  001746                     l2613:
  6016                           
  6017                           ;app.c: 247: }
  6018                           ;app.c: 248: if (Mdm_IsRinging())
  6019                           
  6020                           ; BSR set to: 1
  6021  001746  ECB3  F031         	call	_Mdm_IsRinging	;wreg free
  6022  00174A  0900               	iorlw	0
  6023  00174C  B4D8               	btfsc	status,2,c
  6024  00174E  0012               	return	
  6025                           
  6026                           ;app.c: 249: {
  6027                           ;app.c: 250: Mdm_HangPhoneCall();
  6028  001750  EC50  F033         	call	_Mdm_HangPhoneCall	;wreg free
  6029                           
  6030                           ;app.c: 251: currentState = GATE_TRIGGER_CMD;
  6031  001754  0E06               	movlw	6
  6032  001756  0101               	movlb	1	; () banked
  6033  001758  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6034                           
  6035                           ; BSR set to: 1
  6036                           ;app.c: 252: }
  6037                           ;app.c: 253: break;
  6038  00175A  0012               	return	
  6039  00175C                     
  6040                           ; BSR set to: 1
  6041                           ;app.c: 256: if (isNumberValid(smsText + 3))
  6042                           
  6043                           ; BSR set to: 1
  6044  00175C  0E98               	movlw	low (_smsText+3)
  6045  00175E  0100               	movlb	0	; () banked
  6046  001760  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
  6047  001762  0E04               	movlw	high (_smsText+3)
  6048  001764  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
  6049  001766  ECEE  F029         	call	_isNumberValid	;wreg free
  6050  00176A  0900               	iorlw	0
  6051  00176C  B4D8               	btfsc	status,2,c
  6052  00176E  0012               	return	
  6053                           
  6054                           ;app.c: 257: {
  6055                           ;app.c: 258: numberInMemory = isNumberInMemory(GetCallerNumber());
  6056  001770  EC17  F030         	call	_GetCallerNumber	;wreg free
  6057  001774  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6058  001778  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6059  00177C  ECEC  F026         	call	_isNumberInMemory	;wreg free
  6060  001780  0101               	movlb	1	; () banked
  6061  001782  6F1B               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;app.c: 259: if (numberInMemory == 1)
  6065  001784  051B               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6066  001786  A4D8               	btfss	status,2,c
  6067  001788  0012               	return	
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;app.c: 260: {
  6071                           ;app.c: 261: currentState = GATE_WAIT_EVENT;
  6072  00178A  0E03               	movlw	3
  6073  00178C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6074                           
  6075                           ; BSR set to: 1
  6076                           ;app.c: 266: }
  6077                           ;app.c: 267: }
  6078                           ;app.c: 268: break;
  6079                           
  6080                           ; BSR set to: 1
  6081                           
  6082                           ; BSR set to: 1
  6083                           
  6084                           ;app.c: 264: {
  6085                           
  6086                           ; BSR set to: 1
  6087                           
  6088                           ; BSR set to: 1
  6089                           
  6090                           ; BSR set to: 1
  6091                           
  6092                           ;app.c: 262: }
  6093  00178E  0012               	return	
  6094  001790                     
  6095                           ; BSR set to: 1
  6096                           ;app.c: 271: if (isNumberValid(smsText + 3))
  6097                           
  6098                           ; BSR set to: 1
  6099  001790  0E98               	movlw	low (_smsText+3)
  6100  001792  0100               	movlb	0	; () banked
  6101  001794  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
  6102  001796  0E04               	movlw	high (_smsText+3)
  6103  001798  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
  6104  00179A  ECEE  F029         	call	_isNumberValid	;wreg free
  6105  00179E  0900               	iorlw	0
  6106  0017A0  B4D8               	btfsc	status,2,c
  6107  0017A2  0012               	return	
  6108                           
  6109                           ;app.c: 272: {
  6110                           ;app.c: 273: numberInMemory = isNumberInMemory(GetCallerNumber());
  6111  0017A4  EC17  F030         	call	_GetCallerNumber	;wreg free
  6112  0017A8  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6113  0017AC  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6114  0017B0  ECEC  F026         	call	_isNumberInMemory	;wreg free
  6115  0017B4  0101               	movlb	1	; () banked
  6116  0017B6  6F1B               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6117                           
  6118                           ; BSR set to: 1
  6119                           ;app.c: 274: if (numberInMemory == 1)
  6120  0017B8  051B               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6121  0017BA  A4D8               	btfss	status,2,c
  6122  0017BC  0012               	return	
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;app.c: 275: {
  6126                           ;app.c: 276: currentState = GATE_WAIT_EVENT;
  6127  0017BE  0E03               	movlw	3
  6128  0017C0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;app.c: 281: }
  6132                           ;app.c: 282: }
  6133                           ;app.c: 283: break;
  6134                           
  6135                           ; BSR set to: 1
  6136                           
  6137                           ; BSR set to: 1
  6138                           
  6139                           ;app.c: 279: {
  6140                           
  6141                           ; BSR set to: 1
  6142                           
  6143                           ; BSR set to: 1
  6144                           
  6145                           ; BSR set to: 1
  6146                           
  6147                           ;app.c: 277: }
  6148  0017C2  0012               	return	
  6149  0017C4                     
  6150                           ; BSR set to: 1
  6151                           ;app.c: 286: numberInMemory = isNumberInMemory(GetCallerNumber());
  6152                           
  6153                           ; BSR set to: 1
  6154  0017C4  EC17  F030         	call	_GetCallerNumber	;wreg free
  6155  0017C8  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6156  0017CC  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6157  0017D0  ECEC  F026         	call	_isNumberInMemory	;wreg free
  6158  0017D4  0101               	movlb	1	; () banked
  6159  0017D6  6F1B               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6160                           
  6161                           ; BSR set to: 1
  6162                           ;app.c: 287: if (numberInMemory == 1)
  6163  0017D8  051B               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6164  0017DA  A4D8               	btfss	status,2,c
  6165  0017DC  D003               	goto	l2626
  6166                           
  6167                           ; BSR set to: 1
  6168                           ;app.c: 288: {
  6169                           ;app.c: 289: currentState = GATE_WAIT_EVENT;
  6170  0017DE  0E03               	movlw	3
  6171  0017E0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6172                           
  6173                           ;app.c: 290: }
  6174  0017E2  0012               	return	
  6175  0017E4                     l2626:
  6176                           
  6177                           ; BSR set to: 1
  6178                           ;app.c: 291: else if (numberInMemory != 0 && numberInMemory != 1)
  6179                           
  6180                           ; BSR set to: 1
  6181  0017E4  511B               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6182  0017E6  B4D8               	btfsc	status,2,c
  6183  0017E8  0012               	return	
  6184                           
  6185                           ; BSR set to: 1
  6186  0017EA  051B               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6187  0017EC  B4D8               	btfsc	status,2,c
  6188  0017EE  0012               	return	
  6189                           
  6190                           ; BSR set to: 1
  6191                           ;app.c: 292: {
  6192                           ;app.c: 293: currentState = GATE_ACTIVATE_RELAY;
  6193  0017F0  0E07               	movlw	7
  6194  0017F2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;app.c: 301: }
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;app.c: 300: break;
  6201                           
  6202                           ;app.c: 299: default:
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;app.c: 297: break;
  6206                           
  6207                           ;app.c: 294: }
  6208                           ;app.c: 296: case GATE_ACTIVATE_RELAY:
  6209                           
  6210                           ; BSR set to: 1
  6211                           
  6212                           ; BSR set to: 1
  6213  0017F4  0012               	return	
  6214  0017F6                     
  6215                           ; BSR set to: 1
  6216  0017F6  0101               	movlb	1	; () banked
  6217  0017F8  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6218                           
  6219                           ; Switch size 1, requested type "space"
  6220                           ; Number of cases is 8, Range of values is 0 to 7
  6221                           ; switch strategies available:
  6222                           ; Name         Instructions Cycles
  6223                           ; simple_byte           25    13 (average)
  6224                           ;	Chosen strategy is simple_byte
  6225  0017FA  0A00               	xorlw	0	; case 0
  6226  0017FC  B4D8               	btfsc	status,2,c
  6227  0017FE  D720               	goto	l2600
  6228  001800  0A01               	xorlw	1	; case 1
  6229  001802  B4D8               	btfsc	status,2,c
  6230  001804  D766               	goto	l2609
  6231  001806  0A03               	xorlw	3	; case 2
  6232  001808  B4D8               	btfsc	status,2,c
  6233  00180A  D770               	goto	l2610
  6234  00180C  0A01               	xorlw	1	; case 3
  6235  00180E  B4D8               	btfsc	status,2,c
  6236  001810  D779               	goto	l2611
  6237  001812  0A07               	xorlw	7	; case 4
  6238  001814  B4D8               	btfsc	status,2,c
  6239  001816  D7A2               	goto	l2615
  6240  001818  0A01               	xorlw	1	; case 5
  6241  00181A  B4D8               	btfsc	status,2,c
  6242  00181C  D7B9               	goto	l2620
  6243  00181E  0A03               	xorlw	3	; case 6
  6244  001820  B4D8               	btfsc	status,2,c
  6245  001822  D7D0               	goto	l2625
  6246  001824  0A01               	xorlw	1	; case 7
  6247                           
  6248                           ; BSR set to: 1
  6249                           ;app.c: 367: }
  6250                           
  6251                           ; BSR set to: 1
  6252                           ;app.c: 366: break;
  6253                           
  6254                           ;app.c: 365: default:
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;app.c: 362: break;
  6258  001826  0012               	return	
  6259  001828                     l2595:
  6260                           
  6261                           ; BSR set to: 1
  6262                           
  6263                           ; BSR set to: 1
  6264  001828  0100               	movlb	0	; () banked
  6265  00182A  51D4               	movf	_SystemState& (0+255),w,b
  6266                           
  6267                           ; Switch size 1, requested type "space"
  6268                           ; Number of cases is 2, Range of values is 0 to 1
  6269                           ; switch strategies available:
  6270                           ; Name         Instructions Cycles
  6271                           ; simple_byte            7     4 (average)
  6272                           ;	Chosen strategy is simple_byte
  6273  00182C  0A00               	xorlw	0	; case 0
  6274  00182E  B4D8               	btfsc	status,2,c
  6275  001830  D6FA               	goto	l2596
  6276  001832  0A01               	xorlw	1	; case 1
  6277  001834  A4D8               	btfss	status,2,c
  6278  001836  0012               	return	
  6279  001838  D7DE               	goto	l2599
  6280  00183A                     __end_of_MyApp_Task:
  6281                           	opt stack 0
  6282                           tosu	equ	0xFFF
  6283                           tosh	equ	0xFFE
  6284                           tosl	equ	0xFFD
  6285                           pclath	equ	0xFFA
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon2	equ	0xFF1
  6294                           intcon3	equ	0xFF0
  6295                           postinc0	equ	0xFEE
  6296                           wreg	equ	0xFE8
  6297                           postinc1	equ	0xFE6
  6298                           postdec1	equ	0xFE5
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function _Term_MainTask *****************
  6309 ;; Defined at:
  6310 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  Options         1    wreg     unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  Options         1    0[COMRAM] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1    wreg      void 
  6317 ;; Registers used:
  6318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:   17
  6331 ;; This function calls:
  6332 ;;		_Term_MainSm
  6333 ;; This function is called by:
  6334 ;;		_InitializeTasks
  6335 ;;		_ScheduleTasks
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text17
  6340  00658C                     __ptext17:
  6341                           	opt stack 0
  6342  00658C                     _Term_MainTask:
  6343                           	opt stack 11
  6344                           
  6345                           ;term.c: 847: switch (SystemState)
  6346                           
  6347                           ;incstack = 0
  6348  00658C  D003               	goto	l2478
  6349  00658E                     
  6350                           ;term.c: 858: Term_MainSm();
  6351  00658E  EC5B  F008         	call	_Term_MainSm	;wreg free
  6352                           
  6353                           ;term.c: 865: }
  6354                           
  6355                           ;term.c: 864: break;
  6356                           
  6357                           ;term.c: 863: default:
  6358                           
  6359                           ;term.c: 860: break;
  6360  006592  0012               	return	
  6361  006594                     l2478:
  6362  006594  0100               	movlb	0	; () banked
  6363  006596  51D4               	movf	_SystemState& (0+255),w,b
  6364                           
  6365                           ; Switch size 1, requested type "space"
  6366                           ; Number of cases is 2, Range of values is 0 to 1
  6367                           ; switch strategies available:
  6368                           ; Name         Instructions Cycles
  6369                           ; simple_byte            7     4 (average)
  6370                           ;	Chosen strategy is simple_byte
  6371  006598  0A00               	xorlw	0	; case 0
  6372  00659A  B4D8               	btfsc	status,2,c
  6373  00659C  0012               	return	
  6374  00659E  0A01               	xorlw	1	; case 1
  6375  0065A0  A4D8               	btfss	status,2,c
  6376  0065A2  0012               	return	
  6377  0065A4  D7F4               	goto	l2481
  6378  0065A6                     __end_of_Term_MainTask:
  6379                           	opt stack 0
  6380                           tosu	equ	0xFFF
  6381                           tosh	equ	0xFFE
  6382                           tosl	equ	0xFFD
  6383                           pclath	equ	0xFFA
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           intcon	equ	0xFF2
  6391                           intcon2	equ	0xFF1
  6392                           intcon3	equ	0xFF0
  6393                           postinc0	equ	0xFEE
  6394                           wreg	equ	0xFE8
  6395                           postinc1	equ	0xFE6
  6396                           postdec1	equ	0xFE5
  6397                           fsr1h	equ	0xFE2
  6398                           fsr1l	equ	0xFE1
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _Rtcm_MainTask *****************
  6407 ;; Defined at:
  6408 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  Options         1    wreg     unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  Options         1    0[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   14
  6429 ;; This function calls:
  6430 ;;		_Rtcc_AlarmConfig
  6431 ;;		_Rtcc_LockRtc
  6432 ;;		_Rtcc_RtcConfig
  6433 ;;		_Rtcc_SetRtcStatus
  6434 ;;		_Rtcc_UnlockRtc
  6435 ;;		_Rtcm_GetRtccDate
  6436 ;;		_Rtcm_SetRtccDate
  6437 ;; This function is called by:
  6438 ;;		_InitializeTasks
  6439 ;;		_ScheduleTasks
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text18
  6444  004CBE                     __ptext18:
  6445                           	opt stack 0
  6446  004CBE                     _Rtcm_MainTask:
  6447                           	opt stack 14
  6448                           
  6449                           ;rtcm.c: 101: switch (SystemState)
  6450                           
  6451                           ;incstack = 0
  6452  004CBE  D03D               	goto	l2208
  6453  004CC0                     l2209:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6457  004CC0  86CD               	bsf	4045,3,c	;volatile
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6461  004CC2  0E00               	movlw	0
  6462  004CC4  0103               	movlb	3	; () banked
  6463  004CC6  6FAF               	movwf	_RtcConfig& (0+255),b
  6464                           
  6465                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6466  004CC8  0E00               	movlw	0
  6467  004CCA  6FB0               	movwf	(_RtcConfig+1)& (0+255),b
  6468                           
  6469                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6470  004CCC  0E01               	movlw	1
  6471  004CCE  6FB1               	movwf	(_RtcConfig+2)& (0+255),b
  6472                           
  6473                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6474  004CD0  0E01               	movlw	1
  6475  004CD2  6FB2               	movwf	(_RtcConfig+3)& (0+255),b
  6476                           
  6477                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6478  004CD4  0E01               	movlw	1
  6479  004CD6  6FAB               	movwf	_AlCfg& (0+255),b
  6480                           
  6481                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6482  004CD8  0E01               	movlw	1
  6483  004CDA  6FAC               	movwf	(_AlCfg+1)& (0+255),b
  6484                           
  6485                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6486  004CDC  0E01               	movlw	1
  6487  004CDE  6FAD               	movwf	(_AlCfg+2)& (0+255),b
  6488                           
  6489                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6490  004CE0  0E00               	movlw	0
  6491  004CE2  6FAE               	movwf	(_AlCfg+3)& (0+255),b
  6492                           
  6493                           ; BSR set to: 3
  6494                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6495  004CE4  EC62  F033         	call	_Rtcc_UnlockRtc	;wreg free
  6496                           
  6497                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6498  004CE8  0EAF               	movlw	low _RtcConfig
  6499  004CEA  0100               	movlb	0	; () banked
  6500  004CEC  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6501  004CEE  0E03               	movlw	high _RtcConfig
  6502  004CF0  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6503  004CF2  EC72  F023         	call	_Rtcc_RtcConfig	;wreg free
  6504                           
  6505                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6506  004CF6  0EAB               	movlw	low _AlCfg
  6507  004CF8  0100               	movlb	0	; () banked
  6508  004CFA  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6509  004CFC  0E03               	movlw	high _AlCfg
  6510  004CFE  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6511  004D00  EC1E  F029         	call	_Rtcc_AlarmConfig	;wreg free
  6512                           
  6513                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6514  004D04  0E01               	movlw	1
  6515  004D06  EC11  F033         	call	_Rtcc_SetRtcStatus
  6516                           
  6517                           ;rtcm.c: 127: Rtcc_LockRtc();
  6518  004D0A  EC6A  F033         	call	_Rtcc_LockRtc	;wreg free
  6519                           
  6520                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6521  004D0E  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6522  004D12  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6523  004D16  0E07               	movlw	7
  6524  004D18                     u15451:
  6525  004D18  CFDB FFEB          	movff	plusw2,plusw0
  6526  004D1C  06E8               	decf	wreg,f,c
  6527  004D1E  E2FC               	bc	u15451
  6528  004D20  ECB8  F02B         	call	_Rtcm_SetRtccDate	;wreg free
  6529                           
  6530                           ;rtcm.c: 154: break;
  6531  004D24  0012               	return	
  6532  004D26                     
  6533                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6534  004D26  ECBB  F029         	call	_Rtcm_GetRtccDate	;wreg free
  6535  004D2A  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6536  004D2E  0E07               	movlw	7
  6537  004D30                     u15461:
  6538  004D30  CFEB FFDB          	movff	plusw0,plusw2
  6539  004D34  06E8               	decf	wreg,f,c
  6540  004D36  E2FC               	bc	u15461
  6541                           
  6542                           ;rtcm.c: 165: }
  6543                           
  6544                           ;rtcm.c: 164: break;
  6545                           
  6546                           ;rtcm.c: 163: default:
  6547                           
  6548                           ;rtcm.c: 160: break;
  6549  004D38  0012               	return	
  6550  004D3A                     l2208:
  6551  004D3A  0100               	movlb	0	; () banked
  6552  004D3C  51D4               	movf	_SystemState& (0+255),w,b
  6553                           
  6554                           ; Switch size 1, requested type "space"
  6555                           ; Number of cases is 2, Range of values is 0 to 1
  6556                           ; switch strategies available:
  6557                           ; Name         Instructions Cycles
  6558                           ; simple_byte            7     4 (average)
  6559                           ;	Chosen strategy is simple_byte
  6560  004D3E  0A00               	xorlw	0	; case 0
  6561  004D40  B4D8               	btfsc	status,2,c
  6562  004D42  D7BE               	goto	l2209
  6563  004D44  0A01               	xorlw	1	; case 1
  6564  004D46  A4D8               	btfss	status,2,c
  6565  004D48  0012               	return	
  6566  004D4A  D7ED               	goto	l2211
  6567  004D4C                     __end_of_Rtcm_MainTask:
  6568                           	opt stack 0
  6569                           tosu	equ	0xFFF
  6570                           tosh	equ	0xFFE
  6571                           tosl	equ	0xFFD
  6572                           pclath	equ	0xFFA
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           intcon2	equ	0xFF1
  6581                           intcon3	equ	0xFF0
  6582                           postinc0	equ	0xFEE
  6583                           plusw0	equ	0xFEB
  6584                           wreg	equ	0xFE8
  6585                           postinc1	equ	0xFE6
  6586                           postdec1	equ	0xFE5
  6587                           fsr1h	equ	0xFE2
  6588                           fsr1l	equ	0xFE1
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           plusw2	equ	0xFDB
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _Led_MainTask *****************
  6598 ;; Defined at:
  6599 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  Options         1    wreg     unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  Options         1    0[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        1 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   14
  6620 ;; This function calls:
  6621 ;;		_LedStateMachine
  6622 ;; This function is called by:
  6623 ;;		_InitializeTasks
  6624 ;;		_ScheduleTasks
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text19
  6629  003B3C                     __ptext19:
  6630                           	opt stack 0
  6631  003B3C                     _Led_MainTask:
  6632                           	opt stack 14
  6633                           
  6634                           ;led.c: 300: switch (SystemState)
  6635                           
  6636                           ;incstack = 0
  6637  003B3C  D05C               	goto	l2122
  6638  003B3E                     l2123:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6642  003B3E  9895               	bcf	3989,4,c	;volatile
  6643                           
  6644                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6645  003B40  9A95               	bcf	3989,5,c	;volatile
  6646                           
  6647                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6648  003B42  9C95               	bcf	3989,6,c	;volatile
  6649                           
  6650                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6651  003B44  9883               	bcf	3971,4,c	;volatile
  6652                           
  6653                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6654  003B46  9A83               	bcf	3971,5,c	;volatile
  6655                           
  6656                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6657  003B48  9C83               	bcf	3971,6,c	;volatile
  6658                           
  6659                           ;led.c: 311: break;
  6660  003B4A  0012               	return	
  6661  003B4C                     
  6662                           ; BSR set to: 0
  6663                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6664                           
  6665                           ; BSR set to: 0
  6666  003B4C  0EFB               	movlw	low _Led1Sts
  6667  003B4E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6668  003B50  0E01               	movlw	high _Led1Sts
  6669  003B52  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6670  003B54  0EFA               	movlw	low _Led1OutSts
  6671  003B56  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6672  003B58  0E01               	movlw	high _Led1OutSts
  6673  003B5A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6674  003B5C  0E64               	movlw	low _Led1Blink
  6675  003B5E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6676  003B60  0E03               	movlw	high _Led1Blink
  6677  003B62  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6678  003B64  0E88               	movlw	low _Led1Pulse
  6679  003B66  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6680  003B68  0E03               	movlw	high _Led1Pulse
  6681  003B6A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6682  003B6C  0E01               	movlw	1
  6683  003B6E  ECCD  F022         	call	_LedStateMachine
  6684  003B72  0100               	movlb	0	; () banked
  6685  003B74  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6686  003B76  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6687  003B78  5083               	movf	3971,w,c	;volatile
  6688  003B7A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6689  003B7C  0BEF               	andlw	-17
  6690  003B7E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6691  003B80  6E83               	movwf	3971,c	;volatile
  6692                           
  6693                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6694  003B82  0EF9               	movlw	low _Led2Sts
  6695  003B84  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6696  003B86  0E01               	movlw	high _Led2Sts
  6697  003B88  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6698  003B8A  0EF8               	movlw	low _Led2OutSts
  6699  003B8C  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6700  003B8E  0E01               	movlw	high _Led2OutSts
  6701  003B90  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6702  003B92  0E5B               	movlw	low _Led2Blink
  6703  003B94  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6704  003B96  0E03               	movlw	high _Led2Blink
  6705  003B98  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6706  003B9A  0E82               	movlw	low _Led2Pulse
  6707  003B9C  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6708  003B9E  0E03               	movlw	high _Led2Pulse
  6709  003BA0  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6710  003BA2  0E02               	movlw	2
  6711  003BA4  ECCD  F022         	call	_LedStateMachine
  6712  003BA8  0100               	movlb	0	; () banked
  6713  003BAA  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6714  003BAC  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6715  003BAE  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6716  003BB0  5083               	movf	3971,w,c	;volatile
  6717  003BB2  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6718  003BB4  0BDF               	andlw	-33
  6719  003BB6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6720  003BB8  6E83               	movwf	3971,c	;volatile
  6721                           
  6722                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6723  003BBA  0EF7               	movlw	low _Led3Sts
  6724  003BBC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6725  003BBE  0E01               	movlw	high _Led3Sts
  6726  003BC0  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6727  003BC2  0EF6               	movlw	low _Led3OutSts
  6728  003BC4  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6729  003BC6  0E01               	movlw	high _Led3OutSts
  6730  003BC8  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6731  003BCA  0E52               	movlw	low _Led3Blink
  6732  003BCC  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6733  003BCE  0E03               	movlw	high _Led3Blink
  6734  003BD0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6735  003BD2  0E7C               	movlw	low _Led3Pulse
  6736  003BD4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6737  003BD6  0E03               	movlw	high _Led3Pulse
  6738  003BD8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6739  003BDA  0E03               	movlw	3
  6740  003BDC  ECCD  F022         	call	_LedStateMachine
  6741  003BE0  0100               	movlb	0	; () banked
  6742  003BE2  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6743  003BE4  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6744  003BE6  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6745  003BE8  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6746  003BEA  5083               	movf	3971,w,c	;volatile
  6747  003BEC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6748  003BEE  0BBF               	andlw	-65
  6749  003BF0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6750  003BF2  6E83               	movwf	3971,c	;volatile
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;led.c: 326: }
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;led.c: 325: break;
  6757                           
  6758                           ;led.c: 324: default:
  6759                           
  6760                           ;led.c: 321: break;
  6761  003BF4  0012               	return	
  6762  003BF6                     l2122:
  6763                           
  6764                           ; BSR set to: 0
  6765  003BF6  0100               	movlb	0	; () banked
  6766  003BF8  51D4               	movf	_SystemState& (0+255),w,b
  6767                           
  6768                           ; Switch size 1, requested type "space"
  6769                           ; Number of cases is 2, Range of values is 0 to 1
  6770                           ; switch strategies available:
  6771                           ; Name         Instructions Cycles
  6772                           ; simple_byte            7     4 (average)
  6773                           ;	Chosen strategy is simple_byte
  6774  003BFA  0A00               	xorlw	0	; case 0
  6775  003BFC  B4D8               	btfsc	status,2,c
  6776  003BFE  D79F               	goto	l2123
  6777  003C00  0A01               	xorlw	1	; case 1
  6778  003C02  A4D8               	btfss	status,2,c
  6779  003C04  0012               	return	
  6780  003C06  D7A2               	goto	l2125
  6781  003C08                     __end_of_Led_MainTask:
  6782                           	opt stack 0
  6783                           tosu	equ	0xFFF
  6784                           tosh	equ	0xFFE
  6785                           tosl	equ	0xFFD
  6786                           pclath	equ	0xFFA
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           intcon2	equ	0xFF1
  6795                           intcon3	equ	0xFF0
  6796                           postinc0	equ	0xFEE
  6797                           plusw0	equ	0xFEB
  6798                           wreg	equ	0xFE8
  6799                           postinc1	equ	0xFE6
  6800                           postdec1	equ	0xFE5
  6801                           fsr1h	equ	0xFE2
  6802                           fsr1l	equ	0xFE1
  6803                           indf2	equ	0xFDF
  6804                           postinc2	equ	0xFDE
  6805                           postdec2	equ	0xFDD
  6806                           plusw2	equ	0xFDB
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _UsbDevice_MainTask *****************
  6812 ;; Defined at:
  6813 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  Options         1    wreg     unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  Options         1    0[COMRAM] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:   20
  6834 ;; This function calls:
  6835 ;;		_CDCTxService
  6836 ;;		_USBDeviceInit
  6837 ;;		_USBDeviceTasks
  6838 ;; This function is called by:
  6839 ;;		_InitializeTasks
  6840 ;;		_ScheduleTasks
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text20
  6845  006342                     __ptext20:
  6846                           	opt stack 0
  6847  006342                     _UsbDevice_MainTask:
  6848                           	opt stack 8
  6849                           
  6850                           ;usb_device_mgr.c: 74: switch (SystemState)
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;incstack = 0
  6854  006342  D008               	goto	l1989
  6855  006344                     
  6856                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6857  006344  ECE6  F011         	call	_USBDeviceInit	;wreg free
  6858                           
  6859                           ;usb_device_mgr.c: 80: ;
  6860                           ;usb_device_mgr.c: 81: break;
  6861  006348  0012               	return	
  6862  00634A                     
  6863                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6864  00634A  ECFB  F00E         	call	_USBDeviceTasks	;wreg free
  6865                           
  6866                           ;usb_device_mgr.c: 90: CDCTxService();
  6867  00634E  EC31  F015         	call	_CDCTxService	;wreg free
  6868                           
  6869                           ;usb_device_mgr.c: 101: }
  6870                           
  6871                           ;usb_device_mgr.c: 100: break;
  6872                           
  6873                           ;usb_device_mgr.c: 99: default:
  6874                           
  6875                           ;usb_device_mgr.c: 96: break;
  6876  006352  0012               	return	
  6877  006354                     l1989:
  6878  006354  0100               	movlb	0	; () banked
  6879  006356  51D4               	movf	_SystemState& (0+255),w,b
  6880                           
  6881                           ; Switch size 1, requested type "space"
  6882                           ; Number of cases is 2, Range of values is 0 to 1
  6883                           ; switch strategies available:
  6884                           ; Name         Instructions Cycles
  6885                           ; simple_byte            7     4 (average)
  6886                           ;	Chosen strategy is simple_byte
  6887  006358  0A00               	xorlw	0	; case 0
  6888  00635A  B4D8               	btfsc	status,2,c
  6889  00635C  D7F3               	goto	l1990
  6890  00635E  0A01               	xorlw	1	; case 1
  6891  006360  A4D8               	btfss	status,2,c
  6892  006362  0012               	return	
  6893  006364  D7F2               	goto	l1992
  6894  006366                     __end_of_UsbDevice_MainTask:
  6895                           	opt stack 0
  6896                           tosu	equ	0xFFF
  6897                           tosh	equ	0xFFE
  6898                           tosl	equ	0xFFD
  6899                           pclath	equ	0xFFA
  6900                           tblptru	equ	0xFF8
  6901                           tblptrh	equ	0xFF7
  6902                           tblptrl	equ	0xFF6
  6903                           tablat	equ	0xFF5
  6904                           prodh	equ	0xFF4
  6905                           prodl	equ	0xFF3
  6906                           intcon	equ	0xFF2
  6907                           intcon2	equ	0xFF1
  6908                           intcon3	equ	0xFF0
  6909                           postinc0	equ	0xFEE
  6910                           plusw0	equ	0xFEB
  6911                           wreg	equ	0xFE8
  6912                           postinc1	equ	0xFE6
  6913                           postdec1	equ	0xFE5
  6914                           fsr1h	equ	0xFE2
  6915                           fsr1l	equ	0xFE1
  6916                           indf2	equ	0xFDF
  6917                           postinc2	equ	0xFDE
  6918                           postdec2	equ	0xFDD
  6919                           plusw2	equ	0xFDB
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _MdmHttp_MainTask *****************
  6925 ;; Defined at:
  6926 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  Options         1    wreg     unsigned char 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  Options         1    0[COMRAM] unsigned char 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:   15
  6947 ;; This function calls:
  6948 ;;		_HttpGetMethod
  6949 ;;		_InitGprsNetwork
  6950 ;; This function is called by:
  6951 ;;		_InitializeTasks
  6952 ;;		_ScheduleTasks
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text21
  6957  005C64                     __ptext21:
  6958                           	opt stack 0
  6959  005C64                     _MdmHttp_MainTask:
  6960                           	opt stack 13
  6961                           
  6962                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6963                           
  6964                           ;incstack = 0
  6965  005C64  D019               	goto	l1288
  6966  005C66                     
  6967                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6968  005C66  0E03               	movlw	3
  6969  005C68  0100               	movlb	0	; () banked
  6970  005C6A  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6971  005C6C  A4D8               	btfss	status,2,c
  6972  005C6E  0012               	return	
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;mdm_gsm_gprs_http.c: 570: {
  6976                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6977  005C70  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6978  005C74  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6979  005C78  C1EF  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6980  005C7C  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6981  005C80  0101               	movlb	1	; () banked
  6982  005C82  6FEE               	movwf	_GprsNetworkSts& (0+255),b
  6983                           
  6984                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6985  005C84  0E9E               	movlw	low _HttpGetDataLocal
  6986  005C86  0100               	movlb	0	; () banked
  6987  005C88  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6988  005C8A  0E03               	movlw	high _HttpGetDataLocal
  6989  005C8C  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6990  005C8E  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6991  005C92  0101               	movlb	1	; () banked
  6992  005C94  6FED               	movwf	_HttpGetMethodSts& (0+255),b
  6993                           
  6994                           ; BSR set to: 1
  6995                           ;mdm_gsm_gprs_http.c: 581: }
  6996                           
  6997                           ; BSR set to: 1
  6998                           ;mdm_gsm_gprs_http.c: 580: break;
  6999                           
  7000                           ;mdm_gsm_gprs_http.c: 579: default:
  7001                           
  7002                           ; BSR set to: 1
  7003                           ;mdm_gsm_gprs_http.c: 575: }
  7004                           ;mdm_gsm_gprs_http.c: 576: break;
  7005  005C96  0012               	return	
  7006  005C98                     l1288:
  7007                           
  7008                           ; BSR set to: 1
  7009  005C98  0100               	movlb	0	; () banked
  7010  005C9A  51D4               	movf	_SystemState& (0+255),w,b
  7011                           
  7012                           ; Switch size 1, requested type "space"
  7013                           ; Number of cases is 2, Range of values is 0 to 1
  7014                           ; switch strategies available:
  7015                           ; Name         Instructions Cycles
  7016                           ; simple_byte            7     4 (average)
  7017                           ;	Chosen strategy is simple_byte
  7018  005C9C  0A00               	xorlw	0	; case 0
  7019  005C9E  B4D8               	btfsc	status,2,c
  7020  005CA0  0012               	return	
  7021  005CA2  0A01               	xorlw	1	; case 1
  7022  005CA4  A4D8               	btfss	status,2,c
  7023  005CA6  0012               	return	
  7024  005CA8  D7DE               	goto	l1291
  7025  005CAA                     __end_of_MdmHttp_MainTask:
  7026                           	opt stack 0
  7027                           tosu	equ	0xFFF
  7028                           tosh	equ	0xFFE
  7029                           tosl	equ	0xFFD
  7030                           pclath	equ	0xFFA
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           intcon2	equ	0xFF1
  7039                           intcon3	equ	0xFF0
  7040                           postinc0	equ	0xFEE
  7041                           plusw0	equ	0xFEB
  7042                           wreg	equ	0xFE8
  7043                           postinc1	equ	0xFE6
  7044                           postdec1	equ	0xFE5
  7045                           fsr1h	equ	0xFE2
  7046                           fsr1l	equ	0xFE1
  7047                           indf2	equ	0xFDF
  7048                           postinc2	equ	0xFDE
  7049                           postdec2	equ	0xFDD
  7050                           plusw2	equ	0xFDB
  7051                           fsr2h	equ	0xFDA
  7052                           fsr2l	equ	0xFD9
  7053                           status	equ	0xFD8
  7054                           
  7055 ;; *************** function _Mdm_MainTask *****************
  7056 ;; Defined at:
  7057 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  Options         1    wreg     unsigned char 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  Options         1    0[COMRAM] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:   15
  7078 ;; This function calls:
  7079 ;;		_CheckModem
  7080 ;;		_ConfigureModem
  7081 ;;		_GetSmsSm
  7082 ;;		_ModemEvtParser
  7083 ;;		_SendSmsSm
  7084 ;;		_TurnOnModem
  7085 ;;		_UartSetConfig
  7086 ;;		_Uart_InitUartModule
  7087 ;; This function is called by:
  7088 ;;		_InitializeTasks
  7089 ;;		_ScheduleTasks
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text22
  7094  0059B4                     __ptext22:
  7095                           	opt stack 0
  7096  0059B4                     _Mdm_MainTask:
  7097                           	opt stack 13
  7098                           
  7099                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7100                           
  7101                           ;incstack = 0
  7102  0059B4  D01E               	goto	l1107
  7103  0059B6                     
  7104                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7105  0059B6  ECDE  F02A         	call	_UartSetConfig	;wreg free
  7106                           
  7107                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7108  0059BA  0E28               	movlw	low _UartConfig
  7109  0059BC  0100               	movlb	0	; () banked
  7110  0059BE  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7111  0059C0  0E03               	movlw	high _UartConfig
  7112  0059C2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7113  0059C4  0E01               	movlw	1
  7114  0059C6  EC5E  F005         	call	_Uart_InitUartModule
  7115                           
  7116                           ;mdm_gsm_gprs.c: 764: break;
  7117  0059CA  0012               	return	
  7118  0059CC                     
  7119                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7120  0059CC  EC3C  F013         	call	_CheckModem	;wreg free
  7121                           
  7122                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7123  0059D0  042A               	decf	_ComChecCompleted,w,c
  7124  0059D2  A4D8               	btfss	status,2,c
  7125  0059D4  D005               	goto	l1111
  7126  0059D6  0100               	movlb	0	; () banked
  7127  0059D8  51D1               	movf	_MdmStatus& (0+255),w,b
  7128  0059DA  B4D8               	btfsc	status,2,c
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;mdm_gsm_gprs.c: 772: {
  7132                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7133  0059DC  EC55  F02E         	call	_TurnOnModem	;wreg free
  7134  0059E0                     l1111:
  7135                           
  7136                           ;mdm_gsm_gprs.c: 775: }
  7137                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7138  0059E0  EC88  F01B         	call	_ConfigureModem	;wreg free
  7139                           
  7140                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7141  0059E4  ECBF  F00F         	call	_ModemEvtParser	;wreg free
  7142                           
  7143                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7144  0059E8  EC70  F016         	call	_GetSmsSm	;wreg free
  7145                           
  7146                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7147  0059EC  EC1F  F00E         	call	_SendSmsSm	;wreg free
  7148                           
  7149                           ;mdm_gsm_gprs.c: 789: }
  7150                           
  7151                           ;mdm_gsm_gprs.c: 788: break;
  7152                           
  7153                           ;mdm_gsm_gprs.c: 787: default:
  7154                           
  7155                           ;mdm_gsm_gprs.c: 784: break;
  7156  0059F0  0012               	return	
  7157  0059F2                     l1107:
  7158  0059F2  0100               	movlb	0	; () banked
  7159  0059F4  51D4               	movf	_SystemState& (0+255),w,b
  7160                           
  7161                           ; Switch size 1, requested type "space"
  7162                           ; Number of cases is 2, Range of values is 0 to 1
  7163                           ; switch strategies available:
  7164                           ; Name         Instructions Cycles
  7165                           ; simple_byte            7     4 (average)
  7166                           ;	Chosen strategy is simple_byte
  7167  0059F6  0A00               	xorlw	0	; case 0
  7168  0059F8  B4D8               	btfsc	status,2,c
  7169  0059FA  D7DD               	goto	l1108
  7170  0059FC  0A01               	xorlw	1	; case 1
  7171  0059FE  A4D8               	btfss	status,2,c
  7172  005A00  0012               	return	
  7173  005A02  D7E4               	goto	l1110
  7174  005A04                     __end_of_Mdm_MainTask:
  7175                           	opt stack 0
  7176                           tosu	equ	0xFFF
  7177                           tosh	equ	0xFFE
  7178                           tosl	equ	0xFFD
  7179                           pclath	equ	0xFFA
  7180                           tblptru	equ	0xFF8
  7181                           tblptrh	equ	0xFF7
  7182                           tblptrl	equ	0xFF6
  7183                           tablat	equ	0xFF5
  7184                           prodh	equ	0xFF4
  7185                           prodl	equ	0xFF3
  7186                           intcon	equ	0xFF2
  7187                           intcon2	equ	0xFF1
  7188                           intcon3	equ	0xFF0
  7189                           postinc0	equ	0xFEE
  7190                           plusw0	equ	0xFEB
  7191                           wreg	equ	0xFE8
  7192                           postinc1	equ	0xFE6
  7193                           postdec1	equ	0xFE5
  7194                           fsr1h	equ	0xFE2
  7195                           fsr1l	equ	0xFE1
  7196                           indf2	equ	0xFDF
  7197                           postinc2	equ	0xFDE
  7198                           postdec2	equ	0xFDD
  7199                           plusw2	equ	0xFDB
  7200                           fsr2h	equ	0xFDA
  7201                           fsr2l	equ	0xFD9
  7202                           status	equ	0xFD8
  7203                           
  7204 ;; *************** function _I2cSlv_MainTask *****************
  7205 ;; Defined at:
  7206 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  Options         1    wreg     unsigned char 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  Options         1    0[COMRAM] unsigned char 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;Total ram usage:        0 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:   14
  7227 ;; This function calls:
  7228 ;;		_I2cSendMsgSm
  7229 ;;		_I2cSetConfig
  7230 ;;		_I2c_InitI2cModule
  7231 ;;		_OsAlrm_SetOsAlarm
  7232 ;; This function is called by:
  7233 ;;		_InitializeTasks
  7234 ;;		_ScheduleTasks
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text23
  7239  00571C                     __ptext23:
  7240                           	opt stack 0
  7241  00571C                     _I2cSlv_MainTask:
  7242                           	opt stack 14
  7243                           
  7244                           ;i2c_slv.c: 217: switch (SystemState)
  7245                           
  7246                           ;incstack = 0
  7247  00571C  D020               	goto	l1401
  7248  00571E                     
  7249                           ;i2c_slv.c: 222: I2cSetConfig();
  7250  00571E  EC27  F031         	call	_I2cSetConfig	;wreg free
  7251                           
  7252                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7253  005722  0E48               	movlw	low _I2cConfig
  7254  005724  0100               	movlb	0	; () banked
  7255  005726  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7256  005728  0E03               	movlw	high _I2cConfig
  7257  00572A  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7258  00572C  ECAF  F028         	call	_I2c_InitI2cModule	;wreg free
  7259                           
  7260                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7261  005730  0E00               	movlw	0
  7262  005732  0100               	movlb	0	; () banked
  7263  005734  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7264  005736  0E00               	movlw	0
  7265  005738  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7266  00573A  0E32               	movlw	50
  7267  00573C  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7268  00573E  0E00               	movlw	0
  7269  005740  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7270  005742  0E00               	movlw	0
  7271  005744  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7272  005746  0E00               	movlw	0
  7273  005748  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7274  00574A  0E56               	movlw	low _I2cDummyTx
  7275  00574C  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7276  00574E  0E65               	movlw	high _I2cDummyTx
  7277  005750  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7278  005752  EC97  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7279                           
  7280                           ;i2c_slv.c: 227: break;
  7281  005756  0012               	return	
  7282  005758                     
  7283                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7284  005758  ECFB  F01F         	call	_I2cSendMsgSm	;wreg free
  7285                           
  7286                           ;i2c_slv.c: 238: }
  7287                           
  7288                           ;i2c_slv.c: 237: break;
  7289                           
  7290                           ;i2c_slv.c: 236: default:
  7291                           
  7292                           ;i2c_slv.c: 233: break;
  7293  00575C  0012               	return	
  7294  00575E                     l1401:
  7295  00575E  0100               	movlb	0	; () banked
  7296  005760  51D4               	movf	_SystemState& (0+255),w,b
  7297                           
  7298                           ; Switch size 1, requested type "space"
  7299                           ; Number of cases is 2, Range of values is 0 to 1
  7300                           ; switch strategies available:
  7301                           ; Name         Instructions Cycles
  7302                           ; simple_byte            7     4 (average)
  7303                           ;	Chosen strategy is simple_byte
  7304  005762  0A00               	xorlw	0	; case 0
  7305  005764  B4D8               	btfsc	status,2,c
  7306  005766  D7DB               	goto	l1402
  7307  005768  0A01               	xorlw	1	; case 1
  7308  00576A  A4D8               	btfss	status,2,c
  7309  00576C  0012               	return	
  7310  00576E  D7F4               	goto	l1404
  7311  005770                     __end_of_I2cSlv_MainTask:
  7312                           	opt stack 0
  7313                           tosu	equ	0xFFF
  7314                           tosh	equ	0xFFE
  7315                           tosl	equ	0xFFD
  7316                           pclath	equ	0xFFA
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           intcon2	equ	0xFF1
  7325                           intcon3	equ	0xFF0
  7326                           postinc0	equ	0xFEE
  7327                           plusw0	equ	0xFEB
  7328                           wreg	equ	0xFE8
  7329                           postinc1	equ	0xFE6
  7330                           postdec1	equ	0xFE5
  7331                           fsr1h	equ	0xFE2
  7332                           fsr1l	equ	0xFE1
  7333                           indf2	equ	0xFDF
  7334                           postinc2	equ	0xFDE
  7335                           postdec2	equ	0xFDD
  7336                           plusw2	equ	0xFDB
  7337                           fsr2h	equ	0xFDA
  7338                           fsr2l	equ	0xFD9
  7339                           status	equ	0xFD8
  7340                           
  7341 ;; *************** function _Mdm_DrvMainFn *****************
  7342 ;; Defined at:
  7343 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  Options         1    wreg     unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  Options         1    0[COMRAM] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  1    wreg      void 
  7350 ;; Registers used:
  7351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;Total ram usage:        0 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:   13
  7364 ;; This function calls:
  7365 ;;		_MdmCntSm
  7366 ;; This function is called by:
  7367 ;;		_InitializeTasks
  7368 ;;		_ScheduleTasks
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text24
  7373  006788                     __ptext24:
  7374                           	opt stack 0
  7375  006788                     _Mdm_DrvMainFn:
  7376                           	opt stack 15
  7377                           
  7378                           ;mdm_drv.c: 307: MdmCntSm();
  7379                           
  7380                           ;incstack = 0
  7381  006788  EC79  F022         	call	_MdmCntSm	;wreg free
  7382  00678C  0012               	return		;funcret
  7383  00678E                     __end_of_Mdm_DrvMainFn:
  7384                           	opt stack 0
  7385                           tosu	equ	0xFFF
  7386                           tosh	equ	0xFFE
  7387                           tosl	equ	0xFFD
  7388                           pclath	equ	0xFFA
  7389                           tblptru	equ	0xFF8
  7390                           tblptrh	equ	0xFF7
  7391                           tblptrl	equ	0xFF6
  7392                           tablat	equ	0xFF5
  7393                           prodh	equ	0xFF4
  7394                           prodl	equ	0xFF3
  7395                           intcon	equ	0xFF2
  7396                           intcon2	equ	0xFF1
  7397                           intcon3	equ	0xFF0
  7398                           postinc0	equ	0xFEE
  7399                           plusw0	equ	0xFEB
  7400                           wreg	equ	0xFE8
  7401                           postinc1	equ	0xFE6
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           plusw2	equ	0xFDB
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _Wdg_MainTask *****************
  7414 ;; Defined at:
  7415 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  Options         1    wreg     unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  Options         1    0[COMRAM] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:   12
  7436 ;; This function calls:
  7437 ;;		_Mcu_ClearWdg
  7438 ;;		_Mcu_SetWdgSts
  7439 ;; This function is called by:
  7440 ;;		_InitializeTasks
  7441 ;;		_ScheduleTasks
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text25
  7446  0063D2                     __ptext25:
  7447                           	opt stack 0
  7448  0063D2                     _Wdg_MainTask:
  7449                           	opt stack 16
  7450                           
  7451                           ;wdg.c: 75: switch (SystemState)
  7452                           
  7453                           ;incstack = 0
  7454  0063D2  D007               	goto	l2498
  7455  0063D4                     
  7456                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7457  0063D4  0E01               	movlw	1
  7458  0063D6  EC47  F033         	call	_Mcu_SetWdgSts
  7459                           
  7460                           ;wdg.c: 81: break;
  7461  0063DA  0012               	return	
  7462  0063DC                     
  7463                           ;wdg.c: 86: Mcu_ClearWdg();
  7464  0063DC  ECC7  F033         	call	_Mcu_ClearWdg	;wreg free
  7465                           
  7466                           ;wdg.c: 92: }
  7467                           
  7468                           ;wdg.c: 91: break;
  7469                           
  7470                           ;wdg.c: 90: default:
  7471                           
  7472                           ;wdg.c: 87: break;
  7473  0063E0  0012               	return	
  7474  0063E2                     l2498:
  7475  0063E2  0100               	movlb	0	; () banked
  7476  0063E4  51D4               	movf	_SystemState& (0+255),w,b
  7477                           
  7478                           ; Switch size 1, requested type "space"
  7479                           ; Number of cases is 2, Range of values is 0 to 1
  7480                           ; switch strategies available:
  7481                           ; Name         Instructions Cycles
  7482                           ; simple_byte            7     4 (average)
  7483                           ;	Chosen strategy is simple_byte
  7484  0063E6  0A00               	xorlw	0	; case 0
  7485  0063E8  B4D8               	btfsc	status,2,c
  7486  0063EA  D7F4               	goto	l2499
  7487  0063EC  0A01               	xorlw	1	; case 1
  7488  0063EE  A4D8               	btfss	status,2,c
  7489  0063F0  0012               	return	
  7490  0063F2  D7F4               	goto	l2501
  7491  0063F4                     __end_of_Wdg_MainTask:
  7492                           	opt stack 0
  7493                           tosu	equ	0xFFF
  7494                           tosh	equ	0xFFE
  7495                           tosl	equ	0xFFD
  7496                           pclath	equ	0xFFA
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           intcon2	equ	0xFF1
  7505                           intcon3	equ	0xFF0
  7506                           postinc0	equ	0xFEE
  7507                           plusw0	equ	0xFEB
  7508                           wreg	equ	0xFE8
  7509                           postinc1	equ	0xFE6
  7510                           postdec1	equ	0xFE5
  7511                           fsr1h	equ	0xFE2
  7512                           fsr1l	equ	0xFE1
  7513                           indf2	equ	0xFDF
  7514                           postinc2	equ	0xFDE
  7515                           postdec2	equ	0xFDD
  7516                           plusw2	equ	0xFDB
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function _Mcu_SetWdgSts *****************
  7522 ;; Defined at:
  7523 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  WdgSts          1    wreg     unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;Total ram usage:        1 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:   11
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_Wdg_MainTask
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text26
  7552  00668E                     __ptext26:
  7553                           	opt stack 0
  7554  00668E                     _Mcu_SetWdgSts:
  7555                           	opt stack 16
  7556                           
  7557                           ;incstack = 0
  7558                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7559  00668E  0100               	movlb	0	; () banked
  7560  006690  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7561                           
  7562                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7563  006692  0100               	movlb	0	; () banked
  7564  006694  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7565  006696  D002               	bra	u14005
  7566  006698  90C0               	bcf	4032,0,c	;volatile
  7567  00669A  D001               	bra	u14006
  7568  00669C                     u14005:
  7569  00669C  80C0               	bsf	4032,0,c	;volatile
  7570  00669E                     u14006:
  7571  00669E  0012               	return		;funcret
  7572  0066A0                     __end_of_Mcu_SetWdgSts:
  7573                           	opt stack 0
  7574                           tosu	equ	0xFFF
  7575                           tosh	equ	0xFFE
  7576                           tosl	equ	0xFFD
  7577                           pclath	equ	0xFFA
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           prodh	equ	0xFF4
  7583                           prodl	equ	0xFF3
  7584                           intcon	equ	0xFF2
  7585                           intcon2	equ	0xFF1
  7586                           intcon3	equ	0xFF0
  7587                           postinc0	equ	0xFEE
  7588                           plusw0	equ	0xFEB
  7589                           wreg	equ	0xFE8
  7590                           postinc1	equ	0xFE6
  7591                           postdec1	equ	0xFE5
  7592                           fsr1h	equ	0xFE2
  7593                           fsr1l	equ	0xFE1
  7594                           indf2	equ	0xFDF
  7595                           postinc2	equ	0xFDE
  7596                           postdec2	equ	0xFDD
  7597                           plusw2	equ	0xFDB
  7598                           fsr2h	equ	0xFDA
  7599                           fsr2l	equ	0xFD9
  7600                           status	equ	0xFD8
  7601                           
  7602 ;; *************** function _Mcu_ClearWdg *****************
  7603 ;; Defined at:
  7604 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		None
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;Total ram usage:        0 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:   11
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_Wdg_MainTask
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text27
  7633  00678E                     __ptext27:
  7634                           	opt stack 0
  7635  00678E                     _Mcu_ClearWdg:
  7636                           	opt stack 16
  7637                           
  7638                           ;incstack = 0
  7639  00678E  0004               	clrwdt		;# 
  7640  006790  0012               	return		;funcret
  7641  006792                     __end_of_Mcu_ClearWdg:
  7642                           	opt stack 0
  7643                           tosu	equ	0xFFF
  7644                           tosh	equ	0xFFE
  7645                           tosl	equ	0xFFD
  7646                           pclath	equ	0xFFA
  7647                           tblptru	equ	0xFF8
  7648                           tblptrh	equ	0xFF7
  7649                           tblptrl	equ	0xFF6
  7650                           tablat	equ	0xFF5
  7651                           prodh	equ	0xFF4
  7652                           prodl	equ	0xFF3
  7653                           intcon	equ	0xFF2
  7654                           intcon2	equ	0xFF1
  7655                           intcon3	equ	0xFF0
  7656                           postinc0	equ	0xFEE
  7657                           plusw0	equ	0xFEB
  7658                           wreg	equ	0xFE8
  7659                           postinc1	equ	0xFE6
  7660                           postdec1	equ	0xFE5
  7661                           fsr1h	equ	0xFE2
  7662                           fsr1l	equ	0xFE1
  7663                           indf2	equ	0xFDF
  7664                           postinc2	equ	0xFDE
  7665                           postdec2	equ	0xFDD
  7666                           plusw2	equ	0xFDB
  7667                           fsr2h	equ	0xFDA
  7668                           fsr2l	equ	0xFD9
  7669                           status	equ	0xFD8
  7670                           
  7671 ;; *************** function _USBDeviceTasks *****************
  7672 ;; Defined at:
  7673 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  i               1   56[BANK0 ] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;Total ram usage:        1 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:   19
  7694 ;; This function calls:
  7695 ;;		_USBCtrlEPAllowStatusStage
  7696 ;;		_USBCtrlEPService
  7697 ;;		_USBDeviceInit
  7698 ;;		_USBIncrement1msInternalTimers
  7699 ;;		_USBStallHandler
  7700 ;;		_USBSuspend
  7701 ;;		_USBWakeFromSuspend
  7702 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7703 ;; This function is called by:
  7704 ;;		_UsbDevice_MainTask
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text28
  7709  001DF6                     __ptext28:
  7710                           	opt stack 0
  7711  001DF6                     _USBDeviceTasks:
  7712                           	opt stack 8
  7713                           
  7714                           ;usb_device.c: 562: }
  7715                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7716                           
  7717                           ; BSR set to: 0
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;usb_device.c: 561: return;
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7724                           
  7725                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7726                           
  7727                           ;usb_device.c: 529: UIE = 0;
  7728                           
  7729                           ;usb_device.c: 524: {
  7730                           ;usb_device.c: 526: UCON = 0;
  7731                           
  7732                           ;usb_device.c: 497: uint8_t i;
  7733                           ;usb_device.c: 523: if (1 != 1)
  7734                           
  7735                           ;incstack = 0
  7736  001DF6  0100               	movlb	0	; () banked
  7737  001DF8  51CD               	movf	_USBDeviceState& (0+255),w,b
  7738  001DFA  A4D8               	btfss	status,2,c
  7739  001DFC  D012               	goto	l1612
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;usb_device.c: 585: {
  7743                           ;usb_device.c: 587: UCON = 0;
  7744  001DFE  0E00               	movlw	0
  7745  001E00  6E65               	movwf	3941,c	;volatile
  7746                           
  7747                           ;usb_device.c: 590: UIE = 0;
  7748  001E02  0E00               	movlw	0
  7749  001E04  010F               	movlb	15	; () banked
  7750  001E06  6F36               	movwf	54,b	;volatile
  7751                           
  7752                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7753  001E08  0E16               	movlw	22
  7754  001E0A  6F39               	movwf	57,b	;volatile
  7755  001E0C  0E9F               	movlw	159
  7756  001E0E  6F37               	movwf	55,b	;volatile
  7757  001E10  0E7B               	movlw	123
  7758  001E12  6F36               	movwf	54,b	;volatile
  7759                           
  7760                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7761  001E14  D001               	goto	l1613
  7762  001E16                     l1614:
  7763  001E16  8665               	bsf	3941,3,c	;volatile
  7764  001E18                     l1613:
  7765  001E18  A665               	btfss	3941,3,c	;volatile
  7766  001E1A  D7FD               	goto	l1614
  7767                           
  7768                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7769  001E1C  0E01               	movlw	1
  7770  001E1E  0100               	movlb	0	; () banked
  7771  001E20  6FCD               	movwf	_USBDeviceState& (0+255),b
  7772  001E22                     l1612:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;usb_device.c: 605: }
  7776                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7777                           
  7778                           ; BSR set to: 0
  7779  001E22  05CD               	decf	_USBDeviceState& (0+255),w,b
  7780  001E24  B4D8               	btfsc	status,2,c
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;usb_device.c: 609: {
  7784                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7785  001E26  BA65               	btfsc	3941,5,c	;volatile
  7786  001E28  D00A               	goto	l1617
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;usb_device.c: 620: {
  7790                           ;usb_device.c: 626: {UIR = 0;};
  7791  001E2A  0E00               	movlw	0
  7792  001E2C  6E62               	movwf	3938,c	;volatile
  7793                           
  7794                           ;usb_device.c: 630: UIE=0;
  7795  001E2E  0E00               	movlw	0
  7796  001E30  010F               	movlb	15	; () banked
  7797  001E32  6F36               	movwf	54,b	;volatile
  7798                           
  7799                           ; BSR set to: 15
  7800                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7801  001E34  8136               	bsf	54,0,b	;volatile
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7805  001E36  8936               	bsf	54,4,b	;volatile
  7806                           
  7807                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7808  001E38  0E02               	movlw	2
  7809  001E3A  0100               	movlb	0	; () banked
  7810  001E3C  6FCD               	movwf	_USBDeviceState& (0+255),b
  7811  001E3E                     l1617:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;usb_device.c: 635: }
  7815                           ;usb_device.c: 636: }
  7816                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7817                           
  7818                           ; BSR set to: 0
  7819                           
  7820                           ; BSR set to: 0
  7821  001E3E  A462               	btfss	3938,2,c	;volatile
  7822  001E40  D006               	goto	l1618
  7823                           
  7824                           ; BSR set to: 0
  7825  001E42  010F               	movlb	15	; () banked
  7826  001E44  A536               	btfss	54,2,b	;volatile
  7827  001E46  D003               	goto	l1618
  7828                           
  7829                           ; BSR set to: 15
  7830                           ;usb_device.c: 653: {
  7831                           ;usb_device.c: 654: (UIR &= 0xFB);
  7832  001E48  9462               	bcf	3938,2,c	;volatile
  7833                           
  7834                           ; BSR set to: 15
  7835                           ;usb_device.c: 658: USBWakeFromSuspend();
  7836  001E4A  ECDD  F02F         	call	_USBWakeFromSuspend	;wreg free
  7837  001E4E                     l1618:
  7838                           
  7839                           ;usb_device.c: 660: }
  7840                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7841  001E4E  A265               	btfss	3941,1,c	;volatile
  7842  001E50  D002               	goto	l1619
  7843                           
  7844                           ;usb_device.c: 666: {
  7845                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7846  001E52  98A1               	bcf	4001,4,c	;volatile
  7847                           
  7848                           ;usb_device.c: 668: return;
  7849  001E54  0012               	return	
  7850  001E56                     l1619:
  7851                           
  7852                           ;usb_device.c: 669: }
  7853                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7854  001E56  A062               	btfss	3938,0,c	;volatile
  7855  001E58  D009               	goto	l1620
  7856  001E5A  010F               	movlb	15	; () banked
  7857  001E5C  A136               	btfss	54,0,b	;volatile
  7858  001E5E  D006               	goto	l1620
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;usb_device.c: 682: {
  7862                           ;usb_device.c: 683: USBDeviceInit();
  7863  001E60  ECE6  F011         	call	_USBDeviceInit	;wreg free
  7864                           
  7865                           ;usb_device.c: 687: ;
  7866                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7867  001E64  0E04               	movlw	4
  7868  001E66  0100               	movlb	0	; () banked
  7869  001E68  6FCD               	movwf	_USBDeviceState& (0+255),b
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;usb_device.c: 699: (UIR &= 0xFE);
  7873  001E6A  9062               	bcf	3938,0,c	;volatile
  7874  001E6C                     l1620:
  7875                           
  7876                           ;usb_device.c: 700: }
  7877                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7878                           
  7879                           ; BSR set to: 0
  7880  001E6C  A862               	btfss	3938,4,c	;volatile
  7881  001E6E  D004               	goto	l1621
  7882  001E70  010F               	movlb	15	; () banked
  7883  001E72  B936               	btfsc	54,4,b	;volatile
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;usb_device.c: 706: {
  7887                           ;usb_device.c: 712: USBSuspend();
  7888  001E74  EC67  F030         	call	_USBSuspend	;wreg free
  7889  001E78                     l1621:
  7890                           
  7891                           ;usb_device.c: 714: }
  7892                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7893  001E78  AC62               	btfss	3938,6,c	;volatile
  7894  001E7A  D01D               	goto	l1625
  7895                           
  7896                           ;usb_device.c: 727: {
  7897                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7898  001E7C  010F               	movlb	15	; () banked
  7899  001E7E  AD36               	btfss	54,6,b	;volatile
  7900  001E80  D00F               	goto	l1623
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;usb_device.c: 730: {
  7904                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7905  001E82  0E00               	movlw	0
  7906  001E84  0100               	movlb	0	; () banked
  7907  001E86  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7908  001E88  0E73               	movlw	115
  7909  001E8A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7910  001E8C  0E00               	movlw	0
  7911  001E8E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7912  001E90  0E00               	movlw	0
  7913  001E92  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7914  001E94  0E00               	movlw	0
  7915  001E96  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7916  001E98  0E01               	movlw	1
  7917  001E9A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7918  001E9C  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7919  001EA0                     l1623:
  7920                           
  7921                           ;usb_device.c: 732: }
  7922                           ;usb_device.c: 733: (UIR &= 0xBF);
  7923  001EA0  9C62               	bcf	3938,6,c	;volatile
  7924                           
  7925                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7926  001EA2  ECFA  F031         	call	_USBIncrement1msInternalTimers	;wreg free
  7927                           
  7928                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7929  001EA6  0100               	movlb	0	; () banked
  7930  001EA8  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7931  001EAA  A4D8               	btfss	status,2,c
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;usb_device.c: 754: {
  7935                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7936  001EAC  07C9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;usb_device.c: 756: }
  7940                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7941                           
  7942                           ; BSR set to: 0
  7943  001EAE  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7944  001EB0  B4D8               	btfsc	status,2,c
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;usb_device.c: 763: {
  7948                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7949  001EB2  EC04  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7950  001EB6                     l1625:
  7951                           
  7952                           ;usb_device.c: 765: }
  7953                           ;usb_device.c: 767: }
  7954                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7955  001EB6  AA62               	btfss	3938,5,c	;volatile
  7956  001EB8  D004               	goto	l1626
  7957  001EBA  010F               	movlb	15	; () banked
  7958  001EBC  BB36               	btfsc	54,5,b	;volatile
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;usb_device.c: 770: {
  7962                           ;usb_device.c: 771: USBStallHandler();
  7963  001EBE  EC78  F02E         	call	_USBStallHandler	;wreg free
  7964  001EC2                     l1626:
  7965                           
  7966                           ;usb_device.c: 772: }
  7967                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7968  001EC2  A262               	btfss	3938,1,c	;volatile
  7969  001EC4  D013               	goto	l1627
  7970  001EC6  010F               	movlb	15	; () banked
  7971  001EC8  A336               	btfss	54,1,b	;volatile
  7972  001ECA  D010               	goto	l1627
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;usb_device.c: 775: {
  7976                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7977  001ECC  0E7F               	movlw	127
  7978  001ECE  0100               	movlb	0	; () banked
  7979  001ED0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7980  001ED2  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7981  001ED4  0E00               	movlw	0
  7982  001ED6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7983  001ED8  0E00               	movlw	0
  7984  001EDA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7985  001EDC  0E00               	movlw	0
  7986  001EDE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7987  001EE0  0E01               	movlw	1
  7988  001EE2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7989  001EE4  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7990                           
  7991                           ;usb_device.c: 777: {UEIR = 0;};
  7992  001EE8  0E00               	movlw	0
  7993  001EEA  6E63               	movwf	3939,c	;volatile
  7994  001EEC                     l1627:
  7995                           
  7996                           ;usb_device.c: 785: }
  7997                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7998  001EEC  0E04               	movlw	4
  7999  001EEE  0100               	movlb	0	; () banked
  8000  001EF0  61CD               	cpfslt	_USBDeviceState& (0+255),b
  8001  001EF2  D002               	goto	l1628
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;usb_device.c: 793: {
  8005                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8006  001EF4  98A1               	bcf	4001,4,c	;volatile
  8007                           
  8008                           ;usb_device.c: 795: return;
  8009  001EF6  0012               	return	
  8010  001EF8                     l1628:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;usb_device.c: 796: }
  8014                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8015  001EF8  010F               	movlb	15	; () banked
  8016  001EFA  A736               	btfss	54,3,b	;volatile
  8017  001EFC  D03E               	goto	u14990
  8018                           
  8019                           ; BSR set to: 15
  8020                           ;usb_device.c: 802: {
  8021                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8022  001EFE  0E00               	movlw	0
  8023  001F00  0100               	movlb	0	; () banked
  8024  001F02  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8025  001F04                     l15392:
  8026                           
  8027                           ; BSR set to: 0
  8028  001F04  0E03               	movlw	3
  8029  001F06  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8030  001F08  D001               	goto	l1630
  8031  001F0A  D037               	goto	u14990
  8032  001F0C                     l1630:
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;usb_device.c: 804: {
  8036                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8037  001F0C  A662               	btfss	3938,3,c	;volatile
  8038  001F0E  D035               	goto	u14990
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;usb_device.c: 806: {
  8042                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8043  001F10  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8047  001F14  31D5               	rrcf	_USTATcopy& (0+255),w,b
  8048  001F16  32E8               	rrcf	wreg,f,c
  8049  001F18  32E8               	rrcf	wreg,f,c
  8050  001F1A  0B0F               	andlw	15
  8051  001F1C  6FCA               	movwf	_endpoint_number& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;usb_device.c: 811: (UIR &= 0xF7);
  8055  001F1E  9662               	bcf	3938,3,c	;volatile
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8059  001F20  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  8060  001F22  D007               	goto	l1633
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;usb_device.c: 817: {
  8064                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8065  001F24  51CA               	movf	_endpoint_number& (0+255),w,b
  8066  001F26  0D01               	mullw	1
  8067  001F28  0ECF               	movlw	low _ep_data_out
  8068  001F2A  24F3               	addwf	prodl,w,c
  8069  001F2C  6ED9               	movwf	fsr2l,c
  8070  001F2E  0E02               	movlw	high _ep_data_out
  8071  001F30  D007               	goto	L3
  8072  001F32                     l1633:
  8073                           
  8074                           ;usb_device.c: 820: else
  8075                           ;usb_device.c: 821: {
  8076                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8077                           
  8078                           ; BSR set to: 2
  8079  001F32  0100               	movlb	0	; () banked
  8080  001F34  51CA               	movf	_endpoint_number& (0+255),w,b
  8081  001F36  0D01               	mullw	1
  8082  001F38  0ED2               	movlw	low _ep_data_in
  8083  001F3A  24F3               	addwf	prodl,w,c
  8084  001F3C  6ED9               	movwf	fsr2l,c
  8085  001F3E  0E02               	movlw	high _ep_data_in
  8086  001F40                     L3:
  8087  001F40  20F4               	addwfc	prodh,w,c
  8088  001F42  6EDA               	movwf	fsr2h,c
  8089  001F44  0102               	movlb	2	; () banked
  8090  001F46  70DF               	btg	indf2,0,c
  8091                           
  8092                           ; BSR set to: 2
  8093                           ;usb_device.c: 823: }
  8094                           ;usb_device.c: 828: if(endpoint_number == 0)
  8095                           
  8096                           ; BSR set to: 2
  8097  001F48  0100               	movlb	0	; () banked
  8098  001F4A  51CA               	movf	_endpoint_number& (0+255),w,b
  8099  001F4C  A4D8               	btfss	status,2,c
  8100  001F4E  D003               	goto	l1635
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;usb_device.c: 829: {
  8104                           ;usb_device.c: 830: USBCtrlEPService();
  8105  001F50  ECF3  F024         	call	_USBCtrlEPService	;wreg free
  8106                           
  8107                           ;usb_device.c: 831: }
  8108  001F54  D00F               	goto	l1637
  8109  001F56                     l1635:
  8110                           
  8111                           ;usb_device.c: 832: else
  8112                           ;usb_device.c: 833: {
  8113                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8114  001F56  0E00               	movlw	0
  8115  001F58  0100               	movlb	0	; () banked
  8116  001F5A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8117  001F5C  0E72               	movlw	114
  8118  001F5E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8119  001F60  0ED5               	movlw	low _USTATcopy
  8120  001F62  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8121  001F64  0E00               	movlw	high _USTATcopy
  8122  001F66  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8123  001F68  0E00               	movlw	0
  8124  001F6A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8125  001F6C  0E00               	movlw	0
  8126  001F6E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8127  001F70  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8128  001F74                     l1637:
  8129  001F74  0100               	movlb	0	; () banked
  8130  001F76  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8131  001F78  D7C5               	goto	l15392
  8132  001F7A                     u14990:
  8133                           
  8134                           ;usb_device.c: 840: }
  8135                           ;usb_device.c: 841: }
  8136                           ;usb_device.c: 842: }
  8137                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8138                           
  8139                           ; BSR set to: 0
  8140  001F7A  98A1               	bcf	4001,4,c	;volatile
  8141  001F7C  0012               	return		;funcret
  8142  001F7E                     __end_of_USBDeviceTasks:
  8143                           	opt stack 0
  8144                           tosu	equ	0xFFF
  8145                           tosh	equ	0xFFE
  8146                           tosl	equ	0xFFD
  8147                           pclath	equ	0xFFA
  8148                           tblptru	equ	0xFF8
  8149                           tblptrh	equ	0xFF7
  8150                           tblptrl	equ	0xFF6
  8151                           tablat	equ	0xFF5
  8152                           prodh	equ	0xFF4
  8153                           prodl	equ	0xFF3
  8154                           intcon	equ	0xFF2
  8155                           intcon2	equ	0xFF1
  8156                           intcon3	equ	0xFF0
  8157                           postinc0	equ	0xFEE
  8158                           plusw0	equ	0xFEB
  8159                           wreg	equ	0xFE8
  8160                           postinc1	equ	0xFE6
  8161                           postdec1	equ	0xFE5
  8162                           fsr1h	equ	0xFE2
  8163                           fsr1l	equ	0xFE1
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           plusw2	equ	0xFDB
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _USBWakeFromSuspend *****************
  8173 ;; Defined at:
  8174 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   15
  8195 ;; This function calls:
  8196 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8197 ;; This function is called by:
  8198 ;;		_USBDeviceTasks
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text29
  8203  005FBA                     __ptext29:
  8204                           	opt stack 0
  8205  005FBA                     _USBWakeFromSuspend:
  8206                           	opt stack 11
  8207                           
  8208                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8209                           
  8210                           ;incstack = 0
  8211  005FBA  0E00               	movlw	0
  8212  005FBC  0101               	movlb	1	; () banked
  8213  005FBE  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8217  005FC0  0E00               	movlw	0
  8218  005FC2  0100               	movlb	0	; () banked
  8219  005FC4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8220  005FC6  0E74               	movlw	116
  8221  005FC8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8222  005FCA  0E00               	movlw	0
  8223  005FCC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8224  005FCE  0E00               	movlw	0
  8225  005FD0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8226  005FD2  0E00               	movlw	0
  8227  005FD4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8228  005FD6  0E00               	movlw	0
  8229  005FD8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8230  005FDA  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8231                           
  8232                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8233  005FDE  9265               	bcf	3941,1,c	;volatile
  8234                           
  8235                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8236  005FE0  010F               	movlb	15	; () banked
  8237  005FE2  9536               	bcf	54,2,b	;volatile
  8238                           
  8239                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8240  005FE4  D001               	goto	l1765
  8241  005FE6                     
  8242                           ;usb_device.c: 2361: {
  8243                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8244                           
  8245                           ; BSR set to: 15
  8246  005FE6  9462               	bcf	3938,2,c	;volatile
  8247  005FE8                     l1765:
  8248  005FE8  B462               	btfsc	3938,2,c	;volatile
  8249  005FEA  D7FD               	goto	l1766
  8250                           
  8251                           ;usb_device.c: 2363: }
  8252                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8253  005FEC  0E00               	movlw	0
  8254  005FEE  0101               	movlb	1	; () banked
  8255  005FF0  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8256                           
  8257                           ; BSR set to: 1
  8258  005FF2  0012               	return		;funcret
  8259  005FF4                     __end_of_USBWakeFromSuspend:
  8260                           	opt stack 0
  8261                           tosu	equ	0xFFF
  8262                           tosh	equ	0xFFE
  8263                           tosl	equ	0xFFD
  8264                           pclath	equ	0xFFA
  8265                           tblptru	equ	0xFF8
  8266                           tblptrh	equ	0xFF7
  8267                           tblptrl	equ	0xFF6
  8268                           tablat	equ	0xFF5
  8269                           prodh	equ	0xFF4
  8270                           prodl	equ	0xFF3
  8271                           intcon	equ	0xFF2
  8272                           intcon2	equ	0xFF1
  8273                           intcon3	equ	0xFF0
  8274                           postinc0	equ	0xFEE
  8275                           plusw0	equ	0xFEB
  8276                           wreg	equ	0xFE8
  8277                           postinc1	equ	0xFE6
  8278                           postdec1	equ	0xFE5
  8279                           fsr1h	equ	0xFE2
  8280                           fsr1l	equ	0xFE1
  8281                           indf2	equ	0xFDF
  8282                           postinc2	equ	0xFDE
  8283                           postdec2	equ	0xFDD
  8284                           plusw2	equ	0xFDB
  8285                           fsr2h	equ	0xFDA
  8286                           fsr2l	equ	0xFD9
  8287                           status	equ	0xFD8
  8288                           
  8289 ;; *************** function _USBSuspend *****************
  8290 ;; Defined at:
  8291 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:   15
  8312 ;; This function calls:
  8313 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8314 ;; This function is called by:
  8315 ;;		_USBDeviceTasks
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text30
  8320  0060CE                     __ptext30:
  8321                           	opt stack 0
  8322  0060CE                     _USBSuspend:
  8323                           	opt stack 11
  8324                           
  8325                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8326                           
  8327                           ; BSR set to: 1
  8328                           ;incstack = 0
  8329  0060CE  010F               	movlb	15	; () banked
  8330  0060D0  8536               	bsf	54,2,b	;volatile
  8331                           
  8332                           ; BSR set to: 15
  8333                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8334  0060D2  9862               	bcf	3938,4,c	;volatile
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8338  0060D4  8265               	bsf	3941,1,c	;volatile
  8339                           
  8340                           ; BSR set to: 15
  8341                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8342  0060D6  0E01               	movlw	1
  8343  0060D8  0101               	movlb	1	; () banked
  8344  0060DA  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8345                           
  8346                           ; BSR set to: 1
  8347                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8348  0060DC  0E00               	movlw	0
  8349  0060DE  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8353  0060E0  0E00               	movlw	0
  8354  0060E2  0100               	movlb	0	; () banked
  8355  0060E4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8356  0060E6  0E75               	movlw	117
  8357  0060E8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8358  0060EA  0E00               	movlw	0
  8359  0060EC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8360  0060EE  0E00               	movlw	0
  8361  0060F0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8362  0060F2  0E00               	movlw	0
  8363  0060F4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8364  0060F6  0E00               	movlw	0
  8365  0060F8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8366  0060FA  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8367  0060FE  0012               	return		;funcret
  8368  006100                     __end_of_USBSuspend:
  8369                           	opt stack 0
  8370                           tosu	equ	0xFFF
  8371                           tosh	equ	0xFFE
  8372                           tosl	equ	0xFFD
  8373                           pclath	equ	0xFFA
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           intcon2	equ	0xFF1
  8382                           intcon3	equ	0xFF0
  8383                           postinc0	equ	0xFEE
  8384                           plusw0	equ	0xFEB
  8385                           wreg	equ	0xFE8
  8386                           postinc1	equ	0xFE6
  8387                           postdec1	equ	0xFE5
  8388                           fsr1h	equ	0xFE2
  8389                           fsr1l	equ	0xFE1
  8390                           indf2	equ	0xFDF
  8391                           postinc2	equ	0xFDE
  8392                           postdec2	equ	0xFDD
  8393                           plusw2	equ	0xFDB
  8394                           fsr2h	equ	0xFDA
  8395                           fsr2l	equ	0xFD9
  8396                           status	equ	0xFD8
  8397                           
  8398 ;; *************** function _USBStallHandler *****************
  8399 ;; Defined at:
  8400 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8416 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8418 ;;Total ram usage:        1 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:   11
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_USBDeviceTasks
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text31
  8429  005CF0                     __ptext31:
  8430                           	opt stack 0
  8431  005CF0                     _USBStallHandler:
  8432                           	opt stack 15
  8433                           
  8434                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8435                           
  8436                           ;incstack = 0
  8437  005CF0  010F               	movlb	15	; () banked
  8438  005CF2  A126               	btfss	38,0,b	;volatile
  8439  005CF4  D01D               	goto	l1757
  8440                           
  8441                           ; BSR set to: 15
  8442                           ;usb_device.c: 2233: {
  8443                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8444  005CF6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8445  005CFA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8446  005CFE  0E80               	movlw	128
  8447  005D00  18DE               	xorwf	postinc2,w,c
  8448  005D02  A4D8               	btfss	status,2,c
  8449  005D04  D014               	goto	l1758
  8450                           
  8451                           ; BSR set to: 15
  8452  005D06  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8453  005D0A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8454  005D0E  0E84               	movlw	132
  8455  005D10  18DE               	xorwf	postinc2,w,c
  8456  005D12  A4D8               	btfss	status,2,c
  8457  005D14  D00C               	goto	l1758
  8458                           
  8459                           ; BSR set to: 15
  8460                           ;usb_device.c: 2236: {
  8461                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8462  005D16  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8463  005D1A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8464  005D1E  0E0C               	movlw	12
  8465  005D20  6EDF               	movwf	indf2,c
  8466                           
  8467                           ; BSR set to: 15
  8468                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8469  005D22  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8470  005D26  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8471  005D2A  0E00               	movlw	0
  8472  005D2C  8EDB               	bsf	plusw2,7,c
  8473  005D2E                     l1758:
  8474                           
  8475                           ; BSR set to: 15
  8476                           ;usb_device.c: 2240: }
  8477                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8478                           
  8479                           ; BSR set to: 15
  8480  005D2E  9126               	bcf	38,0,b	;volatile
  8481  005D30                     l1757:
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;usb_device.c: 2242: }
  8485                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8486  005D30  9A62               	bcf	3938,5,c	;volatile
  8487                           
  8488                           ; BSR set to: 15
  8489  005D32  0012               	return		;funcret
  8490  005D34                     __end_of_USBStallHandler:
  8491                           	opt stack 0
  8492                           tosu	equ	0xFFF
  8493                           tosh	equ	0xFFE
  8494                           tosl	equ	0xFFD
  8495                           pclath	equ	0xFFA
  8496                           tblptru	equ	0xFF8
  8497                           tblptrh	equ	0xFF7
  8498                           tblptrl	equ	0xFF6
  8499                           tablat	equ	0xFF5
  8500                           prodh	equ	0xFF4
  8501                           prodl	equ	0xFF3
  8502                           intcon	equ	0xFF2
  8503                           intcon2	equ	0xFF1
  8504                           intcon3	equ	0xFF0
  8505                           postinc0	equ	0xFEE
  8506                           plusw0	equ	0xFEB
  8507                           wreg	equ	0xFE8
  8508                           postinc1	equ	0xFE6
  8509                           postdec1	equ	0xFE5
  8510                           fsr1h	equ	0xFE2
  8511                           fsr1l	equ	0xFE1
  8512                           indf2	equ	0xFDF
  8513                           postinc2	equ	0xFDE
  8514                           postdec2	equ	0xFDD
  8515                           plusw2	equ	0xFDB
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _USBIncrement1msInternalTimers *****************
  8521 ;; Defined at:
  8522 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;		None
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8540 ;;Total ram usage:        0 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:   11
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_USBDeviceTasks
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text32
  8551  0063F4                     __ptext32:
  8552                           	opt stack 0
  8553  0063F4                     _USBIncrement1msInternalTimers:
  8554                           	opt stack 15
  8555                           
  8556                           ;usb_device.c: 3050: USB1msTickCount++;
  8557                           
  8558                           ; BSR set to: 15
  8559                           ;incstack = 0
  8560  0063F4  0E01               	movlw	1
  8561  0063F6  0103               	movlb	3	; () banked
  8562  0063F8  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8563  0063FA  0E00               	movlw	0
  8564  0063FC  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8565  0063FE  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8566  006400  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8567                           
  8568                           ; BSR set to: 3
  8569                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8570  006402  0101               	movlb	1	; () banked
  8571  006404  51E3               	movf	_USBBusIsSuspended& (0+255),w,b
  8572  006406  A4D8               	btfss	status,2,c
  8573  006408  0012               	return	
  8574                           
  8575                           ; BSR set to: 1
  8576                           ;usb_device.c: 3052: {
  8577                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8578  00640A  2BE1               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8579                           
  8580                           ; BSR set to: 1
  8581                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8582  00640C  51E1               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8583  00640E  A4D8               	btfss	status,2,c
  8584  006410  0012               	return	
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;usb_device.c: 3056: {
  8588                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8589  006412  69E1               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8590                           
  8591                           ; BSR set to: 1
  8592  006414  0012               	return	
  8593  006416                     __end_of_USBIncrement1msInternalTimers:
  8594                           	opt stack 0
  8595                           tosu	equ	0xFFF
  8596                           tosh	equ	0xFFE
  8597                           tosl	equ	0xFFD
  8598                           pclath	equ	0xFFA
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           intcon2	equ	0xFF1
  8607                           intcon3	equ	0xFF0
  8608                           postinc0	equ	0xFEE
  8609                           plusw0	equ	0xFEB
  8610                           wreg	equ	0xFE8
  8611                           postinc1	equ	0xFE6
  8612                           postdec1	equ	0xFE5
  8613                           fsr1h	equ	0xFE2
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           plusw2	equ	0xFDB
  8619                           fsr2h	equ	0xFDA
  8620                           fsr2l	equ	0xFD9
  8621                           status	equ	0xFD8
  8622                           
  8623 ;; *************** function _USBDeviceInit *****************
  8624 ;; Defined at:
  8625 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  i               1   37[BANK0 ] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;Total ram usage:        1 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   12
  8646 ;; This function calls:
  8647 ;;		_memset
  8648 ;; This function is called by:
  8649 ;;		_USBDeviceTasks
  8650 ;;		_UsbDevice_MainTask
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text33
  8655  0023CC                     __ptext33:
  8656                           	opt stack 0
  8657  0023CC                     _USBDeviceInit:
  8658                           	opt stack 14
  8659                           
  8660                           ;usb_device.c: 297: uint8_t i;
  8661                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8662                           
  8663                           ; BSR set to: 1
  8664                           ;incstack = 0
  8665  0023CC  98A0               	bcf	4000,4,c	;volatile
  8666                           
  8667                           ;usb_device.c: 303: ;
  8668                           ;usb_device.c: 306: {UEIR = 0;};
  8669  0023CE  0E00               	movlw	0
  8670  0023D0  6E63               	movwf	3939,c	;volatile
  8671                           
  8672                           ;usb_device.c: 309: {UIR = 0;};
  8673  0023D2  0E00               	movlw	0
  8674  0023D4  6E62               	movwf	3938,c	;volatile
  8675                           
  8676                           ;usb_device.c: 312: UEP0 = 0;
  8677  0023D6  0E00               	movlw	0
  8678  0023D8  010F               	movlb	15	; () banked
  8679  0023DA  6F26               	movwf	38,b	;volatile
  8680                           
  8681                           ; BSR set to: 15
  8682                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8683  0023DC  0E27               	movlw	39
  8684  0023DE  0100               	movlb	0	; () banked
  8685  0023E0  6F7D               	movwf	memset@p1& (0+255),b
  8686  0023E2  0E0F               	movlw	15
  8687  0023E4  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8688  0023E6  0E00               	movlw	0
  8689  0023E8  6F80               	movwf	(memset@c+1)& (0+255),b
  8690  0023EA  0E00               	movlw	0
  8691  0023EC  6F7F               	movwf	memset@c& (0+255),b
  8692  0023EE  0E00               	movlw	0
  8693  0023F0  6F82               	movwf	(memset@n+1)& (0+255),b
  8694  0023F2  0E02               	movlw	2
  8695  0023F4  6F81               	movwf	memset@n& (0+255),b
  8696  0023F6  ECB1  F030         	call	_memset	;wreg free
  8697                           
  8698                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8699  0023FA  0E16               	movlw	22
  8700  0023FC  010F               	movlb	15	; () banked
  8701  0023FE  6F39               	movwf	57,b	;volatile
  8702                           
  8703                           ; BSR set to: 15
  8704  002400  0E9F               	movlw	159
  8705  002402  6F37               	movwf	55,b	;volatile
  8706                           
  8707                           ; BSR set to: 15
  8708  002404  0E7B               	movlw	123
  8709  002406  6F36               	movwf	54,b	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;usb_device.c: 319: ;
  8713                           ;usb_device.c: 322: ;
  8714                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8715  002408  0E00               	movlw	0
  8716  00240A  0100               	movlb	0	; () banked
  8717  00240C  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8718  00240E                     l14112:
  8719                           
  8720                           ; BSR set to: 0
  8721  00240E  0E0B               	movlw	11
  8722  002410  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8723  002412  D001               	goto	l1601
  8724  002414  D00E               	goto	u13190
  8725  002416                     l1601:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;usb_device.c: 326: {
  8729                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8730                           
  8731                           ; BSR set to: 0
  8732  002416  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8733  002418  0D04               	mullw	4
  8734  00241A  0E00               	movlw	0
  8735  00241C  24F3               	addwf	prodl,w,c
  8736  00241E  6ED9               	movwf	fsr2l,c
  8737  002420  0E04               	movlw	4
  8738  002422  20F4               	addwfc	prodh,w,c
  8739  002424  6EDA               	movwf	fsr2h,c
  8740  002426  6ADE               	clrf	postinc2,c
  8741  002428  6ADE               	clrf	postinc2,c
  8742  00242A  6ADE               	clrf	postinc2,c
  8743  00242C  6ADD               	clrf	postdec2,c
  8744                           
  8745                           ; BSR set to: 0
  8746  00242E  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8747  002430  D7EE               	goto	l14112
  8748  002432                     u13190:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;usb_device.c: 328: }
  8752                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8753  002432  8C65               	bsf	3941,6,c	;volatile
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;usb_device.c: 334: UADDR = 0x00;
  8757  002434  0E00               	movlw	0
  8758  002436  010F               	movlb	15	; () banked
  8759  002438  6F38               	movwf	56,b	;volatile
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8763  00243A  9865               	bcf	3941,4,c	;volatile
  8764                           
  8765                           ; BSR set to: 15
  8766                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8767  00243C  9C65               	bcf	3941,6,c	;volatile
  8768  00243E                     
  8769                           ;usb_device.c: 344: {
  8770                           ;usb_device.c: 345: (UIR &= 0xF7);
  8771                           
  8772                           ; BSR set to: 15
  8773  00243E  9662               	bcf	3938,3,c	;volatile
  8774                           
  8775                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8776  002440  0E00               	movlw	0
  8777  002442  0100               	movlb	0	; () banked
  8778  002444  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8782  002446  0E00               	movlw	0
  8783  002448  0101               	movlb	1	; () banked
  8784  00244A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8785                           
  8786                           ; BSR set to: 1
  8787                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8788  00244C  0E00               	movlw	0
  8789  00244E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8790  002450  0E00               	movlw	0
  8791  002452  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8792                           
  8793                           ; BSR set to: 1
  8794                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8795  002454  B662               	btfsc	3938,3,c	;volatile
  8796  002456  D7F3               	goto	l1603
  8797                           
  8798                           ; BSR set to: 1
  8799                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8800                           
  8801                           ; BSR set to: 1
  8802  002458  0E01               	movlw	1
  8803  00245A  0100               	movlb	0	; () banked
  8804  00245C  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8805                           
  8806                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8807  00245E  0E01               	movlw	1
  8808  002460  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8809                           
  8810                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8811  002462  0E00               	movlw	0
  8812  002464  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8813                           
  8814                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8815  002466  0E00               	movlw	0
  8816  002468  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8817                           
  8818                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8819  00246A  0E00               	movlw	0
  8820  00246C  0101               	movlb	1	; () banked
  8821  00246E  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8822                           
  8823                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8824  002470  0E00               	movlw	0
  8825  002472  0100               	movlb	0	; () banked
  8826  002474  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8827  002476                     l14140:
  8828                           
  8829                           ; BSR set to: 0
  8830  002476  0E02               	movlw	2
  8831  002478  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8832  00247A  D001               	goto	l1605
  8833  00247C  D02E               	goto	u13220
  8834  00247E                     l1605:
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;usb_device.c: 364: {
  8838                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8839                           
  8840                           ; BSR set to: 0
  8841  00247E  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8842  002480  0D02               	mullw	2
  8843  002482  0EB6               	movlw	low _pBDTEntryIn
  8844  002484  24F3               	addwf	prodl,w,c
  8845  002486  6ED9               	movwf	fsr2l,c
  8846  002488  0E00               	movlw	high _pBDTEntryIn
  8847  00248A  20F4               	addwfc	prodh,w,c
  8848  00248C  6EDA               	movwf	fsr2h,c
  8849  00248E  0E00               	movlw	0
  8850  002490  6EDE               	movwf	postinc2,c
  8851  002492  0E00               	movlw	0
  8852  002494  6EDD               	movwf	postdec2,c
  8853                           
  8854                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8855  002496  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8856  002498  0D02               	mullw	2
  8857  00249A  0E0E               	movlw	low _pBDTEntryOut
  8858  00249C  24F3               	addwf	prodl,w,c
  8859  00249E  6ED9               	movwf	fsr2l,c
  8860  0024A0  0E03               	movlw	high _pBDTEntryOut
  8861  0024A2  20F4               	addwfc	prodh,w,c
  8862  0024A4  6EDA               	movwf	fsr2h,c
  8863  0024A6  0E00               	movlw	0
  8864  0024A8  6EDE               	movwf	postinc2,c
  8865  0024AA  0E00               	movlw	0
  8866  0024AC  6EDD               	movwf	postdec2,c
  8867                           
  8868                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8869  0024AE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8870  0024B0  0D01               	mullw	1
  8871  0024B2  0ED2               	movlw	low _ep_data_in
  8872  0024B4  24F3               	addwf	prodl,w,c
  8873  0024B6  6ED9               	movwf	fsr2l,c
  8874  0024B8  0E02               	movlw	high _ep_data_in
  8875  0024BA  20F4               	addwfc	prodh,w,c
  8876  0024BC  6EDA               	movwf	fsr2h,c
  8877  0024BE  0E00               	movlw	0
  8878  0024C0  6EDF               	movwf	indf2,c
  8879                           
  8880                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8881  0024C2  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8882  0024C4  0D01               	mullw	1
  8883  0024C6  0ECF               	movlw	low _ep_data_out
  8884  0024C8  24F3               	addwf	prodl,w,c
  8885  0024CA  6ED9               	movwf	fsr2l,c
  8886  0024CC  0E02               	movlw	high _ep_data_out
  8887  0024CE  20F4               	addwfc	prodh,w,c
  8888  0024D0  6EDA               	movwf	fsr2h,c
  8889  0024D2  0E00               	movlw	0
  8890  0024D4  6EDF               	movwf	indf2,c
  8891                           
  8892                           ; BSR set to: 0
  8893  0024D6  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8894  0024D8  D7CE               	goto	l14140
  8895  0024DA                     u13220:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 369: }
  8899                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8900                           
  8901                           ; BSR set to: 0
  8902  0024DA  0E08               	movlw	8
  8903  0024DC  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8904  0024DE  0E04               	movlw	4
  8905  0024E0  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8909  0024E2  0E16               	movlw	22
  8910  0024E4  010F               	movlb	15	; () banked
  8911  0024E6  6F26               	movwf	38,b	;volatile
  8912                           
  8913                           ; BSR set to: 15
  8914                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8915  0024E8  0E04               	movlw	4
  8916  0024EA  0104               	movlb	4	; () banked
  8917  0024EC  6F03               	movwf	3,b	;volatile
  8918  0024EE  0E30               	movlw	48
  8919  0024F0  6F02               	movwf	2,b	;volatile
  8920                           
  8921                           ; BSR set to: 4
  8922                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8923  0024F2  0E08               	movlw	8
  8924  0024F4  6F01               	movwf	1,b	;volatile
  8925                           
  8926                           ; BSR set to: 4
  8927                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8928  0024F6  0E04               	movlw	4
  8929  0024F8  6F00               	movwf	0,b	;volatile
  8930                           
  8931                           ; BSR set to: 4
  8932                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8933  0024FA  8F00               	bsf	0,7,b	;volatile
  8934                           
  8935                           ; BSR set to: 4
  8936                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8937  0024FC  0E00               	movlw	0
  8938  0024FE  0100               	movlb	0	; () banked
  8939  002500  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;usb_device.c: 384: USB1msTickCount = 0;
  8943  002502  0E00               	movlw	0
  8944  002504  0103               	movlb	3	; () banked
  8945  002506  6F18               	movwf	_USB1msTickCount& (0+255),b
  8946  002508  0E00               	movlw	0
  8947  00250A  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8948  00250C  0E00               	movlw	0
  8949  00250E  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8950  002510  0E00               	movlw	0
  8951  002512  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8952                           
  8953                           ; BSR set to: 3
  8954                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8955  002514  0E00               	movlw	0
  8956  002516  0101               	movlb	1	; () banked
  8957  002518  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8958                           
  8959                           ; BSR set to: 1
  8960                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8961  00251A  0E00               	movlw	0
  8962  00251C  0100               	movlb	0	; () banked
  8963  00251E  6FCD               	movwf	_USBDeviceState& (0+255),b
  8964                           
  8965                           ; BSR set to: 0
  8966  002520  0012               	return		;funcret
  8967  002522                     __end_of_USBDeviceInit:
  8968                           	opt stack 0
  8969                           tosu	equ	0xFFF
  8970                           tosh	equ	0xFFE
  8971                           tosl	equ	0xFFD
  8972                           pclath	equ	0xFFA
  8973                           tblptru	equ	0xFF8
  8974                           tblptrh	equ	0xFF7
  8975                           tblptrl	equ	0xFF6
  8976                           tablat	equ	0xFF5
  8977                           prodh	equ	0xFF4
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           intcon2	equ	0xFF1
  8981                           intcon3	equ	0xFF0
  8982                           postinc0	equ	0xFEE
  8983                           plusw0	equ	0xFEB
  8984                           wreg	equ	0xFE8
  8985                           postinc1	equ	0xFE6
  8986                           postdec1	equ	0xFE5
  8987                           fsr1h	equ	0xFE2
  8988                           fsr1l	equ	0xFE1
  8989                           indf2	equ	0xFDF
  8990                           postinc2	equ	0xFDE
  8991                           postdec2	equ	0xFDD
  8992                           plusw2	equ	0xFDB
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function _USBCtrlEPService *****************
  8998 ;; Defined at:
  8999 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;Total ram usage:        1 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; Hardware stack levels required when called:   18
  9020 ;; This function calls:
  9021 ;;		_USBCtrlTrfInHandler
  9022 ;;		_USBCtrlTrfOutHandler
  9023 ;;		_USBCtrlTrfSetupHandler
  9024 ;;		_memcpy
  9025 ;; This function is called by:
  9026 ;;		_USBDeviceTasks
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text34
  9031  0049E6                     __ptext34:
  9032                           	opt stack 0
  9033  0049E6                     _USBCtrlEPService:
  9034                           	opt stack 8
  9035                           
  9036                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;incstack = 0
  9040  0049E6  0E2D               	movlw	45
  9041  0049E8  0100               	movlb	0	; () banked
  9042  0049EA  6FC9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9046  0049EC  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9047  0049F0  0EFD               	movlw	253
  9048  0049F2  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9049  0049F4  A4D8               	btfss	status,2,c
  9050  0049F6  D038               	goto	l1771
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;usb_device.c: 2401: {
  9054                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9055  0049F8  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9056  0049FC  90D8               	bcf	status,0,c
  9057  0049FE  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9058  004A00  0E3F               	movlw	63
  9059  004A02  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9060  004A04  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9061  004A06  0D04               	mullw	4
  9062  004A08  0E00               	movlw	0
  9063  004A0A  24F3               	addwf	prodl,w,c
  9064  004A0C  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9065  004A0E  0E04               	movlw	4
  9066  004A10  20F4               	addwfc	prodh,w,c
  9067  004A12  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9071  004A14  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9072  004A18  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9076  004A1C  0E04               	movlw	4
  9077  004A1E  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9081  004A20  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9082  004A24  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9083  004A28  30DF               	rrcf	223,w,c
  9084  004A2A  32E8               	rrcf	wreg,f,c
  9085  004A2C  0B0F               	andlw	15
  9086  004A2E  0A0D               	xorlw	13
  9087  004A30  A4D8               	btfss	status,2,c
  9088  004A32  D017               	goto	l1772
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;usb_device.c: 2418: {
  9092                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9093  004A34  0E30               	movlw	48
  9094  004A36  6F7D               	movwf	memcpy@d1& (0+255),b
  9095  004A38  0E04               	movlw	4
  9096  004A3A  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9097  004A3C  EE20 F002          	lfsr	2,2
  9098  004A40  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9099  004A42  26D9               	addwf	fsr2l,f,c
  9100  004A44  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9101  004A46  22DA               	addwfc	fsr2h,f,c
  9102  004A48  CFDE F07F          	movff	postinc2,memcpy@s1
  9103  004A4C  CFDD F080          	movff	postdec2,memcpy@s1+1
  9104  004A50  0E00               	movlw	0
  9105  004A52  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9106  004A54  0E08               	movlw	8
  9107  004A56  6F81               	movwf	memcpy@n& (0+255),b
  9108  004A58  ECEA  F02D         	call	_memcpy	;wreg free
  9109                           
  9110                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9111  004A5C  ECA6  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
  9112                           
  9113                           ;usb_device.c: 2427: }
  9114  004A60  0012               	return	
  9115  004A62                     l1772:
  9116                           
  9117                           ;usb_device.c: 2428: else
  9118                           ;usb_device.c: 2429: {
  9119                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9120  004A62  EC88  F029         	call	_USBCtrlTrfOutHandler	;wreg free
  9121                           
  9122                           ;usb_device.c: 2432: }
  9123                           ;usb_device.c: 2433: }
  9124  004A66  0012               	return	
  9125  004A68                     l1771:
  9126                           
  9127                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9128  004A68  0100               	movlb	0	; () banked
  9129  004A6A  51D5               	movf	_USTATcopy& (0+255),w,b
  9130  004A6C  0BFD               	andlw	253
  9131  004A6E  0A04               	xorlw	4
  9132  004A70  A4D8               	btfss	status,2,c
  9133  004A72  0012               	return	
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;usb_device.c: 2435: {
  9137                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9138  004A74  EC5D  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9139  004A78  0012               	return	
  9140  004A7A                     __end_of_USBCtrlEPService:
  9141                           	opt stack 0
  9142                           tosu	equ	0xFFF
  9143                           tosh	equ	0xFFE
  9144                           tosl	equ	0xFFD
  9145                           pclath	equ	0xFFA
  9146                           tblptru	equ	0xFF8
  9147                           tblptrh	equ	0xFF7
  9148                           tblptrl	equ	0xFF6
  9149                           tablat	equ	0xFF5
  9150                           prodh	equ	0xFF4
  9151                           prodl	equ	0xFF3
  9152                           intcon	equ	0xFF2
  9153                           intcon2	equ	0xFF1
  9154                           intcon3	equ	0xFF0
  9155                           postinc0	equ	0xFEE
  9156                           plusw0	equ	0xFEB
  9157                           wreg	equ	0xFE8
  9158                           postinc1	equ	0xFE6
  9159                           postdec1	equ	0xFE5
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           plusw2	equ	0xFDB
  9166                           fsr2h	equ	0xFDA
  9167                           fsr2l	equ	0xFD9
  9168                           status	equ	0xFD8
  9169                           
  9170 ;; *************** function _memcpy *****************
  9171 ;; Defined at:
  9172 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  d1              2   29[BANK0 ] PTR void 
  9175 ;;		 -> SetupPkt(8), 
  9176 ;;  s1              2   31[BANK0 ] PTR const void 
  9177 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9178 ;;  n               2   33[BANK0 ] unsigned int 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9181 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9182 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9183 ;;		 -> SetupPkt(8), 
  9184 ;;  tmp             1   35[BANK0 ] unsigned char 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  2   29[BANK0 ] PTR void 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9194 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9197 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9198 ;;Total ram usage:       11 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:   11
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_USBCtrlEPService
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text35
  9209  005BD4                     __ptext35:
  9210                           	opt stack 0
  9211  005BD4                     _memcpy:
  9212                           	opt stack 14
  9213                           
  9214                           ;incstack = 0
  9215  005BD4  C07F  F086         	movff	memcpy@s1,memcpy@s
  9216  005BD8  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9217  005BDC  C07D  F084         	movff	memcpy@d1,memcpy@d
  9218  005BE0  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9219  005BE4  D011               	goto	l3275
  9220  005BE6                     l13384:
  9221  005BE6  C086  FFD9         	movff	memcpy@s,fsr2l
  9222  005BEA  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9223  005BEE  50DF               	movf	indf2,w,c
  9224  005BF0  0100               	movlb	0	; () banked
  9225  005BF2  6F83               	movwf	memcpy@tmp& (0+255),b
  9226                           
  9227                           ; BSR set to: 0
  9228  005BF4  4B86               	infsnz	memcpy@s& (0+255),f,b
  9229  005BF6  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9230                           
  9231                           ; BSR set to: 0
  9232  005BF8  C084  FFD9         	movff	memcpy@d,fsr2l
  9233  005BFC  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9234  005C00  C083  FFDF         	movff	memcpy@tmp,indf2
  9235                           
  9236                           ; BSR set to: 0
  9237  005C04  4B84               	infsnz	memcpy@d& (0+255),f,b
  9238  005C06  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9239  005C08                     l3275:
  9240                           
  9241                           ; BSR set to: 0
  9242  005C08  0100               	movlb	0	; () banked
  9243  005C0A  0781               	decf	memcpy@n& (0+255),f,b
  9244  005C0C  A0D8               	btfss	status,0,c
  9245  005C0E  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9246  005C10  2981               	incf	memcpy@n& (0+255),w,b
  9247  005C12  E1E9               	bnz	l13384
  9248  005C14  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9249  005C16  B4D8               	btfsc	status,2,c
  9250  005C18  0012               	return	
  9251  005C1A  D7E5               	goto	l3276
  9252  005C1C                     __end_of_memcpy:
  9253                           	opt stack 0
  9254                           tosu	equ	0xFFF
  9255                           tosh	equ	0xFFE
  9256                           tosl	equ	0xFFD
  9257                           pclath	equ	0xFFA
  9258                           tblptru	equ	0xFF8
  9259                           tblptrh	equ	0xFF7
  9260                           tblptrl	equ	0xFF6
  9261                           tablat	equ	0xFF5
  9262                           prodh	equ	0xFF4
  9263                           prodl	equ	0xFF3
  9264                           intcon	equ	0xFF2
  9265                           intcon2	equ	0xFF1
  9266                           intcon3	equ	0xFF0
  9267                           postinc0	equ	0xFEE
  9268                           plusw0	equ	0xFEB
  9269                           wreg	equ	0xFE8
  9270                           postinc1	equ	0xFE6
  9271                           postdec1	equ	0xFE5
  9272                           fsr1h	equ	0xFE2
  9273                           fsr1l	equ	0xFE1
  9274                           indf2	equ	0xFDF
  9275                           postinc2	equ	0xFDE
  9276                           postdec2	equ	0xFDD
  9277                           plusw2	equ	0xFDB
  9278                           fsr2h	equ	0xFDA
  9279                           fsr2l	equ	0xFD9
  9280                           status	equ	0xFD8
  9281                           
  9282 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9283 ;; Defined at:
  9284 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9302 ;;Total ram usage:        0 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:   17
  9305 ;; This function calls:
  9306 ;;		_USBCheckStdRequest
  9307 ;;		_USBCtrlEPServiceComplete
  9308 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9309 ;; This function is called by:
  9310 ;;		_USBCtrlEPService
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text36
  9315  004D4C                     __ptext36:
  9316                           	opt stack 0
  9317  004D4C                     _USBCtrlTrfSetupHandler:
  9318                           	opt stack 8
  9319                           
  9320                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;incstack = 0
  9324  004D4C  0E00               	movlw	0
  9325  004D4E  0100               	movlb	0	; () banked
  9326  004D50  6FCC               	movwf	_shortPacketStatus& (0+255),b
  9327                           
  9328                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9329  004D52  0E00               	movlw	0
  9330  004D54  6FC8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9331                           
  9332                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9333  004D56  0E00               	movlw	0
  9334  004D58  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9335                           
  9336                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9337  004D5A  0E00               	movlw	0
  9338  004D5C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9339                           
  9340                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9341  004D5E  0E00               	movlw	0
  9342  004D60  0101               	movlb	1	; () banked
  9343  004D62  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9344                           
  9345                           ;usb_device.c: 2493: controlTransferState = 0;
  9346  004D64  0E00               	movlw	0
  9347  004D66  0100               	movlb	0	; () banked
  9348  004D68  6FCB               	movwf	_controlTransferState& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9352  004D6A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9353  004D6E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9354  004D72  0E7F               	movlw	127
  9355  004D74  16DF               	andwf	indf2,f,c
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9359  004D76  0E04               	movlw	4
  9360  004D78  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9364  004D7A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9365  004D7E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9366  004D82  0E7F               	movlw	127
  9367  004D84  16DF               	andwf	indf2,f,c
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9371  004D86  0E04               	movlw	4
  9372  004D88  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9376  004D8A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9377  004D8E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9378  004D92  0E7F               	movlw	127
  9379  004D94  16DF               	andwf	indf2,f,c
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9383  004D96  0E00               	movlw	0
  9384  004D98  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9388  004D9A  0E00               	movlw	0
  9389  004D9C  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9390  004D9E  0E00               	movlw	0
  9391  004DA0  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9395  004DA2  0E00               	movlw	0
  9396  004DA4  0101               	movlb	1	; () banked
  9397  004DA6  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9398                           
  9399                           ; BSR set to: 1
  9400                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9401  004DA8  0E00               	movlw	0
  9402  004DAA  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9403  004DAC  0E00               	movlw	0
  9404  004DAE  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9405                           
  9406                           ; BSR set to: 1
  9407                           ;usb_device.c: 2517: USBCheckStdRequest();
  9408  004DB0  EC16  F01B         	call	_USBCheckStdRequest	;wreg free
  9409                           
  9410                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9411  004DB4  0E00               	movlw	0
  9412  004DB6  0100               	movlb	0	; () banked
  9413  004DB8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9414  004DBA  0E03               	movlw	3
  9415  004DBC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9416  004DBE  0E00               	movlw	0
  9417  004DC0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9418  004DC2  0E00               	movlw	0
  9419  004DC4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9420  004DC6  0E00               	movlw	0
  9421  004DC8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9422  004DCA  0E00               	movlw	0
  9423  004DCC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9424  004DCE  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9425                           
  9426                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9427  004DD2  ECC5  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9428  004DD6  0012               	return		;funcret
  9429  004DD8                     __end_of_USBCtrlTrfSetupHandler:
  9430                           	opt stack 0
  9431                           tosu	equ	0xFFF
  9432                           tosh	equ	0xFFE
  9433                           tosl	equ	0xFFD
  9434                           pclath	equ	0xFFA
  9435                           tblptru	equ	0xFF8
  9436                           tblptrh	equ	0xFF7
  9437                           tblptrl	equ	0xFF6
  9438                           tablat	equ	0xFF5
  9439                           prodh	equ	0xFF4
  9440                           prodl	equ	0xFF3
  9441                           intcon	equ	0xFF2
  9442                           intcon2	equ	0xFF1
  9443                           intcon3	equ	0xFF0
  9444                           postinc0	equ	0xFEE
  9445                           plusw0	equ	0xFEB
  9446                           wreg	equ	0xFE8
  9447                           postinc1	equ	0xFE6
  9448                           postdec1	equ	0xFE5
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           plusw2	equ	0xFDB
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function _USBCtrlEPServiceComplete *****************
  9460 ;; Defined at:
  9461 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;		None
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;		None
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:        0 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:   13
  9482 ;; This function calls:
  9483 ;;		_USBCtrlEPAllowDataStage
  9484 ;;		_USBCtrlEPAllowStatusStage
  9485 ;; This function is called by:
  9486 ;;		_USBCtrlTrfSetupHandler
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text37
  9491  00318A                     __ptext37:
  9492                           	opt stack 0
  9493  00318A                     _USBCtrlEPServiceComplete:
  9494                           	opt stack 11
  9495                           
  9496                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9497                           
  9498                           ;incstack = 0
  9499  00318A  9865               	bcf	3941,4,c	;volatile
  9500                           
  9501                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9502  00318C  0100               	movlb	0	; () banked
  9503  00318E  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9504  003190  D03C               	goto	l1681
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;usb_device.c: 1647: {
  9508                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9509  003192  0101               	movlb	1	; () banked
  9510  003194  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9511  003196  D00D               	goto	l1682
  9512                           
  9513                           ; BSR set to: 1
  9514                           ;usb_device.c: 1649: {
  9515                           ;usb_device.c: 1650: controlTransferState = 2;
  9516  003198  0E02               	movlw	2
  9517  00319A  0100               	movlb	0	; () banked
  9518  00319C  6FCB               	movwf	_controlTransferState& (0+255),b
  9519                           
  9520                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9521  00319E  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9522  0031A0  B4D8               	btfsc	status,2,c
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 1662: {
  9526                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9527  0031A2  ECC2  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9528                           
  9529                           ;usb_device.c: 1664: }
  9530                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9531  0031A6  0E00               	movlw	0
  9532  0031A8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9533                           
  9534                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9535  0031AA  0E00               	movlw	0
  9536  0031AC  0100               	movlb	0	; () banked
  9537  0031AE  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9538                           
  9539                           ;usb_device.c: 1670: }
  9540  0031B0  0012               	return	
  9541  0031B2                     l1682:
  9542                           
  9543                           ;usb_device.c: 1671: else
  9544                           ;usb_device.c: 1672: {
  9545                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9546                           
  9547                           ; BSR set to: 0
  9548  0031B2  0100               	movlb	0	; () banked
  9549  0031B4  EE20 F001          	lfsr	2,1
  9550  0031B8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9551  0031BA  26D9               	addwf	fsr2l,f,c
  9552  0031BC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9553  0031BE  22DA               	addwfc	fsr2h,f,c
  9554  0031C0  0E08               	movlw	8
  9555  0031C2  6EDF               	movwf	indf2,c
  9556                           
  9557                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9558  0031C4  EE20 F002          	lfsr	2,2
  9559  0031C8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9560  0031CA  26D9               	addwf	fsr2l,f,c
  9561  0031CC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9562  0031CE  22DA               	addwfc	fsr2h,f,c
  9563  0031D0  0E30               	movlw	48
  9564  0031D2  6EDE               	movwf	postinc2,c
  9565  0031D4  0E04               	movlw	4
  9566  0031D6  6EDD               	movwf	postdec2,c
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9570  0031D8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9571  0031DC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9572  0031E0  0E0C               	movlw	12
  9573  0031E2  6EDF               	movwf	indf2,c
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9577  0031E4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9578  0031E8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9579  0031EC  0E00               	movlw	0
  9580  0031EE  8EDB               	bsf	plusw2,7,c
  9581                           
  9582                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9583  0031F0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9584  0031F4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9585  0031F8  0E04               	movlw	4
  9586  0031FA  6EDF               	movwf	indf2,c
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9590  0031FC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9591  003200  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9592  003204  0E00               	movlw	0
  9593  003206  8EDB               	bsf	plusw2,7,c
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;usb_device.c: 1683: }
  9597                           ;usb_device.c: 1684: }
  9598  003208  0012               	return	
  9599  00320A                     l1681:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;usb_device.c: 1685: else
  9603                           ;usb_device.c: 1686: {
  9604                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9605  00320A  0104               	movlb	4	; () banked
  9606  00320C  AF30               	btfss	48,7,b	;volatile
  9607  00320E  D012               	goto	l1686
  9608                           
  9609                           ; BSR set to: 4
  9610                           ;usb_device.c: 1688: {
  9611                           ;usb_device.c: 1689: controlTransferState = 1;
  9612  003210  0E01               	movlw	1
  9613  003212  0100               	movlb	0	; () banked
  9614  003214  6FCB               	movwf	_controlTransferState& (0+255),b
  9615                           
  9616                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9617  003216  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9618  003218  B4D8               	btfsc	status,2,c
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;usb_device.c: 1704: {
  9622                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9623  00321A  ECC2  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9624                           
  9625                           ;usb_device.c: 1706: }
  9626                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9627  00321E  0E00               	movlw	0
  9628  003220  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9629                           
  9630                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9631  003222  0E00               	movlw	0
  9632  003224  0100               	movlb	0	; () banked
  9633  003226  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9637  003228  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9638  00322A  A4D8               	btfss	status,2,c
  9639  00322C  0012               	return	
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;usb_device.c: 1731: {
  9643                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9644  00322E  EC04  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9645                           
  9646                           ;usb_device.c: 1733: }
  9647                           ;usb_device.c: 1734: }
  9648  003232  0012               	return	
  9649  003234                     l1686:
  9650                           
  9651                           ;usb_device.c: 1735: else
  9652                           ;usb_device.c: 1736: {
  9653                           ;usb_device.c: 1747: controlTransferState = 2;
  9654  003234  0E02               	movlw	2
  9655  003236  0100               	movlb	0	; () banked
  9656  003238  6FCB               	movwf	_controlTransferState& (0+255),b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9660  00323A  EE20 F001          	lfsr	2,1
  9661  00323E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9662  003240  26D9               	addwf	fsr2l,f,c
  9663  003242  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9664  003244  22DA               	addwfc	fsr2h,f,c
  9665  003246  0E08               	movlw	8
  9666  003248  6EDF               	movwf	indf2,c
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9670  00324A  EE20 F002          	lfsr	2,2
  9671  00324E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9672  003250  26D9               	addwf	fsr2l,f,c
  9673  003252  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9674  003254  22DA               	addwfc	fsr2h,f,c
  9675  003256  0E30               	movlw	48
  9676  003258  6EDE               	movwf	postinc2,c
  9677  00325A  0E04               	movlw	4
  9678  00325C  6EDD               	movwf	postdec2,c
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9682  00325E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9683  003262  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9684  003266  0E04               	movlw	4
  9685  003268  6EDF               	movwf	indf2,c
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9689  00326A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9690  00326E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9691  003272  0E00               	movlw	0
  9692  003274  8EDB               	bsf	plusw2,7,c
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9696  003276  0E00               	movlw	0
  9697  003278  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9701  00327A  0E00               	movlw	0
  9702  00327C  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9706  00327E  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9707  003280  A4D8               	btfss	status,2,c
  9708  003282  0012               	return	
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;usb_device.c: 1759: {
  9712                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9713  003284  EC04  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9714  003288  0012               	return	
  9715  00328A                     __end_of_USBCtrlEPServiceComplete:
  9716                           	opt stack 0
  9717                           tosu	equ	0xFFF
  9718                           tosh	equ	0xFFE
  9719                           tosl	equ	0xFFD
  9720                           pclath	equ	0xFFA
  9721                           tblptru	equ	0xFF8
  9722                           tblptrh	equ	0xFF7
  9723                           tblptrl	equ	0xFF6
  9724                           tablat	equ	0xFF5
  9725                           prodh	equ	0xFF4
  9726                           prodl	equ	0xFF3
  9727                           intcon	equ	0xFF2
  9728                           intcon2	equ	0xFF1
  9729                           intcon3	equ	0xFF0
  9730                           postinc0	equ	0xFEE
  9731                           plusw0	equ	0xFEB
  9732                           wreg	equ	0xFE8
  9733                           postinc1	equ	0xFE6
  9734                           postdec1	equ	0xFE5
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9746 ;; Defined at:
  9747 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:   12
  9768 ;; This function calls:
  9769 ;;		_USBCtrlTrfTxService
  9770 ;; This function is called by:
  9771 ;;		_USBCtrlEPServiceComplete
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text38
  9776  004784                     __ptext38:
  9777                           	opt stack 0
  9778  004784                     _USBCtrlEPAllowDataStage:
  9779                           	opt stack 11
  9780                           
  9781                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9782                           
  9783                           ;incstack = 0
  9784  004784  0E00               	movlw	0
  9785  004786  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9786                           
  9787                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9788  004788  0E00               	movlw	0
  9789  00478A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9790                           
  9791                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9792  00478C  0E02               	movlw	2
  9793  00478E  0100               	movlb	0	; () banked
  9794  004790  19CB               	xorwf	_controlTransferState& (0+255),w,b
  9795  004792  A4D8               	btfss	status,2,c
  9796  004794  D01F               	goto	l1670
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;usb_device.c: 1512: {
  9800                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9801  004796  EE20 F001          	lfsr	2,1
  9802  00479A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9803  00479C  26D9               	addwf	fsr2l,f,c
  9804  00479E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9805  0047A0  22DA               	addwfc	fsr2h,f,c
  9806  0047A2  0E08               	movlw	8
  9807  0047A4  6EDF               	movwf	indf2,c
  9808                           
  9809                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9810  0047A6  EE20 F002          	lfsr	2,2
  9811  0047AA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9812  0047AC  26D9               	addwf	fsr2l,f,c
  9813  0047AE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9814  0047B0  22DA               	addwfc	fsr2h,f,c
  9815  0047B2  0E38               	movlw	56
  9816  0047B4  6EDE               	movwf	postinc2,c
  9817  0047B6  0E04               	movlw	4
  9818  0047B8  6EDD               	movwf	postdec2,c
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9822  0047BA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9823  0047BE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9824  0047C2  0E48               	movlw	72
  9825  0047C4  6EDF               	movwf	indf2,c
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9829  0047C6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9830  0047CA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9831  0047CE  0E00               	movlw	0
  9832  0047D0  8EDB               	bsf	plusw2,7,c
  9833                           
  9834                           ;usb_device.c: 1518: }
  9835  0047D2  0012               	return	
  9836  0047D4                     l1670:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;usb_device.c: 1519: else
  9840                           ;usb_device.c: 1520: {
  9841                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9842                           
  9843                           ; BSR set to: 0
  9844  0047D4  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9845  0047D6  0104               	movlb	4	; () banked
  9846  0047D8  5D36               	subwf	54,w,b	;volatile
  9847  0047DA  0100               	movlb	0	; () banked
  9848  0047DC  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9849  0047DE  0104               	movlb	4	; () banked
  9850  0047E0  5937               	subwfb	55,w,b	;volatile
  9851  0047E2  B0D8               	btfsc	status,0,c
  9852  0047E4  D004               	goto	l1672
  9853                           
  9854                           ; BSR set to: 4
  9855                           ;usb_device.c: 1524: {
  9856                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9857  0047E6  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9858  0047EA  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9859  0047EE                     l1672:
  9860                           
  9861                           ; BSR set to: 4
  9862                           ;usb_device.c: 1526: }
  9863                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9864                           
  9865                           ; BSR set to: 4
  9866  0047EE  ECF6  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9867                           
  9868                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9869  0047F2  0100               	movlb	0	; () banked
  9870  0047F4  EE20 F002          	lfsr	2,2
  9871  0047F8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9872  0047FA  26D9               	addwf	fsr2l,f,c
  9873  0047FC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9874  0047FE  22DA               	addwfc	fsr2h,f,c
  9875  004800  0E38               	movlw	56
  9876  004802  6EDE               	movwf	postinc2,c
  9877  004804  0E04               	movlw	4
  9878  004806  6EDD               	movwf	postdec2,c
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9882  004808  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9883  00480C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9884  004810  0E48               	movlw	72
  9885  004812  6EDF               	movwf	indf2,c
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9889  004814  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9890  004818  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9891  00481C  0E00               	movlw	0
  9892  00481E  8EDB               	bsf	plusw2,7,c
  9893  004820  0012               	return	
  9894  004822                     __end_of_USBCtrlEPAllowDataStage:
  9895                           	opt stack 0
  9896                           tosu	equ	0xFFF
  9897                           tosh	equ	0xFFE
  9898                           tosl	equ	0xFFD
  9899                           pclath	equ	0xFFA
  9900                           tblptru	equ	0xFF8
  9901                           tblptrh	equ	0xFF7
  9902                           tblptrl	equ	0xFF6
  9903                           tablat	equ	0xFF5
  9904                           prodh	equ	0xFF4
  9905                           prodl	equ	0xFF3
  9906                           intcon	equ	0xFF2
  9907                           intcon2	equ	0xFF1
  9908                           intcon3	equ	0xFF0
  9909                           postinc0	equ	0xFEE
  9910                           plusw0	equ	0xFEB
  9911                           wreg	equ	0xFE8
  9912                           postinc1	equ	0xFE6
  9913                           postdec1	equ	0xFE5
  9914                           fsr1h	equ	0xFE2
  9915                           fsr1l	equ	0xFE1
  9916                           indf2	equ	0xFDF
  9917                           postinc2	equ	0xFDE
  9918                           postdec2	equ	0xFDD
  9919                           plusw2	equ	0xFDB
  9920                           fsr2h	equ	0xFDA
  9921                           fsr2l	equ	0xFD9
  9922                           status	equ	0xFD8
  9923                           
  9924 ;; *************** function _USBCheckStdRequest *****************
  9925 ;; Defined at:
  9926 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;		None
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;Total ram usage:        0 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:   16
  9947 ;; This function calls:
  9948 ;;		_USBStdFeatureReqHandler
  9949 ;;		_USBStdGetDscHandler
  9950 ;;		_USBStdGetStatusHandler
  9951 ;;		_USBStdSetCfgHandler
  9952 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9953 ;; This function is called by:
  9954 ;;		_USBCtrlTrfSetupHandler
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text39
  9959  00362C                     __ptext39:
  9960                           	opt stack 0
  9961  00362C                     _USBCheckStdRequest:
  9962                           	opt stack 8
  9963                           
  9964                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;incstack = 0
  9968  00362C  0104               	movlb	4	; () banked
  9969  00362E  3930               	swapf	48,w,b	;volatile
  9970  003630  32E8               	rrcf	wreg,f,c
  9971  003632  0B03               	andlw	3
  9972  003634  0900               	iorlw	0
  9973  003636  A4D8               	btfss	status,2,c
  9974  003638  0012               	return	
  9975  00363A  D048               	goto	l1805
  9976  00363C                     l1806:
  9977                           
  9978                           ; BSR set to: 4
  9979                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9980  00363C  0100               	movlb	0	; () banked
  9981  00363E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9985  003640  0E08               	movlw	8
  9986  003642  6FCD               	movwf	_USBDeviceState& (0+255),b
  9987                           
  9988                           ;usb_device.c: 2713: break;
  9989  003644  0012               	return	
  9990  003646                     
  9991                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9992                           
  9993                           ; BSR set to: 0
  9994  003646  EC09  F017         	call	_USBStdGetDscHandler	;wreg free
  9995                           
  9996                           ;usb_device.c: 2716: break;
  9997  00364A  0012               	return	
  9998  00364C                     
  9999                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10000  00364C  EC30  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10001                           
 10002                           ;usb_device.c: 2719: break;
 10003  003650  0012               	return	
 10004  003652                     
 10005                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10006  003652  0ED6               	movlw	low _USBActiveConfiguration
 10007  003654  0100               	movlb	0	; () banked
 10008  003656  6FB0               	movwf	_inPipes& (0+255),b
 10009  003658  0E00               	movlw	high _USBActiveConfiguration
 10010  00365A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10014  00365C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10018  00365E  0E01               	movlw	1
 10019  003660  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10023  003662  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10024                           
 10025                           ;usb_device.c: 2725: break;
 10026  003664  0012               	return	
 10027  003666                     
 10028                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10029                           
 10030                           ; BSR set to: 0
 10031  003666  EC1D  F021         	call	_USBStdGetStatusHandler	;wreg free
 10032                           
 10033                           ;usb_device.c: 2728: break;
 10034  00366A  0012               	return	
 10035  00366C                     
 10036                           ;usb_device.c: 2730: case 3:
 10037                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10038  00366C  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
 10039                           
 10040                           ;usb_device.c: 2732: break;
 10041  003670  0012               	return	
 10042  003672                     
 10043                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10044  003672  0104               	movlb	4	; () banked
 10045  003674  5134               	movf	52,w,b	;volatile
 10046  003676  0D01               	mullw	1
 10047  003678  0EF1               	movlw	low _USBAlternateInterface
 10048  00367A  24F3               	addwf	prodl,w,c
 10049  00367C  0100               	movlb	0	; () banked
 10050  00367E  6FB0               	movwf	_inPipes& (0+255),b
 10051  003680  0E02               	movlw	high _USBAlternateInterface
 10052  003682  20F4               	addwfc	prodh,w,c
 10053  003684  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10057  003686  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10061  003688  0E01               	movlw	1
 10062  00368A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10066  00368C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10067                           
 10068                           ;usb_device.c: 2738: break;
 10069  00368E  0012               	return	
 10070  003690                     l1815:
 10071                           
 10072                           ; BSR set to: 4
 10073                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10074  003690  0100               	movlb	0	; () banked
 10075  003692  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10079  003694  0104               	movlb	4	; () banked
 10080  003696  5134               	movf	52,w,b	;volatile
 10081  003698  0D01               	mullw	1
 10082  00369A  0EF1               	movlw	low _USBAlternateInterface
 10083  00369C  24F3               	addwf	prodl,w,c
 10084  00369E  6ED9               	movwf	fsr2l,c
 10085  0036A0  0E02               	movlw	high _USBAlternateInterface
 10086  0036A2  20F4               	addwfc	prodh,w,c
 10087  0036A4  6EDA               	movwf	fsr2h,c
 10088  0036A6  C432 FFDF          	movff	1074,indf2	;volatile
 10089                           
 10090                           ;usb_device.c: 2742: break;
 10091  0036AA  0012               	return	
 10092  0036AC                     
 10093                           ; BSR set to: 4
 10094                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10095                           
 10096                           ; BSR set to: 4
 10097  0036AC  0E00               	movlw	0
 10098  0036AE  0100               	movlb	0	; () banked
 10099  0036B0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10100  0036B2  0E02               	movlw	2
 10101  0036B4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10102  0036B6  0E00               	movlw	0
 10103  0036B8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10104  0036BA  0E00               	movlw	0
 10105  0036BC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10106  0036BE  0E00               	movlw	0
 10107  0036C0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10108  0036C2  0E00               	movlw	0
 10109  0036C4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10110  0036C6  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10111                           
 10112                           ;usb_device.c: 2749: }
 10113                           
 10114                           ;usb_device.c: 2748: break;
 10115                           
 10116                           ;usb_device.c: 2747: default:
 10117                           
 10118                           ;usb_device.c: 2746: case 12:
 10119                           
 10120                           ;usb_device.c: 2745: break;
 10121  0036CA  0012               	return	
 10122  0036CC                     l1805:
 10123  0036CC  0104               	movlb	4	; () banked
 10124  0036CE  5131               	movf	49,w,b	;volatile
 10125                           
 10126                           ; Switch size 1, requested type "space"
 10127                           ; Number of cases is 11, Range of values is 0 to 12
 10128                           ; switch strategies available:
 10129                           ; Name         Instructions Cycles
 10130                           ; simple_byte           34    18 (average)
 10131                           ;	Chosen strategy is simple_byte
 10132  0036D0  0A00               	xorlw	0	; case 0
 10133  0036D2  B4D8               	btfsc	status,2,c
 10134  0036D4  D7C8               	goto	l1811
 10135  0036D6  0A01               	xorlw	1	; case 1
 10136  0036D8  B4D8               	btfsc	status,2,c
 10137  0036DA  D7C8               	goto	l1812
 10138  0036DC  0A02               	xorlw	2	; case 3
 10139  0036DE  B4D8               	btfsc	status,2,c
 10140  0036E0  D7C5               	goto	l1812
 10141  0036E2  0A06               	xorlw	6	; case 5
 10142  0036E4  B4D8               	btfsc	status,2,c
 10143  0036E6  D7AA               	goto	l1806
 10144  0036E8  0A03               	xorlw	3	; case 6
 10145  0036EA  B4D8               	btfsc	status,2,c
 10146  0036EC  D7AC               	goto	l1808
 10147  0036EE  0A01               	xorlw	1	; case 7
 10148  0036F0  B4D8               	btfsc	status,2,c
 10149  0036F2  D7DC               	goto	l1816
 10150  0036F4  0A0F               	xorlw	15	; case 8
 10151  0036F6  B4D8               	btfsc	status,2,c
 10152  0036F8  D7AC               	goto	l1810
 10153  0036FA  0A01               	xorlw	1	; case 9
 10154  0036FC  B4D8               	btfsc	status,2,c
 10155  0036FE  D7A6               	goto	l1809
 10156  003700  0A03               	xorlw	3	; case 10
 10157  003702  B4D8               	btfsc	status,2,c
 10158  003704  D7B6               	goto	l1814
 10159  003706  0A01               	xorlw	1	; case 11
 10160  003708  B4D8               	btfsc	status,2,c
 10161  00370A  D7C2               	goto	l1815
 10162  00370C  0A07               	xorlw	7	; case 12
 10163  00370E  0012               	return	
 10164  003710                     __end_of_USBCheckStdRequest:
 10165                           	opt stack 0
 10166                           tosu	equ	0xFFF
 10167                           tosh	equ	0xFFE
 10168                           tosl	equ	0xFFD
 10169                           pclath	equ	0xFFA
 10170                           tblptru	equ	0xFF8
 10171                           tblptrh	equ	0xFF7
 10172                           tblptrl	equ	0xFF6
 10173                           tablat	equ	0xFF5
 10174                           prodh	equ	0xFF4
 10175                           prodl	equ	0xFF3
 10176                           intcon	equ	0xFF2
 10177                           intcon2	equ	0xFF1
 10178                           intcon3	equ	0xFF0
 10179                           postinc0	equ	0xFEE
 10180                           plusw0	equ	0xFEB
 10181                           wreg	equ	0xFE8
 10182                           postinc1	equ	0xFE6
 10183                           postdec1	equ	0xFE5
 10184                           fsr1h	equ	0xFE2
 10185                           fsr1l	equ	0xFE1
 10186                           indf2	equ	0xFDF
 10187                           postinc2	equ	0xFDE
 10188                           postdec2	equ	0xFDD
 10189                           plusw2	equ	0xFDB
 10190                           fsr2h	equ	0xFDA
 10191                           fsr2l	equ	0xFD9
 10192                           status	equ	0xFD8
 10193                           
 10194 ;; *************** function _USBStdSetCfgHandler *****************
 10195 ;; Defined at:
 10196 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;		None
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  i               1   49[BANK0 ] unsigned char 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10214 ;;Total ram usage:        1 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:   15
 10217 ;; This function calls:
 10218 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10219 ;;		_memset
 10220 ;; This function is called by:
 10221 ;;		_USBCheckStdRequest
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text40
 10226  003460                     __ptext40:
 10227                           	opt stack 0
 10228  003460                     _USBStdSetCfgHandler:
 10229                           	opt stack 8
 10230                           
 10231                           ;usb_device.c: 1988: uint8_t i;
 10232                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10233                           
 10234                           ;incstack = 0
 10235  003460  0100               	movlb	0	; () banked
 10236  003462  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10240  003464  0E27               	movlw	39
 10241  003466  6F7D               	movwf	memset@p1& (0+255),b
 10242  003468  0E0F               	movlw	15
 10243  00346A  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10244  00346C  0E00               	movlw	0
 10245  00346E  6F80               	movwf	(memset@c+1)& (0+255),b
 10246  003470  0E00               	movlw	0
 10247  003472  6F7F               	movwf	memset@c& (0+255),b
 10248  003474  0E00               	movlw	0
 10249  003476  6F82               	movwf	(memset@n+1)& (0+255),b
 10250  003478  0E02               	movlw	2
 10251  00347A  6F81               	movwf	memset@n& (0+255),b
 10252  00347C  ECB1  F030         	call	_memset	;wreg free
 10253                           
 10254                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10255  003480  0E00               	movlw	0
 10256  003482  0100               	movlb	0	; () banked
 10257  003484  6F7D               	movwf	memset@p1& (0+255),b
 10258  003486  0E04               	movlw	4
 10259  003488  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10260  00348A  0E00               	movlw	0
 10261  00348C  6F80               	movwf	(memset@c+1)& (0+255),b
 10262  00348E  0E00               	movlw	0
 10263  003490  6F7F               	movwf	memset@c& (0+255),b
 10264  003492  0E00               	movlw	0
 10265  003494  6F82               	movwf	(memset@n+1)& (0+255),b
 10266  003496  0E30               	movlw	48
 10267  003498  6F81               	movwf	memset@n& (0+255),b
 10268  00349A  ECB1  F030         	call	_memset	;wreg free
 10269                           
 10270                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10271  00349E  8C65               	bsf	3941,6,c	;volatile
 10272                           
 10273                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10274  0034A0  0E00               	movlw	0
 10275  0034A2  0100               	movlb	0	; () banked
 10276  0034A4  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10277  0034A6                     l12732:
 10278                           
 10279                           ; BSR set to: 0
 10280  0034A6  0E02               	movlw	2
 10281  0034A8  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10282  0034AA  D001               	goto	l1722
 10283  0034AC  D016               	goto	u11300
 10284  0034AE                     l1722:
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;usb_device.c: 2006: {
 10288                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10289                           
 10290                           ; BSR set to: 0
 10291  0034AE  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10292  0034B0  0D01               	mullw	1
 10293  0034B2  0ED2               	movlw	low _ep_data_in
 10294  0034B4  24F3               	addwf	prodl,w,c
 10295  0034B6  6ED9               	movwf	fsr2l,c
 10296  0034B8  0E02               	movlw	high _ep_data_in
 10297  0034BA  20F4               	addwfc	prodh,w,c
 10298  0034BC  6EDA               	movwf	fsr2h,c
 10299  0034BE  0E00               	movlw	0
 10300  0034C0  6EDF               	movwf	indf2,c
 10301                           
 10302                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10303  0034C2  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10304  0034C4  0D01               	mullw	1
 10305  0034C6  0ECF               	movlw	low _ep_data_out
 10306  0034C8  24F3               	addwf	prodl,w,c
 10307  0034CA  6ED9               	movwf	fsr2l,c
 10308  0034CC  0E02               	movlw	high _ep_data_out
 10309  0034CE  20F4               	addwfc	prodh,w,c
 10310  0034D0  6EDA               	movwf	fsr2h,c
 10311  0034D2  0E00               	movlw	0
 10312  0034D4  6EDF               	movwf	indf2,c
 10313                           
 10314                           ; BSR set to: 0
 10315  0034D6  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10316  0034D8  D7E6               	goto	l12732
 10317  0034DA                     u11300:
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;usb_device.c: 2009: }
 10321                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10322                           
 10323                           ; BSR set to: 0
 10324  0034DA  0EF1               	movlw	low _USBAlternateInterface
 10325  0034DC  6F7D               	movwf	memset@p1& (0+255),b
 10326  0034DE  0E02               	movlw	high _USBAlternateInterface
 10327  0034E0  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10328  0034E2  0E00               	movlw	0
 10329  0034E4  6F80               	movwf	(memset@c+1)& (0+255),b
 10330  0034E6  0E00               	movlw	0
 10331  0034E8  6F7F               	movwf	memset@c& (0+255),b
 10332  0034EA  0E00               	movlw	0
 10333  0034EC  6F82               	movwf	(memset@n+1)& (0+255),b
 10334  0034EE  0E02               	movlw	2
 10335  0034F0  6F81               	movwf	memset@n& (0+255),b
 10336  0034F2  ECB1  F030         	call	_memset	;wreg free
 10337                           
 10338                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10339  0034F6  9C65               	bcf	3941,6,c	;volatile
 10340                           
 10341                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10342  0034F8  0E08               	movlw	8
 10343  0034FA  0100               	movlb	0	; () banked
 10344  0034FC  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10345  0034FE  0E04               	movlw	4
 10346  003500  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10350  003502  0E00               	movlw	0
 10351  003504  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10352  003506  0E04               	movlw	4
 10353  003508  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10357  00350A  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10358  00350E  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10362  003512  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10366  003516  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10367  003518  A4D8               	btfss	status,2,c
 10368  00351A  D003               	goto	l1724
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;usb_device.c: 2028: {
 10372                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10373  00351C  0E10               	movlw	16
 10374  00351E  6FCD               	movwf	_USBDeviceState& (0+255),b
 10375                           
 10376                           ;usb_device.c: 2031: }
 10377  003520  0012               	return	
 10378  003522                     l1724:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;usb_device.c: 2032: else
 10382                           ;usb_device.c: 2033: {
 10383                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10384                           
 10385                           ; BSR set to: 0
 10386  003522  0E00               	movlw	0
 10387  003524  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10388  003526  0E01               	movlw	1
 10389  003528  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10390  00352A  0ED6               	movlw	low _USBActiveConfiguration
 10391  00352C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10392  00352E  0E00               	movlw	high _USBActiveConfiguration
 10393  003530  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10394  003532  0E00               	movlw	0
 10395  003534  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10396  003536  0E01               	movlw	1
 10397  003538  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10398  00353A  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10399                           
 10400                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10401  00353E  0E20               	movlw	32
 10402  003540  0100               	movlb	0	; () banked
 10403  003542  6FCD               	movwf	_USBDeviceState& (0+255),b
 10404  003544  0012               	return	
 10405  003546                     __end_of_USBStdSetCfgHandler:
 10406                           	opt stack 0
 10407                           tosu	equ	0xFFF
 10408                           tosh	equ	0xFFE
 10409                           tosl	equ	0xFFD
 10410                           pclath	equ	0xFFA
 10411                           tblptru	equ	0xFF8
 10412                           tblptrh	equ	0xFF7
 10413                           tblptrl	equ	0xFF6
 10414                           tablat	equ	0xFF5
 10415                           prodh	equ	0xFF4
 10416                           prodl	equ	0xFF3
 10417                           intcon	equ	0xFF2
 10418                           intcon2	equ	0xFF1
 10419                           intcon3	equ	0xFF0
 10420                           postinc0	equ	0xFEE
 10421                           plusw0	equ	0xFEB
 10422                           wreg	equ	0xFE8
 10423                           postinc1	equ	0xFE6
 10424                           postdec1	equ	0xFE5
 10425                           fsr1h	equ	0xFE2
 10426                           fsr1l	equ	0xFE1
 10427                           indf2	equ	0xFDF
 10428                           postinc2	equ	0xFDE
 10429                           postdec2	equ	0xFDD
 10430                           plusw2	equ	0xFDB
 10431                           fsr2h	equ	0xFDA
 10432                           fsr2l	equ	0xFD9
 10433                           status	equ	0xFD8
 10434                           
 10435 ;; *************** function _USBStdGetStatusHandler *****************
 10436 ;; Defined at:
 10437 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;		None
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10442 ;;		 -> NULL(0), BDT(48), 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10454 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10455 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10456 ;;Total ram usage:        3 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   11
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_USBCheckStdRequest
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text41
 10467  00423A                     __ptext41:
 10468                           	opt stack 0
 10469  00423A                     _USBStdGetStatusHandler:
 10470                           	opt stack 12
 10471                           
 10472                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;incstack = 0
 10476  00423A  0E00               	movlw	0
 10477  00423C  0104               	movlb	4	; () banked
 10478  00423E  6F38               	movwf	56,b	;volatile
 10479                           
 10480                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10481  004240  0E00               	movlw	0
 10482  004242  6F39               	movwf	57,b	;volatile
 10483                           
 10484                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10485  004244  D03D               	goto	l1743
 10486  004246                     l1744:
 10487                           
 10488                           ; BSR set to: 4
 10489                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10490  004246  0100               	movlb	0	; () banked
 10491  004248  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10492                           
 10493                           ;usb_device.c: 2163: }
 10494                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10495                           
 10496                           ; BSR set to: 4
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;usb_device.c: 2161: {
 10500                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10501                           
 10502                           ;usb_device.c: 2160: if(0 == 1)
 10503  00424A  0101               	movlb	1	; () banked
 10504  00424C  05E4               	decf	_RemoteWakeup& (0+255),w,b
 10505  00424E  A4D8               	btfss	status,2,c
 10506  004250  D042               	goto	l1747
 10507                           
 10508                           ; BSR set to: 1
 10509                           ;usb_device.c: 2166: {
 10510                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10511  004252  0104               	movlb	4	; () banked
 10512  004254  8338               	bsf	56,1,b	;volatile
 10513                           
 10514                           ; BSR set to: 4
 10515                           ;usb_device.c: 2168: }
 10516                           ;usb_device.c: 2169: break;
 10517  004256  D03F               	goto	l1747
 10518  004258                     l1748:
 10519                           
 10520                           ; BSR set to: 4
 10521                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10522  004258  0100               	movlb	0	; () banked
 10523  00425A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10524                           
 10525                           ;usb_device.c: 2172: break;
 10526  00425C  D03C               	goto	l1747
 10527  00425E                     l1749:
 10528                           
 10529                           ; BSR set to: 4
 10530                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10531  00425E  0100               	movlb	0	; () banked
 10532  004260  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10533                           
 10534                           ;usb_device.c: 2178: {
 10535                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10536                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10537  004262  0104               	movlb	4	; () banked
 10538  004264  BF34               	btfsc	52,7,b	;volatile
 10539  004266  D00B               	goto	l1750
 10540                           
 10541                           ; BSR set to: 4
 10542                           ;usb_device.c: 2182: {
 10543                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10544  004268  5134               	movf	52,w,b	;volatile
 10545  00426A  0B0F               	andlw	15
 10546  00426C  0100               	movlb	0	; () banked
 10547  00426E  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10548  004270  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10549  004272  0D02               	mullw	2
 10550  004274  0E0E               	movlw	low _pBDTEntryOut
 10551  004276  24F3               	addwf	prodl,w,c
 10552  004278  6ED9               	movwf	fsr2l,c
 10553  00427A  0E03               	movlw	high _pBDTEntryOut
 10554  00427C  D00B               	goto	L4
 10555  00427E                     l1750:
 10556                           
 10557                           ;usb_device.c: 2185: else
 10558                           ;usb_device.c: 2186: {
 10559                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10560                           
 10561                           ; BSR set to: 0
 10562  00427E  0104               	movlb	4	; () banked
 10563  004280  5134               	movf	52,w,b	;volatile
 10564  004282  0B0F               	andlw	15
 10565  004284  0100               	movlb	0	; () banked
 10566  004286  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10567  004288  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10568  00428A  0D02               	mullw	2
 10569  00428C  0EB6               	movlw	low _pBDTEntryIn
 10570  00428E  24F3               	addwf	prodl,w,c
 10571  004290  6ED9               	movwf	fsr2l,c
 10572  004292  0E00               	movlw	high _pBDTEntryIn
 10573  004294                     L4:
 10574  004294  20F4               	addwfc	prodh,w,c
 10575  004296  6EDA               	movwf	fsr2h,c
 10576  004298  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10577  00429C  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;usb_device.c: 2188: }
 10581                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10582                           
 10583                           ; BSR set to: 0
 10584  0042A0  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10585  0042A4  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10586  0042A8  AEDF               	btfss	indf2,7,c
 10587  0042AA  D015               	goto	l1747
 10588                           
 10589                           ; BSR set to: 0
 10590  0042AC  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10591  0042B0  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10592  0042B4  A4DF               	btfss	indf2,2,c
 10593  0042B6  D00F               	goto	l1747
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10597  0042B8  0E01               	movlw	1
 10598  0042BA  0104               	movlb	4	; () banked
 10599  0042BC  6F38               	movwf	56,b	;volatile
 10600                           
 10601                           ; BSR set to: 4
 10602                           ;usb_device.c: 2193: }
 10603                           ;usb_device.c: 2194: }
 10604                           
 10605                           ; BSR set to: 4
 10606                           ;usb_device.c: 2192: break;
 10607  0042BE  D00B               	goto	l1747
 10608  0042C0                     l1743:
 10609                           
 10610                           ; BSR set to: 4
 10611                           
 10612                           ; BSR set to: 4
 10613  0042C0  5130               	movf	48,w,b	;volatile
 10614  0042C2  0B1F               	andlw	31
 10615                           
 10616                           ; Switch size 1, requested type "space"
 10617                           ; Number of cases is 3, Range of values is 0 to 2
 10618                           ; switch strategies available:
 10619                           ; Name         Instructions Cycles
 10620                           ; simple_byte           10     6 (average)
 10621                           ;	Chosen strategy is simple_byte
 10622  0042C4  0A00               	xorlw	0	; case 0
 10623  0042C6  B4D8               	btfsc	status,2,c
 10624  0042C8  D7BE               	goto	l1744
 10625  0042CA  0A01               	xorlw	1	; case 1
 10626  0042CC  B4D8               	btfsc	status,2,c
 10627  0042CE  D7C4               	goto	l1748
 10628  0042D0  0A03               	xorlw	3	; case 2
 10629  0042D2  B4D8               	btfsc	status,2,c
 10630  0042D4  D7C4               	goto	l1749
 10631  0042D6                     l1747:
 10632                           
 10633                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10634  0042D6  0100               	movlb	0	; () banked
 10635  0042D8  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10636  0042DA  0012               	return	
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;usb_device.c: 2197: {
 10640                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10641  0042DC  0E38               	movlw	56
 10642  0042DE  6FB0               	movwf	_inPipes& (0+255),b
 10643  0042E0  0E04               	movlw	4
 10644  0042E2  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10648  0042E4  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10652  0042E6  0E02               	movlw	2
 10653  0042E8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10654  0042EA  0012               	return	
 10655  0042EC                     __end_of_USBStdGetStatusHandler:
 10656                           	opt stack 0
 10657                           tosu	equ	0xFFF
 10658                           tosh	equ	0xFFE
 10659                           tosl	equ	0xFFD
 10660                           pclath	equ	0xFFA
 10661                           tblptru	equ	0xFF8
 10662                           tblptrh	equ	0xFF7
 10663                           tblptrl	equ	0xFF6
 10664                           tablat	equ	0xFF5
 10665                           prodh	equ	0xFF4
 10666                           prodl	equ	0xFF3
 10667                           intcon	equ	0xFF2
 10668                           intcon2	equ	0xFF1
 10669                           intcon3	equ	0xFF0
 10670                           postinc0	equ	0xFEE
 10671                           plusw0	equ	0xFEB
 10672                           wreg	equ	0xFE8
 10673                           postinc1	equ	0xFE6
 10674                           postdec1	equ	0xFE5
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           plusw2	equ	0xFDB
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function _USBStdGetDscHandler *****************
 10686 ;; Defined at:
 10687 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;Total ram usage:        2 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:   11
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_USBCheckStdRequest
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text42
 10716  002E12                     __ptext42:
 10717                           	opt stack 0
 10718  002E12                     _USBStdGetDscHandler:
 10719                           	opt stack 12
 10720                           
 10721                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;incstack = 0
 10725  002E12  0E80               	movlw	128
 10726  002E14  0104               	movlb	4	; () banked
 10727  002E16  1930               	xorwf	48,w,b	;volatile
 10728  002E18  A4D8               	btfss	status,2,c
 10729  002E1A  0012               	return	
 10730                           
 10731                           ; BSR set to: 4
 10732                           ;usb_device.c: 2064: {
 10733                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10734  002E1C  0EC0               	movlw	192
 10735  002E1E  0100               	movlb	0	; () banked
 10736  002E20  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10737                           
 10738                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10739  002E22  D082               	goto	l1730
 10740  002E24                     
 10741                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10742                           
 10743                           ; BSR set to: 0
 10744  002E24  0E48               	movlw	low _device_dsc
 10745  002E26  0100               	movlb	0	; () banked
 10746  002E28  6FB0               	movwf	_inPipes& (0+255),b
 10747  002E2A  0EFE               	movlw	high _device_dsc
 10748  002E2C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10752  002E2E  0E00               	movlw	0
 10753  002E30  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10754  002E32  0E12               	movlw	18
 10755  002E34  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10756                           
 10757                           ;usb_device.c: 2076: break;
 10758  002E36  0012               	return	
 10759  002E38                     
 10760                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10761                           
 10762                           ; BSR set to: 0
 10763  002E38  0104               	movlb	4	; () banked
 10764  002E3A  5132               	movf	50,w,b	;volatile
 10765  002E3C  A4D8               	btfss	status,2,c
 10766  002E3E  D040               	goto	l1734
 10767                           
 10768                           ; BSR set to: 4
 10769                           ;usb_device.c: 2082: {
 10770                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10771  002E40  5132               	movf	50,w,b	;volatile
 10772  002E42  0D02               	mullw	2
 10773  002E44  0E2D               	movlw	low _USB_CD_Ptr
 10774  002E46  24F3               	addwf	prodl,w,c
 10775  002E48  6EF6               	movwf	tblptrl,c
 10776  002E4A  0EFC               	movlw	high _USB_CD_Ptr
 10777  002E4C  20F4               	addwfc	prodh,w,c
 10778  002E4E  6EF7               	movwf	tblptrh,c
 10779  002E50                     	if	0	;There are less than 3 active tblptr bytes
 10780  002E50                     	endif
 10781  002E50  0009               	tblrd		*+
 10782  002E52  CFF5 F0B0          	movff	tablat,_inPipes
 10783  002E56  000A               	tblrd		*-
 10784  002E58  CFF5 F0B1          	movff	tablat,_inPipes+1
 10785                           
 10786                           ; BSR set to: 4
 10787                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10788  002E5C  0E02               	movlw	2
 10789  002E5E  0100               	movlb	0	; () banked
 10790  002E60  25B0               	addwf	_inPipes& (0+255),w,b
 10791  002E62  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10792  002E64  0E00               	movlw	0
 10793  002E66  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10794  002E68  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10795  002E6A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10796  002E6E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10797  002E72  6AF8               	clrf	tblptru,c
 10798  002E74  0E0E               	movlw	(high __ramtop+-1)
 10799  002E76  64F7               	cpfsgt	tblptrh,c
 10800  002E78  D003               	bra	u11347
 10801  002E7A  0008               	tblrd		*
 10802  002E7C  50F5               	movf	tablat,w,c
 10803  002E7E  D005               	bra	u11340
 10804  002E80                     u11347:
 10805  002E80  CFF6 FFE9          	movff	tblptrl,fsr0l
 10806  002E84  CFF7 FFEA          	movff	tblptrh,fsr0h
 10807  002E88  50EF               	movf	indf0,w,c
 10808  002E8A                     u11340:
 10809  002E8A  0100               	movlb	0	; () banked
 10810  002E8C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10814  002E8E  0E03               	movlw	3
 10815  002E90  25B0               	addwf	_inPipes& (0+255),w,b
 10816  002E92  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10817  002E94  0E00               	movlw	0
 10818  002E96  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10819  002E98  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10820  002E9A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10821  002E9E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10822  002EA2  6AF8               	clrf	tblptru,c
 10823  002EA4  0E0E               	movlw	(high __ramtop+-1)
 10824  002EA6  64F7               	cpfsgt	tblptrh,c
 10825  002EA8  D003               	bra	u11357
 10826  002EAA  0008               	tblrd		*
 10827  002EAC  50F5               	movf	tablat,w,c
 10828  002EAE  D005               	bra	u11350
 10829  002EB0                     u11357:
 10830  002EB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10831  002EB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10832  002EB8  50EF               	movf	indf0,w,c
 10833  002EBA                     u11350:
 10834  002EBA  0100               	movlb	0	; () banked
 10835  002EBC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10836                           
 10837                           ;usb_device.c: 2094: }
 10838  002EBE  0012               	return	
 10839  002EC0                     l1734:
 10840                           
 10841                           ;usb_device.c: 2095: else
 10842                           ;usb_device.c: 2096: {
 10843                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10844                           
 10845                           ; BSR set to: 0
 10846  002EC0  0E00               	movlw	0
 10847  002EC2  0100               	movlb	0	; () banked
 10848  002EC4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;usb_device.c: 2098: }
 10852                           ;usb_device.c: 2099: break;
 10853  002EC6  0012               	return	
 10854  002EC8                     
 10855                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10856                           
 10857                           ; BSR set to: 0
 10858  002EC8  0E03               	movlw	3
 10859  002ECA  0104               	movlb	4	; () banked
 10860  002ECC  6132               	cpfslt	50,b	;volatile
 10861  002ECE  D024               	goto	l1737
 10862                           
 10863                           ; BSR set to: 4
 10864                           ;usb_device.c: 2105: {
 10865                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10866  002ED0  5132               	movf	50,w,b	;volatile
 10867  002ED2  0D02               	mullw	2
 10868  002ED4  0E1D               	movlw	low _USB_SD_Ptr
 10869  002ED6  24F3               	addwf	prodl,w,c
 10870  002ED8  6EF6               	movwf	tblptrl,c
 10871  002EDA  0EFC               	movlw	high _USB_SD_Ptr
 10872  002EDC  20F4               	addwfc	prodh,w,c
 10873  002EDE  6EF7               	movwf	tblptrh,c
 10874  002EE0                     	if	0	;There are less than 3 active tblptr bytes
 10875  002EE0                     	endif
 10876  002EE0  0009               	tblrd		*+
 10877  002EE2  CFF5 F0B0          	movff	tablat,_inPipes
 10878  002EE6  000A               	tblrd		*-
 10879  002EE8  CFF5 F0B1          	movff	tablat,_inPipes+1
 10880                           
 10881                           ; BSR set to: 4
 10882                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10883  002EEC  C0B0  FFF6         	movff	_inPipes,tblptrl
 10884  002EF0  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10885  002EF4  6AF8               	clrf	tblptru,c
 10886  002EF6  0E0E               	movlw	(high __ramtop+-1)
 10887  002EF8  64F7               	cpfsgt	tblptrh,c
 10888  002EFA  D003               	bra	u11377
 10889  002EFC  0008               	tblrd		*
 10890  002EFE  50F5               	movf	tablat,w,c
 10891  002F00  D005               	bra	u11370
 10892  002F02                     u11377:
 10893  002F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 10894  002F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 10895  002F0A  50EF               	movf	indf0,w,c
 10896  002F0C                     u11370:
 10897  002F0C  0100               	movlb	0	; () banked
 10898  002F0E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10899  002F10  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10900  002F12  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10901  002F14  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10902                           
 10903                           ;usb_device.c: 2110: }
 10904  002F16  0012               	return	
 10905  002F18                     l1737:
 10906                           
 10907                           ;usb_device.c: 2120: else
 10908                           ;usb_device.c: 2121: {
 10909                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10910                           
 10911                           ; BSR set to: 0
 10912  002F18  0E00               	movlw	0
 10913  002F1A  0100               	movlb	0	; () banked
 10914  002F1C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;usb_device.c: 2123: }
 10918                           ;usb_device.c: 2124: break;
 10919  002F1E  0012               	return	
 10920  002F20                     
 10921                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10922                           
 10923                           ; BSR set to: 0
 10924  002F20  0E00               	movlw	0
 10925  002F22  0100               	movlb	0	; () banked
 10926  002F24  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;usb_device.c: 2128: }
 10930                           
 10931                           ;usb_device.c: 2127: break;
 10932  002F26  0012               	return	
 10933  002F28                     l1730:
 10934                           
 10935                           ; BSR set to: 0
 10936                           
 10937                           ; BSR set to: 0
 10938  002F28  0104               	movlb	4	; () banked
 10939  002F2A  5133               	movf	51,w,b	;volatile
 10940                           
 10941                           ; Switch size 1, requested type "space"
 10942                           ; Number of cases is 3, Range of values is 1 to 3
 10943                           ; switch strategies available:
 10944                           ; Name         Instructions Cycles
 10945                           ; simple_byte           10     6 (average)
 10946                           ;	Chosen strategy is simple_byte
 10947  002F2C  0A01               	xorlw	1	; case 1
 10948  002F2E  B4D8               	btfsc	status,2,c
 10949  002F30  D779               	goto	l1731
 10950  002F32  0A03               	xorlw	3	; case 2
 10951  002F34  B4D8               	btfsc	status,2,c
 10952  002F36  D780               	goto	l1733
 10953  002F38  0A01               	xorlw	1	; case 3
 10954  002F3A  B4D8               	btfsc	status,2,c
 10955  002F3C  D7C5               	goto	l1736
 10956  002F3E  D7F0               	goto	l1739
 10957  002F40                     __end_of_USBStdGetDscHandler:
 10958                           	opt stack 0
 10959                           tosu	equ	0xFFF
 10960                           tosh	equ	0xFFE
 10961                           tosl	equ	0xFFD
 10962                           pclath	equ	0xFFA
 10963                           tblptru	equ	0xFF8
 10964                           tblptrh	equ	0xFF7
 10965                           tblptrl	equ	0xFF6
 10966                           tablat	equ	0xFF5
 10967                           prodh	equ	0xFF4
 10968                           prodl	equ	0xFF3
 10969                           intcon	equ	0xFF2
 10970                           intcon2	equ	0xFF1
 10971                           intcon3	equ	0xFF0
 10972                           indf0	equ	0xFEF
 10973                           postinc0	equ	0xFEE
 10974                           plusw0	equ	0xFEB
 10975                           fsr0h	equ	0xFEA
 10976                           fsr0l	equ	0xFE9
 10977                           wreg	equ	0xFE8
 10978                           postinc1	equ	0xFE6
 10979                           postdec1	equ	0xFE5
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           plusw2	equ	0xFDB
 10986                           fsr2h	equ	0xFDA
 10987                           fsr2l	equ	0xFD9
 10988                           status	equ	0xFD8
 10989                           
 10990 ;; *************** function _USBStdFeatureReqHandler *****************
 10991 ;; Defined at:
 10992 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;		None
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10997 ;;		 -> NULL(0), BDT(48), 
 10998 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10999 ;;		 -> UEP0(1), 
 11000 ;;  current_ep_d    1   52[BANK0 ] struct .
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11011 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11013 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;Total ram usage:        6 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:   15
 11017 ;; This function calls:
 11018 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11019 ;; This function is called by:
 11020 ;;		_USBCheckStdRequest
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text43
 11025  00135A                     __ptext43:
 11026                           	opt stack 0
 11027  00135A                     _USBStdFeatureReqHandler:
 11028                           	opt stack 8
 11029                           
 11030                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11031                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11032                           ;usb_device.c: 2778: unsigned char* pUEP;
 11033                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11034                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11035                           
 11036                           ;incstack = 0
 11037  00135A  0104               	movlb	4	; () banked
 11038  00135C  0532               	decf	50,w,b	;volatile
 11039  00135E  A4D8               	btfss	status,2,c
 11040  001360  D011               	goto	l1823
 11041                           
 11042                           ; BSR set to: 4
 11043  001362  5130               	movf	48,w,b	;volatile
 11044  001364  0B1F               	andlw	31
 11045  001366  0900               	iorlw	0
 11046  001368  A4D8               	btfss	status,2,c
 11047  00136A  D00C               	goto	l1823
 11048                           
 11049                           ; BSR set to: 4
 11050                           ;usb_device.c: 2818: {
 11051                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11052  00136C  0100               	movlb	0	; () banked
 11053  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11057  001370  0E03               	movlw	3
 11058  001372  0104               	movlb	4	; () banked
 11059  001374  1931               	xorwf	49,w,b	;volatile
 11060  001376  A4D8               	btfss	status,2,c
 11061  001378  D002               	goto	l1822
 11062                           
 11063                           ; BSR set to: 4
 11064                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11065  00137A  0E01               	movlw	1
 11066  00137C  D001               	goto	L5
 11067  00137E                     l1822:
 11068                           
 11069                           ;usb_device.c: 2822: else
 11070                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11071                           
 11072                           ; BSR set to: 1
 11073  00137E  0E00               	movlw	0
 11074  001380                     L5:
 11075  001380  0101               	movlb	1	; () banked
 11076  001382  6FE4               	movwf	_RemoteWakeup& (0+255),b
 11077  001384                     l1823:
 11078                           
 11079                           ;usb_device.c: 2824: }
 11080                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11081                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11082                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11083                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11084                           
 11085                           ; BSR set to: 1
 11086  001384  0104               	movlb	4	; () banked
 11087  001386  5132               	movf	50,w,b	;volatile
 11088  001388  A4D8               	btfss	status,2,c
 11089  00138A  0012               	return	
 11090                           
 11091                           ; BSR set to: 4
 11092  00138C  5130               	movf	48,w,b	;volatile
 11093  00138E  0B1F               	andlw	31
 11094  001390  0A02               	xorlw	2
 11095  001392  A4D8               	btfss	status,2,c
 11096  001394  0012               	return	
 11097                           
 11098                           ; BSR set to: 4
 11099  001396  5134               	movf	52,w,b	;volatile
 11100  001398  0B0F               	andlw	15
 11101  00139A  0900               	iorlw	0
 11102  00139C  B4D8               	btfsc	status,2,c
 11103  00139E  0012               	return	
 11104                           
 11105                           ; BSR set to: 4
 11106  0013A0  5134               	movf	52,w,b	;volatile
 11107  0013A2  0B0F               	andlw	15
 11108  0013A4  0100               	movlb	0	; () banked
 11109  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11110  0013A8  0E03               	movlw	3
 11111  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11112  0013AC  0012               	return	
 11113                           
 11114                           ; BSR set to: 0
 11115  0013AE  0E20               	movlw	32
 11116  0013B0  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 11117  0013B2  A4D8               	btfss	status,2,c
 11118  0013B4  0012               	return	
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;usb_device.c: 2831: {
 11122                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11123  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11124                           
 11125                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11126  0013B8  0104               	movlb	4	; () banked
 11127  0013BA  BF34               	btfsc	52,7,b	;volatile
 11128  0013BC  D01C               	goto	l1825
 11129                           
 11130                           ; BSR set to: 4
 11131                           ;usb_device.c: 2838: {
 11132                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11133  0013BE  5134               	movf	52,w,b	;volatile
 11134  0013C0  0B0F               	andlw	15
 11135  0013C2  0100               	movlb	0	; () banked
 11136  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11137  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11138  0013C8  0D02               	mullw	2
 11139  0013CA  0E0E               	movlw	low _pBDTEntryOut
 11140  0013CC  24F3               	addwf	prodl,w,c
 11141  0013CE  6ED9               	movwf	fsr2l,c
 11142  0013D0  0E03               	movlw	high _pBDTEntryOut
 11143  0013D2  20F4               	addwfc	prodh,w,c
 11144  0013D4  6EDA               	movwf	fsr2h,c
 11145  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11146  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11147                           
 11148                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11149  0013DE  0104               	movlb	4	; () banked
 11150  0013E0  5134               	movf	52,w,b	;volatile
 11151  0013E2  0B0F               	andlw	15
 11152  0013E4  0100               	movlb	0	; () banked
 11153  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11154  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11155  0013EA  0D01               	mullw	1
 11156  0013EC  0ECF               	movlw	low _ep_data_out
 11157  0013EE  24F3               	addwf	prodl,w,c
 11158  0013F0  6ED9               	movwf	fsr2l,c
 11159  0013F2  0E02               	movlw	high _ep_data_out
 11160  0013F4  D01C               	goto	L6
 11161  0013F6                     l1825:
 11162                           
 11163                           ;usb_device.c: 2842: else
 11164                           ;usb_device.c: 2843: {
 11165                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11166                           
 11167                           ; BSR set to: 0
 11168  0013F6  0104               	movlb	4	; () banked
 11169  0013F8  5134               	movf	52,w,b	;volatile
 11170  0013FA  0B0F               	andlw	15
 11171  0013FC  0100               	movlb	0	; () banked
 11172  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11173  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11174  001402  0D02               	mullw	2
 11175  001404  0EB6               	movlw	low _pBDTEntryIn
 11176  001406  24F3               	addwf	prodl,w,c
 11177  001408  6ED9               	movwf	fsr2l,c
 11178  00140A  0E00               	movlw	high _pBDTEntryIn
 11179  00140C  20F4               	addwfc	prodh,w,c
 11180  00140E  6EDA               	movwf	fsr2h,c
 11181  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11182  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11183                           
 11184                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11185  001418  0104               	movlb	4	; () banked
 11186  00141A  5134               	movf	52,w,b	;volatile
 11187  00141C  0B0F               	andlw	15
 11188  00141E  0100               	movlb	0	; () banked
 11189  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11190  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11191  001424  0D01               	mullw	1
 11192  001426  0ED2               	movlw	low _ep_data_in
 11193  001428  24F3               	addwf	prodl,w,c
 11194  00142A  6ED9               	movwf	fsr2l,c
 11195  00142C  0E02               	movlw	high _ep_data_in
 11196  00142E                     L6:
 11197  00142E  20F4               	addwfc	prodh,w,c
 11198  001430  6EDA               	movwf	fsr2h,c
 11199  001432  50DF               	movf	indf2,w,c
 11200  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;usb_device.c: 2846: }
 11204                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11205                           
 11206                           ; BSR set to: 0
 11207  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11208  001438  D002               	goto	l1827
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;usb_device.c: 2853: {
 11212                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11213  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11214                           
 11215                           ;usb_device.c: 2855: }
 11216  00143C  D001               	goto	l1828
 11217  00143E                     l1827:
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;usb_device.c: 2856: else
 11221                           ;usb_device.c: 2857: {
 11222                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11223                           
 11224                           ; BSR set to: 0
 11225  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11226  001440                     l1828:
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;usb_device.c: 2859: }
 11230                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11231                           
 11232                           ; BSR set to: 0
 11233  001440  0104               	movlb	4	; () banked
 11234  001442  BF34               	btfsc	52,7,b	;volatile
 11235  001444  D00B               	goto	l1829
 11236                           
 11237                           ; BSR set to: 4
 11238                           ;usb_device.c: 2865: {
 11239                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11240  001446  5134               	movf	52,w,b	;volatile
 11241  001448  0B0F               	andlw	15
 11242  00144A  0100               	movlb	0	; () banked
 11243  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11244  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11245  001450  0D02               	mullw	2
 11246  001452  0E0E               	movlw	low _pBDTEntryOut
 11247  001454  24F3               	addwf	prodl,w,c
 11248  001456  6ED9               	movwf	fsr2l,c
 11249  001458  0E03               	movlw	high _pBDTEntryOut
 11250  00145A  D00B               	goto	L7
 11251  00145C                     l1829:
 11252                           
 11253                           ;usb_device.c: 2868: else
 11254                           ;usb_device.c: 2869: {
 11255                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11256                           
 11257                           ; BSR set to: 0
 11258  00145C  0104               	movlb	4	; () banked
 11259  00145E  5134               	movf	52,w,b	;volatile
 11260  001460  0B0F               	andlw	15
 11261  001462  0100               	movlb	0	; () banked
 11262  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11263  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11264  001468  0D02               	mullw	2
 11265  00146A  0EB6               	movlw	low _pBDTEntryIn
 11266  00146C  24F3               	addwf	prodl,w,c
 11267  00146E  6ED9               	movwf	fsr2l,c
 11268  001470  0E00               	movlw	high _pBDTEntryIn
 11269  001472                     L7:
 11270  001472  20F4               	addwfc	prodh,w,c
 11271  001474  6EDA               	movwf	fsr2h,c
 11272  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11273  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;usb_device.c: 2871: }
 11277                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11278                           
 11279                           ; BSR set to: 0
 11280  00147E  0E03               	movlw	3
 11281  001480  0104               	movlb	4	; () banked
 11282  001482  1931               	xorwf	49,w,b	;volatile
 11283  001484  A4D8               	btfss	status,2,c
 11284  001486  D031               	goto	l1831
 11285                           
 11286                           ; BSR set to: 4
 11287                           ;usb_device.c: 2875: {
 11288                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11289  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11290  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11291  001490  0100               	movlb	0	; () banked
 11292  001492  AEDF               	btfss	indf2,7,c
 11293  001494  D01D               	goto	l1834
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;usb_device.c: 2877: {
 11297                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11298  001496  0104               	movlb	4	; () banked
 11299  001498  BF34               	btfsc	52,7,b	;volatile
 11300  00149A  D00B               	goto	l1833
 11301                           
 11302                           ; BSR set to: 4
 11303                           ;usb_device.c: 2881: {
 11304                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11305  00149C  5134               	movf	52,w,b	;volatile
 11306  00149E  0B0F               	andlw	15
 11307  0014A0  0100               	movlb	0	; () banked
 11308  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11309  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11310  0014A6  0D01               	mullw	1
 11311  0014A8  0ECF               	movlw	low _ep_data_out
 11312  0014AA  24F3               	addwf	prodl,w,c
 11313  0014AC  6ED9               	movwf	fsr2l,c
 11314  0014AE  0E02               	movlw	high _ep_data_out
 11315  0014B0  D00B               	goto	L8
 11316  0014B2                     l1833:
 11317                           
 11318                           ;usb_device.c: 2884: else
 11319                           ;usb_device.c: 2885: {
 11320                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11321                           
 11322                           ; BSR set to: 2
 11323  0014B2  0104               	movlb	4	; () banked
 11324  0014B4  5134               	movf	52,w,b	;volatile
 11325  0014B6  0B0F               	andlw	15
 11326  0014B8  0100               	movlb	0	; () banked
 11327  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11328  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11329  0014BE  0D01               	mullw	1
 11330  0014C0  0ED2               	movlw	low _ep_data_in
 11331  0014C2  24F3               	addwf	prodl,w,c
 11332  0014C4  6ED9               	movwf	fsr2l,c
 11333  0014C6  0E02               	movlw	high _ep_data_in
 11334  0014C8                     L8:
 11335  0014C8  20F4               	addwfc	prodh,w,c
 11336  0014CA  6EDA               	movwf	fsr2h,c
 11337  0014CC  0102               	movlb	2	; () banked
 11338  0014CE  82DF               	bsf	indf2,1,c
 11339  0014D0                     l1834:
 11340                           
 11341                           ;usb_device.c: 2887: }
 11342                           ;usb_device.c: 2888: }
 11343                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11344                           
 11345                           ; BSR set to: 2
 11346                           
 11347                           ; BSR set to: 2
 11348  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11349  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11350  0014D8  0E00               	movlw	0
 11351  0014DA  84DB               	bsf	plusw2,2,c
 11352                           
 11353                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11354  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11355  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11356  0014E4  0E00               	movlw	0
 11357  0014E6  8EDB               	bsf	plusw2,7,c
 11358                           
 11359                           ;usb_device.c: 2893: }
 11360  0014E8  0012               	return	
 11361  0014EA                     l1831:
 11362                           
 11363                           ;usb_device.c: 2894: else
 11364                           ;usb_device.c: 2895: {
 11365                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11366  0014EA  0E04               	movlw	4
 11367  0014EC  0100               	movlb	0	; () banked
 11368  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11372  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11373  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11374  0014F8  AEDF               	btfss	indf2,7,c
 11375  0014FA  D01B               	goto	l1836
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;usb_device.c: 2902: {
 11379                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11380  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11381  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11382  001504  0E7F               	movlw	127
 11383  001506  16DF               	andwf	indf2,f,c
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11387  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11388  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11389  001510  0E00               	movlw	0
 11390  001512  8CDB               	bsf	plusw2,6,c
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11394  001514  0E00               	movlw	0
 11395  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11396  001518  0E05               	movlw	5
 11397  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11398  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11399  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11400  001524  0E00               	movlw	0
 11401  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11402  001528  0E02               	movlw	2
 11403  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11404  00152C  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11405                           
 11406                           ;usb_device.c: 2908: }
 11407  001530  D006               	goto	l1837
 11408  001532                     l1836:
 11409                           
 11410                           ;usb_device.c: 2909: else
 11411                           ;usb_device.c: 2910: {
 11412                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11413  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11414  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11415  00153A  0E00               	movlw	0
 11416  00153C  8CDB               	bsf	plusw2,6,c
 11417  00153E                     l1837:
 11418                           
 11419                           ;usb_device.c: 2913: }
 11420                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11421  00153E  0E04               	movlw	4
 11422  001540  0100               	movlb	0	; () banked
 11423  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11427  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11428  001546  D006               	goto	u11590
 11429                           
 11430                           ; BSR set to: 0
 11431  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11432  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11433  001550  AEDF               	btfss	indf2,7,c
 11434  001552  D033               	goto	l1838
 11435  001554                     u11590:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;usb_device.c: 2924: {
 11439                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11440  001554  0104               	movlb	4	; () banked
 11441  001556  BF34               	btfsc	52,7,b	;volatile
 11442  001558  D00B               	goto	l1841
 11443                           
 11444                           ; BSR set to: 4
 11445                           ;usb_device.c: 2926: {
 11446                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11447  00155A  5134               	movf	52,w,b	;volatile
 11448  00155C  0B0F               	andlw	15
 11449  00155E  0100               	movlb	0	; () banked
 11450  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11451  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11452  001564  0D01               	mullw	1
 11453  001566  0ECF               	movlw	low _ep_data_out
 11454  001568  24F3               	addwf	prodl,w,c
 11455  00156A  6ED9               	movwf	fsr2l,c
 11456  00156C  0E02               	movlw	high _ep_data_out
 11457  00156E  D00B               	goto	L9
 11458  001570                     l1841:
 11459                           
 11460                           ;usb_device.c: 2929: else
 11461                           ;usb_device.c: 2930: {
 11462                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11463                           
 11464                           ; BSR set to: 2
 11465  001570  0104               	movlb	4	; () banked
 11466  001572  5134               	movf	52,w,b	;volatile
 11467  001574  0B0F               	andlw	15
 11468  001576  0100               	movlb	0	; () banked
 11469  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11470  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11471  00157C  0D01               	mullw	1
 11472  00157E  0ED2               	movlw	low _ep_data_in
 11473  001580  24F3               	addwf	prodl,w,c
 11474  001582  6ED9               	movwf	fsr2l,c
 11475  001584  0E02               	movlw	high _ep_data_in
 11476  001586                     L9:
 11477  001586  20F4               	addwfc	prodh,w,c
 11478  001588  6EDA               	movwf	fsr2h,c
 11479  00158A  0102               	movlb	2	; () banked
 11480  00158C  92DF               	bcf	indf2,1,c
 11481                           
 11482                           ; BSR set to: 2
 11483                           ;usb_device.c: 2932: }
 11484                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11485                           
 11486                           ; BSR set to: 2
 11487  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11488  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11489  001596  0E3B               	movlw	59
 11490  001598  16DF               	andwf	indf2,f,c
 11491                           
 11492                           ; BSR set to: 2
 11493                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11494  00159A  0E00               	movlw	0
 11495  00159C  0100               	movlb	0	; () banked
 11496  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11497  0015A0  0E05               	movlw	5
 11498  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11499  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11500  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11501  0015AC  0E00               	movlw	0
 11502  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11503  0015B0  0E02               	movlw	2
 11504  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11505  0015B4  EC52  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11506                           
 11507                           ;usb_device.c: 2938: }
 11508  0015B8  D006               	goto	l1843
 11509  0015BA                     l1838:
 11510                           
 11511                           ;usb_device.c: 2939: else
 11512                           ;usb_device.c: 2940: {
 11513                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11514  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11515  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11516  0015C2  0E3B               	movlw	59
 11517  0015C4  16DF               	andwf	indf2,f,c
 11518  0015C6                     l1843:
 11519                           
 11520                           ;usb_device.c: 2943: }
 11521                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11522  0015C6  0104               	movlb	4	; () banked
 11523  0015C8  5134               	movf	52,w,b	;volatile
 11524  0015CA  0B0F               	andlw	15
 11525  0015CC  0100               	movlb	0	; () banked
 11526  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11527  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11528  0015D2  0D01               	mullw	1
 11529  0015D4  0E26               	movlw	38
 11530  0015D6  24F3               	addwf	prodl,w,c
 11531  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11532  0015DA  0E0F               	movlw	15
 11533  0015DC  20F4               	addwfc	prodh,w,c
 11534  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11538  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11539  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11540  0015E8  0EFE               	movlw	254
 11541  0015EA  16DF               	andwf	indf2,f,c
 11542                           
 11543                           ; BSR set to: 0
 11544  0015EC  0012               	return	
 11545  0015EE                     __end_of_USBStdFeatureReqHandler:
 11546                           	opt stack 0
 11547                           tosu	equ	0xFFF
 11548                           tosh	equ	0xFFE
 11549                           tosl	equ	0xFFD
 11550                           pclath	equ	0xFFA
 11551                           tblptru	equ	0xFF8
 11552                           tblptrh	equ	0xFF7
 11553                           tblptrl	equ	0xFF6
 11554                           tablat	equ	0xFF5
 11555                           prodh	equ	0xFF4
 11556                           prodl	equ	0xFF3
 11557                           intcon	equ	0xFF2
 11558                           intcon2	equ	0xFF1
 11559                           intcon3	equ	0xFF0
 11560                           indf0	equ	0xFEF
 11561                           postinc0	equ	0xFEE
 11562                           plusw0	equ	0xFEB
 11563                           fsr0h	equ	0xFEA
 11564                           fsr0l	equ	0xFE9
 11565                           wreg	equ	0xFE8
 11566                           postinc1	equ	0xFE6
 11567                           postdec1	equ	0xFE5
 11568                           fsr1h	equ	0xFE2
 11569                           fsr1l	equ	0xFE1
 11570                           indf2	equ	0xFDF
 11571                           postinc2	equ	0xFDE
 11572                           postdec2	equ	0xFDD
 11573                           plusw2	equ	0xFDB
 11574                           fsr2h	equ	0xFDA
 11575                           fsr2l	equ	0xFD9
 11576                           status	equ	0xFD8
 11577                           
 11578 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11579 ;; Defined at:
 11580 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  event           2   41[BANK0 ] enum E8362
 11583 ;;  pdata           2   43[BANK0 ] PTR void 
 11584 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11585 ;;  size            2   45[BANK0 ] unsigned int 
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      unsigned char 
 11590 ;; Registers used:
 11591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11597 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11600 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11601 ;;Total ram usage:        8 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; Hardware stack levels required when called:   14
 11604 ;; This function calls:
 11605 ;;		_CDCInitEP
 11606 ;;		_USBCheckCDCRequest
 11607 ;; This function is called by:
 11608 ;;		_USBDeviceTasks
 11609 ;;		_USBStdSetCfgHandler
 11610 ;;		_USBSuspend
 11611 ;;		_USBWakeFromSuspend
 11612 ;;		_USBCtrlTrfSetupHandler
 11613 ;;		_USBCheckStdRequest
 11614 ;;		_USBStdFeatureReqHandler
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text44
 11619  0054A4                     __ptext44:
 11620                           	opt stack 0
 11621  0054A4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11622                           	opt stack 12
 11623                           
 11624                           ;usb_device_mgr.c: 106: switch( (int) event )
 11625                           
 11626                           ;incstack = 0
 11627  0054A4  D006               	goto	l1997
 11628  0054A6                     
 11629                           ;usb_device_mgr.c: 134: CDCInitEP();
 11630  0054A6  ECE8  F028         	call	_CDCInitEP	;wreg free
 11631                           
 11632                           ;usb_device_mgr.c: 142: break;
 11633                           
 11634                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11635                           
 11636                           ;usb_device_mgr.c: 139: break;
 11637  0054AA  0012               	return	
 11638  0054AC                     
 11639                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11640  0054AC  EC76  F021         	call	_USBCheckCDCRequest	;wreg free
 11641                           
 11642                           ;usb_device_mgr.c: 163: }
 11643                           
 11644                           ;usb_device_mgr.c: 162: break;
 11645                           
 11646                           ;usb_device_mgr.c: 161: default:
 11647                           
 11648                           ;usb_device_mgr.c: 159: break;
 11649                           
 11650                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11651                           
 11652                           ;usb_device_mgr.c: 156: break;
 11653                           
 11654                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11655                           
 11656                           ;usb_device_mgr.c: 153: break;
 11657  0054B0  0012               	return	
 11658  0054B2                     l1997:
 11659  0054B2  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11660  0054B6  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11661                           
 11662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11663                           ; Switch size 1, requested type "space"
 11664                           ; Number of cases is 2, Range of values is 0 to 127
 11665                           ; switch strategies available:
 11666                           ; Name         Instructions Cycles
 11667                           ; simple_byte            7     4 (average)
 11668                           ;	Chosen strategy is simple_byte
 11669  0054BA  0100               	movlb	0	; () banked
 11670  0054BC  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11671  0054BE  0A00               	xorlw	0	; case 0
 11672  0054C0  B4D8               	btfsc	status,2,c
 11673  0054C2  D004               	goto	l16314
 11674  0054C4  0A7F               	xorlw	127	; case 127
 11675  0054C6  A4D8               	btfss	status,2,c
 11676  0054C8  0012               	return	
 11677  0054CA  D018               	goto	l16316
 11678  0054CC                     l16314:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ; Switch size 1, requested type "space"
 11682                           ; Number of cases is 8, Range of values is 1 to 117
 11683                           ; switch strategies available:
 11684                           ; Name         Instructions Cycles
 11685                           ; simple_byte           25    13 (average)
 11686                           ;	Chosen strategy is simple_byte
 11687  0054CC  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11688  0054CE  0A01               	xorlw	1	; case 1
 11689  0054D0  B4D8               	btfsc	status,2,c
 11690  0054D2  D7E9               	goto	l2003
 11691  0054D4  0A03               	xorlw	3	; case 2
 11692  0054D6  B4D8               	btfsc	status,2,c
 11693  0054D8  0012               	return	
 11694  0054DA  0A01               	xorlw	1	; case 3
 11695  0054DC  B4D8               	btfsc	status,2,c
 11696  0054DE  D7E6               	goto	l2005
 11697  0054E0  0A06               	xorlw	6	; case 5
 11698  0054E2  B4D8               	btfsc	status,2,c
 11699  0054E4  0012               	return	
 11700  0054E6  0A77               	xorlw	119	; case 114
 11701  0054E8  B4D8               	btfsc	status,2,c
 11702  0054EA  0012               	return	
 11703  0054EC  0A01               	xorlw	1	; case 115
 11704  0054EE  B4D8               	btfsc	status,2,c
 11705  0054F0  0012               	return	
 11706  0054F2  0A07               	xorlw	7	; case 116
 11707  0054F4  B4D8               	btfsc	status,2,c
 11708  0054F6  0012               	return	
 11709  0054F8  0A01               	xorlw	1	; case 117
 11710  0054FA  0012               	return	
 11711  0054FC                     l16316:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ; Switch size 1, requested type "space"
 11715                           ; Number of cases is 1, Range of values is 255 to 255
 11716                           ; switch strategies available:
 11717                           ; Name         Instructions Cycles
 11718                           ; simple_byte            4     3 (average)
 11719                           ;	Chosen strategy is simple_byte
 11720  0054FC  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11721  0054FE  0AFF               	xorlw	255	; case 255
 11722  005500  0012               	return	
 11723  005502                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11724                           	opt stack 0
 11725                           tosu	equ	0xFFF
 11726                           tosh	equ	0xFFE
 11727                           tosl	equ	0xFFD
 11728                           pclath	equ	0xFFA
 11729                           tblptru	equ	0xFF8
 11730                           tblptrh	equ	0xFF7
 11731                           tblptrl	equ	0xFF6
 11732                           tablat	equ	0xFF5
 11733                           prodh	equ	0xFF4
 11734                           prodl	equ	0xFF3
 11735                           intcon	equ	0xFF2
 11736                           intcon2	equ	0xFF1
 11737                           intcon3	equ	0xFF0
 11738                           indf0	equ	0xFEF
 11739                           postinc0	equ	0xFEE
 11740                           plusw0	equ	0xFEB
 11741                           fsr0h	equ	0xFEA
 11742                           fsr0l	equ	0xFE9
 11743                           wreg	equ	0xFE8
 11744                           postinc1	equ	0xFE6
 11745                           postdec1	equ	0xFE5
 11746                           fsr1h	equ	0xFE2
 11747                           fsr1l	equ	0xFE1
 11748                           indf2	equ	0xFDF
 11749                           postinc2	equ	0xFDE
 11750                           postdec2	equ	0xFDD
 11751                           plusw2	equ	0xFDB
 11752                           fsr2h	equ	0xFDA
 11753                           fsr2l	equ	0xFD9
 11754                           status	equ	0xFD8
 11755                           
 11756 ;; *************** function _USBCheckCDCRequest *****************
 11757 ;; Defined at:
 11758 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;		None
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, status,0
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;Total ram usage:        0 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:   11
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text45
 11787  0042EC                     __ptext45:
 11788                           	opt stack 0
 11789  0042EC                     _USBCheckCDCRequest:
 11790                           	opt stack 14
 11791                           
 11792                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11793                           
 11794                           ;incstack = 0
 11795  0042EC  0104               	movlb	4	; () banked
 11796  0042EE  5130               	movf	48,w,b	;volatile
 11797  0042F0  0B1F               	andlw	31
 11798  0042F2  06E8               	decf	wreg,f,c
 11799  0042F4  A4D8               	btfss	status,2,c
 11800  0042F6  0012               	return	
 11801                           
 11802                           ; BSR set to: 4
 11803                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11804                           
 11805                           ; BSR set to: 4
 11806                           
 11807                           ; BSR set to: 4
 11808  0042F8  3930               	swapf	48,w,b	;volatile
 11809  0042FA  32E8               	rrcf	wreg,f,c
 11810  0042FC  0B03               	andlw	3
 11811  0042FE  06E8               	decf	wreg,f,c
 11812  004300  A4D8               	btfss	status,2,c
 11813  004302  0012               	return	
 11814                           
 11815                           ; BSR set to: 4
 11816                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11817                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11818                           
 11819                           ; BSR set to: 4
 11820                           
 11821                           ; BSR set to: 4
 11822  004304  5134               	movf	52,w,b	;volatile
 11823  004306  B4D8               	btfsc	status,2,c
 11824  004308  D037               	goto	l1899
 11825                           
 11826                           ; BSR set to: 4
 11827  00430A  0534               	decf	52,w,b	;volatile
 11828  00430C  A4D8               	btfss	status,2,c
 11829  00430E  0012               	return	
 11830  004310  D033               	goto	l1899
 11831  004312                     
 11832                           ; BSR set to: 4
 11833                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11834                           
 11835                           ; BSR set to: 4
 11836  004312  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 11837  004314  0100               	movlb	0	; () banked
 11838  004316  6FB0               	movwf	_inPipes& (0+255),b
 11839  004318  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11840  00431A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11844  00431C  0E00               	movlw	0
 11845  00431E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11846  004320  0E08               	movlw	8
 11847  004322  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11851  004324  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11855  004326  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11856                           
 11857                           ;usb_device_cdc.c: 178: break;
 11858  004328  0012               	return	
 11859  00432A                     
 11860                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11861                           
 11862                           ; BSR set to: 0
 11863  00432A  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 11864  00432C  0100               	movlb	0	; () banked
 11865  00432E  6FB0               	movwf	_inPipes& (0+255),b
 11866  004330  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11867  004332  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11871  004334  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11872                           
 11873                           ;usb_device_cdc.c: 183: break;
 11874  004336  0012               	return	
 11875  004338                     l1903:
 11876                           
 11877                           ; BSR set to: 4
 11878                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11879  004338  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11880  00433C  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11881                           
 11882                           ; BSR set to: 4
 11883                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11884  004340  0E75               	movlw	low _line_coding
 11885  004342  0101               	movlb	1	; () banked
 11886  004344  6FC9               	movwf	_outPipes& (0+255),b
 11887  004346  0E03               	movlw	high _line_coding
 11888  004348  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11889                           
 11890                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11891  00434A  0E00               	movlw	0
 11892  00434C  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11893  00434E  0E00               	movlw	0
 11894  004350  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11895                           
 11896                           ; BSR set to: 1
 11897                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11898  004352  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11899                           
 11900                           ;usb_device_cdc.c: 192: break;
 11901  004354  0012               	return	
 11902  004356                     
 11903                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11904                           
 11905                           ; BSR set to: 1
 11906  004356  0E75               	movlw	low _line_coding
 11907  004358  0100               	movlb	0	; () banked
 11908  00435A  6FB0               	movwf	_inPipes& (0+255),b
 11909  00435C  0E03               	movlw	high _line_coding
 11910  00435E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11911                           
 11912                           ; BSR set to: 0
 11913  004360  0E00               	movlw	0
 11914  004362  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11915  004364  0E07               	movlw	7
 11916  004366  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11917                           
 11918                           ; BSR set to: 0
 11919  004368  0EC1               	movlw	193
 11920  00436A  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11921                           
 11922                           ;usb_device_cdc.c: 199: break;
 11923  00436C  0012               	return	
 11924  00436E                     l1905:
 11925                           
 11926                           ; BSR set to: 4
 11927                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11928  00436E  C432 F1DF          	movff	1074,_control_signal_bitmap	;volatile
 11929                           
 11930                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11931  004372  0100               	movlb	0	; () banked
 11932  004374  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;usb_device_cdc.c: 261: }
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;usb_device_cdc.c: 260: break;
 11939                           
 11940                           ;usb_device_cdc.c: 259: default:
 11941                           
 11942                           ;usb_device_cdc.c: 235: break;
 11943  004376  0012               	return	
 11944  004378                     l1899:
 11945                           
 11946                           ; BSR set to: 0
 11947  004378  0104               	movlb	4	; () banked
 11948  00437A  5131               	movf	49,w,b	;volatile
 11949                           
 11950                           ; Switch size 1, requested type "space"
 11951                           ; Number of cases is 5, Range of values is 0 to 34
 11952                           ; switch strategies available:
 11953                           ; Name         Instructions Cycles
 11954                           ; simple_byte           16     9 (average)
 11955                           ;	Chosen strategy is simple_byte
 11956  00437C  0A00               	xorlw	0	; case 0
 11957  00437E  B4D8               	btfsc	status,2,c
 11958  004380  D7C8               	goto	l1900
 11959  004382  0A01               	xorlw	1	; case 1
 11960  004384  B4D8               	btfsc	status,2,c
 11961  004386  D7D1               	goto	l1902
 11962  004388  0A21               	xorlw	33	; case 32
 11963  00438A  B4D8               	btfsc	status,2,c
 11964  00438C  D7D5               	goto	l1903
 11965  00438E  0A01               	xorlw	1	; case 33
 11966  004390  B4D8               	btfsc	status,2,c
 11967  004392  D7E1               	goto	l1904
 11968  004394  0A03               	xorlw	3	; case 34
 11969  004396  A4D8               	btfss	status,2,c
 11970  004398  0012               	return	
 11971  00439A  D7E9               	goto	l1905
 11972  00439C                     __end_of_USBCheckCDCRequest:
 11973                           	opt stack 0
 11974                           tosu	equ	0xFFF
 11975                           tosh	equ	0xFFE
 11976                           tosl	equ	0xFFD
 11977                           pclath	equ	0xFFA
 11978                           tblptru	equ	0xFF8
 11979                           tblptrh	equ	0xFF7
 11980                           tblptrl	equ	0xFF6
 11981                           tablat	equ	0xFF5
 11982                           prodh	equ	0xFF4
 11983                           prodl	equ	0xFF3
 11984                           intcon	equ	0xFF2
 11985                           intcon2	equ	0xFF1
 11986                           intcon3	equ	0xFF0
 11987                           indf0	equ	0xFEF
 11988                           postinc0	equ	0xFEE
 11989                           plusw0	equ	0xFEB
 11990                           fsr0h	equ	0xFEA
 11991                           fsr0l	equ	0xFE9
 11992                           wreg	equ	0xFE8
 11993                           postinc1	equ	0xFE6
 11994                           postdec1	equ	0xFE5
 11995                           fsr1h	equ	0xFE2
 11996                           fsr1l	equ	0xFE1
 11997                           indf2	equ	0xFDF
 11998                           postinc2	equ	0xFDE
 11999                           postdec2	equ	0xFDD
 12000                           plusw2	equ	0xFDB
 12001                           fsr2h	equ	0xFDA
 12002                           fsr2l	equ	0xFD9
 12003                           status	equ	0xFD8
 12004                           
 12005 ;; *************** function _CDCInitEP *****************
 12006 ;; Defined at:
 12007 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12008 ;; Parameters:    Size  Location     Type
 12009 ;;		None
 12010 ;; Auto vars:     Size  Location     Type
 12011 ;;		None
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1    wreg      void 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12025 ;;Total ram usage:        0 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:   13
 12028 ;; This function calls:
 12029 ;;		_USBEnableEndpoint
 12030 ;;		_USBTransferOnePacket
 12031 ;; This function is called by:
 12032 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text46
 12037  0051D0                     __ptext46:
 12038                           	opt stack 0
 12039  0051D0                     _CDCInitEP:
 12040                           	opt stack 12
 12041                           
 12042                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12043                           
 12044                           ;incstack = 0
 12045  0051D0  0E80               	movlw	128
 12046  0051D2  0103               	movlb	3	; () banked
 12047  0051D4  6F75               	movwf	_line_coding& (0+255),b
 12048  0051D6  0E25               	movlw	37
 12049  0051D8  6F76               	movwf	(_line_coding+1)& (0+255),b
 12050  0051DA  0E00               	movlw	0
 12051  0051DC  6F77               	movwf	(_line_coding+2)& (0+255),b
 12052  0051DE  0E00               	movlw	0
 12053  0051E0  6F78               	movwf	(_line_coding+3)& (0+255),b
 12054                           
 12055                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12056  0051E2  0E00               	movlw	0
 12057  0051E4  6F79               	movwf	(_line_coding+4)& (0+255),b
 12058                           
 12059                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12060  0051E6  0E00               	movlw	0
 12061  0051E8  6F7A               	movwf	(_line_coding+5)& (0+255),b
 12062                           
 12063                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12064  0051EA  0E08               	movlw	8
 12065  0051EC  6F7B               	movwf	(_line_coding+6)& (0+255),b
 12066                           
 12067                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12068  0051EE  0E00               	movlw	0
 12069  0051F0  0100               	movlb	0	; () banked
 12070  0051F2  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12074  0051F4  0E1A               	movlw	26
 12075  0051F6  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12076  0051F8  0E01               	movlw	1
 12077  0051FA  EC9A  F02E         	call	_USBEnableEndpoint
 12078                           
 12079                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12080  0051FE  0E1E               	movlw	30
 12081  005200  0100               	movlb	0	; () banked
 12082  005202  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12083  005204  0E02               	movlw	2
 12084  005206  EC9A  F02E         	call	_USBEnableEndpoint
 12085                           
 12086                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12087  00520A  0E00               	movlw	0
 12088  00520C  0100               	movlb	0	; () banked
 12089  00520E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12090  005210  0E00               	movlw	low _cdc_data_rx
 12091  005212  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12092  005214  0E05               	movlw	high _cdc_data_rx
 12093  005216  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12094  005218  0E40               	movlw	64
 12095  00521A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12096  00521C  0E02               	movlw	2
 12097  00521E  ECBE  F020         	call	_USBTransferOnePacket
 12098  005222  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12099  005226  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12100                           
 12101                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12102  00522A  0E00               	movlw	0
 12103  00522C  0101               	movlb	1	; () banked
 12104  00522E  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12105  005230  0E00               	movlw	0
 12106  005232  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12107                           
 12108                           ; BSR set to: 1
 12109                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12110  005234  0E00               	movlw	0
 12111  005236  0100               	movlb	0	; () banked
 12112  005238  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12113                           
 12114                           ; BSR set to: 0
 12115  00523A  0012               	return		;funcret
 12116  00523C                     __end_of_CDCInitEP:
 12117                           	opt stack 0
 12118                           tosu	equ	0xFFF
 12119                           tosh	equ	0xFFE
 12120                           tosl	equ	0xFFD
 12121                           pclath	equ	0xFFA
 12122                           tblptru	equ	0xFF8
 12123                           tblptrh	equ	0xFF7
 12124                           tblptrl	equ	0xFF6
 12125                           tablat	equ	0xFF5
 12126                           prodh	equ	0xFF4
 12127                           prodl	equ	0xFF3
 12128                           intcon	equ	0xFF2
 12129                           intcon2	equ	0xFF1
 12130                           intcon3	equ	0xFF0
 12131                           indf0	equ	0xFEF
 12132                           postinc0	equ	0xFEE
 12133                           plusw0	equ	0xFEB
 12134                           fsr0h	equ	0xFEA
 12135                           fsr0l	equ	0xFE9
 12136                           wreg	equ	0xFE8
 12137                           postinc1	equ	0xFE6
 12138                           postdec1	equ	0xFE5
 12139                           fsr1h	equ	0xFE2
 12140                           fsr1l	equ	0xFE1
 12141                           indf2	equ	0xFDF
 12142                           postinc2	equ	0xFDE
 12143                           postdec2	equ	0xFDD
 12144                           plusw2	equ	0xFDB
 12145                           fsr2h	equ	0xFDA
 12146                           fsr2l	equ	0xFD9
 12147                           status	equ	0xFD8
 12148                           
 12149 ;; *************** function _USBEnableEndpoint *****************
 12150 ;; Defined at:
 12151 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  ep              1    wreg     unsigned char 
 12154 ;;  options         1   37[BANK0 ] unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  ep              1   40[BANK0 ] unsigned char 
 12157 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12158 ;;		 -> UEP0(1), 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12168 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12169 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12171 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;Total ram usage:        4 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:   12
 12175 ;; This function calls:
 12176 ;;		_USBConfigureEndpoint
 12177 ;; This function is called by:
 12178 ;;		_CDCInitEP
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text47
 12183  005D34                     __ptext47:
 12184                           	opt stack 0
 12185  005D34                     _USBEnableEndpoint:
 12186                           	opt stack 12
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;incstack = 0
 12190                           ;USBEnableEndpoint@ep stored from wreg
 12191  005D34  0100               	movlb	0	; () banked
 12192  005D36  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12193                           
 12194                           ;usb_device.c: 898: unsigned char* p;
 12195                           ;usb_device.c: 902: if(options & 0x04)
 12196  005D38  0100               	movlb	0	; () banked
 12197  005D3A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12198  005D3C  D005               	goto	l1640
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;usb_device.c: 903: {
 12202                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12203  005D3E  0E00               	movlw	0
 12204  005D40  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12205  005D42  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12206  005D44  EC11  F024         	call	_USBConfigureEndpoint
 12207  005D48                     l1640:
 12208                           
 12209                           ;usb_device.c: 905: }
 12210                           ;usb_device.c: 906: if(options & 0x02)
 12211  005D48  0100               	movlb	0	; () banked
 12212  005D4A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12213  005D4C  D005               	goto	l1641
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;usb_device.c: 907: {
 12217                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12218  005D4E  0E01               	movlw	1
 12219  005D50  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12220  005D52  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12221  005D54  EC11  F024         	call	_USBConfigureEndpoint
 12222  005D58                     l1641:
 12223                           
 12224                           ;usb_device.c: 909: }
 12225                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12226  005D58  0100               	movlb	0	; () banked
 12227  005D5A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12228  005D5C  0D01               	mullw	1
 12229  005D5E  0E26               	movlw	38
 12230  005D60  24F3               	addwf	prodl,w,c
 12231  005D62  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12232  005D64  0E0F               	movlw	15
 12233  005D66  20F4               	addwfc	prodh,w,c
 12234  005D68  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;usb_device.c: 919: *p = options;
 12238  005D6A  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12239  005D6E  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12240  005D72  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12241                           
 12242                           ; BSR set to: 0
 12243  005D76  0012               	return		;funcret
 12244  005D78                     __end_of_USBEnableEndpoint:
 12245                           	opt stack 0
 12246                           tosu	equ	0xFFF
 12247                           tosh	equ	0xFFE
 12248                           tosl	equ	0xFFD
 12249                           pclath	equ	0xFFA
 12250                           tblptru	equ	0xFF8
 12251                           tblptrh	equ	0xFF7
 12252                           tblptrl	equ	0xFF6
 12253                           tablat	equ	0xFF5
 12254                           prodh	equ	0xFF4
 12255                           prodl	equ	0xFF3
 12256                           intcon	equ	0xFF2
 12257                           intcon2	equ	0xFF1
 12258                           intcon3	equ	0xFF0
 12259                           indf0	equ	0xFEF
 12260                           postinc0	equ	0xFEE
 12261                           plusw0	equ	0xFEB
 12262                           fsr0h	equ	0xFEA
 12263                           fsr0l	equ	0xFE9
 12264                           wreg	equ	0xFE8
 12265                           postinc1	equ	0xFE6
 12266                           postdec1	equ	0xFE5
 12267                           fsr1h	equ	0xFE2
 12268                           fsr1l	equ	0xFE1
 12269                           indf2	equ	0xFDF
 12270                           postinc2	equ	0xFDE
 12271                           postdec2	equ	0xFDD
 12272                           plusw2	equ	0xFDB
 12273                           fsr2h	equ	0xFDA
 12274                           fsr2l	equ	0xFD9
 12275                           status	equ	0xFD8
 12276                           
 12277 ;; *************** function _USBConfigureEndpoint *****************
 12278 ;; Defined at:
 12279 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;  EPNum           1    wreg     unsigned char 
 12282 ;;  direction       1   29[BANK0 ] unsigned char 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12285 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12286 ;;		 -> BDT(48), 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12296 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12298 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12299 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12300 ;;Total ram usage:        8 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:   11
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_USBEnableEndpoint
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text48
 12311  004822                     __ptext48:
 12312                           	opt stack 0
 12313  004822                     _USBConfigureEndpoint:
 12314                           	opt stack 12
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;incstack = 0
 12318                           ;USBConfigureEndpoint@EPNum stored from wreg
 12319  004822  0100               	movlb	0	; () banked
 12320  004824  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12321                           
 12322                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12323                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12324  004826  0E00               	movlw	0
 12325  004828  0100               	movlb	0	; () banked
 12326  00482A  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12327  00482C  0E04               	movlw	4
 12328  00482E  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12332  004830  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12333  004832  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12334  004834  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12335  004836  90D8               	bcf	status,0,c
 12336  004838  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12337  00483A  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12338  00483C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12339  00483E  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12340  004840  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12341  004842  90D8               	bcf	status,0,c
 12342  004844  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12343  004846  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12344  004848  90D8               	bcf	status,0,c
 12345  00484A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12346  00484C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12347  00484E  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12348  004850  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12349  004852  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12350  004854  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12351  004856  90D8               	bcf	status,0,c
 12352  004858  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12353  00485A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12354  00485C  90D8               	bcf	status,0,c
 12355  00485E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12356  004860  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12357  004862  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12358  004864  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12359  004866  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12360  004868  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12364  00486A  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12365  00486E  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12366  004872  9EDF               	bcf	indf2,7,c
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;usb_device.c: 1575: if(direction == 0)
 12370  004874  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12371  004876  A4D8               	btfss	status,2,c
 12372  004878  D007               	goto	l1676
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;usb_device.c: 1576: {
 12376                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12377  00487A  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12378  00487C  0D02               	mullw	2
 12379  00487E  0E0E               	movlw	low _pBDTEntryOut
 12380  004880  24F3               	addwf	prodl,w,c
 12381  004882  6ED9               	movwf	fsr2l,c
 12382  004884  0E03               	movlw	high _pBDTEntryOut
 12383  004886  D006               	goto	L10
 12384  004888                     l1676:
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;usb_device.c: 1579: else
 12388                           ;usb_device.c: 1580: {
 12389                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12390                           
 12391                           ; BSR set to: 0
 12392  004888  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12393  00488A  0D02               	mullw	2
 12394  00488C  0EB6               	movlw	low _pBDTEntryIn
 12395  00488E  24F3               	addwf	prodl,w,c
 12396  004890  6ED9               	movwf	fsr2l,c
 12397  004892  0E00               	movlw	high _pBDTEntryIn
 12398  004894                     L10:
 12399  004894  20F4               	addwfc	prodh,w,c
 12400  004896  6EDA               	movwf	fsr2h,c
 12401  004898  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12402  00489C  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;usb_device.c: 1582: }
 12406                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12407                           
 12408                           ; BSR set to: 0
 12409  0048A0  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12410  0048A4  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12411  0048A8  9CDF               	bcf	indf2,6,c
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12415  0048AA  EE20 F004          	lfsr	2,4
 12416  0048AE  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12417  0048B0  26D9               	addwf	fsr2l,f,c
 12418  0048B2  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12419  0048B4  22DA               	addwfc	fsr2h,f,c
 12420  0048B6  8CDF               	bsf	indf2,6,c
 12421                           
 12422                           ; BSR set to: 0
 12423  0048B8  0012               	return		;funcret
 12424  0048BA                     __end_of_USBConfigureEndpoint:
 12425                           	opt stack 0
 12426                           tosu	equ	0xFFF
 12427                           tosh	equ	0xFFE
 12428                           tosl	equ	0xFFD
 12429                           pclath	equ	0xFFA
 12430                           tblptru	equ	0xFF8
 12431                           tblptrh	equ	0xFF7
 12432                           tblptrl	equ	0xFF6
 12433                           tablat	equ	0xFF5
 12434                           prodh	equ	0xFF4
 12435                           prodl	equ	0xFF3
 12436                           intcon	equ	0xFF2
 12437                           intcon2	equ	0xFF1
 12438                           intcon3	equ	0xFF0
 12439                           indf0	equ	0xFEF
 12440                           postinc0	equ	0xFEE
 12441                           plusw0	equ	0xFEB
 12442                           fsr0h	equ	0xFEA
 12443                           fsr0l	equ	0xFE9
 12444                           wreg	equ	0xFE8
 12445                           postinc1	equ	0xFE6
 12446                           postdec1	equ	0xFE5
 12447                           fsr1h	equ	0xFE2
 12448                           fsr1l	equ	0xFE1
 12449                           indf2	equ	0xFDF
 12450                           postinc2	equ	0xFDE
 12451                           postdec2	equ	0xFDD
 12452                           plusw2	equ	0xFDB
 12453                           fsr2h	equ	0xFDA
 12454                           fsr2l	equ	0xFD9
 12455                           status	equ	0xFD8
 12456                           
 12457 ;; *************** function _USBCtrlTrfOutHandler *****************
 12458 ;; Defined at:
 12459 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:   13
 12480 ;; This function calls:
 12481 ;;		_USBCtrlTrfRxService
 12482 ;; This function is called by:
 12483 ;;		_USBCtrlEPService
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           	psect	text49
 12488  005310                     __ptext49:
 12489                           	opt stack 0
 12490  005310                     _USBCtrlTrfOutHandler:
 12491                           	opt stack 12
 12492                           
 12493                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;incstack = 0
 12497  005310  0E02               	movlw	2
 12498  005312  0100               	movlb	0	; () banked
 12499  005314  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12500  005316  A4D8               	btfss	status,2,c
 12501  005318  D003               	goto	l1782
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;usb_device.c: 2558: {
 12505                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12506  00531A  EC33  F018         	call	_USBCtrlTrfRxService	;wreg free
 12507                           
 12508                           ;usb_device.c: 2560: }
 12509  00531E  0012               	return	
 12510  005320                     l1782:
 12511                           
 12512                           ;usb_device.c: 2561: else
 12513                           ;usb_device.c: 2562: {
 12514                           ;usb_device.c: 2565: controlTransferState = 0;
 12515  005320  0E00               	movlw	0
 12516  005322  0100               	movlb	0	; () banked
 12517  005324  6FCB               	movwf	_controlTransferState& (0+255),b
 12518                           
 12519                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12520  005326  0101               	movlb	1	; () banked
 12521  005328  51E2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12522  00532A  A4D8               	btfss	status,2,c
 12523  00532C  D020               	goto	l1784
 12524                           
 12525                           ; BSR set to: 1
 12526                           ;usb_device.c: 2573: {
 12527                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12528  00532E  0100               	movlb	0	; () banked
 12529  005330  EE20 F001          	lfsr	2,1
 12530  005334  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12531  005336  26D9               	addwf	fsr2l,f,c
 12532  005338  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12533  00533A  22DA               	addwfc	fsr2h,f,c
 12534  00533C  0E08               	movlw	8
 12535  00533E  6EDF               	movwf	indf2,c
 12536                           
 12537                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12538  005340  EE20 F002          	lfsr	2,2
 12539  005344  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12540  005346  26D9               	addwf	fsr2l,f,c
 12541  005348  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12542  00534A  22DA               	addwfc	fsr2h,f,c
 12543  00534C  0E30               	movlw	48
 12544  00534E  6EDE               	movwf	postinc2,c
 12545  005350  0E04               	movlw	4
 12546  005352  6EDD               	movwf	postdec2,c
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12550  005354  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12551  005358  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12552  00535C  0E0C               	movlw	12
 12553  00535E  6EDF               	movwf	indf2,c
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12557  005360  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12558  005364  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12559  005368  0E00               	movlw	0
 12560  00536A  8EDB               	bsf	plusw2,7,c
 12561                           
 12562                           ;usb_device.c: 2578: }
 12563  00536C  0012               	return	
 12564  00536E                     l1784:
 12565                           
 12566                           ;usb_device.c: 2579: else
 12567                           ;usb_device.c: 2580: {
 12568                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12569                           
 12570                           ; BSR set to: 0
 12571  00536E  0E00               	movlw	0
 12572  005370  0101               	movlb	1	; () banked
 12573  005372  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12574                           
 12575                           ; BSR set to: 1
 12576  005374  0012               	return	
 12577  005376                     __end_of_USBCtrlTrfOutHandler:
 12578                           	opt stack 0
 12579                           tosu	equ	0xFFF
 12580                           tosh	equ	0xFFE
 12581                           tosl	equ	0xFFD
 12582                           pclath	equ	0xFFA
 12583                           tblptru	equ	0xFF8
 12584                           tblptrh	equ	0xFF7
 12585                           tblptrl	equ	0xFF6
 12586                           tablat	equ	0xFF5
 12587                           prodh	equ	0xFF4
 12588                           prodl	equ	0xFF3
 12589                           intcon	equ	0xFF2
 12590                           intcon2	equ	0xFF1
 12591                           intcon3	equ	0xFF0
 12592                           indf0	equ	0xFEF
 12593                           postinc0	equ	0xFEE
 12594                           plusw0	equ	0xFEB
 12595                           fsr0h	equ	0xFEA
 12596                           fsr0l	equ	0xFE9
 12597                           wreg	equ	0xFE8
 12598                           postinc1	equ	0xFE6
 12599                           postdec1	equ	0xFE5
 12600                           fsr1h	equ	0xFE2
 12601                           fsr1l	equ	0xFE1
 12602                           indf2	equ	0xFDF
 12603                           postinc2	equ	0xFDE
 12604                           postdec2	equ	0xFDD
 12605                           plusw2	equ	0xFDB
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8
 12609                           
 12610 ;; *************** function _USBCtrlTrfRxService *****************
 12611 ;; Defined at:
 12612 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;		None
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12617 ;;  i               1   29[BANK0 ] unsigned char 
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12631 ;;Total ram usage:        2 bytes
 12632 ;; Hardware stack levels used:    1
 12633 ;; Hardware stack levels required when called:   12
 12634 ;; This function calls:
 12635 ;;		_USBCtrlEPAllowStatusStage
 12636 ;; This function is called by:
 12637 ;;		_USBCtrlTrfOutHandler
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641                           	psect	text50
 12642  003066                     __ptext50:
 12643                           	opt stack 0
 12644  003066                     _USBCtrlTrfRxService:
 12645                           	opt stack 12
 12646                           
 12647                           ;usb_device.c: 1872: uint8_t byteToRead;
 12648                           ;usb_device.c: 1873: uint8_t i;
 12649                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12650                           
 12651                           ;incstack = 0
 12652  003066  0100               	movlb	0	; () banked
 12653  003068  EE20 F001          	lfsr	2,1
 12654  00306C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12655  00306E  26D9               	addwf	fsr2l,f,c
 12656  003070  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12657  003072  22DA               	addwfc	fsr2h,f,c
 12658  003074  50DF               	movf	indf2,w,c
 12659  003076  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12663  003078  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12664  00307A  0101               	movlb	1	; () banked
 12665  00307C  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12666  00307E  0E00               	movlw	0
 12667  003080  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12668  003082  A0D8               	btfss	status,0,c
 12669                           
 12670                           ; BSR set to: 1
 12671                           ;usb_device.c: 1884: {
 12672                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12673  003084  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12674                           
 12675                           ; BSR set to: 1
 12676                           ;usb_device.c: 1886: }
 12677                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12678                           
 12679                           ; BSR set to: 1
 12680  003088  0100               	movlb	0	; () banked
 12681  00308A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12682  00308C  0101               	movlb	1	; () banked
 12683  00308E  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12684  003090  0E00               	movlw	0
 12685  003092  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12686                           
 12687                           ; BSR set to: 1
 12688                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12689  003094  0E00               	movlw	0
 12690  003096  0100               	movlb	0	; () banked
 12691  003098  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12692  00309A  D013               	goto	l1710
 12693  00309C                     
 12694                           ; BSR set to: 0
 12695                           ;usb_device.c: 1893: {
 12696                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12697                           
 12698                           ; BSR set to: 0
 12699  00309C  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12700  00309E  0D01               	mullw	1
 12701  0030A0  0E38               	movlw	56
 12702  0030A2  24F3               	addwf	prodl,w,c
 12703  0030A4  6ED9               	movwf	fsr2l,c
 12704  0030A6  0E04               	movlw	4
 12705  0030A8  20F4               	addwfc	prodh,w,c
 12706  0030AA  6EDA               	movwf	fsr2h,c
 12707  0030AC  C1C9  FFE1         	movff	_outPipes,fsr1l
 12708  0030B0  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12709  0030B4  CFDF FFE7          	movff	indf2,indf1
 12710                           
 12711                           ; BSR set to: 0
 12712  0030B8  0101               	movlb	1	; () banked
 12713  0030BA  4BC9               	infsnz	_outPipes& (0+255),f,b
 12714  0030BC  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12715                           
 12716                           ; BSR set to: 1
 12717  0030BE  0100               	movlb	0	; () banked
 12718  0030C0  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12719  0030C2                     l1710:
 12720                           
 12721                           ; BSR set to: 0
 12722                           
 12723                           ; BSR set to: 0
 12724  0030C2  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12725  0030C4  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12726  0030C6  A0D8               	btfss	status,0,c
 12727  0030C8  D7E9               	goto	l1711
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;usb_device.c: 1895: }
 12731                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12732                           
 12733                           ; BSR set to: 0
 12734  0030CA  0101               	movlb	1	; () banked
 12735  0030CC  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12736  0030CE  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12737  0030D0  B4D8               	btfsc	status,2,c
 12738  0030D2  D033               	goto	l1713
 12739                           
 12740                           ; BSR set to: 1
 12741                           ;usb_device.c: 1900: {
 12742                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12743  0030D4  0100               	movlb	0	; () banked
 12744  0030D6  EE20 F001          	lfsr	2,1
 12745  0030DA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12746  0030DC  26D9               	addwf	fsr2l,f,c
 12747  0030DE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12748  0030E0  22DA               	addwfc	fsr2h,f,c
 12749  0030E2  0E08               	movlw	8
 12750  0030E4  6EDF               	movwf	indf2,c
 12751                           
 12752                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12753  0030E6  EE20 F002          	lfsr	2,2
 12754  0030EA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12755  0030EC  26D9               	addwf	fsr2l,f,c
 12756  0030EE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12757  0030F0  22DA               	addwfc	fsr2h,f,c
 12758  0030F2  0E38               	movlw	56
 12759  0030F4  6EDE               	movwf	postinc2,c
 12760  0030F6  0E04               	movlw	4
 12761  0030F8  6EDD               	movwf	postdec2,c
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12765  0030FA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12766  0030FE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12767  003102  BCDF               	btfsc	indf2,6,c
 12768  003104  D00D               	goto	l1714
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;usb_device.c: 1904: {
 12772                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12773  003106  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12774  00310A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12775  00310E  0E48               	movlw	72
 12776  003110  6EDF               	movwf	indf2,c
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12780  003112  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12781  003116  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12782  00311A  0E00               	movlw	0
 12783  00311C  8EDB               	bsf	plusw2,7,c
 12784                           
 12785                           ;usb_device.c: 1907: }
 12786  00311E  0012               	return	
 12787  003120                     l1714:
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;usb_device.c: 1908: else
 12791                           ;usb_device.c: 1909: {
 12792                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12793                           
 12794                           ; BSR set to: 0
 12795  003120  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12796  003124  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12797  003128  0E08               	movlw	8
 12798  00312A  6EDF               	movwf	indf2,c
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12802  00312C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12803  003130  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12804  003134  0E00               	movlw	0
 12805  003136  8EDB               	bsf	plusw2,7,c
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;usb_device.c: 1912: }
 12809                           ;usb_device.c: 1913: }
 12810  003138  0012               	return	
 12811  00313A                     l1713:
 12812                           
 12813                           ;usb_device.c: 1914: else
 12814                           ;usb_device.c: 1915: {
 12815                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12816                           
 12817                           ; BSR set to: 0
 12818  00313A  0100               	movlb	0	; () banked
 12819  00313C  EE20 F001          	lfsr	2,1
 12820  003140  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12821  003142  26D9               	addwf	fsr2l,f,c
 12822  003144  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12823  003146  22DA               	addwfc	fsr2h,f,c
 12824  003148  0E08               	movlw	8
 12825  00314A  6EDF               	movwf	indf2,c
 12826                           
 12827                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12828  00314C  EE20 F002          	lfsr	2,2
 12829  003150  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12830  003152  26D9               	addwf	fsr2l,f,c
 12831  003154  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12832  003156  22DA               	addwfc	fsr2h,f,c
 12833  003158  0E30               	movlw	48
 12834  00315A  6EDE               	movwf	postinc2,c
 12835  00315C  0E04               	movlw	4
 12836  00315E  6EDD               	movwf	postdec2,c
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12840  003160  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12841  003164  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12842  003168  0E04               	movlw	4
 12843  00316A  6EDF               	movwf	indf2,c
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12847  00316C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12848  003170  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12849  003174  0E00               	movlw	0
 12850  003176  8EDB               	bsf	plusw2,7,c
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;usb_device.c: 1944: }
 12854                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12855                           
 12856                           ; BSR set to: 0
 12857  003178  0101               	movlb	1	; () banked
 12858  00317A  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12859                           
 12860                           ; BSR set to: 1
 12861                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12862  00317C  0100               	movlb	0	; () banked
 12863  00317E  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12864  003180  A4D8               	btfss	status,2,c
 12865  003182  0012               	return	
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;usb_device.c: 1960: {
 12869                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12870  003184  EC04  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12871  003188  0012               	return	
 12872  00318A                     __end_of_USBCtrlTrfRxService:
 12873                           	opt stack 0
 12874                           tosu	equ	0xFFF
 12875                           tosh	equ	0xFFE
 12876                           tosl	equ	0xFFD
 12877                           pclath	equ	0xFFA
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           intcon	equ	0xFF2
 12885                           intcon2	equ	0xFF1
 12886                           intcon3	equ	0xFF0
 12887                           indf0	equ	0xFEF
 12888                           postinc0	equ	0xFEE
 12889                           plusw0	equ	0xFEB
 12890                           fsr0h	equ	0xFEA
 12891                           fsr0l	equ	0xFE9
 12892                           wreg	equ	0xFE8
 12893                           indf1	equ	0xFE7
 12894                           postinc1	equ	0xFE6
 12895                           postdec1	equ	0xFE5
 12896                           fsr1h	equ	0xFE2
 12897                           fsr1l	equ	0xFE1
 12898                           indf2	equ	0xFDF
 12899                           postinc2	equ	0xFDE
 12900                           postdec2	equ	0xFDD
 12901                           plusw2	equ	0xFDB
 12902                           fsr2h	equ	0xFDA
 12903                           fsr2l	equ	0xFD9
 12904                           status	equ	0xFD8
 12905                           
 12906 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12907 ;; Defined at:
 12908 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;		None
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;		None
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  1    wreg      void 
 12915 ;; Registers used:
 12916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12926 ;;Total ram usage:        0 bytes
 12927 ;; Hardware stack levels used:    1
 12928 ;; Hardware stack levels required when called:   11
 12929 ;; This function calls:
 12930 ;;		Nothing
 12931 ;; This function is called by:
 12932 ;;		_USBDeviceTasks
 12933 ;;		_USBCtrlEPServiceComplete
 12934 ;;		_USBCtrlTrfRxService
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text51
 12939  003C08                     __ptext51:
 12940                           	opt stack 0
 12941  003C08                     _USBCtrlEPAllowStatusStage:
 12942                           	opt stack 12
 12943                           
 12944                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12945                           
 12946                           ;incstack = 0
 12947  003C08  0100               	movlb	0	; () banked
 12948  003C0A  51C7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12949  003C0C  A4D8               	btfss	status,2,c
 12950  003C0E  0012               	return	
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;usb_device.c: 1442: {
 12954                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12955  003C10  0E01               	movlw	1
 12956  003C12  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12957                           
 12958                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12959  003C14  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12960  003C16  A4D8               	btfss	status,2,c
 12961  003C18  0012               	return	
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;usb_device.c: 1445: {
 12965                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12966  003C1A  0E01               	movlw	1
 12967  003C1C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12968                           
 12969                           ; BSR set to: 0
 12970                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12971  003C1E  0E02               	movlw	2
 12972  003C20  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12973  003C22  A4D8               	btfss	status,2,c
 12974  003C24  D015               	goto	l1664
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device.c: 1451: {
 12978                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12979  003C26  EE20 F001          	lfsr	2,1
 12980  003C2A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12981  003C2C  26D9               	addwf	fsr2l,f,c
 12982  003C2E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12983  003C30  22DA               	addwfc	fsr2h,f,c
 12984  003C32  0E00               	movlw	0
 12985  003C34  6EDF               	movwf	indf2,c
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12989  003C36  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12990  003C3A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12991  003C3E  0E48               	movlw	72
 12992  003C40  6EDF               	movwf	indf2,c
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12996  003C42  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12997  003C46  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12998  003C4A  0E00               	movlw	0
 12999  003C4C  8EDB               	bsf	plusw2,7,c
 13000                           
 13001                           ;usb_device.c: 1455: }
 13002  003C4E  0012               	return	
 13003  003C50                     l1664:
 13004                           
 13005                           ; BSR set to: 0
 13006                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13007                           
 13008                           ; BSR set to: 0
 13009  003C50  05CB               	decf	_controlTransferState& (0+255),w,b
 13010  003C52  A4D8               	btfss	status,2,c
 13011  003C54  0012               	return	
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 1457: {
 13015                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13016  003C56  0E00               	movlw	0
 13017  003C58  0101               	movlb	1	; () banked
 13018  003C5A  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13019                           
 13020                           ; BSR set to: 1
 13021                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13022  003C5C  0100               	movlb	0	; () banked
 13023  003C5E  EE20 F001          	lfsr	2,1
 13024  003C62  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13025  003C64  26D9               	addwf	fsr2l,f,c
 13026  003C66  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13027  003C68  22DA               	addwfc	fsr2h,f,c
 13028  003C6A  0E08               	movlw	8
 13029  003C6C  6EDF               	movwf	indf2,c
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13033  003C6E  EE20 F002          	lfsr	2,2
 13034  003C72  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13035  003C74  26D9               	addwf	fsr2l,f,c
 13036  003C76  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13037  003C78  22DA               	addwfc	fsr2h,f,c
 13038  003C7A  0E30               	movlw	48
 13039  003C7C  6EDE               	movwf	postinc2,c
 13040  003C7E  0E04               	movlw	4
 13041  003C80  6EDD               	movwf	postdec2,c
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13045  003C82  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13046  003C86  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13047  003C8A  0E04               	movlw	4
 13048  003C8C  6EDF               	movwf	indf2,c
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13052  003C8E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13053  003C92  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13054  003C96  0E00               	movlw	0
 13055  003C98  8EDB               	bsf	plusw2,7,c
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13059  003C9A  0E01               	movlw	1
 13060  003C9C  0101               	movlb	1	; () banked
 13061  003C9E  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13062                           
 13063                           ; BSR set to: 1
 13064                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13065  003CA0  0100               	movlb	0	; () banked
 13066  003CA2  EE20 F001          	lfsr	2,1
 13067  003CA6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13068  003CA8  26D9               	addwf	fsr2l,f,c
 13069  003CAA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13070  003CAC  22DA               	addwfc	fsr2h,f,c
 13071  003CAE  0E08               	movlw	8
 13072  003CB0  6EDF               	movwf	indf2,c
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13076  003CB2  EE20 F002          	lfsr	2,2
 13077  003CB6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13078  003CB8  26D9               	addwf	fsr2l,f,c
 13079  003CBA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13080  003CBC  22DA               	addwfc	fsr2h,f,c
 13081  003CBE  0E30               	movlw	48
 13082  003CC0  6EDE               	movwf	postinc2,c
 13083  003CC2  0E04               	movlw	4
 13084  003CC4  6EDD               	movwf	postdec2,c
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13088  003CC6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13089  003CCA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13090  003CCE  0E80               	movlw	128
 13091  003CD0  6EDF               	movwf	indf2,c
 13092                           
 13093                           ; BSR set to: 0
 13094                           
 13095                           ; BSR set to: 0
 13096                           
 13097                           ; BSR set to: 0
 13098  003CD2  0012               	return	
 13099  003CD4                     __end_of_USBCtrlEPAllowStatusStage:
 13100                           	opt stack 0
 13101                           tosu	equ	0xFFF
 13102                           tosh	equ	0xFFE
 13103                           tosl	equ	0xFFD
 13104                           pclath	equ	0xFFA
 13105                           tblptru	equ	0xFF8
 13106                           tblptrh	equ	0xFF7
 13107                           tblptrl	equ	0xFF6
 13108                           tablat	equ	0xFF5
 13109                           prodh	equ	0xFF4
 13110                           prodl	equ	0xFF3
 13111                           intcon	equ	0xFF2
 13112                           intcon2	equ	0xFF1
 13113                           intcon3	equ	0xFF0
 13114                           indf0	equ	0xFEF
 13115                           postinc0	equ	0xFEE
 13116                           plusw0	equ	0xFEB
 13117                           fsr0h	equ	0xFEA
 13118                           fsr0l	equ	0xFE9
 13119                           wreg	equ	0xFE8
 13120                           indf1	equ	0xFE7
 13121                           postinc1	equ	0xFE6
 13122                           postdec1	equ	0xFE5
 13123                           fsr1h	equ	0xFE2
 13124                           fsr1l	equ	0xFE1
 13125                           indf2	equ	0xFDF
 13126                           postinc2	equ	0xFDE
 13127                           postdec2	equ	0xFDD
 13128                           plusw2	equ	0xFDB
 13129                           fsr2h	equ	0xFDA
 13130                           fsr2l	equ	0xFD9
 13131                           status	equ	0xFD8
 13132                           
 13133 ;; *************** function _USBCtrlTrfInHandler *****************
 13134 ;; Defined at:
 13135 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13136 ;; Parameters:    Size  Location     Type
 13137 ;;		None
 13138 ;; Auto vars:     Size  Location     Type
 13139 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      void 
 13142 ;; Registers used:
 13143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13153 ;;Total ram usage:        1 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; Hardware stack levels required when called:   12
 13156 ;; This function calls:
 13157 ;;		_USBCtrlTrfTxService
 13158 ;; This function is called by:
 13159 ;;		_USBCtrlEPService
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           	psect	text52
 13164  0040BA                     __ptext52:
 13165                           	opt stack 0
 13166  0040BA                     _USBCtrlTrfInHandler:
 13167                           	opt stack 13
 13168                           
 13169                           ;usb_device.c: 2611: uint8_t lastDTS;
 13170                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;incstack = 0
 13174  0040BA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13175  0040BE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13176  0040C2  0100               	movlb	0	; () banked
 13177  0040C4  0E00               	movlw	0
 13178  0040C6  BCDF               	btfsc	indf2,6,c
 13179  0040C8  0E01               	movlw	1
 13180  0040CA  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13184  0040CC  0E04               	movlw	4
 13185  0040CE  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13189  0040D0  0E08               	movlw	8
 13190  0040D2  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 13191  0040D4  A4D8               	btfss	status,2,c
 13192  0040D6  D00D               	goto	l1791
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;usb_device.c: 2622: {
 13196                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13197  0040D8  0104               	movlb	4	; () banked
 13198  0040DA  5132               	movf	50,w,b	;volatile
 13199  0040DC  0B7F               	andlw	127
 13200  0040DE  010F               	movlb	15	; () banked
 13201  0040E0  6F38               	movwf	56,b	;volatile
 13202                           
 13203                           ; BSR set to: 15
 13204                           ;usb_device.c: 2624: if(UADDR != 0u)
 13205  0040E2  5138               	movf	56,w,b	;volatile
 13206  0040E4  B4D8               	btfsc	status,2,c
 13207  0040E6  D002               	goto	l1790
 13208                           
 13209                           ; BSR set to: 15
 13210                           ;usb_device.c: 2625: {
 13211                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13212  0040E8  0E10               	movlw	16
 13213  0040EA  D001               	goto	L11
 13214  0040EC                     l1790:
 13215                           
 13216                           ;usb_device.c: 2628: else
 13217                           ;usb_device.c: 2629: {
 13218                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13219                           
 13220                           ; BSR set to: 0
 13221  0040EC  0E04               	movlw	4
 13222  0040EE                     L11:
 13223  0040EE  0100               	movlb	0	; () banked
 13224  0040F0  6FCD               	movwf	_USBDeviceState& (0+255),b
 13225  0040F2                     l1791:
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;usb_device.c: 2631: }
 13229                           ;usb_device.c: 2632: }
 13230                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13231                           
 13232                           ; BSR set to: 0
 13233                           
 13234                           ; BSR set to: 0
 13235  0040F2  05CB               	decf	_controlTransferState& (0+255),w,b
 13236  0040F4  A4D8               	btfss	status,2,c
 13237  0040F6  D03B               	goto	l1792
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;usb_device.c: 2636: {
 13241                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13242  0040F8  EE20 F002          	lfsr	2,2
 13243  0040FC  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13244  0040FE  26D9               	addwf	fsr2l,f,c
 13245  004100  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13246  004102  22DA               	addwfc	fsr2h,f,c
 13247  004104  0E38               	movlw	56
 13248  004106  6EDE               	movwf	postinc2,c
 13249  004108  0E04               	movlw	4
 13250  00410A  6EDD               	movwf	postdec2,c
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13254  00410C  ECF6  F01B         	call	_USBCtrlTrfTxService	;wreg free
 13255                           
 13256                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13257  004110  0E02               	movlw	2
 13258  004112  0100               	movlb	0	; () banked
 13259  004114  19CC               	xorwf	_shortPacketStatus& (0+255),w,b
 13260  004116  A4D8               	btfss	status,2,c
 13261  004118  D00D               	goto	l1793
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;usb_device.c: 2645: {
 13265                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13266  00411A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13267  00411E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13268  004122  0E04               	movlw	4
 13269  004124  6EDF               	movwf	indf2,c
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13273  004126  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13274  00412A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13275  00412E  0E00               	movlw	0
 13276  004130  8EDB               	bsf	plusw2,7,c
 13277                           
 13278                           ;usb_device.c: 2650: }
 13279  004132  0012               	return	
 13280  004134                     l1793:
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;usb_device.c: 2651: else
 13284                           ;usb_device.c: 2652: {
 13285                           ;usb_device.c: 2653: if(lastDTS == 0)
 13286                           
 13287                           ; BSR set to: 0
 13288  004134  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13289  004136  A4D8               	btfss	status,2,c
 13290  004138  D00D               	goto	l1795
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;usb_device.c: 2654: {
 13294                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13295  00413A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13296  00413E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13297  004142  0E48               	movlw	72
 13298  004144  6EDF               	movwf	indf2,c
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13302  004146  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13303  00414A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13304  00414E  0E00               	movlw	0
 13305  004150  8EDB               	bsf	plusw2,7,c
 13306                           
 13307                           ;usb_device.c: 2657: }
 13308  004152  0012               	return	
 13309  004154                     l1795:
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;usb_device.c: 2658: else
 13313                           ;usb_device.c: 2659: {
 13314                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13315                           
 13316                           ; BSR set to: 0
 13317  004154  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13318  004158  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13319  00415C  0E08               	movlw	8
 13320  00415E  6EDF               	movwf	indf2,c
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13324  004160  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13325  004164  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13326  004168  0E00               	movlw	0
 13327  00416A  8EDB               	bsf	plusw2,7,c
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;usb_device.c: 2662: }
 13331                           ;usb_device.c: 2663: }
 13332                           ;usb_device.c: 2664: }
 13333                           
 13334                           ; BSR set to: 0
 13335  00416C  0012               	return	
 13336  00416E                     l1792:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;usb_device.c: 2665: else
 13340                           ;usb_device.c: 2666: {
 13341                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13342  00416E  0101               	movlb	1	; () banked
 13343  004170  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13344                           
 13345                           ; BSR set to: 1
 13346                           ;usb_device.c: 2675: }
 13347                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13348                           
 13349                           ; BSR set to: 1
 13350  004172  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13351                           
 13352                           ; BSR set to: 1
 13353                           ;usb_device.c: 2677: }
 13354                           ;usb_device.c: 2679: controlTransferState = 0;
 13355                           
 13356                           ; BSR set to: 1
 13357  004174  0E00               	movlw	0
 13358  004176  0100               	movlb	0	; () banked
 13359  004178  6FCB               	movwf	_controlTransferState& (0+255),b
 13360  00417A  0012               	return	
 13361  00417C                     __end_of_USBCtrlTrfInHandler:
 13362                           	opt stack 0
 13363                           tosu	equ	0xFFF
 13364                           tosh	equ	0xFFE
 13365                           tosl	equ	0xFFD
 13366                           pclath	equ	0xFFA
 13367                           tblptru	equ	0xFF8
 13368                           tblptrh	equ	0xFF7
 13369                           tblptrl	equ	0xFF6
 13370                           tablat	equ	0xFF5
 13371                           prodh	equ	0xFF4
 13372                           prodl	equ	0xFF3
 13373                           intcon	equ	0xFF2
 13374                           intcon2	equ	0xFF1
 13375                           intcon3	equ	0xFF0
 13376                           indf0	equ	0xFEF
 13377                           postinc0	equ	0xFEE
 13378                           plusw0	equ	0xFEB
 13379                           fsr0h	equ	0xFEA
 13380                           fsr0l	equ	0xFE9
 13381                           wreg	equ	0xFE8
 13382                           indf1	equ	0xFE7
 13383                           postinc1	equ	0xFE6
 13384                           postdec1	equ	0xFE5
 13385                           fsr1h	equ	0xFE2
 13386                           fsr1l	equ	0xFE1
 13387                           indf2	equ	0xFDF
 13388                           postinc2	equ	0xFDE
 13389                           postdec2	equ	0xFDD
 13390                           plusw2	equ	0xFDB
 13391                           fsr2h	equ	0xFDA
 13392                           fsr2l	equ	0xFD9
 13393                           status	equ	0xFD8
 13394                           
 13395 ;; *************** function _USBCtrlTrfTxService *****************
 13396 ;; Defined at:
 13397 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      void 
 13404 ;; Registers used:
 13405 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 0/0
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;Total ram usage:        1 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:   11
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_USBCtrlEPAllowDataStage
 13422 ;;		_USBCtrlTrfInHandler
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           	psect	text53
 13427  0037EC                     __ptext53:
 13428                           	opt stack 0
 13429  0037EC                     _USBCtrlTrfTxService:
 13430                           	opt stack 11
 13431                           
 13432                           ;usb_device.c: 1791: uint8_t byteToSend;
 13433                           ;usb_device.c: 1795: byteToSend = 8;
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;incstack = 0
 13437  0037EC  0E08               	movlw	8
 13438  0037EE  0100               	movlb	0	; () banked
 13439  0037F0  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13443  0037F2  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13444  0037F4  E110               	bnz	l12536
 13445  0037F6  0E08               	movlw	8
 13446  0037F8  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13447  0037FA  B0D8               	btfsc	status,0,c
 13448  0037FC  D00C               	goto	l1697
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;usb_device.c: 1797: {
 13452                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13453  0037FE  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13457  003802  51CC               	movf	_shortPacketStatus& (0+255),w,b
 13458  003804  A4D8               	btfss	status,2,c
 13459  003806  D002               	goto	l1695
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;usb_device.c: 1806: {
 13463                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13464  003808  0E01               	movlw	1
 13465  00380A  D004               	goto	L12
 13466  00380C                     l1695:
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13470                           
 13471                           ; BSR set to: 0
 13472  00380C  05CC               	decf	_shortPacketStatus& (0+255),w,b
 13473  00380E  A4D8               	btfss	status,2,c
 13474  003810  D002               	goto	l1697
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;usb_device.c: 1810: {
 13478                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13479  003812  0E02               	movlw	2
 13480  003814                     L12:
 13481  003814  6FCC               	movwf	_shortPacketStatus& (0+255),b
 13482  003816                     l1697:
 13483  003816                     l12536:
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;usb_device.c: 1812: }
 13487                           ;usb_device.c: 1813: }
 13488                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13489  003816  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13490  003818  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13491  00381A  0E00               	movlw	0
 13492  00381C  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13496  00381E  EE20 F001          	lfsr	2,1
 13497  003822  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13498  003824  26D9               	addwf	fsr2l,f,c
 13499  003826  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13500  003828  22DA               	addwfc	fsr2h,f,c
 13501  00382A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13505  00382E  0E38               	movlw	56
 13506  003830  0102               	movlb	2	; () banked
 13507  003832  6FD5               	movwf	_pDst& (0+255),b
 13508  003834  0E04               	movlw	4
 13509  003836  6FD6               	movwf	(_pDst+1)& (0+255),b
 13510                           
 13511                           ; BSR set to: 2
 13512                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13513  003838  0100               	movlb	0	; () banked
 13514  00383A  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13515  00383C  D01E               	goto	l1699
 13516  00383E  D03E               	goto	l1703
 13517  003840                     
 13518                           ; BSR set to: 0
 13519                           ;usb_device.c: 1830: {
 13520                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13521                           
 13522                           ; BSR set to: 0
 13523  003840  C0B0  FFF6         	movff	_inPipes,tblptrl
 13524  003844  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13525  003848  6AF8               	clrf	tblptru,c
 13526  00384A  C2D5  FFD9         	movff	_pDst,fsr2l
 13527  00384E  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13528  003852  0E0E               	movlw	(high __ramtop+-1)
 13529  003854  64F7               	cpfsgt	tblptrh,c
 13530  003856  D003               	bra	u11077
 13531  003858  0008               	tblrd		*
 13532  00385A  50F5               	movf	tablat,w,c
 13533  00385C  D005               	bra	u11070
 13534  00385E                     u11077:
 13535  00385E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13536  003862  CFF7 FFEA          	movff	tblptrh,fsr0h
 13537  003866  50EF               	movf	indf0,w,c
 13538  003868                     u11070:
 13539  003868  6EDF               	movwf	indf2,c
 13540  00386A  0100               	movlb	0	; () banked
 13541  00386C  4BB0               	infsnz	_inPipes& (0+255),f,b
 13542  00386E  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13543                           
 13544                           ; BSR set to: 0
 13545  003870  0102               	movlb	2	; () banked
 13546  003872  4BD5               	infsnz	_pDst& (0+255),f,b
 13547  003874  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13548                           
 13549                           ; BSR set to: 2
 13550                           ;usb_device.c: 1832: byteToSend--;
 13551  003876  0100               	movlb	0	; () banked
 13552  003878  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13553  00387A                     l1699:
 13554                           
 13555                           ; BSR set to: 0
 13556                           
 13557                           ; BSR set to: 0
 13558  00387A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13559  00387C  B4D8               	btfsc	status,2,c
 13560  00387E  0012               	return	
 13561  003880  D7DF               	goto	l1700
 13562  003882                     
 13563                           ; BSR set to: 0
 13564                           ;usb_device.c: 1838: {
 13565                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13566                           
 13567                           ; BSR set to: 0
 13568  003882  C0B0  FFF6         	movff	_inPipes,tblptrl
 13569  003886  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13570  00388A  6AF8               	clrf	tblptru,c
 13571  00388C  C2D5  FFD9         	movff	_pDst,fsr2l
 13572  003890  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13573  003894  0E0E               	movlw	(high __ramtop+-1)
 13574  003896  64F7               	cpfsgt	tblptrh,c
 13575  003898  D003               	bra	u11097
 13576  00389A  0008               	tblrd		*
 13577  00389C  50F5               	movf	tablat,w,c
 13578  00389E  D005               	bra	u11090
 13579  0038A0                     u11097:
 13580  0038A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13581  0038A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13582  0038A8  50EF               	movf	indf0,w,c
 13583  0038AA                     u11090:
 13584  0038AA  6EDF               	movwf	indf2,c
 13585  0038AC  0100               	movlb	0	; () banked
 13586  0038AE  4BB0               	infsnz	_inPipes& (0+255),f,b
 13587  0038B0  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13588                           
 13589                           ; BSR set to: 0
 13590  0038B2  0102               	movlb	2	; () banked
 13591  0038B4  4BD5               	infsnz	_pDst& (0+255),f,b
 13592  0038B6  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13593                           
 13594                           ; BSR set to: 2
 13595                           ;usb_device.c: 1840: byteToSend--;
 13596  0038B8  0100               	movlb	0	; () banked
 13597  0038BA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13598  0038BC                     l1703:
 13599                           
 13600                           ; BSR set to: 0
 13601                           
 13602                           ; BSR set to: 0
 13603  0038BC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13604  0038BE  B4D8               	btfsc	status,2,c
 13605  0038C0  0012               	return	
 13606  0038C2  D7DF               	goto	l1704
 13607  0038C4                     __end_of_USBCtrlTrfTxService:
 13608                           	opt stack 0
 13609                           tosu	equ	0xFFF
 13610                           tosh	equ	0xFFE
 13611                           tosl	equ	0xFFD
 13612                           pclath	equ	0xFFA
 13613                           tblptru	equ	0xFF8
 13614                           tblptrh	equ	0xFF7
 13615                           tblptrl	equ	0xFF6
 13616                           tablat	equ	0xFF5
 13617                           prodh	equ	0xFF4
 13618                           prodl	equ	0xFF3
 13619                           intcon	equ	0xFF2
 13620                           intcon2	equ	0xFF1
 13621                           intcon3	equ	0xFF0
 13622                           indf0	equ	0xFEF
 13623                           postinc0	equ	0xFEE
 13624                           plusw0	equ	0xFEB
 13625                           fsr0h	equ	0xFEA
 13626                           fsr0l	equ	0xFE9
 13627                           wreg	equ	0xFE8
 13628                           indf1	equ	0xFE7
 13629                           postinc1	equ	0xFE6
 13630                           postdec1	equ	0xFE5
 13631                           fsr1h	equ	0xFE2
 13632                           fsr1l	equ	0xFE1
 13633                           indf2	equ	0xFDF
 13634                           postinc2	equ	0xFDE
 13635                           postdec2	equ	0xFDD
 13636                           plusw2	equ	0xFDB
 13637                           fsr2h	equ	0xFDA
 13638                           fsr2l	equ	0xFD9
 13639                           status	equ	0xFD8
 13640                           
 13641 ;; *************** function _CDCTxService *****************
 13642 ;; Defined at:
 13643 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;		None
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13648 ;;  i               1   36[BANK0 ] unsigned char 
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      void 
 13651 ;; Registers used:
 13652 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 0/0
 13655 ;;		On exit  : 0/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13662 ;;Total ram usage:        2 bytes
 13663 ;; Hardware stack levels used:    1
 13664 ;; Hardware stack levels required when called:   12
 13665 ;; This function calls:
 13666 ;;		_USBTransferOnePacket
 13667 ;; This function is called by:
 13668 ;;		_UsbDevice_MainTask
 13669 ;; This function uses a non-reentrant model
 13670 ;;
 13671                           
 13672                           	psect	text54
 13673  002A62                     __ptext54:
 13674                           	opt stack 0
 13675  002A62                     _CDCTxService:
 13676                           	opt stack 15
 13677                           
 13678                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13679                           ;usb_device_cdc.c: 842: uint8_t i;
 13680                           ;usb_device_cdc.c: 844: ;
 13681                           ;usb_device_cdc.c: 846: {};
 13682                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;incstack = 0
 13686  002A62  0101               	movlb	1	; () banked
 13687  002A64  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13688  002A66  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13689  002A68  B4D8               	btfsc	status,2,c
 13690  002A6A  D006               	goto	l1949
 13691                           
 13692                           ; BSR set to: 1
 13693  002A6C  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13694  002A70  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13695  002A74  BEDF               	btfsc	indf2,7,c
 13696  002A76  0012               	return	
 13697  002A78                     l1949:
 13698                           
 13699                           ; BSR set to: 1
 13700                           ;usb_device_cdc.c: 852: }
 13701                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13702                           
 13703                           ; BSR set to: 1
 13704  002A78  0E03               	movlw	3
 13705  002A7A  0100               	movlb	0	; () banked
 13706  002A7C  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13707  002A7E  A4D8               	btfss	status,2,c
 13708  002A80  D002               	goto	l1951
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13712  002A82  0E00               	movlw	0
 13713  002A84  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13714  002A86                     l1951:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13718  002A86  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13719  002A88  B4D8               	btfsc	status,2,c
 13720  002A8A  0012               	return	
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;usb_device_cdc.c: 869: }
 13724                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13725                           
 13726                           ; BSR set to: 0
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;usb_device_cdc.c: 866: {
 13730                           ;usb_device_cdc.c: 867: ;
 13731                           ;usb_device_cdc.c: 868: return;
 13732  002A8C  0E02               	movlw	2
 13733  002A8E  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13734  002A90  A4D8               	btfss	status,2,c
 13735  002A92  D013               	goto	l1953
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;usb_device_cdc.c: 875: {
 13739                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13740  002A94  0E01               	movlw	1
 13741  002A96  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13742  002A98  0E00               	movlw	0
 13743  002A9A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13744  002A9C  0E00               	movlw	0
 13745  002A9E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13746  002AA0  0E00               	movlw	0
 13747  002AA2  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13748  002AA4  0E02               	movlw	2
 13749  002AA6  ECBE  F020         	call	_USBTransferOnePacket
 13750  002AAA  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13751  002AAE  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13752                           
 13753                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13754  002AB2  0E03               	movlw	3
 13755  002AB4  0100               	movlb	0	; () banked
 13756  002AB6  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13757                           
 13758                           ;usb_device_cdc.c: 879: }
 13759  002AB8  0012               	return	
 13760  002ABA                     l1953:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13764                           
 13765                           ; BSR set to: 0
 13766  002ABA  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13767  002ABC  A4D8               	btfss	status,2,c
 13768  002ABE  0012               	return	
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;usb_device_cdc.c: 881: {
 13772                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13773  002AC0  0E40               	movlw	64
 13774  002AC2  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13775  002AC4  D003               	goto	l1956
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13779  002AC6  0E40               	movlw	64
 13780  002AC8  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13781  002ACA  D002               	goto	l1957
 13782  002ACC                     l1956:
 13783                           
 13784                           ; BSR set to: 0
 13785                           ;usb_device_cdc.c: 887: else
 13786                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13787  002ACC  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13788  002AD0                     l1957:
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13792                           
 13793                           ; BSR set to: 0
 13794  002AD0  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13795  002AD2  0800               	sublw	0
 13796  002AD4  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13797  002AD6  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13798                           
 13799                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13800  002AD8  0EB6               	movlw	low _cdc_data_tx
 13801  002ADA  0102               	movlb	2	; () banked
 13802  002ADC  6FC9               	movwf	_pCDCDst& (0+255),b
 13803  002ADE  0E07               	movlw	high _cdc_data_tx
 13804  002AE0  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13805                           
 13806                           ; BSR set to: 2
 13807                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13808  002AE2  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13809                           
 13810                           ; BSR set to: 2
 13811                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13812  002AE6  0101               	movlb	1	; () banked
 13813  002AE8  51E0               	movf	_cdc_mem_type& (0+255),w,b
 13814  002AEA  B4D8               	btfsc	status,2,c
 13815  002AEC  D01D               	goto	l1959
 13816  002AEE  D03D               	goto	l1963
 13817  002AF0                     
 13818                           ;usb_device_cdc.c: 901: {
 13819                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13820                           
 13821                           ; BSR set to: 1
 13822  002AF0  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13823  002AF4  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13824  002AF8  6AF8               	clrf	tblptru,c
 13825  002AFA  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13826  002AFE  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13827  002B02  0E0E               	movlw	(high __ramtop+-1)
 13828  002B04  64F7               	cpfsgt	tblptrh,c
 13829  002B06  D003               	bra	u15087
 13830  002B08  0008               	tblrd		*
 13831  002B0A  50F5               	movf	tablat,w,c
 13832  002B0C  D005               	bra	u15080
 13833  002B0E                     u15087:
 13834  002B0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13835  002B12  CFF7 FFEA          	movff	tblptrh,fsr0h
 13836  002B16  50EF               	movf	indf0,w,c
 13837  002B18                     u15080:
 13838  002B18  6EDF               	movwf	indf2,c
 13839                           
 13840                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13841  002B1A  0102               	movlb	2	; () banked
 13842  002B1C  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13843  002B1E  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13844                           
 13845                           ; BSR set to: 2
 13846                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13847  002B20  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13848  002B22  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13849                           
 13850                           ; BSR set to: 2
 13851                           ;usb_device_cdc.c: 905: i--;
 13852  002B24  0100               	movlb	0	; () banked
 13853  002B26  0784               	decf	CDCTxService@i& (0+255),f,b
 13854  002B28                     l1959:
 13855                           
 13856                           ; BSR set to: 0
 13857  002B28  0100               	movlb	0	; () banked
 13858  002B2A  5184               	movf	CDCTxService@i& (0+255),w,b
 13859  002B2C  B4D8               	btfsc	status,2,c
 13860  002B2E  D021               	goto	u15110
 13861  002B30  D7DF               	goto	l1960
 13862  002B32                     
 13863                           ; BSR set to: 0
 13864                           ;usb_device_cdc.c: 911: {
 13865                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13866                           
 13867                           ; BSR set to: 0
 13868  002B32  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13869  002B36  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13870  002B3A  6AF8               	clrf	tblptru,c
 13871  002B3C  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13872  002B40  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13873  002B44  0E0E               	movlw	(high __ramtop+-1)
 13874  002B46  64F7               	cpfsgt	tblptrh,c
 13875  002B48  D003               	bra	u15107
 13876  002B4A  0008               	tblrd		*
 13877  002B4C  50F5               	movf	tablat,w,c
 13878  002B4E  D005               	bra	u15100
 13879  002B50                     u15107:
 13880  002B50  CFF6 FFE9          	movff	tblptrl,fsr0l
 13881  002B54  CFF7 FFEA          	movff	tblptrh,fsr0h
 13882  002B58  50EF               	movf	indf0,w,c
 13883  002B5A                     u15100:
 13884  002B5A  6EDF               	movwf	indf2,c
 13885                           
 13886                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13887  002B5C  0102               	movlb	2	; () banked
 13888  002B5E  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13889  002B60  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13890                           
 13891                           ; BSR set to: 2
 13892                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13893  002B62  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13894  002B64  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13895                           
 13896                           ; BSR set to: 2
 13897                           ;usb_device_cdc.c: 915: i--;
 13898  002B66  0100               	movlb	0	; () banked
 13899  002B68  0784               	decf	CDCTxService@i& (0+255),f,b
 13900  002B6A                     l1963:
 13901                           
 13902                           ; BSR set to: 0
 13903  002B6A  0100               	movlb	0	; () banked
 13904  002B6C  5184               	movf	CDCTxService@i& (0+255),w,b
 13905  002B6E  A4D8               	btfss	status,2,c
 13906  002B70  D7E0               	goto	l1964
 13907  002B72                     u15110:
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;usb_device_cdc.c: 916: }
 13911                           ;usb_device_cdc.c: 917: }
 13912                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13913                           
 13914                           ; BSR set to: 0
 13915                           
 13916                           ; BSR set to: 0
 13917  002B72  51C4               	movf	_cdc_tx_len& (0+255),w,b
 13918  002B74  A4D8               	btfss	status,2,c
 13919  002B76  D008               	goto	l1968
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;usb_device_cdc.c: 924: {
 13923                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13924  002B78  0E40               	movlw	64
 13925  002B7A  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13926  002B7C  A4D8               	btfss	status,2,c
 13927  002B7E  D002               	goto	l1967
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13931  002B80  0E02               	movlw	2
 13932  002B82  D001               	goto	L13
 13933  002B84                     l1967:
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;usb_device_cdc.c: 927: else
 13937                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13938                           
 13939                           ; BSR set to: 0
 13940  002B84  0E03               	movlw	3
 13941  002B86                     L13:
 13942  002B86  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13943  002B88                     l1968:
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;usb_device_cdc.c: 929: }
 13947                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13948                           
 13949                           ; BSR set to: 0
 13950                           
 13951                           ; BSR set to: 0
 13952  002B88  0E01               	movlw	1
 13953  002B8A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13954  002B8C  0EB6               	movlw	low _cdc_data_tx
 13955  002B8E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13956  002B90  0E07               	movlw	high _cdc_data_tx
 13957  002B92  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13958  002B94  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13959  002B98  0E02               	movlw	2
 13960  002B9A  ECBE  F020         	call	_USBTransferOnePacket
 13961  002B9E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13962  002BA2  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13963  002BA6  0012               	return	
 13964  002BA8                     __end_of_CDCTxService:
 13965                           	opt stack 0
 13966                           tosu	equ	0xFFF
 13967                           tosh	equ	0xFFE
 13968                           tosl	equ	0xFFD
 13969                           pclath	equ	0xFFA
 13970                           tblptru	equ	0xFF8
 13971                           tblptrh	equ	0xFF7
 13972                           tblptrl	equ	0xFF6
 13973                           tablat	equ	0xFF5
 13974                           prodh	equ	0xFF4
 13975                           prodl	equ	0xFF3
 13976                           intcon	equ	0xFF2
 13977                           intcon2	equ	0xFF1
 13978                           intcon3	equ	0xFF0
 13979                           indf0	equ	0xFEF
 13980                           postinc0	equ	0xFEE
 13981                           plusw0	equ	0xFEB
 13982                           fsr0h	equ	0xFEA
 13983                           fsr0l	equ	0xFE9
 13984                           wreg	equ	0xFE8
 13985                           indf1	equ	0xFE7
 13986                           postinc1	equ	0xFE6
 13987                           postdec1	equ	0xFE5
 13988                           fsr1h	equ	0xFE2
 13989                           fsr1l	equ	0xFE1
 13990                           indf2	equ	0xFDF
 13991                           postinc2	equ	0xFDE
 13992                           postdec2	equ	0xFDD
 13993                           plusw2	equ	0xFDB
 13994                           fsr2h	equ	0xFDA
 13995                           fsr2l	equ	0xFD9
 13996                           status	equ	0xFD8
 13997                           
 13998 ;; *************** function _Term_MainSm *****************
 13999 ;; Defined at:
 14000 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;		None
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14005 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14006 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14007 ;;  FwkBuildYear    4    0        unsigned char [4]
 14008 ;;  FwkBuildMont    4    0        unsigned char [4]
 14009 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      void 
 14012 ;; Registers used:
 14013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14020 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14022 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14023 ;;Total ram usage:       12 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; Hardware stack levels required when called:   16
 14026 ;; This function calls:
 14027 ;;		_OsTmr_GetTimerStatus
 14028 ;;		_OsTmr_StartTimer
 14029 ;;		_Terminal
 14030 ;;		_memset
 14031 ;;		_putUSBUSART
 14032 ;;		_sprintf
 14033 ;;		_strcat
 14034 ;;		_strcpy
 14035 ;;		_strlen
 14036 ;;		_utoa
 14037 ;; This function is called by:
 14038 ;;		_Term_MainTask
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text55
 14043  0010B6                     __ptext55:
 14044                           	opt stack 0
 14045  0010B6                     _Term_MainSm:
 14046                           	opt stack 11
 14047                           
 14048                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14049                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14050                           ;term.c: 711: static UINT8 Data[50];
 14051                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14052                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14053                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14054                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14055                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14056                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14057                           ;term.c: 719: switch (TermMainSmState)
 14058                           
 14059                           ;incstack = 0
 14060  0010B6  D133               	goto	l2453
 14061  0010B8                     
 14062                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14063  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 14064  0010BA  0100               	movlb	0	; () banked
 14065  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14066  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 14067  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14068  0010C2  0ED0               	movlw	208
 14069  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14070  0010C6  0E07               	movlw	7
 14071  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14072  0010CA  0E00               	movlw	0
 14073  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14074  0010CE  0E00               	movlw	0
 14075  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14076  0010D2  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 14077                           
 14078                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14079  0010D6  0E01               	movlw	1
 14080  0010D8  0102               	movlb	2	; () banked
 14081  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14082                           
 14083                           ;term.c: 726: break;
 14084  0010DC  0012               	return	
 14085  0010DE                     
 14086                           ; BSR set to: 2
 14087                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14088                           
 14089                           ; BSR set to: 2
 14090  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 14091  0010E0  0100               	movlb	0	; () banked
 14092  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14093  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 14094  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14095  0010E8  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 14096  0010EC  06E8               	decf	wreg,f,c
 14097  0010EE  A4D8               	btfss	status,2,c
 14098  0010F0  0012               	return	
 14099                           
 14100                           ;term.c: 731: {
 14101                           ;term.c: 733: TermMainSmState = Term_InitState;
 14102  0010F2  0E02               	movlw	2
 14103  0010F4  0102               	movlb	2	; () banked
 14104  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14105                           
 14106                           ; BSR set to: 2
 14107                           ;term.c: 734: }
 14108                           ;term.c: 735: break;
 14109  0010F8  0012               	return	
 14110  0010FA                     
 14111                           ; BSR set to: 2
 14112                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14113                           
 14114                           ; BSR set to: 2
 14115  0010FA  0E1F               	movlw	31
 14116  0010FC  0100               	movlb	0	; () banked
 14117  0010FE  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 14118  001100  0012               	return	
 14119                           
 14120                           ; BSR set to: 0
 14121  001102  B265               	btfsc	3941,1,c	;volatile
 14122  001104  0012               	return	
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;term.c: 743: else
 14126                           ;term.c: 744: {
 14127                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14128                           
 14129                           ; BSR set to: 0
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;term.c: 740: {
 14133                           ;term.c: 742: }
 14134  001106  0E03               	movlw	3
 14135  001108  0102               	movlb	2	; () banked
 14136  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14137                           
 14138                           ; BSR set to: 2
 14139                           ;term.c: 747: }
 14140                           ;term.c: 748: break;
 14141  00110C  0012               	return	
 14142  00110E                     
 14143                           ; BSR set to: 2
 14144                           ;term.c: 752: if((cdc_trf_state == 0))
 14145                           
 14146                           ; BSR set to: 2
 14147  00110E  0100               	movlb	0	; () banked
 14148  001110  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14149  001112  A4D8               	btfss	status,2,c
 14150  001114  0012               	return	
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;term.c: 753: {
 14154                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14155  001116  0E21               	movlw	low _Welcome
 14156  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 14157  00111A  0EFD               	movlw	high _Welcome
 14158  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14159  00111E  0E88               	movlw	136
 14160  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 14161  001122  EC1C  F032         	call	_putUSBUSART	;wreg free
 14162                           
 14163                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14164  001126  0E04               	movlw	4
 14165  001128  0102               	movlb	2	; () banked
 14166  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14167                           
 14168                           ; BSR set to: 2
 14169                           ;term.c: 758: }
 14170                           ;term.c: 759: break;
 14171  00112C  0012               	return	
 14172  00112E                     
 14173                           ; BSR set to: 2
 14174                           ;term.c: 763: if((cdc_trf_state == 0))
 14175                           
 14176                           ; BSR set to: 2
 14177  00112E  0100               	movlb	0	; () banked
 14178  001130  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14179  001132  A4D8               	btfss	status,2,c
 14180  001134  0012               	return	
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;term.c: 764: {
 14184                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14185  001136  0E31               	movlw	low _MsgFormat
 14186  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 14187  00113A  0EFC               	movlw	high _MsgFormat
 14188  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14189  00113E  0EEF               	movlw	239
 14190  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 14191  001142  EC1C  F032         	call	_putUSBUSART	;wreg free
 14192                           
 14193                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14194  001146  0E05               	movlw	5
 14195  001148  0102               	movlb	2	; () banked
 14196  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14197                           
 14198                           ; BSR set to: 2
 14199                           ;term.c: 769: }
 14200                           ;term.c: 770: break;
 14201  00114C  0012               	return	
 14202  00114E                     
 14203                           ; BSR set to: 2
 14204                           ;term.c: 774: if((cdc_trf_state == 0))
 14205                           
 14206                           ; BSR set to: 2
 14207  00114E  0100               	movlb	0	; () banked
 14208  001150  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14209  001152  A4D8               	btfss	status,2,c
 14210  001154  0012               	return	
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;term.c: 775: {
 14214                           ;term.c: 777: memset(Data,0,50);
 14215  001156  0E63               	movlw	low Term_MainSm@Data
 14216  001158  6F7D               	movwf	memset@p1& (0+255),b
 14217  00115A  0E04               	movlw	high Term_MainSm@Data
 14218  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14219  00115E  0E00               	movlw	0
 14220  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 14221  001162  0E00               	movlw	0
 14222  001164  6F7F               	movwf	memset@c& (0+255),b
 14223  001166  0E00               	movlw	0
 14224  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 14225  00116A  0E32               	movlw	50
 14226  00116C  6F81               	movwf	memset@n& (0+255),b
 14227  00116E  ECB1  F030         	call	_memset	;wreg free
 14228                           
 14229                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14230  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14231  001174  0100               	movlb	0	; () banked
 14232  001176  6F8A               	movwf	utoa@buf& (0+255),b
 14233  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14234  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14235  00117C  0E00               	movlw	0
 14236  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14237  001180  0E01               	movlw	1
 14238  001182  6F8C               	movwf	utoa@val& (0+255),b
 14239  001184  0E00               	movlw	0
 14240  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14241  001188  0E0A               	movlw	10
 14242  00118A  6F8E               	movwf	utoa@base& (0+255),b
 14243  00118C  EC24  F022         	call	_utoa	;wreg free
 14244                           
 14245                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14246  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14247  001192  0100               	movlb	0	; () banked
 14248  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14249  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14250  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14251  00119A  0E00               	movlw	0
 14252  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14253  00119E  0E02               	movlw	2
 14254  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14255  0011A2  0E00               	movlw	0
 14256  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14257  0011A6  0E0A               	movlw	10
 14258  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14259  0011AA  EC24  F022         	call	_utoa	;wreg free
 14260                           
 14261                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14262  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14263  0011B0  0100               	movlb	0	; () banked
 14264  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14265  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14266  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14267  0011B8  0E00               	movlw	0
 14268  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14269  0011BC  0E00               	movlw	0
 14270  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14271  0011C0  0E00               	movlw	0
 14272  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14273  0011C4  0E0A               	movlw	10
 14274  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14275  0011C8  EC24  F022         	call	_utoa	;wreg free
 14276                           
 14277                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14278  0011CC  0E63               	movlw	low Term_MainSm@Data
 14279  0011CE  0100               	movlb	0	; () banked
 14280  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14281  0011D2  0E04               	movlw	high Term_MainSm@Data
 14282  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14283  0011D6  0ED1               	movlw	low STR_23
 14284  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14285  0011DA  0EFE               	movlw	high STR_23
 14286  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14287  0011DE  EC80  F030         	call	_strcpy	;wreg free
 14288                           
 14289                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14290  0011E2  0E63               	movlw	low Term_MainSm@Data
 14291  0011E4  0100               	movlb	0	; () banked
 14292  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14293  0011E8  0E04               	movlw	high Term_MainSm@Data
 14294  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14295  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14296  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14297  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14298  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14299  0011F4  ECB0  F02A         	call	_strcat	;wreg free
 14300                           
 14301                           ;term.c: 784: strcat(Data,".");
 14302  0011F8  0E63               	movlw	low Term_MainSm@Data
 14303  0011FA  0100               	movlb	0	; () banked
 14304  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14305  0011FE  0E04               	movlw	high Term_MainSm@Data
 14306  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14307  001202  0EF4               	movlw	low STR_24
 14308  001204  6F7F               	movwf	strcat@from& (0+255),b
 14309  001206  0EFF               	movlw	high STR_24
 14310  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14311  00120A  ECB0  F02A         	call	_strcat	;wreg free
 14312                           
 14313                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14314  00120E  0E63               	movlw	low Term_MainSm@Data
 14315  001210  0100               	movlb	0	; () banked
 14316  001212  6F7D               	movwf	strcat@to& (0+255),b
 14317  001214  0E04               	movlw	high Term_MainSm@Data
 14318  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14319  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14320  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14321  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14322  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14323  001220  ECB0  F02A         	call	_strcat	;wreg free
 14324                           
 14325                           ;term.c: 786: strcat(Data,".");
 14326  001224  0E63               	movlw	low Term_MainSm@Data
 14327  001226  0100               	movlb	0	; () banked
 14328  001228  6F7D               	movwf	strcat@to& (0+255),b
 14329  00122A  0E04               	movlw	high Term_MainSm@Data
 14330  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14331  00122E  0EF4               	movlw	low STR_24
 14332  001230  6F7F               	movwf	strcat@from& (0+255),b
 14333  001232  0EFF               	movlw	high STR_24
 14334  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14335  001236  ECB0  F02A         	call	_strcat	;wreg free
 14336                           
 14337                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14338  00123A  0E63               	movlw	low Term_MainSm@Data
 14339  00123C  0100               	movlb	0	; () banked
 14340  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14341  001240  0E04               	movlw	high Term_MainSm@Data
 14342  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14343  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14344  001246  6F7F               	movwf	strcat@from& (0+255),b
 14345  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14346  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14347  00124C  ECB0  F02A         	call	_strcat	;wreg free
 14348                           
 14349                           ;term.c: 788: strcat(Data,"\r\n");
 14350  001250  0E63               	movlw	low Term_MainSm@Data
 14351  001252  0100               	movlb	0	; () banked
 14352  001254  6F7D               	movwf	strcat@to& (0+255),b
 14353  001256  0E04               	movlw	high Term_MainSm@Data
 14354  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14355  00125A  0E85               	movlw	low (STR_21+39)
 14356  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14357  00125E  0EFE               	movlw	high (STR_21+39)
 14358  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14359  001262  ECB0  F02A         	call	_strcat	;wreg free
 14360                           
 14361                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14362  001266  0E63               	movlw	low Term_MainSm@Data
 14363  001268  0100               	movlb	0	; () banked
 14364  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14365  00126C  0E04               	movlw	high Term_MainSm@Data
 14366  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14367  001270  0E63               	movlw	low Term_MainSm@Data
 14368  001272  6F7D               	movwf	strlen@s& (0+255),b
 14369  001274  0E04               	movlw	high Term_MainSm@Data
 14370  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14371  001278  EC62  F02F         	call	_strlen	;wreg free
 14372  00127C  0100               	movlb	0	; () banked
 14373  00127E  517D               	movf	?_strlen& (0+255),w,b
 14374  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14375  001282  EC1C  F032         	call	_putUSBUSART	;wreg free
 14376                           
 14377                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14378  001286  0E06               	movlw	6
 14379  001288  0102               	movlb	2	; () banked
 14380  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14381                           
 14382                           ; BSR set to: 2
 14383                           ;term.c: 793: }
 14384                           ;term.c: 794: break;
 14385  00128C  0012               	return	
 14386  00128E                     
 14387                           ; BSR set to: 2
 14388                           ;term.c: 798: if((cdc_trf_state == 0))
 14389                           
 14390                           ; BSR set to: 2
 14391  00128E  0100               	movlb	0	; () banked
 14392  001290  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14393  001292  A4D8               	btfss	status,2,c
 14394  001294  0012               	return	
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;term.c: 799: {
 14398                           ;term.c: 801: memset(Data,0,50);
 14399  001296  0E63               	movlw	low Term_MainSm@Data
 14400  001298  6F7D               	movwf	memset@p1& (0+255),b
 14401  00129A  0E04               	movlw	high Term_MainSm@Data
 14402  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14403  00129E  0E00               	movlw	0
 14404  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14405  0012A2  0E00               	movlw	0
 14406  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14407  0012A6  0E00               	movlw	0
 14408  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14409  0012AA  0E32               	movlw	50
 14410  0012AC  6F81               	movwf	memset@n& (0+255),b
 14411  0012AE  ECB1  F030         	call	_memset	;wreg free
 14412                           
 14413                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 26 2022");
 14414  0012B2  0E63               	movlw	low Term_MainSm@Data
 14415  0012B4  0100               	movlb	0	; () banked
 14416  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14417  0012B8  0E04               	movlw	high Term_MainSm@Data
 14418  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14419  0012BC  0E0C               	movlw	low STR_27
 14420  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14421  0012C0  0EFF               	movlw	high STR_27
 14422  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14423  0012C4  0EB5               	movlw	low STR_28
 14424  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14425  0012C8  0EFF               	movlw	high STR_28
 14426  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14427  0012CC  EC37  F01D         	call	_sprintf	;wreg free
 14428                           
 14429                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14430  0012D0  0E63               	movlw	low Term_MainSm@Data
 14431  0012D2  0100               	movlb	0	; () banked
 14432  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14433  0012D6  0E04               	movlw	high Term_MainSm@Data
 14434  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14435  0012DA  0E63               	movlw	low Term_MainSm@Data
 14436  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14437  0012DE  0E04               	movlw	high Term_MainSm@Data
 14438  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14439  0012E2  EC62  F02F         	call	_strlen	;wreg free
 14440  0012E6  0100               	movlb	0	; () banked
 14441  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14442  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14443  0012EC  EC1C  F032         	call	_putUSBUSART	;wreg free
 14444                           
 14445                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14446  0012F0  0E07               	movlw	7
 14447  0012F2  0102               	movlb	2	; () banked
 14448  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14449                           
 14450                           ; BSR set to: 2
 14451                           ;term.c: 808: }
 14452                           ;term.c: 809: break;
 14453  0012F6  0012               	return	
 14454  0012F8                     
 14455                           ; BSR set to: 2
 14456                           ;term.c: 813: if((cdc_trf_state == 0))
 14457                           
 14458                           ; BSR set to: 2
 14459  0012F8  0100               	movlb	0	; () banked
 14460  0012FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14461  0012FC  A4D8               	btfss	status,2,c
 14462  0012FE  0012               	return	
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;term.c: 814: {
 14466                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14467  001300  0E31               	movlw	low _MsgReady
 14468  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14469  001304  0EFE               	movlw	high _MsgReady
 14470  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14471  001308  0E16               	movlw	22
 14472  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14473  00130C  EC1C  F032         	call	_putUSBUSART	;wreg free
 14474                           
 14475                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14476  001310  0E08               	movlw	8
 14477  001312  0102               	movlb	2	; () banked
 14478  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14479                           
 14480                           ; BSR set to: 2
 14481                           ;term.c: 819: }
 14482                           ;term.c: 820: break;
 14483  001316  0012               	return	
 14484  001318                     
 14485                           ; BSR set to: 2
 14486                           ;term.c: 824: Terminal();
 14487                           
 14488                           ; BSR set to: 2
 14489  001318  EC68  F000         	call	_Terminal	;wreg free
 14490                           
 14491                           ;term.c: 829: }
 14492                           
 14493                           ;term.c: 828: break;
 14494                           
 14495                           ;term.c: 827: default:
 14496                           
 14497                           ;term.c: 825: break;
 14498  00131C  0012               	return	
 14499  00131E                     l2453:
 14500  00131E  0102               	movlb	2	; () banked
 14501  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14502                           
 14503                           ; Switch size 1, requested type "space"
 14504                           ; Number of cases is 9, Range of values is 0 to 8
 14505                           ; switch strategies available:
 14506                           ; Name         Instructions Cycles
 14507                           ; simple_byte           28    15 (average)
 14508                           ;	Chosen strategy is simple_byte
 14509  001322  0A00               	xorlw	0	; case 0
 14510  001324  B4D8               	btfsc	status,2,c
 14511  001326  D6C8               	goto	l2454
 14512  001328  0A01               	xorlw	1	; case 1
 14513  00132A  B4D8               	btfsc	status,2,c
 14514  00132C  D6D8               	goto	l2456
 14515  00132E  0A03               	xorlw	3	; case 2
 14516  001330  B4D8               	btfsc	status,2,c
 14517  001332  D6E3               	goto	l2458
 14518  001334  0A01               	xorlw	1	; case 3
 14519  001336  B4D8               	btfsc	status,2,c
 14520  001338  D6EA               	goto	l2463
 14521  00133A  0A07               	xorlw	7	; case 4
 14522  00133C  B4D8               	btfsc	status,2,c
 14523  00133E  D6F7               	goto	l2465
 14524  001340  0A01               	xorlw	1	; case 5
 14525  001342  B4D8               	btfsc	status,2,c
 14526  001344  D704               	goto	l2467
 14527  001346  0A03               	xorlw	3	; case 6
 14528  001348  B4D8               	btfsc	status,2,c
 14529  00134A  D7A1               	goto	l2469
 14530  00134C  0A01               	xorlw	1	; case 7
 14531  00134E  B4D8               	btfsc	status,2,c
 14532  001350  D7D3               	goto	l2471
 14533  001352  0A0F               	xorlw	15	; case 8
 14534  001354  A4D8               	btfss	status,2,c
 14535  001356  0012               	return	
 14536  001358  D7DF               	goto	l2473
 14537  00135A                     __end_of_Term_MainSm:
 14538                           	opt stack 0
 14539                           tosu	equ	0xFFF
 14540                           tosh	equ	0xFFE
 14541                           tosl	equ	0xFFD
 14542                           pclath	equ	0xFFA
 14543                           tblptru	equ	0xFF8
 14544                           tblptrh	equ	0xFF7
 14545                           tblptrl	equ	0xFF6
 14546                           tablat	equ	0xFF5
 14547                           prodh	equ	0xFF4
 14548                           prodl	equ	0xFF3
 14549                           intcon	equ	0xFF2
 14550                           intcon2	equ	0xFF1
 14551                           intcon3	equ	0xFF0
 14552                           indf0	equ	0xFEF
 14553                           postinc0	equ	0xFEE
 14554                           plusw0	equ	0xFEB
 14555                           fsr0h	equ	0xFEA
 14556                           fsr0l	equ	0xFE9
 14557                           wreg	equ	0xFE8
 14558                           indf1	equ	0xFE7
 14559                           postinc1	equ	0xFE6
 14560                           postdec1	equ	0xFE5
 14561                           fsr1h	equ	0xFE2
 14562                           fsr1l	equ	0xFE1
 14563                           indf2	equ	0xFDF
 14564                           postinc2	equ	0xFDE
 14565                           postdec2	equ	0xFDD
 14566                           plusw2	equ	0xFDB
 14567                           fsr2h	equ	0xFDA
 14568                           fsr2l	equ	0xFD9
 14569                           status	equ	0xFD8
 14570                           
 14571 ;; *************** function _strlen *****************
 14572 ;; Defined at:
 14573 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14574 ;; Parameters:    Size  Location     Type
 14575 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14576 ;;		 -> Term_MainSm@Data(50), 
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14579 ;;		 -> Term_MainSm@Data(50), 
 14580 ;; Return value:  Size  Location     Type
 14581 ;;                  2   29[BANK0 ] unsigned int 
 14582 ;; Registers used:
 14583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14584 ;; Tracked objects:
 14585 ;;		On entry : 0/0
 14586 ;;		On exit  : 0/0
 14587 ;;		Unchanged: 0/0
 14588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14593 ;;Total ram usage:        6 bytes
 14594 ;; Hardware stack levels used:    1
 14595 ;; Hardware stack levels required when called:   11
 14596 ;; This function calls:
 14597 ;;		Nothing
 14598 ;; This function is called by:
 14599 ;;		_Term_MainSm
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           	psect	text56
 14604  005EC4                     __ptext56:
 14605                           	opt stack 0
 14606  005EC4                     _strlen:
 14607                           	opt stack 15
 14608                           
 14609                           ;incstack = 0
 14610  005EC4  C07D  F081         	movff	strlen@s,strlen@cp
 14611  005EC8  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14612  005ECC  D003               	goto	l3422
 14613  005ECE  0100               	movlb	0	; () banked
 14614  005ED0  4B81               	infsnz	strlen@cp& (0+255),f,b
 14615  005ED2  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14616  005ED4                     l3422:
 14617                           
 14618                           ; BSR set to: 0
 14619  005ED4  C081  FFD9         	movff	strlen@cp,fsr2l
 14620  005ED8  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14621  005EDC  50DF               	movf	indf2,w,c
 14622  005EDE  A4D8               	btfss	status,2,c
 14623  005EE0  D7F6               	goto	l3423
 14624  005EE2  C07D  F07F         	movff	strlen@s,??_strlen
 14625  005EE6  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14626  005EEA  0100               	movlb	0	; () banked
 14627  005EEC  1F7F               	comf	??_strlen& (0+255),f,b
 14628  005EEE  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14629  005EF0  4B7F               	infsnz	??_strlen& (0+255),f,b
 14630  005EF2  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14631  005EF4  5181               	movf	strlen@cp& (0+255),w,b
 14632  005EF6  257F               	addwf	??_strlen& (0+255),w,b
 14633  005EF8  6F7D               	movwf	?_strlen& (0+255),b
 14634  005EFA  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14635  005EFC  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14636  005EFE  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14637  005F00  0012               	return	
 14638  005F02                     __end_of_strlen:
 14639                           	opt stack 0
 14640                           tosu	equ	0xFFF
 14641                           tosh	equ	0xFFE
 14642                           tosl	equ	0xFFD
 14643                           pclath	equ	0xFFA
 14644                           tblptru	equ	0xFF8
 14645                           tblptrh	equ	0xFF7
 14646                           tblptrl	equ	0xFF6
 14647                           tablat	equ	0xFF5
 14648                           prodh	equ	0xFF4
 14649                           prodl	equ	0xFF3
 14650                           intcon	equ	0xFF2
 14651                           intcon2	equ	0xFF1
 14652                           intcon3	equ	0xFF0
 14653                           indf0	equ	0xFEF
 14654                           postinc0	equ	0xFEE
 14655                           plusw0	equ	0xFEB
 14656                           fsr0h	equ	0xFEA
 14657                           fsr0l	equ	0xFE9
 14658                           wreg	equ	0xFE8
 14659                           indf1	equ	0xFE7
 14660                           postinc1	equ	0xFE6
 14661                           postdec1	equ	0xFE5
 14662                           fsr1h	equ	0xFE2
 14663                           fsr1l	equ	0xFE1
 14664                           indf2	equ	0xFDF
 14665                           postinc2	equ	0xFDE
 14666                           postdec2	equ	0xFDD
 14667                           plusw2	equ	0xFDB
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8
 14671                           
 14672 ;; *************** function _strcat *****************
 14673 ;; Defined at:
 14674 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14677 ;;		 -> Term_MainSm@Data(50), 
 14678 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14679 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14680 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14683 ;;		 -> Term_MainSm@Data(50), 
 14684 ;; Return value:  Size  Location     Type
 14685 ;;                  2   29[BANK0 ] PTR unsigned char 
 14686 ;; Registers used:
 14687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14688 ;; Tracked objects:
 14689 ;;		On entry : 0/0
 14690 ;;		On exit  : 0/0
 14691 ;;		Unchanged: 0/0
 14692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14696 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14697 ;;Total ram usage:        6 bytes
 14698 ;; Hardware stack levels used:    1
 14699 ;; Hardware stack levels required when called:   11
 14700 ;; This function calls:
 14701 ;;		Nothing
 14702 ;; This function is called by:
 14703 ;;		_Term_MainSm
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text57
 14708  005560                     __ptext57:
 14709                           	opt stack 0
 14710  005560                     _strcat:
 14711                           	opt stack 15
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;incstack = 0
 14715  005560  C07D  F081         	movff	strcat@to,strcat@cp
 14716  005564  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14717  005568  D003               	goto	l3407
 14718  00556A  0100               	movlb	0	; () banked
 14719  00556C  4B81               	infsnz	strcat@cp& (0+255),f,b
 14720  00556E  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14721  005570                     l3407:
 14722                           
 14723                           ; BSR set to: 0
 14724  005570  C081  FFD9         	movff	strcat@cp,fsr2l
 14725  005574  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14726  005578  50DF               	movf	indf2,w,c
 14727  00557A  B4D8               	btfsc	status,2,c
 14728  00557C  D006               	goto	l3410
 14729  00557E  D7F5               	goto	l3408
 14730  005580  0100               	movlb	0	; () banked
 14731  005582  4B81               	infsnz	strcat@cp& (0+255),f,b
 14732  005584  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14733  005586  4B7F               	infsnz	strcat@from& (0+255),f,b
 14734  005588  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14735  00558A                     l3410:
 14736                           
 14737                           ; BSR set to: 0
 14738  00558A  C07F  FFF6         	movff	strcat@from,tblptrl
 14739  00558E  C080  FFF7         	movff	strcat@from+1,tblptrh
 14740  005592  6AF8               	clrf	tblptru,c
 14741  005594  C081  FFD9         	movff	strcat@cp,fsr2l
 14742  005598  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14743  00559C  0E0E               	movlw	(high __ramtop+-1)
 14744  00559E  64F7               	cpfsgt	tblptrh,c
 14745  0055A0  D003               	bra	u13787
 14746  0055A2  0008               	tblrd		*
 14747  0055A4  50F5               	movf	tablat,w,c
 14748  0055A6  D005               	bra	u13780
 14749  0055A8                     u13787:
 14750  0055A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14751  0055AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14752  0055B0  50EF               	movf	indf0,w,c
 14753  0055B2                     u13780:
 14754  0055B2  6EDF               	movwf	indf2,c
 14755  0055B4  50DF               	movf	indf2,w,c
 14756  0055B6  B4D8               	btfsc	status,2,c
 14757  0055B8  0012               	return	
 14758  0055BA  D7E2               	goto	l3411
 14759  0055BC                     __end_of_strcat:
 14760                           	opt stack 0
 14761                           tosu	equ	0xFFF
 14762                           tosh	equ	0xFFE
 14763                           tosl	equ	0xFFD
 14764                           pclath	equ	0xFFA
 14765                           tblptru	equ	0xFF8
 14766                           tblptrh	equ	0xFF7
 14767                           tblptrl	equ	0xFF6
 14768                           tablat	equ	0xFF5
 14769                           prodh	equ	0xFF4
 14770                           prodl	equ	0xFF3
 14771                           intcon	equ	0xFF2
 14772                           intcon2	equ	0xFF1
 14773                           intcon3	equ	0xFF0
 14774                           indf0	equ	0xFEF
 14775                           postinc0	equ	0xFEE
 14776                           plusw0	equ	0xFEB
 14777                           fsr0h	equ	0xFEA
 14778                           fsr0l	equ	0xFE9
 14779                           wreg	equ	0xFE8
 14780                           indf1	equ	0xFE7
 14781                           postinc1	equ	0xFE6
 14782                           postdec1	equ	0xFE5
 14783                           fsr1h	equ	0xFE2
 14784                           fsr1l	equ	0xFE1
 14785                           indf2	equ	0xFDF
 14786                           postinc2	equ	0xFDE
 14787                           postdec2	equ	0xFDD
 14788                           plusw2	equ	0xFDB
 14789                           fsr2h	equ	0xFDA
 14790                           fsr2l	equ	0xFD9
 14791                           status	equ	0xFD8
 14792                           
 14793 ;; *************** function _sprintf *****************
 14794 ;; Defined at:
 14795 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14798 ;;		 -> Term_MainSm@Data(50), 
 14799 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14800 ;;		 -> STR_27(17), 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  tmpval          4    0        struct .
 14803 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14804 ;;		 -> STR_33(7), STR_28(12), 
 14805 ;;  ap              2   36[BANK0 ] PTR void [1]
 14806 ;;		 -> ?_sprintf(2), 
 14807 ;;  len             2    0        unsigned int 
 14808 ;;  val             2    0        unsigned int 
 14809 ;;  c               1   38[BANK0 ] char 
 14810 ;;  flag            1   35[BANK0 ] unsigned char 
 14811 ;;  prec            1    0        char 
 14812 ;; Return value:  Size  Location     Type
 14813 ;;                  2   29[BANK0 ] int 
 14814 ;; Registers used:
 14815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14821 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14822 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;Total ram usage:       12 bytes
 14826 ;; Hardware stack levels used:    1
 14827 ;; Hardware stack levels required when called:   11
 14828 ;; This function calls:
 14829 ;;		Nothing
 14830 ;; This function is called by:
 14831 ;;		_Term_MainSm
 14832 ;; This function uses a non-reentrant model
 14833 ;;
 14834                           
 14835                           	psect	text58
 14836  003A6E                     __ptext58:
 14837                           	opt stack 0
 14838  003A6E                     _sprintf:
 14839                           	opt stack 15
 14840                           
 14841                           ;doprnt.c: 494: va_list ap;
 14842                           ;doprnt.c: 499: signed char c;
 14843                           ;doprnt.c: 506: signed char prec;
 14844                           ;doprnt.c: 508: unsigned char flag;
 14845                           ;doprnt.c: 523: union {
 14846                           ;doprnt.c: 524: unsigned long vd;
 14847                           ;doprnt.c: 525: double integ;
 14848                           ;doprnt.c: 526: } tmpval;
 14849                           ;doprnt.c: 528: unsigned int val;
 14850                           ;doprnt.c: 529: unsigned len;
 14851                           ;doprnt.c: 530: const char * cp;
 14852                           ;doprnt.c: 533: *ap = __va_start();
 14853                           
 14854                           ;incstack = 0
 14855  003A6E  0E81               	movlw	low (?_sprintf+4)
 14856  003A70  0100               	movlb	0	; () banked
 14857  003A72  6F84               	movwf	sprintf@ap& (0+255),b
 14858  003A74  0E00               	movlw	high (?_sprintf+4)
 14859  003A76  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14860                           
 14861                           ;doprnt.c: 536: while(c = *f++) {
 14862  003A78  D04E               	goto	l2811
 14863  003A7A                     
 14864                           ; BSR set to: 0
 14865                           ;doprnt.c: 538: if(c != '%')
 14866                           
 14867                           ; BSR set to: 0
 14868  003A7A  0E25               	movlw	37
 14869  003A7C  1986               	xorwf	sprintf@c& (0+255),w,b
 14870  003A7E  B4D8               	btfsc	status,2,c
 14871  003A80  D009               	goto	l2801
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;doprnt.c: 540: {
 14875                           ;doprnt.c: 541: ((*sp++ = (c)));
 14876  003A82  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14877  003A86  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14878  003A8A  C086  FFDF         	movff	sprintf@c,indf2
 14879                           
 14880                           ; BSR set to: 0
 14881  003A8E  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14882  003A90  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14883                           
 14884                           ;doprnt.c: 542: continue;
 14885  003A92  D041               	goto	l2811
 14886  003A94                     l2801:
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;doprnt.c: 543: }
 14890                           ;doprnt.c: 548: flag = 0;
 14891                           
 14892                           ; BSR set to: 0
 14893  003A94  0E00               	movlw	0
 14894  003A96  6F83               	movwf	sprintf@flag& (0+255),b
 14895                           
 14896                           ;doprnt.c: 635: switch(c = *f++) {
 14897  003A98  D02E               	goto	l2802
 14898  003A9A                     
 14899                           ; BSR set to: 0
 14900                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14901                           
 14902                           ; BSR set to: 0
 14903  003A9A  C084  FFD9         	movff	sprintf@ap,fsr2l
 14904  003A9E  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14905  003AA2  CFDE F087          	movff	postinc2,sprintf@cp
 14906  003AA6  CFDD F088          	movff	postdec2,sprintf@cp+1
 14907                           
 14908                           ; BSR set to: 0
 14909  003AAA  0E02               	movlw	2
 14910  003AAC  2784               	addwf	sprintf@ap& (0+255),f,b
 14911  003AAE  0E00               	movlw	0
 14912  003AB0  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;doprnt.c: 740: if(!cp)
 14916  003AB2  5187               	movf	sprintf@cp& (0+255),w,b
 14917  003AB4  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14918  003AB6  A4D8               	btfss	status,2,c
 14919  003AB8  D014               	goto	l2807
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;doprnt.c: 741: cp = "(null)";
 14923  003ABA  0ED7               	movlw	low STR_33
 14924  003ABC  6F87               	movwf	sprintf@cp& (0+255),b
 14925  003ABE  0EFF               	movlw	high STR_33
 14926  003AC0  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;doprnt.c: 777: while(*cp)
 14930  003AC2  D00F               	goto	l2807
 14931  003AC4                     
 14932                           ; BSR set to: 0
 14933                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14934                           
 14935                           ; BSR set to: 0
 14936  003AC4  C087  FFF6         	movff	sprintf@cp,tblptrl
 14937  003AC8  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14938  003ACC                     	if	0	;tblptru may be non-zero
 14939  003ACC                     	endif
 14940  003ACC                     	if	0	;tblptru may be non-zero
 14941  003ACC                     	endif
 14942  003ACC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14943  003AD0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14944  003AD4  0008               	tblrd		*
 14945  003AD6  CFF5 FFDF          	movff	tablat,indf2
 14946                           
 14947                           ; BSR set to: 0
 14948  003ADA  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14949  003ADC  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14950                           
 14951                           ; BSR set to: 0
 14952  003ADE  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14953  003AE0  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14954  003AE2                     l2807:
 14955                           
 14956                           ; BSR set to: 0
 14957                           
 14958                           ; BSR set to: 0
 14959  003AE2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14960  003AE6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14961  003AEA                     	if	0	;tblptru may be non-zero
 14962  003AEA                     	endif
 14963  003AEA                     	if	0	;tblptru may be non-zero
 14964  003AEA                     	endif
 14965  003AEA  0008               	tblrd		*
 14966  003AEC  50F5               	movf	tablat,w,c
 14967  003AEE  0900               	iorlw	0
 14968  003AF0  B4D8               	btfsc	status,2,c
 14969  003AF2  D011               	goto	l2811
 14970  003AF4  D7E7               	goto	l2808
 14971  003AF6                     l2802:
 14972                           
 14973                           ; BSR set to: 0
 14974                           
 14975                           ; BSR set to: 0
 14976  003AF6  C07F  FFF6         	movff	sprintf@f,tblptrl
 14977  003AFA  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14978  003AFE  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14979  003B00  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14980  003B02                     	if	0	;tblptru may be non-zero
 14981  003B02                     	endif
 14982  003B02                     	if	0	;tblptru may be non-zero
 14983  003B02                     	endif
 14984  003B02  0008               	tblrd		*
 14985  003B04  CFF5 F086          	movff	tablat,sprintf@c
 14986  003B08  5186               	movf	sprintf@c& (0+255),w,b
 14987                           
 14988                           ; Switch size 1, requested type "space"
 14989                           ; Number of cases is 2, Range of values is 0 to 115
 14990                           ; switch strategies available:
 14991                           ; Name         Instructions Cycles
 14992                           ; simple_byte            7     4 (average)
 14993                           ;	Chosen strategy is simple_byte
 14994  003B0A  0A00               	xorlw	0	; case 0
 14995  003B0C  B4D8               	btfsc	status,2,c
 14996  003B0E  D00F               	goto	u13840
 14997  003B10  0A73               	xorlw	115	; case 115
 14998  003B12  B4D8               	btfsc	status,2,c
 14999  003B14  D7C2               	goto	l2805
 15000  003B16                     l2811:
 15001                           
 15002                           ; BSR set to: 0
 15003                           
 15004                           ; BSR set to: 0
 15005                           
 15006                           ;doprnt.c: 1422: {
 15007                           
 15008                           ; BSR set to: 0
 15009  003B16  C07F  FFF6         	movff	sprintf@f,tblptrl
 15010  003B1A  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15011  003B1E  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15012  003B20  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15013  003B22                     	if	0	;tblptru may be non-zero
 15014  003B22                     	endif
 15015  003B22                     	if	0	;tblptru may be non-zero
 15016  003B22                     	endif
 15017  003B22  0008               	tblrd		*
 15018  003B24  CFF5 F086          	movff	tablat,sprintf@c
 15019  003B28  5186               	movf	sprintf@c& (0+255),w,b
 15020  003B2A  A4D8               	btfss	status,2,c
 15021  003B2C  D7A6               	goto	l2800
 15022  003B2E                     u13840:
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;doprnt.c: 1538: *sp = 0;
 15026                           
 15027                           ; BSR set to: 0
 15028                           
 15029                           ;doprnt.c: 1469: }
 15030                           ;doprnt.c: 1533: }
 15031                           ;doprnt.c: 1535: alldone:
 15032                           
 15033                           ; BSR set to: 0
 15034  003B2E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15035  003B32  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15036  003B36  0E00               	movlw	0
 15037  003B38  6EDF               	movwf	indf2,c
 15038  003B3A  0012               	return	
 15039  003B3C                     __end_of_sprintf:
 15040                           	opt stack 0
 15041                           tosu	equ	0xFFF
 15042                           tosh	equ	0xFFE
 15043                           tosl	equ	0xFFD
 15044                           pclath	equ	0xFFA
 15045                           tblptru	equ	0xFF8
 15046                           tblptrh	equ	0xFF7
 15047                           tblptrl	equ	0xFF6
 15048                           tablat	equ	0xFF5
 15049                           prodh	equ	0xFF4
 15050                           prodl	equ	0xFF3
 15051                           intcon	equ	0xFF2
 15052                           intcon2	equ	0xFF1
 15053                           intcon3	equ	0xFF0
 15054                           indf0	equ	0xFEF
 15055                           postinc0	equ	0xFEE
 15056                           plusw0	equ	0xFEB
 15057                           fsr0h	equ	0xFEA
 15058                           fsr0l	equ	0xFE9
 15059                           wreg	equ	0xFE8
 15060                           indf1	equ	0xFE7
 15061                           postinc1	equ	0xFE6
 15062                           postdec1	equ	0xFE5
 15063                           fsr1h	equ	0xFE2
 15064                           fsr1l	equ	0xFE1
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           postdec2	equ	0xFDD
 15068                           plusw2	equ	0xFDB
 15069                           fsr2h	equ	0xFDA
 15070                           fsr2l	equ	0xFD9
 15071                           status	equ	0xFD8
 15072                           
 15073 ;; *************** function _memset *****************
 15074 ;; Defined at:
 15075 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;  p1              2   29[BANK0 ] PTR void 
 15078 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15079 ;;  c               2   31[BANK0 ] int 
 15080 ;;  n               2   33[BANK0 ] unsigned int 
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15083 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  2   29[BANK0 ] PTR void 
 15086 ;; Registers used:
 15087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15094 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15096 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15097 ;;Total ram usage:        8 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; Hardware stack levels required when called:   11
 15100 ;; This function calls:
 15101 ;;		Nothing
 15102 ;; This function is called by:
 15103 ;;		_USBDeviceInit
 15104 ;;		_USBStdSetCfgHandler
 15105 ;;		_Term_MainSm
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text59
 15110  006162                     __ptext59:
 15111                           	opt stack 0
 15112  006162                     _memset:
 15113                           	opt stack 14
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;incstack = 0
 15117  006162  C07D  F083         	movff	memset@p1,memset@p
 15118  006166  C07E  F084         	movff	memset@p1+1,memset@p+1
 15119  00616A  D009               	goto	l3281
 15120  00616C                     l12498:
 15121  00616C  C083  FFD9         	movff	memset@p,fsr2l
 15122  006170  C084  FFDA         	movff	memset@p+1,fsr2h
 15123  006174  C07F  FFDF         	movff	memset@c,indf2
 15124  006178  0100               	movlb	0	; () banked
 15125  00617A  4B83               	infsnz	memset@p& (0+255),f,b
 15126  00617C  2B84               	incf	(memset@p+1)& (0+255),f,b
 15127  00617E                     l3281:
 15128                           
 15129                           ; BSR set to: 0
 15130  00617E  0100               	movlb	0	; () banked
 15131  006180  0781               	decf	memset@n& (0+255),f,b
 15132  006182  A0D8               	btfss	status,0,c
 15133  006184  0782               	decf	(memset@n+1)& (0+255),f,b
 15134  006186  2981               	incf	memset@n& (0+255),w,b
 15135  006188  E1F1               	bnz	l12498
 15136  00618A  2982               	incf	(memset@n+1)& (0+255),w,b
 15137  00618C  B4D8               	btfsc	status,2,c
 15138  00618E  0012               	return	
 15139  006190  D7ED               	goto	l3282
 15140  006192                     __end_of_memset:
 15141                           	opt stack 0
 15142                           tosu	equ	0xFFF
 15143                           tosh	equ	0xFFE
 15144                           tosl	equ	0xFFD
 15145                           pclath	equ	0xFFA
 15146                           tblptru	equ	0xFF8
 15147                           tblptrh	equ	0xFF7
 15148                           tblptrl	equ	0xFF6
 15149                           tablat	equ	0xFF5
 15150                           prodh	equ	0xFF4
 15151                           prodl	equ	0xFF3
 15152                           intcon	equ	0xFF2
 15153                           intcon2	equ	0xFF1
 15154                           intcon3	equ	0xFF0
 15155                           indf0	equ	0xFEF
 15156                           postinc0	equ	0xFEE
 15157                           plusw0	equ	0xFEB
 15158                           fsr0h	equ	0xFEA
 15159                           fsr0l	equ	0xFE9
 15160                           wreg	equ	0xFE8
 15161                           indf1	equ	0xFE7
 15162                           postinc1	equ	0xFE6
 15163                           postdec1	equ	0xFE5
 15164                           fsr1h	equ	0xFE2
 15165                           fsr1l	equ	0xFE1
 15166                           indf2	equ	0xFDF
 15167                           postinc2	equ	0xFDE
 15168                           postdec2	equ	0xFDD
 15169                           plusw2	equ	0xFDB
 15170                           fsr2h	equ	0xFDA
 15171                           fsr2l	equ	0xFD9
 15172                           status	equ	0xFD8
 15173                           
 15174 ;; *************** function _Terminal *****************
 15175 ;; Defined at:
 15176 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;		None
 15179 ;; Auto vars:     Size  Location     Type
 15180 ;;  i               1   68[BANK0 ] unsigned char 
 15181 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15182 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15183 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15184 ;;  Index           1   70[BANK0 ] unsigned char 
 15185 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15186 ;; Return value:  Size  Location     Type
 15187 ;;                  1    wreg      void 
 15188 ;; Registers used:
 15189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15190 ;; Tracked objects:
 15191 ;;		On entry : 0/0
 15192 ;;		On exit  : 0/0
 15193 ;;		Unchanged: 0/0
 15194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15196 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15197 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15198 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15199 ;;Total ram usage:      455 bytes
 15200 ;; Hardware stack levels used:    1
 15201 ;; Hardware stack levels required when called:   15
 15202 ;; This function calls:
 15203 ;;		_I2cSlv_I2cReadMsgSts
 15204 ;;		_I2cSlv_ReceiveI2cMsg
 15205 ;;		_I2cSlv_SendI2cMsg
 15206 ;;		_OsTmr_Wait
 15207 ;;		_atoi
 15208 ;;		_getsUSBUSART
 15209 ;;		_itoa
 15210 ;;		_putUSBUSART
 15211 ;;		_strcpy
 15212 ;;		_strtol
 15213 ;;		_xtoi
 15214 ;; This function is called by:
 15215 ;;		_Term_MainSm
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text60
 15220  0000D0                     __ptext60:
 15221                           	opt stack 0
 15222  0000D0                     _Terminal:
 15223                           	opt stack 11
 15224                           
 15225                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15226                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15227                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15228                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15229                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15230                           ;term.c: 435: UINT8 Index;
 15231                           ;term.c: 436: static UINT8 Len[4];
 15232                           ;term.c: 437: static UINT8 PackageLen;
 15233                           ;term.c: 438: static UINT8 Addr[4];
 15234                           ;term.c: 439: static UINT8 SlaveAddr;
 15235                           ;term.c: 440: static PayloadType Payload[20u];
 15236                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;incstack = 0
 15240  0000D0  0E00               	movlw	0
 15241  0000D2  0100               	movlb	0	; () banked
 15242  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15243                           
 15244                           ; BSR set to: 0
 15245                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15246                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15247                           ;term.c: 445: static SwTimerType SwTimer;
 15248                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15249  0000D6  0E1F               	movlw	31
 15250  0000D8  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 15251  0000DA  0012               	return	
 15252                           
 15253                           ; BSR set to: 0
 15254  0000DC  B265               	btfsc	3941,1,c	;volatile
 15255  0000DE  0012               	return	
 15256  0000E0  D278               	goto	l2393
 15257  0000E2                     
 15258                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15259                           
 15260                           ; BSR set to: 0
 15261  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15262  0000E4  0100               	movlb	0	; () banked
 15263  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15264  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15265  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15266  0000EC  0EC8               	movlw	200
 15267  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15268  0000F0  ECA8  F024         	call	_getsUSBUSART	;wreg free
 15269  0000F4  0100               	movlb	0	; () banked
 15270  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15271                           
 15272                           ; BSR set to: 0
 15273                           ;term.c: 458: if (ReceivedBytes > 0)
 15274  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15275  0000FA  B4D8               	btfsc	status,2,c
 15276  0000FC  0012               	return	
 15277                           
 15278                           ; BSR set to: 0
 15279                           ;term.c: 459: {
 15280                           ;term.c: 461: if (EchoOption == 1u)
 15281  0000FE  0102               	movlb	2	; () banked
 15282  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15283  000102  A4D8               	btfss	status,2,c
 15284  000104  D026               	goto	l2397
 15285                           
 15286                           ; BSR set to: 2
 15287                           ;term.c: 462: {
 15288                           ;term.c: 464: if((cdc_trf_state == 0))
 15289  000106  0100               	movlb	0	; () banked
 15290  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15291  00010A  A4D8               	btfss	status,2,c
 15292  00010C  D022               	goto	l2397
 15293                           
 15294                           ; BSR set to: 0
 15295                           ;term.c: 465: {
 15296                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15297  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15298  000110  0D01               	mullw	1
 15299  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15300  000114  24F3               	addwf	prodl,w,c
 15301  000116  6ED9               	movwf	fsr2l,c
 15302  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15303  00011A  20F4               	addwfc	prodh,w,c
 15304  00011C  6EDA               	movwf	fsr2h,c
 15305  00011E  0E0D               	movlw	13
 15306  000120  6EDF               	movwf	indf2,c
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15310  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15311  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15312  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15313  000128  0E01               	movlw	1
 15314  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15315  00012C  0E00               	movlw	0
 15316  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15317  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15318  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15319  000134  6ED9               	movwf	fsr2l,c
 15320  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15321  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15322  00013A  6EDA               	movwf	fsr2h,c
 15323  00013C  0E0A               	movlw	10
 15324  00013E  6EDF               	movwf	indf2,c
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15328  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15329  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15330  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15331  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15332  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15333  00014A  0F02               	addlw	2
 15334  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15335  00014E  EC1C  F032         	call	_putUSBUSART	;wreg free
 15336  000152                     l2397:
 15337                           
 15338                           ;term.c: 469: }
 15339                           ;term.c: 470: }
 15340                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15341                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15342                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15343  000152  0E53               	movlw	83
 15344  000154  010A               	movlb	10	; () banked
 15345  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15346  000158  A4D8               	btfss	status,2,c
 15347  00015A  D043               	goto	l2398
 15348                           
 15349                           ; BSR set to: 10
 15350  00015C  0E4F               	movlw	79
 15351  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15352  000160  A4D8               	btfss	status,2,c
 15353  000162  D03F               	goto	l2398
 15354                           
 15355                           ; BSR set to: 10
 15356  000164  0E3A               	movlw	58
 15357  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15358  000168  A4D8               	btfss	status,2,c
 15359  00016A  D03B               	goto	l2398
 15360                           
 15361                           ; BSR set to: 10
 15362                           ;term.c: 476: {
 15363                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15364  00016C  0E47               	movlw	71
 15365  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15366  000170  A4D8               	btfss	status,2,c
 15367  000172  0012               	return	
 15368                           
 15369                           ; BSR set to: 10
 15370  000174  0E3A               	movlw	58
 15371  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15372  000178  A4D8               	btfss	status,2,c
 15373  00017A  0012               	return	
 15374                           
 15375                           ; BSR set to: 10
 15376                           ;term.c: 479: {
 15377                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15378  00017C  0E44               	movlw	68
 15379  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15380  000180  A4D8               	btfss	status,2,c
 15381  000182  D015               	goto	l2400
 15382                           
 15383                           ; BSR set to: 10
 15384  000184  0E46               	movlw	70
 15385  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15386  000188  A4D8               	btfss	status,2,c
 15387  00018A  D011               	goto	l2400
 15388                           
 15389                           ; BSR set to: 10
 15390                           ;term.c: 482: {
 15391                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15392  00018C  0E41               	movlw	65
 15393  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15394  000190  A4D8               	btfss	status,2,c
 15395  000192  D004               	goto	l2401
 15396                           
 15397                           ; BSR set to: 10
 15398                           ;term.c: 484: {
 15399                           ;term.c: 485: FormatOption = 1u;
 15400  000194  0E01               	movlw	1
 15401  000196  0102               	movlb	2	; () banked
 15402  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15403                           
 15404                           ;term.c: 486: }
 15405  00019A  0012               	return	
 15406  00019C                     l2401:
 15407                           
 15408                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15409                           
 15410                           ; BSR set to: 2
 15411  00019C  0E42               	movlw	66
 15412  00019E  010A               	movlb	10	; () banked
 15413  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15414  0001A2  A4D8               	btfss	status,2,c
 15415  0001A4  0012               	return	
 15416                           
 15417                           ; BSR set to: 10
 15418                           ;term.c: 488: {
 15419                           ;term.c: 489: FormatOption = 0u;
 15420  0001A6  0E00               	movlw	0
 15421  0001A8  0102               	movlb	2	; () banked
 15422  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15423                           
 15424                           ; BSR set to: 2
 15425                           ;term.c: 490: }
 15426                           ;term.c: 491: }
 15427                           
 15428                           ; BSR set to: 2
 15429  0001AC  0012               	return	
 15430  0001AE                     l2400:
 15431                           
 15432                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15433                           
 15434                           ; BSR set to: 2
 15435  0001AE  0E45               	movlw	69
 15436  0001B0  010A               	movlb	10	; () banked
 15437  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15438  0001B4  A4D8               	btfss	status,2,c
 15439  0001B6  0012               	return	
 15440                           
 15441                           ; BSR set to: 10
 15442  0001B8  0E4D               	movlw	77
 15443  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15444  0001BC  A4D8               	btfss	status,2,c
 15445  0001BE  0012               	return	
 15446                           
 15447                           ; BSR set to: 10
 15448                           ;term.c: 494: {
 15449                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15450  0001C0  0E31               	movlw	49
 15451  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15452  0001C4  A4D8               	btfss	status,2,c
 15453  0001C6  D004               	goto	l2406
 15454                           
 15455                           ; BSR set to: 10
 15456                           ;term.c: 496: {
 15457                           ;term.c: 497: EchoOption = 1u;
 15458  0001C8  0E01               	movlw	1
 15459  0001CA  0102               	movlb	2	; () banked
 15460  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15461                           
 15462                           ;term.c: 498: }
 15463  0001CE  0012               	return	
 15464  0001D0                     l2406:
 15465                           
 15466                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15467                           
 15468                           ; BSR set to: 2
 15469  0001D0  0E30               	movlw	48
 15470  0001D2  010A               	movlb	10	; () banked
 15471  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15472  0001D6  A4D8               	btfss	status,2,c
 15473  0001D8  0012               	return	
 15474                           
 15475                           ; BSR set to: 10
 15476                           ;term.c: 500: {
 15477                           ;term.c: 501: EchoOption = 0u;
 15478  0001DA  0E00               	movlw	0
 15479  0001DC  0102               	movlb	2	; () banked
 15480  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15481                           
 15482                           ; BSR set to: 2
 15483                           ;term.c: 507: }
 15484                           ;term.c: 508: }
 15485                           ;term.c: 509: }
 15486                           
 15487                           ; BSR set to: 2
 15488                           
 15489                           ; BSR set to: 2
 15490                           
 15491                           ;term.c: 504: else
 15492                           ;term.c: 505: {
 15493                           
 15494                           ; BSR set to: 2
 15495                           
 15496                           ; BSR set to: 2
 15497                           ;term.c: 502: }
 15498                           ;term.c: 503: }
 15499                           
 15500                           ; BSR set to: 2
 15501  0001E0  0012               	return	
 15502  0001E2                     l2398:
 15503                           
 15504                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15505                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15506                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15507                           
 15508                           ; BSR set to: 2
 15509  0001E2  0E53               	movlw	83
 15510  0001E4  010A               	movlb	10	; () banked
 15511  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15512  0001E8  A4D8               	btfss	status,2,c
 15513  0001EA  D0D3               	goto	l2411
 15514                           
 15515                           ; BSR set to: 10
 15516  0001EC  0E42               	movlw	66
 15517  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15518  0001F0  A4D8               	btfss	status,2,c
 15519  0001F2  D0CF               	goto	l2411
 15520                           
 15521                           ; BSR set to: 10
 15522  0001F4  0E3A               	movlw	58
 15523  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15524  0001F8  A4D8               	btfss	status,2,c
 15525  0001FA  D0CB               	goto	l2411
 15526                           
 15527                           ; BSR set to: 10
 15528                           ;term.c: 513: {
 15529                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15530  0001FC  0E57               	movlw	87
 15531  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15532  000200  A4D8               	btfss	status,2,c
 15533  000202  D091               	goto	l2412
 15534                           
 15535                           ; BSR set to: 10
 15536  000204  0E3A               	movlw	58
 15537  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15538  000208  A4D8               	btfss	status,2,c
 15539  00020A  D08D               	goto	l2412
 15540                           
 15541                           ; BSR set to: 10
 15542                           ;term.c: 515: {
 15543                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15544  00020C  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15545                           
 15546                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15547  000210  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15548                           
 15549                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15550  000214  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15551                           
 15552                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15553  000218  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15554                           
 15555                           ; BSR set to: 10
 15556                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15557  00021C  0EA7               	movlw	low Terminal@Len
 15558  00021E  0100               	movlb	0	; () banked
 15559  000220  6F83               	movwf	atoi@s& (0+255),b
 15560  000222  0E03               	movlw	high Terminal@Len
 15561  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15562  000226  EC62  F01C         	call	_atoi	;wreg free
 15563  00022A  0100               	movlb	0	; () banked
 15564  00022C  5183               	movf	?_atoi& (0+255),w,b
 15565  00022E  0102               	movlb	2	; () banked
 15566  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15567                           
 15568                           ; BSR set to: 2
 15569                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15570  000232  0EA3               	movlw	low Terminal@Addr
 15571  000234  0100               	movlb	0	; () banked
 15572  000236  6F83               	movwf	xtoi@s& (0+255),b
 15573  000238  0E03               	movlw	high Terminal@Addr
 15574  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15575  00023C  ECA3  F01A         	call	_xtoi	;wreg free
 15576  000240  0100               	movlb	0	; () banked
 15577  000242  5183               	movf	?_xtoi& (0+255),w,b
 15578  000244  0102               	movlb	2	; () banked
 15579  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15580                           
 15581                           ; BSR set to: 2
 15582                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15583  000248  0E00               	movlw	0
 15584  00024A  0100               	movlb	0	; () banked
 15585  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15586  00024E  D032               	goto	l2413
 15587  000250                     
 15588                           ;term.c: 527: {
 15589                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15590                           
 15591                           ; BSR set to: 0
 15592  000250  0100               	movlb	0	; () banked
 15593  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15594  000254  0D02               	mullw	2
 15595  000256  0E0B               	movlw	11
 15596  000258  26F3               	addwf	prodl,f,c
 15597  00025A  0E00               	movlw	0
 15598  00025C  22F4               	addwfc	prodh,f,c
 15599  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15600  000260  24F3               	addwf	prodl,w,c
 15601  000262  6ED9               	movwf	fsr2l,c
 15602  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15603  000266  20F4               	addwfc	prodh,w,c
 15604  000268  6EDA               	movwf	fsr2h,c
 15605  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15606  00026C  0D04               	mullw	4
 15607  00026E  0E66               	movlw	low Terminal@Payload
 15608  000270  24F3               	addwf	prodl,w,c
 15609  000272  6EE1               	movwf	fsr1l,c
 15610  000274  0E07               	movlw	high Terminal@Payload
 15611  000276  20F4               	addwfc	prodh,w,c
 15612  000278  6EE2               	movwf	fsr1h,c
 15613  00027A  CFDF FFE7          	movff	indf2,indf1
 15614                           
 15615                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15616  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15617  000280  0D02               	mullw	2
 15618  000282  0E0C               	movlw	12
 15619  000284  26F3               	addwf	prodl,f,c
 15620  000286  0E00               	movlw	0
 15621  000288  22F4               	addwfc	prodh,f,c
 15622  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15623  00028C  24F3               	addwf	prodl,w,c
 15624  00028E  6ED9               	movwf	fsr2l,c
 15625  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15626  000292  20F4               	addwfc	prodh,w,c
 15627  000294  6EDA               	movwf	fsr2h,c
 15628  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15629  000298  0D04               	mullw	4
 15630  00029A  0E01               	movlw	1
 15631  00029C  26F3               	addwf	prodl,f,c
 15632  00029E  0E00               	movlw	0
 15633  0002A0  22F4               	addwfc	prodh,f,c
 15634  0002A2  0E66               	movlw	low Terminal@Payload
 15635  0002A4  24F3               	addwf	prodl,w,c
 15636  0002A6  6EE1               	movwf	fsr1l,c
 15637  0002A8  0E07               	movlw	high Terminal@Payload
 15638  0002AA  20F4               	addwfc	prodh,w,c
 15639  0002AC  6EE2               	movwf	fsr1h,c
 15640  0002AE  CFDF FFE7          	movff	indf2,indf1
 15641                           
 15642                           ; BSR set to: 0
 15643  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15644  0002B4                     l2413:
 15645                           
 15646                           ; BSR set to: 0
 15647                           
 15648                           ; BSR set to: 0
 15649  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15650  0002B6  0102               	movlb	2	; () banked
 15651  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15652  0002BA  B0D8               	btfsc	status,0,c
 15653  0002BC  D7C9               	goto	l2414
 15654                           
 15655                           ; BSR set to: 2
 15656                           ;term.c: 530: }
 15657                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15658                           
 15659                           ; BSR set to: 2
 15660  0002BE  0E00               	movlw	0
 15661  0002C0  0100               	movlb	0	; () banked
 15662  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15663  0002C4  D01F               	goto	l2416
 15664  0002C6                     
 15665                           ;term.c: 533: {
 15666                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15667                           
 15668                           ; BSR set to: 0
 15669  0002C6  0100               	movlb	0	; () banked
 15670  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15671  0002CA  0D04               	mullw	4
 15672  0002CC  0E66               	movlw	low Terminal@Payload
 15673  0002CE  24F3               	addwf	prodl,w,c
 15674  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15675  0002D2  0E07               	movlw	high Terminal@Payload
 15676  0002D4  20F4               	addwfc	prodh,w,c
 15677  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15678  0002D8  0E00               	movlw	0
 15679  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15680  0002DC  0E00               	movlw	0
 15681  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15682  0002E0  0E00               	movlw	0
 15683  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15684  0002E4  0E10               	movlw	16
 15685  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15686  0002E8  EC34  F00D         	call	_strtol	;wreg free
 15687  0002EC  0100               	movlb	0	; () banked
 15688  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15689  0002F0  0D01               	mullw	1
 15690  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15691  0002F4  24F3               	addwf	prodl,w,c
 15692  0002F6  6ED9               	movwf	fsr2l,c
 15693  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15694  0002FA  20F4               	addwfc	prodh,w,c
 15695  0002FC  6EDA               	movwf	fsr2h,c
 15696  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15697                           
 15698                           ; BSR set to: 0
 15699  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15700  000304                     l2416:
 15701                           
 15702                           ; BSR set to: 0
 15703                           
 15704                           ; BSR set to: 0
 15705  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15706  000306  0102               	movlb	2	; () banked
 15707  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15708  00030A  B0D8               	btfsc	status,0,c
 15709  00030C  D7DC               	goto	l2417
 15710                           
 15711                           ; BSR set to: 2
 15712                           ;term.c: 539: }
 15713                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15714                           
 15715                           ; BSR set to: 2
 15716  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15717  000310  0100               	movlb	0	; () banked
 15718  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15719  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15720  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15721  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15722  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15723  000320  EC81  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 15724                           
 15725                           ;term.c: 543: }
 15726  000324  0012               	return	
 15727  000326                     l2412:
 15728                           
 15729                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15730  000326  0E52               	movlw	82
 15731  000328  010A               	movlb	10	; () banked
 15732  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15733  00032C  A4D8               	btfss	status,2,c
 15734  00032E  0012               	return	
 15735                           
 15736                           ; BSR set to: 10
 15737  000330  0E3A               	movlw	58
 15738  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15739  000334  A4D8               	btfss	status,2,c
 15740  000336  0012               	return	
 15741                           
 15742                           ; BSR set to: 10
 15743                           ;term.c: 545: {
 15744                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15745  000338  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15746                           
 15747                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15748  00033C  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15749                           
 15750                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15751  000340  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15752                           
 15753                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15754  000344  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15755                           
 15756                           ; BSR set to: 10
 15757                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15758  000348  0EA7               	movlw	low Terminal@Len
 15759  00034A  0100               	movlb	0	; () banked
 15760  00034C  6F83               	movwf	atoi@s& (0+255),b
 15761  00034E  0E03               	movlw	high Terminal@Len
 15762  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15763  000352  EC62  F01C         	call	_atoi	;wreg free
 15764  000356  0100               	movlb	0	; () banked
 15765  000358  5183               	movf	?_atoi& (0+255),w,b
 15766  00035A  0102               	movlb	2	; () banked
 15767  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15768                           
 15769                           ; BSR set to: 2
 15770                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15771  00035E  0EA3               	movlw	low Terminal@Addr
 15772  000360  0100               	movlb	0	; () banked
 15773  000362  6F83               	movwf	xtoi@s& (0+255),b
 15774  000364  0E03               	movlw	high Terminal@Addr
 15775  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15776  000368  ECA3  F01A         	call	_xtoi	;wreg free
 15777  00036C  0100               	movlb	0	; () banked
 15778  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15779  000370  0102               	movlb	2	; () banked
 15780  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15781                           
 15782                           ; BSR set to: 2
 15783                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15784  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15785  000376  0100               	movlb	0	; () banked
 15786  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15787  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15788  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15789  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15790  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15791  000386  EC22  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15792                           
 15793                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15794  00038A  0E01               	movlw	1
 15795  00038C  0102               	movlb	2	; () banked
 15796  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15797                           
 15798                           ; BSR set to: 2
 15799                           ;term.c: 561: }
 15800                           ;term.c: 562: }
 15801                           
 15802                           ; BSR set to: 2
 15803  000390  0012               	return	
 15804  000392                     l2411:
 15805                           
 15806                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15807                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15808                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15809                           
 15810                           ; BSR set to: 2
 15811  000392  0E54               	movlw	84
 15812  000394  010A               	movlb	10	; () banked
 15813  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15814  000398  A4D8               	btfss	status,2,c
 15815  00039A  0012               	return	
 15816                           
 15817                           ; BSR set to: 10
 15818  00039C  0E45               	movlw	69
 15819  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15820  0003A0  A4D8               	btfss	status,2,c
 15821  0003A2  0012               	return	
 15822                           
 15823                           ; BSR set to: 10
 15824  0003A4  0E4C               	movlw	76
 15825  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15826  0003A8  A4D8               	btfss	status,2,c
 15827  0003AA  0012               	return	
 15828                           
 15829                           ; BSR set to: 10
 15830                           ;term.c: 566: {
 15831                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15832  0003AC  CA03  F3A7         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15833                           
 15834                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15835  0003B0  CA04  F3A8         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15836                           
 15837                           ; BSR set to: 10
 15838                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15839  0003B4  0EA7               	movlw	low Terminal@Len
 15840  0003B6  0100               	movlb	0	; () banked
 15841  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15842  0003BA  0E03               	movlw	high Terminal@Len
 15843  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15844  0003BE  EC62  F01C         	call	_atoi	;wreg free
 15845  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15846  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15847                           
 15848                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15849  0003CA  0E00               	movlw	0
 15850  0003CC  0100               	movlb	0	; () banked
 15851  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15852  0003D0  D018               	goto	l2423
 15853  0003D2                     
 15854                           ; BSR set to: 0
 15855                           ;term.c: 573: {
 15856                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15857                           
 15858                           ; BSR set to: 0
 15859  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15860  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15861  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15862  0003D8  0E05               	movlw	5
 15863  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15864  0003DC  0E00               	movlw	0
 15865  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15866  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15867  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15868  0003E4  6ED9               	movwf	fsr2l,c
 15869  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15870  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15871  0003EA  6EDA               	movwf	fsr2h,c
 15872  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15873  0003EE  0D01               	mullw	1
 15874  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15875  0003F2  24F3               	addwf	prodl,w,c
 15876  0003F4  6EE1               	movwf	fsr1l,c
 15877  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15878  0003F8  20F4               	addwfc	prodh,w,c
 15879  0003FA  6EE2               	movwf	fsr1h,c
 15880  0003FC  CFDF FFE7          	movff	indf2,indf1
 15881                           
 15882                           ; BSR set to: 0
 15883  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15884  000402                     l2423:
 15885                           
 15886                           ; BSR set to: 0
 15887                           
 15888                           ; BSR set to: 0
 15889  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15890  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15891  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15892  000408  0103               	movlb	3	; () banked
 15893  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15894  00040C  0100               	movlb	0	; () banked
 15895  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15896  000410  0103               	movlb	3	; () banked
 15897  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15898  000414  0100               	movlb	0	; () banked
 15899  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15900  000418  B0D8               	btfsc	status,0,c
 15901  00041A  0012               	return	
 15902  00041C  D7DA               	goto	l2424
 15903  00041E                     
 15904                           ;term.c: 619: if((cdc_trf_state == 0))
 15905                           
 15906                           ; BSR set to: 0
 15907  00041E  0100               	movlb	0	; () banked
 15908  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15909  000422  A4D8               	btfss	status,2,c
 15910  000424  0012               	return	
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;term.c: 620: {
 15914                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15915  000426  0E53               	movlw	83
 15916  000428  0102               	movlb	2	; () banked
 15917  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15918                           
 15919                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15920  00042C  0E42               	movlw	66
 15921  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15922                           
 15923                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15924  000430  0E5B               	movlw	91
 15925  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15926                           
 15927                           ; BSR set to: 2
 15928                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15929  000434  C3A3  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15930                           
 15931                           ; BSR set to: 2
 15932                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15933  000438  C3A4  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15934                           
 15935                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15936  00043C  0E5D               	movlw	93
 15937  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15938                           
 15939                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15940  000440  0E3A               	movlw	58
 15941  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15942                           
 15943                           ; BSR set to: 2
 15944                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15945  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15946  000446  0100               	movlb	0	; () banked
 15947  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15948  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15949  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15950  00044E  0E07               	movlw	7
 15951  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15952  000452  EC1C  F032         	call	_putUSBUSART	;wreg free
 15953                           
 15954                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15955  000456  0E02               	movlw	2
 15956  000458  0102               	movlb	2	; () banked
 15957  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15958                           
 15959                           ; BSR set to: 2
 15960                           ;term.c: 632: }
 15961                           ;term.c: 633: break;
 15962  00045C  0012               	return	
 15963  00045E                     
 15964                           ; BSR set to: 2
 15965                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15966                           
 15967                           ; BSR set to: 2
 15968  00045E  EC3E  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15969  000462  06E8               	decf	wreg,f,c
 15970  000464  A4D8               	btfss	status,2,c
 15971  000466  D088               	goto	l2432
 15972                           
 15973                           ;term.c: 638: {
 15974                           ;term.c: 640: if (FormatOption == 1u)
 15975  000468  0102               	movlb	2	; () banked
 15976  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15977  00046C  A4D8               	btfss	status,2,c
 15978  00046E  D027               	goto	u13720
 15979                           
 15980                           ; BSR set to: 2
 15981                           ;term.c: 641: {
 15982                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15983  000470  0E00               	movlw	0
 15984  000472  0100               	movlb	0	; () banked
 15985  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15986  000476  D01E               	goto	l2434
 15987  000478                     
 15988                           ;term.c: 644: {
 15989                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15990                           
 15991                           ; BSR set to: 0
 15992  000478  0100               	movlb	0	; () banked
 15993  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15994  00047C  0D04               	mullw	4
 15995  00047E  0E66               	movlw	low Terminal@Payload
 15996  000480  24F3               	addwf	prodl,w,c
 15997  000482  6F93               	movwf	itoa@buf& (0+255),b
 15998  000484  0E07               	movlw	high Terminal@Payload
 15999  000486  20F4               	addwfc	prodh,w,c
 16000  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16001  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16002  00048C  0D01               	mullw	1
 16003  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16004  000490  24F3               	addwf	prodl,w,c
 16005  000492  6ED9               	movwf	fsr2l,c
 16006  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16007  000496  20F4               	addwfc	prodh,w,c
 16008  000498  6EDA               	movwf	fsr2h,c
 16009  00049A  50DF               	movf	indf2,w,c
 16010  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16011  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16012  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16013  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16014  0004A4  0E00               	movlw	0
 16015  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16016  0004A8  0E0A               	movlw	10
 16017  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16018  0004AC  ECBC  F02E         	call	_itoa	;wreg free
 16019  0004B0  0100               	movlb	0	; () banked
 16020  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16021  0004B4                     l2434:
 16022                           
 16023                           ; BSR set to: 0
 16024                           
 16025                           ; BSR set to: 0
 16026  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16027  0004B6  0102               	movlb	2	; () banked
 16028  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16029  0004BA  B0D8               	btfsc	status,0,c
 16030  0004BC  D7DD               	goto	l2435
 16031  0004BE                     u13720:
 16032                           
 16033                           ; BSR set to: 2
 16034                           ;term.c: 646: }
 16035                           ;term.c: 647: }
 16036                           ;term.c: 650: if((cdc_trf_state == 0))
 16037                           
 16038                           ; BSR set to: 2
 16039                           
 16040                           ; BSR set to: 2
 16041  0004BE  0100               	movlb	0	; () banked
 16042  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16043  0004C2  A4D8               	btfss	status,2,c
 16044  0004C4  0012               	return	
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;term.c: 651: {
 16048                           ;term.c: 653: if (FormatOption == 1u)
 16049  0004C6  0102               	movlb	2	; () banked
 16050  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16051  0004CA  A4D8               	btfss	status,2,c
 16052  0004CC  D02B               	goto	l2438
 16053                           
 16054                           ; BSR set to: 2
 16055                           ;term.c: 654: {
 16056                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16057  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16058  0004D0  0D08               	mullw	8
 16059  0004D2  0E03               	movlw	3
 16060  0004D4  26F3               	addwf	prodl,f,c
 16061  0004D6  0E00               	movlw	0
 16062  0004D8  22F4               	addwfc	prodh,f,c
 16063  0004DA  0E66               	movlw	low Terminal@Payload
 16064  0004DC  24F3               	addwf	prodl,w,c
 16065  0004DE  6ED9               	movwf	fsr2l,c
 16066  0004E0  0E07               	movlw	high Terminal@Payload
 16067  0004E2  20F4               	addwfc	prodh,w,c
 16068  0004E4  6EDA               	movwf	fsr2h,c
 16069  0004E6  0E0D               	movlw	13
 16070  0004E8  6EDF               	movwf	indf2,c
 16071                           
 16072                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16073  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16074  0004EC  0D08               	mullw	8
 16075  0004EE  0E02               	movlw	2
 16076  0004F0  26F3               	addwf	prodl,f,c
 16077  0004F2  0E00               	movlw	0
 16078  0004F4  22F4               	addwfc	prodh,f,c
 16079  0004F6  0E66               	movlw	low Terminal@Payload
 16080  0004F8  24F3               	addwf	prodl,w,c
 16081  0004FA  6ED9               	movwf	fsr2l,c
 16082  0004FC  0E07               	movlw	high Terminal@Payload
 16083  0004FE  20F4               	addwfc	prodh,w,c
 16084  000500  6EDA               	movwf	fsr2h,c
 16085  000502  0E0A               	movlw	10
 16086  000504  6EDF               	movwf	indf2,c
 16087                           
 16088                           ; BSR set to: 2
 16089                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16090  000506  0E66               	movlw	low Terminal@Payload
 16091  000508  0100               	movlb	0	; () banked
 16092  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16093  00050C  0E07               	movlw	high Terminal@Payload
 16094  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16095  000510  0102               	movlb	2	; () banked
 16096  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16097  000514  0D02               	mullw	2
 16098  000516  50F3               	movf	prodl,w,c
 16099  000518  0F04               	addlw	4
 16100  00051A  0100               	movlb	0	; () banked
 16101  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16102  00051E  EC1C  F032         	call	_putUSBUSART	;wreg free
 16103                           
 16104                           ;term.c: 659: }
 16105  000522  D026               	goto	l2439
 16106  000524                     l2438:
 16107                           
 16108                           ;term.c: 660: else
 16109                           ;term.c: 661: {
 16110                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16111  000524  0102               	movlb	2	; () banked
 16112  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16113  000528  0D01               	mullw	1
 16114  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16115  00052C  24F3               	addwf	prodl,w,c
 16116  00052E  6ED9               	movwf	fsr2l,c
 16117  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16118  000532  20F4               	addwfc	prodh,w,c
 16119  000534  6EDA               	movwf	fsr2h,c
 16120  000536  0E0D               	movlw	13
 16121  000538  6EDF               	movwf	indf2,c
 16122                           
 16123                           ; BSR set to: 2
 16124                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16125  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16126  00053C  0100               	movlb	0	; () banked
 16127  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16128  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16129  000542  0E01               	movlw	1
 16130  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16131  000546  0E00               	movlw	0
 16132  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16133  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16134  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16135  00054E  6ED9               	movwf	fsr2l,c
 16136  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16137  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16138  000554  6EDA               	movwf	fsr2h,c
 16139  000556  0E0A               	movlw	10
 16140  000558  6EDF               	movwf	indf2,c
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16144  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16145  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16146  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16147  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16148  000562  0102               	movlb	2	; () banked
 16149  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16150  000566  0F02               	addlw	2
 16151  000568  0100               	movlb	0	; () banked
 16152  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16153  00056C  EC1C  F032         	call	_putUSBUSART	;wreg free
 16154  000570                     l2439:
 16155                           
 16156                           ;term.c: 666: }
 16157                           ;term.c: 668: TermState = Term_GetData;
 16158  000570  0E00               	movlw	0
 16159  000572  0102               	movlb	2	; () banked
 16160  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16161                           
 16162                           ; BSR set to: 2
 16163                           ;term.c: 669: }
 16164                           ;term.c: 670: }
 16165  000576  0012               	return	
 16166  000578                     l2432:
 16167                           
 16168                           ;term.c: 671: else
 16169                           ;term.c: 672: {
 16170                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16171                           
 16172                           ; BSR set to: 2
 16173  000578  0ED9               	movlw	low Terminal@SwTimer
 16174  00057A  0100               	movlb	0	; () banked
 16175  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16176  00057E  0E04               	movlw	high Terminal@SwTimer
 16177  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16178  000582  0EB8               	movlw	184
 16179  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16180  000586  0E0B               	movlw	11
 16181  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16182  00058A  0E00               	movlw	0
 16183  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16184  00058E  0E00               	movlw	0
 16185  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16186  000592  ECFB  F027         	call	_OsTmr_Wait	;wreg free
 16187  000596  06E8               	decf	wreg,f,c
 16188  000598  A4D8               	btfss	status,2,c
 16189  00059A  0012               	return	
 16190                           
 16191                           ;term.c: 675: {
 16192                           ;term.c: 677: if((cdc_trf_state == 0))
 16193  00059C  0100               	movlb	0	; () banked
 16194  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16195  0005A0  A4D8               	btfss	status,2,c
 16196  0005A2  0012               	return	
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;term.c: 678: {
 16200                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16201  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16202  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16203  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16204  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16205  0005AC  0E5E               	movlw	low STR_21
 16206  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16207  0005B0  0EFE               	movlw	high STR_21
 16208  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16209  0005B4  EC80  F030         	call	_strcpy	;wreg free
 16210                           
 16211                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16212  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16213  0005BA  0100               	movlb	0	; () banked
 16214  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16215  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16216  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16217  0005C2  0E29               	movlw	41
 16218  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16219  0005C6  EC1C  F032         	call	_putUSBUSART	;wreg free
 16220                           
 16221                           ;term.c: 682: TermState = Term_GetData;
 16222  0005CA  0E00               	movlw	0
 16223  0005CC  0102               	movlb	2	; () banked
 16224  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16225                           
 16226                           ; BSR set to: 2
 16227                           ;term.c: 693: }
 16228                           
 16229                           ; BSR set to: 2
 16230                           ;term.c: 692: break;
 16231                           
 16232                           ;term.c: 691: default:
 16233                           
 16234                           ; BSR set to: 2
 16235                           ;term.c: 689: break;
 16236                           
 16237                           ;term.c: 688: case Term_ReadSlvUartData:
 16238                           
 16239                           ; BSR set to: 2
 16240                           ;term.c: 683: }
 16241                           ;term.c: 684: }
 16242                           ;term.c: 685: }
 16243                           ;term.c: 686: break;
 16244                           
 16245                           ; BSR set to: 2
 16246                           
 16247                           ; BSR set to: 2
 16248  0005D0  0012               	return	
 16249  0005D2                     l2393:
 16250                           
 16251                           ; BSR set to: 2
 16252  0005D2  0102               	movlb	2	; () banked
 16253  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16254                           
 16255                           ; Switch size 1, requested type "space"
 16256                           ; Number of cases is 4, Range of values is 0 to 3
 16257                           ; switch strategies available:
 16258                           ; Name         Instructions Cycles
 16259                           ; simple_byte           13     7 (average)
 16260                           ;	Chosen strategy is simple_byte
 16261  0005D6  0A00               	xorlw	0	; case 0
 16262  0005D8  B4D8               	btfsc	status,2,c
 16263  0005DA  D583               	goto	l2394
 16264  0005DC  0A01               	xorlw	1	; case 1
 16265  0005DE  B4D8               	btfsc	status,2,c
 16266  0005E0  D71E               	goto	l2429
 16267  0005E2  0A03               	xorlw	3	; case 2
 16268  0005E4  B4D8               	btfsc	status,2,c
 16269  0005E6  D73B               	goto	l2431
 16270  0005E8  0A01               	xorlw	1	; case 3
 16271  0005EA  0012               	return	
 16272  0005EC                     __end_of_Terminal:
 16273                           	opt stack 0
 16274                           tosu	equ	0xFFF
 16275                           tosh	equ	0xFFE
 16276                           tosl	equ	0xFFD
 16277                           pclath	equ	0xFFA
 16278                           tblptru	equ	0xFF8
 16279                           tblptrh	equ	0xFF7
 16280                           tblptrl	equ	0xFF6
 16281                           tablat	equ	0xFF5
 16282                           prodh	equ	0xFF4
 16283                           prodl	equ	0xFF3
 16284                           intcon	equ	0xFF2
 16285                           intcon2	equ	0xFF1
 16286                           intcon3	equ	0xFF0
 16287                           indf0	equ	0xFEF
 16288                           postinc0	equ	0xFEE
 16289                           plusw0	equ	0xFEB
 16290                           fsr0h	equ	0xFEA
 16291                           fsr0l	equ	0xFE9
 16292                           wreg	equ	0xFE8
 16293                           indf1	equ	0xFE7
 16294                           postinc1	equ	0xFE6
 16295                           postdec1	equ	0xFE5
 16296                           fsr1h	equ	0xFE2
 16297                           fsr1l	equ	0xFE1
 16298                           indf2	equ	0xFDF
 16299                           postinc2	equ	0xFDE
 16300                           postdec2	equ	0xFDD
 16301                           plusw2	equ	0xFDB
 16302                           fsr2h	equ	0xFDA
 16303                           fsr2l	equ	0xFD9
 16304                           status	equ	0xFD8
 16305                           
 16306 ;; *************** function _xtoi *****************
 16307 ;; Defined at:
 16308 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16311 ;;		 -> Terminal@Addr(4), 
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;  val             2   40[BANK0 ] unsigned int 
 16314 ;;  c               1   42[BANK0 ] unsigned char 
 16315 ;;  sign            1   39[BANK0 ] unsigned char 
 16316 ;; Return value:  Size  Location     Type
 16317 ;;                  2   35[BANK0 ] unsigned int 
 16318 ;; Registers used:
 16319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16320 ;; Tracked objects:
 16321 ;;		On entry : 0/0
 16322 ;;		On exit  : 0/0
 16323 ;;		Unchanged: 0/0
 16324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16326 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16328 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16329 ;;Total ram usage:        8 bytes
 16330 ;; Hardware stack levels used:    1
 16331 ;; Hardware stack levels required when called:   13
 16332 ;; This function calls:
 16333 ;;		_isdigit
 16334 ;;		_isspace
 16335 ;;		_isupper
 16336 ;;		_isxdigit
 16337 ;;		_tolower
 16338 ;; This function is called by:
 16339 ;;		_Terminal
 16340 ;; This function uses a non-reentrant model
 16341 ;;
 16342                           
 16343                           	psect	text61
 16344  003546                     __ptext61:
 16345                           	opt stack 0
 16346  003546                     _xtoi:
 16347                           	opt stack 12
 16348                           
 16349                           ;incstack = 0
 16350  003546  0E00               	movlw	0
 16351  003548  0100               	movlb	0	; () banked
 16352  00354A  6F87               	movwf	xtoi@sign& (0+255),b
 16353  00354C  0E00               	movlw	0
 16354  00354E  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16355  003550  0E00               	movlw	0
 16356  003552  6F88               	movwf	xtoi@val& (0+255),b
 16357  003554  D003               	goto	l3476
 16358  003556                     
 16359                           ; BSR set to: 0
 16360  003556  0100               	movlb	0	; () banked
 16361  003558  4B83               	infsnz	xtoi@s& (0+255),f,b
 16362  00355A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16363  00355C                     l3476:
 16364                           
 16365                           ; BSR set to: 0
 16366                           
 16367                           ; BSR set to: 0
 16368  00355C  C083  FFD9         	movff	xtoi@s,fsr2l
 16369  003560  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16370  003564  50DF               	movf	indf2,w,c
 16371  003566  EC52  F031         	call	_isspace
 16372  00356A  B0D8               	btfsc	status,0,c
 16373  00356C  D7F4               	goto	l3477
 16374  00356E  C083  FFD9         	movff	xtoi@s,fsr2l
 16375  003572  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16376  003576  0E2D               	movlw	45
 16377  003578  18DE               	xorwf	postinc2,w,c
 16378  00357A  A4D8               	btfss	status,2,c
 16379  00357C  D003               	goto	l3479
 16380  00357E  0100               	movlb	0	; () banked
 16381  003580  2B87               	incf	xtoi@sign& (0+255),f,b
 16382  003582  D009               	goto	L15
 16383  003584                     l3479:
 16384                           
 16385                           ; BSR set to: 0
 16386  003584  C083  FFD9         	movff	xtoi@s,fsr2l
 16387  003588  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16388  00358C  0E2B               	movlw	43
 16389  00358E  18DE               	xorwf	postinc2,w,c
 16390  003590  A4D8               	btfss	status,2,c
 16391  003592  D028               	goto	l3482
 16392  003594  0100               	movlb	0	; () banked
 16393  003596                     L15:
 16394  003596  4B83               	infsnz	xtoi@s& (0+255),f,b
 16395  003598  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16396                           
 16397                           ; BSR set to: 0
 16398                           
 16399                           ; BSR set to: 0
 16400  00359A  D024               	goto	l3482
 16401  00359C                     
 16402                           ; BSR set to: 0
 16403  00359C  0100               	movlb	0	; () banked
 16404  00359E  518A               	movf	xtoi@c& (0+255),w,b
 16405  0035A0  EC0B  F032         	call	_isupper
 16406  0035A4  A0D8               	btfss	status,0,c
 16407  0035A6  D006               	goto	l3484
 16408  0035A8  0100               	movlb	0	; () banked
 16409  0035AA  518A               	movf	xtoi@c& (0+255),w,b
 16410  0035AC  ECED  F032         	call	_tolower
 16411  0035B0  0100               	movlb	0	; () banked
 16412  0035B2  6F8A               	movwf	xtoi@c& (0+255),b
 16413  0035B4                     l3484:
 16414  0035B4  0100               	movlb	0	; () banked
 16415  0035B6  518A               	movf	xtoi@c& (0+255),w,b
 16416  0035B8  EC2D  F032         	call	_isdigit
 16417  0035BC  A0D8               	btfss	status,0,c
 16418  0035BE  D002               	goto	l3485
 16419  0035C0  0E30               	movlw	48
 16420  0035C2  D001               	goto	L14
 16421  0035C4                     l3485:
 16422                           
 16423                           ; BSR set to: 0
 16424  0035C4  0E57               	movlw	87
 16425  0035C6                     L14:
 16426  0035C6  0100               	movlb	0	; () banked
 16427  0035C8  5F8A               	subwf	xtoi@c& (0+255),f,b
 16428                           
 16429                           ; BSR set to: 0
 16430  0035CA  3B88               	swapf	xtoi@val& (0+255),f,b
 16431  0035CC  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16432  0035CE  0EF0               	movlw	240
 16433  0035D0  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16434  0035D2  5188               	movf	xtoi@val& (0+255),w,b
 16435  0035D4  0B0F               	andlw	15
 16436  0035D6  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16437  0035D8  0EF0               	movlw	240
 16438  0035DA  1788               	andwf	xtoi@val& (0+255),f,b
 16439  0035DC  518A               	movf	xtoi@c& (0+255),w,b
 16440  0035DE  2788               	addwf	xtoi@val& (0+255),f,b
 16441  0035E0  0E00               	movlw	0
 16442  0035E2  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16443  0035E4                     l3482:
 16444                           
 16445                           ; BSR set to: 0
 16446  0035E4  C083  FFD9         	movff	xtoi@s,fsr2l
 16447  0035E8  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16448  0035EC  0100               	movlb	0	; () banked
 16449  0035EE  4B83               	infsnz	xtoi@s& (0+255),f,b
 16450  0035F0  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16451  0035F2  50DF               	movf	indf2,w,c
 16452  0035F4  6F8A               	movwf	xtoi@c& (0+255),b
 16453  0035F6  518A               	movf	xtoi@c& (0+255),w,b
 16454  0035F8  ECBF  F02F         	call	_isxdigit
 16455  0035FC  B0D8               	btfsc	status,0,c
 16456  0035FE  D7CE               	goto	l3483
 16457  003600  0100               	movlb	0	; () banked
 16458  003602  5187               	movf	xtoi@sign& (0+255),w,b
 16459  003604  B4D8               	btfsc	status,2,c
 16460  003606  D00D               	goto	l3488
 16461                           
 16462                           ; BSR set to: 0
 16463  003608  C088  F085         	movff	xtoi@val,??_xtoi
 16464  00360C  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16465  003610  1F85               	comf	??_xtoi& (0+255),f,b
 16466  003612  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16467  003614  4B85               	infsnz	??_xtoi& (0+255),f,b
 16468  003616  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16469  003618  C085  F083         	movff	??_xtoi,?_xtoi
 16470  00361C  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16471  003620  0012               	return	
 16472  003622                     l3488:
 16473                           
 16474                           ; BSR set to: 0
 16475  003622  C088  F083         	movff	xtoi@val,?_xtoi
 16476  003626  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16477                           
 16478                           ; BSR set to: 0
 16479  00362A  0012               	return		;funcret
 16480  00362C                     __end_of_xtoi:
 16481                           	opt stack 0
 16482                           tosu	equ	0xFFF
 16483                           tosh	equ	0xFFE
 16484                           tosl	equ	0xFFD
 16485                           pclath	equ	0xFFA
 16486                           tblptru	equ	0xFF8
 16487                           tblptrh	equ	0xFF7
 16488                           tblptrl	equ	0xFF6
 16489                           tablat	equ	0xFF5
 16490                           prodh	equ	0xFF4
 16491                           prodl	equ	0xFF3
 16492                           intcon	equ	0xFF2
 16493                           intcon2	equ	0xFF1
 16494                           intcon3	equ	0xFF0
 16495                           indf0	equ	0xFEF
 16496                           postinc0	equ	0xFEE
 16497                           plusw0	equ	0xFEB
 16498                           fsr0h	equ	0xFEA
 16499                           fsr0l	equ	0xFE9
 16500                           wreg	equ	0xFE8
 16501                           indf1	equ	0xFE7
 16502                           postinc1	equ	0xFE6
 16503                           postdec1	equ	0xFE5
 16504                           fsr1h	equ	0xFE2
 16505                           fsr1l	equ	0xFE1
 16506                           indf2	equ	0xFDF
 16507                           postinc2	equ	0xFDE
 16508                           postdec2	equ	0xFDD
 16509                           plusw2	equ	0xFDB
 16510                           fsr2h	equ	0xFDA
 16511                           fsr2l	equ	0xFD9
 16512                           status	equ	0xFD8
 16513                           
 16514 ;; *************** function _tolower *****************
 16515 ;; Defined at:
 16516 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;  c               1    wreg     unsigned char 
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;  c               1   29[BANK0 ] unsigned char 
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      unsigned char 
 16523 ;; Registers used:
 16524 ;;		wreg, status,2, status,0
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16534 ;;Total ram usage:        1 bytes
 16535 ;; Hardware stack levels used:    1
 16536 ;; Hardware stack levels required when called:   11
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_xtoi
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text62
 16545  0065DA                     __ptext62:
 16546                           	opt stack 0
 16547  0065DA                     _tolower:
 16548                           	opt stack 13
 16549                           
 16550                           ; BSR set to: 0
 16551                           ;incstack = 0
 16552                           ;tolower@c stored from wreg
 16553  0065DA  0100               	movlb	0	; () banked
 16554  0065DC  6F7D               	movwf	tolower@c& (0+255),b
 16555  0065DE  0E5B               	movlw	91
 16556  0065E0  0100               	movlb	0	; () banked
 16557  0065E2  617D               	cpfslt	tolower@c& (0+255),b
 16558  0065E4  D004               	goto	l3535
 16559                           
 16560                           ; BSR set to: 0
 16561  0065E6  0E40               	movlw	64
 16562  0065E8  657D               	cpfsgt	tolower@c& (0+255),b
 16563  0065EA  D001               	goto	l3535
 16564                           
 16565                           ; BSR set to: 0
 16566  0065EC  8B7D               	bsf	tolower@c& (0+255),5,b
 16567  0065EE                     l3535:
 16568                           
 16569                           ; BSR set to: 0
 16570                           
 16571                           ; BSR set to: 0
 16572  0065EE  517D               	movf	tolower@c& (0+255),w,b
 16573  0065F0  0012               	return	
 16574  0065F2                     __end_of_tolower:
 16575                           	opt stack 0
 16576                           tosu	equ	0xFFF
 16577                           tosh	equ	0xFFE
 16578                           tosl	equ	0xFFD
 16579                           pclath	equ	0xFFA
 16580                           tblptru	equ	0xFF8
 16581                           tblptrh	equ	0xFF7
 16582                           tblptrl	equ	0xFF6
 16583                           tablat	equ	0xFF5
 16584                           prodh	equ	0xFF4
 16585                           prodl	equ	0xFF3
 16586                           intcon	equ	0xFF2
 16587                           intcon2	equ	0xFF1
 16588                           intcon3	equ	0xFF0
 16589                           indf0	equ	0xFEF
 16590                           postinc0	equ	0xFEE
 16591                           plusw0	equ	0xFEB
 16592                           fsr0h	equ	0xFEA
 16593                           fsr0l	equ	0xFE9
 16594                           wreg	equ	0xFE8
 16595                           indf1	equ	0xFE7
 16596                           postinc1	equ	0xFE6
 16597                           postdec1	equ	0xFE5
 16598                           fsr1h	equ	0xFE2
 16599                           fsr1l	equ	0xFE1
 16600                           indf2	equ	0xFDF
 16601                           postinc2	equ	0xFDE
 16602                           postdec2	equ	0xFDD
 16603                           plusw2	equ	0xFDB
 16604                           fsr2h	equ	0xFDA
 16605                           fsr2l	equ	0xFD9
 16606                           status	equ	0xFD8
 16607                           
 16608 ;; *************** function _isxdigit *****************
 16609 ;; Defined at:
 16610 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;  c               1    wreg     unsigned char 
 16613 ;; Auto vars:     Size  Location     Type
 16614 ;;  c               1   34[BANK0 ] unsigned char 
 16615 ;; Return value:  Size  Location     Type
 16616 ;;		None               void
 16617 ;; Registers used:
 16618 ;;		wreg, status,2, status,0, cstack
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16627 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16628 ;;Total ram usage:        3 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; Hardware stack levels required when called:   12
 16631 ;; This function calls:
 16632 ;;		_isdigit
 16633 ;; This function is called by:
 16634 ;;		_xtoi
 16635 ;; This function uses a non-reentrant model
 16636 ;;
 16637                           
 16638                           	psect	text63
 16639  005F7E                     __ptext63:
 16640                           	opt stack 0
 16641  005F7E                     _isxdigit:
 16642                           	opt stack 12
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;incstack = 0
 16646                           ;isxdigit@c stored from wreg
 16647  005F7E  0100               	movlb	0	; () banked
 16648  005F80  6F82               	movwf	isxdigit@c& (0+255),b
 16649  005F82  0E01               	movlw	1
 16650  005F84  0100               	movlb	0	; () banked
 16651  005F86  6F81               	movwf	_isxdigit$6622& (0+255),b
 16652                           
 16653                           ; BSR set to: 0
 16654  005F88  0E67               	movlw	103
 16655  005F8A  6182               	cpfslt	isxdigit@c& (0+255),b
 16656  005F8C  D003               	goto	u12100
 16657                           
 16658                           ; BSR set to: 0
 16659  005F8E  0E61               	movlw	97
 16660  005F90  6182               	cpfslt	isxdigit@c& (0+255),b
 16661  005F92  D00E               	goto	l3531
 16662  005F94                     u12100:
 16663                           
 16664                           ; BSR set to: 0
 16665                           
 16666                           ; BSR set to: 0
 16667  005F94  0E47               	movlw	71
 16668  005F96  6182               	cpfslt	isxdigit@c& (0+255),b
 16669  005F98  D003               	goto	u12120
 16670                           
 16671                           ; BSR set to: 0
 16672  005F9A  0E41               	movlw	65
 16673  005F9C  6182               	cpfslt	isxdigit@c& (0+255),b
 16674  005F9E  D008               	goto	l3531
 16675  005FA0                     u12120:
 16676                           
 16677                           ; BSR set to: 0
 16678                           
 16679                           ; BSR set to: 0
 16680  005FA0  5182               	movf	isxdigit@c& (0+255),w,b
 16681  005FA2  EC2D  F032         	call	_isdigit
 16682  005FA6  B0D8               	btfsc	status,0,c
 16683  005FA8  D003               	goto	l3531
 16684  005FAA  0E00               	movlw	0
 16685  005FAC  0100               	movlb	0	; () banked
 16686  005FAE  6F81               	movwf	_isxdigit$6622& (0+255),b
 16687  005FB0                     l3531:
 16688                           
 16689                           ; BSR set to: 0
 16690  005FB0  C081  F080         	movff	_isxdigit$6622,??_isxdigit
 16691  005FB4  0100               	movlb	0	; () banked
 16692  005FB6  3180               	rrcf	??_isxdigit& (0+255),w,b
 16693  005FB8  0012               	return	
 16694  005FBA                     __end_of_isxdigit:
 16695                           	opt stack 0
 16696                           tosu	equ	0xFFF
 16697                           tosh	equ	0xFFE
 16698                           tosl	equ	0xFFD
 16699                           pclath	equ	0xFFA
 16700                           tblptru	equ	0xFF8
 16701                           tblptrh	equ	0xFF7
 16702                           tblptrl	equ	0xFF6
 16703                           tablat	equ	0xFF5
 16704                           prodh	equ	0xFF4
 16705                           prodl	equ	0xFF3
 16706                           intcon	equ	0xFF2
 16707                           intcon2	equ	0xFF1
 16708                           intcon3	equ	0xFF0
 16709                           indf0	equ	0xFEF
 16710                           postinc0	equ	0xFEE
 16711                           plusw0	equ	0xFEB
 16712                           fsr0h	equ	0xFEA
 16713                           fsr0l	equ	0xFE9
 16714                           wreg	equ	0xFE8
 16715                           indf1	equ	0xFE7
 16716                           postinc1	equ	0xFE6
 16717                           postdec1	equ	0xFE5
 16718                           fsr1h	equ	0xFE2
 16719                           fsr1l	equ	0xFE1
 16720                           indf2	equ	0xFDF
 16721                           postinc2	equ	0xFDE
 16722                           postdec2	equ	0xFDD
 16723                           plusw2	equ	0xFDB
 16724                           fsr2h	equ	0xFDA
 16725                           fsr2l	equ	0xFD9
 16726                           status	equ	0xFD8
 16727                           
 16728 ;; *************** function _strtol *****************
 16729 ;; Defined at:
 16730 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16731 ;; Parameters:    Size  Location     Type
 16732 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16733 ;;		 -> Terminal@Payload(80), 
 16734 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16735 ;;		 -> NULL(0), 
 16736 ;;  base            2   45[BANK0 ] int 
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  a               4   52[BANK0 ] long 
 16739 ;;  c               1   56[BANK0 ] unsigned char 
 16740 ;;  sign            1   51[BANK0 ] unsigned char 
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  4   41[BANK0 ] long 
 16743 ;; Registers used:
 16744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16753 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16754 ;;Total ram usage:       16 bytes
 16755 ;; Hardware stack levels used:    1
 16756 ;; Hardware stack levels required when called:   13
 16757 ;; This function calls:
 16758 ;;		___lmul
 16759 ;;		_isalpha
 16760 ;;		_isdigit
 16761 ;;		_isspace
 16762 ;;		_toupper
 16763 ;; This function is called by:
 16764 ;;		_Terminal
 16765 ;; This function uses a non-reentrant model
 16766 ;;
 16767                           
 16768                           	psect	text64
 16769  001A68                     __ptext64:
 16770                           	opt stack 0
 16771  001A68                     _strtol:
 16772                           	opt stack 12
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;incstack = 0
 16776  001A68  C089  FFD9         	movff	strtol@s,fsr2l
 16777  001A6C  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16778  001A70  50DF               	movf	indf2,w,c
 16779  001A72  0100               	movlb	0	; () banked
 16780  001A74  6F98               	movwf	strtol@c& (0+255),b
 16781                           
 16782                           ; BSR set to: 0
 16783  001A76  4B89               	infsnz	strtol@s& (0+255),f,b
 16784  001A78  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16785                           
 16786                           ; BSR set to: 0
 16787  001A7A  5198               	movf	strtol@c& (0+255),w,b
 16788  001A7C  EC52  F031         	call	_isspace
 16789  001A80  B0D8               	btfsc	status,0,c
 16790  001A82  D7F2               	goto	_strtol
 16791  001A84  0E00               	movlw	0
 16792  001A86  0100               	movlb	0	; () banked
 16793  001A88  6F94               	movwf	strtol@a& (0+255),b
 16794  001A8A  0E00               	movlw	0
 16795  001A8C  6F95               	movwf	(strtol@a+1)& (0+255),b
 16796  001A8E  0E00               	movlw	0
 16797  001A90  6F96               	movwf	(strtol@a+2)& (0+255),b
 16798  001A92  0E00               	movlw	0
 16799  001A94  6F97               	movwf	(strtol@a+3)& (0+255),b
 16800  001A96  0E00               	movlw	0
 16801  001A98  6F93               	movwf	strtol@sign& (0+255),b
 16802                           
 16803                           ; BSR set to: 0
 16804  001A9A  0E2D               	movlw	45
 16805  001A9C  1998               	xorwf	strtol@c& (0+255),w,b
 16806  001A9E  A4D8               	btfss	status,2,c
 16807  001AA0  D003               	goto	l3438
 16808                           
 16809                           ; BSR set to: 0
 16810  001AA2  0E01               	movlw	1
 16811  001AA4  6F93               	movwf	strtol@sign& (0+255),b
 16812  001AA6  D004               	goto	u12600
 16813  001AA8                     l3438:
 16814                           
 16815                           ; BSR set to: 0
 16816                           
 16817                           ; BSR set to: 0
 16818  001AA8  0E2B               	movlw	43
 16819  001AAA  1998               	xorwf	strtol@c& (0+255),w,b
 16820  001AAC  A4D8               	btfss	status,2,c
 16821  001AAE  D008               	goto	l3440
 16822  001AB0                     u12600:
 16823                           
 16824                           ; BSR set to: 0
 16825  001AB0  C089  FFD9         	movff	strtol@s,fsr2l
 16826  001AB4  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16827  001AB8  50DF               	movf	indf2,w,c
 16828  001ABA  6F98               	movwf	strtol@c& (0+255),b
 16829                           
 16830                           ; BSR set to: 0
 16831  001ABC  4B89               	infsnz	strtol@s& (0+255),f,b
 16832  001ABE  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16833  001AC0                     l3440:
 16834                           
 16835                           ; BSR set to: 0
 16836                           
 16837                           ; BSR set to: 0
 16838                           
 16839                           ; BSR set to: 0
 16840  001AC0  0E30               	movlw	48
 16841  001AC2  1998               	xorwf	strtol@c& (0+255),w,b
 16842  001AC4  A4D8               	btfss	status,2,c
 16843  001AC6  D02E               	goto	l3448
 16844                           
 16845                           ; BSR set to: 0
 16846  001AC8  C089  FFD9         	movff	strtol@s,fsr2l
 16847  001ACC  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16848  001AD0  50DF               	movf	indf2,w,c
 16849  001AD2  6F98               	movwf	strtol@c& (0+255),b
 16850                           
 16851                           ; BSR set to: 0
 16852  001AD4  4B89               	infsnz	strtol@s& (0+255),f,b
 16853  001AD6  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16854                           
 16855                           ; BSR set to: 0
 16856  001AD8  518D               	movf	strtol@base& (0+255),w,b
 16857  001ADA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16858  001ADC  B4D8               	btfsc	status,2,c
 16859  001ADE  D005               	goto	u12630
 16860                           
 16861                           ; BSR set to: 0
 16862  001AE0  0E10               	movlw	16
 16863  001AE2  198D               	xorwf	strtol@base& (0+255),w,b
 16864  001AE4  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16865  001AE6  A4D8               	btfss	status,2,c
 16866  001AE8  D015               	goto	l3442
 16867  001AEA                     u12630:
 16868                           
 16869                           ; BSR set to: 0
 16870                           
 16871                           ; BSR set to: 0
 16872  001AEA  0E78               	movlw	120
 16873  001AEC  1998               	xorwf	strtol@c& (0+255),w,b
 16874  001AEE  B4D8               	btfsc	status,2,c
 16875  001AF0  D004               	goto	u12650
 16876                           
 16877                           ; BSR set to: 0
 16878  001AF2  0E58               	movlw	88
 16879  001AF4  1998               	xorwf	strtol@c& (0+255),w,b
 16880  001AF6  A4D8               	btfss	status,2,c
 16881  001AF8  D00D               	goto	l3442
 16882  001AFA                     u12650:
 16883                           
 16884                           ; BSR set to: 0
 16885                           
 16886                           ; BSR set to: 0
 16887  001AFA  0E00               	movlw	0
 16888  001AFC  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16889  001AFE  0E10               	movlw	16
 16890  001B00  6F8D               	movwf	strtol@base& (0+255),b
 16891                           
 16892                           ; BSR set to: 0
 16893  001B02  C089  FFD9         	movff	strtol@s,fsr2l
 16894  001B06  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16895  001B0A  50DF               	movf	indf2,w,c
 16896  001B0C  6F98               	movwf	strtol@c& (0+255),b
 16897                           
 16898                           ; BSR set to: 0
 16899  001B0E  4B89               	infsnz	strtol@s& (0+255),f,b
 16900  001B10  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16901  001B12  D008               	goto	l3448
 16902  001B14                     l3442:
 16903                           
 16904                           ; BSR set to: 0
 16905                           
 16906                           ; BSR set to: 0
 16907  001B14  518D               	movf	strtol@base& (0+255),w,b
 16908  001B16  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16909  001B18  A4D8               	btfss	status,2,c
 16910  001B1A  D004               	goto	l3448
 16911                           
 16912                           ; BSR set to: 0
 16913  001B1C  0E00               	movlw	0
 16914  001B1E  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16915  001B20  0E08               	movlw	8
 16916  001B22  6F8D               	movwf	strtol@base& (0+255),b
 16917  001B24                     l3448:
 16918                           
 16919                           ; BSR set to: 0
 16920                           
 16921                           ; BSR set to: 0
 16922                           
 16923                           ; BSR set to: 0
 16924                           
 16925                           ; BSR set to: 0
 16926  001B24  518D               	movf	strtol@base& (0+255),w,b
 16927  001B26  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16928  001B28  A4D8               	btfss	status,2,c
 16929  001B2A  D004               	goto	l3449
 16930                           
 16931                           ; BSR set to: 0
 16932  001B2C  0E00               	movlw	0
 16933  001B2E  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16934  001B30  0E0A               	movlw	10
 16935  001B32  6F8D               	movwf	strtol@base& (0+255),b
 16936  001B34                     l3449:
 16937                           
 16938                           ; BSR set to: 0
 16939                           
 16940                           ; BSR set to: 0
 16941                           
 16942                           ; BSR set to: 0
 16943  001B34  5198               	movf	strtol@c& (0+255),w,b
 16944  001B36  ECC9  F030         	call	_isalpha
 16945  001B3A  A0D8               	btfss	status,0,c
 16946  001B3C  D008               	goto	l3451
 16947  001B3E  0100               	movlb	0	; () banked
 16948  001B40  5198               	movf	strtol@c& (0+255),w,b
 16949  001B42  ECF9  F032         	call	_toupper
 16950  001B46  0FC9               	addlw	201
 16951  001B48  0100               	movlb	0	; () banked
 16952  001B4A  6F98               	movwf	strtol@c& (0+255),b
 16953  001B4C  D009               	goto	l3454
 16954  001B4E                     l3451:
 16955                           
 16956                           ; BSR set to: 0
 16957  001B4E  0100               	movlb	0	; () banked
 16958  001B50  5198               	movf	strtol@c& (0+255),w,b
 16959  001B52  EC2D  F032         	call	_isdigit
 16960  001B56  A0D8               	btfss	status,0,c
 16961  001B58  D039               	goto	l3455
 16962  001B5A  0E30               	movlw	48
 16963  001B5C  0100               	movlb	0	; () banked
 16964  001B5E  5F98               	subwf	strtol@c& (0+255),f,b
 16965  001B60                     l3454:
 16966                           
 16967                           ; BSR set to: 0
 16968                           
 16969                           ; BSR set to: 0
 16970                           
 16971                           ; BSR set to: 0
 16972  001B60  5198               	movf	strtol@c& (0+255),w,b
 16973  001B62  6F8F               	movwf	??_strtol& (0+255),b
 16974  001B64  6B90               	clrf	(??_strtol+1)& (0+255),b
 16975  001B66  518D               	movf	strtol@base& (0+255),w,b
 16976  001B68  5D8F               	subwf	??_strtol& (0+255),w,b
 16977  001B6A  5190               	movf	(??_strtol+1)& (0+255),w,b
 16978  001B6C  0A80               	xorlw	128
 16979  001B6E  6F91               	movwf	(??_strtol+2)& (0+255),b
 16980  001B70  518E               	movf	(strtol@base+1)& (0+255),w,b
 16981  001B72  0A80               	xorlw	128
 16982  001B74  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16983  001B76  B0D8               	btfsc	status,0,c
 16984  001B78  D029               	goto	l3455
 16985                           
 16986                           ; BSR set to: 0
 16987                           
 16988                           ; BSR set to: 0
 16989                           
 16990                           ; BSR set to: 0
 16991  001B7A  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16992  001B7E  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16993  001B82  0E00               	movlw	0
 16994  001B84  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16995  001B86  0EFF               	movlw	-1
 16996  001B88  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16997  001B8A  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16998  001B8C  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16999  001B90  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17000  001B94  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17001  001B98  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17002  001B9C  EC0A  F02B         	call	___lmul	;wreg free
 17003  001BA0  0100               	movlb	0	; () banked
 17004  001BA2  5198               	movf	strtol@c& (0+255),w,b
 17005  001BA4  257D               	addwf	?___lmul& (0+255),w,b
 17006  001BA6  6F94               	movwf	strtol@a& (0+255),b
 17007  001BA8  0E00               	movlw	0
 17008  001BAA  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17009  001BAC  6F95               	movwf	(strtol@a+1)& (0+255),b
 17010  001BAE  0E00               	movlw	0
 17011  001BB0  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17012  001BB2  6F96               	movwf	(strtol@a+2)& (0+255),b
 17013  001BB4  0E00               	movlw	0
 17014  001BB6  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17015  001BB8  6F97               	movwf	(strtol@a+3)& (0+255),b
 17016                           
 17017                           ; BSR set to: 0
 17018  001BBA  C089  FFD9         	movff	strtol@s,fsr2l
 17019  001BBE  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17020  001BC2  50DF               	movf	indf2,w,c
 17021  001BC4  6F98               	movwf	strtol@c& (0+255),b
 17022                           
 17023                           ; BSR set to: 0
 17024  001BC6  4B89               	infsnz	strtol@s& (0+255),f,b
 17025  001BC8  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17026  001BCA  D7B4               	goto	l3449
 17027  001BCC                     l3455:
 17028                           
 17029                           ; BSR set to: 0
 17030  001BCC  0100               	movlb	0	; () banked
 17031  001BCE  518B               	movf	strtol@endptr& (0+255),w,b
 17032  001BD0  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17033  001BD2  B4D8               	btfsc	status,2,c
 17034  001BD4  D00E               	goto	l3457
 17035                           
 17036                           ; BSR set to: 0
 17037  001BD6  0EFF               	movlw	255
 17038  001BD8  2589               	addwf	strtol@s& (0+255),w,b
 17039  001BDA  6F8F               	movwf	??_strtol& (0+255),b
 17040  001BDC  0EFF               	movlw	255
 17041  001BDE  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17042  001BE0  6F90               	movwf	(??_strtol+1)& (0+255),b
 17043  001BE2  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17044  001BE6  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17045  001BEA  C08F  FFDE         	movff	??_strtol,postinc2
 17046  001BEE  C090  FFDD         	movff	??_strtol+1,postdec2
 17047  001BF2                     l3457:
 17048                           
 17049                           ; BSR set to: 0
 17050                           
 17051                           ; BSR set to: 0
 17052  001BF2  5193               	movf	strtol@sign& (0+255),w,b
 17053  001BF4  B4D8               	btfsc	status,2,c
 17054  001BF6  D01A               	goto	l3458
 17055                           
 17056                           ; BSR set to: 0
 17057  001BF8  C094  F08F         	movff	strtol@a,??_strtol
 17058  001BFC  C095  F090         	movff	strtol@a+1,??_strtol+1
 17059  001C00  C096  F091         	movff	strtol@a+2,??_strtol+2
 17060  001C04  C097  F092         	movff	strtol@a+3,??_strtol+3
 17061  001C08  1F8F               	comf	??_strtol& (0+255),f,b
 17062  001C0A  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17063  001C0C  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17064  001C0E  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17065  001C10  2B8F               	incf	??_strtol& (0+255),f,b
 17066  001C12  0E00               	movlw	0
 17067  001C14  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17068  001C16  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17069  001C18  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17070  001C1A  C08F  F089         	movff	??_strtol,?_strtol
 17071  001C1E  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17072  001C22  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17073  001C26  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17074                           
 17075                           ; BSR set to: 0
 17076  001C2A  0012               	return	
 17077  001C2C                     l3458:
 17078                           
 17079                           ; BSR set to: 0
 17080  001C2C  C094  F089         	movff	strtol@a,?_strtol
 17081  001C30  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17082  001C34  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17083  001C38  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17084                           
 17085                           ; BSR set to: 0
 17086  001C3C  0012               	return		;funcret
 17087  001C3E                     __end_of_strtol:
 17088                           	opt stack 0
 17089                           tosu	equ	0xFFF
 17090                           tosh	equ	0xFFE
 17091                           tosl	equ	0xFFD
 17092                           pclath	equ	0xFFA
 17093                           tblptru	equ	0xFF8
 17094                           tblptrh	equ	0xFF7
 17095                           tblptrl	equ	0xFF6
 17096                           tablat	equ	0xFF5
 17097                           prodh	equ	0xFF4
 17098                           prodl	equ	0xFF3
 17099                           intcon	equ	0xFF2
 17100                           intcon2	equ	0xFF1
 17101                           intcon3	equ	0xFF0
 17102                           indf0	equ	0xFEF
 17103                           postinc0	equ	0xFEE
 17104                           plusw0	equ	0xFEB
 17105                           fsr0h	equ	0xFEA
 17106                           fsr0l	equ	0xFE9
 17107                           wreg	equ	0xFE8
 17108                           indf1	equ	0xFE7
 17109                           postinc1	equ	0xFE6
 17110                           postdec1	equ	0xFE5
 17111                           fsr1h	equ	0xFE2
 17112                           fsr1l	equ	0xFE1
 17113                           indf2	equ	0xFDF
 17114                           postinc2	equ	0xFDE
 17115                           postdec2	equ	0xFDD
 17116                           plusw2	equ	0xFDB
 17117                           fsr2h	equ	0xFDA
 17118                           fsr2l	equ	0xFD9
 17119                           status	equ	0xFD8
 17120                           
 17121 ;; *************** function _toupper *****************
 17122 ;; Defined at:
 17123 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17124 ;; Parameters:    Size  Location     Type
 17125 ;;  c               1    wreg     unsigned char 
 17126 ;; Auto vars:     Size  Location     Type
 17127 ;;  c               1   29[BANK0 ] unsigned char 
 17128 ;; Return value:  Size  Location     Type
 17129 ;;                  1    wreg      unsigned char 
 17130 ;; Registers used:
 17131 ;;		wreg, status,2, status,0
 17132 ;; Tracked objects:
 17133 ;;		On entry : 0/0
 17134 ;;		On exit  : 0/0
 17135 ;;		Unchanged: 0/0
 17136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17141 ;;Total ram usage:        1 bytes
 17142 ;; Hardware stack levels used:    1
 17143 ;; Hardware stack levels required when called:   11
 17144 ;; This function calls:
 17145 ;;		Nothing
 17146 ;; This function is called by:
 17147 ;;		_strtol
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           	psect	text65
 17152  0065F2                     __ptext65:
 17153                           	opt stack 0
 17154  0065F2                     _toupper:
 17155                           	opt stack 13
 17156                           
 17157                           ; BSR set to: 0
 17158                           ;incstack = 0
 17159                           ;toupper@c stored from wreg
 17160  0065F2  0100               	movlb	0	; () banked
 17161  0065F4  6F7D               	movwf	toupper@c& (0+255),b
 17162  0065F6  0E7B               	movlw	123
 17163  0065F8  0100               	movlb	0	; () banked
 17164  0065FA  617D               	cpfslt	toupper@c& (0+255),b
 17165  0065FC  D004               	goto	l3462
 17166                           
 17167                           ; BSR set to: 0
 17168  0065FE  0E60               	movlw	96
 17169  006600  657D               	cpfsgt	toupper@c& (0+255),b
 17170  006602  D001               	goto	l3462
 17171                           
 17172                           ; BSR set to: 0
 17173  006604  9B7D               	bcf	toupper@c& (0+255),5,b
 17174  006606                     l3462:
 17175                           
 17176                           ; BSR set to: 0
 17177                           
 17178                           ; BSR set to: 0
 17179  006606  517D               	movf	toupper@c& (0+255),w,b
 17180  006608  0012               	return	
 17181  00660A                     __end_of_toupper:
 17182                           	opt stack 0
 17183                           tosu	equ	0xFFF
 17184                           tosh	equ	0xFFE
 17185                           tosl	equ	0xFFD
 17186                           pclath	equ	0xFFA
 17187                           tblptru	equ	0xFF8
 17188                           tblptrh	equ	0xFF7
 17189                           tblptrl	equ	0xFF6
 17190                           tablat	equ	0xFF5
 17191                           prodh	equ	0xFF4
 17192                           prodl	equ	0xFF3
 17193                           intcon	equ	0xFF2
 17194                           intcon2	equ	0xFF1
 17195                           intcon3	equ	0xFF0
 17196                           indf0	equ	0xFEF
 17197                           postinc0	equ	0xFEE
 17198                           plusw0	equ	0xFEB
 17199                           fsr0h	equ	0xFEA
 17200                           fsr0l	equ	0xFE9
 17201                           wreg	equ	0xFE8
 17202                           indf1	equ	0xFE7
 17203                           postinc1	equ	0xFE6
 17204                           postdec1	equ	0xFE5
 17205                           fsr1h	equ	0xFE2
 17206                           fsr1l	equ	0xFE1
 17207                           indf2	equ	0xFDF
 17208                           postinc2	equ	0xFDE
 17209                           postdec2	equ	0xFDD
 17210                           plusw2	equ	0xFDB
 17211                           fsr2h	equ	0xFDA
 17212                           fsr2l	equ	0xFD9
 17213                           status	equ	0xFD8
 17214                           
 17215 ;; *************** function _isspace *****************
 17216 ;; Defined at:
 17217 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17218 ;; Parameters:    Size  Location     Type
 17219 ;;  c               1    wreg     unsigned char 
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;  c               1   31[BANK0 ] unsigned char 
 17222 ;; Return value:  Size  Location     Type
 17223 ;;		None               void
 17224 ;; Registers used:
 17225 ;;		wreg, status,2, status,0
 17226 ;; Tracked objects:
 17227 ;;		On entry : 0/0
 17228 ;;		On exit  : 0/0
 17229 ;;		Unchanged: 0/0
 17230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17235 ;;Total ram usage:        3 bytes
 17236 ;; Hardware stack levels used:    1
 17237 ;; Hardware stack levels required when called:   11
 17238 ;; This function calls:
 17239 ;;		Nothing
 17240 ;; This function is called by:
 17241 ;;		_strtol
 17242 ;;		_xtoi
 17243 ;; This function uses a non-reentrant model
 17244 ;;
 17245                           
 17246                           	psect	text66
 17247  0062A4                     __ptext66:
 17248                           	opt stack 0
 17249  0062A4                     _isspace:
 17250                           	opt stack 13
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;incstack = 0
 17254                           ;isspace@c stored from wreg
 17255  0062A4  0100               	movlb	0	; () banked
 17256  0062A6  6F7F               	movwf	isspace@c& (0+255),b
 17257  0062A8  0E01               	movlw	1
 17258  0062AA  0100               	movlb	0	; () banked
 17259  0062AC  6F7E               	movwf	_isspace$6615& (0+255),b
 17260                           
 17261                           ; BSR set to: 0
 17262  0062AE  0E20               	movlw	32
 17263  0062B0  197F               	xorwf	isspace@c& (0+255),w,b
 17264  0062B2  B4D8               	btfsc	status,2,c
 17265  0062B4  D008               	goto	l3519
 17266                           
 17267                           ; BSR set to: 0
 17268  0062B6  0E0E               	movlw	14
 17269  0062B8  617F               	cpfslt	isspace@c& (0+255),b
 17270  0062BA  D003               	goto	u12010
 17271                           
 17272                           ; BSR set to: 0
 17273  0062BC  0E09               	movlw	9
 17274  0062BE  617F               	cpfslt	isspace@c& (0+255),b
 17275  0062C0  D002               	goto	l3519
 17276  0062C2                     u12010:
 17277                           
 17278                           ; BSR set to: 0
 17279                           
 17280                           ; BSR set to: 0
 17281  0062C2  0E00               	movlw	0
 17282  0062C4  6F7E               	movwf	_isspace$6615& (0+255),b
 17283  0062C6                     l3519:
 17284                           
 17285                           ; BSR set to: 0
 17286                           
 17287                           ; BSR set to: 0
 17288  0062C6  C07E  F07D         	movff	_isspace$6615,??_isspace
 17289  0062CA  317D               	rrcf	??_isspace& (0+255),w,b
 17290  0062CC  0012               	return	
 17291  0062CE                     __end_of_isspace:
 17292                           	opt stack 0
 17293                           tosu	equ	0xFFF
 17294                           tosh	equ	0xFFE
 17295                           tosl	equ	0xFFD
 17296                           pclath	equ	0xFFA
 17297                           tblptru	equ	0xFF8
 17298                           tblptrh	equ	0xFF7
 17299                           tblptrl	equ	0xFF6
 17300                           tablat	equ	0xFF5
 17301                           prodh	equ	0xFF4
 17302                           prodl	equ	0xFF3
 17303                           intcon	equ	0xFF2
 17304                           intcon2	equ	0xFF1
 17305                           intcon3	equ	0xFF0
 17306                           indf0	equ	0xFEF
 17307                           postinc0	equ	0xFEE
 17308                           plusw0	equ	0xFEB
 17309                           fsr0h	equ	0xFEA
 17310                           fsr0l	equ	0xFE9
 17311                           wreg	equ	0xFE8
 17312                           indf1	equ	0xFE7
 17313                           postinc1	equ	0xFE6
 17314                           postdec1	equ	0xFE5
 17315                           fsr1h	equ	0xFE2
 17316                           fsr1l	equ	0xFE1
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           postdec2	equ	0xFDD
 17320                           plusw2	equ	0xFDB
 17321                           fsr2h	equ	0xFDA
 17322                           fsr2l	equ	0xFD9
 17323                           status	equ	0xFD8
 17324                           
 17325 ;; *************** function _isalpha *****************
 17326 ;; Defined at:
 17327 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17328 ;; Parameters:    Size  Location     Type
 17329 ;;  c               1    wreg     unsigned char 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;  c               1   34[BANK0 ] unsigned char 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;		None               void
 17334 ;; Registers used:
 17335 ;;		wreg, status,2, status,0, cstack
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;Total ram usage:        3 bytes
 17346 ;; Hardware stack levels used:    1
 17347 ;; Hardware stack levels required when called:   12
 17348 ;; This function calls:
 17349 ;;		_isupper
 17350 ;; This function is called by:
 17351 ;;		_strtol
 17352 ;; This function uses a non-reentrant model
 17353 ;;
 17354                           
 17355                           	psect	text67
 17356  006192                     __ptext67:
 17357                           	opt stack 0
 17358  006192                     _isalpha:
 17359                           	opt stack 12
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;incstack = 0
 17363                           ;isalpha@c stored from wreg
 17364  006192  0100               	movlb	0	; () banked
 17365  006194  6F82               	movwf	isalpha@c& (0+255),b
 17366  006196  0E01               	movlw	1
 17367  006198  0100               	movlb	0	; () banked
 17368  00619A  6F81               	movwf	_isalpha$6612& (0+255),b
 17369                           
 17370                           ; BSR set to: 0
 17371  00619C  0E7B               	movlw	123
 17372  00619E  6182               	cpfslt	isalpha@c& (0+255),b
 17373  0061A0  D003               	goto	u12030
 17374                           
 17375                           ; BSR set to: 0
 17376  0061A2  0E61               	movlw	97
 17377  0061A4  6182               	cpfslt	isalpha@c& (0+255),b
 17378  0061A6  D008               	goto	l3514
 17379  0061A8                     u12030:
 17380                           
 17381                           ; BSR set to: 0
 17382                           
 17383                           ; BSR set to: 0
 17384  0061A8  5182               	movf	isalpha@c& (0+255),w,b
 17385  0061AA  EC0B  F032         	call	_isupper
 17386  0061AE  B0D8               	btfsc	status,0,c
 17387  0061B0  D003               	goto	l3514
 17388  0061B2  0E00               	movlw	0
 17389  0061B4  0100               	movlb	0	; () banked
 17390  0061B6  6F81               	movwf	_isalpha$6612& (0+255),b
 17391  0061B8                     l3514:
 17392                           
 17393                           ; BSR set to: 0
 17394  0061B8  C081  F080         	movff	_isalpha$6612,??_isalpha
 17395  0061BC  0100               	movlb	0	; () banked
 17396  0061BE  3180               	rrcf	??_isalpha& (0+255),w,b
 17397  0061C0  0012               	return	
 17398  0061C2                     __end_of_isalpha:
 17399                           	opt stack 0
 17400                           tosu	equ	0xFFF
 17401                           tosh	equ	0xFFE
 17402                           tosl	equ	0xFFD
 17403                           pclath	equ	0xFFA
 17404                           tblptru	equ	0xFF8
 17405                           tblptrh	equ	0xFF7
 17406                           tblptrl	equ	0xFF6
 17407                           tablat	equ	0xFF5
 17408                           prodh	equ	0xFF4
 17409                           prodl	equ	0xFF3
 17410                           intcon	equ	0xFF2
 17411                           intcon2	equ	0xFF1
 17412                           intcon3	equ	0xFF0
 17413                           indf0	equ	0xFEF
 17414                           postinc0	equ	0xFEE
 17415                           plusw0	equ	0xFEB
 17416                           fsr0h	equ	0xFEA
 17417                           fsr0l	equ	0xFE9
 17418                           wreg	equ	0xFE8
 17419                           indf1	equ	0xFE7
 17420                           postinc1	equ	0xFE6
 17421                           postdec1	equ	0xFE5
 17422                           fsr1h	equ	0xFE2
 17423                           fsr1l	equ	0xFE1
 17424                           indf2	equ	0xFDF
 17425                           postinc2	equ	0xFDE
 17426                           postdec2	equ	0xFDD
 17427                           plusw2	equ	0xFDB
 17428                           fsr2h	equ	0xFDA
 17429                           fsr2l	equ	0xFD9
 17430                           status	equ	0xFD8
 17431                           
 17432 ;; *************** function _isupper *****************
 17433 ;; Defined at:
 17434 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;  c               1    wreg     unsigned char 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;  c               1   31[BANK0 ] unsigned char 
 17439 ;; Return value:  Size  Location     Type
 17440 ;;		None               void
 17441 ;; Registers used:
 17442 ;;		wreg, status,2, status,0
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17452 ;;Total ram usage:        3 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; Hardware stack levels required when called:   11
 17455 ;; This function calls:
 17456 ;;		Nothing
 17457 ;; This function is called by:
 17458 ;;		_xtoi
 17459 ;;		_isalpha
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text68
 17464  006416                     __ptext68:
 17465                           	opt stack 0
 17466  006416                     _isupper:
 17467                           	opt stack 13
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;incstack = 0
 17471                           ;isupper@c stored from wreg
 17472  006416  0100               	movlb	0	; () banked
 17473  006418  6F7F               	movwf	isupper@c& (0+255),b
 17474  00641A  0E00               	movlw	0
 17475  00641C  0100               	movlb	0	; () banked
 17476  00641E  6F7E               	movwf	_isupper$6618& (0+255),b
 17477                           
 17478                           ; BSR set to: 0
 17479  006420  0E5B               	movlw	91
 17480  006422  617F               	cpfslt	isupper@c& (0+255),b
 17481  006424  D005               	goto	l3524
 17482                           
 17483                           ; BSR set to: 0
 17484  006426  0E40               	movlw	64
 17485  006428  657F               	cpfsgt	isupper@c& (0+255),b
 17486  00642A  D002               	goto	l3524
 17487                           
 17488                           ; BSR set to: 0
 17489  00642C  0E01               	movlw	1
 17490  00642E  6F7E               	movwf	_isupper$6618& (0+255),b
 17491  006430                     l3524:
 17492                           
 17493                           ; BSR set to: 0
 17494                           
 17495                           ; BSR set to: 0
 17496  006430  C07E  F07D         	movff	_isupper$6618,??_isupper
 17497  006434  317D               	rrcf	??_isupper& (0+255),w,b
 17498  006436  0012               	return	
 17499  006438                     __end_of_isupper:
 17500                           	opt stack 0
 17501                           tosu	equ	0xFFF
 17502                           tosh	equ	0xFFE
 17503                           tosl	equ	0xFFD
 17504                           pclath	equ	0xFFA
 17505                           tblptru	equ	0xFF8
 17506                           tblptrh	equ	0xFF7
 17507                           tblptrl	equ	0xFF6
 17508                           tablat	equ	0xFF5
 17509                           prodh	equ	0xFF4
 17510                           prodl	equ	0xFF3
 17511                           intcon	equ	0xFF2
 17512                           intcon2	equ	0xFF1
 17513                           intcon3	equ	0xFF0
 17514                           indf0	equ	0xFEF
 17515                           postinc0	equ	0xFEE
 17516                           plusw0	equ	0xFEB
 17517                           fsr0h	equ	0xFEA
 17518                           fsr0l	equ	0xFE9
 17519                           wreg	equ	0xFE8
 17520                           indf1	equ	0xFE7
 17521                           postinc1	equ	0xFE6
 17522                           postdec1	equ	0xFE5
 17523                           fsr1h	equ	0xFE2
 17524                           fsr1l	equ	0xFE1
 17525                           indf2	equ	0xFDF
 17526                           postinc2	equ	0xFDE
 17527                           postdec2	equ	0xFDD
 17528                           plusw2	equ	0xFDB
 17529                           fsr2h	equ	0xFDA
 17530                           fsr2l	equ	0xFD9
 17531                           status	equ	0xFD8
 17532                           
 17533 ;; *************** function _strcpy *****************
 17534 ;; Defined at:
 17535 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17538 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17539 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17540 ;;		 -> STR_23(20), STR_21(42), 
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17543 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17544 ;; Return value:  Size  Location     Type
 17545 ;;                  2   29[BANK0 ] PTR unsigned char 
 17546 ;; Registers used:
 17547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17548 ;; Tracked objects:
 17549 ;;		On entry : 0/0
 17550 ;;		On exit  : 0/0
 17551 ;;		Unchanged: 0/0
 17552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17553 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17556 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17557 ;;Total ram usage:        6 bytes
 17558 ;; Hardware stack levels used:    1
 17559 ;; Hardware stack levels required when called:   11
 17560 ;; This function calls:
 17561 ;;		Nothing
 17562 ;; This function is called by:
 17563 ;;		_Terminal
 17564 ;;		_Term_MainSm
 17565 ;; This function uses a non-reentrant model
 17566 ;;
 17567                           
 17568                           	psect	text69
 17569  006100                     __ptext69:
 17570                           	opt stack 0
 17571  006100                     _strcpy:
 17572                           	opt stack 15
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;incstack = 0
 17576  006100  C07D  F081         	movff	strcpy@to,strcpy@cp
 17577  006104  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17578  006108  D005               	goto	l3416
 17579  00610A  0100               	movlb	0	; () banked
 17580  00610C  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17581  00610E  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17582  006110  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17583  006112  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17584  006114                     l3416:
 17585                           
 17586                           ; BSR set to: 0
 17587  006114  C07F  FFF6         	movff	strcpy@from,tblptrl
 17588  006118  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17589  00611C                     	if	0	;tblptru may be non-zero
 17590  00611C                     	endif
 17591  00611C                     	if	0	;tblptru may be non-zero
 17592  00611C                     	endif
 17593  00611C  C081  FFD9         	movff	strcpy@cp,fsr2l
 17594  006120  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17595  006124  0008               	tblrd		*
 17596  006126  CFF5 FFDF          	movff	tablat,indf2
 17597  00612A  50DF               	movf	indf2,w,c
 17598  00612C  B4D8               	btfsc	status,2,c
 17599  00612E  0012               	return	
 17600  006130  D7EC               	goto	l3417
 17601  006132                     __end_of_strcpy:
 17602                           	opt stack 0
 17603                           tosu	equ	0xFFF
 17604                           tosh	equ	0xFFE
 17605                           tosl	equ	0xFFD
 17606                           pclath	equ	0xFFA
 17607                           tblptru	equ	0xFF8
 17608                           tblptrh	equ	0xFF7
 17609                           tblptrl	equ	0xFF6
 17610                           tablat	equ	0xFF5
 17611                           prodh	equ	0xFF4
 17612                           prodl	equ	0xFF3
 17613                           intcon	equ	0xFF2
 17614                           intcon2	equ	0xFF1
 17615                           intcon3	equ	0xFF0
 17616                           indf0	equ	0xFEF
 17617                           postinc0	equ	0xFEE
 17618                           plusw0	equ	0xFEB
 17619                           fsr0h	equ	0xFEA
 17620                           fsr0l	equ	0xFE9
 17621                           wreg	equ	0xFE8
 17622                           indf1	equ	0xFE7
 17623                           postinc1	equ	0xFE6
 17624                           postdec1	equ	0xFE5
 17625                           fsr1h	equ	0xFE2
 17626                           fsr1l	equ	0xFE1
 17627                           indf2	equ	0xFDF
 17628                           postinc2	equ	0xFDE
 17629                           postdec2	equ	0xFDD
 17630                           plusw2	equ	0xFDB
 17631                           fsr2h	equ	0xFDA
 17632                           fsr2l	equ	0xFD9
 17633                           status	equ	0xFD8
 17634                           
 17635 ;; *************** function _putUSBUSART *****************
 17636 ;; Defined at:
 17637 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17638 ;; Parameters:    Size  Location     Type
 17639 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17640 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17641 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17642 ;;		 -> RxBuffer(400), 
 17643 ;;  length          1   37[BANK0 ] unsigned char 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      void 
 17648 ;; Registers used:
 17649 ;;		wreg, status,2, status,0
 17650 ;; Tracked objects:
 17651 ;;		On entry : 0/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17655 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17658 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17659 ;;Total ram usage:        3 bytes
 17660 ;; Hardware stack levels used:    1
 17661 ;; Hardware stack levels required when called:   11
 17662 ;; This function calls:
 17663 ;;		Nothing
 17664 ;; This function is called by:
 17665 ;;		_Terminal
 17666 ;;		_Term_MainSm
 17667 ;;		_GsmGprsTerminal
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671                           	psect	text70
 17672  006438                     __ptext70:
 17673                           	opt stack 0
 17674  006438                     _putUSBUSART:
 17675                           	opt stack 15
 17676                           
 17677                           ;usb_device_cdc.c: 584: ;
 17678                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17679                           
 17680                           ;incstack = 0
 17681  006438  0100               	movlb	0	; () banked
 17682  00643A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17683  00643C  A4D8               	btfss	status,2,c
 17684  00643E  0012               	return	
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;usb_device_cdc.c: 586: {
 17688                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17689  006440  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17690  006444  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17691                           
 17692                           ; BSR set to: 0
 17693  006448  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17694                           
 17695                           ; BSR set to: 0
 17696  00644C  0E01               	movlw	1
 17697  00644E  0101               	movlb	1	; () banked
 17698  006450  6FE0               	movwf	_cdc_mem_type& (0+255),b
 17699                           
 17700                           ; BSR set to: 1
 17701  006452  0E01               	movlw	1
 17702  006454  0100               	movlb	0	; () banked
 17703  006456  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17704  006458  0012               	return	
 17705  00645A                     __end_of_putUSBUSART:
 17706                           	opt stack 0
 17707                           tosu	equ	0xFFF
 17708                           tosh	equ	0xFFE
 17709                           tosl	equ	0xFFD
 17710                           pclath	equ	0xFFA
 17711                           tblptru	equ	0xFF8
 17712                           tblptrh	equ	0xFF7
 17713                           tblptrl	equ	0xFF6
 17714                           tablat	equ	0xFF5
 17715                           prodh	equ	0xFF4
 17716                           prodl	equ	0xFF3
 17717                           intcon	equ	0xFF2
 17718                           intcon2	equ	0xFF1
 17719                           intcon3	equ	0xFF0
 17720                           indf0	equ	0xFEF
 17721                           postinc0	equ	0xFEE
 17722                           plusw0	equ	0xFEB
 17723                           fsr0h	equ	0xFEA
 17724                           fsr0l	equ	0xFE9
 17725                           wreg	equ	0xFE8
 17726                           indf1	equ	0xFE7
 17727                           postinc1	equ	0xFE6
 17728                           postdec1	equ	0xFE5
 17729                           fsr1h	equ	0xFE2
 17730                           fsr1l	equ	0xFE1
 17731                           indf2	equ	0xFDF
 17732                           postinc2	equ	0xFDE
 17733                           postdec2	equ	0xFDD
 17734                           plusw2	equ	0xFDB
 17735                           fsr2h	equ	0xFDA
 17736                           fsr2l	equ	0xFD9
 17737                           status	equ	0xFD8
 17738                           
 17739 ;; *************** function _itoa *****************
 17740 ;; Defined at:
 17741 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17742 ;; Parameters:    Size  Location     Type
 17743 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17744 ;;		 -> Terminal@Payload(80), 
 17745 ;;  val             2   53[BANK0 ] int 
 17746 ;;  base            2   55[BANK0 ] int 
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17749 ;;		 -> Terminal@Payload(80), 
 17750 ;; Return value:  Size  Location     Type
 17751 ;;                  2   51[BANK0 ] PTR unsigned char 
 17752 ;; Registers used:
 17753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17754 ;; Tracked objects:
 17755 ;;		On entry : 0/0
 17756 ;;		On exit  : 0/0
 17757 ;;		Unchanged: 0/0
 17758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17759 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17763 ;;Total ram usage:        8 bytes
 17764 ;; Hardware stack levels used:    1
 17765 ;; Hardware stack levels required when called:   13
 17766 ;; This function calls:
 17767 ;;		_utoa
 17768 ;; This function is called by:
 17769 ;;		_Terminal
 17770 ;; This function uses a non-reentrant model
 17771 ;;
 17772                           
 17773                           	psect	text71
 17774  005D78                     __ptext71:
 17775                           	opt stack 0
 17776  005D78                     _itoa:
 17777                           	opt stack 12
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;incstack = 0
 17781  005D78  C093  F099         	movff	itoa@buf,itoa@cp
 17782  005D7C  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17783  005D80  0100               	movlb	0	; () banked
 17784  005D82  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17785  005D84  D00C               	goto	l3164
 17786                           
 17787                           ; BSR set to: 0
 17788  005D86  C093  FFD9         	movff	itoa@buf,fsr2l
 17789  005D8A  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17790  005D8E  0E2D               	movlw	45
 17791  005D90  6EDF               	movwf	indf2,c
 17792                           
 17793                           ; BSR set to: 0
 17794  005D92  4B93               	infsnz	itoa@buf& (0+255),f,b
 17795  005D94  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17796                           
 17797                           ; BSR set to: 0
 17798  005D96  6D95               	negf	itoa@val& (0+255),b
 17799  005D98  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17800  005D9A  B0D8               	btfsc	status,0,c
 17801  005D9C  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17802  005D9E                     l3164:
 17803                           
 17804                           ; BSR set to: 0
 17805                           
 17806                           ; BSR set to: 0
 17807  005D9E  C093  F08A         	movff	itoa@buf,utoa@buf
 17808  005DA2  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17809  005DA6  C095  F08C         	movff	itoa@val,utoa@val
 17810  005DAA  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17811  005DAE  C097  F08E         	movff	itoa@base,utoa@base
 17812  005DB2  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17813  005DB6  EC24  F022         	call	_utoa	;wreg free
 17814  005DBA  0012               	return	
 17815  005DBC                     __end_of_itoa:
 17816                           	opt stack 0
 17817                           tosu	equ	0xFFF
 17818                           tosh	equ	0xFFE
 17819                           tosl	equ	0xFFD
 17820                           pclath	equ	0xFFA
 17821                           tblptru	equ	0xFF8
 17822                           tblptrh	equ	0xFF7
 17823                           tblptrl	equ	0xFF6
 17824                           tablat	equ	0xFF5
 17825                           prodh	equ	0xFF4
 17826                           prodl	equ	0xFF3
 17827                           intcon	equ	0xFF2
 17828                           intcon2	equ	0xFF1
 17829                           intcon3	equ	0xFF0
 17830                           indf0	equ	0xFEF
 17831                           postinc0	equ	0xFEE
 17832                           plusw0	equ	0xFEB
 17833                           fsr0h	equ	0xFEA
 17834                           fsr0l	equ	0xFE9
 17835                           wreg	equ	0xFE8
 17836                           indf1	equ	0xFE7
 17837                           postinc1	equ	0xFE6
 17838                           postdec1	equ	0xFE5
 17839                           fsr1h	equ	0xFE2
 17840                           fsr1l	equ	0xFE1
 17841                           indf2	equ	0xFDF
 17842                           postinc2	equ	0xFDE
 17843                           postdec2	equ	0xFDD
 17844                           plusw2	equ	0xFDB
 17845                           fsr2h	equ	0xFDA
 17846                           fsr2l	equ	0xFD9
 17847                           status	equ	0xFD8
 17848                           
 17849 ;; *************** function _utoa *****************
 17850 ;; Defined at:
 17851 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17854 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17855 ;;  val             2   44[BANK0 ] unsigned int 
 17856 ;;  base            2   46[BANK0 ] int 
 17857 ;; Auto vars:     Size  Location     Type
 17858 ;;  v               2   48[BANK0 ] unsigned int 
 17859 ;;  c               1   50[BANK0 ] unsigned char 
 17860 ;; Return value:  Size  Location     Type
 17861 ;;                  2   42[BANK0 ] PTR unsigned char 
 17862 ;; Registers used:
 17863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17864 ;; Tracked objects:
 17865 ;;		On entry : 0/0
 17866 ;;		On exit  : 0/0
 17867 ;;		Unchanged: 0/0
 17868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17869 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17872 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17873 ;;Total ram usage:        9 bytes
 17874 ;; Hardware stack levels used:    1
 17875 ;; Hardware stack levels required when called:   12
 17876 ;; This function calls:
 17877 ;;		___lwdiv
 17878 ;;		___lwmod
 17879 ;; This function is called by:
 17880 ;;		_Term_MainSm
 17881 ;;		_itoa
 17882 ;; This function uses a non-reentrant model
 17883 ;;
 17884                           
 17885                           	psect	text72
 17886  004448                     __ptext72:
 17887                           	opt stack 0
 17888  004448                     _utoa:
 17889                           	opt stack 14
 17890                           
 17891                           ;incstack = 0
 17892  004448  C08C  F090         	movff	utoa@val,utoa@v
 17893  00444C  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17894  004450  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17895  004454  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17896  004458  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17897  00445C  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17898  004460  EC36  F02C         	call	___lwdiv	;wreg free
 17899  004464  C083  F090         	movff	?___lwdiv,utoa@v
 17900  004468  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17901  00446C  0100               	movlb	0	; () banked
 17902  00446E  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17903  004470  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17904                           
 17905                           ; BSR set to: 0
 17906  004472  5190               	movf	utoa@v& (0+255),w,b
 17907  004474  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17908  004476  A4D8               	btfss	status,2,c
 17909  004478  D7EB               	goto	l3168
 17910                           
 17911                           ; BSR set to: 0
 17912                           
 17913                           ; BSR set to: 0
 17914  00447A  C08A  FFD9         	movff	utoa@buf,fsr2l
 17915  00447E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17916  004482  0E00               	movlw	0
 17917  004484  6EDF               	movwf	indf2,c
 17918                           
 17919                           ; BSR set to: 0
 17920  004486  078A               	decf	utoa@buf& (0+255),f,b
 17921  004488  A0D8               	btfss	status,0,c
 17922  00448A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17923  00448C                     
 17924                           ; BSR set to: 0
 17925                           
 17926                           ; BSR set to: 0
 17927  00448C  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17928  004490  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17929  004494  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17930  004498  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17931  00449C  ECDE  F02E         	call	___lwmod	;wreg free
 17932  0044A0  0100               	movlb	0	; () banked
 17933  0044A2  517D               	movf	?___lwmod& (0+255),w,b
 17934  0044A4  6F92               	movwf	utoa@c& (0+255),b
 17935                           
 17936                           ; BSR set to: 0
 17937  0044A6  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17938  0044AA  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17939  0044AE  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17940  0044B2  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17941  0044B6  EC36  F02C         	call	___lwdiv	;wreg free
 17942  0044BA  C083  F08C         	movff	?___lwdiv,utoa@val
 17943  0044BE  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17944  0044C2  0E09               	movlw	9
 17945  0044C4  0100               	movlb	0	; () banked
 17946  0044C6  6592               	cpfsgt	utoa@c& (0+255),b
 17947  0044C8  D002               	goto	l3171
 17948                           
 17949                           ; BSR set to: 0
 17950  0044CA  0E07               	movlw	7
 17951  0044CC  2792               	addwf	utoa@c& (0+255),f,b
 17952  0044CE                     l3171:
 17953                           
 17954                           ; BSR set to: 0
 17955  0044CE  0E30               	movlw	48
 17956  0044D0  2792               	addwf	utoa@c& (0+255),f,b
 17957                           
 17958                           ; BSR set to: 0
 17959  0044D2  C08A  FFD9         	movff	utoa@buf,fsr2l
 17960  0044D6  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17961  0044DA  C092  FFDF         	movff	utoa@c,indf2
 17962                           
 17963                           ; BSR set to: 0
 17964  0044DE  078A               	decf	utoa@buf& (0+255),f,b
 17965  0044E0  A0D8               	btfss	status,0,c
 17966  0044E2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17967                           
 17968                           ; BSR set to: 0
 17969  0044E4  518C               	movf	utoa@val& (0+255),w,b
 17970  0044E6  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17971  0044E8  A4D8               	btfss	status,2,c
 17972  0044EA  D7D0               	goto	l3170
 17973                           
 17974                           ; BSR set to: 0
 17975                           ;	Return value of _utoa is never used
 17976                           
 17977                           ; BSR set to: 0
 17978  0044EC  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17979  0044EE  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17980  0044F0  0012               	return	
 17981  0044F2                     __end_of_utoa:
 17982                           	opt stack 0
 17983                           tosu	equ	0xFFF
 17984                           tosh	equ	0xFFE
 17985                           tosl	equ	0xFFD
 17986                           pclath	equ	0xFFA
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodh	equ	0xFF4
 17992                           prodl	equ	0xFF3
 17993                           intcon	equ	0xFF2
 17994                           intcon2	equ	0xFF1
 17995                           intcon3	equ	0xFF0
 17996                           indf0	equ	0xFEF
 17997                           postinc0	equ	0xFEE
 17998                           plusw0	equ	0xFEB
 17999                           fsr0h	equ	0xFEA
 18000                           fsr0l	equ	0xFE9
 18001                           wreg	equ	0xFE8
 18002                           indf1	equ	0xFE7
 18003                           postinc1	equ	0xFE6
 18004                           postdec1	equ	0xFE5
 18005                           fsr1h	equ	0xFE2
 18006                           fsr1l	equ	0xFE1
 18007                           indf2	equ	0xFDF
 18008                           postinc2	equ	0xFDE
 18009                           postdec2	equ	0xFDD
 18010                           plusw2	equ	0xFDB
 18011                           fsr2h	equ	0xFDA
 18012                           fsr2l	equ	0xFD9
 18013                           status	equ	0xFD8
 18014                           
 18015 ;; *************** function ___lwmod *****************
 18016 ;; Defined at:
 18017 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;  dividend        2   29[BANK0 ] unsigned int 
 18020 ;;  divisor         2   31[BANK0 ] unsigned int 
 18021 ;; Auto vars:     Size  Location     Type
 18022 ;;  counter         1   33[BANK0 ] unsigned char 
 18023 ;; Return value:  Size  Location     Type
 18024 ;;                  2   29[BANK0 ] unsigned int 
 18025 ;; Registers used:
 18026 ;;		wreg, status,2, status,0
 18027 ;; Tracked objects:
 18028 ;;		On entry : 0/0
 18029 ;;		On exit  : 0/0
 18030 ;;		Unchanged: 0/0
 18031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18036 ;;Total ram usage:        5 bytes
 18037 ;; Hardware stack levels used:    1
 18038 ;; Hardware stack levels required when called:   11
 18039 ;; This function calls:
 18040 ;;		Nothing
 18041 ;; This function is called by:
 18042 ;;		_utoa
 18043 ;; This function uses a non-reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text73
 18047  005DBC                     __ptext73:
 18048                           	opt stack 0
 18049  005DBC                     ___lwmod:
 18050                           	opt stack 14
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;incstack = 0
 18054  005DBC  0100               	movlb	0	; () banked
 18055  005DBE  517F               	movf	___lwmod@divisor& (0+255),w,b
 18056  005DC0  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18057  005DC2  B4D8               	btfsc	status,2,c
 18058  005DC4  D018               	goto	l3266
 18059                           
 18060                           ; BSR set to: 0
 18061  005DC6  0E01               	movlw	1
 18062  005DC8  6F81               	movwf	___lwmod@counter& (0+255),b
 18063  005DCA  D004               	goto	l3261
 18064  005DCC                     
 18065                           ; BSR set to: 0
 18066                           
 18067                           ; BSR set to: 0
 18068  005DCC  90D8               	bcf	status,0,c
 18069  005DCE  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18070  005DD0  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18071  005DD2  2B81               	incf	___lwmod@counter& (0+255),f,b
 18072  005DD4                     l3261:
 18073                           
 18074                           ; BSR set to: 0
 18075                           
 18076                           ; BSR set to: 0
 18077  005DD4  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18078  005DD6  D7FA               	goto	l3262
 18079  005DD8                     u11670:
 18080                           
 18081                           ; BSR set to: 0
 18082                           
 18083                           ; BSR set to: 0
 18084                           
 18085                           ; BSR set to: 0
 18086  005DD8  517F               	movf	___lwmod@divisor& (0+255),w,b
 18087  005DDA  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18088  005DDC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18089  005DDE  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18090  005DE0  A0D8               	btfss	status,0,c
 18091  005DE2  D004               	goto	l3265
 18092                           
 18093                           ; BSR set to: 0
 18094  005DE4  517F               	movf	___lwmod@divisor& (0+255),w,b
 18095  005DE6  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18096  005DE8  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18097  005DEA  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18098  005DEC                     l3265:
 18099                           
 18100                           ; BSR set to: 0
 18101                           
 18102                           ; BSR set to: 0
 18103  005DEC  90D8               	bcf	status,0,c
 18104  005DEE  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18105  005DF0  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18106                           
 18107                           ; BSR set to: 0
 18108  005DF2  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18109  005DF4  D7F1               	goto	u11670
 18110  005DF6                     l3266:
 18111                           
 18112                           ; BSR set to: 0
 18113                           
 18114                           ; BSR set to: 0
 18115  005DF6  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18116  005DFA  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18117                           
 18118                           ; BSR set to: 0
 18119  005DFE  0012               	return		;funcret
 18120  005E00                     __end_of___lwmod:
 18121                           	opt stack 0
 18122                           tosu	equ	0xFFF
 18123                           tosh	equ	0xFFE
 18124                           tosl	equ	0xFFD
 18125                           pclath	equ	0xFFA
 18126                           tblptru	equ	0xFF8
 18127                           tblptrh	equ	0xFF7
 18128                           tblptrl	equ	0xFF6
 18129                           tablat	equ	0xFF5
 18130                           prodh	equ	0xFF4
 18131                           prodl	equ	0xFF3
 18132                           intcon	equ	0xFF2
 18133                           intcon2	equ	0xFF1
 18134                           intcon3	equ	0xFF0
 18135                           indf0	equ	0xFEF
 18136                           postinc0	equ	0xFEE
 18137                           plusw0	equ	0xFEB
 18138                           fsr0h	equ	0xFEA
 18139                           fsr0l	equ	0xFE9
 18140                           wreg	equ	0xFE8
 18141                           indf1	equ	0xFE7
 18142                           postinc1	equ	0xFE6
 18143                           postdec1	equ	0xFE5
 18144                           fsr1h	equ	0xFE2
 18145                           fsr1l	equ	0xFE1
 18146                           indf2	equ	0xFDF
 18147                           postinc2	equ	0xFDE
 18148                           postdec2	equ	0xFDD
 18149                           plusw2	equ	0xFDB
 18150                           fsr2h	equ	0xFDA
 18151                           fsr2l	equ	0xFD9
 18152                           status	equ	0xFD8
 18153                           
 18154 ;; *************** function _getsUSBUSART *****************
 18155 ;; Defined at:
 18156 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18159 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18160 ;;  len             1   38[BANK0 ] unsigned char 
 18161 ;; Auto vars:     Size  Location     Type
 18162 ;;		None
 18163 ;; Return value:  Size  Location     Type
 18164 ;;                  1    wreg      unsigned char 
 18165 ;; Registers used:
 18166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18167 ;; Tracked objects:
 18168 ;;		On entry : 0/0
 18169 ;;		On exit  : 0/0
 18170 ;;		Unchanged: 0/0
 18171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18172 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18176 ;;Total ram usage:        4 bytes
 18177 ;; Hardware stack levels used:    1
 18178 ;; Hardware stack levels required when called:   12
 18179 ;; This function calls:
 18180 ;;		_USBTransferOnePacket
 18181 ;; This function is called by:
 18182 ;;		_Terminal
 18183 ;;		_GsmGprsTerminal
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           	psect	text74
 18188  004950                     __ptext74:
 18189                           	opt stack 0
 18190  004950                     _getsUSBUSART:
 18191                           	opt stack 13
 18192                           
 18193                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;incstack = 0
 18197  004950  0E00               	movlw	0
 18198  004952  0100               	movlb	0	; () banked
 18199  004954  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18203  004956  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18204  004958  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18205  00495A  B4D8               	btfsc	status,2,c
 18206  00495C  D006               	goto	u12390
 18207                           
 18208                           ; BSR set to: 0
 18209  00495E  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18210  004962  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18211  004966  BEDF               	btfsc	indf2,7,c
 18212  004968  D03B               	goto	l1921
 18213  00496A                     u12390:
 18214                           
 18215                           ; BSR set to: 0
 18216                           ;usb_device_cdc.c: 493: {
 18217                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18218                           
 18219                           ; BSR set to: 0
 18220  00496A  EE20 F001          	lfsr	2,1
 18221  00496E  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18222  004970  26D9               	addwf	fsr2l,f,c
 18223  004972  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18224  004974  22DA               	addwfc	fsr2h,f,c
 18225  004976  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18226  004978  5CDE               	subwf	postinc2,w,c
 18227  00497A  B0D8               	btfsc	status,0,c
 18228  00497C  D008               	goto	l1924
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18232  00497E  EE20 F001          	lfsr	2,1
 18233  004982  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18234  004984  26D9               	addwf	fsr2l,f,c
 18235  004986  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18236  004988  22DA               	addwfc	fsr2h,f,c
 18237  00498A  50DF               	movf	indf2,w,c
 18238  00498C  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18239  00498E                     l1924:
 18240                           
 18241                           ; BSR set to: 0
 18242                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18243                           
 18244                           ; BSR set to: 0
 18245  00498E  0E00               	movlw	0
 18246  004990  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18247  004992  D013               	goto	l1925
 18248  004994                     
 18249                           ; BSR set to: 0
 18250                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18251                           
 18252                           ; BSR set to: 0
 18253  004994  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18254  004996  0D01               	mullw	1
 18255  004998  0E00               	movlw	low _cdc_data_rx
 18256  00499A  24F3               	addwf	prodl,w,c
 18257  00499C  6ED9               	movwf	fsr2l,c
 18258  00499E  0E05               	movlw	high _cdc_data_rx
 18259  0049A0  20F4               	addwfc	prodh,w,c
 18260  0049A2  6EDA               	movwf	fsr2h,c
 18261  0049A4  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18262  0049A6  0D01               	mullw	1
 18263  0049A8  50F3               	movf	prodl,w,c
 18264  0049AA  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18265  0049AC  6EE1               	movwf	fsr1l,c
 18266  0049AE  50F4               	movf	prodh,w,c
 18267  0049B0  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18268  0049B2  6EE2               	movwf	fsr1h,c
 18269  0049B4  CFDF FFE7          	movff	indf2,indf1
 18270                           
 18271                           ; BSR set to: 0
 18272  0049B8  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18273  0049BA                     l1925:
 18274                           
 18275                           ; BSR set to: 0
 18276                           
 18277                           ; BSR set to: 0
 18278  0049BA  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18279  0049BC  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18280  0049BE  A0D8               	btfss	status,0,c
 18281  0049C0  D7E9               	goto	l1926
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18285                           
 18286                           ; BSR set to: 0
 18287  0049C2  0E00               	movlw	0
 18288  0049C4  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18289  0049C6  0E00               	movlw	low _cdc_data_rx
 18290  0049C8  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18291  0049CA  0E05               	movlw	high _cdc_data_rx
 18292  0049CC  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18293  0049CE  0E40               	movlw	64
 18294  0049D0  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18295  0049D2  0E02               	movlw	2
 18296  0049D4  ECBE  F020         	call	_USBTransferOnePacket
 18297  0049D8  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18298  0049DC  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18299  0049E0                     l1921:
 18300                           
 18301                           ;usb_device_cdc.c: 513: }
 18302                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18303  0049E0  0100               	movlb	0	; () banked
 18304  0049E2  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18305  0049E4  0012               	return	
 18306  0049E6                     __end_of_getsUSBUSART:
 18307                           	opt stack 0
 18308                           tosu	equ	0xFFF
 18309                           tosh	equ	0xFFE
 18310                           tosl	equ	0xFFD
 18311                           pclath	equ	0xFFA
 18312                           tblptru	equ	0xFF8
 18313                           tblptrh	equ	0xFF7
 18314                           tblptrl	equ	0xFF6
 18315                           tablat	equ	0xFF5
 18316                           prodh	equ	0xFF4
 18317                           prodl	equ	0xFF3
 18318                           intcon	equ	0xFF2
 18319                           intcon2	equ	0xFF1
 18320                           intcon3	equ	0xFF0
 18321                           indf0	equ	0xFEF
 18322                           postinc0	equ	0xFEE
 18323                           plusw0	equ	0xFEB
 18324                           fsr0h	equ	0xFEA
 18325                           fsr0l	equ	0xFE9
 18326                           wreg	equ	0xFE8
 18327                           indf1	equ	0xFE7
 18328                           postinc1	equ	0xFE6
 18329                           postdec1	equ	0xFE5
 18330                           fsr1h	equ	0xFE2
 18331                           fsr1l	equ	0xFE1
 18332                           indf2	equ	0xFDF
 18333                           postinc2	equ	0xFDE
 18334                           postdec2	equ	0xFDD
 18335                           plusw2	equ	0xFDB
 18336                           fsr2h	equ	0xFDA
 18337                           fsr2l	equ	0xFD9
 18338                           status	equ	0xFD8
 18339                           
 18340 ;; *************** function _USBTransferOnePacket *****************
 18341 ;; Defined at:
 18342 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18343 ;; Parameters:    Size  Location     Type
 18344 ;;  ep              1    wreg     unsigned char 
 18345 ;;  dir             1   29[BANK0 ] unsigned char 
 18346 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18347 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18348 ;;  len             1   32[BANK0 ] unsigned char 
 18349 ;; Auto vars:     Size  Location     Type
 18350 ;;  ep              1   33[BANK0 ] unsigned char 
 18351 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18352 ;;		 -> NULL(0), BDT(48), 
 18353 ;; Return value:  Size  Location     Type
 18354 ;;                  2   29[BANK0 ] PTR void 
 18355 ;; Registers used:
 18356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18357 ;; Tracked objects:
 18358 ;;		On entry : 0/0
 18359 ;;		On exit  : 0/0
 18360 ;;		Unchanged: 0/0
 18361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18365 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18366 ;;Total ram usage:        7 bytes
 18367 ;; Hardware stack levels used:    1
 18368 ;; Hardware stack levels required when called:   11
 18369 ;; This function calls:
 18370 ;;		Nothing
 18371 ;; This function is called by:
 18372 ;;		_CDCInitEP
 18373 ;;		_getsUSBUSART
 18374 ;;		_CDCTxService
 18375 ;;		_USBCDCEventHandler
 18376 ;; This function uses a non-reentrant model
 18377 ;;
 18378                           
 18379                           	psect	text75
 18380  00417C                     __ptext75:
 18381                           	opt stack 0
 18382  00417C                     _USBTransferOnePacket:
 18383                           	opt stack 13
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;incstack = 0
 18387                           ;USBTransferOnePacket@ep stored from wreg
 18388  00417C  0100               	movlb	0	; () banked
 18389  00417E  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18390                           
 18391                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18392                           ;usb_device.c: 1018: if(dir != 0)
 18393  004180  0100               	movlb	0	; () banked
 18394  004182  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18395  004184  B4D8               	btfsc	status,2,c
 18396  004186  D007               	goto	l1645
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;usb_device.c: 1019: {
 18400                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18401  004188  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18402  00418A  0D02               	mullw	2
 18403  00418C  0EB6               	movlw	low _pBDTEntryIn
 18404  00418E  24F3               	addwf	prodl,w,c
 18405  004190  6ED9               	movwf	fsr2l,c
 18406  004192  0E00               	movlw	high _pBDTEntryIn
 18407  004194  D006               	goto	L16
 18408  004196                     l1645:
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;usb_device.c: 1023: else
 18412                           ;usb_device.c: 1024: {
 18413                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18414                           
 18415                           ; BSR set to: 0
 18416  004196  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18417  004198  0D02               	mullw	2
 18418  00419A  0E0E               	movlw	low _pBDTEntryOut
 18419  00419C  24F3               	addwf	prodl,w,c
 18420  00419E  6ED9               	movwf	fsr2l,c
 18421  0041A0  0E03               	movlw	high _pBDTEntryOut
 18422  0041A2                     L16:
 18423  0041A2  20F4               	addwfc	prodh,w,c
 18424  0041A4  6EDA               	movwf	fsr2h,c
 18425  0041A6  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18426  0041AA  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;usb_device.c: 1027: }
 18430                           ;usb_device.c: 1031: if(handle == 0)
 18431                           
 18432                           ; BSR set to: 0
 18433  0041AE  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18434  0041B0  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18435  0041B2  A4D8               	btfss	status,2,c
 18436  0041B4  D005               	goto	l1647
 18437                           
 18438                           ; BSR set to: 0
 18439                           ;usb_device.c: 1032: {
 18440                           ;usb_device.c: 1033: return 0;
 18441  0041B6  0E00               	movlw	0
 18442  0041B8  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18443  0041BA  0E00               	movlw	0
 18444  0041BC  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18445                           
 18446                           ; BSR set to: 0
 18447  0041BE  0012               	return	
 18448  0041C0                     l1647:
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;usb_device.c: 1034: }
 18452                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18453                           
 18454                           ; BSR set to: 0
 18455  0041C0  EE20 F002          	lfsr	2,2
 18456  0041C4  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18457  0041C6  26D9               	addwf	fsr2l,f,c
 18458  0041C8  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18459  0041CA  22DA               	addwfc	fsr2h,f,c
 18460  0041CC  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18461  0041D0  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18462                           
 18463                           ;usb_device.c: 1048: handle->CNT = len;
 18464  0041D4  EE20 F001          	lfsr	2,1
 18465  0041D8  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18466  0041DA  26D9               	addwf	fsr2l,f,c
 18467  0041DC  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18468  0041DE  22DA               	addwfc	fsr2h,f,c
 18469  0041E0  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18473  0041E4  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18474  0041E8  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18475  0041EC  0E40               	movlw	64
 18476  0041EE  16DF               	andwf	indf2,f,c
 18477                           
 18478                           ; BSR set to: 0
 18479                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18480  0041F0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18481  0041F4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18482  0041F8  0E00               	movlw	0
 18483  0041FA  86DB               	bsf	plusw2,3,c
 18484                           
 18485                           ; BSR set to: 0
 18486                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18487  0041FC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18488  004200  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18489  004204  0E00               	movlw	0
 18490  004206  8EDB               	bsf	plusw2,7,c
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 1054: if(dir != 0)
 18494  004208  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18495  00420A  B4D8               	btfsc	status,2,c
 18496  00420C  D007               	goto	l1649
 18497                           
 18498                           ; BSR set to: 0
 18499                           ;usb_device.c: 1055: {
 18500                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18501  00420E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18502  004210  0D02               	mullw	2
 18503  004212  0EB6               	movlw	low _pBDTEntryIn
 18504  004214  24F3               	addwf	prodl,w,c
 18505  004216  6ED9               	movwf	fsr2l,c
 18506  004218  0E00               	movlw	high _pBDTEntryIn
 18507  00421A  D006               	goto	L17
 18508  00421C                     l1649:
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;usb_device.c: 1059: else
 18512                           ;usb_device.c: 1060: {
 18513                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18514                           
 18515                           ; BSR set to: 0
 18516  00421C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18517  00421E  0D02               	mullw	2
 18518  004220  0E0E               	movlw	low _pBDTEntryOut
 18519  004222  24F3               	addwf	prodl,w,c
 18520  004224  6ED9               	movwf	fsr2l,c
 18521  004226  0E03               	movlw	high _pBDTEntryOut
 18522  004228                     L17:
 18523  004228  20F4               	addwfc	prodh,w,c
 18524  00422A  6EDA               	movwf	fsr2h,c
 18525  00422C  0E04               	movlw	4
 18526  00422E  1ADF               	xorwf	indf2,f,c
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;usb_device.c: 1063: }
 18530                           ;usb_device.c: 1064: return (void*)handle;
 18531                           
 18532                           ; BSR set to: 0
 18533  004230  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18534  004234  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18535  004238  0012               	return	
 18536  00423A                     __end_of_USBTransferOnePacket:
 18537                           	opt stack 0
 18538                           tosu	equ	0xFFF
 18539                           tosh	equ	0xFFE
 18540                           tosl	equ	0xFFD
 18541                           pclath	equ	0xFFA
 18542                           tblptru	equ	0xFF8
 18543                           tblptrh	equ	0xFF7
 18544                           tblptrl	equ	0xFF6
 18545                           tablat	equ	0xFF5
 18546                           prodh	equ	0xFF4
 18547                           prodl	equ	0xFF3
 18548                           intcon	equ	0xFF2
 18549                           intcon2	equ	0xFF1
 18550                           intcon3	equ	0xFF0
 18551                           indf0	equ	0xFEF
 18552                           postinc0	equ	0xFEE
 18553                           plusw0	equ	0xFEB
 18554                           fsr0h	equ	0xFEA
 18555                           fsr0l	equ	0xFE9
 18556                           wreg	equ	0xFE8
 18557                           indf1	equ	0xFE7
 18558                           postinc1	equ	0xFE6
 18559                           postdec1	equ	0xFE5
 18560                           fsr1h	equ	0xFE2
 18561                           fsr1l	equ	0xFE1
 18562                           indf2	equ	0xFDF
 18563                           postinc2	equ	0xFDE
 18564                           postdec2	equ	0xFDD
 18565                           plusw2	equ	0xFDB
 18566                           fsr2h	equ	0xFDA
 18567                           fsr2l	equ	0xFD9
 18568                           status	equ	0xFD8
 18569                           
 18570 ;; *************** function _atoi *****************
 18571 ;; Defined at:
 18572 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18575 ;;		 -> Terminal@Len(4), 
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;  a               2   40[BANK0 ] int 
 18578 ;;  sign            1   39[BANK0 ] unsigned char 
 18579 ;; Return value:  Size  Location     Type
 18580 ;;                  2   35[BANK0 ] int 
 18581 ;; Registers used:
 18582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18583 ;; Tracked objects:
 18584 ;;		On entry : 0/0
 18585 ;;		On exit  : 0/0
 18586 ;;		Unchanged: 0/0
 18587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18591 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18592 ;;Total ram usage:        7 bytes
 18593 ;; Hardware stack levels used:    1
 18594 ;; Hardware stack levels required when called:   12
 18595 ;; This function calls:
 18596 ;;		___wmul
 18597 ;;		_isdigit
 18598 ;; This function is called by:
 18599 ;;		_Terminal
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text76
 18604  0038C4                     __ptext76:
 18605                           	opt stack 0
 18606  0038C4                     _atoi:
 18607                           	opt stack 13
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;incstack = 0
 18611  0038C4  D003               	goto	l2977
 18612  0038C6  0100               	movlb	0	; () banked
 18613  0038C8  4B83               	infsnz	atoi@s& (0+255),f,b
 18614  0038CA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18615  0038CC                     l2977:
 18616                           
 18617                           ; BSR set to: 0
 18618  0038CC  C083  FFD9         	movff	atoi@s,fsr2l
 18619  0038D0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18620  0038D4  0E20               	movlw	32
 18621  0038D6  18DE               	xorwf	postinc2,w,c
 18622  0038D8  B4D8               	btfsc	status,2,c
 18623  0038DA  D7F5               	goto	l2978
 18624  0038DC  C083  FFD9         	movff	atoi@s,fsr2l
 18625  0038E0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18626  0038E4  0E09               	movlw	9
 18627  0038E6  18DE               	xorwf	postinc2,w,c
 18628  0038E8  B4D8               	btfsc	status,2,c
 18629  0038EA  D7ED               	goto	l2978
 18630  0038EC  0E00               	movlw	0
 18631  0038EE  0100               	movlb	0	; () banked
 18632  0038F0  6F89               	movwf	(atoi@a+1)& (0+255),b
 18633  0038F2  0E00               	movlw	0
 18634  0038F4  6F88               	movwf	atoi@a& (0+255),b
 18635  0038F6  0E00               	movlw	0
 18636  0038F8  6F87               	movwf	atoi@sign& (0+255),b
 18637                           
 18638                           ; BSR set to: 0
 18639  0038FA  C083  FFD9         	movff	atoi@s,fsr2l
 18640  0038FE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18641  003902  0E2D               	movlw	45
 18642  003904  18DE               	xorwf	postinc2,w,c
 18643  003906  A4D8               	btfss	status,2,c
 18644  003908  D002               	goto	l2980
 18645                           
 18646                           ; BSR set to: 0
 18647  00390A  2B87               	incf	atoi@sign& (0+255),f,b
 18648  00390C  D026               	goto	l13550
 18649  00390E                     l2980:
 18650                           
 18651                           ; BSR set to: 0
 18652                           
 18653                           ; BSR set to: 0
 18654  00390E  C083  FFD9         	movff	atoi@s,fsr2l
 18655  003912  C084  FFDA         	movff	atoi@s+1,fsr2h
 18656  003916  0E2B               	movlw	43
 18657  003918  18DE               	xorwf	postinc2,w,c
 18658  00391A  A4D8               	btfss	status,2,c
 18659  00391C  D020               	goto	l2983
 18660  00391E  D01D               	goto	l13550
 18661  003920                     
 18662                           ; BSR set to: 0
 18663  003920  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18664  003924  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18665  003928  0E00               	movlw	0
 18666  00392A  0100               	movlb	0	; () banked
 18667  00392C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18668  00392E  0E0A               	movlw	10
 18669  003930  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18670  003932  EC67  F031         	call	___wmul	;wreg free
 18671  003936  C083  FFD9         	movff	atoi@s,fsr2l
 18672  00393A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18673  00393E  50DF               	movf	indf2,w,c
 18674  003940  0100               	movlb	0	; () banked
 18675  003942  6F85               	movwf	??_atoi& (0+255),b
 18676  003944  6B86               	clrf	(??_atoi+1)& (0+255),b
 18677  003946  517D               	movf	?___wmul& (0+255),w,b
 18678  003948  2785               	addwf	??_atoi& (0+255),f,b
 18679  00394A  517E               	movf	(?___wmul+1)& (0+255),w,b
 18680  00394C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18681  00394E  0ED0               	movlw	208
 18682  003950  2585               	addwf	??_atoi& (0+255),w,b
 18683  003952  6F88               	movwf	atoi@a& (0+255),b
 18684  003954  0EFF               	movlw	255
 18685  003956  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18686  003958  6F89               	movwf	(atoi@a+1)& (0+255),b
 18687  00395A                     l13550:
 18688                           
 18689                           ; BSR set to: 0
 18690  00395A  4B83               	infsnz	atoi@s& (0+255),f,b
 18691  00395C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18692  00395E                     l2983:
 18693                           
 18694                           ; BSR set to: 0
 18695                           
 18696                           ; BSR set to: 0
 18697  00395E  C083  FFD9         	movff	atoi@s,fsr2l
 18698  003962  C084  FFDA         	movff	atoi@s+1,fsr2h
 18699  003966  50DF               	movf	indf2,w,c
 18700  003968  EC2D  F032         	call	_isdigit
 18701  00396C  B0D8               	btfsc	status,0,c
 18702  00396E  D7D8               	goto	l2984
 18703  003970  0100               	movlb	0	; () banked
 18704  003972  5187               	movf	atoi@sign& (0+255),w,b
 18705  003974  B4D8               	btfsc	status,2,c
 18706  003976  D00D               	goto	l2986
 18707                           
 18708                           ; BSR set to: 0
 18709  003978  C088  F085         	movff	atoi@a,??_atoi
 18710  00397C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18711  003980  1F85               	comf	??_atoi& (0+255),f,b
 18712  003982  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18713  003984  4B85               	infsnz	??_atoi& (0+255),f,b
 18714  003986  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18715  003988  C085  F083         	movff	??_atoi,?_atoi
 18716  00398C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18717  003990  0012               	return	
 18718  003992                     l2986:
 18719                           
 18720                           ; BSR set to: 0
 18721  003992  C088  F083         	movff	atoi@a,?_atoi
 18722  003996  C089  F084         	movff	atoi@a+1,?_atoi+1
 18723                           
 18724                           ; BSR set to: 0
 18725  00399A  0012               	return		;funcret
 18726  00399C                     __end_of_atoi:
 18727                           	opt stack 0
 18728                           tosu	equ	0xFFF
 18729                           tosh	equ	0xFFE
 18730                           tosl	equ	0xFFD
 18731                           pclath	equ	0xFFA
 18732                           tblptru	equ	0xFF8
 18733                           tblptrh	equ	0xFF7
 18734                           tblptrl	equ	0xFF6
 18735                           tablat	equ	0xFF5
 18736                           prodh	equ	0xFF4
 18737                           prodl	equ	0xFF3
 18738                           intcon	equ	0xFF2
 18739                           intcon2	equ	0xFF1
 18740                           intcon3	equ	0xFF0
 18741                           indf0	equ	0xFEF
 18742                           postinc0	equ	0xFEE
 18743                           plusw0	equ	0xFEB
 18744                           fsr0h	equ	0xFEA
 18745                           fsr0l	equ	0xFE9
 18746                           wreg	equ	0xFE8
 18747                           indf1	equ	0xFE7
 18748                           postinc1	equ	0xFE6
 18749                           postdec1	equ	0xFE5
 18750                           fsr1h	equ	0xFE2
 18751                           fsr1l	equ	0xFE1
 18752                           indf2	equ	0xFDF
 18753                           postinc2	equ	0xFDE
 18754                           postdec2	equ	0xFDD
 18755                           plusw2	equ	0xFDB
 18756                           fsr2h	equ	0xFDA
 18757                           fsr2l	equ	0xFD9
 18758                           status	equ	0xFD8
 18759                           
 18760 ;; *************** function _isdigit *****************
 18761 ;; Defined at:
 18762 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18763 ;; Parameters:    Size  Location     Type
 18764 ;;  c               1    wreg     unsigned char 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  c               1   31[BANK0 ] unsigned char 
 18767 ;; Return value:  Size  Location     Type
 18768 ;;		None               void
 18769 ;; Registers used:
 18770 ;;		wreg, status,2, status,0
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18779 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18780 ;;Total ram usage:        3 bytes
 18781 ;; Hardware stack levels used:    1
 18782 ;; Hardware stack levels required when called:   11
 18783 ;; This function calls:
 18784 ;;		Nothing
 18785 ;; This function is called by:
 18786 ;;		_atoi
 18787 ;;		_strtol
 18788 ;;		_xtoi
 18789 ;;		_isxdigit
 18790 ;; This function uses a non-reentrant model
 18791 ;;
 18792                           
 18793                           	psect	text77
 18794  00645A                     __ptext77:
 18795                           	opt stack 0
 18796  00645A                     _isdigit:
 18797                           	opt stack 12
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;incstack = 0
 18801                           ;isdigit@c stored from wreg
 18802  00645A  0100               	movlb	0	; () banked
 18803  00645C  6F7F               	movwf	isdigit@c& (0+255),b
 18804  00645E  0E00               	movlw	0
 18805  006460  0100               	movlb	0	; () banked
 18806  006462  6F7E               	movwf	_isdigit$6346& (0+255),b
 18807                           
 18808                           ; BSR set to: 0
 18809  006464  0E3A               	movlw	58
 18810  006466  617F               	cpfslt	isdigit@c& (0+255),b
 18811  006468  D005               	goto	l3158
 18812                           
 18813                           ; BSR set to: 0
 18814  00646A  0E2F               	movlw	47
 18815  00646C  657F               	cpfsgt	isdigit@c& (0+255),b
 18816  00646E  D002               	goto	l3158
 18817                           
 18818                           ; BSR set to: 0
 18819  006470  0E01               	movlw	1
 18820  006472  6F7E               	movwf	_isdigit$6346& (0+255),b
 18821  006474                     l3158:
 18822                           
 18823                           ; BSR set to: 0
 18824                           
 18825                           ; BSR set to: 0
 18826  006474  C07E  F07D         	movff	_isdigit$6346,??_isdigit
 18827  006478  317D               	rrcf	??_isdigit& (0+255),w,b
 18828  00647A  0012               	return	
 18829  00647C                     __end_of_isdigit:
 18830                           	opt stack 0
 18831                           tosu	equ	0xFFF
 18832                           tosh	equ	0xFFE
 18833                           tosl	equ	0xFFD
 18834                           pclath	equ	0xFFA
 18835                           tblptru	equ	0xFF8
 18836                           tblptrh	equ	0xFF7
 18837                           tblptrl	equ	0xFF6
 18838                           tablat	equ	0xFF5
 18839                           prodh	equ	0xFF4
 18840                           prodl	equ	0xFF3
 18841                           intcon	equ	0xFF2
 18842                           intcon2	equ	0xFF1
 18843                           intcon3	equ	0xFF0
 18844                           indf0	equ	0xFEF
 18845                           postinc0	equ	0xFEE
 18846                           plusw0	equ	0xFEB
 18847                           fsr0h	equ	0xFEA
 18848                           fsr0l	equ	0xFE9
 18849                           wreg	equ	0xFE8
 18850                           indf1	equ	0xFE7
 18851                           postinc1	equ	0xFE6
 18852                           postdec1	equ	0xFE5
 18853                           fsr1h	equ	0xFE2
 18854                           fsr1l	equ	0xFE1
 18855                           indf2	equ	0xFDF
 18856                           postinc2	equ	0xFDE
 18857                           postdec2	equ	0xFDD
 18858                           plusw2	equ	0xFDB
 18859                           fsr2h	equ	0xFDA
 18860                           fsr2l	equ	0xFD9
 18861                           status	equ	0xFD8
 18862                           
 18863 ;; *************** function _Rtcm_SetRtccDate *****************
 18864 ;; Defined at:
 18865 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18866 ;; Parameters:    Size  Location     Type
 18867 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18868 ;; Auto vars:     Size  Location     Type
 18869 ;;		None
 18870 ;; Return value:  Size  Location     Type
 18871 ;;                  1    wreg      void 
 18872 ;; Registers used:
 18873 ;;		wreg, status,2, status,0, cstack
 18874 ;; Tracked objects:
 18875 ;;		On entry : 0/0
 18876 ;;		On exit  : 0/0
 18877 ;;		Unchanged: 0/0
 18878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18879 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18883 ;;Total ram usage:        8 bytes
 18884 ;; Hardware stack levels used:    1
 18885 ;; Hardware stack levels required when called:   13
 18886 ;; This function calls:
 18887 ;;		_Rtcc_LockRtc
 18888 ;;		_Rtcc_SetRtccValue
 18889 ;;		_Rtcc_UnlockRtc
 18890 ;; This function is called by:
 18891 ;;		_Rtcm_MainTask
 18892 ;; This function uses a non-reentrant model
 18893 ;;
 18894                           
 18895                           	psect	text78
 18896  005770                     __ptext78:
 18897                           	opt stack 0
 18898  005770                     _Rtcm_SetRtccDate:
 18899                           	opt stack 14
 18900                           
 18901                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;incstack = 0
 18905  005770  EC62  F033         	call	_Rtcc_UnlockRtc	;wreg free
 18906                           
 18907                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18908  005774  0100               	movlb	0	; () banked
 18909  005776  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18910  005778  0F30               	addlw	48
 18911  00577A  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18912  00577C  0E00               	movlw	0
 18913  00577E  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18914                           
 18915                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18916  005782  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18917  005786  0E01               	movlw	1
 18918  005788  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18919                           
 18920                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18921  00578C  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18922  005790  0E02               	movlw	2
 18923  005792  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18924                           
 18925                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18926  005796  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18927  00579A  0E03               	movlw	3
 18928  00579C  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18929                           
 18930                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18931  0057A0  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18932  0057A4  0E04               	movlw	4
 18933  0057A6  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18934                           
 18935                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18936  0057AA  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18937  0057AE  0E05               	movlw	5
 18938  0057B0  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18939                           
 18940                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18941  0057B4  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18942  0057B8  0E06               	movlw	6
 18943  0057BA  EC1D  F00C         	call	_Rtcc_SetRtccValue
 18944                           
 18945                           ;rtcm.c: 191: Rtcc_LockRtc();
 18946  0057BE  EC6A  F033         	call	_Rtcc_LockRtc	;wreg free
 18947  0057C2  0012               	return		;funcret
 18948  0057C4                     __end_of_Rtcm_SetRtccDate:
 18949                           	opt stack 0
 18950                           tosu	equ	0xFFF
 18951                           tosh	equ	0xFFE
 18952                           tosl	equ	0xFFD
 18953                           pclath	equ	0xFFA
 18954                           tblptru	equ	0xFF8
 18955                           tblptrh	equ	0xFF7
 18956                           tblptrl	equ	0xFF6
 18957                           tablat	equ	0xFF5
 18958                           prodh	equ	0xFF4
 18959                           prodl	equ	0xFF3
 18960                           intcon	equ	0xFF2
 18961                           intcon2	equ	0xFF1
 18962                           intcon3	equ	0xFF0
 18963                           indf0	equ	0xFEF
 18964                           postinc0	equ	0xFEE
 18965                           plusw0	equ	0xFEB
 18966                           fsr0h	equ	0xFEA
 18967                           fsr0l	equ	0xFE9
 18968                           wreg	equ	0xFE8
 18969                           indf1	equ	0xFE7
 18970                           postinc1	equ	0xFE6
 18971                           postdec1	equ	0xFE5
 18972                           fsr1h	equ	0xFE2
 18973                           fsr1l	equ	0xFE1
 18974                           indf2	equ	0xFDF
 18975                           postinc2	equ	0xFDE
 18976                           postdec2	equ	0xFDD
 18977                           plusw2	equ	0xFDB
 18978                           fsr2h	equ	0xFDA
 18979                           fsr2l	equ	0xFD9
 18980                           status	equ	0xFD8
 18981                           
 18982 ;; *************** function _Rtcc_UnlockRtc *****************
 18983 ;; Defined at:
 18984 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;		None
 18987 ;; Auto vars:     Size  Location     Type
 18988 ;;		None
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      void 
 18991 ;; Registers used:
 18992 ;;		None
 18993 ;; Tracked objects:
 18994 ;;		On entry : 0/0
 18995 ;;		On exit  : 0/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;Total ram usage:        0 bytes
 19003 ;; Hardware stack levels used:    1
 19004 ;; Hardware stack levels required when called:   11
 19005 ;; This function calls:
 19006 ;;		Nothing
 19007 ;; This function is called by:
 19008 ;;		_Rtcm_MainTask
 19009 ;;		_Rtcm_SetRtccDate
 19010 ;;		_Rtcm_SetRtccAlarm
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           
 19014                           	psect	text79
 19015  0066C4                     __ptext79:
 19016                           	opt stack 0
 19017  0066C4                     _Rtcc_UnlockRtc:
 19018                           	opt stack 15
 19019                           
 19020                           ;incstack = 0
 19021  0066C4  010F               	movlb	15	;# 
 19022  0066C6  0E55               	movlw	85	;# 
 19023  0066C8  6EA7               	movwf	4007,c	;# 
 19024  0066CA  0EAA               	movlw	170	;# 
 19025  0066CC  6EA7               	movwf	4007,c	;# 
 19026                           
 19027                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19028  0066CE  010F               	movlb	15	; () banked
 19029  0066D0  8B3F               	bsf	63,5,b	;volatile
 19030                           
 19031                           ; BSR set to: 15
 19032  0066D2  0012               	return		;funcret
 19033  0066D4                     __end_of_Rtcc_UnlockRtc:
 19034                           	opt stack 0
 19035                           tosu	equ	0xFFF
 19036                           tosh	equ	0xFFE
 19037                           tosl	equ	0xFFD
 19038                           pclath	equ	0xFFA
 19039                           tblptru	equ	0xFF8
 19040                           tblptrh	equ	0xFF7
 19041                           tblptrl	equ	0xFF6
 19042                           tablat	equ	0xFF5
 19043                           prodh	equ	0xFF4
 19044                           prodl	equ	0xFF3
 19045                           intcon	equ	0xFF2
 19046                           intcon2	equ	0xFF1
 19047                           intcon3	equ	0xFF0
 19048                           indf0	equ	0xFEF
 19049                           postinc0	equ	0xFEE
 19050                           plusw0	equ	0xFEB
 19051                           fsr0h	equ	0xFEA
 19052                           fsr0l	equ	0xFE9
 19053                           wreg	equ	0xFE8
 19054                           indf1	equ	0xFE7
 19055                           postinc1	equ	0xFE6
 19056                           postdec1	equ	0xFE5
 19057                           fsr1h	equ	0xFE2
 19058                           fsr1l	equ	0xFE1
 19059                           indf2	equ	0xFDF
 19060                           postinc2	equ	0xFDE
 19061                           postdec2	equ	0xFDD
 19062                           plusw2	equ	0xFDB
 19063                           fsr2h	equ	0xFDA
 19064                           fsr2l	equ	0xFD9
 19065                           status	equ	0xFD8
 19066                           
 19067 ;; *************** function _Rtcc_SetRtccValue *****************
 19068 ;; Defined at:
 19069 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19070 ;; Parameters:    Size  Location     Type
 19071 ;;  RtccPtrVal      1    wreg     enum E7757
 19072 ;;  Value           1   37[BANK0 ] unsigned char 
 19073 ;; Auto vars:     Size  Location     Type
 19074 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19075 ;; Return value:  Size  Location     Type
 19076 ;;                  1    wreg      void 
 19077 ;; Registers used:
 19078 ;;		wreg, status,2, status,0, cstack
 19079 ;; Tracked objects:
 19080 ;;		On entry : 0/0
 19081 ;;		On exit  : 0/0
 19082 ;;		Unchanged: 0/0
 19083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19084 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19088 ;;Total ram usage:        4 bytes
 19089 ;; Hardware stack levels used:    1
 19090 ;; Hardware stack levels required when called:   12
 19091 ;; This function calls:
 19092 ;;		___awdiv
 19093 ;;		___awmod
 19094 ;; This function is called by:
 19095 ;;		_Rtcm_SetRtccDate
 19096 ;; This function uses a non-reentrant model
 19097 ;;
 19098                           
 19099                           	psect	text80
 19100  00183A                     __ptext80:
 19101                           	opt stack 0
 19102  00183A                     _Rtcc_SetRtccValue:
 19103                           	opt stack 14
 19104                           
 19105                           ; BSR set to: 15
 19106                           ;incstack = 0
 19107                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19108  00183A  0100               	movlb	0	; () banked
 19109  00183C  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19110                           
 19111                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19112  00183E  D0FC               	goto	l441
 19113  001840                     l442:
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19117  001840  010F               	movlb	15	; () banked
 19118  001842  833F               	bsf	63,1,b	;volatile
 19119                           
 19120                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19121  001844  813F               	bsf	63,0,b	;volatile
 19122                           
 19123                           ; BSR set to: 15
 19124                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19125  001846  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19126  00184A  0100               	movlb	0	; () banked
 19127  00184C  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19128  00184E  0E00               	movlw	0
 19129  001850  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19130  001852  0E0A               	movlw	10
 19131  001854  6F7F               	movwf	___awmod@divisor& (0+255),b
 19132  001856  EC76  F028         	call	___awmod	;wreg free
 19133  00185A  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19134  00185E  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19135  001862  0E0F               	movlw	15
 19136  001864  0100               	movlb	0	; () banked
 19137  001866  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19138  001868  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19139  00186C  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19140  00186E  0E00               	movlw	0
 19141  001870  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19142  001872  0E0A               	movlw	10
 19143  001874  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19144  001876  EC76  F027         	call	___awdiv	;wreg free
 19145  00187A  0100               	movlb	0	; () banked
 19146  00187C  397D               	swapf	?___awdiv& (0+255),w,b
 19147  00187E  0BF0               	andlw	240
 19148  001880  0BF0               	andlw	240
 19149  001882  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19150  001884  6E98               	movwf	3992,c	;volatile
 19151                           
 19152                           ;rtcc_drv.c: 393: break;
 19153  001886  0012               	return	
 19154  001888                     l444:
 19155                           
 19156                           ; BSR set to: 0
 19157                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19158  001888  010F               	movlb	15	; () banked
 19159  00188A  833F               	bsf	63,1,b	;volatile
 19160                           
 19161                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19162  00188C  913F               	bcf	63,0,b	;volatile
 19163                           
 19164                           ; BSR set to: 15
 19165                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19166  00188E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19167  001892  0100               	movlb	0	; () banked
 19168  001894  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19169  001896  0E00               	movlw	0
 19170  001898  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19171  00189A  0E0A               	movlw	10
 19172  00189C  6F7F               	movwf	___awmod@divisor& (0+255),b
 19173  00189E  EC76  F028         	call	___awmod	;wreg free
 19174  0018A2  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19175  0018A6  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19176  0018AA  0E0F               	movlw	15
 19177  0018AC  0100               	movlb	0	; () banked
 19178  0018AE  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19179  0018B0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19180  0018B4  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19181  0018B6  0E00               	movlw	0
 19182  0018B8  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19183  0018BA  0E0A               	movlw	10
 19184  0018BC  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19185  0018BE  EC76  F027         	call	___awdiv	;wreg free
 19186  0018C2  0100               	movlb	0	; () banked
 19187  0018C4  397D               	swapf	?___awdiv& (0+255),w,b
 19188  0018C6  0BF0               	andlw	240
 19189  0018C8  0BF0               	andlw	240
 19190  0018CA  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19191  0018CC  6E99               	movwf	3993,c	;volatile
 19192                           
 19193                           ;rtcc_drv.c: 401: break;
 19194  0018CE  0012               	return	
 19195  0018D0                     l445:
 19196                           
 19197                           ; BSR set to: 0
 19198                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19199  0018D0  010F               	movlb	15	; () banked
 19200  0018D2  833F               	bsf	63,1,b	;volatile
 19201                           
 19202                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19203  0018D4  913F               	bcf	63,0,b	;volatile
 19204                           
 19205                           ; BSR set to: 15
 19206                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19207  0018D6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19208  0018DA  0100               	movlb	0	; () banked
 19209  0018DC  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19210  0018DE  0E00               	movlw	0
 19211  0018E0  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19212  0018E2  0E0A               	movlw	10
 19213  0018E4  6F7F               	movwf	___awmod@divisor& (0+255),b
 19214  0018E6  EC76  F028         	call	___awmod	;wreg free
 19215  0018EA  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19216  0018EE  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19217  0018F2  0E0F               	movlw	15
 19218  0018F4  0100               	movlb	0	; () banked
 19219  0018F6  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19220  0018F8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19221  0018FC  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19222  0018FE  0E00               	movlw	0
 19223  001900  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19224  001902  0E0A               	movlw	10
 19225  001904  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19226  001906  EC76  F027         	call	___awdiv	;wreg free
 19227  00190A  0100               	movlb	0	; () banked
 19228  00190C  397D               	swapf	?___awdiv& (0+255),w,b
 19229  00190E  0BF0               	andlw	240
 19230  001910  0BF0               	andlw	240
 19231  001912  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19232  001914  6E98               	movwf	3992,c	;volatile
 19233                           
 19234                           ;rtcc_drv.c: 409: break;
 19235  001916  0012               	return	
 19236  001918                     l446:
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19240  001918  010F               	movlb	15	; () banked
 19241  00191A  933F               	bcf	63,1,b	;volatile
 19242                           
 19243                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19244  00191C  813F               	bsf	63,0,b	;volatile
 19245                           
 19246                           ; BSR set to: 15
 19247                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19248  00191E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19249  001922  0100               	movlb	0	; () banked
 19250  001924  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19251  001926  0E00               	movlw	0
 19252  001928  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19253  00192A  0E0A               	movlw	10
 19254  00192C  6F7F               	movwf	___awmod@divisor& (0+255),b
 19255  00192E  EC76  F028         	call	___awmod	;wreg free
 19256  001932  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19257  001936  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19258  00193A  0E0F               	movlw	15
 19259  00193C  0100               	movlb	0	; () banked
 19260  00193E  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19261  001940  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19262  001944  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19263  001946  0E00               	movlw	0
 19264  001948  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19265  00194A  0E0A               	movlw	10
 19266  00194C  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19267  00194E  EC76  F027         	call	___awdiv	;wreg free
 19268  001952  0100               	movlb	0	; () banked
 19269  001954  397D               	swapf	?___awdiv& (0+255),w,b
 19270  001956  0BF0               	andlw	240
 19271  001958  0BF0               	andlw	240
 19272  00195A  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19273  00195C  6E99               	movwf	3993,c	;volatile
 19274                           
 19275                           ;rtcc_drv.c: 417: break;
 19276  00195E  0012               	return	
 19277  001960                     l447:
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19281  001960  010F               	movlb	15	; () banked
 19282  001962  933F               	bcf	63,1,b	;volatile
 19283                           
 19284                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19285  001964  813F               	bsf	63,0,b	;volatile
 19286                           
 19287                           ; BSR set to: 15
 19288                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19289  001966  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19290  00196A  0100               	movlb	0	; () banked
 19291  00196C  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19292  00196E  0E00               	movlw	0
 19293  001970  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19294  001972  0E0A               	movlw	10
 19295  001974  6F7F               	movwf	___awmod@divisor& (0+255),b
 19296  001976  EC76  F028         	call	___awmod	;wreg free
 19297  00197A  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19298  00197E  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19299  001982  0E0F               	movlw	15
 19300  001984  0100               	movlb	0	; () banked
 19301  001986  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19302  001988  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19303  00198C  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19304  00198E  0E00               	movlw	0
 19305  001990  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19306  001992  0E0A               	movlw	10
 19307  001994  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19308  001996  EC76  F027         	call	___awdiv	;wreg free
 19309  00199A  0100               	movlb	0	; () banked
 19310  00199C  397D               	swapf	?___awdiv& (0+255),w,b
 19311  00199E  0BF0               	andlw	240
 19312  0019A0  0BF0               	andlw	240
 19313  0019A2  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19314  0019A4  6E98               	movwf	3992,c	;volatile
 19315                           
 19316                           ;rtcc_drv.c: 425: break;
 19317  0019A6  0012               	return	
 19318  0019A8                     l448:
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19322  0019A8  010F               	movlb	15	; () banked
 19323  0019AA  933F               	bcf	63,1,b	;volatile
 19324                           
 19325                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19326  0019AC  913F               	bcf	63,0,b	;volatile
 19327                           
 19328                           ; BSR set to: 15
 19329                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19330  0019AE  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19331  0019B2  0100               	movlb	0	; () banked
 19332  0019B4  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19333  0019B6  0E00               	movlw	0
 19334  0019B8  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19335  0019BA  0E0A               	movlw	10
 19336  0019BC  6F7F               	movwf	___awmod@divisor& (0+255),b
 19337  0019BE  EC76  F028         	call	___awmod	;wreg free
 19338  0019C2  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19339  0019C6  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19340  0019CA  0E0F               	movlw	15
 19341  0019CC  0100               	movlb	0	; () banked
 19342  0019CE  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19343  0019D0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19344  0019D4  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19345  0019D6  0E00               	movlw	0
 19346  0019D8  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19347  0019DA  0E0A               	movlw	10
 19348  0019DC  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19349  0019DE  EC76  F027         	call	___awdiv	;wreg free
 19350  0019E2  0100               	movlb	0	; () banked
 19351  0019E4  397D               	swapf	?___awdiv& (0+255),w,b
 19352  0019E6  0BF0               	andlw	240
 19353  0019E8  0BF0               	andlw	240
 19354  0019EA  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19355  0019EC  6E99               	movwf	3993,c	;volatile
 19356                           
 19357                           ;rtcc_drv.c: 433: break;
 19358  0019EE  0012               	return	
 19359  0019F0                     l449:
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19363  0019F0  010F               	movlb	15	; () banked
 19364  0019F2  933F               	bcf	63,1,b	;volatile
 19365                           
 19366                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19367  0019F4  913F               	bcf	63,0,b	;volatile
 19368                           
 19369                           ; BSR set to: 15
 19370                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19371  0019F6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19372  0019FA  0100               	movlb	0	; () banked
 19373  0019FC  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19374  0019FE  0E00               	movlw	0
 19375  001A00  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19376  001A02  0E0A               	movlw	10
 19377  001A04  6F7F               	movwf	___awmod@divisor& (0+255),b
 19378  001A06  EC76  F028         	call	___awmod	;wreg free
 19379  001A0A  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19380  001A0E  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19381  001A12  0E0F               	movlw	15
 19382  001A14  0100               	movlb	0	; () banked
 19383  001A16  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19384  001A18  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19385  001A1C  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19386  001A1E  0E00               	movlw	0
 19387  001A20  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19388  001A22  0E0A               	movlw	10
 19389  001A24  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19390  001A26  EC76  F027         	call	___awdiv	;wreg free
 19391  001A2A  0100               	movlb	0	; () banked
 19392  001A2C  397D               	swapf	?___awdiv& (0+255),w,b
 19393  001A2E  0BF0               	andlw	240
 19394  001A30  0BF0               	andlw	240
 19395  001A32  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19396  001A34  6E98               	movwf	3992,c	;volatile
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;rtcc_drv.c: 445: }
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;rtcc_drv.c: 444: break;
 19403                           
 19404                           ;rtcc_drv.c: 443: default:
 19405                           
 19406                           ;rtcc_drv.c: 441: break;
 19407  001A36  0012               	return	
 19408  001A38                     l441:
 19409                           
 19410                           ; BSR set to: 0
 19411  001A38  0100               	movlb	0	; () banked
 19412  001A3A  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19413                           
 19414                           ; Switch size 1, requested type "space"
 19415                           ; Number of cases is 7, Range of values is 0 to 6
 19416                           ; switch strategies available:
 19417                           ; Name         Instructions Cycles
 19418                           ; simple_byte           22    12 (average)
 19419                           ;	Chosen strategy is simple_byte
 19420  001A3C  0A00               	xorlw	0	; case 0
 19421  001A3E  B4D8               	btfsc	status,2,c
 19422  001A40  D6FF               	goto	l442
 19423  001A42  0A01               	xorlw	1	; case 1
 19424  001A44  B4D8               	btfsc	status,2,c
 19425  001A46  D720               	goto	l444
 19426  001A48  0A03               	xorlw	3	; case 2
 19427  001A4A  B4D8               	btfsc	status,2,c
 19428  001A4C  D741               	goto	l445
 19429  001A4E  0A01               	xorlw	1	; case 3
 19430  001A50  B4D8               	btfsc	status,2,c
 19431  001A52  D762               	goto	l446
 19432  001A54  0A07               	xorlw	7	; case 4
 19433  001A56  B4D8               	btfsc	status,2,c
 19434  001A58  D783               	goto	l447
 19435  001A5A  0A01               	xorlw	1	; case 5
 19436  001A5C  B4D8               	btfsc	status,2,c
 19437  001A5E  D7A4               	goto	l448
 19438  001A60  0A03               	xorlw	3	; case 6
 19439  001A62  A4D8               	btfss	status,2,c
 19440  001A64  0012               	return	
 19441  001A66  D7C4               	goto	l449
 19442  001A68                     __end_of_Rtcc_SetRtccValue:
 19443                           	opt stack 0
 19444                           tosu	equ	0xFFF
 19445                           tosh	equ	0xFFE
 19446                           tosl	equ	0xFFD
 19447                           pclath	equ	0xFFA
 19448                           tblptru	equ	0xFF8
 19449                           tblptrh	equ	0xFF7
 19450                           tblptrl	equ	0xFF6
 19451                           tablat	equ	0xFF5
 19452                           prodh	equ	0xFF4
 19453                           prodl	equ	0xFF3
 19454                           intcon	equ	0xFF2
 19455                           intcon2	equ	0xFF1
 19456                           intcon3	equ	0xFF0
 19457                           indf0	equ	0xFEF
 19458                           postinc0	equ	0xFEE
 19459                           plusw0	equ	0xFEB
 19460                           fsr0h	equ	0xFEA
 19461                           fsr0l	equ	0xFE9
 19462                           wreg	equ	0xFE8
 19463                           indf1	equ	0xFE7
 19464                           postinc1	equ	0xFE6
 19465                           postdec1	equ	0xFE5
 19466                           fsr1h	equ	0xFE2
 19467                           fsr1l	equ	0xFE1
 19468                           indf2	equ	0xFDF
 19469                           postinc2	equ	0xFDE
 19470                           postdec2	equ	0xFDD
 19471                           plusw2	equ	0xFDB
 19472                           fsr2h	equ	0xFDA
 19473                           fsr2l	equ	0xFD9
 19474                           status	equ	0xFD8
 19475                           
 19476 ;; *************** function ___awmod *****************
 19477 ;; Defined at:
 19478 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19479 ;; Parameters:    Size  Location     Type
 19480 ;;  dividend        2   29[BANK0 ] int 
 19481 ;;  divisor         2   31[BANK0 ] int 
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  sign            1   34[BANK0 ] unsigned char 
 19484 ;;  counter         1   33[BANK0 ] unsigned char 
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  2   29[BANK0 ] int 
 19487 ;; Registers used:
 19488 ;;		wreg, status,2, status,0
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/0
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;Total ram usage:        6 bytes
 19499 ;; Hardware stack levels used:    1
 19500 ;; Hardware stack levels required when called:   11
 19501 ;; This function calls:
 19502 ;;		Nothing
 19503 ;; This function is called by:
 19504 ;;		_Rtcc_SetRtccValue
 19505 ;;		_Rtcc_SetRtccAlarm
 19506 ;; This function uses a non-reentrant model
 19507 ;;
 19508                           
 19509                           	psect	text81
 19510  0050EC                     __ptext81:
 19511                           	opt stack 0
 19512  0050EC                     ___awmod:
 19513                           	opt stack 14
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;incstack = 0
 19517  0050EC  0E00               	movlw	0
 19518  0050EE  0100               	movlb	0	; () banked
 19519  0050F0  6F82               	movwf	___awmod@sign& (0+255),b
 19520                           
 19521                           ; BSR set to: 0
 19522  0050F2  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19523  0050F4  D006               	goto	l3009
 19524                           
 19525                           ; BSR set to: 0
 19526  0050F6  6D7D               	negf	___awmod@dividend& (0+255),b
 19527  0050F8  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19528  0050FA  B0D8               	btfsc	status,0,c
 19529  0050FC  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19530                           
 19531                           ; BSR set to: 0
 19532  0050FE  0E01               	movlw	1
 19533  005100  6F82               	movwf	___awmod@sign& (0+255),b
 19534  005102                     l3009:
 19535                           
 19536                           ; BSR set to: 0
 19537                           
 19538                           ; BSR set to: 0
 19539  005102  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19540  005104  D004               	goto	l3010
 19541                           
 19542                           ; BSR set to: 0
 19543  005106  6D7F               	negf	___awmod@divisor& (0+255),b
 19544  005108  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19545  00510A  B0D8               	btfsc	status,0,c
 19546  00510C  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19547  00510E                     l3010:
 19548                           
 19549                           ; BSR set to: 0
 19550                           
 19551                           ; BSR set to: 0
 19552  00510E  517F               	movf	___awmod@divisor& (0+255),w,b
 19553  005110  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19554  005112  B4D8               	btfsc	status,2,c
 19555  005114  D018               	goto	l3017
 19556                           
 19557                           ; BSR set to: 0
 19558  005116  0E01               	movlw	1
 19559  005118  6F81               	movwf	___awmod@counter& (0+255),b
 19560  00511A  D004               	goto	l3012
 19561  00511C                     
 19562                           ; BSR set to: 0
 19563                           
 19564                           ; BSR set to: 0
 19565  00511C  90D8               	bcf	status,0,c
 19566  00511E  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19567  005120  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19568  005122  2B81               	incf	___awmod@counter& (0+255),f,b
 19569  005124                     l3012:
 19570                           
 19571                           ; BSR set to: 0
 19572                           
 19573                           ; BSR set to: 0
 19574  005124  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19575  005126  D7FA               	goto	l3013
 19576  005128                     u12870:
 19577                           
 19578                           ; BSR set to: 0
 19579                           
 19580                           ; BSR set to: 0
 19581                           
 19582                           ; BSR set to: 0
 19583  005128  517F               	movf	___awmod@divisor& (0+255),w,b
 19584  00512A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19585  00512C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19586  00512E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19587  005130  A0D8               	btfss	status,0,c
 19588  005132  D004               	goto	l3016
 19589                           
 19590                           ; BSR set to: 0
 19591  005134  517F               	movf	___awmod@divisor& (0+255),w,b
 19592  005136  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19593  005138  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19594  00513A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19595  00513C                     l3016:
 19596                           
 19597                           ; BSR set to: 0
 19598                           
 19599                           ; BSR set to: 0
 19600  00513C  90D8               	bcf	status,0,c
 19601  00513E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19602  005140  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19603                           
 19604                           ; BSR set to: 0
 19605  005142  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19606  005144  D7F1               	goto	u12870
 19607  005146                     l3017:
 19608                           
 19609                           ; BSR set to: 0
 19610                           
 19611                           ; BSR set to: 0
 19612                           
 19613                           ; BSR set to: 0
 19614  005146  5182               	movf	___awmod@sign& (0+255),w,b
 19615  005148  B4D8               	btfsc	status,2,c
 19616  00514A  D004               	goto	l3018
 19617                           
 19618                           ; BSR set to: 0
 19619  00514C  6D7D               	negf	___awmod@dividend& (0+255),b
 19620  00514E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19621  005150  B0D8               	btfsc	status,0,c
 19622  005152  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19623  005154                     l3018:
 19624                           
 19625                           ; BSR set to: 0
 19626                           
 19627                           ; BSR set to: 0
 19628  005154  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19629  005158  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19630  00515C  0012               	return	
 19631  00515E                     __end_of___awmod:
 19632                           	opt stack 0
 19633                           tosu	equ	0xFFF
 19634                           tosh	equ	0xFFE
 19635                           tosl	equ	0xFFD
 19636                           pclath	equ	0xFFA
 19637                           tblptru	equ	0xFF8
 19638                           tblptrh	equ	0xFF7
 19639                           tblptrl	equ	0xFF6
 19640                           tablat	equ	0xFF5
 19641                           prodh	equ	0xFF4
 19642                           prodl	equ	0xFF3
 19643                           intcon	equ	0xFF2
 19644                           intcon2	equ	0xFF1
 19645                           intcon3	equ	0xFF0
 19646                           indf0	equ	0xFEF
 19647                           postinc0	equ	0xFEE
 19648                           plusw0	equ	0xFEB
 19649                           fsr0h	equ	0xFEA
 19650                           fsr0l	equ	0xFE9
 19651                           wreg	equ	0xFE8
 19652                           indf1	equ	0xFE7
 19653                           postinc1	equ	0xFE6
 19654                           postdec1	equ	0xFE5
 19655                           fsr1h	equ	0xFE2
 19656                           fsr1l	equ	0xFE1
 19657                           indf2	equ	0xFDF
 19658                           postinc2	equ	0xFDE
 19659                           postdec2	equ	0xFDD
 19660                           plusw2	equ	0xFDB
 19661                           fsr2h	equ	0xFDA
 19662                           fsr2l	equ	0xFD9
 19663                           status	equ	0xFD8
 19664                           
 19665 ;; *************** function ___awdiv *****************
 19666 ;; Defined at:
 19667 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19668 ;; Parameters:    Size  Location     Type
 19669 ;;  dividend        2   29[BANK0 ] int 
 19670 ;;  divisor         2   31[BANK0 ] int 
 19671 ;; Auto vars:     Size  Location     Type
 19672 ;;  quotient        2   35[BANK0 ] int 
 19673 ;;  sign            1   34[BANK0 ] unsigned char 
 19674 ;;  counter         1   33[BANK0 ] unsigned char 
 19675 ;; Return value:  Size  Location     Type
 19676 ;;                  2   29[BANK0 ] int 
 19677 ;; Registers used:
 19678 ;;		wreg, status,2, status,0
 19679 ;; Tracked objects:
 19680 ;;		On entry : 0/0
 19681 ;;		On exit  : 0/0
 19682 ;;		Unchanged: 0/0
 19683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19685 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19687 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19688 ;;Total ram usage:        8 bytes
 19689 ;; Hardware stack levels used:    1
 19690 ;; Hardware stack levels required when called:   11
 19691 ;; This function calls:
 19692 ;;		Nothing
 19693 ;; This function is called by:
 19694 ;;		_Rtcc_SetRtccValue
 19695 ;;		_Rtcc_SetRtccAlarm
 19696 ;; This function uses a non-reentrant model
 19697 ;;
 19698                           
 19699                           	psect	text82
 19700  004EEC                     __ptext82:
 19701                           	opt stack 0
 19702  004EEC                     ___awdiv:
 19703                           	opt stack 14
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;incstack = 0
 19707  004EEC  0E00               	movlw	0
 19708  004EEE  0100               	movlb	0	; () banked
 19709  004EF0  6F82               	movwf	___awdiv@sign& (0+255),b
 19710                           
 19711                           ; BSR set to: 0
 19712  004EF2  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19713  004EF4  D006               	goto	l2996
 19714                           
 19715                           ; BSR set to: 0
 19716  004EF6  6D7F               	negf	___awdiv@divisor& (0+255),b
 19717  004EF8  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19718  004EFA  B0D8               	btfsc	status,0,c
 19719  004EFC  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19720                           
 19721                           ; BSR set to: 0
 19722  004EFE  0E01               	movlw	1
 19723  004F00  6F82               	movwf	___awdiv@sign& (0+255),b
 19724  004F02                     l2996:
 19725                           
 19726                           ; BSR set to: 0
 19727                           
 19728                           ; BSR set to: 0
 19729  004F02  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19730  004F04  D006               	goto	l2997
 19731                           
 19732                           ; BSR set to: 0
 19733  004F06  6D7D               	negf	___awdiv@dividend& (0+255),b
 19734  004F08  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19735  004F0A  B0D8               	btfsc	status,0,c
 19736  004F0C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19737                           
 19738                           ; BSR set to: 0
 19739  004F0E  0E01               	movlw	1
 19740  004F10  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19741  004F12                     l2997:
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ; BSR set to: 0
 19746  004F12  0E00               	movlw	0
 19747  004F14  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19748  004F16  0E00               	movlw	0
 19749  004F18  6F83               	movwf	___awdiv@quotient& (0+255),b
 19750                           
 19751                           ; BSR set to: 0
 19752  004F1A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19753  004F1C  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19754  004F1E  B4D8               	btfsc	status,2,c
 19755  004F20  D01C               	goto	l3004
 19756                           
 19757                           ; BSR set to: 0
 19758  004F22  0E01               	movlw	1
 19759  004F24  6F81               	movwf	___awdiv@counter& (0+255),b
 19760  004F26  D004               	goto	l2999
 19761  004F28                     
 19762                           ; BSR set to: 0
 19763                           
 19764                           ; BSR set to: 0
 19765  004F28  90D8               	bcf	status,0,c
 19766  004F2A  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19767  004F2C  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19768  004F2E  2B81               	incf	___awdiv@counter& (0+255),f,b
 19769  004F30                     l2999:
 19770                           
 19771                           ; BSR set to: 0
 19772                           
 19773                           ; BSR set to: 0
 19774  004F30  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19775  004F32  D7FA               	goto	l3000
 19776  004F34                     u12810:
 19777                           
 19778                           ; BSR set to: 0
 19779                           
 19780                           ; BSR set to: 0
 19781                           
 19782                           ; BSR set to: 0
 19783  004F34  90D8               	bcf	status,0,c
 19784  004F36  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19785  004F38  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19786                           
 19787                           ; BSR set to: 0
 19788  004F3A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19789  004F3C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19790  004F3E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19791  004F40  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19792  004F42  A0D8               	btfss	status,0,c
 19793  004F44  D005               	goto	l3003
 19794                           
 19795                           ; BSR set to: 0
 19796  004F46  517F               	movf	___awdiv@divisor& (0+255),w,b
 19797  004F48  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19798  004F4A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19799  004F4C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19800                           
 19801                           ; BSR set to: 0
 19802  004F4E  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19803  004F50                     l3003:
 19804                           
 19805                           ; BSR set to: 0
 19806                           
 19807                           ; BSR set to: 0
 19808  004F50  90D8               	bcf	status,0,c
 19809  004F52  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19810  004F54  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19811                           
 19812                           ; BSR set to: 0
 19813  004F56  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19814  004F58  D7ED               	goto	u12810
 19815  004F5A                     l3004:
 19816                           
 19817                           ; BSR set to: 0
 19818                           
 19819                           ; BSR set to: 0
 19820                           
 19821                           ; BSR set to: 0
 19822  004F5A  5182               	movf	___awdiv@sign& (0+255),w,b
 19823  004F5C  B4D8               	btfsc	status,2,c
 19824  004F5E  D004               	goto	l3005
 19825                           
 19826                           ; BSR set to: 0
 19827  004F60  6D83               	negf	___awdiv@quotient& (0+255),b
 19828  004F62  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19829  004F64  B0D8               	btfsc	status,0,c
 19830  004F66  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19831  004F68                     l3005:
 19832                           
 19833                           ; BSR set to: 0
 19834                           
 19835                           ; BSR set to: 0
 19836  004F68  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19837  004F6C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19838  004F70  0012               	return	
 19839  004F72                     __end_of___awdiv:
 19840                           	opt stack 0
 19841                           tosu	equ	0xFFF
 19842                           tosh	equ	0xFFE
 19843                           tosl	equ	0xFFD
 19844                           pclath	equ	0xFFA
 19845                           tblptru	equ	0xFF8
 19846                           tblptrh	equ	0xFF7
 19847                           tblptrl	equ	0xFF6
 19848                           tablat	equ	0xFF5
 19849                           prodh	equ	0xFF4
 19850                           prodl	equ	0xFF3
 19851                           intcon	equ	0xFF2
 19852                           intcon2	equ	0xFF1
 19853                           intcon3	equ	0xFF0
 19854                           indf0	equ	0xFEF
 19855                           postinc0	equ	0xFEE
 19856                           plusw0	equ	0xFEB
 19857                           fsr0h	equ	0xFEA
 19858                           fsr0l	equ	0xFE9
 19859                           wreg	equ	0xFE8
 19860                           indf1	equ	0xFE7
 19861                           postinc1	equ	0xFE6
 19862                           postdec1	equ	0xFE5
 19863                           fsr1h	equ	0xFE2
 19864                           fsr1l	equ	0xFE1
 19865                           indf2	equ	0xFDF
 19866                           postinc2	equ	0xFDE
 19867                           postdec2	equ	0xFDD
 19868                           plusw2	equ	0xFDB
 19869                           fsr2h	equ	0xFDA
 19870                           fsr2l	equ	0xFD9
 19871                           status	equ	0xFD8
 19872                           
 19873 ;; *************** function _Rtcc_LockRtc *****************
 19874 ;; Defined at:
 19875 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;		None
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;		None
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  1    wreg      void 
 19882 ;; Registers used:
 19883 ;;		None
 19884 ;; Tracked objects:
 19885 ;;		On entry : 0/0
 19886 ;;		On exit  : 0/0
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19893 ;;Total ram usage:        0 bytes
 19894 ;; Hardware stack levels used:    1
 19895 ;; Hardware stack levels required when called:   11
 19896 ;; This function calls:
 19897 ;;		Nothing
 19898 ;; This function is called by:
 19899 ;;		_Rtcm_MainTask
 19900 ;;		_Rtcm_SetRtccDate
 19901 ;;		_Rtcm_SetRtccAlarm
 19902 ;; This function uses a non-reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text83
 19906  0066D4                     __ptext83:
 19907                           	opt stack 0
 19908  0066D4                     _Rtcc_LockRtc:
 19909                           	opt stack 15
 19910                           
 19911                           ; BSR set to: 0
 19912                           ;incstack = 0
 19913  0066D4  010F               	movlb	15	;# 
 19914  0066D6  0E55               	movlw	85	;# 
 19915  0066D8  6EA7               	movwf	4007,c	;# 
 19916  0066DA  0EAA               	movlw	170	;# 
 19917  0066DC  6EA7               	movwf	4007,c	;# 
 19918                           
 19919                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19920  0066DE  010F               	movlb	15	; () banked
 19921  0066E0  9B3F               	bcf	63,5,b	;volatile
 19922                           
 19923                           ; BSR set to: 15
 19924  0066E2  0012               	return		;funcret
 19925  0066E4                     __end_of_Rtcc_LockRtc:
 19926                           	opt stack 0
 19927                           tosu	equ	0xFFF
 19928                           tosh	equ	0xFFE
 19929                           tosl	equ	0xFFD
 19930                           pclath	equ	0xFFA
 19931                           tblptru	equ	0xFF8
 19932                           tblptrh	equ	0xFF7
 19933                           tblptrl	equ	0xFF6
 19934                           tablat	equ	0xFF5
 19935                           prodh	equ	0xFF4
 19936                           prodl	equ	0xFF3
 19937                           intcon	equ	0xFF2
 19938                           intcon2	equ	0xFF1
 19939                           intcon3	equ	0xFF0
 19940                           indf0	equ	0xFEF
 19941                           postinc0	equ	0xFEE
 19942                           plusw0	equ	0xFEB
 19943                           fsr0h	equ	0xFEA
 19944                           fsr0l	equ	0xFE9
 19945                           wreg	equ	0xFE8
 19946                           indf1	equ	0xFE7
 19947                           postinc1	equ	0xFE6
 19948                           postdec1	equ	0xFE5
 19949                           fsr1h	equ	0xFE2
 19950                           fsr1l	equ	0xFE1
 19951                           indf2	equ	0xFDF
 19952                           postinc2	equ	0xFDE
 19953                           postdec2	equ	0xFDD
 19954                           plusw2	equ	0xFDB
 19955                           fsr2h	equ	0xFDA
 19956                           fsr2l	equ	0xFD9
 19957                           status	equ	0xFD8
 19958                           
 19959 ;; *************** function _Rtcm_GetRtccDate *****************
 19960 ;; Defined at:
 19961 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19962 ;; Parameters:    Size  Location     Type
 19963 ;;		None
 19964 ;; Auto vars:     Size  Location     Type
 19965 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19966 ;; Return value:  Size  Location     Type
 19967 ;;                  8   33[BANK0 ] struct _RtccDateType
 19968 ;; Registers used:
 19969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19970 ;; Tracked objects:
 19971 ;;		On entry : 0/0
 19972 ;;		On exit  : 0/0
 19973 ;;		Unchanged: 0/0
 19974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19975 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;Total ram usage:       17 bytes
 19980 ;; Hardware stack levels used:    1
 19981 ;; Hardware stack levels required when called:   12
 19982 ;; This function calls:
 19983 ;;		_Rtcc_GetRtccValue
 19984 ;; This function is called by:
 19985 ;;		_Rtcm_MainTask
 19986 ;; This function uses a non-reentrant model
 19987 ;;
 19988                           
 19989                           	psect	text84
 19990  005376                     __ptext84:
 19991                           	opt stack 0
 19992  005376                     _Rtcm_GetRtccDate:
 19993                           	opt stack 15
 19994                           
 19995                           ;rtcm.c: 204: RtccDateType LocalDate;
 19996                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19997                           
 19998                           ; BSR set to: 15
 19999                           ;incstack = 0
 20000  005376  0E00               	movlw	0
 20001  005378  EC3D  F025         	call	_Rtcc_GetRtccValue
 20002  00537C  0100               	movlb	0	; () banked
 20003  00537E  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20004  005380  0ED0               	movlw	208
 20005  005382  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20006  005384  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20007  005386  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20008  005388  0E07               	movlw	7
 20009  00538A  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20010                           
 20011                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20012  00538C  0E01               	movlw	1
 20013  00538E  EC3D  F025         	call	_Rtcc_GetRtccValue
 20014  005392  0100               	movlb	0	; () banked
 20015  005394  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20016                           
 20017                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20018  005396  0E02               	movlw	2
 20019  005398  EC3D  F025         	call	_Rtcc_GetRtccValue
 20020  00539C  0100               	movlb	0	; () banked
 20021  00539E  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20022                           
 20023                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20024  0053A0  0E03               	movlw	3
 20025  0053A2  EC3D  F025         	call	_Rtcc_GetRtccValue
 20026  0053A6  0100               	movlb	0	; () banked
 20027  0053A8  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20028                           
 20029                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20030  0053AA  0E04               	movlw	4
 20031  0053AC  EC3D  F025         	call	_Rtcc_GetRtccValue
 20032  0053B0  0100               	movlb	0	; () banked
 20033  0053B2  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20034                           
 20035                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20036  0053B4  0E05               	movlw	5
 20037  0053B6  EC3D  F025         	call	_Rtcc_GetRtccValue
 20038  0053BA  0100               	movlb	0	; () banked
 20039  0053BC  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20040                           
 20041                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20042  0053BE  0E06               	movlw	6
 20043  0053C0  EC3D  F025         	call	_Rtcc_GetRtccValue
 20044  0053C4  0100               	movlb	0	; () banked
 20045  0053C6  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;rtcm.c: 216: return LocalDate;
 20049  0053C8  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20050  0053CC  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20051  0053D0  0E07               	movlw	7
 20052  0053D2                     u15151:
 20053  0053D2  CFDB FFEB          	movff	plusw2,plusw0
 20054  0053D6  06E8               	decf	wreg,f,c
 20055  0053D8  E2FC               	bc	u15151
 20056  0053DA  0012               	return	
 20057  0053DC                     __end_of_Rtcm_GetRtccDate:
 20058                           	opt stack 0
 20059                           tosu	equ	0xFFF
 20060                           tosh	equ	0xFFE
 20061                           tosl	equ	0xFFD
 20062                           pclath	equ	0xFFA
 20063                           tblptru	equ	0xFF8
 20064                           tblptrh	equ	0xFF7
 20065                           tblptrl	equ	0xFF6
 20066                           tablat	equ	0xFF5
 20067                           prodh	equ	0xFF4
 20068                           prodl	equ	0xFF3
 20069                           intcon	equ	0xFF2
 20070                           intcon2	equ	0xFF1
 20071                           intcon3	equ	0xFF0
 20072                           indf0	equ	0xFEF
 20073                           postinc0	equ	0xFEE
 20074                           plusw0	equ	0xFEB
 20075                           fsr0h	equ	0xFEA
 20076                           fsr0l	equ	0xFE9
 20077                           wreg	equ	0xFE8
 20078                           indf1	equ	0xFE7
 20079                           postinc1	equ	0xFE6
 20080                           postdec1	equ	0xFE5
 20081                           fsr1h	equ	0xFE2
 20082                           fsr1l	equ	0xFE1
 20083                           indf2	equ	0xFDF
 20084                           postinc2	equ	0xFDE
 20085                           postdec2	equ	0xFDD
 20086                           plusw2	equ	0xFDB
 20087                           fsr2h	equ	0xFDA
 20088                           fsr2l	equ	0xFD9
 20089                           status	equ	0xFD8
 20090                           
 20091 ;; *************** function _Rtcc_GetRtccValue *****************
 20092 ;; Defined at:
 20093 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20094 ;; Parameters:    Size  Location     Type
 20095 ;;  RtccPtrVal      1    wreg     enum E7757
 20096 ;; Auto vars:     Size  Location     Type
 20097 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20098 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20099 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      unsigned char 
 20102 ;; Registers used:
 20103 ;;		wreg, status,2, status,0, prodl, prodh
 20104 ;; Tracked objects:
 20105 ;;		On entry : 0/0
 20106 ;;		On exit  : 0/0
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20110 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20113 ;;Total ram usage:        4 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:   11
 20116 ;; This function calls:
 20117 ;;		Nothing
 20118 ;; This function is called by:
 20119 ;;		_Rtcm_GetRtccDate
 20120 ;; This function uses a non-reentrant model
 20121 ;;
 20122                           
 20123                           	psect	text85
 20124  004A7A                     __ptext85:
 20125                           	opt stack 0
 20126  004A7A                     _Rtcc_GetRtccValue:
 20127                           	opt stack 15
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;incstack = 0
 20131                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20132  004A7A  0100               	movlb	0	; () banked
 20133  004A7C  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20134                           
 20135                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20136                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20137                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20138  004A7E  D02D               	goto	l416
 20139  004A80                     l417:
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20143  004A80  010F               	movlb	15	; () banked
 20144  004A82  833F               	bsf	63,1,b	;volatile
 20145  004A84                     
 20146                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20147  004A84  813F               	bsf	63,0,b	;volatile
 20148  004A86  D01C               	goto	L18
 20149  004A88                     l419:
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20153  004A88  010F               	movlb	15	; () banked
 20154  004A8A  833F               	bsf	63,1,b	;volatile
 20155  004A8C  D01E               	goto	L19
 20156  004A8E                     l420:
 20157                           
 20158                           ; BSR set to: 0
 20159                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20160  004A8E  010F               	movlb	15	; () banked
 20161  004A90  833F               	bsf	63,1,b	;volatile
 20162  004A92  D021               	goto	L22
 20163  004A94                     l13938:
 20164                           
 20165                           ; BSR set to: 15
 20166                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20167  004A94  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20168  004A98  0E0F               	movlw	15
 20169  004A9A  0100               	movlb	0	; () banked
 20170  004A9C  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20171  004A9E  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20172  004AA0  0B0F               	andlw	15
 20173  004AA2  0B0F               	andlw	15
 20174  004AA4  0D0A               	mullw	10
 20175  004AA6  50F3               	movf	prodl,w,c
 20176  004AA8  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20177  004AAA  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20178                           
 20179                           ;rtcc_drv.c: 241: break;
 20180  004AAC  D02D               	goto	l418
 20181  004AAE                     l421:
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20185  004AAE  010F               	movlb	15	; () banked
 20186  004AB0  933F               	bcf	63,1,b	;volatile
 20187                           
 20188                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20189  004AB2  813F               	bsf	63,0,b	;volatile
 20190                           
 20191                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20192  004AB4  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20193                           
 20194                           ;rtcc_drv.c: 249: break;
 20195  004AB8  D027               	goto	l418
 20196  004ABA                     l422:
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20200  004ABA  010F               	movlb	15	; () banked
 20201  004ABC  933F               	bcf	63,1,b	;volatile
 20202  004ABE  D7E2               	goto	L20
 20203  004AC0                     L18:
 20204                           
 20205                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20206  004AC0  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20207  004AC4  D7E7               	goto	l13938
 20208  004AC6                     l423:
 20209                           
 20210                           ; BSR set to: 0
 20211                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20212  004AC6  010F               	movlb	15	; () banked
 20213  004AC8  933F               	bcf	63,1,b	;volatile
 20214  004ACA                     L19:
 20215                           
 20216                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20217  004ACA  913F               	bcf	63,0,b	;volatile
 20218                           
 20219                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20220  004ACC  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20221  004AD0  D7E1               	goto	l13938
 20222  004AD2                     l424:
 20223                           
 20224                           ; BSR set to: 0
 20225                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20226  004AD2  010F               	movlb	15	; () banked
 20227  004AD4  933F               	bcf	63,1,b	;volatile
 20228  004AD6                     L22:
 20229                           
 20230                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20231  004AD6  913F               	bcf	63,0,b	;volatile
 20232  004AD8  D7F3               	goto	L18
 20233  004ADA                     l416:
 20234                           
 20235                           ; BSR set to: 0
 20236  004ADA  0100               	movlb	0	; () banked
 20237  004ADC  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20238                           
 20239                           ; Switch size 1, requested type "space"
 20240                           ; Number of cases is 7, Range of values is 0 to 6
 20241                           ; switch strategies available:
 20242                           ; Name         Instructions Cycles
 20243                           ; simple_byte           22    12 (average)
 20244                           ;	Chosen strategy is simple_byte
 20245  004ADE  0A00               	xorlw	0	; case 0
 20246  004AE0  B4D8               	btfsc	status,2,c
 20247  004AE2  D7CE               	goto	l417
 20248  004AE4  0A01               	xorlw	1	; case 1
 20249  004AE6  B4D8               	btfsc	status,2,c
 20250  004AE8  D7CF               	goto	l419
 20251  004AEA  0A03               	xorlw	3	; case 2
 20252  004AEC  B4D8               	btfsc	status,2,c
 20253  004AEE  D7CF               	goto	l420
 20254  004AF0  0A01               	xorlw	1	; case 3
 20255  004AF2  B4D8               	btfsc	status,2,c
 20256  004AF4  D7DC               	goto	l421
 20257  004AF6  0A07               	xorlw	7	; case 4
 20258  004AF8  B4D8               	btfsc	status,2,c
 20259  004AFA  D7DF               	goto	l422
 20260  004AFC  0A01               	xorlw	1	; case 5
 20261  004AFE  B4D8               	btfsc	status,2,c
 20262  004B00  D7E2               	goto	l423
 20263  004B02  0A03               	xorlw	3	; case 6
 20264  004B04  B4D8               	btfsc	status,2,c
 20265  004B06  D7E5               	goto	l424
 20266  004B08                     l418:
 20267                           
 20268                           ;rtcc_drv.c: 286: return RetValue;
 20269                           
 20270                           ; BSR set to: 0
 20271  004B08  0100               	movlb	0	; () banked
 20272  004B0A  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20273  004B0C  0012               	return	
 20274  004B0E                     __end_of_Rtcc_GetRtccValue:
 20275                           	opt stack 0
 20276                           tosu	equ	0xFFF
 20277                           tosh	equ	0xFFE
 20278                           tosl	equ	0xFFD
 20279                           pclath	equ	0xFFA
 20280                           tblptru	equ	0xFF8
 20281                           tblptrh	equ	0xFF7
 20282                           tblptrl	equ	0xFF6
 20283                           tablat	equ	0xFF5
 20284                           prodh	equ	0xFF4
 20285                           prodl	equ	0xFF3
 20286                           intcon	equ	0xFF2
 20287                           intcon2	equ	0xFF1
 20288                           intcon3	equ	0xFF0
 20289                           indf0	equ	0xFEF
 20290                           postinc0	equ	0xFEE
 20291                           plusw0	equ	0xFEB
 20292                           fsr0h	equ	0xFEA
 20293                           fsr0l	equ	0xFE9
 20294                           wreg	equ	0xFE8
 20295                           indf1	equ	0xFE7
 20296                           postinc1	equ	0xFE6
 20297                           postdec1	equ	0xFE5
 20298                           fsr1h	equ	0xFE2
 20299                           fsr1l	equ	0xFE1
 20300                           indf2	equ	0xFDF
 20301                           postinc2	equ	0xFDE
 20302                           postdec2	equ	0xFDD
 20303                           plusw2	equ	0xFDB
 20304                           fsr2h	equ	0xFDA
 20305                           fsr2l	equ	0xFD9
 20306                           status	equ	0xFD8
 20307                           
 20308 ;; *************** function _Rtcc_SetRtcStatus *****************
 20309 ;; Defined at:
 20310 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;  Status          1    wreg     unsigned char 
 20313 ;; Auto vars:     Size  Location     Type
 20314 ;;  Status          1   29[BANK0 ] unsigned char 
 20315 ;; Return value:  Size  Location     Type
 20316 ;;                  1    wreg      void 
 20317 ;; Registers used:
 20318 ;;		wreg
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/0
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20328 ;;Total ram usage:        1 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; Hardware stack levels required when called:   11
 20331 ;; This function calls:
 20332 ;;		Nothing
 20333 ;; This function is called by:
 20334 ;;		_Rtcm_MainTask
 20335 ;; This function uses a non-reentrant model
 20336 ;;
 20337                           
 20338                           	psect	text86
 20339  006622                     __ptext86:
 20340                           	opt stack 0
 20341  006622                     _Rtcc_SetRtcStatus:
 20342                           	opt stack 16
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;incstack = 0
 20346                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20347  006622  0100               	movlb	0	; () banked
 20348  006624  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20349                           
 20350                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20351  006626  0100               	movlb	0	; () banked
 20352  006628  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20353  00662A  D003               	bra	u14065
 20354  00662C  010F               	movlb	15	; () banked
 20355  00662E  9F3F               	bcf	63,7,b	;volatile
 20356  006630  D002               	bra	u14066
 20357  006632                     u14065:
 20358  006632  010F               	movlb	15	; () banked
 20359  006634  8F3F               	bsf	63,7,b	;volatile
 20360  006636                     u14066:
 20361                           
 20362                           ; BSR set to: 15
 20363  006636  0012               	return		;funcret
 20364  006638                     __end_of_Rtcc_SetRtcStatus:
 20365                           	opt stack 0
 20366                           tosu	equ	0xFFF
 20367                           tosh	equ	0xFFE
 20368                           tosl	equ	0xFFD
 20369                           pclath	equ	0xFFA
 20370                           tblptru	equ	0xFF8
 20371                           tblptrh	equ	0xFF7
 20372                           tblptrl	equ	0xFF6
 20373                           tablat	equ	0xFF5
 20374                           prodh	equ	0xFF4
 20375                           prodl	equ	0xFF3
 20376                           intcon	equ	0xFF2
 20377                           intcon2	equ	0xFF1
 20378                           intcon3	equ	0xFF0
 20379                           indf0	equ	0xFEF
 20380                           postinc0	equ	0xFEE
 20381                           plusw0	equ	0xFEB
 20382                           fsr0h	equ	0xFEA
 20383                           fsr0l	equ	0xFE9
 20384                           wreg	equ	0xFE8
 20385                           indf1	equ	0xFE7
 20386                           postinc1	equ	0xFE6
 20387                           postdec1	equ	0xFE5
 20388                           fsr1h	equ	0xFE2
 20389                           fsr1l	equ	0xFE1
 20390                           indf2	equ	0xFDF
 20391                           postinc2	equ	0xFDE
 20392                           postdec2	equ	0xFDD
 20393                           plusw2	equ	0xFDB
 20394                           fsr2h	equ	0xFDA
 20395                           fsr2l	equ	0xFD9
 20396                           status	equ	0xFD8
 20397                           
 20398 ;; *************** function _Rtcc_RtcConfig *****************
 20399 ;; Defined at:
 20400 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20403 ;;		 -> RtcConfig(4), 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20418 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;Total ram usage:        3 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   12
 20422 ;; This function calls:
 20423 ;;		_RtccIrqInit
 20424 ;; This function is called by:
 20425 ;;		_Rtcm_MainTask
 20426 ;; This function uses a non-reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text87
 20430  0046E4                     __ptext87:
 20431                           	opt stack 0
 20432  0046E4                     _Rtcc_RtcConfig:
 20433                           	opt stack 15
 20434                           
 20435                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20436                           
 20437                           ; BSR set to: 15
 20438                           ;incstack = 0
 20439  0046E4  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20440  0046E8  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20441  0046EC  50DF               	movf	indf2,w,c
 20442  0046EE  0100               	movlb	0	; () banked
 20443  0046F0  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20444  0046F2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20445  0046F4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20446  0046F6  010F               	movlb	15	; () banked
 20447  0046F8  513F               	movf	63,w,b	;volatile
 20448  0046FA  0100               	movlb	0	; () banked
 20449  0046FC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20450  0046FE  0BFB               	andlw	-5
 20451  004700  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20452  004702  010F               	movlb	15	; () banked
 20453  004704  6F3F               	movwf	63,b	;volatile
 20454                           
 20455                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20456  004706  0100               	movlb	0	; () banked
 20457  004708  EE20 F001          	lfsr	2,1
 20458  00470C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20459  00470E  26D9               	addwf	fsr2l,f,c
 20460  004710  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20461  004712  22DA               	addwfc	fsr2h,f,c
 20462  004714  50DF               	movf	indf2,w,c
 20463  004716  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20464  004718  0E01               	movlw	1
 20465  00471A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20466  00471C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20467  00471E  010F               	movlb	15	; () banked
 20468  004720  513C               	movf	60,w,b	;volatile
 20469  004722  0100               	movlb	0	; () banked
 20470  004724  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20471  004726  0BFD               	andlw	-3
 20472  004728  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20473  00472A  010F               	movlb	15	; () banked
 20474  00472C  6F3C               	movwf	60,b	;volatile
 20475                           
 20476                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20477  00472E  0100               	movlb	0	; () banked
 20478  004730  EE20 F001          	lfsr	2,1
 20479  004734  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20480  004736  26D9               	addwf	fsr2l,f,c
 20481  004738  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20482  00473A  22DA               	addwfc	fsr2h,f,c
 20483  00473C  50DF               	movf	indf2,w,c
 20484  00473E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20485  004740  90D8               	bcf	status,0,c
 20486  004742  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20487  004744  0E01               	movlw	1
 20488  004746  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20489  004748  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20490  00474A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20491  00474C  010F               	movlb	15	; () banked
 20492  00474E  513C               	movf	60,w,b	;volatile
 20493  004750  0100               	movlb	0	; () banked
 20494  004752  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20495  004754  0BFB               	andlw	-5
 20496  004756  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20497  004758  010F               	movlb	15	; () banked
 20498  00475A  6F3C               	movwf	60,b	;volatile
 20499                           
 20500                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20501  00475C  0100               	movlb	0	; () banked
 20502  00475E  EE20 F002          	lfsr	2,2
 20503  004762  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20504  004764  26D9               	addwf	fsr2l,f,c
 20505  004766  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20506  004768  22DA               	addwfc	fsr2h,f,c
 20507  00476A  04DE               	decf	postinc2,w,c
 20508  00476C  A4D8               	btfss	status,2,c
 20509  00476E  0012               	return	
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;rtcc_drv.c: 115: {
 20513                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20514  004770  EE20 F003          	lfsr	2,3
 20515  004774  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20516  004776  26D9               	addwf	fsr2l,f,c
 20517  004778  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20518  00477A  22DA               	addwfc	fsr2h,f,c
 20519  00477C  50DF               	movf	indf2,w,c
 20520  00477E  EC1C  F033         	call	_RtccIrqInit
 20521  004782  0012               	return	
 20522  004784                     __end_of_Rtcc_RtcConfig:
 20523                           	opt stack 0
 20524                           tosu	equ	0xFFF
 20525                           tosh	equ	0xFFE
 20526                           tosl	equ	0xFFD
 20527                           pclath	equ	0xFFA
 20528                           tblptru	equ	0xFF8
 20529                           tblptrh	equ	0xFF7
 20530                           tblptrl	equ	0xFF6
 20531                           tablat	equ	0xFF5
 20532                           prodh	equ	0xFF4
 20533                           prodl	equ	0xFF3
 20534                           intcon	equ	0xFF2
 20535                           intcon2	equ	0xFF1
 20536                           intcon3	equ	0xFF0
 20537                           indf0	equ	0xFEF
 20538                           postinc0	equ	0xFEE
 20539                           plusw0	equ	0xFEB
 20540                           fsr0h	equ	0xFEA
 20541                           fsr0l	equ	0xFE9
 20542                           wreg	equ	0xFE8
 20543                           indf1	equ	0xFE7
 20544                           postinc1	equ	0xFE6
 20545                           postdec1	equ	0xFE5
 20546                           fsr1h	equ	0xFE2
 20547                           fsr1l	equ	0xFE1
 20548                           indf2	equ	0xFDF
 20549                           postinc2	equ	0xFDE
 20550                           postdec2	equ	0xFDD
 20551                           plusw2	equ	0xFDB
 20552                           fsr2h	equ	0xFDA
 20553                           fsr2l	equ	0xFD9
 20554                           status	equ	0xFD8
 20555                           
 20556 ;; *************** function _RtccIrqInit *****************
 20557 ;; Defined at:
 20558 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;  Priority        1    wreg     enum E7716
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;  Priority        1   29[BANK0 ] enum E7716
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      void 
 20565 ;; Registers used:
 20566 ;;		wreg
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20575 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20576 ;;Total ram usage:        1 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; Hardware stack levels required when called:   11
 20579 ;; This function calls:
 20580 ;;		Nothing
 20581 ;; This function is called by:
 20582 ;;		_Rtcc_RtcConfig
 20583 ;; This function uses a non-reentrant model
 20584 ;;
 20585                           
 20586                           	psect	text88
 20587  006638                     __ptext88:
 20588                           	opt stack 0
 20589  006638                     _RtccIrqInit:
 20590                           	opt stack 15
 20591                           
 20592                           ;incstack = 0
 20593                           ;RtccIrqInit@Priority stored from wreg
 20594  006638  0100               	movlb	0	; () banked
 20595  00663A  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20596                           
 20597                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20598  00663C  90A4               	bcf	4004,0,c	;volatile
 20599                           
 20600                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20601  00663E  0100               	movlb	0	; () banked
 20602  006640  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20603  006642  D002               	bra	u13025
 20604  006644  90A5               	bcf	4005,0,c	;volatile
 20605  006646  D001               	bra	u13026
 20606  006648                     u13025:
 20607  006648  80A5               	bsf	4005,0,c	;volatile
 20608  00664A                     u13026:
 20609                           
 20610                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20611  00664A  80A3               	bsf	4003,0,c	;volatile
 20612  00664C  0012               	return		;funcret
 20613  00664E                     __end_of_RtccIrqInit:
 20614                           	opt stack 0
 20615                           tosu	equ	0xFFF
 20616                           tosh	equ	0xFFE
 20617                           tosl	equ	0xFFD
 20618                           pclath	equ	0xFFA
 20619                           tblptru	equ	0xFF8
 20620                           tblptrh	equ	0xFF7
 20621                           tblptrl	equ	0xFF6
 20622                           tablat	equ	0xFF5
 20623                           prodh	equ	0xFF4
 20624                           prodl	equ	0xFF3
 20625                           intcon	equ	0xFF2
 20626                           intcon2	equ	0xFF1
 20627                           intcon3	equ	0xFF0
 20628                           indf0	equ	0xFEF
 20629                           postinc0	equ	0xFEE
 20630                           plusw0	equ	0xFEB
 20631                           fsr0h	equ	0xFEA
 20632                           fsr0l	equ	0xFE9
 20633                           wreg	equ	0xFE8
 20634                           indf1	equ	0xFE7
 20635                           postinc1	equ	0xFE6
 20636                           postdec1	equ	0xFE5
 20637                           fsr1h	equ	0xFE2
 20638                           fsr1l	equ	0xFE1
 20639                           indf2	equ	0xFDF
 20640                           postinc2	equ	0xFDE
 20641                           postdec2	equ	0xFDD
 20642                           plusw2	equ	0xFDB
 20643                           fsr2h	equ	0xFDA
 20644                           fsr2l	equ	0xFD9
 20645                           status	equ	0xFD8
 20646                           
 20647 ;; *************** function _Rtcc_AlarmConfig *****************
 20648 ;; Defined at:
 20649 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20650 ;; Parameters:    Size  Location     Type
 20651 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20652 ;;		 -> AlCfg(4), 
 20653 ;; Auto vars:     Size  Location     Type
 20654 ;;		None
 20655 ;; Return value:  Size  Location     Type
 20656 ;;                  1    wreg      void 
 20657 ;; Registers used:
 20658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20659 ;; Tracked objects:
 20660 ;;		On entry : 0/0
 20661 ;;		On exit  : 0/0
 20662 ;;		Unchanged: 0/0
 20663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20667 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20668 ;;Total ram usage:        3 bytes
 20669 ;; Hardware stack levels used:    1
 20670 ;; Hardware stack levels required when called:   11
 20671 ;; This function calls:
 20672 ;;		Nothing
 20673 ;; This function is called by:
 20674 ;;		_Rtcm_MainTask
 20675 ;; This function uses a non-reentrant model
 20676 ;;
 20677                           
 20678                           	psect	text89
 20679  00523C                     __ptext89:
 20680                           	opt stack 0
 20681  00523C                     _Rtcc_AlarmConfig:
 20682                           	opt stack 16
 20683                           
 20684                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20685                           
 20686                           ;incstack = 0
 20687  00523C  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20688  005240  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20689  005244  50DF               	movf	indf2,w,c
 20690  005246  0100               	movlb	0	; () banked
 20691  005248  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20692  00524A  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20693  00524C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20694  00524E  5091               	movf	3985,w,c	;volatile
 20695  005250  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20696  005252  0B7F               	andlw	-129
 20697  005254  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20698  005256  6E91               	movwf	3985,c	;volatile
 20699                           
 20700                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20701  005258  EE20 F001          	lfsr	2,1
 20702  00525C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20703  00525E  26D9               	addwf	fsr2l,f,c
 20704  005260  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20705  005262  22DA               	addwfc	fsr2h,f,c
 20706  005264  50DF               	movf	indf2,w,c
 20707  005266  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20708  005268  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20709  00526A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20710  00526C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20711  00526E  5091               	movf	3985,w,c	;volatile
 20712  005270  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20713  005272  0BBF               	andlw	-65
 20714  005274  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20715  005276  6E91               	movwf	3985,c	;volatile
 20716                           
 20717                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20718  005278  EE20 F002          	lfsr	2,2
 20719  00527C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20720  00527E  26D9               	addwf	fsr2l,f,c
 20721  005280  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20722  005282  22DA               	addwfc	fsr2h,f,c
 20723  005284  50DF               	movf	indf2,w,c
 20724  005286  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20725  005288  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20726  00528A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20727  00528C  5091               	movf	3985,w,c	;volatile
 20728  00528E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20729  005290  0BC3               	andlw	-61
 20730  005292  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20731  005294  6E91               	movwf	3985,c	;volatile
 20732                           
 20733                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20734  005296  EE20 F003          	lfsr	2,3
 20735  00529A  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20736  00529C  26D9               	addwf	fsr2l,f,c
 20737  00529E  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20738  0052A0  22DA               	addwfc	fsr2h,f,c
 20739  0052A2  50DF               	movf	indf2,w,c
 20740  0052A4  6E90               	movwf	3984,c	;volatile
 20741                           
 20742                           ; BSR set to: 0
 20743  0052A6  0012               	return		;funcret
 20744  0052A8                     __end_of_Rtcc_AlarmConfig:
 20745                           	opt stack 0
 20746                           tosu	equ	0xFFF
 20747                           tosh	equ	0xFFE
 20748                           tosl	equ	0xFFD
 20749                           pclath	equ	0xFFA
 20750                           tblptru	equ	0xFF8
 20751                           tblptrh	equ	0xFF7
 20752                           tblptrl	equ	0xFF6
 20753                           tablat	equ	0xFF5
 20754                           prodh	equ	0xFF4
 20755                           prodl	equ	0xFF3
 20756                           intcon	equ	0xFF2
 20757                           intcon2	equ	0xFF1
 20758                           intcon3	equ	0xFF0
 20759                           indf0	equ	0xFEF
 20760                           postinc0	equ	0xFEE
 20761                           plusw0	equ	0xFEB
 20762                           fsr0h	equ	0xFEA
 20763                           fsr0l	equ	0xFE9
 20764                           wreg	equ	0xFE8
 20765                           indf1	equ	0xFE7
 20766                           postinc1	equ	0xFE6
 20767                           postdec1	equ	0xFE5
 20768                           fsr1h	equ	0xFE2
 20769                           fsr1l	equ	0xFE1
 20770                           indf2	equ	0xFDF
 20771                           postinc2	equ	0xFDE
 20772                           postdec2	equ	0xFDD
 20773                           plusw2	equ	0xFDB
 20774                           fsr2h	equ	0xFDA
 20775                           fsr2l	equ	0xFD9
 20776                           status	equ	0xFD8
 20777                           
 20778 ;; *************** function _waitSetupCall *****************
 20779 ;; Defined at:
 20780 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20781 ;; Parameters:    Size  Location     Type
 20782 ;;		None
 20783 ;; Auto vars:     Size  Location     Type
 20784 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20785 ;; Return value:  Size  Location     Type
 20786 ;;                  1    wreg      unsigned char 
 20787 ;; Registers used:
 20788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20789 ;; Tracked objects:
 20790 ;;		On entry : 0/0
 20791 ;;		On exit  : 0/0
 20792 ;;		Unchanged: 0/0
 20793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20798 ;;Total ram usage:        1 bytes
 20799 ;; Hardware stack levels used:    1
 20800 ;; Hardware stack levels required when called:   15
 20801 ;; This function calls:
 20802 ;;		_Led_SetLedStatus
 20803 ;;		_getSetupCall
 20804 ;;		_secondsAppTimer
 20805 ;; This function is called by:
 20806 ;;		_MyApp_Task
 20807 ;; This function uses a non-reentrant model
 20808 ;;
 20809                           
 20810                           	psect	text90
 20811  005A54                     __ptext90:
 20812                           	opt stack 0
 20813  005A54                     _waitSetupCall:
 20814                           	opt stack 12
 20815                           
 20816                           ;app_gate.c: 86: bool isCallArrived = 0;
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;incstack = 0
 20820  005A54  0E00               	movlw	0
 20821  005A56  0100               	movlb	0	; () banked
 20822  005A58  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20826  005A5A  0EB3               	movlw	low _setupCallTicks
 20827  005A5C  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20828  005A5E  0E03               	movlw	high _setupCallTicks
 20829  005A60  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20830  005A62  0E00               	movlw	0
 20831  005A64  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20832  005A66  0E1E               	movlw	30
 20833  005A68  EC21  F023         	call	_secondsAppTimer
 20834  005A6C  0900               	iorlw	0
 20835  005A6E  A4D8               	btfss	status,2,c
 20836  005A70  D00F               	goto	l2755
 20837                           
 20838                           ;app_gate.c: 88: {
 20839                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 20840  005A72  0E03               	movlw	3
 20841  005A74  0100               	movlb	0	; () banked
 20842  005A76  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20843  005A78  0E01               	movlw	1
 20844  005A7A  ECE1  F030         	call	_Led_SetLedStatus
 20845                           
 20846                           ;app_gate.c: 90: if (getSetupCall())
 20847  005A7E  EC5F  F032         	call	_getSetupCall	;wreg free
 20848  005A82  0900               	iorlw	0
 20849  005A84  B4D8               	btfsc	status,2,c
 20850  005A86  D00A               	goto	l2757
 20851                           
 20852                           ;app_gate.c: 91: {
 20853                           ;app_gate.c: 92: isCallArrived = 1;
 20854  005A88  0E01               	movlw	1
 20855  005A8A  0100               	movlb	0	; () banked
 20856  005A8C  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20857                           
 20858                           ; BSR set to: 0
 20859                           ;app_gate.c: 93: }
 20860                           ;app_gate.c: 94: }
 20861  005A8E  D006               	goto	l2757
 20862  005A90                     l2755:
 20863                           
 20864                           ;app_gate.c: 95: else
 20865                           ;app_gate.c: 96: {
 20866                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 20867                           
 20868                           ; BSR set to: 0
 20869  005A90  0E01               	movlw	1
 20870  005A92  0100               	movlb	0	; () banked
 20871  005A94  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20872  005A96  0E01               	movlw	1
 20873  005A98  ECE1  F030         	call	_Led_SetLedStatus
 20874  005A9C                     l2757:
 20875                           
 20876                           ;app_gate.c: 98: }
 20877                           ;app_gate.c: 99: return isCallArrived;
 20878  005A9C  0100               	movlb	0	; () banked
 20879  005A9E  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 20880  005AA0  0012               	return	
 20881  005AA2                     __end_of_waitSetupCall:
 20882                           	opt stack 0
 20883                           tosu	equ	0xFFF
 20884                           tosh	equ	0xFFE
 20885                           tosl	equ	0xFFD
 20886                           pclath	equ	0xFFA
 20887                           tblptru	equ	0xFF8
 20888                           tblptrh	equ	0xFF7
 20889                           tblptrl	equ	0xFF6
 20890                           tablat	equ	0xFF5
 20891                           prodh	equ	0xFF4
 20892                           prodl	equ	0xFF3
 20893                           intcon	equ	0xFF2
 20894                           intcon2	equ	0xFF1
 20895                           intcon3	equ	0xFF0
 20896                           indf0	equ	0xFEF
 20897                           postinc0	equ	0xFEE
 20898                           plusw0	equ	0xFEB
 20899                           fsr0h	equ	0xFEA
 20900                           fsr0l	equ	0xFE9
 20901                           wreg	equ	0xFE8
 20902                           indf1	equ	0xFE7
 20903                           postinc1	equ	0xFE6
 20904                           postdec1	equ	0xFE5
 20905                           fsr1h	equ	0xFE2
 20906                           fsr1l	equ	0xFE1
 20907                           indf2	equ	0xFDF
 20908                           postinc2	equ	0xFDE
 20909                           postdec2	equ	0xFDD
 20910                           plusw2	equ	0xFDB
 20911                           fsr2h	equ	0xFDA
 20912                           fsr2l	equ	0xFD9
 20913                           status	equ	0xFD8
 20914                           
 20915 ;; *************** function _getSetupCall *****************
 20916 ;; Defined at:
 20917 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 20918 ;; Parameters:    Size  Location     Type
 20919 ;;		None
 20920 ;; Auto vars:     Size  Location     Type
 20921 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 20922 ;; Return value:  Size  Location     Type
 20923 ;;                  1    wreg      unsigned char 
 20924 ;; Registers used:
 20925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20926 ;; Tracked objects:
 20927 ;;		On entry : 0/0
 20928 ;;		On exit  : 0/0
 20929 ;;		Unchanged: 0/0
 20930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;Total ram usage:        1 bytes
 20936 ;; Hardware stack levels used:    1
 20937 ;; Hardware stack levels required when called:   14
 20938 ;; This function calls:
 20939 ;;		_Mdm_HangPhoneCall
 20940 ;;		_Mdm_IsRinging
 20941 ;; This function is called by:
 20942 ;;		_waitSetupCall
 20943 ;; This function uses a non-reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text91
 20947  0064BE                     __ptext91:
 20948                           	opt stack 0
 20949  0064BE                     _getSetupCall:
 20950                           	opt stack 12
 20951                           
 20952                           ;app_gate.c: 67: bool isCalledReceived = 0;
 20953                           
 20954                           ; BSR set to: 0
 20955                           ;incstack = 0
 20956  0064BE  0E00               	movlw	0
 20957  0064C0  0100               	movlb	0	; () banked
 20958  0064C2  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 20959                           
 20960                           ; BSR set to: 0
 20961                           ;app_gate.c: 69: if (Mdm_IsRinging())
 20962  0064C4  ECB3  F031         	call	_Mdm_IsRinging	;wreg free
 20963  0064C8  0900               	iorlw	0
 20964  0064CA  B4D8               	btfsc	status,2,c
 20965  0064CC  D005               	goto	l2751
 20966                           
 20967                           ;app_gate.c: 70: {
 20968                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 20969  0064CE  EC50  F033         	call	_Mdm_HangPhoneCall	;wreg free
 20970                           
 20971                           ;app_gate.c: 72: isCalledReceived = 1;
 20972  0064D2  0E01               	movlw	1
 20973  0064D4  0100               	movlb	0	; () banked
 20974  0064D6  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 20975  0064D8                     l2751:
 20976                           
 20977                           ;app_gate.c: 73: }
 20978                           ;app_gate.c: 74: return isCalledReceived;
 20979                           
 20980                           ; BSR set to: 0
 20981  0064D8  0100               	movlb	0	; () banked
 20982  0064DA  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 20983  0064DC  0012               	return	
 20984  0064DE                     __end_of_getSetupCall:
 20985                           	opt stack 0
 20986                           tosu	equ	0xFFF
 20987                           tosh	equ	0xFFE
 20988                           tosl	equ	0xFFD
 20989                           pclath	equ	0xFFA
 20990                           tblptru	equ	0xFF8
 20991                           tblptrh	equ	0xFF7
 20992                           tblptrl	equ	0xFF6
 20993                           tablat	equ	0xFF5
 20994                           prodh	equ	0xFF4
 20995                           prodl	equ	0xFF3
 20996                           intcon	equ	0xFF2
 20997                           intcon2	equ	0xFF1
 20998                           intcon3	equ	0xFF0
 20999                           indf0	equ	0xFEF
 21000                           postinc0	equ	0xFEE
 21001                           plusw0	equ	0xFEB
 21002                           fsr0h	equ	0xFEA
 21003                           fsr0l	equ	0xFE9
 21004                           wreg	equ	0xFE8
 21005                           indf1	equ	0xFE7
 21006                           postinc1	equ	0xFE6
 21007                           postdec1	equ	0xFE5
 21008                           fsr1h	equ	0xFE2
 21009                           fsr1l	equ	0xFE1
 21010                           indf2	equ	0xFDF
 21011                           postinc2	equ	0xFDE
 21012                           postdec2	equ	0xFDD
 21013                           plusw2	equ	0xFDB
 21014                           fsr2h	equ	0xFDA
 21015                           fsr2l	equ	0xFD9
 21016                           status	equ	0xFD8
 21017                           
 21018 ;; *************** function _Mdm_IsRinging *****************
 21019 ;; Defined at:
 21020 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;		None
 21023 ;; Auto vars:     Size  Location     Type
 21024 ;;  Ret             1   33[BANK0 ] enum E8924
 21025 ;; Return value:  Size  Location     Type
 21026 ;;                  1    wreg      enum E8924
 21027 ;; Registers used:
 21028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21029 ;; Tracked objects:
 21030 ;;		On entry : 0/0
 21031 ;;		On exit  : 0/0
 21032 ;;		Unchanged: 0/0
 21033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21038 ;;Total ram usage:        1 bytes
 21039 ;; Hardware stack levels used:    1
 21040 ;; Hardware stack levels required when called:   12
 21041 ;; This function calls:
 21042 ;;		_ReceiveEvt
 21043 ;; This function is called by:
 21044 ;;		_MyApp_Task
 21045 ;;		_getSetupCall
 21046 ;; This function uses a non-reentrant model
 21047 ;;
 21048                           
 21049                           	psect	text92
 21050  006366                     __ptext92:
 21051                           	opt stack 0
 21052  006366                     _Mdm_IsRinging:
 21053                           	opt stack 13
 21054                           
 21055                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;incstack = 0
 21059  006366  0E00               	movlw	0
 21060  006368  0100               	movlb	0	; () banked
 21061  00636A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21065  00636C  0EDF               	movlw	low _RingEvent
 21066  00636E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21067  006370  0E00               	movlw	high _RingEvent
 21068  006372  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21069  006374  EC10  F031         	call	_ReceiveEvt	;wreg free
 21070  006378  0900               	iorlw	0
 21071  00637A  B4D8               	btfsc	status,2,c
 21072  00637C  D003               	goto	l1152
 21073                           
 21074                           ;mdm_gsm_gprs.c: 1030: {
 21075                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21076  00637E  0E01               	movlw	1
 21077  006380  0100               	movlb	0	; () banked
 21078  006382  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21079  006384                     l1152:
 21080                           
 21081                           ;mdm_gsm_gprs.c: 1032: }
 21082                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21083  006384  0100               	movlb	0	; () banked
 21084  006386  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21085  006388  0012               	return	
 21086  00638A                     __end_of_Mdm_IsRinging:
 21087                           	opt stack 0
 21088                           tosu	equ	0xFFF
 21089                           tosh	equ	0xFFE
 21090                           tosl	equ	0xFFD
 21091                           pclath	equ	0xFFA
 21092                           tblptru	equ	0xFF8
 21093                           tblptrh	equ	0xFF7
 21094                           tblptrl	equ	0xFF6
 21095                           tablat	equ	0xFF5
 21096                           prodh	equ	0xFF4
 21097                           prodl	equ	0xFF3
 21098                           intcon	equ	0xFF2
 21099                           intcon2	equ	0xFF1
 21100                           intcon3	equ	0xFF0
 21101                           indf0	equ	0xFEF
 21102                           postinc0	equ	0xFEE
 21103                           plusw0	equ	0xFEB
 21104                           fsr0h	equ	0xFEA
 21105                           fsr0l	equ	0xFE9
 21106                           wreg	equ	0xFE8
 21107                           indf1	equ	0xFE7
 21108                           postinc1	equ	0xFE6
 21109                           postdec1	equ	0xFE5
 21110                           fsr1h	equ	0xFE2
 21111                           fsr1l	equ	0xFE1
 21112                           indf2	equ	0xFDF
 21113                           postinc2	equ	0xFDE
 21114                           postdec2	equ	0xFDD
 21115                           plusw2	equ	0xFDB
 21116                           fsr2h	equ	0xFDA
 21117                           fsr2l	equ	0xFD9
 21118                           status	equ	0xFD8
 21119                           
 21120 ;; *************** function _Mdm_HangPhoneCall *****************
 21121 ;; Defined at:
 21122 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;		None
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      void 
 21129 ;; Registers used:
 21130 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21140 ;;Total ram usage:        0 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:   13
 21143 ;; This function calls:
 21144 ;;		_Uart_WriteConstString
 21145 ;; This function is called by:
 21146 ;;		_MyApp_Task
 21147 ;;		_getSetupCall
 21148 ;; This function uses a non-reentrant model
 21149 ;;
 21150                           
 21151                           	psect	text93
 21152  0066A0                     __ptext93:
 21153                           	opt stack 0
 21154  0066A0                     _Mdm_HangPhoneCall:
 21155                           	opt stack 12
 21156                           
 21157                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21158                           
 21159                           ; BSR set to: 0
 21160                           ;incstack = 0
 21161  0066A0  0EEF               	movlw	low STR_6
 21162  0066A2  0100               	movlb	0	; () banked
 21163  0066A4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21164  0066A6  0EFF               	movlw	high STR_6
 21165  0066A8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21166  0066AA  0E01               	movlw	1
 21167  0066AC  EC00  F02F         	call	_Uart_WriteConstString
 21168  0066B0  0012               	return		;funcret
 21169  0066B2                     __end_of_Mdm_HangPhoneCall:
 21170                           	opt stack 0
 21171                           tosu	equ	0xFFF
 21172                           tosh	equ	0xFFE
 21173                           tosl	equ	0xFFD
 21174                           pclath	equ	0xFFA
 21175                           tblptru	equ	0xFF8
 21176                           tblptrh	equ	0xFF7
 21177                           tblptrl	equ	0xFF6
 21178                           tablat	equ	0xFF5
 21179                           prodh	equ	0xFF4
 21180                           prodl	equ	0xFF3
 21181                           intcon	equ	0xFF2
 21182                           intcon2	equ	0xFF1
 21183                           intcon3	equ	0xFF0
 21184                           indf0	equ	0xFEF
 21185                           postinc0	equ	0xFEE
 21186                           plusw0	equ	0xFEB
 21187                           fsr0h	equ	0xFEA
 21188                           fsr0l	equ	0xFE9
 21189                           wreg	equ	0xFE8
 21190                           indf1	equ	0xFE7
 21191                           postinc1	equ	0xFE6
 21192                           postdec1	equ	0xFE5
 21193                           fsr1h	equ	0xFE2
 21194                           fsr1l	equ	0xFE1
 21195                           indf2	equ	0xFDF
 21196                           postinc2	equ	0xFDE
 21197                           postdec2	equ	0xFDD
 21198                           plusw2	equ	0xFDB
 21199                           fsr2h	equ	0xFDA
 21200                           fsr2l	equ	0xFD9
 21201                           status	equ	0xFD8
 21202                           
 21203 ;; *************** function _saveNumberInMemory *****************
 21204 ;; Defined at:
 21205 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21206 ;; Parameters:    Size  Location     Type
 21207 ;;  address         1    wreg     unsigned char 
 21208 ;;  phoneNumber     2   46[BANK0 ] PTR unsigned char 
 21209 ;;		 -> callerNumber(13), 
 21210 ;; Auto vars:     Size  Location     Type
 21211 ;;  address         1   48[BANK0 ] unsigned char 
 21212 ;; Return value:  Size  Location     Type
 21213 ;;                  1    wreg      void 
 21214 ;; Registers used:
 21215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21216 ;; Tracked objects:
 21217 ;;		On entry : 0/0
 21218 ;;		On exit  : 0/0
 21219 ;;		Unchanged: 0/0
 21220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21224 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21225 ;;Total ram usage:        3 bytes
 21226 ;; Hardware stack levels used:    1
 21227 ;; Hardware stack levels required when called:   14
 21228 ;; This function calls:
 21229 ;;		_Eeprom_Write
 21230 ;; This function is called by:
 21231 ;;		_MyApp_Task
 21232 ;; This function uses a non-reentrant model
 21233 ;;
 21234                           
 21235                           	psect	text94
 21236  0065A6                     __ptext94:
 21237                           	opt stack 0
 21238  0065A6                     _saveNumberInMemory:
 21239                           	opt stack 13
 21240                           
 21241                           ;incstack = 0
 21242                           ;saveNumberInMemory@address stored from wreg
 21243  0065A6  0100               	movlb	0	; () banked
 21244  0065A8  6F90               	movwf	saveNumberInMemory@address& (0+255),b
 21245                           
 21246                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21247  0065AA  C08E  F087         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21248  0065AE  C08F  F088         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21249  0065B2  0E0D               	movlw	13
 21250  0065B4  0100               	movlb	0	; () banked
 21251  0065B6  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21252  0065B8  5190               	movf	saveNumberInMemory@address& (0+255),w,b
 21253  0065BA  EC60  F02C         	call	_Eeprom_Write
 21254  0065BE  0012               	return		;funcret
 21255  0065C0                     __end_of_saveNumberInMemory:
 21256                           	opt stack 0
 21257                           tosu	equ	0xFFF
 21258                           tosh	equ	0xFFE
 21259                           tosl	equ	0xFFD
 21260                           pclath	equ	0xFFA
 21261                           tblptru	equ	0xFF8
 21262                           tblptrh	equ	0xFF7
 21263                           tblptrl	equ	0xFF6
 21264                           tablat	equ	0xFF5
 21265                           prodh	equ	0xFF4
 21266                           prodl	equ	0xFF3
 21267                           intcon	equ	0xFF2
 21268                           intcon2	equ	0xFF1
 21269                           intcon3	equ	0xFF0
 21270                           indf0	equ	0xFEF
 21271                           postinc0	equ	0xFEE
 21272                           plusw0	equ	0xFEB
 21273                           fsr0h	equ	0xFEA
 21274                           fsr0l	equ	0xFE9
 21275                           wreg	equ	0xFE8
 21276                           indf1	equ	0xFE7
 21277                           postinc1	equ	0xFE6
 21278                           postdec1	equ	0xFE5
 21279                           fsr1h	equ	0xFE2
 21280                           fsr1l	equ	0xFE1
 21281                           indf2	equ	0xFDF
 21282                           postinc2	equ	0xFDE
 21283                           postdec2	equ	0xFDD
 21284                           plusw2	equ	0xFDB
 21285                           fsr2h	equ	0xFDA
 21286                           fsr2l	equ	0xFD9
 21287                           status	equ	0xFD8
 21288                           
 21289 ;; *************** function _parseCommand *****************
 21290 ;; Defined at:
 21291 ;;		line 89 in file "../Source/c/04_App/app.c"
 21292 ;; Parameters:    Size  Location     Type
 21293 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21294 ;;		 -> smsText(20), 
 21295 ;; Auto vars:     Size  Location     Type
 21296 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21297 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21298 ;;  state           1   48[BANK0 ] enum E8991
 21299 ;; Return value:  Size  Location     Type
 21300 ;;                  1    wreg      enum E8991
 21301 ;; Registers used:
 21302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21303 ;; Tracked objects:
 21304 ;;		On entry : 0/0
 21305 ;;		On exit  : 0/0
 21306 ;;		Unchanged: 0/0
 21307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21309 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21311 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21312 ;;Total ram usage:        9 bytes
 21313 ;; Hardware stack levels used:    1
 21314 ;; Hardware stack levels required when called:   12
 21315 ;; This function calls:
 21316 ;;		_StringCompare
 21317 ;; This function is called by:
 21318 ;;		_MyApp_Task
 21319 ;; This function uses a non-reentrant model
 21320 ;;
 21321                           
 21322                           	psect	text95
 21323  004B0E                     __ptext95:
 21324                           	opt stack 0
 21325  004B0E                     _parseCommand:
 21326                           	opt stack 15
 21327                           
 21328                           ;app.c: 91: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21329                           
 21330                           ;incstack = 0
 21331  004B0E  0E2A               	movlw	low parseCommand@F9015
 21332  004B10  6EF6               	movwf	tblptrl,c
 21333  004B12                     	if	1	;There is more than 1 active tblptr byte
 21334  004B12  0EFC               	movlw	high parseCommand@F9015
 21335  004B14  6EF7               	movwf	tblptrh,c
 21336  004B16                     	endif
 21337  004B16                     	if	0	;There are less than 3 active tblptr bytes
 21338  004B16                     	endif
 21339  004B16  0009               	tblrd		*+
 21340  004B18  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21341  004B1C  0009               	tblrd		*+
 21342  004B1E  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21343  004B22  000A               	tblrd		*-
 21344  004B24  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21345                           
 21346                           ;app.c: 92: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21347  004B28  0E27               	movlw	low parseCommand@F9017
 21348  004B2A  6EF6               	movwf	tblptrl,c
 21349  004B2C                     	if	1	;There is more than 1 active tblptr byte
 21350  004B2C  0EFC               	movlw	high parseCommand@F9017
 21351  004B2E  6EF7               	movwf	tblptrh,c
 21352  004B30                     	endif
 21353  004B30                     	if	0	;There are less than 3 active tblptr bytes
 21354  004B30                     	endif
 21355  004B30  0009               	tblrd		*+
 21356  004B32  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21357  004B36  0009               	tblrd		*+
 21358  004B38  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21359  004B3C  000A               	tblrd		*-
 21360  004B3E  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21361                           
 21362                           ;app.c: 93: gateFsmStates state = GATE_WAIT_EVENT;
 21363  004B42  0E03               	movlw	3
 21364  004B44  0100               	movlb	0	; () banked
 21365  004B46  6F90               	movwf	parseCommand@state& (0+255),b
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;app.c: 95: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21369  004B48  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21370  004B4C  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21371  004B50  0E8A               	movlw	low parseCommand@addNumberCmd
 21372  004B52  6F7F               	movwf	StringCompare@String2& (0+255),b
 21373  004B54  0E00               	movlw	high parseCommand@addNumberCmd
 21374  004B56  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21375  004B58  0E00               	movlw	0
 21376  004B5A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21377  004B5C  0E03               	movlw	3
 21378  004B5E  6F81               	movwf	StringCompare@Len& (0+255),b
 21379  004B60  EC89  F02C         	call	_StringCompare	;wreg free
 21380  004B64  0900               	iorlw	0
 21381  004B66  B4D8               	btfsc	status,2,c
 21382  004B68  D002               	goto	l2574
 21383                           
 21384                           ;app.c: 96: {
 21385                           ;app.c: 97: state = GATE_ADD_CMD;
 21386  004B6A  0E04               	movlw	4
 21387  004B6C  D013               	goto	L23
 21388  004B6E                     l2574:
 21389                           
 21390                           ;app.c: 99: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21391                           
 21392                           ; BSR set to: 0
 21393  004B6E  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21394  004B72  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21395  004B76  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21396  004B78  0100               	movlb	0	; () banked
 21397  004B7A  6F7F               	movwf	StringCompare@String2& (0+255),b
 21398  004B7C  0E00               	movlw	high parseCommand@deleteNumberCmd
 21399  004B7E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21400  004B80  0E00               	movlw	0
 21401  004B82  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21402  004B84  0E03               	movlw	3
 21403  004B86  6F81               	movwf	StringCompare@Len& (0+255),b
 21404  004B88  EC89  F02C         	call	_StringCompare	;wreg free
 21405  004B8C  0900               	iorlw	0
 21406  004B8E  B4D8               	btfsc	status,2,c
 21407  004B90  D003               	goto	l2576
 21408                           
 21409                           ;app.c: 100: {
 21410                           ;app.c: 101: state = GATE_DEL_CMD;
 21411  004B92  0E05               	movlw	5
 21412  004B94                     L23:
 21413  004B94  0100               	movlb	0	; () banked
 21414  004B96  6F90               	movwf	parseCommand@state& (0+255),b
 21415  004B98                     l2576:
 21416                           
 21417                           ;app.c: 106: }
 21418                           ;app.c: 107: return state;
 21419                           
 21420                           ; BSR set to: 0
 21421                           
 21422                           ; BSR set to: 0
 21423                           
 21424                           ;app.c: 103: else
 21425                           ;app.c: 104: {
 21426                           
 21427                           ; BSR set to: 0
 21428  004B98  0100               	movlb	0	; () banked
 21429  004B9A  5190               	movf	parseCommand@state& (0+255),w,b
 21430  004B9C  0012               	return	
 21431  004B9E                     __end_of_parseCommand:
 21432                           	opt stack 0
 21433                           tosu	equ	0xFFF
 21434                           tosh	equ	0xFFE
 21435                           tosl	equ	0xFFD
 21436                           pclath	equ	0xFFA
 21437                           tblptru	equ	0xFF8
 21438                           tblptrh	equ	0xFF7
 21439                           tblptrl	equ	0xFF6
 21440                           tablat	equ	0xFF5
 21441                           prodh	equ	0xFF4
 21442                           prodl	equ	0xFF3
 21443                           intcon	equ	0xFF2
 21444                           intcon2	equ	0xFF1
 21445                           intcon3	equ	0xFF0
 21446                           indf0	equ	0xFEF
 21447                           postinc0	equ	0xFEE
 21448                           plusw0	equ	0xFEB
 21449                           fsr0h	equ	0xFEA
 21450                           fsr0l	equ	0xFE9
 21451                           wreg	equ	0xFE8
 21452                           indf1	equ	0xFE7
 21453                           postinc1	equ	0xFE6
 21454                           postdec1	equ	0xFE5
 21455                           fsr1h	equ	0xFE2
 21456                           fsr1l	equ	0xFE1
 21457                           indf2	equ	0xFDF
 21458                           postinc2	equ	0xFDE
 21459                           postdec2	equ	0xFDD
 21460                           plusw2	equ	0xFDB
 21461                           fsr2h	equ	0xFDA
 21462                           fsr2l	equ	0xFD9
 21463                           status	equ	0xFD8
 21464                           
 21465 ;; *************** function _isNumberInMemory *****************
 21466 ;; Defined at:
 21467 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21468 ;; Parameters:    Size  Location     Type
 21469 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21470 ;;		 -> callerNumber(13), 
 21471 ;; Auto vars:     Size  Location     Type
 21472 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21473 ;;  memoryOpResu    1   18[BANK1 ] enum E8244
 21474 ;;  positionInMe    1   17[BANK1 ] unsigned char 
 21475 ;;  searchInProg    1   16[BANK1 ] const unsigned char 
 21476 ;;  searchFailed    1   15[BANK1 ] const unsigned char 
 21477 ;; Return value:  Size  Location     Type
 21478 ;;                  1    wreg      unsigned char 
 21479 ;; Registers used:
 21480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21481 ;; Tracked objects:
 21482 ;;		On entry : 0/0
 21483 ;;		On exit  : 0/0
 21484 ;;		Unchanged: 0/0
 21485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21486 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21487 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21489 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21490 ;;Total ram usage:       19 bytes
 21491 ;; Hardware stack levels used:    1
 21492 ;; Hardware stack levels required when called:   17
 21493 ;; This function calls:
 21494 ;;		_Eeprom_Read
 21495 ;;		_StringCompare
 21496 ;;		_isNumberValid
 21497 ;; This function is called by:
 21498 ;;		_MyApp_Task
 21499 ;; This function uses a non-reentrant model
 21500 ;;
 21501                           
 21502                           	psect	text96
 21503  004DD8                     __ptext96:
 21504                           	opt stack 0
 21505  004DD8                     _isNumberInMemory:
 21506                           	opt stack 10
 21507                           
 21508                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;incstack = 0
 21512  004DD8  0E00               	movlw	0
 21513  004DDA  0101               	movlb	1	; () banked
 21514  004DDC  6F10               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21515                           
 21516                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21517  004DDE  0E01               	movlw	1
 21518  004DE0  6F0F               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21519                           
 21520                           ; BSR set to: 1
 21521                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21522                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21523  004DE2  C110  F111         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21524                           
 21525                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21526                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21527  004DE6  0E02               	movlw	2
 21528  004DE8  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21529                           
 21530                           ; BSR set to: 1
 21531                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21532  004DEA  0E9F               	movlw	159
 21533  004DEC  0100               	movlb	0	; () banked
 21534  004DEE  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21535  004DF0  D002               	goto	l2787
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;app_gate.c: 184: {
 21539                           ;app_gate.c: 185: currentPosition = 16;
 21540  004DF2  0E10               	movlw	16
 21541  004DF4  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21542  004DF6                     l2787:
 21543                           
 21544                           ; BSR set to: 0
 21545                           ;app_gate.c: 186: }
 21546                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21547                           
 21548                           ; BSR set to: 0
 21549  004DF6  0E02               	movlw	low isNumberInMemory@readBuffer
 21550  004DF8  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21551  004DFA  0E01               	movlw	high isNumberInMemory@readBuffer
 21552  004DFC  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21553  004DFE  0E0D               	movlw	13
 21554  004E00  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21555  004E02  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21556  004E04  ECE2  F02B         	call	_Eeprom_Read
 21557  004E08  0101               	movlb	1	; () banked
 21558  004E0A  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21562  004E0C  0E02               	movlw	2
 21563  004E0E  1912               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21564  004E10  B4D8               	btfsc	status,2,c
 21565  004E12  D024               	goto	l2788
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;app_gate.c: 189: {
 21569                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21570  004E14  0E02               	movlw	low isNumberInMemory@readBuffer
 21571  004E16  0100               	movlb	0	; () banked
 21572  004E18  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21573  004E1A  0E01               	movlw	high isNumberInMemory@readBuffer
 21574  004E1C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21575  004E1E  ECEE  F029         	call	_isNumberValid	;wreg free
 21576  004E22  0900               	iorlw	0
 21577  004E24  B4D8               	btfsc	status,2,c
 21578  004E26  D017               	goto	l2790
 21579                           
 21580                           ;app_gate.c: 191: {
 21581                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21582  004E28  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21583  004E2C  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21584  004E30  0E02               	movlw	low isNumberInMemory@readBuffer
 21585  004E32  0100               	movlb	0	; () banked
 21586  004E34  6F7F               	movwf	StringCompare@String2& (0+255),b
 21587  004E36  0E01               	movlw	high isNumberInMemory@readBuffer
 21588  004E38  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21589  004E3A  0E00               	movlw	0
 21590  004E3C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21591  004E3E  0E0D               	movlw	13
 21592  004E40  6F81               	movwf	StringCompare@Len& (0+255),b
 21593  004E42  EC89  F02C         	call	_StringCompare	;wreg free
 21594  004E46  0900               	iorlw	0
 21595  004E48  B4D8               	btfsc	status,2,c
 21596  004E4A  D005               	goto	l2790
 21597                           
 21598                           ;app_gate.c: 193: {
 21599                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21600  004E4C  C0E2  F111         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21601                           
 21602                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21603  004E50  0EA0               	movlw	160
 21604  004E52  0100               	movlb	0	; () banked
 21605  004E54  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21606  004E56                     l2790:
 21607                           
 21608                           ;app_gate.c: 200: }
 21609                           ;app_gate.c: 202: }
 21610                           ;app_gate.c: 203: currentPosition += 16;
 21611                           
 21612                           ; BSR set to: 0
 21613                           
 21614                           ; BSR set to: 0
 21615                           
 21616                           ;app_gate.c: 197: else
 21617                           ;app_gate.c: 198: {
 21618                           
 21619                           ; BSR set to: 0
 21620  004E56  0E10               	movlw	16
 21621  004E58  0100               	movlb	0	; () banked
 21622  004E5A  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21623  004E5C                     l2788:
 21624                           
 21625                           ;app_gate.c: 204: }
 21626                           ;app_gate.c: 205: return positionInMemory;
 21627                           
 21628                           ; BSR set to: 0
 21629  004E5C  0101               	movlb	1	; () banked
 21630  004E5E  5111               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21631  004E60  0012               	return	
 21632  004E62                     __end_of_isNumberInMemory:
 21633                           	opt stack 0
 21634                           tosu	equ	0xFFF
 21635                           tosh	equ	0xFFE
 21636                           tosl	equ	0xFFD
 21637                           pclath	equ	0xFFA
 21638                           tblptru	equ	0xFF8
 21639                           tblptrh	equ	0xFF7
 21640                           tblptrl	equ	0xFF6
 21641                           tablat	equ	0xFF5
 21642                           prodh	equ	0xFF4
 21643                           prodl	equ	0xFF3
 21644                           intcon	equ	0xFF2
 21645                           intcon2	equ	0xFF1
 21646                           intcon3	equ	0xFF0
 21647                           indf0	equ	0xFEF
 21648                           postinc0	equ	0xFEE
 21649                           plusw0	equ	0xFEB
 21650                           fsr0h	equ	0xFEA
 21651                           fsr0l	equ	0xFE9
 21652                           wreg	equ	0xFE8
 21653                           indf1	equ	0xFE7
 21654                           postinc1	equ	0xFE6
 21655                           postdec1	equ	0xFE5
 21656                           fsr1h	equ	0xFE2
 21657                           fsr1l	equ	0xFE1
 21658                           indf2	equ	0xFDF
 21659                           postinc2	equ	0xFDE
 21660                           postdec2	equ	0xFDD
 21661                           plusw2	equ	0xFDB
 21662                           fsr2h	equ	0xFDA
 21663                           fsr2l	equ	0xFD9
 21664                           status	equ	0xFD8
 21665                           
 21666 ;; *************** function _isNumberValid *****************
 21667 ;; Defined at:
 21668 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 21669 ;; Parameters:    Size  Location     Type
 21670 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 21671 ;;		 -> isNumberInMemory@readBuffer(13), smsText(20), 
 21672 ;; Auto vars:     Size  Location     Type
 21673 ;;  i               1   33[BANK0 ] unsigned char 
 21674 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 21675 ;; Return value:  Size  Location     Type
 21676 ;;                  1    wreg      unsigned char 
 21677 ;; Registers used:
 21678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21679 ;; Tracked objects:
 21680 ;;		On entry : 0/0
 21681 ;;		On exit  : 0/0
 21682 ;;		Unchanged: 0/0
 21683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21685 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21687 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21688 ;;Total ram usage:        5 bytes
 21689 ;; Hardware stack levels used:    1
 21690 ;; Hardware stack levels required when called:   11
 21691 ;; This function calls:
 21692 ;;		Nothing
 21693 ;; This function is called by:
 21694 ;;		_MyApp_Task
 21695 ;;		_isNumberInMemory
 21696 ;; This function uses a non-reentrant model
 21697 ;;
 21698                           
 21699                           	psect	text97
 21700  0053DC                     __ptext97:
 21701                           	opt stack 0
 21702  0053DC                     _isNumberValid:
 21703                           	opt stack 16
 21704                           
 21705                           ;app_gate.c: 154: bool isNumberOk = 0;
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;incstack = 0
 21709  0053DC  0E00               	movlw	0
 21710  0053DE  0100               	movlb	0	; () banked
 21711  0053E0  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21712                           
 21713                           ;app_gate.c: 155: uint8_t i = 0;
 21714  0053E2  0E00               	movlw	0
 21715  0053E4  6F81               	movwf	isNumberValid@i& (0+255),b
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 21719  0053E6  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 21720  0053EA  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 21721  0053EE  0E2B               	movlw	43
 21722  0053F0  18DE               	xorwf	postinc2,w,c
 21723  0053F2  A4D8               	btfss	status,2,c
 21724  0053F4  D024               	goto	u13890
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;app_gate.c: 157: {
 21728                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 21729  0053F6  0E01               	movlw	1
 21730  0053F8  6F81               	movwf	isNumberValid@i& (0+255),b
 21731  0053FA                     l14552:
 21732                           
 21733                           ; BSR set to: 0
 21734  0053FA  0E0C               	movlw	12
 21735  0053FC  6581               	cpfsgt	isNumberValid@i& (0+255),b
 21736  0053FE  D001               	goto	l2778
 21737  005400  D01E               	goto	u13890
 21738  005402                     l2778:
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;app_gate.c: 159: {
 21742                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 21743                           
 21744                           ; BSR set to: 0
 21745  005402  5181               	movf	isNumberValid@i& (0+255),w,b
 21746  005404  0D01               	mullw	1
 21747  005406  50F3               	movf	prodl,w,c
 21748  005408  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 21749  00540A  6ED9               	movwf	fsr2l,c
 21750  00540C  50F4               	movf	prodh,w,c
 21751  00540E  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 21752  005410  6EDA               	movwf	fsr2h,c
 21753  005412  0E2F               	movlw	47
 21754  005414  64DF               	cpfsgt	indf2,c
 21755  005416  D00E               	goto	l2780
 21756                           
 21757                           ; BSR set to: 0
 21758  005418  5181               	movf	isNumberValid@i& (0+255),w,b
 21759  00541A  0D01               	mullw	1
 21760  00541C  50F3               	movf	prodl,w,c
 21761  00541E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 21762  005420  6ED9               	movwf	fsr2l,c
 21763  005422  50F4               	movf	prodh,w,c
 21764  005424  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 21765  005426  6EDA               	movwf	fsr2h,c
 21766  005428  0E3A               	movlw	58
 21767  00542A  60DF               	cpfslt	indf2,c
 21768  00542C  D003               	goto	l2780
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;app_gate.c: 161: {
 21772                           ;app_gate.c: 162: isNumberOk = 1;
 21773  00542E  0E01               	movlw	1
 21774  005430  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21775                           
 21776                           ;app_gate.c: 163: }
 21777  005432  D003               	goto	l2781
 21778  005434                     l2780:
 21779                           
 21780                           ; BSR set to: 0
 21781                           ;app_gate.c: 164: else
 21782                           ;app_gate.c: 165: {
 21783                           ;app_gate.c: 166: isNumberOk = 0;
 21784                           
 21785                           ; BSR set to: 0
 21786  005434  0E00               	movlw	0
 21787  005436  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21788                           
 21789                           ;app_gate.c: 167: break;
 21790  005438  D002               	goto	u13890
 21791  00543A                     l2781:
 21792                           
 21793                           ; BSR set to: 0
 21794                           
 21795                           ; BSR set to: 0
 21796  00543A  2B81               	incf	isNumberValid@i& (0+255),f,b
 21797  00543C  D7DE               	goto	l14552
 21798  00543E                     u13890:
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;app_gate.c: 168: }
 21802                           ;app_gate.c: 169: }
 21803                           ;app_gate.c: 170: }
 21804                           ;app_gate.c: 171: return isNumberOk;
 21805                           
 21806                           ; BSR set to: 0
 21807                           
 21808                           ; BSR set to: 0
 21809  00543E  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 21810  005440  0012               	return	
 21811  005442                     __end_of_isNumberValid:
 21812                           	opt stack 0
 21813                           tosu	equ	0xFFF
 21814                           tosh	equ	0xFFE
 21815                           tosl	equ	0xFFD
 21816                           pclath	equ	0xFFA
 21817                           tblptru	equ	0xFF8
 21818                           tblptrh	equ	0xFF7
 21819                           tblptrl	equ	0xFF6
 21820                           tablat	equ	0xFF5
 21821                           prodh	equ	0xFF4
 21822                           prodl	equ	0xFF3
 21823                           intcon	equ	0xFF2
 21824                           intcon2	equ	0xFF1
 21825                           intcon3	equ	0xFF0
 21826                           indf0	equ	0xFEF
 21827                           postinc0	equ	0xFEE
 21828                           plusw0	equ	0xFEB
 21829                           fsr0h	equ	0xFEA
 21830                           fsr0l	equ	0xFE9
 21831                           wreg	equ	0xFE8
 21832                           indf1	equ	0xFE7
 21833                           postinc1	equ	0xFE6
 21834                           postdec1	equ	0xFE5
 21835                           fsr1h	equ	0xFE2
 21836                           fsr1l	equ	0xFE1
 21837                           indf2	equ	0xFDF
 21838                           postinc2	equ	0xFDE
 21839                           postdec2	equ	0xFDD
 21840                           plusw2	equ	0xFDB
 21841                           fsr2h	equ	0xFDA
 21842                           fsr2l	equ	0xFD9
 21843                           status	equ	0xFD8
 21844                           
 21845 ;; *************** function _initMemorizedNumbersCount *****************
 21846 ;; Defined at:
 21847 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21848 ;; Parameters:    Size  Location     Type
 21849 ;;		None
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;		None
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  1    wreg      void 
 21854 ;; Registers used:
 21855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/0
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21865 ;;Total ram usage:        0 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:   14
 21868 ;; This function calls:
 21869 ;;		_Eeprom_Write
 21870 ;;		_initPreamble
 21871 ;; This function is called by:
 21872 ;;		_MyApp_Task
 21873 ;; This function uses a non-reentrant model
 21874 ;;
 21875                           
 21876                           	psect	text98
 21877  0065C0                     __ptext98:
 21878                           	opt stack 0
 21879  0065C0                     _initMemorizedNumbersCount:
 21880                           	opt stack 13
 21881                           
 21882                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;incstack = 0
 21886  0065C0  EC7B  F031         	call	_initPreamble	;wreg free
 21887  0065C4  C07D  F087         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21888  0065C8  C07E  F088         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21889  0065CC  0E05               	movlw	5
 21890  0065CE  0100               	movlb	0	; () banked
 21891  0065D0  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21892  0065D2  0E00               	movlw	0
 21893  0065D4  EC60  F02C         	call	_Eeprom_Write
 21894  0065D8  0012               	return		;funcret
 21895  0065DA                     __end_of_initMemorizedNumbersCount:
 21896                           	opt stack 0
 21897                           tosu	equ	0xFFF
 21898                           tosh	equ	0xFFE
 21899                           tosl	equ	0xFFD
 21900                           pclath	equ	0xFFA
 21901                           tblptru	equ	0xFF8
 21902                           tblptrh	equ	0xFF7
 21903                           tblptrl	equ	0xFF6
 21904                           tablat	equ	0xFF5
 21905                           prodh	equ	0xFF4
 21906                           prodl	equ	0xFF3
 21907                           intcon	equ	0xFF2
 21908                           intcon2	equ	0xFF1
 21909                           intcon3	equ	0xFF0
 21910                           indf0	equ	0xFEF
 21911                           postinc0	equ	0xFEE
 21912                           plusw0	equ	0xFEB
 21913                           fsr0h	equ	0xFEA
 21914                           fsr0l	equ	0xFE9
 21915                           wreg	equ	0xFE8
 21916                           indf1	equ	0xFE7
 21917                           postinc1	equ	0xFE6
 21918                           postdec1	equ	0xFE5
 21919                           fsr1h	equ	0xFE2
 21920                           fsr1l	equ	0xFE1
 21921                           indf2	equ	0xFDF
 21922                           postinc2	equ	0xFDE
 21923                           postdec2	equ	0xFDD
 21924                           plusw2	equ	0xFDB
 21925                           fsr2h	equ	0xFDA
 21926                           fsr2l	equ	0xFD9
 21927                           status	equ	0xFD8
 21928                           
 21929 ;; *************** function _initPreamble *****************
 21930 ;; Defined at:
 21931 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21932 ;; Parameters:    Size  Location     Type
 21933 ;;		None
 21934 ;; Auto vars:     Size  Location     Type
 21935 ;;		None
 21936 ;; Return value:  Size  Location     Type
 21937 ;;                  2   29[BANK0 ] PTR unsigned char 
 21938 ;; Registers used:
 21939 ;;		wreg, status,2, status,0
 21940 ;; Tracked objects:
 21941 ;;		On entry : 0/0
 21942 ;;		On exit  : 0/0
 21943 ;;		Unchanged: 0/0
 21944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21949 ;;Total ram usage:        2 bytes
 21950 ;; Hardware stack levels used:    1
 21951 ;; Hardware stack levels required when called:   11
 21952 ;; This function calls:
 21953 ;;		Nothing
 21954 ;; This function is called by:
 21955 ;;		_initMemorizedNumbersCount
 21956 ;; This function uses a non-reentrant model
 21957 ;;
 21958                           
 21959                           	psect	text99
 21960  0062F6                     __ptext99:
 21961                           	opt stack 0
 21962  0062F6                     _initPreamble:
 21963                           	opt stack 15
 21964                           
 21965                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 21966                           
 21967                           ;incstack = 0
 21968  0062F6  0E55               	movlw	85
 21969  0062F8  0103               	movlb	3	; () banked
 21970  0062FA  6F94               	movwf	_memoryPreamble& (0+255),b
 21971                           
 21972                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 21973  0062FC  0E53               	movlw	83
 21974  0062FE  6F95               	movwf	(_memoryPreamble+1)& (0+255),b
 21975                           
 21976                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 21977  006300  0E49               	movlw	73
 21978  006302  6F96               	movwf	(_memoryPreamble+2)& (0+255),b
 21979                           
 21980                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 21981  006304  0E4D               	movlw	77
 21982  006306  6F97               	movwf	(_memoryPreamble+3)& (0+255),b
 21983                           
 21984                           ;app_init.c: 219: memoryPreamble[4] = 1;
 21985  006308  0E01               	movlw	1
 21986  00630A  6F98               	movwf	(_memoryPreamble+4)& (0+255),b
 21987                           
 21988                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 21989  00630C  0E01               	movlw	1
 21990  00630E  6E38               	movwf	_memorizedNumbersCount,c
 21991                           
 21992                           ; BSR set to: 3
 21993                           ;app_init.c: 221: return memoryPreamble;
 21994  006310  0E94               	movlw	low _memoryPreamble
 21995  006312  0100               	movlb	0	; () banked
 21996  006314  6F7D               	movwf	?_initPreamble& (0+255),b
 21997  006316  0E03               	movlw	high _memoryPreamble
 21998  006318  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21999  00631A  0012               	return	
 22000  00631C                     __end_of_initPreamble:
 22001                           	opt stack 0
 22002                           tosu	equ	0xFFF
 22003                           tosh	equ	0xFFE
 22004                           tosl	equ	0xFFD
 22005                           pclath	equ	0xFFA
 22006                           tblptru	equ	0xFF8
 22007                           tblptrh	equ	0xFF7
 22008                           tblptrl	equ	0xFF6
 22009                           tablat	equ	0xFF5
 22010                           prodh	equ	0xFF4
 22011                           prodl	equ	0xFF3
 22012                           intcon	equ	0xFF2
 22013                           intcon2	equ	0xFF1
 22014                           intcon3	equ	0xFF0
 22015                           indf0	equ	0xFEF
 22016                           postinc0	equ	0xFEE
 22017                           plusw0	equ	0xFEB
 22018                           fsr0h	equ	0xFEA
 22019                           fsr0l	equ	0xFE9
 22020                           wreg	equ	0xFE8
 22021                           indf1	equ	0xFE7
 22022                           postinc1	equ	0xFE6
 22023                           postdec1	equ	0xFE5
 22024                           fsr1h	equ	0xFE2
 22025                           fsr1l	equ	0xFE1
 22026                           indf2	equ	0xFDF
 22027                           postinc2	equ	0xFDE
 22028                           postdec2	equ	0xFDD
 22029                           plusw2	equ	0xFDB
 22030                           fsr2h	equ	0xFDA
 22031                           fsr2l	equ	0xFD9
 22032                           status	equ	0xFD8
 22033                           
 22034 ;; *************** function _Eeprom_Write *****************
 22035 ;; Defined at:
 22036 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22037 ;; Parameters:    Size  Location     Type
 22038 ;;  MemoryAddres    1    wreg     unsigned char 
 22039 ;;  WriteBuffer     2   39[BANK0 ] PTR unsigned char 
 22040 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), callerNumber(13), 
 22041 ;;  DataLength      1   41[BANK0 ] unsigned char 
 22042 ;; Auto vars:     Size  Location     Type
 22043 ;;  MemoryAddres    1   43[BANK0 ] unsigned char 
 22044 ;;  CommandLengt    1   45[BANK0 ] const unsigned char 
 22045 ;;  SlaveAddress    1   44[BANK0 ] const unsigned char 
 22046 ;;  WriteSts        1   42[BANK0 ] unsigned char 
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1    wreg      unsigned char 
 22049 ;; Registers used:
 22050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22051 ;; Tracked objects:
 22052 ;;		On entry : 0/0
 22053 ;;		On exit  : 0/0
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22056 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22059 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22060 ;;Total ram usage:        7 bytes
 22061 ;; Hardware stack levels used:    1
 22062 ;; Hardware stack levels required when called:   13
 22063 ;; This function calls:
 22064 ;;		_I2cSlv_SendI2cMsg
 22065 ;;		_StringCopy
 22066 ;; This function is called by:
 22067 ;;		_saveNumberInMemory
 22068 ;;		_initMemorizedNumbersCount
 22069 ;;		_incrementMemorizedNumbersCount
 22070 ;;		_decrementMemorizedNumbersCount
 22071 ;; This function uses a non-reentrant model
 22072 ;;
 22073                           
 22074                           	psect	text100
 22075  0058C0                     __ptext100:
 22076                           	opt stack 0
 22077  0058C0                     _Eeprom_Write:
 22078                           	opt stack 13
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;incstack = 0
 22082                           ;Eeprom_Write@MemoryAddress stored from wreg
 22083  0058C0  0100               	movlb	0	; () banked
 22084  0058C2  6F8B               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22085                           
 22086                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22087  0058C4  0E50               	movlw	80
 22088  0058C6  0100               	movlb	0	; () banked
 22089  0058C8  6F8C               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22090                           
 22091                           ; BSR set to: 0
 22092                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22093  0058CA  2989               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22094  0058CC  6F8D               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22098  0058CE  0E00               	movlw	0
 22099  0058D0  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22100                           
 22101                           ; BSR set to: 0
 22102                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22103  0058D2  0E10               	movlw	16
 22104  0058D4  618D               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22105  0058D6  0012               	return	
 22106                           
 22107                           ; BSR set to: 0
 22108                           ;eeprom_if.c: 85: {
 22109                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22110  0058D8  C08B  F4BD         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22114  0058DC  C087  F07D         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22115  0058E0  C088  F07E         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22116  0058E4  0EBE               	movlw	low (_EepromBuffer+1)
 22117  0058E6  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22118  0058E8  0E04               	movlw	high (_EepromBuffer+1)
 22119  0058EA  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22120  0058EC  C089  F081         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22121  0058F0  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22122  0058F2  EC21  F02A         	call	_StringCopy	;wreg free
 22123                           
 22124                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22125  0058F6  0EBD               	movlw	low _EepromBuffer
 22126  0058F8  0100               	movlb	0	; () banked
 22127  0058FA  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22128  0058FC  0E04               	movlw	high _EepromBuffer
 22129  0058FE  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22130  005900  C08C  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22131  005904  C08D  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22132  005908  EC81  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 22133  00590C  0100               	movlb	0	; () banked
 22134  00590E  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22135                           
 22136                           ; BSR set to: 0
 22137  005910  0012               	return	
 22138  005912                     __end_of_Eeprom_Write:
 22139                           	opt stack 0
 22140                           tosu	equ	0xFFF
 22141                           tosh	equ	0xFFE
 22142                           tosl	equ	0xFFD
 22143                           pclath	equ	0xFFA
 22144                           tblptru	equ	0xFF8
 22145                           tblptrh	equ	0xFF7
 22146                           tblptrl	equ	0xFF6
 22147                           tablat	equ	0xFF5
 22148                           prodh	equ	0xFF4
 22149                           prodl	equ	0xFF3
 22150                           intcon	equ	0xFF2
 22151                           intcon2	equ	0xFF1
 22152                           intcon3	equ	0xFF0
 22153                           indf0	equ	0xFEF
 22154                           postinc0	equ	0xFEE
 22155                           plusw0	equ	0xFEB
 22156                           fsr0h	equ	0xFEA
 22157                           fsr0l	equ	0xFE9
 22158                           wreg	equ	0xFE8
 22159                           indf1	equ	0xFE7
 22160                           postinc1	equ	0xFE6
 22161                           postdec1	equ	0xFE5
 22162                           fsr1h	equ	0xFE2
 22163                           fsr1l	equ	0xFE1
 22164                           indf2	equ	0xFDF
 22165                           postinc2	equ	0xFDE
 22166                           postdec2	equ	0xFDD
 22167                           plusw2	equ	0xFDB
 22168                           fsr2h	equ	0xFDA
 22169                           fsr2l	equ	0xFD9
 22170                           status	equ	0xFD8
 22171                           
 22172 ;; *************** function _initFsm *****************
 22173 ;; Defined at:
 22174 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22175 ;; Parameters:    Size  Location     Type
 22176 ;;		None
 22177 ;; Auto vars:     Size  Location     Type
 22178 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22179 ;; Return value:  Size  Location     Type
 22180 ;;                  1    wreg      unsigned char 
 22181 ;; Registers used:
 22182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22183 ;; Tracked objects:
 22184 ;;		On entry : 0/0
 22185 ;;		On exit  : 0/0
 22186 ;;		Unchanged: 0/0
 22187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22189 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22191 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22192 ;;Total ram usage:        1 bytes
 22193 ;; Hardware stack levels used:    1
 22194 ;; Hardware stack levels required when called:   18
 22195 ;; This function calls:
 22196 ;;		_initEeprom
 22197 ;;		_initGprsModem
 22198 ;; This function is called by:
 22199 ;;		_MyApp_Task
 22200 ;; This function uses a non-reentrant model
 22201 ;;
 22202                           
 22203                           	psect	text101
 22204  005C1C                     __ptext101:
 22205                           	opt stack 0
 22206  005C1C                     _initFsm:
 22207                           	opt stack 9
 22208                           
 22209                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22210                           ;app_init.c: 180: bool isInitialized = 0;
 22211                           
 22212                           ; BSR set to: 0
 22213                           ;incstack = 0
 22214  005C1C  0E00               	movlw	0
 22215  005C1E  0101               	movlb	1	; () banked
 22216  005C20  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22217                           
 22218                           ;app_init.c: 182: switch (currentState)
 22219  005C22  D013               	goto	l2691
 22220  005C24                     
 22221                           ; BSR set to: 1
 22222                           ;app_init.c: 185: if (initGprsModem())
 22223                           
 22224                           ; BSR set to: 1
 22225  005C24  ECCF  F025         	call	_initGprsModem	;wreg free
 22226  005C28  0900               	iorlw	0
 22227  005C2A  B4D8               	btfsc	status,2,c
 22228  005C2C  D018               	goto	l2694
 22229                           
 22230                           ;app_init.c: 186: {
 22231                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22232  005C2E  0E01               	movlw	1
 22233  005C30  D006               	goto	L24
 22234  005C32                     
 22235                           ; BSR set to: 1
 22236                           ;app_init.c: 192: if (initEeprom())
 22237                           
 22238                           ; BSR set to: 1
 22239  005C32  EC31  F027         	call	_initEeprom	;wreg free
 22240  005C36  0900               	iorlw	0
 22241  005C38  B4D8               	btfsc	status,2,c
 22242  005C3A  D011               	goto	l2694
 22243                           
 22244                           ;app_init.c: 193: {
 22245                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22246  005C3C  0E02               	movlw	2
 22247  005C3E                     L24:
 22248  005C3E  0101               	movlb	1	; () banked
 22249  005C40  6FD3               	movwf	initFsm@currentState& (0+255),b
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;app_init.c: 195: }
 22253                           ;app_init.c: 196: break;
 22254  005C42  D00D               	goto	l2694
 22255  005C44                     
 22256                           ; BSR set to: 1
 22257                           ;app_init.c: 199: isInitialized = 1;
 22258                           
 22259                           ; BSR set to: 1
 22260  005C44  0E01               	movlw	1
 22261  005C46  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22262                           
 22263                           ; BSR set to: 1
 22264                           ;app_init.c: 204: }
 22265                           
 22266                           ; BSR set to: 1
 22267                           ;app_init.c: 203: break;
 22268                           
 22269                           ;app_init.c: 202: default:
 22270                           
 22271                           ;app_init.c: 200: break;
 22272  005C48  D00A               	goto	l2694
 22273  005C4A                     l2691:
 22274                           
 22275                           ; BSR set to: 1
 22276                           
 22277                           ; BSR set to: 1
 22278  005C4A  51D3               	movf	initFsm@currentState& (0+255),w,b
 22279                           
 22280                           ; Switch size 1, requested type "space"
 22281                           ; Number of cases is 3, Range of values is 0 to 2
 22282                           ; switch strategies available:
 22283                           ; Name         Instructions Cycles
 22284                           ; simple_byte           10     6 (average)
 22285                           ;	Chosen strategy is simple_byte
 22286  005C4C  0A00               	xorlw	0	; case 0
 22287  005C4E  B4D8               	btfsc	status,2,c
 22288  005C50  D7E9               	goto	l2692
 22289  005C52  0A01               	xorlw	1	; case 1
 22290  005C54  B4D8               	btfsc	status,2,c
 22291  005C56  D7ED               	goto	l2695
 22292  005C58  0A03               	xorlw	3	; case 2
 22293  005C5A  B4D8               	btfsc	status,2,c
 22294  005C5C  D7F3               	goto	l2697
 22295  005C5E                     l2694:
 22296                           
 22297                           ;app_init.c: 205: return isInitialized;
 22298                           
 22299                           ; BSR set to: 1
 22300  005C5E  0101               	movlb	1	; () banked
 22301  005C60  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22302  005C62  0012               	return	
 22303  005C64                     __end_of_initFsm:
 22304                           	opt stack 0
 22305                           tosu	equ	0xFFF
 22306                           tosh	equ	0xFFE
 22307                           tosl	equ	0xFFD
 22308                           pclath	equ	0xFFA
 22309                           tblptru	equ	0xFF8
 22310                           tblptrh	equ	0xFF7
 22311                           tblptrl	equ	0xFF6
 22312                           tablat	equ	0xFF5
 22313                           prodh	equ	0xFF4
 22314                           prodl	equ	0xFF3
 22315                           intcon	equ	0xFF2
 22316                           intcon2	equ	0xFF1
 22317                           intcon3	equ	0xFF0
 22318                           indf0	equ	0xFEF
 22319                           postinc0	equ	0xFEE
 22320                           plusw0	equ	0xFEB
 22321                           fsr0h	equ	0xFEA
 22322                           fsr0l	equ	0xFE9
 22323                           wreg	equ	0xFE8
 22324                           indf1	equ	0xFE7
 22325                           postinc1	equ	0xFE6
 22326                           postdec1	equ	0xFE5
 22327                           fsr1h	equ	0xFE2
 22328                           fsr1l	equ	0xFE1
 22329                           indf2	equ	0xFDF
 22330                           postinc2	equ	0xFDE
 22331                           postdec2	equ	0xFDD
 22332                           plusw2	equ	0xFDB
 22333                           fsr2h	equ	0xFDA
 22334                           fsr2l	equ	0xFD9
 22335                           status	equ	0xFD8
 22336                           
 22337 ;; *************** function _initGprsModem *****************
 22338 ;; Defined at:
 22339 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22340 ;; Parameters:    Size  Location     Type
 22341 ;;		None
 22342 ;; Auto vars:     Size  Location     Type
 22343 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22344 ;; Return value:  Size  Location     Type
 22345 ;;                  1    wreg      unsigned char 
 22346 ;; Registers used:
 22347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22348 ;; Tracked objects:
 22349 ;;		On entry : 0/0
 22350 ;;		On exit  : 0/0
 22351 ;;		Unchanged: 0/0
 22352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22356 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22357 ;;Total ram usage:        1 bytes
 22358 ;; Hardware stack levels used:    1
 22359 ;; Hardware stack levels required when called:   14
 22360 ;; This function calls:
 22361 ;;		_Mdm_SetSmsFormat
 22362 ;;		_Uart_WriteConstString
 22363 ;;		_secondsAppTimer
 22364 ;; This function is called by:
 22365 ;;		_initFsm
 22366 ;; This function uses a non-reentrant model
 22367 ;;
 22368                           
 22369                           	psect	text102
 22370  004B9E                     __ptext102:
 22371                           	opt stack 0
 22372  004B9E                     _initGprsModem:
 22373                           	opt stack 12
 22374                           
 22375                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22376                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22377                           ;app_init.c: 88: bool isInitialized = 0;
 22378                           
 22379                           ; BSR set to: 1
 22380                           ;incstack = 0
 22381  004B9E  0E00               	movlw	0
 22382  004BA0  0100               	movlb	0	; () banked
 22383  004BA2  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22384                           
 22385                           ;app_init.c: 90: switch(currentState)
 22386  004BA4  D033               	goto	l2661
 22387  004BA6                     
 22388                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22389                           
 22390                           ; BSR set to: 0
 22391  004BA6  0E03               	movlw	3
 22392  004BA8  0100               	movlb	0	; () banked
 22393  004BAA  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22394  004BAC  B4D8               	btfsc	status,2,c
 22395  004BAE  D003               	goto	u13910
 22396                           
 22397                           ; BSR set to: 0
 22398  004BB0  05D1               	decf	_MdmStatus& (0+255),w,b
 22399  004BB2  A4D8               	btfss	status,2,c
 22400  004BB4  D039               	goto	l2667
 22401  004BB6                     u13910:
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;app_init.c: 94: {
 22405                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22406                           
 22407                           ; BSR set to: 0
 22408  004BB6  0EB5               	movlw	low initGprsModem@modemCounter
 22409  004BB8  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22410  004BBA  0E03               	movlw	high initGprsModem@modemCounter
 22411  004BBC  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22412  004BBE  0E00               	movlw	0
 22413  004BC0  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22414  004BC2  0E05               	movlw	5
 22415  004BC4  EC21  F023         	call	_secondsAppTimer
 22416  004BC8  0900               	iorlw	0
 22417  004BCA  B4D8               	btfsc	status,2,c
 22418  004BCC  D02D               	goto	l2667
 22419                           
 22420                           ;app_init.c: 96: {
 22421                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22422  004BCE  0E01               	movlw	1
 22423  004BD0  EC02  F02D         	call	_Mdm_SetSmsFormat
 22424                           
 22425                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22426  004BD4  0E01               	movlw	1
 22427  004BD6  D013               	goto	L26
 22428  004BD8                     
 22429                           ; BSR set to: 1
 22430                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22431                           
 22432                           ; BSR set to: 1
 22433  004BD8  0EF9               	movlw	low STR_31
 22434  004BDA  0100               	movlb	0	; () banked
 22435  004BDC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22436  004BDE  0EFE               	movlw	high STR_31
 22437  004BE0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22438  004BE2  0E01               	movlw	1
 22439  004BE4  EC00  F02F         	call	_Uart_WriteConstString
 22440                           
 22441                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22442  004BE8  0E02               	movlw	2
 22443  004BEA  D009               	goto	L26
 22444  004BEC                     
 22445                           ; BSR set to: 1
 22446                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22447                           
 22448                           ; BSR set to: 1
 22449  004BEC  0EA9               	movlw	low STR_32
 22450  004BEE  0100               	movlb	0	; () banked
 22451  004BF0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22452  004BF2  0EFF               	movlw	high STR_32
 22453  004BF4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22454  004BF6  0E01               	movlw	1
 22455  004BF8  EC00  F02F         	call	_Uart_WriteConstString
 22456                           
 22457                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22458  004BFC  0E03               	movlw	3
 22459  004BFE                     L26:
 22460  004BFE  0101               	movlb	1	; () banked
 22461  004C00  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22462                           
 22463                           ;app_init.c: 111: break;
 22464  004C02  D012               	goto	l2667
 22465  004C04                     
 22466                           ; BSR set to: 1
 22467                           ;app_init.c: 114: isInitialized = 1;
 22468                           
 22469                           ; BSR set to: 1
 22470  004C04  0E01               	movlw	1
 22471  004C06  0100               	movlb	0	; () banked
 22472  004C08  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;app_init.c: 119: }
 22476                           
 22477                           ; BSR set to: 0
 22478                           ;app_init.c: 118: break;
 22479                           
 22480                           ;app_init.c: 117: default:
 22481                           
 22482                           ;app_init.c: 115: break;
 22483  004C0A  D00E               	goto	l2667
 22484  004C0C                     l2661:
 22485                           
 22486                           ; BSR set to: 0
 22487                           
 22488                           ; BSR set to: 0
 22489  004C0C  0101               	movlb	1	; () banked
 22490  004C0E  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22491                           
 22492                           ; Switch size 1, requested type "space"
 22493                           ; Number of cases is 4, Range of values is 0 to 3
 22494                           ; switch strategies available:
 22495                           ; Name         Instructions Cycles
 22496                           ; simple_byte           13     7 (average)
 22497                           ;	Chosen strategy is simple_byte
 22498  004C10  0A00               	xorlw	0	; case 0
 22499  004C12  B4D8               	btfsc	status,2,c
 22500  004C14  D7C8               	goto	l2662
 22501  004C16  0A01               	xorlw	1	; case 1
 22502  004C18  B4D8               	btfsc	status,2,c
 22503  004C1A  D7DE               	goto	l2668
 22504  004C1C  0A03               	xorlw	3	; case 2
 22505  004C1E  B4D8               	btfsc	status,2,c
 22506  004C20  D7E5               	goto	l2669
 22507  004C22  0A01               	xorlw	1	; case 3
 22508  004C24  B4D8               	btfsc	status,2,c
 22509  004C26  D7EE               	goto	l2670
 22510  004C28                     l2667:
 22511                           
 22512                           ;app_init.c: 120: return isInitialized;
 22513                           
 22514                           ; BSR set to: 1
 22515  004C28  0100               	movlb	0	; () banked
 22516  004C2A  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22517  004C2C  0012               	return	
 22518  004C2E                     __end_of_initGprsModem:
 22519                           	opt stack 0
 22520                           tosu	equ	0xFFF
 22521                           tosh	equ	0xFFE
 22522                           tosl	equ	0xFFD
 22523                           pclath	equ	0xFFA
 22524                           tblptru	equ	0xFF8
 22525                           tblptrh	equ	0xFF7
 22526                           tblptrl	equ	0xFF6
 22527                           tablat	equ	0xFF5
 22528                           prodh	equ	0xFF4
 22529                           prodl	equ	0xFF3
 22530                           intcon	equ	0xFF2
 22531                           intcon2	equ	0xFF1
 22532                           intcon3	equ	0xFF0
 22533                           indf0	equ	0xFEF
 22534                           postinc0	equ	0xFEE
 22535                           plusw0	equ	0xFEB
 22536                           fsr0h	equ	0xFEA
 22537                           fsr0l	equ	0xFE9
 22538                           wreg	equ	0xFE8
 22539                           indf1	equ	0xFE7
 22540                           postinc1	equ	0xFE6
 22541                           postdec1	equ	0xFE5
 22542                           fsr1h	equ	0xFE2
 22543                           fsr1l	equ	0xFE1
 22544                           indf2	equ	0xFDF
 22545                           postinc2	equ	0xFDE
 22546                           postdec2	equ	0xFDD
 22547                           plusw2	equ	0xFDB
 22548                           fsr2h	equ	0xFDA
 22549                           fsr2l	equ	0xFD9
 22550                           status	equ	0xFD8
 22551                           
 22552 ;; *************** function _secondsAppTimer *****************
 22553 ;; Defined at:
 22554 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22555 ;; Parameters:    Size  Location     Type
 22556 ;;  seconds         1    wreg     unsigned char 
 22557 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22558 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22559 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;  seconds         1   47[BANK0 ] unsigned char 
 22562 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22563 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22564 ;; Return value:  Size  Location     Type
 22565 ;;                  1    wreg      unsigned char 
 22566 ;; Registers used:
 22567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22568 ;; Tracked objects:
 22569 ;;		On entry : 0/0
 22570 ;;		On exit  : 0/0
 22571 ;;		Unchanged: 0/0
 22572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22573 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22574 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22576 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22577 ;;Total ram usage:        9 bytes
 22578 ;; Hardware stack levels used:    1
 22579 ;; Hardware stack levels required when called:   12
 22580 ;; This function calls:
 22581 ;;		___lwdiv
 22582 ;;		___wmul
 22583 ;; This function is called by:
 22584 ;;		_initGprsModem
 22585 ;;		_waitSetupCall
 22586 ;;		_blinkForSeconds
 22587 ;; This function uses a non-reentrant model
 22588 ;;
 22589                           
 22590                           	psect	text103
 22591  004642                     __ptext103:
 22592                           	opt stack 0
 22593  004642                     _secondsAppTimer:
 22594                           	opt stack 14
 22595                           
 22596                           ; BSR set to: 0
 22597                           ;incstack = 0
 22598                           ;secondsAppTimer@seconds stored from wreg
 22599  004642  0100               	movlb	0	; () banked
 22600  004644  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22601                           
 22602                           ;app_utils.c: 68: bool isExpired = 1;
 22603  004646  0E01               	movlw	1
 22604  004648  0100               	movlb	0	; () banked
 22605  00464A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22609  00464C  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22610  004650  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22611  004652  0E03               	movlw	3
 22612  004654  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22613  004656  0EE8               	movlw	232
 22614  004658  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22615  00465A  EC67  F031         	call	___wmul	;wreg free
 22616  00465E  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22617  004662  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22618  004666  0E00               	movlw	0
 22619  004668  0100               	movlb	0	; () banked
 22620  00466A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22621  00466C  0E64               	movlw	100
 22622  00466E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22623  004670  EC36  F02C         	call	___lwdiv	;wreg free
 22624  004674  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22625  004678  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22626                           
 22627                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22628  00467C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22629  004680  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22630  004684  0100               	movlb	0	; () banked
 22631  004686  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22632  004688  5CDE               	subwf	postinc2,w,c
 22633  00468A  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22634  00468C  58DE               	subwfb	postinc2,w,c
 22635  00468E  B0D8               	btfsc	status,0,c
 22636  004690  D009               	goto	l2713
 22637                           
 22638                           ; BSR set to: 0
 22639                           ;app_utils.c: 72: {
 22640                           ;app_utils.c: 73: *counter += 1;
 22641  004692  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22642  004696  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22643  00469A  2ADE               	incf	postinc2,f,c
 22644  00469C  0E00               	movlw	0
 22645  00469E  22DD               	addwfc	postdec2,f,c
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;app_utils.c: 74: isExpired = 0;
 22649  0046A0  0E00               	movlw	0
 22650  0046A2  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22651  0046A4                     l2713:
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;app_utils.c: 75: }
 22655                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22656                           
 22657                           ; BSR set to: 0
 22658  0046A4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22659  0046A8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22660  0046AC  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22661  0046AE  18DE               	xorwf	postinc2,w,c
 22662  0046B0  E117               	bnz	l13700
 22663  0046B2  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22664  0046B4  18DE               	xorwf	postinc2,w,c
 22665  0046B6  A4D8               	btfss	status,2,c
 22666  0046B8  D013               	goto	l2716
 22667                           
 22668                           ; BSR set to: 0
 22669                           ;app_utils.c: 77: {
 22670                           ;app_utils.c: 78: if (isCyclic)
 22671  0046BA  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22672  0046BC  B4D8               	btfsc	status,2,c
 22673  0046BE  D008               	goto	l2715
 22674                           
 22675                           ; BSR set to: 0
 22676                           ;app_utils.c: 79: {
 22677                           ;app_utils.c: 80: *counter = 0;
 22678  0046C0  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22679  0046C4  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22680  0046C8  0E00               	movlw	0
 22681  0046CA  6EDE               	movwf	postinc2,c
 22682  0046CC  0E00               	movlw	0
 22683  0046CE  D007               	goto	L27
 22684  0046D0                     l2715:
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;app_utils.c: 82: else
 22688                           ;app_utils.c: 83: {
 22689                           ;app_utils.c: 84: *counter = 0xFFFF;
 22690                           
 22691                           ; BSR set to: 0
 22692  0046D0  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22693  0046D4  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22694  0046D8  0EFF               	movlw	255
 22695  0046DA  6EDE               	movwf	postinc2,c
 22696  0046DC  0EFF               	movlw	255
 22697  0046DE                     L27:
 22698  0046DE  6EDD               	movwf	postdec2,c
 22699  0046E0                     l2716:
 22700  0046E0                     l13700:
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;app_utils.c: 85: }
 22704                           ;app_utils.c: 86: }
 22705                           ;app_utils.c: 87: return isExpired;
 22706  0046E0  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22707  0046E2  0012               	return	
 22708  0046E4                     __end_of_secondsAppTimer:
 22709                           	opt stack 0
 22710                           tosu	equ	0xFFF
 22711                           tosh	equ	0xFFE
 22712                           tosl	equ	0xFFD
 22713                           pclath	equ	0xFFA
 22714                           tblptru	equ	0xFF8
 22715                           tblptrh	equ	0xFF7
 22716                           tblptrl	equ	0xFF6
 22717                           tablat	equ	0xFF5
 22718                           prodh	equ	0xFF4
 22719                           prodl	equ	0xFF3
 22720                           intcon	equ	0xFF2
 22721                           intcon2	equ	0xFF1
 22722                           intcon3	equ	0xFF0
 22723                           indf0	equ	0xFEF
 22724                           postinc0	equ	0xFEE
 22725                           plusw0	equ	0xFEB
 22726                           fsr0h	equ	0xFEA
 22727                           fsr0l	equ	0xFE9
 22728                           wreg	equ	0xFE8
 22729                           indf1	equ	0xFE7
 22730                           postinc1	equ	0xFE6
 22731                           postdec1	equ	0xFE5
 22732                           fsr1h	equ	0xFE2
 22733                           fsr1l	equ	0xFE1
 22734                           indf2	equ	0xFDF
 22735                           postinc2	equ	0xFDE
 22736                           postdec2	equ	0xFDD
 22737                           plusw2	equ	0xFDB
 22738                           fsr2h	equ	0xFDA
 22739                           fsr2l	equ	0xFD9
 22740                           status	equ	0xFD8
 22741                           
 22742 ;; *************** function _Mdm_SetSmsFormat *****************
 22743 ;; Defined at:
 22744 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22745 ;; Parameters:    Size  Location     Type
 22746 ;;  TextFormat      1    wreg     unsigned char 
 22747 ;; Auto vars:     Size  Location     Type
 22748 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22749 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22750 ;;  Index           1   35[BANK0 ] unsigned char 
 22751 ;; Return value:  Size  Location     Type
 22752 ;;                  1    wreg      void 
 22753 ;; Registers used:
 22754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22755 ;; Tracked objects:
 22756 ;;		On entry : 0/0
 22757 ;;		On exit  : 0/0
 22758 ;;		Unchanged: 0/0
 22759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22761 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22763 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22764 ;;Total ram usage:       22 bytes
 22765 ;; Hardware stack levels used:    1
 22766 ;; Hardware stack levels required when called:   13
 22767 ;; This function calls:
 22768 ;;		_Uart_WriteString
 22769 ;; This function is called by:
 22770 ;;		_initGprsModem
 22771 ;; This function uses a non-reentrant model
 22772 ;;
 22773                           
 22774                           	psect	text104
 22775  005A04                     __ptext104:
 22776                           	opt stack 0
 22777  005A04                     _Mdm_SetSmsFormat:
 22778                           	opt stack 12
 22779                           
 22780                           ; BSR set to: 0
 22781                           ;incstack = 0
 22782                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22783  005A04  0100               	movlb	0	; () banked
 22784  005A06  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22785                           
 22786                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22787                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22788  005A08  0E00               	movlw	0
 22789  005A0A  0100               	movlb	0	; () banked
 22790  005A0C  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22791                           
 22792                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22793  005A0E  0E41               	movlw	65
 22794  005A10  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22795                           
 22796                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22797  005A12  0E54               	movlw	84
 22798  005A14  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22799                           
 22800                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22801  005A16  0E2B               	movlw	43
 22802  005A18  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22803                           
 22804                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22805  005A1A  0E43               	movlw	67
 22806  005A1C  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22807                           
 22808                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22809  005A1E  0E4D               	movlw	77
 22810  005A20  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22811                           
 22812                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22813  005A22  0E47               	movlw	71
 22814  005A24  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22815                           
 22816                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22817  005A26  0E46               	movlw	70
 22818  005A28  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22819                           
 22820                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22821  005A2A  0E3D               	movlw	61
 22822  005A2C  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22823                           
 22824                           ; BSR set to: 0
 22825                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22826  005A2E  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22827  005A30  A4D8               	btfss	status,2,c
 22828  005A32  D002               	goto	l1121
 22829                           
 22830                           ; BSR set to: 0
 22831                           ;mdm_gsm_gprs.c: 854: {
 22832                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22833  005A34  0E31               	movlw	49
 22834  005A36  D001               	goto	L28
 22835  005A38                     l1121:
 22836                           
 22837                           ; BSR set to: 0
 22838                           ;mdm_gsm_gprs.c: 857: else
 22839                           ;mdm_gsm_gprs.c: 858: {
 22840                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22841                           
 22842                           ; BSR set to: 0
 22843  005A38  0E30               	movlw	48
 22844  005A3A                     L28:
 22845  005A3A  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;mdm_gsm_gprs.c: 860: }
 22849                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22850  005A3C  0E0D               	movlw	13
 22851  005A3E  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22852                           
 22853                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22854  005A40  0E00               	movlw	0
 22855  005A42  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22856                           
 22857                           ; BSR set to: 0
 22858                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22859  005A44  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22860  005A46  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22861  005A48  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22862  005A4A  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22863  005A4C  0E01               	movlw	1
 22864  005A4E  ECA0  F02F         	call	_Uart_WriteString
 22865  005A52  0012               	return		;funcret
 22866  005A54                     __end_of_Mdm_SetSmsFormat:
 22867                           	opt stack 0
 22868                           tosu	equ	0xFFF
 22869                           tosh	equ	0xFFE
 22870                           tosl	equ	0xFFD
 22871                           pclath	equ	0xFFA
 22872                           tblptru	equ	0xFF8
 22873                           tblptrh	equ	0xFF7
 22874                           tblptrl	equ	0xFF6
 22875                           tablat	equ	0xFF5
 22876                           prodh	equ	0xFF4
 22877                           prodl	equ	0xFF3
 22878                           intcon	equ	0xFF2
 22879                           intcon2	equ	0xFF1
 22880                           intcon3	equ	0xFF0
 22881                           indf0	equ	0xFEF
 22882                           postinc0	equ	0xFEE
 22883                           plusw0	equ	0xFEB
 22884                           fsr0h	equ	0xFEA
 22885                           fsr0l	equ	0xFE9
 22886                           wreg	equ	0xFE8
 22887                           indf1	equ	0xFE7
 22888                           postinc1	equ	0xFE6
 22889                           postdec1	equ	0xFE5
 22890                           fsr1h	equ	0xFE2
 22891                           fsr1l	equ	0xFE1
 22892                           indf2	equ	0xFDF
 22893                           postinc2	equ	0xFDE
 22894                           postdec2	equ	0xFDD
 22895                           plusw2	equ	0xFDB
 22896                           fsr2h	equ	0xFDA
 22897                           fsr2l	equ	0xFD9
 22898                           status	equ	0xFD8
 22899                           
 22900 ;; *************** function _initEeprom *****************
 22901 ;; Defined at:
 22902 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22903 ;; Parameters:    Size  Location     Type
 22904 ;;		None
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22907 ;;  memoryOpResu    1    1[BANK1 ] enum E8244
 22908 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22909 ;; Return value:  Size  Location     Type
 22910 ;;                  1    wreg      unsigned char 
 22911 ;; Registers used:
 22912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22913 ;; Tracked objects:
 22914 ;;		On entry : 0/0
 22915 ;;		On exit  : 0/0
 22916 ;;		Unchanged: 0/0
 22917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22919 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22921 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22922 ;;Total ram usage:        3 bytes
 22923 ;; Hardware stack levels used:    1
 22924 ;; Hardware stack levels required when called:   17
 22925 ;; This function calls:
 22926 ;;		_Eeprom_Read
 22927 ;; This function is called by:
 22928 ;;		_initFsm
 22929 ;; This function uses a non-reentrant model
 22930 ;;
 22931                           
 22932                           	psect	text105
 22933  004E62                     __ptext105:
 22934                           	opt stack 0
 22935  004E62                     _initEeprom:
 22936                           	opt stack 9
 22937                           
 22938                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22939                           
 22940                           ;incstack = 0
 22941  004E62  0E00               	movlw	0
 22942  004E64  0101               	movlb	1	; () banked
 22943  004E66  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22944                           
 22945                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22946                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22947  004E68  0E02               	movlw	2
 22948  004E6A  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22949                           
 22950                           ;app_init.c: 132: bool isInitialized = 0;
 22951  004E6C  0E00               	movlw	0
 22952  004E6E  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22953                           
 22954                           ;app_init.c: 134: switch (currentState)
 22955  004E70  D031               	goto	l2677
 22956  004E72                     
 22957                           ; BSR set to: 1
 22958                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 22959                           
 22960                           ; BSR set to: 1
 22961  004E72  0E94               	movlw	low _memoryPreamble
 22962  004E74  0100               	movlb	0	; () banked
 22963  004E76  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22964  004E78  0E03               	movlw	high _memoryPreamble
 22965  004E7A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22966  004E7C  0E05               	movlw	5
 22967  004E7E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22968  004E80  0E00               	movlw	0
 22969  004E82  ECE2  F02B         	call	_Eeprom_Read
 22970  004E86  0101               	movlb	1	; () banked
 22971  004E88  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22972                           
 22973                           ; BSR set to: 1
 22974                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 22975  004E8A  0E02               	movlw	2
 22976  004E8C  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22977  004E8E  B4D8               	btfsc	status,2,c
 22978  004E90  D02B               	goto	l2682
 22979                           
 22980                           ; BSR set to: 1
 22981                           ;app_init.c: 139: {
 22982                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 22983                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 22984                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 22985                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 22986  004E92  0E55               	movlw	85
 22987  004E94  0103               	movlb	3	; () banked
 22988  004E96  1994               	xorwf	_memoryPreamble& (0+255),w,b
 22989  004E98  A4D8               	btfss	status,2,c
 22990  004E9A  D00E               	goto	l2680
 22991                           
 22992                           ; BSR set to: 3
 22993  004E9C  0E53               	movlw	83
 22994  004E9E  1995               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22995  004EA0  A4D8               	btfss	status,2,c
 22996  004EA2  D00A               	goto	l2680
 22997                           
 22998                           ; BSR set to: 3
 22999  004EA4  0E49               	movlw	73
 23000  004EA6  1996               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 23001  004EA8  A4D8               	btfss	status,2,c
 23002  004EAA  D006               	goto	l2680
 23003                           
 23004                           ; BSR set to: 3
 23005  004EAC  0E4D               	movlw	77
 23006  004EAE  1997               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 23007  004EB0  A4D8               	btfss	status,2,c
 23008  004EB2  D002               	goto	l2680
 23009                           
 23010                           ; BSR set to: 3
 23011                           ;app_init.c: 144: {
 23012                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23013  004EB4  0E02               	movlw	2
 23014  004EB6  D003               	goto	L29
 23015  004EB8                     l2680:
 23016                           
 23017                           ; BSR set to: 3
 23018                           ;app_init.c: 147: else
 23019                           ;app_init.c: 148: {
 23020                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23021  004EB8  C398  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23022                           
 23023                           ; BSR set to: 3
 23024                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23025  004EBC  0E01               	movlw	1
 23026  004EBE                     L29:
 23027  004EBE  0101               	movlb	1	; () banked
 23028  004EC0  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23029                           
 23030                           ; BSR set to: 1
 23031                           ;app_init.c: 151: }
 23032                           ;app_init.c: 152: }
 23033                           ;app_init.c: 153: break;
 23034                           
 23035                           ; BSR set to: 1
 23036  004EC2  D012               	goto	l2682
 23037  004EC4                     
 23038                           ; BSR set to: 1
 23039                           ;app_init.c: 156: isInitialized = 1;
 23040                           
 23041                           ; BSR set to: 1
 23042  004EC4  0E01               	movlw	1
 23043  004EC6  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23044                           
 23045                           ;app_init.c: 157: break;
 23046  004EC8  D00F               	goto	l2682
 23047  004ECA                     
 23048                           ; BSR set to: 1
 23049                           ;app_init.c: 160: isInitialized = 1;
 23050                           
 23051                           ; BSR set to: 1
 23052  004ECA  0E01               	movlw	1
 23053  004ECC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23054                           
 23055                           ;app_init.c: 161: isMemoryEmpty = 0;
 23056  004ECE  0E00               	movlw	0
 23057  004ED0  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23058                           
 23059                           ; BSR set to: 1
 23060                           ;app_init.c: 166: }
 23061                           
 23062                           ; BSR set to: 1
 23063                           ;app_init.c: 165: break;
 23064                           
 23065                           ;app_init.c: 164: default:
 23066                           
 23067                           ;app_init.c: 162: break;
 23068  004ED2  D00A               	goto	l2682
 23069  004ED4                     l2677:
 23070                           
 23071                           ; BSR set to: 1
 23072                           
 23073                           ; BSR set to: 1
 23074  004ED4  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23075                           
 23076                           ; Switch size 1, requested type "space"
 23077                           ; Number of cases is 3, Range of values is 0 to 2
 23078                           ; switch strategies available:
 23079                           ; Name         Instructions Cycles
 23080                           ; simple_byte           10     6 (average)
 23081                           ;	Chosen strategy is simple_byte
 23082  004ED6  0A00               	xorlw	0	; case 0
 23083  004ED8  B4D8               	btfsc	status,2,c
 23084  004EDA  D7CB               	goto	l2678
 23085  004EDC  0A01               	xorlw	1	; case 1
 23086  004EDE  B4D8               	btfsc	status,2,c
 23087  004EE0  D7F1               	goto	l2683
 23088  004EE2  0A03               	xorlw	3	; case 2
 23089  004EE4  B4D8               	btfsc	status,2,c
 23090  004EE6  D7F1               	goto	l2684
 23091  004EE8                     l2682:
 23092                           
 23093                           ; BSR set to: 1
 23094                           ;app_init.c: 167: return isInitialized;
 23095                           
 23096                           ; BSR set to: 1
 23097  004EE8  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23098  004EEA  0012               	return	
 23099  004EEC                     __end_of_initEeprom:
 23100                           	opt stack 0
 23101                           tosu	equ	0xFFF
 23102                           tosh	equ	0xFFE
 23103                           tosl	equ	0xFFD
 23104                           pclath	equ	0xFFA
 23105                           tblptru	equ	0xFF8
 23106                           tblptrh	equ	0xFF7
 23107                           tblptrl	equ	0xFF6
 23108                           tablat	equ	0xFF5
 23109                           prodh	equ	0xFF4
 23110                           prodl	equ	0xFF3
 23111                           intcon	equ	0xFF2
 23112                           intcon2	equ	0xFF1
 23113                           intcon3	equ	0xFF0
 23114                           indf0	equ	0xFEF
 23115                           postinc0	equ	0xFEE
 23116                           plusw0	equ	0xFEB
 23117                           fsr0h	equ	0xFEA
 23118                           fsr0l	equ	0xFE9
 23119                           wreg	equ	0xFE8
 23120                           indf1	equ	0xFE7
 23121                           postinc1	equ	0xFE6
 23122                           postdec1	equ	0xFE5
 23123                           fsr1h	equ	0xFE2
 23124                           fsr1l	equ	0xFE1
 23125                           indf2	equ	0xFDF
 23126                           postinc2	equ	0xFDE
 23127                           postdec2	equ	0xFDD
 23128                           plusw2	equ	0xFDB
 23129                           fsr2h	equ	0xFDA
 23130                           fsr2l	equ	0xFD9
 23131                           status	equ	0xFD8
 23132                           
 23133 ;; *************** function _Eeprom_Read *****************
 23134 ;; Defined at:
 23135 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23136 ;; Parameters:    Size  Location     Type
 23137 ;;  MemoryAddres    1    wreg     unsigned char 
 23138 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23139 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23140 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23141 ;; Auto vars:     Size  Location     Type
 23142 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23143 ;;  QuerySts        1   79[BANK0 ] enum E8930
 23144 ;;  ReadSts         1   78[BANK0 ] enum E8956
 23145 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23146 ;; Return value:  Size  Location     Type
 23147 ;;                  1    wreg      enum E8956
 23148 ;; Registers used:
 23149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23150 ;; Tracked objects:
 23151 ;;		On entry : 0/0
 23152 ;;		On exit  : 0/0
 23153 ;;		Unchanged: 0/0
 23154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23155 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23156 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23159 ;;Total ram usage:        7 bytes
 23160 ;; Hardware stack levels used:    1
 23161 ;; Hardware stack levels required when called:   16
 23162 ;; This function calls:
 23163 ;;		_I2cSlv_QueryI2cData
 23164 ;; This function is called by:
 23165 ;;		_initEeprom
 23166 ;;		_isNumberInMemory
 23167 ;; This function uses a non-reentrant model
 23168 ;;
 23169                           
 23170                           	psect	text106
 23171  0057C4                     __ptext106:
 23172                           	opt stack 0
 23173  0057C4                     _Eeprom_Read:
 23174                           	opt stack 10
 23175                           
 23176                           ; BSR set to: 1
 23177                           ;incstack = 0
 23178                           ;Eeprom_Read@MemoryAddress stored from wreg
 23179  0057C4  0100               	movlb	0	; () banked
 23180  0057C6  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23181                           
 23182                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23183  0057C8  0E50               	movlw	80
 23184  0057CA  0100               	movlb	0	; () banked
 23185  0057CC  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23186                           
 23187                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23188  0057CE  0E00               	movlw	0
 23189  0057D0  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23190                           
 23191                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23192  0057D2  0E02               	movlw	2
 23193  0057D4  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23197  0057D6  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23201  0057DA  0EFC               	movlw	low _ReadAddress
 23202  0057DC  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23203  0057DE  0E01               	movlw	high _ReadAddress
 23204  0057E0  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23205  0057E2  0E01               	movlw	1
 23206  0057E4  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23207  0057E6  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23208  0057EA  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23209  0057EE  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23210  0057F2  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23211  0057F6  ECCE  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 23212  0057FA  0100               	movlb	0	; () banked
 23213  0057FC  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23214                           
 23215                           ; BSR set to: 0
 23216                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23217  0057FE  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23218  005800  A4D8               	btfss	status,2,c
 23219  005802  D002               	goto	l2032
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;eeprom_if.c: 114: {
 23223                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23224  005804  0E00               	movlw	0
 23225  005806  D005               	goto	L30
 23226  005808                     l2032:
 23227                           
 23228                           ; BSR set to: 0
 23229                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23230                           
 23231                           ; BSR set to: 0
 23232  005808  0E02               	movlw	2
 23233  00580A  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23234  00580C  A4D8               	btfss	status,2,c
 23235  00580E  D002               	goto	l2034
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;eeprom_if.c: 118: {
 23239                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23240  005810  0E01               	movlw	1
 23241  005812                     L30:
 23242  005812  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23243  005814                     l2034:
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;eeprom_if.c: 120: }
 23247                           ;eeprom_if.c: 121: return ReadSts;
 23248                           
 23249                           ; BSR set to: 0
 23250  005814  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23251  005816  0012               	return	
 23252  005818                     __end_of_Eeprom_Read:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclath	equ	0xFFA
 23258                           tblptru	equ	0xFF8
 23259                           tblptrh	equ	0xFF7
 23260                           tblptrl	equ	0xFF6
 23261                           tablat	equ	0xFF5
 23262                           prodh	equ	0xFF4
 23263                           prodl	equ	0xFF3
 23264                           intcon	equ	0xFF2
 23265                           intcon2	equ	0xFF1
 23266                           intcon3	equ	0xFF0
 23267                           indf0	equ	0xFEF
 23268                           postinc0	equ	0xFEE
 23269                           plusw0	equ	0xFEB
 23270                           fsr0h	equ	0xFEA
 23271                           fsr0l	equ	0xFE9
 23272                           wreg	equ	0xFE8
 23273                           indf1	equ	0xFE7
 23274                           postinc1	equ	0xFE6
 23275                           postdec1	equ	0xFE5
 23276                           fsr1h	equ	0xFE2
 23277                           fsr1l	equ	0xFE1
 23278                           indf2	equ	0xFDF
 23279                           postinc2	equ	0xFDE
 23280                           postdec2	equ	0xFDD
 23281                           plusw2	equ	0xFDB
 23282                           fsr2h	equ	0xFDA
 23283                           fsr2l	equ	0xFD9
 23284                           status	equ	0xFD8
 23285                           
 23286 ;; *************** function _I2cSlv_QueryI2cData *****************
 23287 ;; Defined at:
 23288 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23291 ;;		 -> ReadAddress(1), 
 23292 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23293 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23294 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23295 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23296 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      enum E8943
 23301 ;; Registers used:
 23302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/0
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23308 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23311 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23312 ;;Total ram usage:        7 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:   15
 23315 ;; This function calls:
 23316 ;;		_I2cSlv_I2cReadMsgSts
 23317 ;;		_I2cSlv_ReceiveI2cMsg
 23318 ;;		_I2cSlv_SendI2cMsg
 23319 ;;		_OsTmr_GetTimerStatus
 23320 ;;		_OsTmr_StartTimer
 23321 ;;		_OsTmr_Wait
 23322 ;; This function is called by:
 23323 ;;		_Eeprom_Read
 23324 ;; This function uses a non-reentrant model
 23325 ;;
 23326                           
 23327                           	psect	text107
 23328  00399C                     __ptext107:
 23329                           	opt stack 0
 23330  00399C                     _I2cSlv_QueryI2cData:
 23331                           	opt stack 10
 23332                           
 23333                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23334                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23335                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23336                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23337                           ;i2c_slv.c: 388: switch(I2cOpState)
 23338                           
 23339                           ; BSR set to: 0
 23340                           ;incstack = 0
 23341  00399C  D05B               	goto	l1437
 23342  00399E                     
 23343                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23344  00399E  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23345  0039A2  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23346  0039A6  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23347  0039AA  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23348  0039AE  EC81  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 23349                           
 23350                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23351  0039B2  0E01               	movlw	1
 23352  0039B4  0101               	movlb	1	; () banked
 23353  0039B6  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23357  0039B8  0E00               	movlw	0
 23358  0039BA  D04A               	goto	L34
 23359  0039BC                     
 23360                           ; BSR set to: 1
 23361                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23362                           
 23363                           ; BSR set to: 1
 23364  0039BC  0EE4               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23365  0039BE  0100               	movlb	0	; () banked
 23366  0039C0  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23367  0039C2  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23368  0039C4  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23369  0039C6  0EF4               	movlw	244
 23370  0039C8  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23371  0039CA  0E01               	movlw	1
 23372  0039CC  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23373  0039CE  0E00               	movlw	0
 23374  0039D0  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23375  0039D2  0E00               	movlw	0
 23376  0039D4  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23377  0039D6  ECFB  F027         	call	_OsTmr_Wait	;wreg free
 23378  0039DA  06E8               	decf	wreg,f,c
 23379  0039DC  A4D8               	btfss	status,2,c
 23380  0039DE  D036               	goto	l1445
 23381                           
 23382                           ;i2c_slv.c: 402: {
 23383                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23384  0039E0  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23385  0039E2  0100               	movlb	0	; () banked
 23386  0039E4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23387  0039E6  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23388  0039E8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23389  0039EA  0EC4               	movlw	196
 23390  0039EC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23391  0039EE  0E09               	movlw	9
 23392  0039F0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23393  0039F2  0E00               	movlw	0
 23394  0039F4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23395  0039F6  0E00               	movlw	0
 23396  0039F8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23397  0039FA  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 23398                           
 23399                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23400  0039FE  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23401  003A02  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23402  003A06  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23403  003A0A  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23404  003A0E  EC22  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23405                           
 23406                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23407  003A12  0E02               	movlw	2
 23408  003A14  0101               	movlb	1	; () banked
 23409  003A16  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23410  003A18  D019               	goto	l1445
 23411  003A1A                     
 23412                           ; BSR set to: 1
 23413                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23414                           
 23415                           ; BSR set to: 1
 23416  003A1A  EC3E  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23417  003A1E  06E8               	decf	wreg,f,c
 23418  003A20  A4D8               	btfss	status,2,c
 23419  003A22  D005               	goto	l1443
 23420                           
 23421                           ;i2c_slv.c: 414: {
 23422                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23423  003A24  0E00               	movlw	0
 23424  003A26  0101               	movlb	1	; () banked
 23425  003A28  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23426                           
 23427                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23428  003A2A  0E01               	movlw	1
 23429  003A2C  D011               	goto	L34
 23430  003A2E                     l1443:
 23431                           
 23432                           ;i2c_slv.c: 420: else
 23433                           ;i2c_slv.c: 421: {
 23434                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23435                           
 23436                           ; BSR set to: 1
 23437  003A2E  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23438  003A30  0100               	movlb	0	; () banked
 23439  003A32  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23440  003A34  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23441  003A36  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23442  003A38  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23443  003A3C  06E8               	decf	wreg,f,c
 23444  003A3E  A4D8               	btfss	status,2,c
 23445  003A40  D005               	goto	l1445
 23446                           
 23447                           ;i2c_slv.c: 423: {
 23448                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23449  003A42  0E00               	movlw	0
 23450  003A44  0101               	movlb	1	; () banked
 23451  003A46  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23452                           
 23453                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23454  003A48  0E02               	movlw	2
 23455  003A4A  D002               	goto	L34
 23456  003A4C                     l1445:
 23457                           
 23458                           ;i2c_slv.c: 429: else
 23459                           ;i2c_slv.c: 430: {
 23460                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23461                           
 23462                           ; BSR set to: 1
 23463  003A4C  0E00               	movlw	0
 23464  003A4E  0101               	movlb	1	; () banked
 23465  003A50                     L34:
 23466  003A50  6FE5               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23467                           
 23468                           ; BSR set to: 1
 23469                           ;i2c_slv.c: 439: }
 23470                           
 23471                           ; BSR set to: 1
 23472                           ;i2c_slv.c: 438: break;
 23473                           
 23474                           ;i2c_slv.c: 437: default:
 23475                           
 23476                           ; BSR set to: 1
 23477                           ;i2c_slv.c: 433: }
 23478                           ;i2c_slv.c: 434: }
 23479                           ;i2c_slv.c: 435: break;
 23480                           
 23481                           ; BSR set to: 1
 23482  003A52  D00B               	goto	l1439
 23483  003A54                     l1437:
 23484                           
 23485                           ; BSR set to: 1
 23486  003A54  0101               	movlb	1	; () banked
 23487  003A56  51E6               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 23488                           
 23489                           ; Switch size 1, requested type "space"
 23490                           ; Number of cases is 3, Range of values is 0 to 2
 23491                           ; switch strategies available:
 23492                           ; Name         Instructions Cycles
 23493                           ; simple_byte           10     6 (average)
 23494                           ;	Chosen strategy is simple_byte
 23495  003A58  0A00               	xorlw	0	; case 0
 23496  003A5A  B4D8               	btfsc	status,2,c
 23497  003A5C  D7A0               	goto	l1438
 23498  003A5E  0A01               	xorlw	1	; case 1
 23499  003A60  B4D8               	btfsc	status,2,c
 23500  003A62  D7AC               	goto	l1440
 23501  003A64  0A03               	xorlw	3	; case 2
 23502  003A66  B4D8               	btfsc	status,2,c
 23503  003A68  D7D8               	goto	l1442
 23504  003A6A                     l1439:
 23505                           
 23506                           ; BSR set to: 1
 23507                           ;i2c_slv.c: 441: return Ret;
 23508                           
 23509                           ; BSR set to: 1
 23510  003A6A  51E5               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 23511  003A6C  0012               	return	
 23512  003A6E                     __end_of_I2cSlv_QueryI2cData:
 23513                           	opt stack 0
 23514                           tosu	equ	0xFFF
 23515                           tosh	equ	0xFFE
 23516                           tosl	equ	0xFFD
 23517                           pclath	equ	0xFFA
 23518                           tblptru	equ	0xFF8
 23519                           tblptrh	equ	0xFF7
 23520                           tblptrl	equ	0xFF6
 23521                           tablat	equ	0xFF5
 23522                           prodh	equ	0xFF4
 23523                           prodl	equ	0xFF3
 23524                           intcon	equ	0xFF2
 23525                           intcon2	equ	0xFF1
 23526                           intcon3	equ	0xFF0
 23527                           indf0	equ	0xFEF
 23528                           postinc0	equ	0xFEE
 23529                           plusw0	equ	0xFEB
 23530                           fsr0h	equ	0xFEA
 23531                           fsr0l	equ	0xFE9
 23532                           wreg	equ	0xFE8
 23533                           indf1	equ	0xFE7
 23534                           postinc1	equ	0xFE6
 23535                           postdec1	equ	0xFE5
 23536                           fsr1h	equ	0xFE2
 23537                           fsr1l	equ	0xFE1
 23538                           indf2	equ	0xFDF
 23539                           postinc2	equ	0xFDE
 23540                           postdec2	equ	0xFDD
 23541                           plusw2	equ	0xFDB
 23542                           fsr2h	equ	0xFDA
 23543                           fsr2l	equ	0xFD9
 23544                           status	equ	0xFD8
 23545                           
 23546 ;; *************** function _OsTmr_Wait *****************
 23547 ;; Defined at:
 23548 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 23549 ;; Parameters:    Size  Location     Type
 23550 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 23551 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 23552 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 23553 ;; Auto vars:     Size  Location     Type
 23554 ;;  Ret             1   65[BANK0 ] enum E7749
 23555 ;; Return value:  Size  Location     Type
 23556 ;;                  1    wreg      enum E7749
 23557 ;; Registers used:
 23558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23559 ;; Tracked objects:
 23560 ;;		On entry : 0/0
 23561 ;;		On exit  : 0/0
 23562 ;;		Unchanged: 0/0
 23563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23564 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23567 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23568 ;;Total ram usage:        7 bytes
 23569 ;; Hardware stack levels used:    1
 23570 ;; Hardware stack levels required when called:   14
 23571 ;; This function calls:
 23572 ;;		_OsTmr_GetTimerStatus
 23573 ;;		_OsTmr_StartTimer
 23574 ;; This function is called by:
 23575 ;;		_I2cSlv_QueryI2cData
 23576 ;;		_Terminal
 23577 ;; This function uses a non-reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text108
 23581  004FF6                     __ptext108:
 23582                           	opt stack 0
 23583  004FF6                     _OsTmr_Wait:
 23584                           	opt stack 11
 23585                           
 23586                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 23587                           
 23588                           ; BSR set to: 1
 23589                           ;incstack = 0
 23590  004FF6  0E00               	movlw	0
 23591  004FF8  0100               	movlb	0	; () banked
 23592  004FFA  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23593                           
 23594                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 23595  004FFC  D02D               	goto	l855
 23596  004FFE                     
 23597                           ; BSR set to: 0
 23598                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 23599                           
 23600                           ; BSR set to: 0
 23601  004FFE  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 23602  005002  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 23603  005006  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 23604  00500A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 23605  00500E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 23606  005012  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 23607  005016  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 23608                           
 23609                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 23610  00501A  0100               	movlb	0	; () banked
 23611  00501C  EE20 F00A          	lfsr	2,10
 23612  005020  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23613  005022  26D9               	addwf	fsr2l,f,c
 23614  005024  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23615  005026  22DA               	addwfc	fsr2h,f,c
 23616  005028  0E01               	movlw	1
 23617  00502A  6EDF               	movwf	indf2,c
 23618                           
 23619                           ;os_timers.c: 165: break;
 23620  00502C  D022               	goto	l857
 23621  00502E                     
 23622                           ; BSR set to: 0
 23623                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 23624                           
 23625                           ; BSR set to: 0
 23626  00502E  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 23627  005032  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 23628  005036  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23629  00503A  06E8               	decf	wreg,f,c
 23630  00503C  A4D8               	btfss	status,2,c
 23631  00503E  D019               	goto	l857
 23632                           
 23633                           ;os_timers.c: 170: {
 23634                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 23635  005040  0100               	movlb	0	; () banked
 23636  005042  EE20 F00A          	lfsr	2,10
 23637  005046  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23638  005048  26D9               	addwf	fsr2l,f,c
 23639  00504A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23640  00504C  22DA               	addwfc	fsr2h,f,c
 23641  00504E  0E00               	movlw	0
 23642  005050  6EDF               	movwf	indf2,c
 23643                           
 23644                           ; BSR set to: 0
 23645                           ;os_timers.c: 174: Ret = DelayExpired;
 23646  005052  0E01               	movlw	1
 23647  005054  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;os_timers.c: 180: }
 23651                           
 23652                           ; BSR set to: 0
 23653                           ;os_timers.c: 179: break;
 23654                           
 23655                           ;os_timers.c: 178: default:
 23656                           
 23657                           ; BSR set to: 0
 23658                           ;os_timers.c: 175: }
 23659                           ;os_timers.c: 176: break;
 23660  005056  D00D               	goto	l857
 23661  005058                     l855:
 23662                           
 23663                           ; BSR set to: 0
 23664                           
 23665                           ; BSR set to: 0
 23666  005058  EE20 F00A          	lfsr	2,10
 23667  00505C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23668  00505E  26D9               	addwf	fsr2l,f,c
 23669  005060  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23670  005062  22DA               	addwfc	fsr2h,f,c
 23671  005064  50DF               	movf	indf2,w,c
 23672                           
 23673                           ; Switch size 1, requested type "space"
 23674                           ; Number of cases is 2, Range of values is 0 to 1
 23675                           ; switch strategies available:
 23676                           ; Name         Instructions Cycles
 23677                           ; simple_byte            7     4 (average)
 23678                           ;	Chosen strategy is simple_byte
 23679  005066  0A00               	xorlw	0	; case 0
 23680  005068  B4D8               	btfsc	status,2,c
 23681  00506A  D7C9               	goto	l856
 23682  00506C  0A01               	xorlw	1	; case 1
 23683  00506E  B4D8               	btfsc	status,2,c
 23684  005070  D7DE               	goto	l858
 23685  005072                     l857:
 23686                           
 23687                           ;os_timers.c: 182: return Ret;
 23688                           
 23689                           ; BSR set to: 0
 23690  005072  0100               	movlb	0	; () banked
 23691  005074  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 23692  005076  0012               	return	
 23693  005078                     __end_of_OsTmr_Wait:
 23694                           	opt stack 0
 23695                           tosu	equ	0xFFF
 23696                           tosh	equ	0xFFE
 23697                           tosl	equ	0xFFD
 23698                           pclath	equ	0xFFA
 23699                           tblptru	equ	0xFF8
 23700                           tblptrh	equ	0xFF7
 23701                           tblptrl	equ	0xFF6
 23702                           tablat	equ	0xFF5
 23703                           prodh	equ	0xFF4
 23704                           prodl	equ	0xFF3
 23705                           intcon	equ	0xFF2
 23706                           intcon2	equ	0xFF1
 23707                           intcon3	equ	0xFF0
 23708                           indf0	equ	0xFEF
 23709                           postinc0	equ	0xFEE
 23710                           plusw0	equ	0xFEB
 23711                           fsr0h	equ	0xFEA
 23712                           fsr0l	equ	0xFE9
 23713                           wreg	equ	0xFE8
 23714                           indf1	equ	0xFE7
 23715                           postinc1	equ	0xFE6
 23716                           postdec1	equ	0xFE5
 23717                           fsr1h	equ	0xFE2
 23718                           fsr1l	equ	0xFE1
 23719                           indf2	equ	0xFDF
 23720                           postinc2	equ	0xFDE
 23721                           postdec2	equ	0xFDD
 23722                           plusw2	equ	0xFDB
 23723                           fsr2h	equ	0xFDA
 23724                           fsr2l	equ	0xFD9
 23725                           status	equ	0xFD8
 23726                           
 23727 ;; *************** function _I2cSlv_SendI2cMsg *****************
 23728 ;; Defined at:
 23729 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23730 ;; Parameters:    Size  Location     Type
 23731 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 23732 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 23733 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 23734 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 23735 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 23736 ;; Auto vars:     Size  Location     Type
 23737 ;;  TxSts           1   36[BANK0 ] unsigned char 
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  1    wreg      unsigned char 
 23740 ;; Registers used:
 23741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23742 ;; Tracked objects:
 23743 ;;		On entry : 0/0
 23744 ;;		On exit  : 0/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23750 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23751 ;;Total ram usage:        5 bytes
 23752 ;; Hardware stack levels used:    1
 23753 ;; Hardware stack levels required when called:   12
 23754 ;; This function calls:
 23755 ;;		_GenerateEvt
 23756 ;; This function is called by:
 23757 ;;		_I2cSlv_QueryI2cData
 23758 ;;		_Eeprom_Write
 23759 ;;		_Terminal
 23760 ;;		_triggerRelay
 23761 ;; This function uses a non-reentrant model
 23762 ;;
 23763                           
 23764                           	psect	text109
 23765  005F02                     __ptext109:
 23766                           	opt stack 0
 23767  005F02                     _I2cSlv_SendI2cMsg:
 23768                           	opt stack 13
 23769                           
 23770                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 23771                           
 23772                           ; BSR set to: 0
 23773                           ;incstack = 0
 23774  005F02  0E00               	movlw	0
 23775  005F04  0100               	movlb	0	; () banked
 23776  005F06  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 23780  005F08  05CE               	decf	_I2cComSts& (0+255),w,b
 23781  005F0A  B4D8               	btfsc	status,2,c
 23782  005F0C  D015               	goto	l1409
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;i2c_slv.c: 257: {
 23786                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 23787  005F0E  C082  F399         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 23791  005F12  0E00               	movlw	0
 23792  005F14  0103               	movlb	3	; () banked
 23793  005F16  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 23794                           
 23795                           ; BSR set to: 3
 23796                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 23797  005F18  C083  F39D         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 23798                           
 23799                           ; BSR set to: 3
 23800                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 23801  005F1C  C080  F39B         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 23802  005F20  C081  F39C         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 23803                           
 23804                           ; BSR set to: 3
 23805                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 23806  005F24  0ED8               	movlw	low _I2cWriteDataEvt
 23807  005F26  0100               	movlb	0	; () banked
 23808  005F28  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23809  005F2A  0E00               	movlw	high _I2cWriteDataEvt
 23810  005F2C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23811  005F2E  EC05  F033         	call	_GenerateEvt	;wreg free
 23812                           
 23813                           ;i2c_slv.c: 267: TxSts = 1u;
 23814  005F32  0E01               	movlw	1
 23815  005F34  0100               	movlb	0	; () banked
 23816  005F36  D001               	goto	L35
 23817  005F38                     l1409:
 23818                           
 23819                           ; BSR set to: 0
 23820                           ;i2c_slv.c: 269: else
 23821                           ;i2c_slv.c: 270: {
 23822                           ;i2c_slv.c: 272: TxSts = 0u;
 23823                           
 23824                           ; BSR set to: 0
 23825  005F38  0E00               	movlw	0
 23826  005F3A                     L35:
 23827  005F3A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 23828                           
 23829                           ; BSR set to: 0
 23830                           ;i2c_slv.c: 273: }
 23831                           ;i2c_slv.c: 275: return TxSts;
 23832  005F3C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 23833  005F3E  0012               	return	
 23834  005F40                     __end_of_I2cSlv_SendI2cMsg:
 23835                           	opt stack 0
 23836                           tosu	equ	0xFFF
 23837                           tosh	equ	0xFFE
 23838                           tosl	equ	0xFFD
 23839                           pclath	equ	0xFFA
 23840                           tblptru	equ	0xFF8
 23841                           tblptrh	equ	0xFF7
 23842                           tblptrl	equ	0xFF6
 23843                           tablat	equ	0xFF5
 23844                           prodh	equ	0xFF4
 23845                           prodl	equ	0xFF3
 23846                           intcon	equ	0xFF2
 23847                           intcon2	equ	0xFF1
 23848                           intcon3	equ	0xFF0
 23849                           indf0	equ	0xFEF
 23850                           postinc0	equ	0xFEE
 23851                           plusw0	equ	0xFEB
 23852                           fsr0h	equ	0xFEA
 23853                           fsr0l	equ	0xFE9
 23854                           wreg	equ	0xFE8
 23855                           indf1	equ	0xFE7
 23856                           postinc1	equ	0xFE6
 23857                           postdec1	equ	0xFE5
 23858                           fsr1h	equ	0xFE2
 23859                           fsr1l	equ	0xFE1
 23860                           indf2	equ	0xFDF
 23861                           postinc2	equ	0xFDE
 23862                           postdec2	equ	0xFDD
 23863                           plusw2	equ	0xFDB
 23864                           fsr2h	equ	0xFDA
 23865                           fsr2l	equ	0xFD9
 23866                           status	equ	0xFD8
 23867                           
 23868 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 23869 ;; Defined at:
 23870 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 23873 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 23874 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 23875 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 23876 ;; Auto vars:     Size  Location     Type
 23877 ;;  RxSts           1   36[BANK0 ] unsigned char 
 23878 ;; Return value:  Size  Location     Type
 23879 ;;                  1    wreg      unsigned char 
 23880 ;; Registers used:
 23881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23882 ;; Tracked objects:
 23883 ;;		On entry : 0/0
 23884 ;;		On exit  : 0/0
 23885 ;;		Unchanged: 0/0
 23886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23891 ;;Total ram usage:        5 bytes
 23892 ;; Hardware stack levels used:    1
 23893 ;; Hardware stack levels required when called:   12
 23894 ;; This function calls:
 23895 ;;		_GenerateEvt
 23896 ;; This function is called by:
 23897 ;;		_I2cSlv_QueryI2cData
 23898 ;;		_Terminal
 23899 ;; This function uses a non-reentrant model
 23900 ;;
 23901                           
 23902                           	psect	text110
 23903  005E44                     __ptext110:
 23904                           	opt stack 0
 23905  005E44                     _I2cSlv_ReceiveI2cMsg:
 23906                           	opt stack 13
 23907                           
 23908                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 23909                           
 23910                           ; BSR set to: 0
 23911                           ;incstack = 0
 23912  005E44  0E00               	movlw	0
 23913  005E46  0100               	movlb	0	; () banked
 23914  005E48  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23915                           
 23916                           ; BSR set to: 0
 23917                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 23918  005E4A  0E02               	movlw	2
 23919  005E4C  19CE               	xorwf	_I2cComSts& (0+255),w,b
 23920  005E4E  B4D8               	btfsc	status,2,c
 23921  005E50  D016               	goto	l1414
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;i2c_slv.c: 294: {
 23925                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 23926  005E52  C082  F38E         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 23927                           
 23928                           ; BSR set to: 0
 23929                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 23930  005E56  0E01               	movlw	1
 23931  005E58  0103               	movlb	3	; () banked
 23932  005E5A  6F8F               	movwf	(_I2cRxPacket+1)& (0+255),b
 23933                           
 23934                           ; BSR set to: 3
 23935                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 23936  005E5C  C083  F392         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 23937                           
 23938                           ; BSR set to: 3
 23939                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 23940  005E60  C080  F390         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 23941  005E64  C081  F391         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 23942                           
 23943                           ; BSR set to: 3
 23944                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 23945  005E68  0ED7               	movlw	low _I2cReadDataEvt
 23946  005E6A  0100               	movlb	0	; () banked
 23947  005E6C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23948  005E6E  0E00               	movlw	high _I2cReadDataEvt
 23949  005E70  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23950  005E72  EC05  F033         	call	_GenerateEvt	;wreg free
 23951                           
 23952                           ;i2c_slv.c: 304: RxSts = 1u;
 23953  005E76  0E01               	movlw	1
 23954  005E78  0100               	movlb	0	; () banked
 23955  005E7A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23956                           
 23957                           ;i2c_slv.c: 305: }
 23958  005E7C  0012               	return	
 23959  005E7E                     l1414:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;i2c_slv.c: 306: else
 23963                           ;i2c_slv.c: 307: {
 23964                           ;i2c_slv.c: 309: RxSts = 0u;
 23965                           
 23966                           ; BSR set to: 0
 23967  005E7E  0E00               	movlw	0
 23968  005E80  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23969                           
 23970                           ; BSR set to: 0
 23971  005E82  0012               	return	
 23972  005E84                     __end_of_I2cSlv_ReceiveI2cMsg:
 23973                           	opt stack 0
 23974                           tosu	equ	0xFFF
 23975                           tosh	equ	0xFFE
 23976                           tosl	equ	0xFFD
 23977                           pclath	equ	0xFFA
 23978                           tblptru	equ	0xFF8
 23979                           tblptrh	equ	0xFF7
 23980                           tblptrl	equ	0xFF6
 23981                           tablat	equ	0xFF5
 23982                           prodh	equ	0xFF4
 23983                           prodl	equ	0xFF3
 23984                           intcon	equ	0xFF2
 23985                           intcon2	equ	0xFF1
 23986                           intcon3	equ	0xFF0
 23987                           indf0	equ	0xFEF
 23988                           postinc0	equ	0xFEE
 23989                           plusw0	equ	0xFEB
 23990                           fsr0h	equ	0xFEA
 23991                           fsr0l	equ	0xFE9
 23992                           wreg	equ	0xFE8
 23993                           indf1	equ	0xFE7
 23994                           postinc1	equ	0xFE6
 23995                           postdec1	equ	0xFE5
 23996                           fsr1h	equ	0xFE2
 23997                           fsr1l	equ	0xFE1
 23998                           indf2	equ	0xFDF
 23999                           postinc2	equ	0xFDE
 24000                           postdec2	equ	0xFDD
 24001                           plusw2	equ	0xFDB
 24002                           fsr2h	equ	0xFDA
 24003                           fsr2l	equ	0xFD9
 24004                           status	equ	0xFD8
 24005                           
 24006 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24007 ;; Defined at:
 24008 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24009 ;; Parameters:    Size  Location     Type
 24010 ;;		None
 24011 ;; Auto vars:     Size  Location     Type
 24012 ;;  Result          1   33[BANK0 ] enum E8931
 24013 ;; Return value:  Size  Location     Type
 24014 ;;                  1    wreg      enum E8931
 24015 ;; Registers used:
 24016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24017 ;; Tracked objects:
 24018 ;;		On entry : 0/0
 24019 ;;		On exit  : 0/0
 24020 ;;		Unchanged: 0/0
 24021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24026 ;;Total ram usage:        1 bytes
 24027 ;; Hardware stack levels used:    1
 24028 ;; Hardware stack levels required when called:   12
 24029 ;; This function calls:
 24030 ;;		_ReceiveEvt
 24031 ;; This function is called by:
 24032 ;;		_I2cSlv_QueryI2cData
 24033 ;;		_Terminal
 24034 ;; This function uses a non-reentrant model
 24035 ;;
 24036                           
 24037                           	psect	text111
 24038  00647C                     __ptext111:
 24039                           	opt stack 0
 24040  00647C                     _I2cSlv_I2cReadMsgSts:
 24041                           	opt stack 13
 24042                           
 24043                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24044                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24045                           
 24046                           ; BSR set to: 0
 24047                           ;incstack = 0
 24048  00647C  0E93               	movlw	low (_I2cRxPacket+5)
 24049  00647E  0100               	movlb	0	; () banked
 24050  006480  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24051  006482  0E03               	movlw	high (_I2cRxPacket+5)
 24052  006484  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24053  006486  EC10  F031         	call	_ReceiveEvt	;wreg free
 24054  00648A  0900               	iorlw	0
 24055  00648C  B4D8               	btfsc	status,2,c
 24056  00648E  D002               	goto	l1419
 24057                           
 24058                           ;i2c_slv.c: 331: {
 24059                           ;i2c_slv.c: 332: Result = MessageReceived;
 24060  006490  0E01               	movlw	1
 24061  006492  D001               	goto	L36
 24062  006494                     l1419:
 24063                           
 24064                           ;i2c_slv.c: 334: else
 24065                           ;i2c_slv.c: 335: {
 24066                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24067                           
 24068                           ; BSR set to: 0
 24069  006494  0E00               	movlw	0
 24070  006496                     L36:
 24071  006496  0100               	movlb	0	; () banked
 24072  006498  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24073                           
 24074                           ; BSR set to: 0
 24075                           ;i2c_slv.c: 337: }
 24076                           ;i2c_slv.c: 339: return Result;
 24077  00649A  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24078  00649C  0012               	return	
 24079  00649E                     __end_of_I2cSlv_I2cReadMsgSts:
 24080                           	opt stack 0
 24081                           tosu	equ	0xFFF
 24082                           tosh	equ	0xFFE
 24083                           tosl	equ	0xFFD
 24084                           pclath	equ	0xFFA
 24085                           tblptru	equ	0xFF8
 24086                           tblptrh	equ	0xFF7
 24087                           tblptrl	equ	0xFF6
 24088                           tablat	equ	0xFF5
 24089                           prodh	equ	0xFF4
 24090                           prodl	equ	0xFF3
 24091                           intcon	equ	0xFF2
 24092                           intcon2	equ	0xFF1
 24093                           intcon3	equ	0xFF0
 24094                           indf0	equ	0xFEF
 24095                           postinc0	equ	0xFEE
 24096                           plusw0	equ	0xFEB
 24097                           fsr0h	equ	0xFEA
 24098                           fsr0l	equ	0xFE9
 24099                           wreg	equ	0xFE8
 24100                           indf1	equ	0xFE7
 24101                           postinc1	equ	0xFE6
 24102                           postdec1	equ	0xFE5
 24103                           fsr1h	equ	0xFE2
 24104                           fsr1l	equ	0xFE1
 24105                           indf2	equ	0xFDF
 24106                           postinc2	equ	0xFDE
 24107                           postdec2	equ	0xFDD
 24108                           plusw2	equ	0xFDB
 24109                           fsr2h	equ	0xFDA
 24110                           fsr2l	equ	0xFD9
 24111                           status	equ	0xFD8
 24112                           
 24113 ;; *************** function _Mdm_RequestSmsData *****************
 24114 ;; Defined at:
 24115 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24116 ;; Parameters:    Size  Location     Type
 24117 ;;		None
 24118 ;; Auto vars:     Size  Location     Type
 24119 ;;		None
 24120 ;; Return value:  Size  Location     Type
 24121 ;;                  1    wreg      void 
 24122 ;; Registers used:
 24123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24124 ;; Tracked objects:
 24125 ;;		On entry : 0/0
 24126 ;;		On exit  : 0/0
 24127 ;;		Unchanged: 0/0
 24128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24133 ;;Total ram usage:        0 bytes
 24134 ;; Hardware stack levels used:    1
 24135 ;; Hardware stack levels required when called:   12
 24136 ;; This function calls:
 24137 ;;		_GenerateEvt
 24138 ;; This function is called by:
 24139 ;;		_MyApp_Task
 24140 ;; This function uses a non-reentrant model
 24141 ;;
 24142                           
 24143                           	psect	text112
 24144  0066E4                     __ptext112:
 24145                           	opt stack 0
 24146  0066E4                     _Mdm_RequestSmsData:
 24147                           	opt stack 15
 24148                           
 24149                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24150                           
 24151                           ; BSR set to: 0
 24152                           ;incstack = 0
 24153  0066E4  0EDC               	movlw	low _GetSmsText
 24154  0066E6  0100               	movlb	0	; () banked
 24155  0066E8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24156  0066EA  0E00               	movlw	high _GetSmsText
 24157  0066EC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24158  0066EE  EC05  F033         	call	_GenerateEvt	;wreg free
 24159  0066F2  0012               	return		;funcret
 24160  0066F4                     __end_of_Mdm_RequestSmsData:
 24161                           	opt stack 0
 24162                           tosu	equ	0xFFF
 24163                           tosh	equ	0xFFE
 24164                           tosl	equ	0xFFD
 24165                           pclath	equ	0xFFA
 24166                           tblptru	equ	0xFF8
 24167                           tblptrh	equ	0xFF7
 24168                           tblptrl	equ	0xFF6
 24169                           tablat	equ	0xFF5
 24170                           prodh	equ	0xFF4
 24171                           prodl	equ	0xFF3
 24172                           intcon	equ	0xFF2
 24173                           intcon2	equ	0xFF1
 24174                           intcon3	equ	0xFF0
 24175                           indf0	equ	0xFEF
 24176                           postinc0	equ	0xFEE
 24177                           plusw0	equ	0xFEB
 24178                           fsr0h	equ	0xFEA
 24179                           fsr0l	equ	0xFE9
 24180                           wreg	equ	0xFE8
 24181                           indf1	equ	0xFE7
 24182                           postinc1	equ	0xFE6
 24183                           postdec1	equ	0xFE5
 24184                           fsr1h	equ	0xFE2
 24185                           fsr1l	equ	0xFE1
 24186                           indf2	equ	0xFDF
 24187                           postinc2	equ	0xFDE
 24188                           postdec2	equ	0xFDD
 24189                           plusw2	equ	0xFDB
 24190                           fsr2h	equ	0xFDA
 24191                           fsr2l	equ	0xFD9
 24192                           status	equ	0xFD8
 24193                           
 24194 ;; *************** function _Mdm_IsSmsReceived *****************
 24195 ;; Defined at:
 24196 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24197 ;; Parameters:    Size  Location     Type
 24198 ;;		None
 24199 ;; Auto vars:     Size  Location     Type
 24200 ;;  Ret             1   33[BANK0 ] enum E8928
 24201 ;; Return value:  Size  Location     Type
 24202 ;;                  1    wreg      enum E8928
 24203 ;; Registers used:
 24204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24205 ;; Tracked objects:
 24206 ;;		On entry : 0/0
 24207 ;;		On exit  : 0/0
 24208 ;;		Unchanged: 0/0
 24209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24214 ;;Total ram usage:        1 bytes
 24215 ;; Hardware stack levels used:    1
 24216 ;; Hardware stack levels required when called:   12
 24217 ;; This function calls:
 24218 ;;		_ReceiveEvt
 24219 ;; This function is called by:
 24220 ;;		_MyApp_Task
 24221 ;; This function uses a non-reentrant model
 24222 ;;
 24223                           
 24224                           	psect	text113
 24225  00638A                     __ptext113:
 24226                           	opt stack 0
 24227  00638A                     _Mdm_IsSmsReceived:
 24228                           	opt stack 15
 24229                           
 24230                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24231                           
 24232                           ;incstack = 0
 24233  00638A  0E00               	movlw	0
 24234  00638C  0100               	movlb	0	; () banked
 24235  00638E  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24236                           
 24237                           ; BSR set to: 0
 24238                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24239  006390  0EDD               	movlw	low _SmsEvent
 24240  006392  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24241  006394  0E00               	movlw	high _SmsEvent
 24242  006396  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24243  006398  EC10  F031         	call	_ReceiveEvt	;wreg free
 24244  00639C  0900               	iorlw	0
 24245  00639E  B4D8               	btfsc	status,2,c
 24246  0063A0  D003               	goto	l1136
 24247                           
 24248                           ;mdm_gsm_gprs.c: 947: {
 24249                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24250  0063A2  0E01               	movlw	1
 24251  0063A4  0100               	movlb	0	; () banked
 24252  0063A6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24253  0063A8                     l1136:
 24254                           
 24255                           ;mdm_gsm_gprs.c: 949: }
 24256                           ;mdm_gsm_gprs.c: 951: return Ret;
 24257  0063A8  0100               	movlb	0	; () banked
 24258  0063AA  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24259  0063AC  0012               	return	
 24260  0063AE                     __end_of_Mdm_IsSmsReceived:
 24261                           	opt stack 0
 24262                           tosu	equ	0xFFF
 24263                           tosh	equ	0xFFE
 24264                           tosl	equ	0xFFD
 24265                           pclath	equ	0xFFA
 24266                           tblptru	equ	0xFF8
 24267                           tblptrh	equ	0xFF7
 24268                           tblptrl	equ	0xFF6
 24269                           tablat	equ	0xFF5
 24270                           prodh	equ	0xFF4
 24271                           prodl	equ	0xFF3
 24272                           intcon	equ	0xFF2
 24273                           intcon2	equ	0xFF1
 24274                           intcon3	equ	0xFF0
 24275                           indf0	equ	0xFEF
 24276                           postinc0	equ	0xFEE
 24277                           plusw0	equ	0xFEB
 24278                           fsr0h	equ	0xFEA
 24279                           fsr0l	equ	0xFE9
 24280                           wreg	equ	0xFE8
 24281                           indf1	equ	0xFE7
 24282                           postinc1	equ	0xFE6
 24283                           postdec1	equ	0xFE5
 24284                           fsr1h	equ	0xFE2
 24285                           fsr1l	equ	0xFE1
 24286                           indf2	equ	0xFDF
 24287                           postinc2	equ	0xFDE
 24288                           postdec2	equ	0xFDD
 24289                           plusw2	equ	0xFDB
 24290                           fsr2h	equ	0xFDA
 24291                           fsr2l	equ	0xFD9
 24292                           status	equ	0xFD8
 24293                           
 24294 ;; *************** function _Mdm_GetSmsData *****************
 24295 ;; Defined at:
 24296 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 24299 ;;		 -> smsText(20), 
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;  GetSmsStatus    1   41[BANK0 ] enum E8920
 24302 ;; Return value:  Size  Location     Type
 24303 ;;                  1    wreg      enum E8920
 24304 ;; Registers used:
 24305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24306 ;; Tracked objects:
 24307 ;;		On entry : 0/0
 24308 ;;		On exit  : 0/0
 24309 ;;		Unchanged: 0/0
 24310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24314 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24315 ;;Total ram usage:        3 bytes
 24316 ;; Hardware stack levels used:    1
 24317 ;; Hardware stack levels required when called:   12
 24318 ;; This function calls:
 24319 ;;		_ReceiveEvt
 24320 ;;		_StringCopy
 24321 ;; This function is called by:
 24322 ;;		_MyApp_Task
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text114
 24327  0052A8                     __ptext114:
 24328                           	opt stack 0
 24329  0052A8                     _Mdm_GetSmsData:
 24330                           	opt stack 15
 24331                           
 24332                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24333                           
 24334                           ; BSR set to: 0
 24335                           ;incstack = 0
 24336  0052A8  0E00               	movlw	0
 24337  0052AA  0100               	movlb	0	; () banked
 24338  0052AC  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24339                           
 24340                           ; BSR set to: 0
 24341                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24342  0052AE  0EDB               	movlw	low _SmsTxtReady
 24343  0052B0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24344  0052B2  0E00               	movlw	high _SmsTxtReady
 24345  0052B4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24346  0052B6  EC10  F031         	call	_ReceiveEvt	;wreg free
 24347  0052BA  0900               	iorlw	0
 24348  0052BC  B4D8               	btfsc	status,2,c
 24349  0052BE  D025               	goto	l1129
 24350                           
 24351                           ;mdm_gsm_gprs.c: 898: {
 24352                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24353  0052C0  0E50               	movlw	low (_Mdm_SmsRx+80)
 24354  0052C2  0100               	movlb	0	; () banked
 24355  0052C4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24356  0052C6  0E07               	movlw	high (_Mdm_SmsRx+80)
 24357  0052C8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24358  0052CA  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24359  0052CE  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24360  0052D2  0E01               	movlw	1
 24361  0052D4  0107               	movlb	7	; () banked
 24362  0052D6  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24363  0052D8  0100               	movlb	0	; () banked
 24364  0052DA  6F81               	movwf	StringCopy@Len& (0+255),b
 24365  0052DC  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 24366  0052DE  0E00               	movlw	0
 24367  0052E0  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24368  0052E2  EC21  F02A         	call	_StringCopy	;wreg free
 24369                           
 24370                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ) - 1);
 24371  0052E6  0E15               	movlw	low (_Mdm_SmsRx+21)
 24372  0052E8  0100               	movlb	0	; () banked
 24373  0052EA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24374  0052EC  0E07               	movlw	high (_Mdm_SmsRx+21)
 24375  0052EE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24376  0052F0  0ECC               	movlw	low _callerNumber
 24377  0052F2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24378  0052F4  0E04               	movlw	high _callerNumber
 24379  0052F6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24380  0052F8  0E00               	movlw	0
 24381  0052FA  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24382  0052FC  0E0C               	movlw	12
 24383  0052FE  6F81               	movwf	StringCopy@Len& (0+255),b
 24384  005300  EC21  F02A         	call	_StringCopy	;wreg free
 24385                           
 24386                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24387  005304  0E01               	movlw	1
 24388  005306  0100               	movlb	0	; () banked
 24389  005308  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24390  00530A                     l1129:
 24391                           
 24392                           ;mdm_gsm_gprs.c: 904: }
 24393                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24394                           
 24395                           ; BSR set to: 0
 24396  00530A  0100               	movlb	0	; () banked
 24397  00530C  5189               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24398  00530E  0012               	return	
 24399  005310                     __end_of_Mdm_GetSmsData:
 24400                           	opt stack 0
 24401                           tosu	equ	0xFFF
 24402                           tosh	equ	0xFFE
 24403                           tosl	equ	0xFFD
 24404                           pclath	equ	0xFFA
 24405                           tblptru	equ	0xFF8
 24406                           tblptrh	equ	0xFF7
 24407                           tblptrl	equ	0xFF6
 24408                           tablat	equ	0xFF5
 24409                           prodh	equ	0xFF4
 24410                           prodl	equ	0xFF3
 24411                           intcon	equ	0xFF2
 24412                           intcon2	equ	0xFF1
 24413                           intcon3	equ	0xFF0
 24414                           indf0	equ	0xFEF
 24415                           postinc0	equ	0xFEE
 24416                           plusw0	equ	0xFEB
 24417                           fsr0h	equ	0xFEA
 24418                           fsr0l	equ	0xFE9
 24419                           wreg	equ	0xFE8
 24420                           indf1	equ	0xFE7
 24421                           postinc1	equ	0xFE6
 24422                           postdec1	equ	0xFE5
 24423                           fsr1h	equ	0xFE2
 24424                           fsr1l	equ	0xFE1
 24425                           indf2	equ	0xFDF
 24426                           postinc2	equ	0xFDE
 24427                           postdec2	equ	0xFDD
 24428                           plusw2	equ	0xFDB
 24429                           fsr2h	equ	0xFDA
 24430                           fsr2l	equ	0xFD9
 24431                           status	equ	0xFD8
 24432                           
 24433 ;; *************** function _Led_SetLedBlinkTime *****************
 24434 ;; Defined at:
 24435 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24436 ;; Parameters:    Size  Location     Type
 24437 ;;  Led             1    wreg     unsigned char 
 24438 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24439 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24440 ;; Auto vars:     Size  Location     Type
 24441 ;;  Led             1   33[BANK0 ] unsigned char 
 24442 ;; Return value:  Size  Location     Type
 24443 ;;                  1    wreg      void 
 24444 ;; Registers used:
 24445 ;;		wreg, status,2, status,0
 24446 ;; Tracked objects:
 24447 ;;		On entry : 0/0
 24448 ;;		On exit  : 0/0
 24449 ;;		Unchanged: 0/0
 24450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24454 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24455 ;;Total ram usage:        5 bytes
 24456 ;; Hardware stack levels used:    1
 24457 ;; Hardware stack levels required when called:   11
 24458 ;; This function calls:
 24459 ;;		Nothing
 24460 ;; This function is called by:
 24461 ;;		_MyApp_Task
 24462 ;; This function uses a non-reentrant model
 24463 ;;
 24464                           
 24465                           	psect	text115
 24466  005818                     __ptext115:
 24467                           	opt stack 0
 24468  005818                     _Led_SetLedBlinkTime:
 24469                           	opt stack 16
 24470                           
 24471                           ; BSR set to: 0
 24472                           ;incstack = 0
 24473                           ;Led_SetLedBlinkTime@Led stored from wreg
 24474  005818  0100               	movlb	0	; () banked
 24475  00581A  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 24476                           
 24477                           ;led.c: 374: switch (Led)
 24478  00581C  D01B               	goto	l2139
 24479  00581E                     l2140:
 24480                           
 24481                           ; BSR set to: 0
 24482                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 24483  00581E  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 24484  005822  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 24485                           
 24486                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 24487  005826  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 24488  00582A  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 24489                           
 24490                           ;led.c: 379: break;
 24491  00582E  0012               	return	
 24492  005830                     l2142:
 24493                           
 24494                           ; BSR set to: 0
 24495                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 24496  005830  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24497  005834  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24498                           
 24499                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 24500  005838  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24501  00583C  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24502                           
 24503                           ;led.c: 384: break;
 24504  005840  0012               	return	
 24505  005842                     l2143:
 24506                           
 24507                           ; BSR set to: 0
 24508                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 24509  005842  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24510  005846  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24511                           
 24512                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 24513  00584A  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24514  00584E  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24515                           
 24516                           ; BSR set to: 0
 24517                           ;led.c: 393: }
 24518                           
 24519                           ; BSR set to: 0
 24520                           ;led.c: 392: break;
 24521                           
 24522                           ;led.c: 391: default:
 24523                           
 24524                           ;led.c: 389: break;
 24525  005852  0012               	return	
 24526  005854                     l2139:
 24527                           
 24528                           ; BSR set to: 0
 24529  005854  0100               	movlb	0	; () banked
 24530  005856  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 24531                           
 24532                           ; Switch size 1, requested type "space"
 24533                           ; Number of cases is 3, Range of values is 1 to 3
 24534                           ; switch strategies available:
 24535                           ; Name         Instructions Cycles
 24536                           ; simple_byte           10     6 (average)
 24537                           ;	Chosen strategy is simple_byte
 24538  005858  0A01               	xorlw	1	; case 1
 24539  00585A  B4D8               	btfsc	status,2,c
 24540  00585C  D7E0               	goto	l2140
 24541  00585E  0A03               	xorlw	3	; case 2
 24542  005860  B4D8               	btfsc	status,2,c
 24543  005862  D7E6               	goto	l2142
 24544  005864  0A01               	xorlw	1	; case 3
 24545  005866  A4D8               	btfss	status,2,c
 24546  005868  0012               	return	
 24547  00586A  D7EB               	goto	l2143
 24548  00586C                     __end_of_Led_SetLedBlinkTime:
 24549                           	opt stack 0
 24550                           tosu	equ	0xFFF
 24551                           tosh	equ	0xFFE
 24552                           tosl	equ	0xFFD
 24553                           pclath	equ	0xFFA
 24554                           tblptru	equ	0xFF8
 24555                           tblptrh	equ	0xFF7
 24556                           tblptrl	equ	0xFF6
 24557                           tablat	equ	0xFF5
 24558                           prodh	equ	0xFF4
 24559                           prodl	equ	0xFF3
 24560                           intcon	equ	0xFF2
 24561                           intcon2	equ	0xFF1
 24562                           intcon3	equ	0xFF0
 24563                           indf0	equ	0xFEF
 24564                           postinc0	equ	0xFEE
 24565                           plusw0	equ	0xFEB
 24566                           fsr0h	equ	0xFEA
 24567                           fsr0l	equ	0xFE9
 24568                           wreg	equ	0xFE8
 24569                           indf1	equ	0xFE7
 24570                           postinc1	equ	0xFE6
 24571                           postdec1	equ	0xFE5
 24572                           fsr1h	equ	0xFE2
 24573                           fsr1l	equ	0xFE1
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582 ;; *************** function _GetCallerNumber *****************
 24583 ;; Defined at:
 24584 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;		None
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;		None
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  2   35[BANK0 ] PTR unsigned char 
 24591 ;; Registers used:
 24592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/0
 24595 ;;		On exit  : 0/0
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24602 ;;Total ram usage:        2 bytes
 24603 ;; Hardware stack levels used:    1
 24604 ;; Hardware stack levels required when called:   12
 24605 ;; This function calls:
 24606 ;;		_ClearBuffer
 24607 ;;		_ReceiveEvt
 24608 ;; This function is called by:
 24609 ;;		_MyApp_Task
 24610 ;; This function uses a non-reentrant model
 24611 ;;
 24612                           
 24613                           	psect	text116
 24614  00602E                     __ptext116:
 24615                           	opt stack 0
 24616  00602E                     _GetCallerNumber:
 24617                           	opt stack 15
 24618                           
 24619                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24620                           
 24621                           ; BSR set to: 0
 24622                           ;incstack = 0
 24623  00602E  0EDE               	movlw	low _ClipEvent
 24624  006030  0100               	movlb	0	; () banked
 24625  006032  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24626  006034  0E00               	movlw	high _ClipEvent
 24627  006036  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24628  006038  EC10  F031         	call	_ReceiveEvt	;wreg free
 24629  00603C  0900               	iorlw	0
 24630  00603E  A4D8               	btfss	status,2,c
 24631  006040  D00B               	goto	l1156
 24632                           
 24633                           ;mdm_gsm_gprs.c: 1040: {
 24634                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24635  006042  0ECC               	movlw	low _callerNumber
 24636  006044  0100               	movlb	0	; () banked
 24637  006046  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24638  006048  0E04               	movlw	high _callerNumber
 24639  00604A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24640  00604C  0E00               	movlw	0
 24641  00604E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24642  006050  0E0D               	movlw	13
 24643  006052  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24644  006054  EC32  F030         	call	_ClearBuffer	;wreg free
 24645  006058                     l1156:
 24646                           
 24647                           ;mdm_gsm_gprs.c: 1042: }
 24648                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24649  006058  0ECC               	movlw	low _callerNumber
 24650  00605A  0100               	movlb	0	; () banked
 24651  00605C  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24652  00605E  0E04               	movlw	high _callerNumber
 24653  006060  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 24654  006062  0012               	return	
 24655  006064                     __end_of_GetCallerNumber:
 24656                           	opt stack 0
 24657                           tosu	equ	0xFFF
 24658                           tosh	equ	0xFFE
 24659                           tosl	equ	0xFFD
 24660                           pclath	equ	0xFFA
 24661                           tblptru	equ	0xFF8
 24662                           tblptrh	equ	0xFF7
 24663                           tblptrl	equ	0xFF6
 24664                           tablat	equ	0xFF5
 24665                           prodh	equ	0xFF4
 24666                           prodl	equ	0xFF3
 24667                           intcon	equ	0xFF2
 24668                           intcon2	equ	0xFF1
 24669                           intcon3	equ	0xFF0
 24670                           indf0	equ	0xFEF
 24671                           postinc0	equ	0xFEE
 24672                           plusw0	equ	0xFEB
 24673                           fsr0h	equ	0xFEA
 24674                           fsr0l	equ	0xFE9
 24675                           wreg	equ	0xFE8
 24676                           indf1	equ	0xFE7
 24677                           postinc1	equ	0xFE6
 24678                           postdec1	equ	0xFE5
 24679                           fsr1h	equ	0xFE2
 24680                           fsr1l	equ	0xFE1
 24681                           indf2	equ	0xFDF
 24682                           postinc2	equ	0xFDE
 24683                           postdec2	equ	0xFDD
 24684                           plusw2	equ	0xFDB
 24685                           fsr2h	equ	0xFDA
 24686                           fsr2l	equ	0xFD9
 24687                           status	equ	0xFD8
 24688                           
 24689 ;; *************** function _UartSetConfig *****************
 24690 ;; Defined at:
 24691 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24692 ;; Parameters:    Size  Location     Type
 24693 ;;		None
 24694 ;; Auto vars:     Size  Location     Type
 24695 ;;		None
 24696 ;; Return value:  Size  Location     Type
 24697 ;;                  1    wreg      void 
 24698 ;; Registers used:
 24699 ;;		wreg, status,2
 24700 ;; Tracked objects:
 24701 ;;		On entry : 0/0
 24702 ;;		On exit  : 0/0
 24703 ;;		Unchanged: 0/0
 24704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24709 ;;Total ram usage:        0 bytes
 24710 ;; Hardware stack levels used:    1
 24711 ;; Hardware stack levels required when called:   11
 24712 ;; This function calls:
 24713 ;;		Nothing
 24714 ;; This function is called by:
 24715 ;;		_Mdm_MainTask
 24716 ;; This function uses a non-reentrant model
 24717 ;;
 24718                           
 24719                           	psect	text117
 24720  0055BC                     __ptext117:
 24721                           	opt stack 0
 24722  0055BC                     _UartSetConfig:
 24723                           	opt stack 16
 24724                           
 24725                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 24726                           
 24727                           ; BSR set to: 0
 24728                           ;incstack = 0
 24729  0055BC  0E01               	movlw	1
 24730  0055BE  0103               	movlb	3	; () banked
 24731  0055C0  6F28               	movwf	_UartConfig& (0+255),b
 24732                           
 24733                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 24734  0055C2  0E00               	movlw	0
 24735  0055C4  6F29               	movwf	(_UartConfig+1)& (0+255),b
 24736                           
 24737                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 24738  0055C6  0E00               	movlw	0
 24739  0055C8  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 24740                           
 24741                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 24742  0055CA  0E00               	movlw	0
 24743  0055CC  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 24744                           
 24745                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 24746  0055CE  0E00               	movlw	0
 24747  0055D0  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 24748                           
 24749                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 24750  0055D2  0E00               	movlw	0
 24751  0055D4  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 24752                           
 24753                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 24754  0055D6  0E01               	movlw	1
 24755  0055D8  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 24756                           
 24757                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 24758  0055DA  0E01               	movlw	1
 24759  0055DC  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 24760                           
 24761                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 24762  0055DE  0E00               	movlw	0
 24763  0055E0  6F30               	movwf	(_UartConfig+8)& (0+255),b
 24764                           
 24765                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 24766  0055E2  0E00               	movlw	0
 24767  0055E4  6F31               	movwf	(_UartConfig+9)& (0+255),b
 24768                           
 24769                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 24770  0055E6  0E00               	movlw	0
 24771  0055E8  6F32               	movwf	(_UartConfig+10)& (0+255),b
 24772                           
 24773                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24774  0055EA  0E00               	movlw	0
 24775  0055EC  6F33               	movwf	(_UartConfig+11)& (0+255),b
 24776                           
 24777                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24778  0055EE  0E01               	movlw	1
 24779  0055F0  6F34               	movwf	(_UartConfig+12)& (0+255),b
 24780                           
 24781                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 24782  0055F2  0E00               	movlw	0
 24783  0055F4  6F35               	movwf	(_UartConfig+13)& (0+255),b
 24784  0055F6  0E6C               	movlw	108
 24785  0055F8  6F36               	movwf	(_UartConfig+14)& (0+255),b
 24786  0055FA  0EDC               	movlw	220
 24787  0055FC  6F37               	movwf	(_UartConfig+15)& (0+255),b
 24788  0055FE  0E02               	movlw	2
 24789  005600  6F38               	movwf	(_UartConfig+16)& (0+255),b
 24790                           
 24791                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24792  005602  0E80               	movlw	128
 24793  005604  6F39               	movwf	(_UartConfig+17)& (0+255),b
 24794  005606  0E25               	movlw	37
 24795  005608  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 24796  00560A  0E00               	movlw	0
 24797  00560C  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 24798  00560E  0E00               	movlw	0
 24799  005610  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 24800                           
 24801                           ; BSR set to: 3
 24802  005612  0012               	return		;funcret
 24803  005614                     __end_of_UartSetConfig:
 24804                           	opt stack 0
 24805                           tosu	equ	0xFFF
 24806                           tosh	equ	0xFFE
 24807                           tosl	equ	0xFFD
 24808                           pclath	equ	0xFFA
 24809                           tblptru	equ	0xFF8
 24810                           tblptrh	equ	0xFF7
 24811                           tblptrl	equ	0xFF6
 24812                           tablat	equ	0xFF5
 24813                           prodh	equ	0xFF4
 24814                           prodl	equ	0xFF3
 24815                           intcon	equ	0xFF2
 24816                           intcon2	equ	0xFF1
 24817                           intcon3	equ	0xFF0
 24818                           indf0	equ	0xFEF
 24819                           postinc0	equ	0xFEE
 24820                           plusw0	equ	0xFEB
 24821                           fsr0h	equ	0xFEA
 24822                           fsr0l	equ	0xFE9
 24823                           wreg	equ	0xFE8
 24824                           indf1	equ	0xFE7
 24825                           postinc1	equ	0xFE6
 24826                           postdec1	equ	0xFE5
 24827                           fsr1h	equ	0xFE2
 24828                           fsr1l	equ	0xFE1
 24829                           indf2	equ	0xFDF
 24830                           postinc2	equ	0xFDE
 24831                           postdec2	equ	0xFDD
 24832                           plusw2	equ	0xFDB
 24833                           fsr2h	equ	0xFDA
 24834                           fsr2l	equ	0xFD9
 24835                           status	equ	0xFD8
 24836                           
 24837 ;; *************** function _TurnOnModem *****************
 24838 ;; Defined at:
 24839 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24840 ;; Parameters:    Size  Location     Type
 24841 ;;		None
 24842 ;; Auto vars:     Size  Location     Type
 24843 ;;		None
 24844 ;; Return value:  Size  Location     Type
 24845 ;;                  1    wreg      void 
 24846 ;; Registers used:
 24847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24848 ;; Tracked objects:
 24849 ;;		On entry : 0/0
 24850 ;;		On exit  : 0/0
 24851 ;;		Unchanged: 0/0
 24852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24857 ;;Total ram usage:        0 bytes
 24858 ;; Hardware stack levels used:    1
 24859 ;; Hardware stack levels required when called:   12
 24860 ;; This function calls:
 24861 ;;		_GenerateEvt
 24862 ;; This function is called by:
 24863 ;;		_Mdm_MainTask
 24864 ;; This function uses a non-reentrant model
 24865 ;;
 24866                           
 24867                           	psect	text118
 24868  005CAA                     __ptext118:
 24869                           	opt stack 0
 24870  005CAA                     _TurnOnModem:
 24871                           	opt stack 15
 24872                           
 24873                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 24874                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 24875                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 24876                           
 24877                           ; BSR set to: 3
 24878                           ;incstack = 0
 24879  005CAA  D019               	goto	l1009
 24880  005CAC                     
 24881                           ;mdm_gsm_gprs.c: 385: Counter++;
 24882  005CAC  0102               	movlb	2	; () banked
 24883  005CAE  4BD9               	infsnz	TurnOnModem@Counter& (0+255),f,b
 24884  005CB0  2BDA               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 24885                           
 24886                           ; BSR set to: 2
 24887                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 24888  005CB2  0EB8               	movlw	184
 24889  005CB4  5DD9               	subwf	TurnOnModem@Counter& (0+255),w,b
 24890  005CB6  0E0B               	movlw	11
 24891  005CB8  59DA               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 24892  005CBA  A0D8               	btfss	status,0,c
 24893  005CBC  0012               	return	
 24894                           
 24895                           ; BSR set to: 2
 24896                           ;mdm_gsm_gprs.c: 388: {
 24897                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 24898  005CBE  0E01               	movlw	1
 24899  005CC0  6E28               	movwf	TurnOnModem@TurnOnMdmState,c
 24900                           
 24901                           ; BSR set to: 2
 24902                           ;mdm_gsm_gprs.c: 391: }
 24903                           ;mdm_gsm_gprs.c: 392: break;
 24904  005CC2  0012               	return	
 24905  005CC4                     
 24906                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 24907                           
 24908                           ; BSR set to: 2
 24909  005CC4  0EE1               	movlw	low _MdmOnOffPulseRequest
 24910  005CC6  0100               	movlb	0	; () banked
 24911  005CC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24912  005CCA  0E00               	movlw	high _MdmOnOffPulseRequest
 24913  005CCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24914  005CCE  EC05  F033         	call	_GenerateEvt	;wreg free
 24915                           
 24916                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 24917  005CD2  0E01               	movlw	1
 24918  005CD4  0100               	movlb	0	; () banked
 24919  005CD6  6FD1               	movwf	_MdmStatus& (0+255),b
 24920                           
 24921                           ; BSR set to: 0
 24922                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 24923  005CD8  0E02               	movlw	2
 24924  005CDA  6E28               	movwf	TurnOnModem@TurnOnMdmState,c
 24925                           
 24926                           ; BSR set to: 0
 24927                           ;mdm_gsm_gprs.c: 408: }
 24928                           
 24929                           ; BSR set to: 0
 24930                           ;mdm_gsm_gprs.c: 407: break;
 24931                           
 24932                           ;mdm_gsm_gprs.c: 406: default:
 24933                           
 24934                           ; BSR set to: 0
 24935                           ;mdm_gsm_gprs.c: 404: break;
 24936                           
 24937                           ;mdm_gsm_gprs.c: 403: case Stop:
 24938                           
 24939                           ;mdm_gsm_gprs.c: 401: break;
 24940  005CDC  0012               	return	
 24941  005CDE                     l1009:
 24942                           
 24943                           ; BSR set to: 0
 24944  005CDE  5028               	movf	TurnOnModem@TurnOnMdmState,w,c
 24945                           
 24946                           ; Switch size 1, requested type "space"
 24947                           ; Number of cases is 3, Range of values is 0 to 2
 24948                           ; switch strategies available:
 24949                           ; Name         Instructions Cycles
 24950                           ; simple_byte           10     6 (average)
 24951                           ;	Chosen strategy is simple_byte
 24952  005CE0  0A00               	xorlw	0	; case 0
 24953  005CE2  B4D8               	btfsc	status,2,c
 24954  005CE4  D7E3               	goto	l1010
 24955  005CE6  0A01               	xorlw	1	; case 1
 24956  005CE8  B4D8               	btfsc	status,2,c
 24957  005CEA  D7EC               	goto	l1013
 24958  005CEC  0A03               	xorlw	3	; case 2
 24959  005CEE  0012               	return	
 24960  005CF0                     __end_of_TurnOnModem:
 24961                           	opt stack 0
 24962                           tosu	equ	0xFFF
 24963                           tosh	equ	0xFFE
 24964                           tosl	equ	0xFFD
 24965                           pclath	equ	0xFFA
 24966                           tblptru	equ	0xFF8
 24967                           tblptrh	equ	0xFF7
 24968                           tblptrl	equ	0xFF6
 24969                           tablat	equ	0xFF5
 24970                           prodh	equ	0xFF4
 24971                           prodl	equ	0xFF3
 24972                           intcon	equ	0xFF2
 24973                           intcon2	equ	0xFF1
 24974                           intcon3	equ	0xFF0
 24975                           indf0	equ	0xFEF
 24976                           postinc0	equ	0xFEE
 24977                           plusw0	equ	0xFEB
 24978                           fsr0h	equ	0xFEA
 24979                           fsr0l	equ	0xFE9
 24980                           wreg	equ	0xFE8
 24981                           indf1	equ	0xFE7
 24982                           postinc1	equ	0xFE6
 24983                           postdec1	equ	0xFE5
 24984                           fsr1h	equ	0xFE2
 24985                           fsr1l	equ	0xFE1
 24986                           indf2	equ	0xFDF
 24987                           postinc2	equ	0xFDE
 24988                           postdec2	equ	0xFDD
 24989                           plusw2	equ	0xFDB
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function _SendSmsSm *****************
 24995 ;; Defined at:
 24996 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25013 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25014 ;;Total ram usage:       52 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:   14
 25017 ;; This function calls:
 25018 ;;		_OsTmr_GetTimerStatus
 25019 ;;		_OsTmr_StartTimer
 25020 ;;		_ReceiveEvt
 25021 ;;		_StringCopy
 25022 ;;		_Uart_WriteStringLen
 25023 ;; This function is called by:
 25024 ;;		_Mdm_MainTask
 25025 ;; This function uses a non-reentrant model
 25026 ;;
 25027                           
 25028                           	psect	text119
 25029  001C3E                     __ptext119:
 25030                           	opt stack 0
 25031  001C3E                     _SendSmsSm:
 25032                           	opt stack 13
 25033                           
 25034                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25035                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25036                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25037                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25038                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25039                           
 25040                           ;incstack = 0
 25041  001C3E  0E03               	movlw	3
 25042  001C40  0100               	movlb	0	; () banked
 25043  001C42  19D1               	xorwf	_MdmStatus& (0+255),w,b
 25044  001C44  A4D8               	btfss	status,2,c
 25045  001C46  0012               	return	
 25046  001C48  D0C1               	goto	l1091
 25047  001C4A                     
 25048                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25049                           
 25050                           ; BSR set to: 0
 25051  001C4A  0EE0               	movlw	low _SendSmsEvent
 25052  001C4C  0100               	movlb	0	; () banked
 25053  001C4E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25054  001C50  0E00               	movlw	high _SendSmsEvent
 25055  001C52  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25056  001C54  EC10  F031         	call	_ReceiveEvt	;wreg free
 25057  001C58  0900               	iorlw	0
 25058  001C5A  B4D8               	btfsc	status,2,c
 25059  001C5C  0012               	return	
 25060                           
 25061                           ;mdm_gsm_gprs.c: 671: {
 25062                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25063  001C5E  0E01               	movlw	1
 25064  001C60  0101               	movlb	1	; () banked
 25065  001C62  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;mdm_gsm_gprs.c: 674: }
 25069                           ;mdm_gsm_gprs.c: 675: break;
 25070  001C64  0012               	return	
 25071  001C66                     
 25072                           ; BSR set to: 1
 25073                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25074                           
 25075                           ; BSR set to: 1
 25076  001C66  0ECD               	movlw	low STR_5
 25077  001C68  0100               	movlb	0	; () banked
 25078  001C6A  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25079  001C6C  0EFF               	movlw	high STR_5
 25080  001C6E  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25081  001C70  0E00               	movlw	low SendSmsSm@UartMessage
 25082  001C72  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25083  001C74  0E01               	movlw	high SendSmsSm@UartMessage
 25084  001C76  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25085  001C78  0E00               	movlw	0
 25086  001C7A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25087  001C7C  0E09               	movlw	9
 25088  001C7E  6F81               	movwf	StringCopy@Len& (0+255),b
 25089  001C80  EC21  F02A         	call	_StringCopy	;wreg free
 25090                           
 25091                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25092  001C84  0EA9               	movlw	low _PhoneNumber
 25093  001C86  0100               	movlb	0	; () banked
 25094  001C88  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25095  001C8A  0E04               	movlw	high _PhoneNumber
 25096  001C8C  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25097  001C8E  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25098  001C90  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25099  001C92  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25100  001C94  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25101  001C96  C0D2  F081         	movff	_PhoneNumbLen,StringCopy@Len
 25102  001C9A  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25103  001C9C  EC21  F02A         	call	_StringCopy	;wreg free
 25104                           
 25105                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25106  001CA0  0100               	movlb	0	; () banked
 25107  001CA2  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25108  001CA4  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25109  001CA6  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25110  001CA8  0E09               	movlw	9
 25111  001CAA  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25112  001CAC  0E00               	movlw	0
 25113  001CAE  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25114  001CB0  0E00               	movlw	low SendSmsSm@UartMessage
 25115  001CB2  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25116  001CB4  6ED9               	movwf	fsr2l,c
 25117  001CB6  0E01               	movlw	high SendSmsSm@UartMessage
 25118  001CB8  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25119  001CBA  6EDA               	movwf	fsr2h,c
 25120  001CBC  0E22               	movlw	34
 25121  001CBE  6EDF               	movwf	indf2,c
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25125  001CC0  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25126  001CC2  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25127  001CC4  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25128  001CC6  0E0A               	movlw	10
 25129  001CC8  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25130  001CCA  0E00               	movlw	0
 25131  001CCC  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25132  001CCE  0E00               	movlw	low SendSmsSm@UartMessage
 25133  001CD0  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25134  001CD2  6ED9               	movwf	fsr2l,c
 25135  001CD4  0E01               	movlw	high SendSmsSm@UartMessage
 25136  001CD6  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25137  001CD8  6EDA               	movwf	fsr2h,c
 25138  001CDA  0E0D               	movlw	13
 25139  001CDC  6EDF               	movwf	indf2,c
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25143  001CDE  0E00               	movlw	low SendSmsSm@UartMessage
 25144  001CE0  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25145  001CE2  0E01               	movlw	high SendSmsSm@UartMessage
 25146  001CE4  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25147  001CE6  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25148  001CE8  0F0B               	addlw	11
 25149  001CEA  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25150  001CEC  0E01               	movlw	1
 25151  001CEE  EC42  F02F         	call	_Uart_WriteStringLen
 25152                           
 25153                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25154  001CF2  0EEA               	movlw	low SendSmsSm@SwTimer
 25155  001CF4  0100               	movlb	0	; () banked
 25156  001CF6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25157  001CF8  0E03               	movlw	high SendSmsSm@SwTimer
 25158  001CFA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25159  001CFC  0EC4               	movlw	196
 25160  001CFE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25161  001D00  0E09               	movlw	9
 25162  001D02  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25163  001D04  0E00               	movlw	0
 25164  001D06  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25165  001D08  0E00               	movlw	0
 25166  001D0A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25167  001D0C  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 25168                           
 25169                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25170  001D10  0E05               	movlw	5
 25171  001D12  0101               	movlb	1	; () banked
 25172  001D14  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25176  001D16  0E02               	movlw	2
 25177  001D18  6FF0               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25178                           
 25179                           ;mdm_gsm_gprs.c: 691: break;
 25180  001D1A  0012               	return	
 25181  001D1C                     
 25182                           ; BSR set to: 1
 25183                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25184                           
 25185                           ; BSR set to: 1
 25186  001D1C  0E0A               	movlw	10
 25187  001D1E  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25188                           
 25189                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25190  001D20  0E0D               	movlw	13
 25191  001D22  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25192                           
 25193                           ; BSR set to: 1
 25194                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25195  001D24  0E00               	movlw	low SendSmsSm@UartMessage
 25196  001D26  0100               	movlb	0	; () banked
 25197  001D28  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25198  001D2A  0E01               	movlw	high SendSmsSm@UartMessage
 25199  001D2C  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25200  001D2E  0E02               	movlw	2
 25201  001D30  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25202  001D32  0E01               	movlw	1
 25203  001D34  EC42  F02F         	call	_Uart_WriteStringLen
 25204                           
 25205                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25206  001D38  0E03               	movlw	3
 25207  001D3A  0101               	movlb	1	; () banked
 25208  001D3C  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25209                           
 25210                           ;mdm_gsm_gprs.c: 701: break;
 25211  001D3E  0012               	return	
 25212  001D40                     
 25213                           ; BSR set to: 1
 25214                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25215                           
 25216                           ; BSR set to: 1
 25217  001D40  0E3C               	movlw	low _NewStringReceived
 25218  001D42  0100               	movlb	0	; () banked
 25219  001D44  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25220  001D46  0E00               	movlw	high _NewStringReceived
 25221  001D48  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25222  001D4A  EC10  F031         	call	_ReceiveEvt	;wreg free
 25223  001D4E  0900               	iorlw	0
 25224  001D50  B4D8               	btfsc	status,2,c
 25225  001D52  0012               	return	
 25226                           
 25227                           ;mdm_gsm_gprs.c: 706: {
 25228                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25229  001D54  CC58  FFE8         	movff	_RxBuffer,wreg
 25230  001D58  0A3E               	xorlw	62
 25231  001D5A  A4D8               	btfss	status,2,c
 25232  001D5C  0012               	return	
 25233                           
 25234                           ;mdm_gsm_gprs.c: 709: {
 25235                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25236  001D5E  0E04               	movlw	4
 25237  001D60  0101               	movlb	1	; () banked
 25238  001D62  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;mdm_gsm_gprs.c: 712: }
 25242                           ;mdm_gsm_gprs.c: 713: }
 25243                           ;mdm_gsm_gprs.c: 714: break;
 25244                           
 25245                           ; BSR set to: 1
 25246  001D64  0012               	return	
 25247  001D66                     
 25248                           ; BSR set to: 1
 25249                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25250                           
 25251                           ; BSR set to: 1
 25252  001D66  0E72               	movlw	low _MessageText
 25253  001D68  0100               	movlb	0	; () banked
 25254  001D6A  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25255  001D6C  0E05               	movlw	high _MessageText
 25256  001D6E  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25257  001D70  0E00               	movlw	low SendSmsSm@UartMessage
 25258  001D72  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25259  001D74  0E01               	movlw	high SendSmsSm@UartMessage
 25260  001D76  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25261  001D78  C0D3  F081         	movff	_SmsLen,StringCopy@Len
 25262  001D7C  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25263  001D7E  EC21  F02A         	call	_StringCopy	;wreg free
 25264                           
 25265                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25266  001D82  0100               	movlb	0	; () banked
 25267  001D84  51D3               	movf	_SmsLen& (0+255),w,b
 25268  001D86  0D01               	mullw	1
 25269  001D88  0E00               	movlw	low SendSmsSm@UartMessage
 25270  001D8A  24F3               	addwf	prodl,w,c
 25271  001D8C  6ED9               	movwf	fsr2l,c
 25272  001D8E  0E01               	movlw	high SendSmsSm@UartMessage
 25273  001D90  20F4               	addwfc	prodh,w,c
 25274  001D92  6EDA               	movwf	fsr2h,c
 25275  001D94  0E1A               	movlw	26
 25276  001D96  6EDF               	movwf	indf2,c
 25277                           
 25278                           ; BSR set to: 0
 25279                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25280  001D98  0E00               	movlw	low SendSmsSm@UartMessage
 25281  001D9A  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25282  001D9C  0E01               	movlw	high SendSmsSm@UartMessage
 25283  001D9E  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25284  001DA0  29D3               	incf	_SmsLen& (0+255),w,b
 25285  001DA2  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25286  001DA4  0E01               	movlw	1
 25287  001DA6  EC42  F02F         	call	_Uart_WriteStringLen
 25288                           
 25289                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25290  001DAA  0E00               	movlw	0
 25291  001DAC  0101               	movlb	1	; () banked
 25292  001DAE  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25293                           
 25294                           ;mdm_gsm_gprs.c: 725: break;
 25295  001DB0  0012               	return	
 25296  001DB2                     
 25297                           ; BSR set to: 1
 25298                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25299                           
 25300                           ; BSR set to: 1
 25301  001DB2  0EEA               	movlw	low SendSmsSm@SwTimer
 25302  001DB4  0100               	movlb	0	; () banked
 25303  001DB6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25304  001DB8  0E03               	movlw	high SendSmsSm@SwTimer
 25305  001DBA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25306  001DBC  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25307  001DC0  06E8               	decf	wreg,f,c
 25308  001DC2  A4D8               	btfss	status,2,c
 25309  001DC4  0012               	return	
 25310                           
 25311                           ;mdm_gsm_gprs.c: 730: {
 25312                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25313  001DC6  C1F0  F1F1         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25314                           
 25315                           ;mdm_gsm_gprs.c: 738: }
 25316                           
 25317                           ;mdm_gsm_gprs.c: 737: break;
 25318                           
 25319                           ;mdm_gsm_gprs.c: 736: default:
 25320                           
 25321                           ;mdm_gsm_gprs.c: 733: }
 25322                           ;mdm_gsm_gprs.c: 734: break;
 25323  001DCA  0012               	return	
 25324  001DCC                     l1091:
 25325  001DCC  0101               	movlb	1	; () banked
 25326  001DCE  51F1               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25327                           
 25328                           ; Switch size 1, requested type "space"
 25329                           ; Number of cases is 6, Range of values is 0 to 5
 25330                           ; switch strategies available:
 25331                           ; Name         Instructions Cycles
 25332                           ; simple_byte           19    10 (average)
 25333                           ;	Chosen strategy is simple_byte
 25334  001DD0  0A00               	xorlw	0	; case 0
 25335  001DD2  B4D8               	btfsc	status,2,c
 25336  001DD4  D73A               	goto	l1092
 25337  001DD6  0A01               	xorlw	1	; case 1
 25338  001DD8  B4D8               	btfsc	status,2,c
 25339  001DDA  D745               	goto	l1095
 25340  001DDC  0A03               	xorlw	3	; case 2
 25341  001DDE  B4D8               	btfsc	status,2,c
 25342  001DE0  D79D               	goto	l1096
 25343  001DE2  0A01               	xorlw	1	; case 3
 25344  001DE4  B4D8               	btfsc	status,2,c
 25345  001DE6  D7AC               	goto	l1097
 25346  001DE8  0A07               	xorlw	7	; case 4
 25347  001DEA  B4D8               	btfsc	status,2,c
 25348  001DEC  D7BC               	goto	l1100
 25349  001DEE  0A01               	xorlw	1	; case 5
 25350  001DF0  A4D8               	btfss	status,2,c
 25351                           
 25352                           ; BSR set to: 1
 25353  001DF2  0012               	return	
 25354  001DF4  D7DE               	goto	l1101
 25355  001DF6                     __end_of_SendSmsSm:
 25356                           	opt stack 0
 25357                           tosu	equ	0xFFF
 25358                           tosh	equ	0xFFE
 25359                           tosl	equ	0xFFD
 25360                           pclath	equ	0xFFA
 25361                           tblptru	equ	0xFF8
 25362                           tblptrh	equ	0xFF7
 25363                           tblptrl	equ	0xFF6
 25364                           tablat	equ	0xFF5
 25365                           prodh	equ	0xFF4
 25366                           prodl	equ	0xFF3
 25367                           intcon	equ	0xFF2
 25368                           intcon2	equ	0xFF1
 25369                           intcon3	equ	0xFF0
 25370                           indf0	equ	0xFEF
 25371                           postinc0	equ	0xFEE
 25372                           plusw0	equ	0xFEB
 25373                           fsr0h	equ	0xFEA
 25374                           fsr0l	equ	0xFE9
 25375                           wreg	equ	0xFE8
 25376                           indf1	equ	0xFE7
 25377                           postinc1	equ	0xFE6
 25378                           postdec1	equ	0xFE5
 25379                           fsr1h	equ	0xFE2
 25380                           fsr1l	equ	0xFE1
 25381                           indf2	equ	0xFDF
 25382                           postinc2	equ	0xFDE
 25383                           postdec2	equ	0xFDD
 25384                           plusw2	equ	0xFDB
 25385                           fsr2h	equ	0xFDA
 25386                           fsr2l	equ	0xFD9
 25387                           status	equ	0xFD8
 25388                           
 25389 ;; *************** function _Uart_WriteStringLen *****************
 25390 ;; Defined at:
 25391 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25392 ;; Parameters:    Size  Location     Type
 25393 ;;  Module          1    wreg     unsigned char 
 25394 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 25395 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 25396 ;;  Len             1   34[BANK0 ] unsigned char 
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;  Module          1   36[BANK0 ] unsigned char 
 25399 ;;  Index           1   35[BANK0 ] unsigned char 
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  1    wreg      void 
 25402 ;; Registers used:
 25403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25404 ;; Tracked objects:
 25405 ;;		On entry : 0/0
 25406 ;;		On exit  : 0/0
 25407 ;;		Unchanged: 0/0
 25408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25409 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25412 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25413 ;;Total ram usage:        5 bytes
 25414 ;; Hardware stack levels used:    1
 25415 ;; Hardware stack levels required when called:   12
 25416 ;; This function calls:
 25417 ;;		_UartTxBufferStatus
 25418 ;;		_UartWriteByte
 25419 ;; This function is called by:
 25420 ;;		_SendSmsSm
 25421 ;;		_GsmGprsTerminal
 25422 ;; This function uses a non-reentrant model
 25423 ;;
 25424                           
 25425                           	psect	text120
 25426  005E84                     __ptext120:
 25427                           	opt stack 0
 25428  005E84                     _Uart_WriteStringLen:
 25429                           	opt stack 14
 25430                           
 25431                           ;incstack = 0
 25432                           ;Uart_WriteStringLen@Module stored from wreg
 25433  005E84  0100               	movlb	0	; () banked
 25434  005E86  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 25435                           
 25436                           ;uart_drv.c: 544: UINT8 Index;
 25437                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 25438  005E88  0E00               	movlw	0
 25439  005E8A  0100               	movlb	0	; () banked
 25440  005E8C  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 25441  005E8E  D015               	goto	l715
 25442  005E90                     
 25443                           ; BSR set to: 0
 25444                           ;uart_drv.c: 547: {
 25445                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 25446                           
 25447                           ; BSR set to: 0
 25448  005E90  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 25449  005E94  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 25450  005E98  50DF               	movf	indf2,w,c
 25451  005E9A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 25452  005E9C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25453  005E9E  EC6F  F032         	call	_UartWriteByte
 25454                           
 25455                           ;uart_drv.c: 551: StringToWrite++;
 25456  005EA2  0100               	movlb	0	; () banked
 25457  005EA4  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 25458  005EA6  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 25459  005EA8                     
 25460                           ; BSR set to: 0
 25461                           
 25462                           ; BSR set to: 0
 25463  005EA8  0100               	movlb	0	; () banked
 25464  005EAA  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25465  005EAC  EC51  F02D         	call	_UartTxBufferStatus
 25466  005EB0  06E8               	decf	wreg,f,c
 25467  005EB2  B4D8               	btfsc	status,2,c
 25468  005EB4  D7F9               	goto	l718
 25469  005EB6  0100               	movlb	0	; () banked
 25470  005EB8  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 25471  005EBA                     l715:
 25472                           
 25473                           ; BSR set to: 0
 25474                           
 25475                           ; BSR set to: 0
 25476  005EBA  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 25477  005EBC  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 25478  005EBE  B0D8               	btfsc	status,0,c
 25479  005EC0  0012               	return	
 25480  005EC2  D7E6               	goto	l716
 25481  005EC4                     __end_of_Uart_WriteStringLen:
 25482                           	opt stack 0
 25483                           tosu	equ	0xFFF
 25484                           tosh	equ	0xFFE
 25485                           tosl	equ	0xFFD
 25486                           pclath	equ	0xFFA
 25487                           tblptru	equ	0xFF8
 25488                           tblptrh	equ	0xFF7
 25489                           tblptrl	equ	0xFF6
 25490                           tablat	equ	0xFF5
 25491                           prodh	equ	0xFF4
 25492                           prodl	equ	0xFF3
 25493                           intcon	equ	0xFF2
 25494                           intcon2	equ	0xFF1
 25495                           intcon3	equ	0xFF0
 25496                           indf0	equ	0xFEF
 25497                           postinc0	equ	0xFEE
 25498                           plusw0	equ	0xFEB
 25499                           fsr0h	equ	0xFEA
 25500                           fsr0l	equ	0xFE9
 25501                           wreg	equ	0xFE8
 25502                           indf1	equ	0xFE7
 25503                           postinc1	equ	0xFE6
 25504                           postdec1	equ	0xFE5
 25505                           fsr1h	equ	0xFE2
 25506                           fsr1l	equ	0xFE1
 25507                           indf2	equ	0xFDF
 25508                           postinc2	equ	0xFDE
 25509                           postdec2	equ	0xFDD
 25510                           plusw2	equ	0xFDB
 25511                           fsr2h	equ	0xFDA
 25512                           fsr2l	equ	0xFD9
 25513                           status	equ	0xFD8
 25514                           
 25515 ;; *************** function _ModemEvtParser *****************
 25516 ;; Defined at:
 25517 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;		None
 25520 ;; Auto vars:     Size  Location     Type
 25521 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 25522 ;;  SmsString       5   55[BANK0 ] unsigned char [5]
 25523 ;;  ClipString      5   50[BANK0 ] unsigned char [5]
 25524 ;;  RingString      4   60[BANK0 ] unsigned char [4]
 25525 ;;  CompareIdx      1   65[BANK0 ] unsigned char 
 25526 ;;  Match           1   64[BANK0 ] unsigned char 
 25527 ;; Return value:  Size  Location     Type
 25528 ;;                  1    wreg      void 
 25529 ;; Registers used:
 25530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25531 ;; Tracked objects:
 25532 ;;		On entry : 0/0
 25533 ;;		On exit  : 0/0
 25534 ;;		Unchanged: 0/0
 25535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25537 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25539 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25540 ;;Total ram usage:       26 bytes
 25541 ;; Hardware stack levels used:    1
 25542 ;; Hardware stack levels required when called:   12
 25543 ;; This function calls:
 25544 ;;		_GenerateEvt
 25545 ;;		_ReceiveEvt
 25546 ;;		_StringCompare
 25547 ;;		_StringCopy
 25548 ;;		_Uart_ClearRxBuffer
 25549 ;; This function is called by:
 25550 ;;		_Mdm_MainTask
 25551 ;; This function uses a non-reentrant model
 25552 ;;
 25553                           
 25554                           	psect	text121
 25555  001F7E                     __ptext121:
 25556                           	opt stack 0
 25557  001F7E                     _ModemEvtParser:
 25558                           	opt stack 15
 25559                           
 25560                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 25561                           
 25562                           ; BSR set to: 0
 25563                           ;incstack = 0
 25564  001F7E  C3CB  F09C         	movff	ModemEvtParser@F9106,ModemEvtParser@RingString
 25565  001F82  C3CC  F09D         	movff	ModemEvtParser@F9106+1,ModemEvtParser@RingString+1
 25566  001F86  C3CD  F09E         	movff	ModemEvtParser@F9106+2,ModemEvtParser@RingString+2
 25567  001F8A  C3CE  F09F         	movff	ModemEvtParser@F9106+3,ModemEvtParser@RingString+3
 25568                           
 25569                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 25570  001F8E  EE23  F0C6         	lfsr	2,ModemEvtParser@F9108
 25571  001F92  EE10  F092         	lfsr	1,ModemEvtParser@ClipString
 25572  001F96  0E04               	movlw	4
 25573  001F98                     u14191:
 25574  001F98  CFDB FFE3          	movff	plusw2,plusw1
 25575  001F9C  06E8               	decf	wreg,f,c
 25576  001F9E  E2FC               	bc	u14191
 25577                           
 25578                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 25579  001FA0  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 25580  001FA4  EE10  F097         	lfsr	1,ModemEvtParser@SmsString
 25581  001FA8  0E04               	movlw	4
 25582  001FAA                     u14201:
 25583  001FAA  CFDB FFE3          	movff	plusw2,plusw1
 25584  001FAE  06E8               	decf	wreg,f,c
 25585  001FB0  E2FC               	bc	u14201
 25586                           
 25587                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 25588  001FB2  EE23  F0B7         	lfsr	2,ModemEvtParser@F9112
 25589  001FB6  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 25590  001FBA  0E09               	movlw	9
 25591  001FBC                     u14211:
 25592  001FBC  CFDB FFE3          	movff	plusw2,plusw1
 25593  001FC0  06E8               	decf	wreg,f,c
 25594  001FC2  E2FC               	bc	u14211
 25595                           
 25596                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 25597  001FC4  0E00               	movlw	0
 25598  001FC6  0100               	movlb	0	; () banked
 25599  001FC8  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25600                           
 25601                           ; BSR set to: 0
 25602                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 25603  001FCA  0E00               	movlw	0
 25604  001FCC  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 25605                           
 25606                           ; BSR set to: 0
 25607                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 25608  001FCE  0E3B               	movlw	low _NewMdmEvtParserRequest
 25609  001FD0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25610  001FD2  0E00               	movlw	high _NewMdmEvtParserRequest
 25611  001FD4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25612  001FD6  EC10  F031         	call	_ReceiveEvt	;wreg free
 25613  001FDA  0900               	iorlw	0
 25614  001FDC  B4D8               	btfsc	status,2,c
 25615  001FDE  0012               	return	
 25616                           
 25617                           ;mdm_gsm_gprs.c: 510: {
 25618                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 25619  001FE0  0E00               	movlw	0
 25620  001FE2  0100               	movlb	0	; () banked
 25621  001FE4  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25622  001FE6                     l14852:
 25623                           
 25624                           ; BSR set to: 0
 25625  001FE6  0E03               	movlw	3
 25626  001FE8  65A1               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 25627  001FEA  D074               	goto	l1052
 25628  001FEC  D083               	goto	u14280
 25629  001FEE                     
 25630                           ; BSR set to: 0
 25631                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 25632                           
 25633                           ; BSR set to: 0
 25634  001FEE  0E9C               	movlw	low ModemEvtParser@RingString
 25635  001FF0  6F7D               	movwf	StringCompare@String1& (0+255),b
 25636  001FF2  0E00               	movlw	high ModemEvtParser@RingString
 25637  001FF4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25638  001FF6  0E58               	movlw	low _RxBuffer
 25639  001FF8  6F7F               	movwf	StringCompare@String2& (0+255),b
 25640  001FFA  0E0C               	movlw	high _RxBuffer
 25641  001FFC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25642  001FFE  0E00               	movlw	0
 25643  002000  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25644  002002  0E04               	movlw	4
 25645  002004  6F81               	movwf	StringCompare@Len& (0+255),b
 25646  002006  EC89  F02C         	call	_StringCompare	;wreg free
 25647  00200A  0900               	iorlw	0
 25648  00200C  B4D8               	btfsc	status,2,c
 25649  00200E  D06F               	goto	l1055
 25650                           
 25651                           ;mdm_gsm_gprs.c: 518: {
 25652                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 25653  002010  0EDF               	movlw	low _RingEvent
 25654  002012  0100               	movlb	0	; () banked
 25655  002014  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25656  002016  0E00               	movlw	high _RingEvent
 25657  002018  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25658  00201A  EC05  F033         	call	_GenerateEvt	;wreg free
 25659  00201E  D040               	goto	l14874
 25660  002020                     
 25661                           ; BSR set to: 0
 25662                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 25663                           
 25664                           ; BSR set to: 0
 25665  002020  0E92               	movlw	low ModemEvtParser@ClipString
 25666  002022  6F7D               	movwf	StringCompare@String1& (0+255),b
 25667  002024  0E00               	movlw	high ModemEvtParser@ClipString
 25668  002026  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25669  002028  0E58               	movlw	low _RxBuffer
 25670  00202A  6F7F               	movwf	StringCompare@String2& (0+255),b
 25671  00202C  0E0C               	movlw	high _RxBuffer
 25672  00202E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25673  002030  0E00               	movlw	0
 25674  002032  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25675  002034  0E05               	movlw	5
 25676  002036  6F81               	movwf	StringCompare@Len& (0+255),b
 25677  002038  EC89  F02C         	call	_StringCompare	;wreg free
 25678  00203C  0900               	iorlw	0
 25679  00203E  B4D8               	btfsc	status,2,c
 25680  002040  D056               	goto	l1055
 25681                           
 25682                           ;mdm_gsm_gprs.c: 529: {
 25683                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 25684  002042  0E60               	movlw	low (_RxBuffer+8)
 25685  002044  0100               	movlb	0	; () banked
 25686  002046  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25687  002048  0E0C               	movlw	high (_RxBuffer+8)
 25688  00204A  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25689  00204C  0ECC               	movlw	low _callerNumber
 25690  00204E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25691  002050  0E04               	movlw	high _callerNumber
 25692  002052  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25693  002054  0E00               	movlw	0
 25694  002056  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25695  002058  0E0D               	movlw	13
 25696  00205A  6F81               	movwf	StringCopy@Len& (0+255),b
 25697  00205C  EC21  F02A         	call	_StringCopy	;wreg free
 25698                           
 25699                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 25700  002060  0EDE               	movlw	low _ClipEvent
 25701  002062  0100               	movlb	0	; () banked
 25702  002064  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25703  002066  0E00               	movlw	high _ClipEvent
 25704  002068  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25705  00206A  EC05  F033         	call	_GenerateEvt	;wreg free
 25706  00206E  D018               	goto	l14874
 25707  002070                     
 25708                           ; BSR set to: 0
 25709                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 25710                           
 25711                           ; BSR set to: 0
 25712  002070  0E97               	movlw	low ModemEvtParser@SmsString
 25713  002072  6F7D               	movwf	StringCompare@String1& (0+255),b
 25714  002074  0E00               	movlw	high ModemEvtParser@SmsString
 25715  002076  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25716  002078  0E58               	movlw	low _RxBuffer
 25717  00207A  6F7F               	movwf	StringCompare@String2& (0+255),b
 25718  00207C  0E0C               	movlw	high _RxBuffer
 25719  00207E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25720  002080  0E00               	movlw	0
 25721  002082  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25722  002084  0E05               	movlw	5
 25723  002086  6F81               	movwf	StringCompare@Len& (0+255),b
 25724  002088  EC89  F02C         	call	_StringCompare	;wreg free
 25725  00208C  0900               	iorlw	0
 25726  00208E  B4D8               	btfsc	status,2,c
 25727  002090  D02E               	goto	l1055
 25728                           
 25729                           ;mdm_gsm_gprs.c: 541: {
 25730                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 25731  002092  0EDD               	movlw	low _SmsEvent
 25732  002094  0100               	movlb	0	; () banked
 25733  002096  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25734  002098  0E00               	movlw	high _SmsEvent
 25735  00209A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25736  00209C  EC05  F033         	call	_GenerateEvt	;wreg free
 25737  0020A0                     l14874:
 25738                           
 25739                           ;mdm_gsm_gprs.c: 545: Match = 1;
 25740  0020A0  0E01               	movlw	1
 25741  0020A2  0100               	movlb	0	; () banked
 25742  0020A4  D015               	goto	L37
 25743  0020A6                     
 25744                           ; BSR set to: 0
 25745                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 25746                           
 25747                           ; BSR set to: 0
 25748  0020A6  0E88               	movlw	low ModemEvtParser@CallReadyString
 25749  0020A8  6F7D               	movwf	StringCompare@String1& (0+255),b
 25750  0020AA  0E00               	movlw	high ModemEvtParser@CallReadyString
 25751  0020AC  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25752  0020AE  0E58               	movlw	low _RxBuffer
 25753  0020B0  6F7F               	movwf	StringCompare@String2& (0+255),b
 25754  0020B2  0E0C               	movlw	high _RxBuffer
 25755  0020B4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25756  0020B6  0E00               	movlw	0
 25757  0020B8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25758  0020BA  0E0A               	movlw	10
 25759  0020BC  6F81               	movwf	StringCompare@Len& (0+255),b
 25760  0020BE  EC89  F02C         	call	_StringCompare	;wreg free
 25761  0020C2  0900               	iorlw	0
 25762  0020C4  B4D8               	btfsc	status,2,c
 25763  0020C6  D013               	goto	l1055
 25764                           
 25765                           ;mdm_gsm_gprs.c: 552: {
 25766                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 25767  0020C8  0E02               	movlw	2
 25768  0020CA  0100               	movlb	0	; () banked
 25769  0020CC  6FD1               	movwf	_MdmStatus& (0+255),b
 25770                           
 25771                           ;mdm_gsm_gprs.c: 556: Match = 1;
 25772  0020CE  0E01               	movlw	1
 25773  0020D0                     L37:
 25774  0020D0  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;mdm_gsm_gprs.c: 562: }
 25778                           
 25779                           ; BSR set to: 0
 25780                           ;mdm_gsm_gprs.c: 561: break;
 25781                           
 25782                           ;mdm_gsm_gprs.c: 560: default:
 25783                           
 25784                           ; BSR set to: 0
 25785                           ;mdm_gsm_gprs.c: 557: }
 25786                           ;mdm_gsm_gprs.c: 558: break;
 25787  0020D2  D00D               	goto	l1055
 25788  0020D4                     l1052:
 25789                           
 25790                           ; BSR set to: 0
 25791                           
 25792                           ; BSR set to: 0
 25793  0020D4  51A1               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 25794                           
 25795                           ; Switch size 1, requested type "space"
 25796                           ; Number of cases is 4, Range of values is 0 to 3
 25797                           ; switch strategies available:
 25798                           ; Name         Instructions Cycles
 25799                           ; simple_byte           13     7 (average)
 25800                           ;	Chosen strategy is simple_byte
 25801  0020D6  0A00               	xorlw	0	; case 0
 25802  0020D8  B4D8               	btfsc	status,2,c
 25803  0020DA  D789               	goto	l1053
 25804  0020DC  0A01               	xorlw	1	; case 1
 25805  0020DE  B4D8               	btfsc	status,2,c
 25806  0020E0  D7C7               	goto	l1058
 25807  0020E2  0A03               	xorlw	3	; case 2
 25808  0020E4  B4D8               	btfsc	status,2,c
 25809  0020E6  D7DF               	goto	l1060
 25810  0020E8  0A01               	xorlw	1	; case 3
 25811  0020EA  B4D8               	btfsc	status,2,c
 25812  0020EC  D799               	goto	l1056
 25813  0020EE                     l1055:
 25814                           
 25815                           ; BSR set to: 0
 25816  0020EE  0100               	movlb	0	; () banked
 25817  0020F0  2BA1               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 25818  0020F2  D779               	goto	l14852
 25819  0020F4                     u14280:
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;mdm_gsm_gprs.c: 563: }
 25823                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 25824                           
 25825                           ; BSR set to: 0
 25826  0020F4  05A0               	decf	ModemEvtParser@Match& (0+255),w,b
 25827  0020F6  A4D8               	btfss	status,2,c
 25828  0020F8  0012               	return	
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;mdm_gsm_gprs.c: 567: {
 25832                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 25833  0020FA  EC4D  F030         	call	_Uart_ClearRxBuffer	;wreg free
 25834  0020FE  0012               	return	
 25835  002100                     __end_of_ModemEvtParser:
 25836                           	opt stack 0
 25837                           tosu	equ	0xFFF
 25838                           tosh	equ	0xFFE
 25839                           tosl	equ	0xFFD
 25840                           pclath	equ	0xFFA
 25841                           tblptru	equ	0xFF8
 25842                           tblptrh	equ	0xFF7
 25843                           tblptrl	equ	0xFF6
 25844                           tablat	equ	0xFF5
 25845                           prodh	equ	0xFF4
 25846                           prodl	equ	0xFF3
 25847                           intcon	equ	0xFF2
 25848                           intcon2	equ	0xFF1
 25849                           intcon3	equ	0xFF0
 25850                           indf0	equ	0xFEF
 25851                           postinc0	equ	0xFEE
 25852                           plusw0	equ	0xFEB
 25853                           fsr0h	equ	0xFEA
 25854                           fsr0l	equ	0xFE9
 25855                           wreg	equ	0xFE8
 25856                           indf1	equ	0xFE7
 25857                           postinc1	equ	0xFE6
 25858                           postdec1	equ	0xFE5
 25859                           plusw1	equ	0xFE3
 25860                           fsr1h	equ	0xFE2
 25861                           fsr1l	equ	0xFE1
 25862                           indf2	equ	0xFDF
 25863                           postinc2	equ	0xFDE
 25864                           postdec2	equ	0xFDD
 25865                           plusw2	equ	0xFDB
 25866                           fsr2h	equ	0xFDA
 25867                           fsr2l	equ	0xFD9
 25868                           status	equ	0xFD8
 25869                           
 25870 ;; *************** function _Uart_ClearRxBuffer *****************
 25871 ;; Defined at:
 25872 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;		None
 25875 ;; Auto vars:     Size  Location     Type
 25876 ;;  Index           2   29[BANK0 ] unsigned short 
 25877 ;; Return value:  Size  Location     Type
 25878 ;;                  1    wreg      void 
 25879 ;; Registers used:
 25880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25881 ;; Tracked objects:
 25882 ;;		On entry : 0/0
 25883 ;;		On exit  : 0/0
 25884 ;;		Unchanged: 0/0
 25885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25889 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;Total ram usage:        2 bytes
 25891 ;; Hardware stack levels used:    1
 25892 ;; Hardware stack levels required when called:   11
 25893 ;; This function calls:
 25894 ;;		Nothing
 25895 ;; This function is called by:
 25896 ;;		_ModemEvtParser
 25897 ;; This function uses a non-reentrant model
 25898 ;;
 25899                           
 25900                           	psect	text122
 25901  00609A                     __ptext122:
 25902                           	opt stack 0
 25903  00609A                     _Uart_ClearRxBuffer:
 25904                           	opt stack 15
 25905                           
 25906                           ;uart_drv.c: 567: UINT16 Index = 0;
 25907                           
 25908                           ;incstack = 0
 25909  00609A  0E00               	movlw	0
 25910  00609C  0100               	movlb	0	; () banked
 25911  00609E  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25912  0060A0  0E00               	movlw	0
 25913  0060A2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25914                           
 25915                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 25916  0060A4  0E00               	movlw	0
 25917  0060A6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25918  0060A8  0E00               	movlw	0
 25919  0060AA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25920  0060AC                     l14064:
 25921                           
 25922                           ; BSR set to: 0
 25923  0060AC  0E90               	movlw	144
 25924  0060AE  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25925  0060B0  0E01               	movlw	1
 25926  0060B2  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25927  0060B4  B0D8               	btfsc	status,0,c
 25928  0060B6  0012               	return	
 25929                           
 25930                           ; BSR set to: 0
 25931                           ;uart_drv.c: 571: {
 25932                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 25933                           
 25934                           ; BSR set to: 0
 25935                           
 25936                           ; BSR set to: 0
 25937  0060B8  0E58               	movlw	low _RxBuffer
 25938  0060BA  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25939  0060BC  6ED9               	movwf	fsr2l,c
 25940  0060BE  0E0C               	movlw	high _RxBuffer
 25941  0060C0  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25942  0060C2  6EDA               	movwf	fsr2h,c
 25943  0060C4  0E00               	movlw	0
 25944  0060C6  6EDF               	movwf	indf2,c
 25945                           
 25946                           ; BSR set to: 0
 25947  0060C8  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 25948  0060CA  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 25949  0060CC  D7EF               	goto	l14064
 25950  0060CE                     __end_of_Uart_ClearRxBuffer:
 25951                           	opt stack 0
 25952                           tosu	equ	0xFFF
 25953                           tosh	equ	0xFFE
 25954                           tosl	equ	0xFFD
 25955                           pclath	equ	0xFFA
 25956                           tblptru	equ	0xFF8
 25957                           tblptrh	equ	0xFF7
 25958                           tblptrl	equ	0xFF6
 25959                           tablat	equ	0xFF5
 25960                           prodh	equ	0xFF4
 25961                           prodl	equ	0xFF3
 25962                           intcon	equ	0xFF2
 25963                           intcon2	equ	0xFF1
 25964                           intcon3	equ	0xFF0
 25965                           indf0	equ	0xFEF
 25966                           postinc0	equ	0xFEE
 25967                           plusw0	equ	0xFEB
 25968                           fsr0h	equ	0xFEA
 25969                           fsr0l	equ	0xFE9
 25970                           wreg	equ	0xFE8
 25971                           indf1	equ	0xFE7
 25972                           postinc1	equ	0xFE6
 25973                           postdec1	equ	0xFE5
 25974                           plusw1	equ	0xFE3
 25975                           fsr1h	equ	0xFE2
 25976                           fsr1l	equ	0xFE1
 25977                           indf2	equ	0xFDF
 25978                           postinc2	equ	0xFDE
 25979                           postdec2	equ	0xFDD
 25980                           plusw2	equ	0xFDB
 25981                           fsr2h	equ	0xFDA
 25982                           fsr2l	equ	0xFD9
 25983                           status	equ	0xFD8
 25984                           
 25985 ;; *************** function _StringCompare *****************
 25986 ;; Defined at:
 25987 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 25988 ;; Parameters:    Size  Location     Type
 25989 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 25990 ;;		 -> smsText(20), callerNumber(13), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 25991 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 25992 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 25993 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 25994 ;;		 -> RxBuffer(400), 
 25995 ;;  Len             2   33[BANK0 ] unsigned short 
 25996 ;; Auto vars:     Size  Location     Type
 25997 ;;  Index           2   38[BANK0 ] unsigned short 
 25998 ;;  Result          1   37[BANK0 ] unsigned char 
 25999 ;; Return value:  Size  Location     Type
 26000 ;;                  1    wreg      unsigned char 
 26001 ;; Registers used:
 26002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26003 ;; Tracked objects:
 26004 ;;		On entry : 0/0
 26005 ;;		On exit  : 0/0
 26006 ;;		Unchanged: 0/0
 26007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26008 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26011 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26012 ;;Total ram usage:       11 bytes
 26013 ;; Hardware stack levels used:    1
 26014 ;; Hardware stack levels required when called:   11
 26015 ;; This function calls:
 26016 ;;		Nothing
 26017 ;; This function is called by:
 26018 ;;		_ModemEvtParser
 26019 ;;		_parseCommand
 26020 ;;		_MyApp_Task
 26021 ;;		_isNumberInMemory
 26022 ;; This function uses a non-reentrant model
 26023 ;;
 26024                           
 26025                           	psect	text123
 26026  005912                     __ptext123:
 26027                           	opt stack 0
 26028  005912                     _StringCompare:
 26029                           	opt stack 15
 26030                           
 26031                           ;sf.c: 77: UINT16 Index = 0;
 26032                           
 26033                           ; BSR set to: 0
 26034                           ;incstack = 0
 26035  005912  0E00               	movlw	0
 26036  005914  0100               	movlb	0	; () banked
 26037  005916  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26038  005918  0E00               	movlw	0
 26039  00591A  6F86               	movwf	StringCompare@Index& (0+255),b
 26040                           
 26041                           ;sf.c: 78: UINT8 Result = 1;
 26042  00591C  0E01               	movlw	1
 26043  00591E  6F85               	movwf	StringCompare@Result& (0+255),b
 26044                           
 26045                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26046  005920  0E00               	movlw	0
 26047  005922  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26048  005924  0E00               	movlw	0
 26049  005926  6F86               	movwf	StringCompare@Index& (0+255),b
 26050  005928  D015               	goto	l2237
 26051  00592A                     
 26052                           ; BSR set to: 0
 26053                           ;sf.c: 82: {
 26054                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26055                           
 26056                           ; BSR set to: 0
 26057  00592A  5186               	movf	StringCompare@Index& (0+255),w,b
 26058  00592C  257F               	addwf	StringCompare@String2& (0+255),w,b
 26059  00592E  6ED9               	movwf	fsr2l,c
 26060  005930  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26061  005932  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26062  005934  6EDA               	movwf	fsr2h,c
 26063  005936  5186               	movf	StringCompare@Index& (0+255),w,b
 26064  005938  257D               	addwf	StringCompare@String1& (0+255),w,b
 26065  00593A  6EE1               	movwf	fsr1l,c
 26066  00593C  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26067  00593E  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26068  005940  6EE2               	movwf	fsr1h,c
 26069  005942  50DE               	movf	postinc2,w,c
 26070  005944  18E6               	xorwf	postinc1,w,c
 26071  005946  B4D8               	btfsc	status,2,c
 26072  005948  D003               	goto	l2239
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;sf.c: 84: {
 26076                           ;sf.c: 85: Result = 0;
 26077  00594A  0E00               	movlw	0
 26078  00594C  6F85               	movwf	StringCompare@Result& (0+255),b
 26079                           
 26080                           ;sf.c: 86: break;
 26081  00594E  D008               	goto	u13160
 26082  005950                     l2239:
 26083                           
 26084                           ; BSR set to: 0
 26085                           
 26086                           ; BSR set to: 0
 26087  005950  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26088  005952  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26089  005954                     l2237:
 26090                           
 26091                           ; BSR set to: 0
 26092                           
 26093                           ; BSR set to: 0
 26094  005954  5181               	movf	StringCompare@Len& (0+255),w,b
 26095  005956  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26096  005958  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26097  00595A  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26098  00595C  A0D8               	btfss	status,0,c
 26099  00595E  D7E5               	goto	l2238
 26100  005960                     u13160:
 26101                           
 26102                           ; BSR set to: 0
 26103                           ;sf.c: 87: }
 26104                           ;sf.c: 88: }
 26105                           ;sf.c: 91: return Result;
 26106                           
 26107                           ; BSR set to: 0
 26108  005960  5185               	movf	StringCompare@Result& (0+255),w,b
 26109  005962  0012               	return	
 26110  005964                     __end_of_StringCompare:
 26111                           	opt stack 0
 26112                           tosu	equ	0xFFF
 26113                           tosh	equ	0xFFE
 26114                           tosl	equ	0xFFD
 26115                           pclath	equ	0xFFA
 26116                           tblptru	equ	0xFF8
 26117                           tblptrh	equ	0xFF7
 26118                           tblptrl	equ	0xFF6
 26119                           tablat	equ	0xFF5
 26120                           prodh	equ	0xFF4
 26121                           prodl	equ	0xFF3
 26122                           intcon	equ	0xFF2
 26123                           intcon2	equ	0xFF1
 26124                           intcon3	equ	0xFF0
 26125                           indf0	equ	0xFEF
 26126                           postinc0	equ	0xFEE
 26127                           plusw0	equ	0xFEB
 26128                           fsr0h	equ	0xFEA
 26129                           fsr0l	equ	0xFE9
 26130                           wreg	equ	0xFE8
 26131                           indf1	equ	0xFE7
 26132                           postinc1	equ	0xFE6
 26133                           postdec1	equ	0xFE5
 26134                           plusw1	equ	0xFE3
 26135                           fsr1h	equ	0xFE2
 26136                           fsr1l	equ	0xFE1
 26137                           indf2	equ	0xFDF
 26138                           postinc2	equ	0xFDE
 26139                           postdec2	equ	0xFDD
 26140                           plusw2	equ	0xFDB
 26141                           fsr2h	equ	0xFDA
 26142                           fsr2l	equ	0xFD9
 26143                           status	equ	0xFD8
 26144                           
 26145 ;; *************** function _GetSmsSm *****************
 26146 ;; Defined at:
 26147 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26148 ;; Parameters:    Size  Location     Type
 26149 ;;		None
 26150 ;; Auto vars:     Size  Location     Type
 26151 ;;		None
 26152 ;; Return value:  Size  Location     Type
 26153 ;;                  1    wreg      void 
 26154 ;; Registers used:
 26155 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26156 ;; Tracked objects:
 26157 ;;		On entry : 0/0
 26158 ;;		On exit  : 0/0
 26159 ;;		Unchanged: 0/0
 26160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26165 ;;Total ram usage:        0 bytes
 26166 ;; Hardware stack levels used:    1
 26167 ;; Hardware stack levels required when called:   13
 26168 ;; This function calls:
 26169 ;;		_ClearBuffer
 26170 ;;		_GenerateEvt
 26171 ;;		_ReceiveEvt
 26172 ;;		_StringCopy
 26173 ;;		_Uart_WriteConstString
 26174 ;; This function is called by:
 26175 ;;		_Mdm_MainTask
 26176 ;; This function uses a non-reentrant model
 26177 ;;
 26178                           
 26179                           	psect	text124
 26180  002CE0                     __ptext124:
 26181                           	opt stack 0
 26182  002CE0                     _GetSmsSm:
 26183                           	opt stack 14
 26184                           
 26185                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26186                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;incstack = 0
 26190  002CE0  0E03               	movlw	3
 26191  002CE2  0100               	movlb	0	; () banked
 26192  002CE4  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26193  002CE6  A4D8               	btfss	status,2,c
 26194  002CE8  0012               	return	
 26195  002CEA  D084               	goto	l1070
 26196  002CEC                     
 26197                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26198                           
 26199                           ; BSR set to: 0
 26200  002CEC  0EDC               	movlw	low _GetSmsText
 26201  002CEE  0100               	movlb	0	; () banked
 26202  002CF0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26203  002CF2  0E00               	movlw	high _GetSmsText
 26204  002CF4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26205  002CF6  EC10  F031         	call	_ReceiveEvt	;wreg free
 26206  002CFA  0900               	iorlw	0
 26207  002CFC  B4D8               	btfsc	status,2,c
 26208  002CFE  0012               	return	
 26209                           
 26210                           ;mdm_gsm_gprs.c: 596: {
 26211                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26212  002D00  0E01               	movlw	1
 26213  002D02  0101               	movlb	1	; () banked
 26214  002D04  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26215                           
 26216                           ; BSR set to: 1
 26217                           ;mdm_gsm_gprs.c: 599: }
 26218                           ;mdm_gsm_gprs.c: 600: break;
 26219  002D06  0012               	return	
 26220  002D08                     
 26221                           ; BSR set to: 1
 26222                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26223                           
 26224                           ; BSR set to: 1
 26225  002D08  0EC1               	movlw	low STR_4
 26226  002D0A  0100               	movlb	0	; () banked
 26227  002D0C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26228  002D0E  0EFF               	movlw	high STR_4
 26229  002D10  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26230  002D12  0E01               	movlw	1
 26231  002D14  EC00  F02F         	call	_Uart_WriteConstString
 26232                           
 26233                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26234  002D18  0E02               	movlw	2
 26235  002D1A  0101               	movlb	1	; () banked
 26236  002D1C  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26237                           
 26238                           ;mdm_gsm_gprs.c: 607: break;
 26239  002D1E  0012               	return	
 26240  002D20                     
 26241                           ; BSR set to: 1
 26242                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26243                           
 26244                           ; BSR set to: 1
 26245  002D20  0E3C               	movlw	low _NewStringReceived
 26246  002D22  0100               	movlb	0	; () banked
 26247  002D24  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26248  002D26  0E00               	movlw	high _NewStringReceived
 26249  002D28  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26250  002D2A  EC10  F031         	call	_ReceiveEvt	;wreg free
 26251  002D2E  0900               	iorlw	0
 26252  002D30  B4D8               	btfsc	status,2,c
 26253  002D32  0012               	return	
 26254                           
 26255                           ;mdm_gsm_gprs.c: 612: {
 26256                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26257  002D34  CC58  FFE8         	movff	_RxBuffer,wreg
 26258  002D38  0A2B               	xorlw	43
 26259  002D3A  A4D8               	btfss	status,2,c
 26260  002D3C  0012               	return	
 26261  002D3E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26262  002D42  0A43               	xorlw	67
 26263  002D44  A4D8               	btfss	status,2,c
 26264  002D46  0012               	return	
 26265  002D48  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26266  002D4C  0A4D               	xorlw	77
 26267  002D4E  A4D8               	btfss	status,2,c
 26268  002D50  0012               	return	
 26269                           
 26270                           ;mdm_gsm_gprs.c: 614: {
 26271                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26272  002D52  0E00               	movlw	low _Mdm_SmsRx
 26273  002D54  0100               	movlb	0	; () banked
 26274  002D56  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26275  002D58  0E07               	movlw	high _Mdm_SmsRx
 26276  002D5A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26277  002D5C  0E00               	movlw	0
 26278  002D5E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26279  002D60  0E50               	movlw	80
 26280  002D62  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26281  002D64  EC32  F030         	call	_ClearBuffer	;wreg free
 26282                           
 26283                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26284  002D68  0E58               	movlw	low _RxBuffer
 26285  002D6A  0100               	movlb	0	; () banked
 26286  002D6C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26287  002D6E  0E0C               	movlw	high _RxBuffer
 26288  002D70  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26289  002D72  0E00               	movlw	low _Mdm_SmsRx
 26290  002D74  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26291  002D76  0E07               	movlw	high _Mdm_SmsRx
 26292  002D78  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26293  002D7A  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26294  002D7E  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26295  002D82  EC21  F02A         	call	_StringCopy	;wreg free
 26296                           
 26297                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26298  002D86  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26299                           
 26300                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26301  002D8A  0E03               	movlw	3
 26302  002D8C  0101               	movlb	1	; () banked
 26303  002D8E  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26304                           
 26305                           ; BSR set to: 1
 26306                           ;mdm_gsm_gprs.c: 622: }
 26307                           ;mdm_gsm_gprs.c: 623: }
 26308                           ;mdm_gsm_gprs.c: 624: break;
 26309                           
 26310                           ; BSR set to: 1
 26311  002D90  0012               	return	
 26312  002D92                     
 26313                           ; BSR set to: 1
 26314                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26315                           
 26316                           ; BSR set to: 1
 26317  002D92  0E3C               	movlw	low _NewStringReceived
 26318  002D94  0100               	movlb	0	; () banked
 26319  002D96  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26320  002D98  0E00               	movlw	high _NewStringReceived
 26321  002D9A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26322  002D9C  EC10  F031         	call	_ReceiveEvt	;wreg free
 26323  002DA0  0900               	iorlw	0
 26324  002DA2  B4D8               	btfsc	status,2,c
 26325  002DA4  0012               	return	
 26326                           
 26327                           ;mdm_gsm_gprs.c: 629: {
 26328                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26329  002DA6  0E50               	movlw	low (_Mdm_SmsRx+80)
 26330  002DA8  0100               	movlb	0	; () banked
 26331  002DAA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26332  002DAC  0E07               	movlw	high (_Mdm_SmsRx+80)
 26333  002DAE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26334  002DB0  0E00               	movlw	0
 26335  002DB2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26336  002DB4  0E14               	movlw	20
 26337  002DB6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26338  002DB8  EC32  F030         	call	_ClearBuffer	;wreg free
 26339                           
 26340                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26341  002DBC  0E58               	movlw	low _RxBuffer
 26342  002DBE  0100               	movlb	0	; () banked
 26343  002DC0  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26344  002DC2  0E0C               	movlw	high _RxBuffer
 26345  002DC4  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26346  002DC6  0E50               	movlw	low (_Mdm_SmsRx+80)
 26347  002DC8  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26348  002DCA  0E07               	movlw	high (_Mdm_SmsRx+80)
 26349  002DCC  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26350  002DCE  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26351  002DD2  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26352  002DD6  EC21  F02A         	call	_StringCopy	;wreg free
 26353                           
 26354                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26355  002DDA  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26356                           
 26357                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26358  002DDE  0E00               	movlw	0
 26359  002DE0  0101               	movlb	1	; () banked
 26360  002DE2  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26361                           
 26362                           ; BSR set to: 1
 26363                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26364  002DE4  0EDB               	movlw	low _SmsTxtReady
 26365  002DE6  0100               	movlb	0	; () banked
 26366  002DE8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26367  002DEA  0E00               	movlw	high _SmsTxtReady
 26368  002DEC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26369  002DEE  EC05  F033         	call	_GenerateEvt	;wreg free
 26370                           
 26371                           ;mdm_gsm_gprs.c: 644: }
 26372                           
 26373                           ;mdm_gsm_gprs.c: 643: break;
 26374                           
 26375                           ;mdm_gsm_gprs.c: 642: default:
 26376                           
 26377                           ;mdm_gsm_gprs.c: 639: }
 26378                           ;mdm_gsm_gprs.c: 640: break;
 26379  002DF2  0012               	return	
 26380  002DF4                     l1070:
 26381  002DF4  0101               	movlb	1	; () banked
 26382  002DF6  51F2               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26383                           
 26384                           ; Switch size 1, requested type "space"
 26385                           ; Number of cases is 4, Range of values is 0 to 3
 26386                           ; switch strategies available:
 26387                           ; Name         Instructions Cycles
 26388                           ; simple_byte           13     7 (average)
 26389                           ;	Chosen strategy is simple_byte
 26390  002DF8  0A00               	xorlw	0	; case 0
 26391  002DFA  B4D8               	btfsc	status,2,c
 26392  002DFC  D777               	goto	l1071
 26393  002DFE  0A01               	xorlw	1	; case 1
 26394  002E00  B4D8               	btfsc	status,2,c
 26395  002E02  D782               	goto	l1074
 26396  002E04  0A03               	xorlw	3	; case 2
 26397  002E06  B4D8               	btfsc	status,2,c
 26398  002E08  D78B               	goto	l1075
 26399  002E0A  0A01               	xorlw	1	; case 3
 26400  002E0C  A4D8               	btfss	status,2,c
 26401                           
 26402                           ; BSR set to: 1
 26403  002E0E  0012               	return	
 26404  002E10  D7C0               	goto	l1078
 26405  002E12                     __end_of_GetSmsSm:
 26406                           	opt stack 0
 26407                           tosu	equ	0xFFF
 26408                           tosh	equ	0xFFE
 26409                           tosl	equ	0xFFD
 26410                           pclath	equ	0xFFA
 26411                           tblptru	equ	0xFF8
 26412                           tblptrh	equ	0xFF7
 26413                           tblptrl	equ	0xFF6
 26414                           tablat	equ	0xFF5
 26415                           prodh	equ	0xFF4
 26416                           prodl	equ	0xFF3
 26417                           intcon	equ	0xFF2
 26418                           intcon2	equ	0xFF1
 26419                           intcon3	equ	0xFF0
 26420                           indf0	equ	0xFEF
 26421                           postinc0	equ	0xFEE
 26422                           plusw0	equ	0xFEB
 26423                           fsr0h	equ	0xFEA
 26424                           fsr0l	equ	0xFE9
 26425                           wreg	equ	0xFE8
 26426                           indf1	equ	0xFE7
 26427                           postinc1	equ	0xFE6
 26428                           postdec1	equ	0xFE5
 26429                           plusw1	equ	0xFE3
 26430                           fsr1h	equ	0xFE2
 26431                           fsr1l	equ	0xFE1
 26432                           indf2	equ	0xFDF
 26433                           postinc2	equ	0xFDE
 26434                           postdec2	equ	0xFDD
 26435                           plusw2	equ	0xFDB
 26436                           fsr2h	equ	0xFDA
 26437                           fsr2l	equ	0xFD9
 26438                           status	equ	0xFD8
 26439                           
 26440 ;; *************** function _ConfigureModem *****************
 26441 ;; Defined at:
 26442 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26443 ;; Parameters:    Size  Location     Type
 26444 ;;		None
 26445 ;; Auto vars:     Size  Location     Type
 26446 ;;		None
 26447 ;; Return value:  Size  Location     Type
 26448 ;;                  1    wreg      void 
 26449 ;; Registers used:
 26450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26451 ;; Tracked objects:
 26452 ;;		On entry : 0/0
 26453 ;;		On exit  : 0/0
 26454 ;;		Unchanged: 0/0
 26455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26460 ;;Total ram usage:        0 bytes
 26461 ;; Hardware stack levels used:    1
 26462 ;; Hardware stack levels required when called:   14
 26463 ;; This function calls:
 26464 ;;		_GenerateEvt
 26465 ;;		_UartSetConfigLow
 26466 ;;		_Uart_InitUartModule
 26467 ;;		_Uart_WriteConstString
 26468 ;; This function is called by:
 26469 ;;		_Mdm_MainTask
 26470 ;; This function uses a non-reentrant model
 26471 ;;
 26472                           
 26473                           	psect	text125
 26474  003710                     __ptext125:
 26475                           	opt stack 0
 26476  003710                     _ConfigureModem:
 26477                           	opt stack 13
 26478                           
 26479                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 26480                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 26481                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 26482                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 26483                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 26484                           
 26485                           ;incstack = 0
 26486  003710  D05A               	goto	l1027
 26487  003712                     
 26488                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 26489  003712  0E02               	movlw	2
 26490  003714  0100               	movlb	0	; () banked
 26491  003716  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26492  003718  A4D8               	btfss	status,2,c
 26493  00371A  0012               	return	
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;mdm_gsm_gprs.c: 431: {
 26497                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 26498  00371C  0E01               	movlw	1
 26499  00371E  0101               	movlb	1	; () banked
 26500  003720  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26501                           
 26502                           ; BSR set to: 1
 26503                           ;mdm_gsm_gprs.c: 434: }
 26504                           ;mdm_gsm_gprs.c: 435: break;
 26505  003722  0012               	return	
 26506  003724                     
 26507                           ; BSR set to: 1
 26508                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 26509                           
 26510                           ; BSR set to: 1
 26511  003724  0E74               	movlw	low STR_2
 26512  003726  0100               	movlb	0	; () banked
 26513  003728  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26514  00372A  0EFF               	movlw	high STR_2
 26515  00372C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26516  00372E  0E01               	movlw	1
 26517  003730  EC00  F02F         	call	_Uart_WriteConstString
 26518                           
 26519                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 26520  003734  EC36  F02B         	call	_UartSetConfigLow	;wreg free
 26521                           
 26522                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 26523  003738  0E28               	movlw	low _UartConfig
 26524  00373A  0100               	movlb	0	; () banked
 26525  00373C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 26526  00373E  0E03               	movlw	high _UartConfig
 26527  003740  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 26528  003742  0E01               	movlw	1
 26529  003744  EC5E  F005         	call	_Uart_InitUartModule
 26530                           
 26531                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26532  003748  0E03               	movlw	3
 26533  00374A  0102               	movlb	2	; () banked
 26534  00374C  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26535  00374E  0EE8               	movlw	232
 26536  003750  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26537                           
 26538                           ; BSR set to: 2
 26539                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 26540  003752  0E02               	movlw	2
 26541  003754  0101               	movlb	1	; () banked
 26542  003756  6FF3               	movwf	ConfigureModem@NextState& (0+255),b
 26543                           
 26544                           ; BSR set to: 1
 26545                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 26546  003758  0E04               	movlw	4
 26547  00375A  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26548                           
 26549                           ;mdm_gsm_gprs.c: 449: break;
 26550  00375C  0012               	return	
 26551  00375E                     
 26552                           ; BSR set to: 1
 26553                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 26554                           
 26555                           ; BSR set to: 1
 26556  00375E  0EDE               	movlw	low STR_3
 26557  003760  0100               	movlb	0	; () banked
 26558  003762  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26559  003764  0EFF               	movlw	high STR_3
 26560  003766  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26561  003768  0E01               	movlw	1
 26562  00376A  EC00  F02F         	call	_Uart_WriteConstString
 26563                           
 26564                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26565  00376E  0E03               	movlw	3
 26566  003770  0102               	movlb	2	; () banked
 26567  003772  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26568  003774  0EE8               	movlw	232
 26569  003776  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26570                           
 26571                           ; BSR set to: 2
 26572                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 26573  003778  0E05               	movlw	5
 26574  00377A  0101               	movlb	1	; () banked
 26575  00377C  6FF3               	movwf	ConfigureModem@NextState& (0+255),b
 26576                           
 26577                           ; BSR set to: 1
 26578                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 26579  00377E  0E04               	movlw	4
 26580  003780  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26581                           
 26582                           ;mdm_gsm_gprs.c: 459: break;
 26583  003782  0012               	return	
 26584  003784                     
 26585                           ; BSR set to: 1
 26586                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 26587                           
 26588                           ; BSR set to: 1
 26589  003784  0103               	movlb	3	; () banked
 26590  003786  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 26591  003788  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 26592                           
 26593                           ; BSR set to: 3
 26594                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 26595  00378A  0102               	movlb	2	; () banked
 26596  00378C  51D7               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 26597  00378E  0103               	movlb	3	; () banked
 26598  003790  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 26599  003792  0102               	movlb	2	; () banked
 26600  003794  51D8               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 26601  003796  0103               	movlb	3	; () banked
 26602  003798  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 26603  00379A  A0D8               	btfss	status,0,c
 26604  00379C  0012               	return	
 26605                           
 26606                           ; BSR set to: 3
 26607                           ;mdm_gsm_gprs.c: 466: {
 26608                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 26609  00379E  0E00               	movlw	0
 26610  0037A0  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 26611  0037A2  0E00               	movlw	0
 26612  0037A4  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 26613                           
 26614                           ; BSR set to: 3
 26615                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 26616  0037A6  C1F3  F1F4         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 26617                           
 26618                           ; BSR set to: 3
 26619                           ;mdm_gsm_gprs.c: 471: }
 26620                           ;mdm_gsm_gprs.c: 472: break;
 26621  0037AA  0012               	return	
 26622  0037AC                     
 26623                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 26624                           
 26625                           ; BSR set to: 3
 26626  0037AC  0E03               	movlw	3
 26627  0037AE  0100               	movlb	0	; () banked
 26628  0037B0  6FD1               	movwf	_MdmStatus& (0+255),b
 26629                           
 26630                           ; BSR set to: 0
 26631                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 26632  0037B2  0E39               	movlw	low _MdmStsReady
 26633  0037B4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26634  0037B6  0E00               	movlw	high _MdmStsReady
 26635  0037B8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26636  0037BA  EC05  F033         	call	_GenerateEvt	;wreg free
 26637                           
 26638                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 26639  0037BE  0E06               	movlw	6
 26640  0037C0  0101               	movlb	1	; () banked
 26641  0037C2  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26642                           
 26643                           ; BSR set to: 1
 26644                           ;mdm_gsm_gprs.c: 488: }
 26645                           
 26646                           ; BSR set to: 1
 26647                           ;mdm_gsm_gprs.c: 487: break;
 26648                           
 26649                           ;mdm_gsm_gprs.c: 486: default:
 26650                           
 26651                           ; BSR set to: 1
 26652                           ;mdm_gsm_gprs.c: 484: break;
 26653                           
 26654                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 26655                           
 26656                           ;mdm_gsm_gprs.c: 481: break;
 26657  0037C4  0012               	return	
 26658  0037C6                     l1027:
 26659                           
 26660                           ; BSR set to: 1
 26661  0037C6  0101               	movlb	1	; () banked
 26662  0037C8  51F4               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 26663                           
 26664                           ; Switch size 1, requested type "space"
 26665                           ; Number of cases is 6, Range of values is 0 to 6
 26666                           ; switch strategies available:
 26667                           ; Name         Instructions Cycles
 26668                           ; simple_byte           19    10 (average)
 26669                           ;	Chosen strategy is simple_byte
 26670  0037CA  0A00               	xorlw	0	; case 0
 26671  0037CC  B4D8               	btfsc	status,2,c
 26672  0037CE  D7A1               	goto	l1028
 26673  0037D0  0A01               	xorlw	1	; case 1
 26674  0037D2  B4D8               	btfsc	status,2,c
 26675  0037D4  D7A7               	goto	l1031
 26676  0037D6  0A03               	xorlw	3	; case 2
 26677  0037D8  B4D8               	btfsc	status,2,c
 26678  0037DA  D7C1               	goto	l1032
 26679  0037DC  0A06               	xorlw	6	; case 4
 26680  0037DE  B4D8               	btfsc	status,2,c
 26681  0037E0  D7D1               	goto	l1033
 26682  0037E2  0A01               	xorlw	1	; case 5
 26683  0037E4  B4D8               	btfsc	status,2,c
 26684  0037E6  D7E2               	goto	l1035
 26685  0037E8  0A03               	xorlw	3	; case 6
 26686  0037EA  0012               	return	
 26687  0037EC                     __end_of_ConfigureModem:
 26688                           	opt stack 0
 26689                           tosu	equ	0xFFF
 26690                           tosh	equ	0xFFE
 26691                           tosl	equ	0xFFD
 26692                           pclath	equ	0xFFA
 26693                           tblptru	equ	0xFF8
 26694                           tblptrh	equ	0xFF7
 26695                           tblptrl	equ	0xFF6
 26696                           tablat	equ	0xFF5
 26697                           prodh	equ	0xFF4
 26698                           prodl	equ	0xFF3
 26699                           intcon	equ	0xFF2
 26700                           intcon2	equ	0xFF1
 26701                           intcon3	equ	0xFF0
 26702                           indf0	equ	0xFEF
 26703                           postinc0	equ	0xFEE
 26704                           plusw0	equ	0xFEB
 26705                           fsr0h	equ	0xFEA
 26706                           fsr0l	equ	0xFE9
 26707                           wreg	equ	0xFE8
 26708                           indf1	equ	0xFE7
 26709                           postinc1	equ	0xFE6
 26710                           postdec1	equ	0xFE5
 26711                           plusw1	equ	0xFE3
 26712                           fsr1h	equ	0xFE2
 26713                           fsr1l	equ	0xFE1
 26714                           indf2	equ	0xFDF
 26715                           postinc2	equ	0xFDE
 26716                           postdec2	equ	0xFDD
 26717                           plusw2	equ	0xFDB
 26718                           fsr2h	equ	0xFDA
 26719                           fsr2l	equ	0xFD9
 26720                           status	equ	0xFD8
 26721                           
 26722 ;; *************** function _Uart_InitUartModule *****************
 26723 ;; Defined at:
 26724 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;  Module          1    wreg     unsigned char 
 26727 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 26728 ;;		 -> UartConfig(21), 
 26729 ;; Auto vars:     Size  Location     Type
 26730 ;;  Module          1   65[BANK0 ] unsigned char 
 26731 ;; Return value:  Size  Location     Type
 26732 ;;                  1    wreg      void 
 26733 ;; Registers used:
 26734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26735 ;; Tracked objects:
 26736 ;;		On entry : 0/0
 26737 ;;		On exit  : 0/0
 26738 ;;		Unchanged: 0/0
 26739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26743 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26744 ;;Total ram usage:        5 bytes
 26745 ;; Hardware stack levels used:    1
 26746 ;; Hardware stack levels required when called:   13
 26747 ;; This function calls:
 26748 ;;		_SetUartBaudRate
 26749 ;; This function is called by:
 26750 ;;		_ConfigureModem
 26751 ;;		_Mdm_MainTask
 26752 ;; This function uses a non-reentrant model
 26753 ;;
 26754                           
 26755                           	psect	text126
 26756  000ABC                     __ptext126:
 26757                           	opt stack 0
 26758  000ABC                     _Uart_InitUartModule:
 26759                           	opt stack 14
 26760                           
 26761                           ;incstack = 0
 26762                           ;Uart_InitUartModule@Module stored from wreg
 26763  000ABC  0100               	movlb	0	; () banked
 26764  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 26765                           
 26766                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 26767  000AC0  0100               	movlb	0	; () banked
 26768  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 26769  000AC4  A4D8               	btfss	status,2,c
 26770  000AC6  D0BE               	goto	l668
 26771                           
 26772                           ; BSR set to: 0
 26773                           ;uart_drv.c: 291: {
 26774                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 26775  000AC8  9C94               	bcf	3988,6,c	;volatile
 26776                           
 26777                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 26778  000ACA  8E94               	bsf	3988,7,c	;volatile
 26779                           
 26780                           ; BSR set to: 0
 26781                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 26782  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 26783  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 26784  000AD4  0E01               	movlw	1
 26785  000AD6  ECD4  F015         	call	_SetUartBaudRate
 26786                           
 26787                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 26788  000ADA  0E00               	movlw	0
 26789  000ADC  6EAD               	movwf	4013,c	;volatile
 26790                           
 26791                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 26792  000ADE  0100               	movlb	0	; () banked
 26793  000AE0  EE20 F004          	lfsr	2,4
 26794  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26795  000AE6  26D9               	addwf	fsr2l,f,c
 26796  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26797  000AEA  22DA               	addwfc	fsr2h,f,c
 26798  000AEC  50DF               	movf	indf2,w,c
 26799  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26800  000AF0  0E06               	movlw	6
 26801  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26802  000AF4                     u13045:
 26803  000AF4  90D8               	bcf	status,0,c
 26804  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26805  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26806  000AFA  D7FC               	goto	u13045
 26807  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26808  000AFE  12AD               	iorwf	4013,f,c	;volatile
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 26812  000B00  EE20 F006          	lfsr	2,6
 26813  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26814  000B06  26D9               	addwf	fsr2l,f,c
 26815  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26816  000B0A  22DA               	addwfc	fsr2h,f,c
 26817  000B0C  50DF               	movf	indf2,w,c
 26818  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26819  000B10  0E05               	movlw	5
 26820  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26821  000B14                     u13055:
 26822  000B14  90D8               	bcf	status,0,c
 26823  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26824  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26825  000B1A  D7FC               	goto	u13055
 26826  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26827  000B1E  12AD               	iorwf	4013,f,c	;volatile
 26828                           
 26829                           ; BSR set to: 0
 26830                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 26831  000B20  EE20 F001          	lfsr	2,1
 26832  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26833  000B26  26D9               	addwf	fsr2l,f,c
 26834  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26835  000B2A  22DA               	addwfc	fsr2h,f,c
 26836  000B2C  50DF               	movf	indf2,w,c
 26837  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26838  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26839  000B32  0BF0               	andlw	240
 26840  000B34  12AD               	iorwf	4013,f,c	;volatile
 26841                           
 26842                           ; BSR set to: 0
 26843                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 26844  000B36  EE20 F008          	lfsr	2,8
 26845  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26846  000B3C  26D9               	addwf	fsr2l,f,c
 26847  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26848  000B40  22DA               	addwfc	fsr2h,f,c
 26849  000B42  50DF               	movf	indf2,w,c
 26850  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26851  000B46  90D8               	bcf	status,0,c
 26852  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26853  000B4A  90D8               	bcf	status,0,c
 26854  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26855  000B4E  90D8               	bcf	status,0,c
 26856  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26857  000B52  12AD               	iorwf	4013,f,c	;volatile
 26858                           
 26859                           ; BSR set to: 0
 26860                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 26861  000B54  EE20 F003          	lfsr	2,3
 26862  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26863  000B5A  26D9               	addwf	fsr2l,f,c
 26864  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26865  000B5E  22DA               	addwfc	fsr2h,f,c
 26866  000B60  50DF               	movf	indf2,w,c
 26867  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26868  000B64  90D8               	bcf	status,0,c
 26869  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26870  000B68  90D8               	bcf	status,0,c
 26871  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26872  000B6C  12AD               	iorwf	4013,f,c	;volatile
 26873                           
 26874                           ; BSR set to: 0
 26875                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 26876  000B6E  0E00               	movlw	0
 26877  000B70  6EAC               	movwf	4012,c	;volatile
 26878                           
 26879                           ; BSR set to: 0
 26880                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 26881  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 26882  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 26883  000B7A  50DF               	movf	indf2,w,c
 26884  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26885  000B7E  0E00               	movlw	0
 26886  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 26887  000B82  0E80               	movlw	128
 26888  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26889  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26890  000B88  12AC               	iorwf	4012,f,c	;volatile
 26891                           
 26892                           ; BSR set to: 0
 26893                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 26894  000B8A  EE20 F005          	lfsr	2,5
 26895  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26896  000B90  26D9               	addwf	fsr2l,f,c
 26897  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26898  000B94  22DA               	addwfc	fsr2h,f,c
 26899  000B96  50DF               	movf	indf2,w,c
 26900  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26901  000B9A  0E06               	movlw	6
 26902  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26903  000B9E                     u13065:
 26904  000B9E  90D8               	bcf	status,0,c
 26905  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26906  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26907  000BA4  D7FC               	goto	u13065
 26908  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26909  000BA8  12AC               	iorwf	4012,f,c	;volatile
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 26913  000BAA  EE20 F007          	lfsr	2,7
 26914  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26915  000BB0  26D9               	addwf	fsr2l,f,c
 26916  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26917  000BB4  22DA               	addwfc	fsr2h,f,c
 26918  000BB6  50DF               	movf	indf2,w,c
 26919  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26920  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26921  000BBC  0BF0               	andlw	240
 26922  000BBE  12AC               	iorwf	4012,f,c	;volatile
 26923                           
 26924                           ; BSR set to: 0
 26925                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 26926  000BC0  0E00               	movlw	0
 26927  000BC2  6E7E               	movwf	3966,c	;volatile
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 26931  000BC4  EE20 F002          	lfsr	2,2
 26932  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26933  000BCA  26D9               	addwf	fsr2l,f,c
 26934  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26935  000BCE  22DA               	addwfc	fsr2h,f,c
 26936  000BD0  50DF               	movf	indf2,w,c
 26937  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26938  000BD4  90D8               	bcf	status,0,c
 26939  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26940  000BD8  90D8               	bcf	status,0,c
 26941  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26942  000BDC  90D8               	bcf	status,0,c
 26943  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26944  000BE0  127E               	iorwf	3966,f,c	;volatile
 26945                           
 26946                           ; BSR set to: 0
 26947                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 26948  000BE2  EE20 F00A          	lfsr	2,10
 26949  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26950  000BE8  26D9               	addwf	fsr2l,f,c
 26951  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26952  000BEC  22DA               	addwfc	fsr2h,f,c
 26953  000BEE  50DF               	movf	indf2,w,c
 26954  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26955  000BF2  90D8               	bcf	status,0,c
 26956  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26957  000BF6  127E               	iorwf	3966,f,c	;volatile
 26958                           
 26959                           ; BSR set to: 0
 26960                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 26961  000BF8  EE20 F009          	lfsr	2,9
 26962  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26963  000BFE  26D9               	addwf	fsr2l,f,c
 26964  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26965  000C02  22DA               	addwfc	fsr2h,f,c
 26966  000C04  50DF               	movf	indf2,w,c
 26967  000C06  127E               	iorwf	3966,f,c	;volatile
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 26971  000C08  EE20 F00B          	lfsr	2,11
 26972  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26973  000C0E  26D9               	addwf	fsr2l,f,c
 26974  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26975  000C12  22DA               	addwfc	fsr2h,f,c
 26976  000C14  50DF               	movf	indf2,w,c
 26977  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26978  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26979  000C1A  509D               	movf	3997,w,c	;volatile
 26980  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26981  000C1E  0BEF               	andlw	-17
 26982  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26983  000C22  6E9D               	movwf	3997,c	;volatile
 26984                           
 26985                           ; BSR set to: 0
 26986                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 26987  000C24  EE20 F00C          	lfsr	2,12
 26988  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26989  000C2A  26D9               	addwf	fsr2l,f,c
 26990  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26991  000C2E  22DA               	addwfc	fsr2h,f,c
 26992  000C30  50DF               	movf	indf2,w,c
 26993  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26994  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26995  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 26996  000C38  509D               	movf	3997,w,c	;volatile
 26997  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26998  000C3C  0BDF               	andlw	-33
 26999  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27000  000C40  6E9D               	movwf	3997,c	;volatile
 27001                           
 27002                           ;uart_drv.c: 326: }
 27003  000C42  0012               	return	
 27004  000C44                     l668:
 27005                           
 27006                           ; BSR set to: 0
 27007                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27008                           
 27009                           ; BSR set to: 0
 27010  000C44  0E02               	movlw	2
 27011  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27012  000C48  A4D8               	btfss	status,2,c
 27013  000C4A  0012               	return	
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;uart_drv.c: 328: {
 27017                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27018  000C4C  9094               	bcf	3988,0,c	;volatile
 27019                           
 27020                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27021  000C4E  8294               	bsf	3988,1,c	;volatile
 27022                           
 27023                           ; BSR set to: 0
 27024                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27025  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27026  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27027  000C58  0E02               	movlw	2
 27028  000C5A  ECD4  F015         	call	_SetUartBaudRate
 27029                           
 27030                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27031  000C5E  0E00               	movlw	0
 27032  000C60  6EA8               	movwf	4008,c	;volatile
 27033                           
 27034                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27035  000C62  0100               	movlb	0	; () banked
 27036  000C64  EE20 F004          	lfsr	2,4
 27037  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27038  000C6A  26D9               	addwf	fsr2l,f,c
 27039  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27040  000C6E  22DA               	addwfc	fsr2h,f,c
 27041  000C70  50DF               	movf	indf2,w,c
 27042  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27043  000C74  0E06               	movlw	6
 27044  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27045  000C78                     u13085:
 27046  000C78  90D8               	bcf	status,0,c
 27047  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27048  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27049  000C7E  D7FC               	goto	u13085
 27050  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27051  000C82  12A8               	iorwf	4008,f,c	;volatile
 27052                           
 27053                           ; BSR set to: 0
 27054                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27055  000C84  EE20 F006          	lfsr	2,6
 27056  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27057  000C8A  26D9               	addwf	fsr2l,f,c
 27058  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27059  000C8E  22DA               	addwfc	fsr2h,f,c
 27060  000C90  50DF               	movf	indf2,w,c
 27061  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27062  000C94  0E05               	movlw	5
 27063  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27064  000C98                     u13095:
 27065  000C98  90D8               	bcf	status,0,c
 27066  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27067  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27068  000C9E  D7FC               	goto	u13095
 27069  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27070  000CA2  12A8               	iorwf	4008,f,c	;volatile
 27071                           
 27072                           ; BSR set to: 0
 27073                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27074  000CA4  EE20 F001          	lfsr	2,1
 27075  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27076  000CAA  26D9               	addwf	fsr2l,f,c
 27077  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27078  000CAE  22DA               	addwfc	fsr2h,f,c
 27079  000CB0  50DF               	movf	indf2,w,c
 27080  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27081  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27082  000CB6  0BF0               	andlw	240
 27083  000CB8  12A8               	iorwf	4008,f,c	;volatile
 27084                           
 27085                           ; BSR set to: 0
 27086                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27087  000CBA  EE20 F008          	lfsr	2,8
 27088  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27089  000CC0  26D9               	addwf	fsr2l,f,c
 27090  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27091  000CC4  22DA               	addwfc	fsr2h,f,c
 27092  000CC6  50DF               	movf	indf2,w,c
 27093  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27094  000CCA  90D8               	bcf	status,0,c
 27095  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27096  000CCE  90D8               	bcf	status,0,c
 27097  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27098  000CD2  90D8               	bcf	status,0,c
 27099  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27100  000CD6  12A8               	iorwf	4008,f,c	;volatile
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27104  000CD8  EE20 F003          	lfsr	2,3
 27105  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27106  000CDE  26D9               	addwf	fsr2l,f,c
 27107  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27108  000CE2  22DA               	addwfc	fsr2h,f,c
 27109  000CE4  50DF               	movf	indf2,w,c
 27110  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27111  000CE8  90D8               	bcf	status,0,c
 27112  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27113  000CEC  90D8               	bcf	status,0,c
 27114  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27115  000CF0  12A8               	iorwf	4008,f,c	;volatile
 27116                           
 27117                           ; BSR set to: 0
 27118                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27119  000CF2  0E00               	movlw	0
 27120  000CF4  6E9C               	movwf	3996,c	;volatile
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27124  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27125  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27126  000CFE  50DF               	movf	indf2,w,c
 27127  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27128  000D02  0E00               	movlw	0
 27129  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27130  000D06  0E80               	movlw	128
 27131  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27132  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27133  000D0C  129C               	iorwf	3996,f,c	;volatile
 27134                           
 27135                           ; BSR set to: 0
 27136                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27137  000D0E  EE20 F005          	lfsr	2,5
 27138  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27139  000D14  26D9               	addwf	fsr2l,f,c
 27140  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27141  000D18  22DA               	addwfc	fsr2h,f,c
 27142  000D1A  50DF               	movf	indf2,w,c
 27143  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27144  000D1E  0E06               	movlw	6
 27145  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27146  000D22                     u13105:
 27147  000D22  90D8               	bcf	status,0,c
 27148  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27149  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27150  000D28  D7FC               	goto	u13105
 27151  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27152  000D2C  129C               	iorwf	3996,f,c	;volatile
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27156  000D2E  EE20 F007          	lfsr	2,7
 27157  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27158  000D34  26D9               	addwf	fsr2l,f,c
 27159  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27160  000D38  22DA               	addwfc	fsr2h,f,c
 27161  000D3A  50DF               	movf	indf2,w,c
 27162  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27163  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27164  000D40  0BF0               	andlw	240
 27165  000D42  129C               	iorwf	3996,f,c	;volatile
 27166                           
 27167                           ; BSR set to: 0
 27168                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27169  000D44  0E00               	movlw	0
 27170  000D46  6E7C               	movwf	3964,c	;volatile
 27171                           
 27172                           ; BSR set to: 0
 27173                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27174  000D48  EE20 F002          	lfsr	2,2
 27175  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27176  000D4E  26D9               	addwf	fsr2l,f,c
 27177  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27178  000D52  22DA               	addwfc	fsr2h,f,c
 27179  000D54  50DF               	movf	indf2,w,c
 27180  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27181  000D58  90D8               	bcf	status,0,c
 27182  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27183  000D5C  90D8               	bcf	status,0,c
 27184  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27185  000D60  90D8               	bcf	status,0,c
 27186  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27187  000D64  127C               	iorwf	3964,f,c	;volatile
 27188                           
 27189                           ; BSR set to: 0
 27190                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27191  000D66  EE20 F00A          	lfsr	2,10
 27192  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27193  000D6C  26D9               	addwf	fsr2l,f,c
 27194  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27195  000D70  22DA               	addwfc	fsr2h,f,c
 27196  000D72  50DF               	movf	indf2,w,c
 27197  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27198  000D76  90D8               	bcf	status,0,c
 27199  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27200  000D7A  127C               	iorwf	3964,f,c	;volatile
 27201                           
 27202                           ; BSR set to: 0
 27203                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27204  000D7C  EE20 F009          	lfsr	2,9
 27205  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27206  000D82  26D9               	addwf	fsr2l,f,c
 27207  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27208  000D86  22DA               	addwfc	fsr2h,f,c
 27209  000D88  50DF               	movf	indf2,w,c
 27210  000D8A  127C               	iorwf	3964,f,c	;volatile
 27211                           
 27212                           ; BSR set to: 0
 27213                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27214  000D8C  EE20 F00B          	lfsr	2,11
 27215  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27216  000D92  26D9               	addwf	fsr2l,f,c
 27217  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27218  000D96  22DA               	addwfc	fsr2h,f,c
 27219  000D98  50DF               	movf	indf2,w,c
 27220  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27221  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27222  000D9E  50A3               	movf	4003,w,c	;volatile
 27223  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27224  000DA2  0BEF               	andlw	-17
 27225  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27226  000DA6  6EA3               	movwf	4003,c	;volatile
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27230  000DA8  EE20 F00C          	lfsr	2,12
 27231  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27232  000DAE  26D9               	addwf	fsr2l,f,c
 27233  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27234  000DB2  22DA               	addwfc	fsr2h,f,c
 27235  000DB4  50DF               	movf	indf2,w,c
 27236  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27237  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27238  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27239  000DBC  50A3               	movf	4003,w,c	;volatile
 27240  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27241  000DC0  0BDF               	andlw	-33
 27242  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27243  000DC4  6EA3               	movwf	4003,c	;volatile
 27244                           
 27245                           ; BSR set to: 0
 27246  000DC6  0012               	return	
 27247  000DC8                     __end_of_Uart_InitUartModule:
 27248                           	opt stack 0
 27249                           tosu	equ	0xFFF
 27250                           tosh	equ	0xFFE
 27251                           tosl	equ	0xFFD
 27252                           pclath	equ	0xFFA
 27253                           tblptru	equ	0xFF8
 27254                           tblptrh	equ	0xFF7
 27255                           tblptrl	equ	0xFF6
 27256                           tablat	equ	0xFF5
 27257                           prodh	equ	0xFF4
 27258                           prodl	equ	0xFF3
 27259                           intcon	equ	0xFF2
 27260                           intcon2	equ	0xFF1
 27261                           intcon3	equ	0xFF0
 27262                           indf0	equ	0xFEF
 27263                           postinc0	equ	0xFEE
 27264                           plusw0	equ	0xFEB
 27265                           fsr0h	equ	0xFEA
 27266                           fsr0l	equ	0xFE9
 27267                           wreg	equ	0xFE8
 27268                           indf1	equ	0xFE7
 27269                           postinc1	equ	0xFE6
 27270                           postdec1	equ	0xFE5
 27271                           plusw1	equ	0xFE3
 27272                           fsr1h	equ	0xFE2
 27273                           fsr1l	equ	0xFE1
 27274                           indf2	equ	0xFDF
 27275                           postinc2	equ	0xFDE
 27276                           postdec2	equ	0xFDD
 27277                           plusw2	equ	0xFDB
 27278                           fsr2h	equ	0xFDA
 27279                           fsr2l	equ	0xFD9
 27280                           status	equ	0xFD8
 27281                           
 27282 ;; *************** function _SetUartBaudRate *****************
 27283 ;; Defined at:
 27284 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;  Module          1    wreg     unsigned char 
 27287 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27288 ;;		 -> UartConfig(21), 
 27289 ;; Auto vars:     Size  Location     Type
 27290 ;;  Module          1   57[BANK0 ] unsigned char 
 27291 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27292 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27293 ;; Return value:  Size  Location     Type
 27294 ;;                  1    wreg      void 
 27295 ;; Registers used:
 27296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27297 ;; Tracked objects:
 27298 ;;		On entry : 0/0
 27299 ;;		On exit  : 0/0
 27300 ;;		Unchanged: 0/0
 27301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27305 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27306 ;;Total ram usage:        7 bytes
 27307 ;; Hardware stack levels used:    1
 27308 ;; Hardware stack levels required when called:   12
 27309 ;; This function calls:
 27310 ;;		___lldiv
 27311 ;;		___lmul
 27312 ;; This function is called by:
 27313 ;;		_Uart_InitUartModule
 27314 ;; This function uses a non-reentrant model
 27315 ;;
 27316                           
 27317                           	psect	text127
 27318  002BA8                     __ptext127:
 27319                           	opt stack 0
 27320  002BA8                     _SetUartBaudRate:
 27321                           	opt stack 14
 27322                           
 27323                           ; BSR set to: 0
 27324                           ;incstack = 0
 27325                           ;SetUartBaudRate@Module stored from wreg
 27326  002BA8  0100               	movlb	0	; () banked
 27327  002BAA  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27328                           
 27329                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27330  002BAC  0E00               	movlw	0
 27331  002BAE  0100               	movlb	0	; () banked
 27332  002BB0  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27333  002BB2  0E00               	movlw	0
 27334  002BB4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27335                           
 27336                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27337  002BB6  0E00               	movlw	0
 27338  002BB8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27339                           
 27340                           ; BSR set to: 0
 27341                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27342  002BBA  EE20 F002          	lfsr	2,2
 27343  002BBE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27344  002BC0  26D9               	addwf	fsr2l,f,c
 27345  002BC2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27346  002BC4  22DA               	addwfc	fsr2h,f,c
 27347  002BC6  50DF               	movf	indf2,w,c
 27348  002BC8  A4D8               	btfss	status,2,c
 27349  002BCA  D00B               	goto	l625
 27350                           
 27351                           ; BSR set to: 0
 27352  002BCC  EE20 F002          	lfsr	2,2
 27353  002BD0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27354  002BD2  26D9               	addwf	fsr2l,f,c
 27355  002BD4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27356  002BD6  22DA               	addwfc	fsr2h,f,c
 27357  002BD8  50DF               	movf	indf2,w,c
 27358  002BDA  A4D8               	btfss	status,2,c
 27359  002BDC  D002               	goto	l625
 27360                           
 27361                           ; BSR set to: 0
 27362                           ;uart_drv.c: 128: {
 27363                           ;uart_drv.c: 129: DivisionFactor = 64;
 27364  002BDE  0E40               	movlw	64
 27365  002BE0  D039               	goto	L39
 27366  002BE2                     l625:
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27370                           
 27371                           ; BSR set to: 0
 27372  002BE2  EE20 F002          	lfsr	2,2
 27373  002BE6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27374  002BE8  26D9               	addwf	fsr2l,f,c
 27375  002BEA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27376  002BEC  22DA               	addwfc	fsr2h,f,c
 27377  002BEE  04DE               	decf	postinc2,w,c
 27378  002BF0  A4D8               	btfss	status,2,c
 27379  002BF2  D009               	goto	l627
 27380                           
 27381                           ; BSR set to: 0
 27382  002BF4  EE20 F002          	lfsr	2,2
 27383  002BF8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27384  002BFA  26D9               	addwf	fsr2l,f,c
 27385  002BFC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27386  002BFE  22DA               	addwfc	fsr2h,f,c
 27387  002C00  50DF               	movf	indf2,w,c
 27388  002C02  B4D8               	btfsc	status,2,c
 27389  002C04  D012               	goto	u12200
 27390  002C06                     l627:
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27394                           
 27395                           ; BSR set to: 0
 27396  002C06  EE20 F002          	lfsr	2,2
 27397  002C0A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27398  002C0C  26D9               	addwf	fsr2l,f,c
 27399  002C0E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27400  002C10  22DA               	addwfc	fsr2h,f,c
 27401  002C12  50DF               	movf	indf2,w,c
 27402  002C14  A4D8               	btfss	status,2,c
 27403  002C16  D00B               	goto	l629
 27404                           
 27405                           ; BSR set to: 0
 27406  002C18  EE20 F002          	lfsr	2,2
 27407  002C1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27408  002C1E  26D9               	addwf	fsr2l,f,c
 27409  002C20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27410  002C22  22DA               	addwfc	fsr2h,f,c
 27411  002C24  04DE               	decf	postinc2,w,c
 27412  002C26  A4D8               	btfss	status,2,c
 27413  002C28  D002               	goto	l629
 27414  002C2A                     u12200:
 27415                           
 27416                           ; BSR set to: 0
 27417                           ;uart_drv.c: 136: {
 27418                           ;uart_drv.c: 137: DivisionFactor = 16;
 27419  002C2A  0E10               	movlw	16
 27420  002C2C  D013               	goto	L39
 27421  002C2E                     l629:
 27422                           
 27423                           ; BSR set to: 0
 27424                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27425                           
 27426                           ; BSR set to: 0
 27427  002C2E  EE20 F002          	lfsr	2,2
 27428  002C32  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27429  002C34  26D9               	addwf	fsr2l,f,c
 27430  002C36  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27431  002C38  22DA               	addwfc	fsr2h,f,c
 27432  002C3A  04DE               	decf	postinc2,w,c
 27433  002C3C  A4D8               	btfss	status,2,c
 27434  002C3E  D00B               	goto	l631
 27435                           
 27436                           ; BSR set to: 0
 27437  002C40  EE20 F002          	lfsr	2,2
 27438  002C44  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27439  002C46  26D9               	addwf	fsr2l,f,c
 27440  002C48  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27441  002C4A  22DA               	addwfc	fsr2h,f,c
 27442  002C4C  04DE               	decf	postinc2,w,c
 27443  002C4E  A4D8               	btfss	status,2,c
 27444  002C50  D002               	goto	l631
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;uart_drv.c: 140: {
 27448                           ;uart_drv.c: 141: DivisionFactor = 4;
 27449  002C52  0E04               	movlw	4
 27450  002C54                     L39:
 27451  002C54  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27452  002C56                     l631:
 27453                           
 27454                           ; BSR set to: 0
 27455                           ;uart_drv.c: 146: }
 27456                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 27457                           
 27458                           ; BSR set to: 0
 27459                           
 27460                           ; BSR set to: 0
 27461                           
 27462                           ; BSR set to: 0
 27463                           
 27464                           ; BSR set to: 0
 27465                           
 27466                           ;uart_drv.c: 143: else
 27467                           ;uart_drv.c: 144: {
 27468                           
 27469                           ; BSR set to: 0
 27470  002C56  EE20 F00D          	lfsr	2,13
 27471  002C5A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27472  002C5C  26D9               	addwf	fsr2l,f,c
 27473  002C5E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27474  002C60  22DA               	addwfc	fsr2h,f,c
 27475  002C62  CFDE F089          	movff	postinc2,___lldiv@dividend
 27476  002C66  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 27477  002C6A  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 27478  002C6E  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 27479  002C72  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 27480  002C74  6F7D               	movwf	___lmul@multiplier& (0+255),b
 27481  002C76  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 27482  002C78  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 27483  002C7A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 27484  002C7C  EE20 F011          	lfsr	2,17
 27485  002C80  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27486  002C82  26D9               	addwf	fsr2l,f,c
 27487  002C84  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27488  002C86  22DA               	addwfc	fsr2h,f,c
 27489  002C88  CFDE F081          	movff	postinc2,___lmul@multiplicand
 27490  002C8C  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 27491  002C90  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 27492  002C94  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 27493  002C98  EC0A  F02B         	call	___lmul	;wreg free
 27494  002C9C  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 27495  002CA0  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 27496  002CA4  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 27497  002CA8  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 27498  002CAC  ECB9  F027         	call	___lldiv	;wreg free
 27499  002CB0  0EFF               	movlw	255
 27500  002CB2  0100               	movlb	0	; () banked
 27501  002CB4  2589               	addwf	?___lldiv& (0+255),w,b
 27502  002CB6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27503  002CB8  0EFF               	movlw	255
 27504  002CBA  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 27505  002CBC  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27506                           
 27507                           ; BSR set to: 0
 27508                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 27509  002CBE  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 27510  002CC0  A4D8               	btfss	status,2,c
 27511  002CC2  D005               	goto	l633
 27512                           
 27513                           ; BSR set to: 0
 27514                           ;uart_drv.c: 152: {
 27515                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27516  002CC4  0E00               	movlw	0
 27517  002CC6  6E7F               	movwf	3967,c	;volatile
 27518                           
 27519                           ; BSR set to: 0
 27520                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27521  002CC8  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 27522                           
 27523                           ;uart_drv.c: 156: }
 27524  002CCC  0012               	return	
 27525  002CCE                     l633:
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 27529                           
 27530                           ; BSR set to: 0
 27531  002CCE  0E02               	movlw	2
 27532  002CD0  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 27533  002CD2  A4D8               	btfss	status,2,c
 27534  002CD4  0012               	return	
 27535                           
 27536                           ; BSR set to: 0
 27537                           ;uart_drv.c: 158: {
 27538                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27539  002CD6  0E00               	movlw	0
 27540  002CD8  6E7D               	movwf	3965,c	;volatile
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27544  002CDA  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 27545                           
 27546                           ; BSR set to: 0
 27547  002CDE  0012               	return	
 27548  002CE0                     __end_of_SetUartBaudRate:
 27549                           	opt stack 0
 27550                           tosu	equ	0xFFF
 27551                           tosh	equ	0xFFE
 27552                           tosl	equ	0xFFD
 27553                           pclath	equ	0xFFA
 27554                           tblptru	equ	0xFF8
 27555                           tblptrh	equ	0xFF7
 27556                           tblptrl	equ	0xFF6
 27557                           tablat	equ	0xFF5
 27558                           prodh	equ	0xFF4
 27559                           prodl	equ	0xFF3
 27560                           intcon	equ	0xFF2
 27561                           intcon2	equ	0xFF1
 27562                           intcon3	equ	0xFF0
 27563                           indf0	equ	0xFEF
 27564                           postinc0	equ	0xFEE
 27565                           plusw0	equ	0xFEB
 27566                           fsr0h	equ	0xFEA
 27567                           fsr0l	equ	0xFE9
 27568                           wreg	equ	0xFE8
 27569                           indf1	equ	0xFE7
 27570                           postinc1	equ	0xFE6
 27571                           postdec1	equ	0xFE5
 27572                           plusw1	equ	0xFE3
 27573                           fsr1h	equ	0xFE2
 27574                           fsr1l	equ	0xFE1
 27575                           indf2	equ	0xFDF
 27576                           postinc2	equ	0xFDE
 27577                           postdec2	equ	0xFDD
 27578                           plusw2	equ	0xFDB
 27579                           fsr2h	equ	0xFDA
 27580                           fsr2l	equ	0xFD9
 27581                           status	equ	0xFD8
 27582                           
 27583 ;; *************** function ___lmul *****************
 27584 ;; Defined at:
 27585 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 27586 ;; Parameters:    Size  Location     Type
 27587 ;;  multiplier      4   29[BANK0 ] unsigned long 
 27588 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;  product         4   37[BANK0 ] unsigned long 
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  4   29[BANK0 ] unsigned long 
 27593 ;; Registers used:
 27594 ;;		wreg, status,2, status,0
 27595 ;; Tracked objects:
 27596 ;;		On entry : 0/0
 27597 ;;		On exit  : 0/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27600 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27603 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27604 ;;Total ram usage:       12 bytes
 27605 ;; Hardware stack levels used:    1
 27606 ;; Hardware stack levels required when called:   11
 27607 ;; This function calls:
 27608 ;;		Nothing
 27609 ;; This function is called by:
 27610 ;;		_Tmr_TmrBPrSet
 27611 ;;		_SetUartBaudRate
 27612 ;;		_strtol
 27613 ;; This function uses a non-reentrant model
 27614 ;;
 27615                           
 27616                           	psect	text128
 27617  005614                     __ptext128:
 27618                           	opt stack 0
 27619  005614                     ___lmul:
 27620                           	opt stack 15
 27621                           
 27622                           ; BSR set to: 0
 27623                           ;incstack = 0
 27624  005614  0E00               	movlw	0
 27625  005616  0100               	movlb	0	; () banked
 27626  005618  6F85               	movwf	___lmul@product& (0+255),b
 27627  00561A  0E00               	movlw	0
 27628  00561C  6F86               	movwf	(___lmul@product+1)& (0+255),b
 27629  00561E  0E00               	movlw	0
 27630  005620  6F87               	movwf	(___lmul@product+2)& (0+255),b
 27631  005622  0E00               	movlw	0
 27632  005624  6F88               	movwf	(___lmul@product+3)& (0+255),b
 27633  005626                     
 27634                           ; BSR set to: 0
 27635                           
 27636                           ; BSR set to: 0
 27637  005626  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 27638  005628  D008               	goto	l2826
 27639                           
 27640                           ; BSR set to: 0
 27641  00562A  5181               	movf	___lmul@multiplicand& (0+255),w,b
 27642  00562C  2785               	addwf	___lmul@product& (0+255),f,b
 27643  00562E  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27644  005630  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 27645  005632  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27646  005634  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 27647  005636  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27648  005638  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 27649  00563A                     l2826:
 27650                           
 27651                           ; BSR set to: 0
 27652                           
 27653                           ; BSR set to: 0
 27654  00563A  90D8               	bcf	status,0,c
 27655  00563C  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 27656  00563E  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27657  005640  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27658  005642  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27659                           
 27660                           ; BSR set to: 0
 27661  005644  90D8               	bcf	status,0,c
 27662  005646  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27663  005648  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27664  00564A  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27665  00564C  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 27666  00564E  517D               	movf	___lmul@multiplier& (0+255),w,b
 27667  005650  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27668  005652  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27669  005654  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27670  005656  A4D8               	btfss	status,2,c
 27671  005658  D7E6               	goto	l2825
 27672                           
 27673                           ; BSR set to: 0
 27674  00565A  C085  F07D         	movff	___lmul@product,?___lmul
 27675  00565E  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 27676  005662  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 27677  005666  C088  F080         	movff	___lmul@product+3,?___lmul+3
 27678                           
 27679                           ; BSR set to: 0
 27680  00566A  0012               	return		;funcret
 27681  00566C                     __end_of___lmul:
 27682                           	opt stack 0
 27683                           tosu	equ	0xFFF
 27684                           tosh	equ	0xFFE
 27685                           tosl	equ	0xFFD
 27686                           pclath	equ	0xFFA
 27687                           tblptru	equ	0xFF8
 27688                           tblptrh	equ	0xFF7
 27689                           tblptrl	equ	0xFF6
 27690                           tablat	equ	0xFF5
 27691                           prodh	equ	0xFF4
 27692                           prodl	equ	0xFF3
 27693                           intcon	equ	0xFF2
 27694                           intcon2	equ	0xFF1
 27695                           intcon3	equ	0xFF0
 27696                           indf0	equ	0xFEF
 27697                           postinc0	equ	0xFEE
 27698                           plusw0	equ	0xFEB
 27699                           fsr0h	equ	0xFEA
 27700                           fsr0l	equ	0xFE9
 27701                           wreg	equ	0xFE8
 27702                           indf1	equ	0xFE7
 27703                           postinc1	equ	0xFE6
 27704                           postdec1	equ	0xFE5
 27705                           plusw1	equ	0xFE3
 27706                           fsr1h	equ	0xFE2
 27707                           fsr1l	equ	0xFE1
 27708                           indf2	equ	0xFDF
 27709                           postinc2	equ	0xFDE
 27710                           postdec2	equ	0xFDD
 27711                           plusw2	equ	0xFDB
 27712                           fsr2h	equ	0xFDA
 27713                           fsr2l	equ	0xFD9
 27714                           status	equ	0xFD8
 27715                           
 27716 ;; *************** function _UartSetConfigLow *****************
 27717 ;; Defined at:
 27718 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27719 ;; Parameters:    Size  Location     Type
 27720 ;;		None
 27721 ;; Auto vars:     Size  Location     Type
 27722 ;;		None
 27723 ;; Return value:  Size  Location     Type
 27724 ;;                  1    wreg      void 
 27725 ;; Registers used:
 27726 ;;		wreg, status,2
 27727 ;; Tracked objects:
 27728 ;;		On entry : 0/0
 27729 ;;		On exit  : 0/0
 27730 ;;		Unchanged: 0/0
 27731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27736 ;;Total ram usage:        0 bytes
 27737 ;; Hardware stack levels used:    1
 27738 ;; Hardware stack levels required when called:   11
 27739 ;; This function calls:
 27740 ;;		Nothing
 27741 ;; This function is called by:
 27742 ;;		_ConfigureModem
 27743 ;; This function uses a non-reentrant model
 27744 ;;
 27745                           
 27746                           	psect	text129
 27747  00566C                     __ptext129:
 27748                           	opt stack 0
 27749  00566C                     _UartSetConfigLow:
 27750                           	opt stack 15
 27751                           
 27752                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;incstack = 0
 27756  00566C  0E01               	movlw	1
 27757  00566E  0103               	movlb	3	; () banked
 27758  005670  6F28               	movwf	_UartConfig& (0+255),b
 27759                           
 27760                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 27761  005672  0E00               	movlw	0
 27762  005674  6F29               	movwf	(_UartConfig+1)& (0+255),b
 27763                           
 27764                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 27765  005676  0E00               	movlw	0
 27766  005678  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 27767                           
 27768                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 27769  00567A  0E00               	movlw	0
 27770  00567C  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 27771                           
 27772                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 27773  00567E  0E00               	movlw	0
 27774  005680  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 27775                           
 27776                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 27777  005682  0E00               	movlw	0
 27778  005684  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 27779                           
 27780                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 27781  005686  0E01               	movlw	1
 27782  005688  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 27783                           
 27784                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 27785  00568A  0E01               	movlw	1
 27786  00568C  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 27787                           
 27788                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 27789  00568E  0E00               	movlw	0
 27790  005690  6F30               	movwf	(_UartConfig+8)& (0+255),b
 27791                           
 27792                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 27793  005692  0E00               	movlw	0
 27794  005694  6F31               	movwf	(_UartConfig+9)& (0+255),b
 27795                           
 27796                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 27797  005696  0E00               	movlw	0
 27798  005698  6F32               	movwf	(_UartConfig+10)& (0+255),b
 27799                           
 27800                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 27801  00569A  0E00               	movlw	0
 27802  00569C  6F33               	movwf	(_UartConfig+11)& (0+255),b
 27803                           
 27804                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 27805  00569E  0E01               	movlw	1
 27806  0056A0  6F34               	movwf	(_UartConfig+12)& (0+255),b
 27807                           
 27808                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 27809  0056A2  0E00               	movlw	0
 27810  0056A4  6F35               	movwf	(_UartConfig+13)& (0+255),b
 27811  0056A6  0E6C               	movlw	108
 27812  0056A8  6F36               	movwf	(_UartConfig+14)& (0+255),b
 27813  0056AA  0EDC               	movlw	220
 27814  0056AC  6F37               	movwf	(_UartConfig+15)& (0+255),b
 27815  0056AE  0E02               	movlw	2
 27816  0056B0  6F38               	movwf	(_UartConfig+16)& (0+255),b
 27817                           
 27818                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 27819  0056B2  0E80               	movlw	128
 27820  0056B4  6F39               	movwf	(_UartConfig+17)& (0+255),b
 27821  0056B6  0E25               	movlw	37
 27822  0056B8  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 27823  0056BA  0E00               	movlw	0
 27824  0056BC  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 27825  0056BE  0E00               	movlw	0
 27826  0056C0  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 27827                           
 27828                           ; BSR set to: 3
 27829  0056C2  0012               	return		;funcret
 27830  0056C4                     __end_of_UartSetConfigLow:
 27831                           	opt stack 0
 27832                           tosu	equ	0xFFF
 27833                           tosh	equ	0xFFE
 27834                           tosl	equ	0xFFD
 27835                           pclath	equ	0xFFA
 27836                           tblptru	equ	0xFF8
 27837                           tblptrh	equ	0xFF7
 27838                           tblptrl	equ	0xFF6
 27839                           tablat	equ	0xFF5
 27840                           prodh	equ	0xFF4
 27841                           prodl	equ	0xFF3
 27842                           intcon	equ	0xFF2
 27843                           intcon2	equ	0xFF1
 27844                           intcon3	equ	0xFF0
 27845                           indf0	equ	0xFEF
 27846                           postinc0	equ	0xFEE
 27847                           plusw0	equ	0xFEB
 27848                           fsr0h	equ	0xFEA
 27849                           fsr0l	equ	0xFE9
 27850                           wreg	equ	0xFE8
 27851                           indf1	equ	0xFE7
 27852                           postinc1	equ	0xFE6
 27853                           postdec1	equ	0xFE5
 27854                           plusw1	equ	0xFE3
 27855                           fsr1h	equ	0xFE2
 27856                           fsr1l	equ	0xFE1
 27857                           indf2	equ	0xFDF
 27858                           postinc2	equ	0xFDE
 27859                           postdec2	equ	0xFDD
 27860                           plusw2	equ	0xFDB
 27861                           fsr2h	equ	0xFDA
 27862                           fsr2l	equ	0xFD9
 27863                           status	equ	0xFD8
 27864                           
 27865 ;; *************** function _CheckModem *****************
 27866 ;; Defined at:
 27867 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27868 ;; Parameters:    Size  Location     Type
 27869 ;;		None
 27870 ;; Auto vars:     Size  Location     Type
 27871 ;;		None
 27872 ;; Return value:  Size  Location     Type
 27873 ;;                  1    wreg      void 
 27874 ;; Registers used:
 27875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27876 ;; Tracked objects:
 27877 ;;		On entry : 0/0
 27878 ;;		On exit  : 0/0
 27879 ;;		Unchanged: 0/0
 27880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27885 ;;Total ram usage:        0 bytes
 27886 ;; Hardware stack levels used:    1
 27887 ;; Hardware stack levels required when called:   14
 27888 ;; This function calls:
 27889 ;;		_GenerateEvt
 27890 ;;		_OsTmr_GetTimerStatus
 27891 ;;		_OsTmr_StartTimer
 27892 ;;		_ReceiveEvt
 27893 ;;		_Uart_WriteConstString
 27894 ;; This function is called by:
 27895 ;;		_Mdm_MainTask
 27896 ;; This function uses a non-reentrant model
 27897 ;;
 27898                           
 27899                           	psect	text130
 27900  002678                     __ptext130:
 27901                           	opt stack 0
 27902  002678                     _CheckModem:
 27903                           	opt stack 13
 27904                           
 27905                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 27906                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27907                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 27908                           
 27909                           ; BSR set to: 3
 27910                           ;incstack = 0
 27911  002678  D096               	goto	l982
 27912  00267A                     
 27913                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 27914  00267A  0EF5               	movlw	low CheckModem@Timeout
 27915  00267C  0100               	movlb	0	; () banked
 27916  00267E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27917  002680  0E03               	movlw	high CheckModem@Timeout
 27918  002682  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27919  002684  0ED0               	movlw	208
 27920  002686  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27921  002688  0E07               	movlw	7
 27922  00268A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27923  00268C  0E00               	movlw	0
 27924  00268E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27925  002690  0E00               	movlw	0
 27926  002692  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27927  002694  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 27928                           
 27929                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 27930  002698  0E01               	movlw	1
 27931  00269A  6E29               	movwf	CheckModem@CheckMdmSts,c
 27932                           
 27933                           ;mdm_gsm_gprs.c: 295: break;
 27934  00269C  0012               	return	
 27935  00269E                     
 27936                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 27937  00269E  0EF5               	movlw	low CheckModem@Timeout
 27938  0026A0  0100               	movlb	0	; () banked
 27939  0026A2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27940  0026A4  0E03               	movlw	high CheckModem@Timeout
 27941  0026A6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27942  0026A8  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 27943  0026AC  06E8               	decf	wreg,f,c
 27944  0026AE  A4D8               	btfss	status,2,c
 27945  0026B0  0012               	return	
 27946                           
 27947                           ;mdm_gsm_gprs.c: 300: {
 27948                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 27949  0026B2  0E02               	movlw	2
 27950  0026B4  6E29               	movwf	CheckModem@CheckMdmSts,c
 27951                           
 27952                           ;mdm_gsm_gprs.c: 303: }
 27953                           ;mdm_gsm_gprs.c: 304: break;
 27954  0026B6  0012               	return	
 27955  0026B8                     
 27956                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 27957  0026B8  0EE5               	movlw	low STR_1
 27958  0026BA  0100               	movlb	0	; () banked
 27959  0026BC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27960  0026BE  0EFF               	movlw	high STR_1
 27961  0026C0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27962  0026C2  0E01               	movlw	1
 27963  0026C4  EC00  F02F         	call	_Uart_WriteConstString
 27964                           
 27965                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 27966  0026C8  0EF5               	movlw	low CheckModem@Timeout
 27967  0026CA  0100               	movlb	0	; () banked
 27968  0026CC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27969  0026CE  0E03               	movlw	high CheckModem@Timeout
 27970  0026D0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27971  0026D2  0ED0               	movlw	208
 27972  0026D4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27973  0026D6  0E07               	movlw	7
 27974  0026D8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27975  0026DA  0E00               	movlw	0
 27976  0026DC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27977  0026DE  0E00               	movlw	0
 27978  0026E0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27979  0026E2  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 27980                           
 27981                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 27982  0026E6  0E03               	movlw	3
 27983  0026E8  6E29               	movwf	CheckModem@CheckMdmSts,c
 27984                           
 27985                           ;mdm_gsm_gprs.c: 313: break;
 27986  0026EA  0012               	return	
 27987  0026EC                     
 27988                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 27989  0026EC  0E3C               	movlw	low _NewStringReceived
 27990  0026EE  0100               	movlb	0	; () banked
 27991  0026F0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27992  0026F2  0E00               	movlw	high _NewStringReceived
 27993  0026F4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27994  0026F6  EC10  F031         	call	_ReceiveEvt	;wreg free
 27995  0026FA  0900               	iorlw	0
 27996  0026FC  B4D8               	btfsc	status,2,c
 27997  0026FE  D02F               	goto	l989
 27998                           
 27999                           ;mdm_gsm_gprs.c: 318: {
 28000                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28001  002700  CC58  FFE8         	movff	_RxBuffer,wreg
 28002  002704  0A4F               	xorlw	79
 28003  002706  A4D8               	btfss	status,2,c
 28004  002708  D005               	goto	u14110
 28005  00270A  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28006  00270E  0A4B               	xorlw	75
 28007  002710  B4D8               	btfsc	status,2,c
 28008  002712  D00A               	goto	u14130
 28009  002714                     u14110:
 28010  002714  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28011  002718  0A4F               	xorlw	79
 28012  00271A  A4D8               	btfss	status,2,c
 28013  00271C  0012               	return	
 28014  00271E  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28015  002722  0A4B               	xorlw	75
 28016  002724  A4D8               	btfss	status,2,c
 28017  002726  0012               	return	
 28018  002728                     u14130:
 28019                           
 28020                           ;mdm_gsm_gprs.c: 321: {
 28021                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28022  002728  0E02               	movlw	2
 28023  00272A  0100               	movlb	0	; () banked
 28024  00272C  6FD1               	movwf	_MdmStatus& (0+255),b
 28025                           
 28026                           ; BSR set to: 0
 28027                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28028  00272E  0EE1               	movlw	low _MdmOnOffPulseRequest
 28029  002730  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28030  002732  0E00               	movlw	high _MdmOnOffPulseRequest
 28031  002734  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28032  002736  EC05  F033         	call	_GenerateEvt	;wreg free
 28033                           
 28034                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28035  00273A  0EF5               	movlw	low CheckModem@Timeout
 28036  00273C  0100               	movlb	0	; () banked
 28037  00273E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28038  002740  0E03               	movlw	high CheckModem@Timeout
 28039  002742  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28040  002744  0EE8               	movlw	232
 28041  002746  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28042  002748  0E03               	movlw	3
 28043  00274A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28044  00274C  0E00               	movlw	0
 28045  00274E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28046  002750  0E00               	movlw	0
 28047  002752  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28048  002754  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 28049                           
 28050                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28051  002758  0E04               	movlw	4
 28052  00275A  6E29               	movwf	CheckModem@CheckMdmSts,c
 28053                           
 28054                           ;mdm_gsm_gprs.c: 329: }
 28055                           ;mdm_gsm_gprs.c: 330: }
 28056  00275C  0012               	return	
 28057  00275E                     l989:
 28058                           
 28059                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28060  00275E  0EF5               	movlw	low CheckModem@Timeout
 28061  002760  0100               	movlb	0	; () banked
 28062  002762  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28063  002764  0E03               	movlw	high CheckModem@Timeout
 28064  002766  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28065  002768  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28066  00276C  06E8               	decf	wreg,f,c
 28067  00276E  A4D8               	btfss	status,2,c
 28068  002770  0012               	return	
 28069                           
 28070                           ;mdm_gsm_gprs.c: 332: {
 28071                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28072  002772  0E00               	movlw	0
 28073  002774  0100               	movlb	0	; () banked
 28074  002776  6FD1               	movwf	_MdmStatus& (0+255),b
 28075                           
 28076                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28077  002778  0E01               	movlw	1
 28078  00277A  6E2A               	movwf	_ComChecCompleted,c
 28079                           
 28080                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28081  00277C  0E05               	movlw	5
 28082  00277E  6E29               	movwf	CheckModem@CheckMdmSts,c
 28083                           
 28084                           ; BSR set to: 0
 28085                           ;mdm_gsm_gprs.c: 343: }
 28086                           ;mdm_gsm_gprs.c: 344: break;
 28087                           
 28088                           ; BSR set to: 0
 28089                           
 28090                           ;mdm_gsm_gprs.c: 340: else
 28091                           ;mdm_gsm_gprs.c: 341: {
 28092                           
 28093                           ; BSR set to: 0
 28094                           
 28095                           ;mdm_gsm_gprs.c: 339: }
 28096  002780  0012               	return	
 28097  002782                     
 28098                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28099                           
 28100                           ; BSR set to: 0
 28101  002782  0EF5               	movlw	low CheckModem@Timeout
 28102  002784  0100               	movlb	0	; () banked
 28103  002786  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28104  002788  0E03               	movlw	high CheckModem@Timeout
 28105  00278A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28106  00278C  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28107  002790  06E8               	decf	wreg,f,c
 28108  002792  A4D8               	btfss	status,2,c
 28109  002794  0012               	return	
 28110                           
 28111                           ;mdm_gsm_gprs.c: 349: {
 28112                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28113  002796  0E00               	movlw	0
 28114  002798  0100               	movlb	0	; () banked
 28115  00279A  6FD1               	movwf	_MdmStatus& (0+255),b
 28116                           
 28117                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28118  00279C  0E01               	movlw	1
 28119  00279E  6E2A               	movwf	_ComChecCompleted,c
 28120                           
 28121                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28122  0027A0  0E05               	movlw	5
 28123  0027A2  6E29               	movwf	CheckModem@CheckMdmSts,c
 28124                           
 28125                           ; BSR set to: 0
 28126                           ;mdm_gsm_gprs.c: 365: }
 28127                           
 28128                           ; BSR set to: 0
 28129                           ;mdm_gsm_gprs.c: 364: break;
 28130                           
 28131                           ;mdm_gsm_gprs.c: 363: default:
 28132                           
 28133                           ; BSR set to: 0
 28134                           ;mdm_gsm_gprs.c: 361: break;
 28135                           
 28136                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;mdm_gsm_gprs.c: 356: }
 28140                           ;mdm_gsm_gprs.c: 357: break;
 28141  0027A4  0012               	return	
 28142  0027A6                     l982:
 28143                           
 28144                           ; BSR set to: 0
 28145  0027A6  5029               	movf	CheckModem@CheckMdmSts,w,c
 28146                           
 28147                           ; Switch size 1, requested type "space"
 28148                           ; Number of cases is 6, Range of values is 0 to 5
 28149                           ; switch strategies available:
 28150                           ; Name         Instructions Cycles
 28151                           ; simple_byte           19    10 (average)
 28152                           ;	Chosen strategy is simple_byte
 28153  0027A8  0A00               	xorlw	0	; case 0
 28154  0027AA  B4D8               	btfsc	status,2,c
 28155  0027AC  D766               	goto	l983
 28156  0027AE  0A01               	xorlw	1	; case 1
 28157  0027B0  B4D8               	btfsc	status,2,c
 28158  0027B2  D775               	goto	l985
 28159  0027B4  0A03               	xorlw	3	; case 2
 28160  0027B6  B4D8               	btfsc	status,2,c
 28161  0027B8  D77F               	goto	l987
 28162  0027BA  0A01               	xorlw	1	; case 3
 28163  0027BC  B4D8               	btfsc	status,2,c
 28164  0027BE  D796               	goto	l988
 28165  0027C0  0A07               	xorlw	7	; case 4
 28166  0027C2  B4D8               	btfsc	status,2,c
 28167  0027C4  D7DE               	goto	l998
 28168  0027C6  0A01               	xorlw	1	; case 5
 28169  0027C8  0012               	return	
 28170  0027CA                     __end_of_CheckModem:
 28171                           	opt stack 0
 28172                           tosu	equ	0xFFF
 28173                           tosh	equ	0xFFE
 28174                           tosl	equ	0xFFD
 28175                           pclath	equ	0xFFA
 28176                           tblptru	equ	0xFF8
 28177                           tblptrh	equ	0xFF7
 28178                           tblptrl	equ	0xFF6
 28179                           tablat	equ	0xFF5
 28180                           prodh	equ	0xFF4
 28181                           prodl	equ	0xFF3
 28182                           intcon	equ	0xFF2
 28183                           intcon2	equ	0xFF1
 28184                           intcon3	equ	0xFF0
 28185                           indf0	equ	0xFEF
 28186                           postinc0	equ	0xFEE
 28187                           plusw0	equ	0xFEB
 28188                           fsr0h	equ	0xFEA
 28189                           fsr0l	equ	0xFE9
 28190                           wreg	equ	0xFE8
 28191                           indf1	equ	0xFE7
 28192                           postinc1	equ	0xFE6
 28193                           postdec1	equ	0xFE5
 28194                           plusw1	equ	0xFE3
 28195                           fsr1h	equ	0xFE2
 28196                           fsr1l	equ	0xFE1
 28197                           indf2	equ	0xFDF
 28198                           postinc2	equ	0xFDE
 28199                           postdec2	equ	0xFDD
 28200                           plusw2	equ	0xFDB
 28201                           fsr2h	equ	0xFDA
 28202                           fsr2l	equ	0xFD9
 28203                           status	equ	0xFD8
 28204                           
 28205 ;; *************** function _MdmCntSm *****************
 28206 ;; Defined at:
 28207 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28208 ;; Parameters:    Size  Location     Type
 28209 ;;		None
 28210 ;; Auto vars:     Size  Location     Type
 28211 ;;		None
 28212 ;; Return value:  Size  Location     Type
 28213 ;;                  1    wreg      void 
 28214 ;; Registers used:
 28215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28216 ;; Tracked objects:
 28217 ;;		On entry : 0/0
 28218 ;;		On exit  : 0/0
 28219 ;;		Unchanged: 0/0
 28220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28225 ;;Total ram usage:        0 bytes
 28226 ;; Hardware stack levels used:    1
 28227 ;; Hardware stack levels required when called:   12
 28228 ;; This function calls:
 28229 ;;		_InitModemInterface
 28230 ;;		_ReceiveEvt
 28231 ;; This function is called by:
 28232 ;;		_Mdm_DrvMainFn
 28233 ;; This function uses a non-reentrant model
 28234 ;;
 28235                           
 28236                           	psect	text131
 28237  0044F2                     __ptext131:
 28238                           	opt stack 0
 28239  0044F2                     _MdmCntSm:
 28240                           	opt stack 15
 28241                           
 28242                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28243                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28244                           ;mdm_drv.c: 204: switch (MdmCntState)
 28245                           
 28246                           ;incstack = 0
 28247  0044F2  D045               	goto	l315
 28248  0044F4                     
 28249                           ;mdm_drv.c: 208: InitModemInterface();
 28250  0044F4  ECBD  F033         	call	_InitModemInterface	;wreg free
 28251                           
 28252                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28253  0044F8  0E01               	movlw	1
 28254  0044FA  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28255                           
 28256                           ;mdm_drv.c: 211: break;
 28257  0044FC  0012               	return	
 28258  0044FE                     
 28259                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28260  0044FE  0EE1               	movlw	low _MdmOnOffPulseRequest
 28261  004500  0100               	movlb	0	; () banked
 28262  004502  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28263  004504  0E00               	movlw	high _MdmOnOffPulseRequest
 28264  004506  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28265  004508  EC10  F031         	call	_ReceiveEvt	;wreg free
 28266  00450C  0900               	iorlw	0
 28267  00450E  B4D8               	btfsc	status,2,c
 28268  004510  D009               	goto	l319
 28269                           
 28270                           ;mdm_drv.c: 216: {
 28271                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28272  004512  0E02               	movlw	2
 28273  004514  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28274                           
 28275                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28276  004516  8284               	bsf	3972,1,c	;volatile
 28277                           
 28278                           ;mdm_drv.c: 222: Counter = 0;
 28279  004518  0E00               	movlw	0
 28280  00451A  0102               	movlb	2	; () banked
 28281  00451C  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28282  00451E  0E00               	movlw	0
 28283  004520  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 28284                           
 28285                           ;mdm_drv.c: 223: }
 28286  004522  0012               	return	
 28287  004524                     l319:
 28288                           
 28289                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28290                           
 28291                           ; BSR set to: 2
 28292  004524  0E3D               	movlw	low _MdmResetRequest
 28293  004526  0100               	movlb	0	; () banked
 28294  004528  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28295  00452A  0E00               	movlw	high _MdmResetRequest
 28296  00452C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28297  00452E  EC10  F031         	call	_ReceiveEvt	;wreg free
 28298  004532  0900               	iorlw	0
 28299  004534  B4D8               	btfsc	status,2,c
 28300  004536  0012               	return	
 28301                           
 28302                           ;mdm_drv.c: 225: {
 28303                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28304  004538  0E03               	movlw	3
 28305  00453A  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28306                           
 28307                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28308  00453C  8084               	bsf	3972,0,c	;volatile
 28309                           
 28310                           ;mdm_drv.c: 231: Counter = 0;
 28311  00453E  0E00               	movlw	0
 28312  004540  0102               	movlb	2	; () banked
 28313  004542  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28314  004544  0E00               	movlw	0
 28315  004546  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 28316                           
 28317                           ; BSR set to: 2
 28318                           ;mdm_drv.c: 236: }
 28319                           ;mdm_drv.c: 237: break;
 28320                           
 28321                           ; BSR set to: 2
 28322                           
 28323                           ;mdm_drv.c: 233: else
 28324                           ;mdm_drv.c: 234: {
 28325                           
 28326                           ; BSR set to: 2
 28327                           
 28328                           ;mdm_drv.c: 232: }
 28329  004548  0012               	return	
 28330  00454A                     
 28331                           ;mdm_drv.c: 241: Counter++;
 28332                           
 28333                           ; BSR set to: 2
 28334  00454A  0102               	movlb	2	; () banked
 28335  00454C  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28336  00454E  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28337                           
 28338                           ; BSR set to: 2
 28339                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28340  004550  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28341  004552  E104               	bnz	u14030
 28342  004554  0E96               	movlw	150
 28343  004556  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 28344  004558  A0D8               	btfss	status,0,c
 28345  00455A  0012               	return	
 28346  00455C                     u14030:
 28347                           
 28348                           ; BSR set to: 2
 28349                           ;mdm_drv.c: 244: {
 28350                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28351  00455C  9284               	bcf	3972,1,c	;volatile
 28352                           
 28353                           ; BSR set to: 2
 28354                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28355  00455E  0E01               	movlw	1
 28356  004560  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28357                           
 28358                           ; BSR set to: 2
 28359                           ;mdm_drv.c: 249: }
 28360                           ;mdm_drv.c: 250: break;
 28361  004562  0012               	return	
 28362  004564                     
 28363                           ;mdm_drv.c: 254: Counter++;
 28364                           
 28365                           ; BSR set to: 2
 28366  004564  0102               	movlb	2	; () banked
 28367  004566  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28368  004568  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28369                           
 28370                           ; BSR set to: 2
 28371                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28372  00456A  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28373  00456C  E104               	bnz	u14040
 28374  00456E  0E0A               	movlw	10
 28375  004570  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 28376  004572  A0D8               	btfss	status,0,c
 28377  004574  0012               	return	
 28378  004576                     u14040:
 28379                           
 28380                           ; BSR set to: 2
 28381                           ;mdm_drv.c: 257: {
 28382                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28383  004576  9084               	bcf	3972,0,c	;volatile
 28384                           
 28385                           ; BSR set to: 2
 28386                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 28387  004578  0E01               	movlw	1
 28388  00457A  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28389                           
 28390                           ; BSR set to: 2
 28391                           ;mdm_drv.c: 267: }
 28392                           
 28393                           ; BSR set to: 2
 28394                           ;mdm_drv.c: 266: break;
 28395                           
 28396                           ;mdm_drv.c: 265: default:
 28397                           
 28398                           ; BSR set to: 2
 28399                           ;mdm_drv.c: 262: }
 28400                           ;mdm_drv.c: 263: break;
 28401  00457C  0012               	return	
 28402  00457E                     l315:
 28403                           
 28404                           ; BSR set to: 2
 28405  00457E  502D               	movf	MdmCntSm@MdmCntState,w,c
 28406                           
 28407                           ; Switch size 1, requested type "space"
 28408                           ; Number of cases is 4, Range of values is 0 to 3
 28409                           ; switch strategies available:
 28410                           ; Name         Instructions Cycles
 28411                           ; simple_byte           13     7 (average)
 28412                           ;	Chosen strategy is simple_byte
 28413  004580  0A00               	xorlw	0	; case 0
 28414  004582  B4D8               	btfsc	status,2,c
 28415  004584  D7B7               	goto	l316
 28416  004586  0A01               	xorlw	1	; case 1
 28417  004588  B4D8               	btfsc	status,2,c
 28418  00458A  D7B9               	goto	l318
 28419  00458C  0A03               	xorlw	3	; case 2
 28420  00458E  B4D8               	btfsc	status,2,c
 28421  004590  D7DC               	goto	l323
 28422  004592  0A01               	xorlw	1	; case 3
 28423  004594  A4D8               	btfss	status,2,c
 28424  004596  0012               	return	
 28425  004598  D7E5               	goto	l325
 28426  00459A                     __end_of_MdmCntSm:
 28427                           	opt stack 0
 28428                           tosu	equ	0xFFF
 28429                           tosh	equ	0xFFE
 28430                           tosl	equ	0xFFD
 28431                           pclath	equ	0xFFA
 28432                           tblptru	equ	0xFF8
 28433                           tblptrh	equ	0xFF7
 28434                           tblptrl	equ	0xFF6
 28435                           tablat	equ	0xFF5
 28436                           prodh	equ	0xFF4
 28437                           prodl	equ	0xFF3
 28438                           intcon	equ	0xFF2
 28439                           intcon2	equ	0xFF1
 28440                           intcon3	equ	0xFF0
 28441                           indf0	equ	0xFEF
 28442                           postinc0	equ	0xFEE
 28443                           plusw0	equ	0xFEB
 28444                           fsr0h	equ	0xFEA
 28445                           fsr0l	equ	0xFE9
 28446                           wreg	equ	0xFE8
 28447                           indf1	equ	0xFE7
 28448                           postinc1	equ	0xFE6
 28449                           postdec1	equ	0xFE5
 28450                           plusw1	equ	0xFE3
 28451                           fsr1h	equ	0xFE2
 28452                           fsr1l	equ	0xFE1
 28453                           indf2	equ	0xFDF
 28454                           postinc2	equ	0xFDE
 28455                           postdec2	equ	0xFDD
 28456                           plusw2	equ	0xFDB
 28457                           fsr2h	equ	0xFDA
 28458                           fsr2l	equ	0xFD9
 28459                           status	equ	0xFD8
 28460                           
 28461 ;; *************** function _InitModemInterface *****************
 28462 ;; Defined at:
 28463 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28464 ;; Parameters:    Size  Location     Type
 28465 ;;		None
 28466 ;; Auto vars:     Size  Location     Type
 28467 ;;		None
 28468 ;; Return value:  Size  Location     Type
 28469 ;;                  1    wreg      void 
 28470 ;; Registers used:
 28471 ;;		None
 28472 ;; Tracked objects:
 28473 ;;		On entry : 0/0
 28474 ;;		On exit  : 0/0
 28475 ;;		Unchanged: 0/0
 28476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28481 ;;Total ram usage:        0 bytes
 28482 ;; Hardware stack levels used:    1
 28483 ;; Hardware stack levels required when called:   11
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_MdmCntSm
 28488 ;; This function uses a non-reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text132
 28492  00677A                     __ptext132:
 28493                           	opt stack 0
 28494  00677A                     _InitModemInterface:
 28495                           	opt stack 15
 28496                           
 28497                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 28498                           
 28499                           ;incstack = 0
 28500  00677A  9096               	bcf	3990,0,c	;volatile
 28501                           
 28502                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 28503  00677C  9296               	bcf	3990,1,c	;volatile
 28504                           
 28505                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 28506  00677E  8496               	bsf	3990,2,c	;volatile
 28507  006780  0012               	return		;funcret
 28508  006782                     __end_of_InitModemInterface:
 28509                           	opt stack 0
 28510                           tosu	equ	0xFFF
 28511                           tosh	equ	0xFFE
 28512                           tosl	equ	0xFFD
 28513                           pclath	equ	0xFFA
 28514                           tblptru	equ	0xFF8
 28515                           tblptrh	equ	0xFF7
 28516                           tblptrl	equ	0xFF6
 28517                           tablat	equ	0xFF5
 28518                           prodh	equ	0xFF4
 28519                           prodl	equ	0xFF3
 28520                           intcon	equ	0xFF2
 28521                           intcon2	equ	0xFF1
 28522                           intcon3	equ	0xFF0
 28523                           indf0	equ	0xFEF
 28524                           postinc0	equ	0xFEE
 28525                           plusw0	equ	0xFEB
 28526                           fsr0h	equ	0xFEA
 28527                           fsr0l	equ	0xFE9
 28528                           wreg	equ	0xFE8
 28529                           indf1	equ	0xFE7
 28530                           postinc1	equ	0xFE6
 28531                           postdec1	equ	0xFE5
 28532                           plusw1	equ	0xFE3
 28533                           fsr1h	equ	0xFE2
 28534                           fsr1l	equ	0xFE1
 28535                           indf2	equ	0xFDF
 28536                           postinc2	equ	0xFDE
 28537                           postdec2	equ	0xFDD
 28538                           plusw2	equ	0xFDB
 28539                           fsr2h	equ	0xFDA
 28540                           fsr2l	equ	0xFD9
 28541                           status	equ	0xFD8
 28542                           
 28543 ;; *************** function _InitGprsNetwork *****************
 28544 ;; Defined at:
 28545 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 28546 ;; Parameters:    Size  Location     Type
 28547 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 28548 ;;		 -> NULL(0), 
 28549 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 28550 ;; Auto vars:     Size  Location     Type
 28551 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 28552 ;;  Index           1   50[BANK1 ] unsigned char 
 28553 ;; Return value:  Size  Location     Type
 28554 ;;                  1    wreg      enum E8921
 28555 ;; Registers used:
 28556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28557 ;; Tracked objects:
 28558 ;;		On entry : 0/0
 28559 ;;		On exit  : 0/0
 28560 ;;		Unchanged: 0/0
 28561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28562 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28563 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28565 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28566 ;;Total ram usage:       56 bytes
 28567 ;; Hardware stack levels used:    1
 28568 ;; Hardware stack levels required when called:   14
 28569 ;; This function calls:
 28570 ;;		_ClearBuffer
 28571 ;;		_OsTmr_GetTimerStatus
 28572 ;;		_OsTmr_StartTimer
 28573 ;;		_ReceiveEvt
 28574 ;;		_StringCopy
 28575 ;;		_Uart_WriteConstString
 28576 ;;		_Uart_WriteString
 28577 ;; This function is called by:
 28578 ;;		_MdmHttp_MainTask
 28579 ;; This function uses a non-reentrant model
 28580 ;;
 28581                           
 28582                           	psect	text133
 28583  000DC8                     __ptext133:
 28584                           	opt stack 0
 28585  000DC8                     _InitGprsNetwork:
 28586                           	opt stack 13
 28587                           
 28588                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 28589                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 28590                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 28591                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 28592                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 28593                           
 28594                           ;incstack = 0
 28595  000DC8  0E00               	movlw	0
 28596  000DCA  0101               	movlb	1	; () banked
 28597  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 28598                           
 28599                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 28600  000DCE  D154               	goto	l1216
 28601  000DD0                     
 28602                           ; BSR set to: 1
 28603                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 28604                           
 28605                           ; BSR set to: 1
 28606  000DD0  0EDA               	movlw	low _InitNetwork
 28607  000DD2  0100               	movlb	0	; () banked
 28608  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28609  000DD6  0E00               	movlw	high _InitNetwork
 28610  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28611  000DDA  EC10  F031         	call	_ReceiveEvt	;wreg free
 28612  000DDE  0900               	iorlw	0
 28613  000DE0  B4D8               	btfsc	status,2,c
 28614  000DE2  D166               	goto	l1219
 28615                           
 28616                           ;mdm_gsm_gprs_http.c: 137: {
 28617                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 28618  000DE4  0E01               	movlw	1
 28619  000DE6  D141               	goto	L79
 28620  000DE8                     
 28621                           ; BSR set to: 1
 28622                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 28623                           
 28624                           ; BSR set to: 1
 28625  000DE8  0E88               	movlw	low STR_8
 28626  000DEA  0100               	movlb	0	; () banked
 28627  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28628  000DEE  0EFE               	movlw	high STR_8
 28629  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28630  000DF2  0E01               	movlw	1
 28631  000DF4  EC00  F02F         	call	_Uart_WriteConstString
 28632                           
 28633                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 28634  000DF8  0E07               	movlw	7
 28635  000DFA  0101               	movlb	1	; () banked
 28636  000DFC  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28637                           
 28638                           ; BSR set to: 1
 28639                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 28640  000DFE  0E02               	movlw	2
 28641  000E00  0100               	movlb	0	; () banked
 28642  000E02  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 28646  000E04  0EF5               	movlw	low _ConnTimeout
 28647  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28648  000E08  0E02               	movlw	high _ConnTimeout
 28649  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28650  000E0C  0E20               	movlw	32
 28651  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28652  000E10  0E4E               	movlw	78
 28653  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28654  000E14  0E00               	movlw	0
 28655  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28656  000E18  0E00               	movlw	0
 28657  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28658  000E1C  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 28659  000E20  D0C7               	goto	l15074
 28660  000E22                     
 28661                           ; BSR set to: 1
 28662                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 28663                           
 28664                           ; BSR set to: 1
 28665  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 28666  000E24  0100               	movlb	0	; () banked
 28667  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28668  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 28669  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28670  000E2C  0E00               	movlw	0
 28671  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28672  000E30  0E32               	movlw	50
 28673  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28674  000E34  EC32  F030         	call	_ClearBuffer	;wreg free
 28675                           
 28676                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 28677  000E38  0EBC               	movlw	low STR_9
 28678  000E3A  0100               	movlb	0	; () banked
 28679  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 28680  000E3E  0EFE               	movlw	high STR_9
 28681  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28682  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 28683  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 28684  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 28685  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28686  000E4A  0E00               	movlw	0
 28687  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 28688  000E4E  0E14               	movlw	20
 28689  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 28690  000E52  EC21  F02A         	call	_StringCopy	;wreg free
 28691                           
 28692                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 28693  000E56  0E00               	movlw	0
 28694  000E58  0101               	movlb	1	; () banked
 28695  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 28696  000E5C  D01C               	goto	l1222
 28697  000E5E                     
 28698                           ; BSR set to: 1
 28699                           ;mdm_gsm_gprs_http.c: 161: {
 28700                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 28701                           
 28702                           ; BSR set to: 1
 28703  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28704  000E60  0D01               	mullw	1
 28705  000E62  50F3               	movf	prodl,w,c
 28706  000E64  0100               	movlb	0	; () banked
 28707  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 28708  000E68  6ED9               	movwf	fsr2l,c
 28709  000E6A  50F4               	movf	prodh,w,c
 28710  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 28711  000E6E  6EDA               	movwf	fsr2h,c
 28712  000E70  0101               	movlb	1	; () banked
 28713  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28714  000E74  0100               	movlb	0	; () banked
 28715  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28716  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28717  000E7A  0E14               	movlw	20
 28718  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28719  000E7E  0E00               	movlw	0
 28720  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28721  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 28722  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28723  000E86  6EE1               	movwf	fsr1l,c
 28724  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 28725  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28726  000E8C  6EE2               	movwf	fsr1h,c
 28727  000E8E  CFDF FFE7          	movff	indf2,indf1
 28728                           
 28729                           ; BSR set to: 0
 28730  000E92  0101               	movlb	1	; () banked
 28731  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 28732  000E96                     l1222:
 28733                           
 28734                           ; BSR set to: 1
 28735                           
 28736                           ; BSR set to: 1
 28737  000E96  0100               	movlb	0	; () banked
 28738  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 28739  000E9A  0101               	movlb	1	; () banked
 28740  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 28741  000E9E  A0D8               	btfss	status,0,c
 28742  000EA0  D7DE               	goto	l1223
 28743                           
 28744                           ; BSR set to: 1
 28745                           ;mdm_gsm_gprs_http.c: 163: }
 28746                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 28747                           
 28748                           ; BSR set to: 1
 28749  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28750  000EA4  0100               	movlb	0	; () banked
 28751  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28752  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28753  000EAA  0E14               	movlw	20
 28754  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28755  000EAE  0E00               	movlw	0
 28756  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28757  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 28758  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28759  000EB6  6ED9               	movwf	fsr2l,c
 28760  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 28761  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28762  000EBC  6EDA               	movwf	fsr2h,c
 28763  000EBE  0E22               	movlw	34
 28764  000EC0  6EDF               	movwf	indf2,c
 28765                           
 28766                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 28767  000EC2  0101               	movlb	1	; () banked
 28768  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28769  000EC6  0100               	movlb	0	; () banked
 28770  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28771  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28772  000ECC  0E15               	movlw	21
 28773  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28774  000ED0  0E00               	movlw	0
 28775  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28776  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 28777  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28778  000ED8  6ED9               	movwf	fsr2l,c
 28779  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 28780  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28781  000EDE  6EDA               	movwf	fsr2h,c
 28782  000EE0  0E0D               	movlw	13
 28783  000EE2  6EDF               	movwf	indf2,c
 28784                           
 28785                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 28786  000EE4  0101               	movlb	1	; () banked
 28787  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28788  000EE8  0100               	movlb	0	; () banked
 28789  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28790  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28791  000EEE  0E16               	movlw	22
 28792  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28793  000EF2  0E00               	movlw	0
 28794  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28795  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 28796  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28797  000EFA  6ED9               	movwf	fsr2l,c
 28798  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 28799  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28800  000F00  6EDA               	movwf	fsr2h,c
 28801  000F02  0E00               	movlw	0
 28802  000F04  6EDF               	movwf	indf2,c
 28803                           
 28804                           ; BSR set to: 0
 28805                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 28806  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 28807  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 28808  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 28809  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 28810  000F0E  0E01               	movlw	1
 28811  000F10  ECA0  F02F         	call	_Uart_WriteString
 28812                           
 28813                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 28814  000F14  0E07               	movlw	7
 28815  000F16  0101               	movlb	1	; () banked
 28816  000F18  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28817                           
 28818                           ; BSR set to: 1
 28819                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 28820  000F1A  0E03               	movlw	3
 28821  000F1C  0100               	movlb	0	; () banked
 28822  000F1E  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 28826  000F20  0EF5               	movlw	low _ConnTimeout
 28827  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28828  000F24  0E02               	movlw	high _ConnTimeout
 28829  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28830  000F28  0E20               	movlw	32
 28831  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28832  000F2C  0E4E               	movlw	78
 28833  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28834  000F30  0E00               	movlw	0
 28835  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28836  000F34  0E00               	movlw	0
 28837  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28838  000F38  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 28839  000F3C  D039               	goto	l15074
 28840  000F3E                     
 28841                           ; BSR set to: 1
 28842                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 28843                           
 28844                           ; BSR set to: 1
 28845  000F3E  0E4A               	movlw	low STR_10
 28846  000F40  0100               	movlb	0	; () banked
 28847  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28848  000F44  0EFF               	movlw	high STR_10
 28849  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28850  000F48  0E01               	movlw	1
 28851  000F4A  EC00  F02F         	call	_Uart_WriteConstString
 28852                           
 28853                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 28854  000F4E  0E07               	movlw	7
 28855  000F50  0101               	movlb	1	; () banked
 28856  000F52  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28857                           
 28858                           ; BSR set to: 1
 28859                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 28860  000F54  0E05               	movlw	5
 28861  000F56  0100               	movlb	0	; () banked
 28862  000F58  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28863                           
 28864                           ; BSR set to: 0
 28865                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 28866  000F5A  0EF5               	movlw	low _ConnTimeout
 28867  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28868  000F5E  0E02               	movlw	high _ConnTimeout
 28869  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28870  000F62  0E20               	movlw	32
 28871  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28872  000F66  0E4E               	movlw	78
 28873  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28874  000F6A  0E00               	movlw	0
 28875  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28876  000F6E  0E00               	movlw	0
 28877  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28878  000F72  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 28879  000F76  D01C               	goto	l15074
 28880  000F78                     
 28881                           ; BSR set to: 1
 28882                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 28883                           
 28884                           ; BSR set to: 1
 28885  000F78  0E58               	movlw	low STR_11
 28886  000F7A  0100               	movlb	0	; () banked
 28887  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28888  000F7E  0EFF               	movlw	high STR_11
 28889  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28890  000F82  0E01               	movlw	1
 28891  000F84  EC00  F02F         	call	_Uart_WriteConstString
 28892                           
 28893                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 28894  000F88  0E08               	movlw	8
 28895  000F8A  0101               	movlb	1	; () banked
 28896  000F8C  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28897                           
 28898                           ; BSR set to: 1
 28899                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 28900  000F8E  0E05               	movlw	5
 28901  000F90  0100               	movlb	0	; () banked
 28902  000F92  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 28906  000F94  0EF5               	movlw	low _ConnTimeout
 28907  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28908  000F98  0E02               	movlw	high _ConnTimeout
 28909  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28910  000F9C  0E20               	movlw	32
 28911  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28912  000FA0  0E4E               	movlw	78
 28913  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28914  000FA4  0E00               	movlw	0
 28915  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28916  000FA8  0E00               	movlw	0
 28917  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28918  000FAC  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 28919  000FB0                     l15074:
 28920                           
 28921                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 28922  000FB0  0E01               	movlw	1
 28923  000FB2  0101               	movlb	1	; () banked
 28924  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 28925                           
 28926                           ;mdm_gsm_gprs_http.c: 201: break;
 28927  000FB6  D07C               	goto	l1219
 28928  000FB8                     
 28929                           ; BSR set to: 1
 28930                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 28931                           
 28932                           ; BSR set to: 1
 28933  000FB8  0E02               	movlw	2
 28934  000FBA  D05A               	goto	L78
 28935  000FBC                     
 28936                           ; BSR set to: 1
 28937                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 28938                           
 28939                           ; BSR set to: 1
 28940  000FBC  0E3C               	movlw	low _NewStringReceived
 28941  000FBE  0100               	movlb	0	; () banked
 28942  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28943  000FC2  0E00               	movlw	high _NewStringReceived
 28944  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28945  000FC6  EC10  F031         	call	_ReceiveEvt	;wreg free
 28946  000FCA  0900               	iorlw	0
 28947  000FCC  B4D8               	btfsc	status,2,c
 28948  000FCE  D018               	goto	l1229
 28949                           
 28950                           ;mdm_gsm_gprs_http.c: 212: {
 28951                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 28952  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 28953  000FD4  0A4F               	xorlw	79
 28954  000FD6  A4D8               	btfss	status,2,c
 28955  000FD8  D06B               	goto	l1219
 28956  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28957  000FDE  0A4B               	xorlw	75
 28958  000FE0  A4D8               	btfss	status,2,c
 28959  000FE2  D066               	goto	l1219
 28960                           
 28961                           ;mdm_gsm_gprs_http.c: 215: {
 28962                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 28963  000FE4  C0D0  F1EB         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 28964                           
 28965                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 28966  000FE8  0E58               	movlw	low _RxBuffer
 28967  000FEA  0100               	movlb	0	; () banked
 28968  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28969  000FEE  0E0C               	movlw	high _RxBuffer
 28970  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28971  000FF2  0E01               	movlw	1
 28972  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28973  000FF6  0E90               	movlw	144
 28974  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28975  000FFA  EC32  F030         	call	_ClearBuffer	;wreg free
 28976                           
 28977                           ;mdm_gsm_gprs_http.c: 220: }
 28978                           ;mdm_gsm_gprs_http.c: 221: }
 28979  000FFE  D058               	goto	l1219
 28980  001000                     l1229:
 28981                           
 28982                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28983  001000  0EF5               	movlw	low _ConnTimeout
 28984  001002  0100               	movlb	0	; () banked
 28985  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28986  001006  0E02               	movlw	high _ConnTimeout
 28987  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28988  00100A  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28989  00100E  D029               	goto	L43
 28990  001010                     
 28991                           ; BSR set to: 1
 28992                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 28993                           
 28994                           ; BSR set to: 1
 28995  001010  0E3C               	movlw	low _NewStringReceived
 28996  001012  0100               	movlb	0	; () banked
 28997  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28998  001016  0E00               	movlw	high _NewStringReceived
 28999  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29000  00101A  EC10  F031         	call	_ReceiveEvt	;wreg free
 29001  00101E  0900               	iorlw	0
 29002  001020  B4D8               	btfsc	status,2,c
 29003  001022  D018               	goto	l1234
 29004                           
 29005                           ;mdm_gsm_gprs_http.c: 232: {
 29006                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29007  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 29008  001028  0A2B               	xorlw	43
 29009  00102A  A4D8               	btfss	status,2,c
 29010  00102C  D041               	goto	l1219
 29011  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29012  001032  0A53               	xorlw	83
 29013  001034  A4D8               	btfss	status,2,c
 29014  001036  D03C               	goto	l1219
 29015                           
 29016                           ;mdm_gsm_gprs_http.c: 235: {
 29017                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29018  001038  C0D0  F1EB         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29019                           
 29020                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29021  00103C  0E58               	movlw	low _RxBuffer
 29022  00103E  0100               	movlb	0	; () banked
 29023  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29024  001042  0E0C               	movlw	high _RxBuffer
 29025  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29026  001046  0E01               	movlw	1
 29027  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29028  00104A  0E90               	movlw	144
 29029  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29030  00104E  EC32  F030         	call	_ClearBuffer	;wreg free
 29031                           
 29032                           ;mdm_gsm_gprs_http.c: 240: }
 29033                           ;mdm_gsm_gprs_http.c: 241: }
 29034  001052  D02E               	goto	l1219
 29035  001054                     l1234:
 29036                           
 29037                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29038  001054  0EF5               	movlw	low _ConnTimeout
 29039  001056  0100               	movlb	0	; () banked
 29040  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29041  00105A  0E02               	movlw	high _ConnTimeout
 29042  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29043  00105E  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29044  001062                     L43:
 29045  001062  06E8               	decf	wreg,f,c
 29046  001064  A4D8               	btfss	status,2,c
 29047  001066  D024               	goto	l1219
 29048                           
 29049                           ;mdm_gsm_gprs_http.c: 243: {
 29050                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29051  001068  0E06               	movlw	6
 29052  00106A                     L79:
 29053  00106A  0101               	movlb	1	; () banked
 29054  00106C  D003               	goto	L42
 29055  00106E                     
 29056                           ; BSR set to: 1
 29057                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29058                           
 29059                           ; BSR set to: 1
 29060  00106E  0E03               	movlw	3
 29061  001070                     L78:
 29062  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29063                           
 29064                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29065  001072  0E00               	movlw	0
 29066  001074                     L42:
 29067  001074  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29068                           
 29069                           ; BSR set to: 1
 29070                           ;mdm_gsm_gprs_http.c: 257: }
 29071                           
 29072                           ; BSR set to: 1
 29073                           ;mdm_gsm_gprs_http.c: 256: break;
 29074                           
 29075                           ;mdm_gsm_gprs_http.c: 255: default:
 29076                           
 29077                           ;mdm_gsm_gprs_http.c: 253: break;
 29078  001076  D01C               	goto	l1219
 29079  001078                     l1216:
 29080                           
 29081                           ; BSR set to: 1
 29082                           
 29083                           ; BSR set to: 1
 29084  001078  51EB               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29085                           
 29086                           ; Switch size 1, requested type "space"
 29087                           ; Number of cases is 9, Range of values is 0 to 8
 29088                           ; switch strategies available:
 29089                           ; Name         Instructions Cycles
 29090                           ; simple_byte           28    15 (average)
 29091                           ;	Chosen strategy is simple_byte
 29092  00107A  0A00               	xorlw	0	; case 0
 29093  00107C  B4D8               	btfsc	status,2,c
 29094  00107E  D6A8               	goto	l1217
 29095  001080  0A01               	xorlw	1	; case 1
 29096  001082  B4D8               	btfsc	status,2,c
 29097  001084  D6B1               	goto	l1220
 29098  001086  0A03               	xorlw	3	; case 2
 29099  001088  B4D8               	btfsc	status,2,c
 29100  00108A  D6CB               	goto	l1221
 29101  00108C  0A01               	xorlw	1	; case 3
 29102  00108E  B4D8               	btfsc	status,2,c
 29103  001090  D756               	goto	l1225
 29104  001092  0A07               	xorlw	7	; case 4
 29105  001094  B4D8               	btfsc	status,2,c
 29106  001096  D770               	goto	l1226
 29107  001098  0A01               	xorlw	1	; case 5
 29108  00109A  B4D8               	btfsc	status,2,c
 29109  00109C  D78D               	goto	l1227
 29110  00109E  0A03               	xorlw	3	; case 6
 29111  0010A0  B4D8               	btfsc	status,2,c
 29112  0010A2  D7E5               	goto	l1238
 29113  0010A4  0A01               	xorlw	1	; case 7
 29114  0010A6  B4D8               	btfsc	status,2,c
 29115  0010A8  D789               	goto	l1228
 29116  0010AA  0A0F               	xorlw	15	; case 8
 29117  0010AC  B4D8               	btfsc	status,2,c
 29118  0010AE  D7B0               	goto	l1233
 29119  0010B0                     l1219:
 29120                           
 29121                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29122                           
 29123                           ; BSR set to: 1
 29124  0010B0  0101               	movlb	1	; () banked
 29125  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29126  0010B4  0012               	return	
 29127  0010B6                     __end_of_InitGprsNetwork:
 29128                           	opt stack 0
 29129                           tosu	equ	0xFFF
 29130                           tosh	equ	0xFFE
 29131                           tosl	equ	0xFFD
 29132                           pclath	equ	0xFFA
 29133                           tblptru	equ	0xFF8
 29134                           tblptrh	equ	0xFF7
 29135                           tblptrl	equ	0xFF6
 29136                           tablat	equ	0xFF5
 29137                           prodh	equ	0xFF4
 29138                           prodl	equ	0xFF3
 29139                           intcon	equ	0xFF2
 29140                           intcon2	equ	0xFF1
 29141                           intcon3	equ	0xFF0
 29142                           indf0	equ	0xFEF
 29143                           postinc0	equ	0xFEE
 29144                           plusw0	equ	0xFEB
 29145                           fsr0h	equ	0xFEA
 29146                           fsr0l	equ	0xFE9
 29147                           wreg	equ	0xFE8
 29148                           indf1	equ	0xFE7
 29149                           postinc1	equ	0xFE6
 29150                           postdec1	equ	0xFE5
 29151                           plusw1	equ	0xFE3
 29152                           fsr1h	equ	0xFE2
 29153                           fsr1l	equ	0xFE1
 29154                           indf2	equ	0xFDF
 29155                           postinc2	equ	0xFDE
 29156                           postdec2	equ	0xFDD
 29157                           plusw2	equ	0xFDB
 29158                           fsr2h	equ	0xFDA
 29159                           fsr2l	equ	0xFD9
 29160                           status	equ	0xFD8
 29161                           
 29162 ;; *************** function _HttpGetMethod *****************
 29163 ;; Defined at:
 29164 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29165 ;; Parameters:    Size  Location     Type
 29166 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29167 ;;		 -> HttpGetDataLocal(5), 
 29168 ;; Auto vars:     Size  Location     Type
 29169 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29170 ;;  Index           1  200[BANK1 ] unsigned char 
 29171 ;; Return value:  Size  Location     Type
 29172 ;;                  1    wreg      enum E8921
 29173 ;; Registers used:
 29174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29175 ;; Tracked objects:
 29176 ;;		On entry : 0/0
 29177 ;;		On exit  : 0/0
 29178 ;;		Unchanged: 0/0
 29179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29181 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29183 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29184 ;;Total ram usage:      207 bytes
 29185 ;; Hardware stack levels used:    1
 29186 ;; Hardware stack levels required when called:   14
 29187 ;; This function calls:
 29188 ;;		_ClearBuffer
 29189 ;;		_OsTmr_GetTimerStatus
 29190 ;;		_OsTmr_StartTimer
 29191 ;;		_ReceiveEvt
 29192 ;;		_StringCopy
 29193 ;;		_Uart_WriteConstString
 29194 ;;		_Uart_WriteString
 29195 ;; This function is called by:
 29196 ;;		_MdmHttp_MainTask
 29197 ;; This function uses a non-reentrant model
 29198 ;;
 29199                           
 29200                           	psect	text134
 29201  0005EC                     __ptext134:
 29202                           	opt stack 0
 29203  0005EC                     _HttpGetMethod:
 29204                           	opt stack 13
 29205                           
 29206                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29207                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29208                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29209                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29210                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29211                           
 29212                           ; BSR set to: 1
 29213                           ;incstack = 0
 29214  0005EC  0E00               	movlw	0
 29215  0005EE  0101               	movlb	1	; () banked
 29216  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29217                           
 29218                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29219  0005F2  D230               	goto	l1249
 29220  0005F4                     
 29221                           ; BSR set to: 1
 29222                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29223                           
 29224                           ; BSR set to: 1
 29225  0005F4  0ED9               	movlw	low _GetMethod
 29226  0005F6  0100               	movlb	0	; () banked
 29227  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29228  0005FA  0E00               	movlw	high _GetMethod
 29229  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29230  0005FE  EC10  F031         	call	_ReceiveEvt	;wreg free
 29231  000602  0900               	iorlw	0
 29232  000604  B4D8               	btfsc	status,2,c
 29233  000606  D257               	goto	l1252
 29234                           
 29235                           ;mdm_gsm_gprs_http.c: 284: {
 29236                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29237  000608  0E01               	movlw	1
 29238  00060A  D18C               	goto	L45
 29239  00060C                     
 29240                           ; BSR set to: 1
 29241                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29242                           
 29243                           ; BSR set to: 1
 29244  00060C  0E9C               	movlw	low STR_12
 29245  00060E  0100               	movlb	0	; () banked
 29246  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29247  000612  0EFF               	movlw	high STR_12
 29248  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29249  000616  0E01               	movlw	1
 29250  000618  EC00  F02F         	call	_Uart_WriteConstString
 29251                           
 29252                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29253  00061C  0E0A               	movlw	10
 29254  00061E  0101               	movlb	1	; () banked
 29255  000620  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29256                           
 29257                           ; BSR set to: 1
 29258                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29259  000622  0E02               	movlw	2
 29260  000624  0100               	movlb	0	; () banked
 29261  000626  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29262                           
 29263                           ; BSR set to: 0
 29264                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29265  000628  0EF5               	movlw	low _ConnTimeout
 29266  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29267  00062C  0E02               	movlw	high _ConnTimeout
 29268  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29269  000630  0E20               	movlw	32
 29270  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29271  000634  0E4E               	movlw	78
 29272  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29273  000638  0E00               	movlw	0
 29274  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29275  00063C  0E00               	movlw	0
 29276  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29277  000640  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29278  000644  D1AF               	goto	l15240
 29279  000646                     
 29280                           ; BSR set to: 1
 29281                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29282                           
 29283                           ; BSR set to: 1
 29284  000646  0E66               	movlw	low STR_13
 29285  000648  0100               	movlb	0	; () banked
 29286  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29287  00064C  0EFF               	movlw	high STR_13
 29288  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29289  000650  0E01               	movlw	1
 29290  000652  EC00  F02F         	call	_Uart_WriteConstString
 29291                           
 29292                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29293  000656  0E0A               	movlw	10
 29294  000658  0101               	movlb	1	; () banked
 29295  00065A  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29296                           
 29297                           ; BSR set to: 1
 29298                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29299  00065C  0E03               	movlw	3
 29300  00065E  0100               	movlb	0	; () banked
 29301  000660  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29305  000662  0EF5               	movlw	low _ConnTimeout
 29306  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29307  000666  0E02               	movlw	high _ConnTimeout
 29308  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29309  00066A  0E20               	movlw	32
 29310  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29311  00066E  0E4E               	movlw	78
 29312  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29313  000672  0E00               	movlw	0
 29314  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29315  000676  0E00               	movlw	0
 29316  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29317  00067A  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29318  00067E  D192               	goto	l15240
 29319  000680                     
 29320                           ; BSR set to: 1
 29321                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29322                           
 29323                           ; BSR set to: 1
 29324  000680  0EA7               	movlw	low STR_14
 29325  000682  0100               	movlb	0	; () banked
 29326  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29327  000686  0EFE               	movlw	high STR_14
 29328  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29329  00068A  0E01               	movlw	1
 29330  00068C  EC00  F02F         	call	_Uart_WriteConstString
 29331                           
 29332                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29333  000690  0E0A               	movlw	10
 29334  000692  0101               	movlb	1	; () banked
 29335  000694  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29336                           
 29337                           ; BSR set to: 1
 29338                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29339  000696  0E04               	movlw	4
 29340  000698  0100               	movlb	0	; () banked
 29341  00069A  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29342                           
 29343                           ; BSR set to: 0
 29344                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29345  00069C  0EF5               	movlw	low _ConnTimeout
 29346  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29347  0006A0  0E02               	movlw	high _ConnTimeout
 29348  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29349  0006A4  0E20               	movlw	32
 29350  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29351  0006A8  0E4E               	movlw	78
 29352  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29353  0006AC  0E00               	movlw	0
 29354  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29355  0006B0  0E00               	movlw	0
 29356  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29357  0006B4  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29358  0006B8  D175               	goto	l15240
 29359  0006BA                     
 29360                           ; BSR set to: 1
 29361                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29362                           
 29363                           ; BSR set to: 1
 29364  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29365  0006BC  0100               	movlb	0	; () banked
 29366  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29367  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29368  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29369  0006C4  0E00               	movlw	0
 29370  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29371  0006C8  0EC8               	movlw	200
 29372  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29373  0006CC  EC32  F030         	call	_ClearBuffer	;wreg free
 29374                           
 29375                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29376  0006D0  0EE5               	movlw	low STR_15
 29377  0006D2  0100               	movlb	0	; () banked
 29378  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29379  0006D6  0EFE               	movlw	high STR_15
 29380  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29381  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29382  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 29383  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29384  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29385  0006E2  0E00               	movlw	0
 29386  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29387  0006E6  0E13               	movlw	19
 29388  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 29389  0006EA  EC21  F02A         	call	_StringCopy	;wreg free
 29390                           
 29391                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 29392  0006EE  0E00               	movlw	0
 29393  0006F0  0101               	movlb	1	; () banked
 29394  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29395  0006F4  D024               	goto	l1257
 29396  0006F6                     
 29397                           ; BSR set to: 1
 29398                           ;mdm_gsm_gprs_http.c: 332: {
 29399                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 29400                           
 29401                           ; BSR set to: 1
 29402  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29403  0006F8  0D01               	mullw	1
 29404  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 29405  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 29406  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 29407  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 29408  00070A  50F3               	movf	prodl,w,c
 29409  00070C  0100               	movlb	0	; () banked
 29410  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29411  000710  6ED9               	movwf	fsr2l,c
 29412  000712  50F4               	movf	prodh,w,c
 29413  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29414  000716  6EDA               	movwf	fsr2h,c
 29415  000718  0101               	movlb	1	; () banked
 29416  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29417  00071C  0100               	movlb	0	; () banked
 29418  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 29419  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 29420  000722  0E13               	movlw	19
 29421  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 29422  000726  0E00               	movlw	0
 29423  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 29424  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 29425  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 29426  00072E  6EE1               	movwf	fsr1l,c
 29427  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 29428  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 29429  000734  6EE2               	movwf	fsr1h,c
 29430  000736  CFDF FFE7          	movff	indf2,indf1
 29431                           
 29432                           ; BSR set to: 0
 29433  00073A  0101               	movlb	1	; () banked
 29434  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 29435  00073E                     l1257:
 29436                           
 29437                           ; BSR set to: 1
 29438                           
 29439                           ; BSR set to: 1
 29440  00073E  0100               	movlb	0	; () banked
 29441  000740  EE20 F002          	lfsr	2,2
 29442  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29443  000746  26D9               	addwf	fsr2l,f,c
 29444  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29445  00074A  22DA               	addwfc	fsr2h,f,c
 29446  00074C  50DE               	movf	postinc2,w,c
 29447  00074E  0101               	movlb	1	; () banked
 29448  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 29449  000752  A0D8               	btfss	status,0,c
 29450  000754  D7D0               	goto	l1258
 29451                           
 29452                           ; BSR set to: 1
 29453                           ;mdm_gsm_gprs_http.c: 334: }
 29454                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 29455                           
 29456                           ; BSR set to: 1
 29457  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29458  000758  0100               	movlb	0	; () banked
 29459  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29460  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29461  00075E  0E13               	movlw	19
 29462  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29463  000762  0E00               	movlw	0
 29464  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29465  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 29466  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29467  00076A  6ED9               	movwf	fsr2l,c
 29468  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 29469  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29470  000770  6EDA               	movwf	fsr2h,c
 29471  000772  0E22               	movlw	34
 29472  000774  6EDF               	movwf	indf2,c
 29473                           
 29474                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 29475  000776  0101               	movlb	1	; () banked
 29476  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29477  00077A  0100               	movlb	0	; () banked
 29478  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29479  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29480  000780  0E14               	movlw	20
 29481  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29482  000784  0E00               	movlw	0
 29483  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29484  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 29485  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29486  00078C  6ED9               	movwf	fsr2l,c
 29487  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 29488  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29489  000792  6EDA               	movwf	fsr2h,c
 29490  000794  0E0D               	movlw	13
 29491  000796  6EDF               	movwf	indf2,c
 29492                           
 29493                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 29494  000798  0101               	movlb	1	; () banked
 29495  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29496  00079C  0100               	movlb	0	; () banked
 29497  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29498  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29499  0007A2  0E15               	movlw	21
 29500  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29501  0007A6  0E00               	movlw	0
 29502  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29503  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 29504  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29505  0007AE  6ED9               	movwf	fsr2l,c
 29506  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 29507  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29508  0007B4  6EDA               	movwf	fsr2h,c
 29509  0007B6  0E00               	movlw	0
 29510  0007B8  6EDF               	movwf	indf2,c
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 29514  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29515  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29516  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 29517  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29518  0007C2  0E01               	movlw	1
 29519  0007C4  ECA0  F02F         	call	_Uart_WriteString
 29520                           
 29521                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 29522  0007C8  0E0A               	movlw	10
 29523  0007CA  0101               	movlb	1	; () banked
 29524  0007CC  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29525                           
 29526                           ; BSR set to: 1
 29527                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 29528  0007CE  0E05               	movlw	5
 29529  0007D0  0100               	movlb	0	; () banked
 29530  0007D2  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 29534  0007D4  0EF5               	movlw	low _ConnTimeout
 29535  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29536  0007D8  0E02               	movlw	high _ConnTimeout
 29537  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29538  0007DC  0E20               	movlw	32
 29539  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29540  0007E0  0E4E               	movlw	78
 29541  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29542  0007E4  0E00               	movlw	0
 29543  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29544  0007E8  0E00               	movlw	0
 29545  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29546  0007EC  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29547  0007F0  D0D9               	goto	l15240
 29548  0007F2                     
 29549                           ; BSR set to: 1
 29550                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 29551                           
 29552                           ; BSR set to: 1
 29553  0007F2  0E1D               	movlw	low STR_16
 29554  0007F4  0100               	movlb	0	; () banked
 29555  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29556  0007F8  0EFF               	movlw	high STR_16
 29557  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29558  0007FC  0E01               	movlw	1
 29559  0007FE  EC00  F02F         	call	_Uart_WriteConstString
 29560                           
 29561                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 29562  000802  0E0A               	movlw	10
 29563  000804  0101               	movlb	1	; () banked
 29564  000806  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29565                           
 29566                           ; BSR set to: 1
 29567                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 29568  000808  0E06               	movlw	6
 29569  00080A  0100               	movlb	0	; () banked
 29570  00080C  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29571                           
 29572                           ; BSR set to: 0
 29573                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 29574  00080E  0EF5               	movlw	low _ConnTimeout
 29575  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29576  000812  0E02               	movlw	high _ConnTimeout
 29577  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29578  000816  0E20               	movlw	32
 29579  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29580  00081A  0E4E               	movlw	78
 29581  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29582  00081E  0E00               	movlw	0
 29583  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29584  000822  0E00               	movlw	0
 29585  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29586  000826  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29587                           
 29588                           ;mdm_gsm_gprs_http.c: 358: break;
 29589  00082A  D145               	goto	l1252
 29590  00082C                     
 29591                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 29592  00082C  0E07               	movlw	7
 29593  00082E  0101               	movlb	1	; () banked
 29594  000830  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29595                           
 29596                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 29597  000832  0E09               	movlw	9
 29598  000834  0100               	movlb	0	; () banked
 29599  000836  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 29603  000838  0EF5               	movlw	low _ConnTimeout
 29604  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29605  00083C  0E02               	movlw	high _ConnTimeout
 29606  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29607  000840  0E20               	movlw	32
 29608  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29609  000844  0E4E               	movlw	78
 29610  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29611  000848  0E00               	movlw	0
 29612  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29613  00084C  0E00               	movlw	0
 29614  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29615  000850  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29616                           
 29617                           ;mdm_gsm_gprs_http.c: 371: break;
 29618  000854  D130               	goto	l1252
 29619  000856                     
 29620                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 29621  000856  0E82               	movlw	low STR_17
 29622  000858  0100               	movlb	0	; () banked
 29623  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29624  00085C  0EFF               	movlw	high STR_17
 29625  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29626  000860  0E01               	movlw	1
 29627  000862  EC00  F02F         	call	_Uart_WriteConstString
 29628                           
 29629                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 29630  000866  0E0D               	movlw	13
 29631  000868  0101               	movlb	1	; () banked
 29632  00086A  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29633                           
 29634                           ; BSR set to: 1
 29635                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 29636  00086C  0E09               	movlw	9
 29637  00086E  0100               	movlb	0	; () banked
 29638  000870  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29639                           
 29640                           ; BSR set to: 0
 29641                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 29642  000872  0EF5               	movlw	low _ConnTimeout
 29643  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29644  000876  0E02               	movlw	high _ConnTimeout
 29645  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29646  00087A  0E20               	movlw	32
 29647  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29648  00087E  0E4E               	movlw	78
 29649  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29650  000882  0E00               	movlw	0
 29651  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29652  000886  0E00               	movlw	0
 29653  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29654  00088A  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29655  00088E  D08A               	goto	l15240
 29656  000890                     
 29657                           ; BSR set to: 1
 29658                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 29659                           
 29660                           ; BSR set to: 1
 29661  000890  0E8F               	movlw	low STR_18
 29662  000892  0100               	movlb	0	; () banked
 29663  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29664  000896  0EFF               	movlw	high STR_18
 29665  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29666  00089A  0E01               	movlw	1
 29667  00089C  EC00  F02F         	call	_Uart_WriteConstString
 29668                           
 29669                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 29670  0008A0  0E0A               	movlw	10
 29671  0008A2  0101               	movlb	1	; () banked
 29672  0008A4  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29673                           
 29674                           ; BSR set to: 1
 29675                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 29676  0008A6  0E0E               	movlw	14
 29677  0008A8  0100               	movlb	0	; () banked
 29678  0008AA  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29679                           
 29680                           ; BSR set to: 0
 29681                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 29682  0008AC  0EF5               	movlw	low _ConnTimeout
 29683  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29684  0008B0  0E02               	movlw	high _ConnTimeout
 29685  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29686  0008B4  0E20               	movlw	32
 29687  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29688  0008B8  0E4E               	movlw	78
 29689  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29690  0008BC  0E00               	movlw	0
 29691  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29692  0008C0  0E00               	movlw	0
 29693  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29694  0008C4  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29695  0008C8  D06D               	goto	l15240
 29696  0008CA                     
 29697                           ; BSR set to: 1
 29698                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 29699                           
 29700                           ; BSR set to: 1
 29701  0008CA  0E3C               	movlw	low _NewStringReceived
 29702  0008CC  0100               	movlb	0	; () banked
 29703  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29704  0008D0  0E00               	movlw	high _NewStringReceived
 29705  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29706  0008D4  EC10  F031         	call	_ReceiveEvt	;wreg free
 29707  0008D8  0900               	iorlw	0
 29708  0008DA  B4D8               	btfsc	status,2,c
 29709  0008DC  D018               	goto	l1265
 29710                           
 29711                           ;mdm_gsm_gprs_http.c: 400: {
 29712                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29713  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 29714  0008E2  0A4F               	xorlw	79
 29715  0008E4  A4D8               	btfss	status,2,c
 29716  0008E6  D0E7               	goto	l1252
 29717  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29718  0008EC  0A4B               	xorlw	75
 29719  0008EE  A4D8               	btfss	status,2,c
 29720  0008F0  D0E2               	goto	l1252
 29721                           
 29722                           ;mdm_gsm_gprs_http.c: 403: {
 29723                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 29724  0008F2  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29725                           
 29726                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 29727  0008F6  0E58               	movlw	low _RxBuffer
 29728  0008F8  0100               	movlb	0	; () banked
 29729  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29730  0008FC  0E0C               	movlw	high _RxBuffer
 29731  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29732  000900  0E01               	movlw	1
 29733  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29734  000904  0E90               	movlw	144
 29735  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29736  000908  EC32  F030         	call	_ClearBuffer	;wreg free
 29737                           
 29738                           ;mdm_gsm_gprs_http.c: 408: }
 29739                           ;mdm_gsm_gprs_http.c: 409: }
 29740  00090C  D0D4               	goto	l1252
 29741  00090E                     l1265:
 29742                           
 29743                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29744  00090E  0EF5               	movlw	low _ConnTimeout
 29745  000910  0100               	movlb	0	; () banked
 29746  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29747  000914  0E02               	movlw	high _ConnTimeout
 29748  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29749  000918  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29750  00091C                     L46:
 29751  00091C  06E8               	decf	wreg,f,c
 29752  00091E  A4D8               	btfss	status,2,c
 29753  000920  D0CA               	goto	l1252
 29754                           
 29755                           ;mdm_gsm_gprs_http.c: 411: {
 29756                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 29757  000922  0E0F               	movlw	15
 29758  000924                     L45:
 29759  000924  0101               	movlb	1	; () banked
 29760  000926  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29761                           
 29762                           ; BSR set to: 1
 29763                           ;mdm_gsm_gprs_http.c: 414: }
 29764                           ;mdm_gsm_gprs_http.c: 415: break;
 29765                           
 29766                           ; BSR set to: 1
 29767  000928  D0C6               	goto	l1252
 29768  00092A                     
 29769                           ; BSR set to: 1
 29770                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 29771                           
 29772                           ; BSR set to: 1
 29773  00092A  0E3C               	movlw	low _NewStringReceived
 29774  00092C  0100               	movlb	0	; () banked
 29775  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29776  000930  0E00               	movlw	high _NewStringReceived
 29777  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29778  000934  EC10  F031         	call	_ReceiveEvt	;wreg free
 29779  000938  0900               	iorlw	0
 29780  00093A  B4D8               	btfsc	status,2,c
 29781  00093C  D018               	goto	l1270
 29782                           
 29783                           ;mdm_gsm_gprs_http.c: 420: {
 29784                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 29785  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 29786  000942  0A2B               	xorlw	43
 29787  000944  A4D8               	btfss	status,2,c
 29788  000946  D0B7               	goto	l1252
 29789  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29790  00094C  0A48               	xorlw	72
 29791  00094E  A4D8               	btfss	status,2,c
 29792  000950  D0B2               	goto	l1252
 29793                           
 29794                           ;mdm_gsm_gprs_http.c: 423: {
 29795                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 29796  000952  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29797                           
 29798                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 29799  000956  0E58               	movlw	low _RxBuffer
 29800  000958  0100               	movlb	0	; () banked
 29801  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29802  00095C  0E0C               	movlw	high _RxBuffer
 29803  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29804  000960  0E01               	movlw	1
 29805  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29806  000964  0E90               	movlw	144
 29807  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29808  000968  EC32  F030         	call	_ClearBuffer	;wreg free
 29809                           
 29810                           ;mdm_gsm_gprs_http.c: 428: }
 29811                           ;mdm_gsm_gprs_http.c: 429: }
 29812  00096C  D0A4               	goto	l1252
 29813  00096E                     l1270:
 29814                           
 29815                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29816  00096E  0EF5               	movlw	low _ConnTimeout
 29817  000970  0100               	movlb	0	; () banked
 29818  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29819  000974  0E02               	movlw	high _ConnTimeout
 29820  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29821  000978  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29822  00097C  D7CF               	goto	L46
 29823  00097E                     
 29824                           ; BSR set to: 1
 29825                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 29826                           
 29827                           ; BSR set to: 1
 29828  00097E  0E0C               	movlw	12
 29829  000980  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29830                           
 29831                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 29832  000982  0E05               	movlw	5
 29833  000984  0100               	movlb	0	; () banked
 29834  000986  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29835                           
 29836                           ; BSR set to: 0
 29837                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 29838  000988  0EDF               	movlw	low _ConnWait
 29839  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29840  00098C  0E03               	movlw	high _ConnWait
 29841  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29842  000990  0EE8               	movlw	232
 29843  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29844  000994  0E03               	movlw	3
 29845  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29846  000998  0E00               	movlw	0
 29847  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29848  00099C  0E00               	movlw	0
 29849  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29850  0009A0  EC81  F02A         	call	_OsTmr_StartTimer	;wreg free
 29851  0009A4                     l15240:
 29852                           
 29853                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 29854  0009A4  0E01               	movlw	1
 29855  0009A6  0101               	movlb	1	; () banked
 29856  0009A8  D053               	goto	L48
 29857  0009AA                     
 29858                           ; BSR set to: 1
 29859                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 29860                           
 29861                           ; BSR set to: 1
 29862  0009AA  0EDF               	movlw	low _ConnWait
 29863  0009AC  0100               	movlb	0	; () banked
 29864  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29865  0009B0  0E03               	movlw	high _ConnWait
 29866  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29867  0009B4  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29868  0009B8  06E8               	decf	wreg,f,c
 29869  0009BA  A4D8               	btfss	status,2,c
 29870  0009BC  D07C               	goto	l1252
 29871                           
 29872                           ;mdm_gsm_gprs_http.c: 450: {
 29873                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 29874  0009BE  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29875                           
 29876                           ;mdm_gsm_gprs_http.c: 453: }
 29877                           ;mdm_gsm_gprs_http.c: 454: break;
 29878  0009C2  D079               	goto	l1252
 29879  0009C4                     
 29880                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 29881  0009C4  0E3C               	movlw	low _NewStringReceived
 29882  0009C6  0100               	movlb	0	; () banked
 29883  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29884  0009CA  0E00               	movlw	high _NewStringReceived
 29885  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29886  0009CE  EC10  F031         	call	_ReceiveEvt	;wreg free
 29887  0009D2  0900               	iorlw	0
 29888  0009D4  B4D8               	btfsc	status,2,c
 29889  0009D6  D02D               	goto	l1278
 29890                           
 29891                           ;mdm_gsm_gprs_http.c: 459: {
 29892                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 29893  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 29894  0009DC  0A2B               	xorlw	43
 29895  0009DE  A4D8               	btfss	status,2,c
 29896  0009E0  D06A               	goto	l1252
 29897  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29898  0009E6  0A48               	xorlw	72
 29899  0009E8  A4D8               	btfss	status,2,c
 29900  0009EA  D065               	goto	l1252
 29901                           
 29902                           ;mdm_gsm_gprs_http.c: 462: {
 29903                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 29904  0009EC  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29905                           
 29906                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 29907  0009F0  0E58               	movlw	low _RxBuffer
 29908  0009F2  0100               	movlb	0	; () banked
 29909  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29910  0009F6  0E0C               	movlw	high _RxBuffer
 29911  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29912  0009FA  EE20 F003          	lfsr	2,3
 29913  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29914  000A00  26D9               	addwf	fsr2l,f,c
 29915  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29916  000A04  22DA               	addwfc	fsr2h,f,c
 29917  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 29918  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 29919  000A0E  0E01               	movlw	1
 29920  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29921  000A12  0E90               	movlw	144
 29922  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 29923  000A16  EC21  F02A         	call	_StringCopy	;wreg free
 29924                           
 29925                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 29926  000A1A  0E58               	movlw	low _RxBuffer
 29927  000A1C  0100               	movlb	0	; () banked
 29928  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29929  000A20  0E0C               	movlw	high _RxBuffer
 29930  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29931  000A24  0E01               	movlw	1
 29932  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29933  000A28  0E90               	movlw	144
 29934  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29935  000A2C  EC32  F030         	call	_ClearBuffer	;wreg free
 29936                           
 29937                           ;mdm_gsm_gprs_http.c: 469: }
 29938                           ;mdm_gsm_gprs_http.c: 470: }
 29939  000A30  D042               	goto	l1252
 29940  000A32                     l1278:
 29941                           
 29942                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29943  000A32  0EF5               	movlw	low _ConnTimeout
 29944  000A34  0100               	movlb	0	; () banked
 29945  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29946  000A38  0E02               	movlw	high _ConnTimeout
 29947  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29948  000A3C  EC17  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29949  000A40  D76D               	goto	L46
 29950  000A42                     
 29951                           ; BSR set to: 1
 29952                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 29953                           
 29954                           ; BSR set to: 1
 29955  000A42  0E00               	movlw	0
 29956  000A44  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29957                           
 29958                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 29959  000A46  0E02               	movlw	2
 29960  000A48  D003               	goto	L48
 29961  000A4A                     
 29962                           ; BSR set to: 1
 29963                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 29964                           
 29965                           ; BSR set to: 1
 29966  000A4A  0E00               	movlw	0
 29967  000A4C  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29968                           
 29969                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 29970  000A4E  0E03               	movlw	3
 29971  000A50                     L48:
 29972  000A50  6FE9               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 29973                           
 29974                           ; BSR set to: 1
 29975                           ;mdm_gsm_gprs_http.c: 494: }
 29976                           
 29977                           ; BSR set to: 1
 29978                           ;mdm_gsm_gprs_http.c: 493: break;
 29979                           
 29980                           ;mdm_gsm_gprs_http.c: 492: default:
 29981                           
 29982                           ;mdm_gsm_gprs_http.c: 490: break;
 29983  000A52  D031               	goto	l1252
 29984  000A54                     l1249:
 29985                           
 29986                           ; BSR set to: 1
 29987                           
 29988                           ; BSR set to: 1
 29989  000A54  51EA               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 29990                           
 29991                           ; Switch size 1, requested type "space"
 29992                           ; Number of cases is 16, Range of values is 0 to 15
 29993                           ; switch strategies available:
 29994                           ; Name         Instructions Cycles
 29995                           ; simple_byte           49    25 (average)
 29996                           ;	Chosen strategy is simple_byte
 29997  000A56  0A00               	xorlw	0	; case 0
 29998  000A58  B4D8               	btfsc	status,2,c
 29999  000A5A  D5CC               	goto	l1250
 30000  000A5C  0A01               	xorlw	1	; case 1
 30001  000A5E  B4D8               	btfsc	status,2,c
 30002  000A60  D5D5               	goto	l1253
 30003  000A62  0A03               	xorlw	3	; case 2
 30004  000A64  B4D8               	btfsc	status,2,c
 30005  000A66  D5EF               	goto	l1254
 30006  000A68  0A01               	xorlw	1	; case 3
 30007  000A6A  B4D8               	btfsc	status,2,c
 30008  000A6C  D609               	goto	l1255
 30009  000A6E  0A07               	xorlw	7	; case 4
 30010  000A70  B4D8               	btfsc	status,2,c
 30011  000A72  D623               	goto	l1256
 30012  000A74  0A01               	xorlw	1	; case 5
 30013  000A76  B4D8               	btfsc	status,2,c
 30014  000A78  D6BC               	goto	l1260
 30015  000A7A  0A03               	xorlw	3	; case 6
 30016  000A7C  B4D8               	btfsc	status,2,c
 30017  000A7E  D6D6               	goto	l1261
 30018  000A80  0A01               	xorlw	1	; case 7
 30019  000A82  B4D8               	btfsc	status,2,c
 30020  000A84  D752               	goto	l1269
 30021  000A86  0A0F               	xorlw	15	; case 8
 30022  000A88  B4D8               	btfsc	status,2,c
 30023  000A8A  D6E5               	goto	l1262
 30024  000A8C  0A01               	xorlw	1	; case 9
 30025  000A8E  B4D8               	btfsc	status,2,c
 30026  000A90  D6FF               	goto	l1263
 30027  000A92  0A03               	xorlw	3	; case 10
 30028  000A94  B4D8               	btfsc	status,2,c
 30029  000A96  D719               	goto	l1264
 30030  000A98  0A01               	xorlw	1	; case 11
 30031  000A9A  B4D8               	btfsc	status,2,c
 30032  000A9C  D770               	goto	l1274
 30033  000A9E  0A07               	xorlw	7	; case 12
 30034  000AA0  B4D8               	btfsc	status,2,c
 30035  000AA2  D783               	goto	l1275
 30036  000AA4  0A01               	xorlw	1	; case 13
 30037  000AA6  B4D8               	btfsc	status,2,c
 30038  000AA8  D78D               	goto	l1277
 30039  000AAA  0A03               	xorlw	3	; case 14
 30040  000AAC  B4D8               	btfsc	status,2,c
 30041  000AAE  D7C9               	goto	l1282
 30042  000AB0  0A01               	xorlw	1	; case 15
 30043  000AB2  B4D8               	btfsc	status,2,c
 30044  000AB4  D7CA               	goto	l1283
 30045  000AB6                     l1252:
 30046                           
 30047                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30048                           
 30049                           ; BSR set to: 1
 30050  000AB6  0101               	movlb	1	; () banked
 30051  000AB8  51E9               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30052  000ABA  0012               	return	
 30053  000ABC                     __end_of_HttpGetMethod:
 30054                           	opt stack 0
 30055                           tosu	equ	0xFFF
 30056                           tosh	equ	0xFFE
 30057                           tosl	equ	0xFFD
 30058                           pclath	equ	0xFFA
 30059                           tblptru	equ	0xFF8
 30060                           tblptrh	equ	0xFF7
 30061                           tblptrl	equ	0xFF6
 30062                           tablat	equ	0xFF5
 30063                           prodh	equ	0xFF4
 30064                           prodl	equ	0xFF3
 30065                           intcon	equ	0xFF2
 30066                           intcon2	equ	0xFF1
 30067                           intcon3	equ	0xFF0
 30068                           indf0	equ	0xFEF
 30069                           postinc0	equ	0xFEE
 30070                           plusw0	equ	0xFEB
 30071                           fsr0h	equ	0xFEA
 30072                           fsr0l	equ	0xFE9
 30073                           wreg	equ	0xFE8
 30074                           indf1	equ	0xFE7
 30075                           postinc1	equ	0xFE6
 30076                           postdec1	equ	0xFE5
 30077                           plusw1	equ	0xFE3
 30078                           fsr1h	equ	0xFE2
 30079                           fsr1l	equ	0xFE1
 30080                           indf2	equ	0xFDF
 30081                           postinc2	equ	0xFDE
 30082                           postdec2	equ	0xFDD
 30083                           plusw2	equ	0xFDB
 30084                           fsr2h	equ	0xFDA
 30085                           fsr2l	equ	0xFD9
 30086                           status	equ	0xFD8
 30087                           
 30088 ;; *************** function _Uart_WriteString *****************
 30089 ;; Defined at:
 30090 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30091 ;; Parameters:    Size  Location     Type
 30092 ;;  Module          1    wreg     unsigned char 
 30093 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30094 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30095 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30096 ;; Auto vars:     Size  Location     Type
 30097 ;;  Module          1   34[BANK0 ] unsigned char 
 30098 ;; Return value:  Size  Location     Type
 30099 ;;                  1    wreg      void 
 30100 ;; Registers used:
 30101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30102 ;; Tracked objects:
 30103 ;;		On entry : 0/0
 30104 ;;		On exit  : 0/0
 30105 ;;		Unchanged: 0/0
 30106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30110 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30111 ;;Total ram usage:        3 bytes
 30112 ;; Hardware stack levels used:    1
 30113 ;; Hardware stack levels required when called:   12
 30114 ;; This function calls:
 30115 ;;		_UartTxBufferStatus
 30116 ;;		_UartWriteByte
 30117 ;; This function is called by:
 30118 ;;		_Mdm_SetSmsFormat
 30119 ;;		_InitGprsNetwork
 30120 ;;		_HttpGetMethod
 30121 ;;		_Mdm_PinUnlock
 30122 ;;		_Mdm_MakePhoneCall
 30123 ;; This function uses a non-reentrant model
 30124 ;;
 30125                           
 30126                           	psect	text135
 30127  005F40                     __ptext135:
 30128                           	opt stack 0
 30129  005F40                     _Uart_WriteString:
 30130                           	opt stack 12
 30131                           
 30132                           ; BSR set to: 1
 30133                           ;incstack = 0
 30134                           ;Uart_WriteString@Module stored from wreg
 30135  005F40  0100               	movlb	0	; () banked
 30136  005F42  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30137                           
 30138                           ;uart_drv.c: 521: while (*StringToWrite)
 30139  005F44  D014               	goto	u11730
 30140  005F46                     
 30141                           ;uart_drv.c: 522: {
 30142                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30143  005F46  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30144  005F4A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30145  005F4E  50DF               	movf	indf2,w,c
 30146  005F50  0100               	movlb	0	; () banked
 30147  005F52  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30148  005F54  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30149  005F56  EC6F  F032         	call	_UartWriteByte
 30150                           
 30151                           ;uart_drv.c: 526: StringToWrite++;
 30152  005F5A  0100               	movlb	0	; () banked
 30153  005F5C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30154  005F5E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30155  005F60                     
 30156                           ; BSR set to: 0
 30157                           
 30158                           ; BSR set to: 0
 30159  005F60  0100               	movlb	0	; () banked
 30160  005F62  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30161  005F64  EC51  F02D         	call	_UartTxBufferStatus
 30162  005F68  06E8               	decf	wreg,f,c
 30163  005F6A  B4D8               	btfsc	status,2,c
 30164  005F6C  D7F9               	goto	l709
 30165  005F6E                     u11730:
 30166  005F6E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30167  005F72  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30168  005F76  50DF               	movf	indf2,w,c
 30169  005F78  B4D8               	btfsc	status,2,c
 30170  005F7A  0012               	return	
 30171  005F7C  D7E4               	goto	l707
 30172  005F7E                     __end_of_Uart_WriteString:
 30173                           	opt stack 0
 30174                           tosu	equ	0xFFF
 30175                           tosh	equ	0xFFE
 30176                           tosl	equ	0xFFD
 30177                           pclath	equ	0xFFA
 30178                           tblptru	equ	0xFF8
 30179                           tblptrh	equ	0xFF7
 30180                           tblptrl	equ	0xFF6
 30181                           tablat	equ	0xFF5
 30182                           prodh	equ	0xFF4
 30183                           prodl	equ	0xFF3
 30184                           intcon	equ	0xFF2
 30185                           intcon2	equ	0xFF1
 30186                           intcon3	equ	0xFF0
 30187                           indf0	equ	0xFEF
 30188                           postinc0	equ	0xFEE
 30189                           plusw0	equ	0xFEB
 30190                           fsr0h	equ	0xFEA
 30191                           fsr0l	equ	0xFE9
 30192                           wreg	equ	0xFE8
 30193                           indf1	equ	0xFE7
 30194                           postinc1	equ	0xFE6
 30195                           postdec1	equ	0xFE5
 30196                           plusw1	equ	0xFE3
 30197                           fsr1h	equ	0xFE2
 30198                           fsr1l	equ	0xFE1
 30199                           indf2	equ	0xFDF
 30200                           postinc2	equ	0xFDE
 30201                           postdec2	equ	0xFDD
 30202                           plusw2	equ	0xFDB
 30203                           fsr2h	equ	0xFDA
 30204                           fsr2l	equ	0xFD9
 30205                           status	equ	0xFD8
 30206                           
 30207 ;; *************** function _Uart_WriteConstString *****************
 30208 ;; Defined at:
 30209 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30210 ;; Parameters:    Size  Location     Type
 30211 ;;  Module          1    wreg     unsigned char 
 30212 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30213 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30214 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30215 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30216 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30217 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30218 ;;		 -> STR_1(5), 
 30219 ;; Auto vars:     Size  Location     Type
 30220 ;;  Module          1   34[BANK0 ] unsigned char 
 30221 ;; Return value:  Size  Location     Type
 30222 ;;                  1    wreg      void 
 30223 ;; Registers used:
 30224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30225 ;; Tracked objects:
 30226 ;;		On entry : 0/0
 30227 ;;		On exit  : 0/0
 30228 ;;		Unchanged: 0/0
 30229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30233 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30234 ;;Total ram usage:        3 bytes
 30235 ;; Hardware stack levels used:    1
 30236 ;; Hardware stack levels required when called:   12
 30237 ;; This function calls:
 30238 ;;		_UartTxBufferStatus
 30239 ;;		_UartWriteByte
 30240 ;; This function is called by:
 30241 ;;		_CheckModem
 30242 ;;		_ConfigureModem
 30243 ;;		_GetSmsSm
 30244 ;;		_Mdm_HangPhoneCall
 30245 ;;		_InitGprsNetwork
 30246 ;;		_HttpGetMethod
 30247 ;;		_MyApp_Task
 30248 ;;		_initGprsModem
 30249 ;;		_Mdm_GetPhoneCall
 30250 ;;		_MdmHttp_SetSsl
 30251 ;; This function uses a non-reentrant model
 30252 ;;
 30253                           
 30254                           	psect	text136
 30255  005E00                     __ptext136:
 30256                           	opt stack 0
 30257  005E00                     _Uart_WriteConstString:
 30258                           	opt stack 12
 30259                           
 30260                           ;incstack = 0
 30261                           ;Uart_WriteConstString@Module stored from wreg
 30262  005E00  0100               	movlb	0	; () banked
 30263  005E02  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30264                           
 30265                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30266  005E04  D015               	goto	u11710
 30267  005E06                     
 30268                           ;uart_drv.c: 500: {
 30269                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30270  005E06  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30271  005E0A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30272  005E0E                     	if	0	;tblptru may be non-zero
 30273  005E0E                     	endif
 30274  005E0E                     	if	0	;tblptru may be non-zero
 30275  005E0E                     	endif
 30276  005E0E  0008               	tblrd		*
 30277  005E10  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30278  005E14  0100               	movlb	0	; () banked
 30279  005E16  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30280  005E18  EC6F  F032         	call	_UartWriteByte
 30281                           
 30282                           ;uart_drv.c: 504: ConstStringToWrite++;
 30283  005E1C  0100               	movlb	0	; () banked
 30284  005E1E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30285  005E20  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30286  005E22                     
 30287                           ; BSR set to: 0
 30288                           
 30289                           ; BSR set to: 0
 30290  005E22  0100               	movlb	0	; () banked
 30291  005E24  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30292  005E26  EC51  F02D         	call	_UartTxBufferStatus
 30293  005E2A  06E8               	decf	wreg,f,c
 30294  005E2C  B4D8               	btfsc	status,2,c
 30295  005E2E  D7F9               	goto	l700
 30296  005E30                     u11710:
 30297  005E30  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30298  005E34  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30299  005E38                     	if	0	;tblptru may be non-zero
 30300  005E38                     	endif
 30301  005E38                     	if	0	;tblptru may be non-zero
 30302  005E38                     	endif
 30303  005E38  0008               	tblrd		*
 30304  005E3A  50F5               	movf	tablat,w,c
 30305  005E3C  0900               	iorlw	0
 30306  005E3E  B4D8               	btfsc	status,2,c
 30307  005E40  0012               	return	
 30308  005E42  D7E1               	goto	l698
 30309  005E44                     __end_of_Uart_WriteConstString:
 30310                           	opt stack 0
 30311                           tosu	equ	0xFFF
 30312                           tosh	equ	0xFFE
 30313                           tosl	equ	0xFFD
 30314                           pclath	equ	0xFFA
 30315                           tblptru	equ	0xFF8
 30316                           tblptrh	equ	0xFF7
 30317                           tblptrl	equ	0xFF6
 30318                           tablat	equ	0xFF5
 30319                           prodh	equ	0xFF4
 30320                           prodl	equ	0xFF3
 30321                           intcon	equ	0xFF2
 30322                           intcon2	equ	0xFF1
 30323                           intcon3	equ	0xFF0
 30324                           indf0	equ	0xFEF
 30325                           postinc0	equ	0xFEE
 30326                           plusw0	equ	0xFEB
 30327                           fsr0h	equ	0xFEA
 30328                           fsr0l	equ	0xFE9
 30329                           wreg	equ	0xFE8
 30330                           indf1	equ	0xFE7
 30331                           postinc1	equ	0xFE6
 30332                           postdec1	equ	0xFE5
 30333                           plusw1	equ	0xFE3
 30334                           fsr1h	equ	0xFE2
 30335                           fsr1l	equ	0xFE1
 30336                           indf2	equ	0xFDF
 30337                           postinc2	equ	0xFDE
 30338                           postdec2	equ	0xFDD
 30339                           plusw2	equ	0xFDB
 30340                           fsr2h	equ	0xFDA
 30341                           fsr2l	equ	0xFD9
 30342                           status	equ	0xFD8
 30343                           
 30344 ;; *************** function _UartWriteByte *****************
 30345 ;; Defined at:
 30346 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30347 ;; Parameters:    Size  Location     Type
 30348 ;;  Module          1    wreg     unsigned char 
 30349 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30350 ;; Auto vars:     Size  Location     Type
 30351 ;;  Module          1   30[BANK0 ] unsigned char 
 30352 ;; Return value:  Size  Location     Type
 30353 ;;                  1    wreg      void 
 30354 ;; Registers used:
 30355 ;;		wreg, status,2, status,0
 30356 ;; Tracked objects:
 30357 ;;		On entry : 0/0
 30358 ;;		On exit  : 0/0
 30359 ;;		Unchanged: 0/0
 30360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30361 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30365 ;;Total ram usage:        2 bytes
 30366 ;; Hardware stack levels used:    1
 30367 ;; Hardware stack levels required when called:   11
 30368 ;; This function calls:
 30369 ;;		Nothing
 30370 ;; This function is called by:
 30371 ;;		_Uart_WriteConstString
 30372 ;;		_Uart_WriteString
 30373 ;;		_Uart_WriteStringLen
 30374 ;; This function uses a non-reentrant model
 30375 ;;
 30376                           
 30377                           	psect	text137
 30378  0064DE                     __ptext137:
 30379                           	opt stack 0
 30380  0064DE                     _UartWriteByte:
 30381                           	opt stack 12
 30382                           
 30383                           ;incstack = 0
 30384                           ;UartWriteByte@Module stored from wreg
 30385  0064DE  0100               	movlb	0	; () banked
 30386  0064E0  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 30387                           
 30388                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 30389  0064E2  0100               	movlb	0	; () banked
 30390  0064E4  057E               	decf	UartWriteByte@Module& (0+255),w,b
 30391  0064E6  A4D8               	btfss	status,2,c
 30392  0064E8  D003               	goto	l639
 30393                           
 30394                           ; BSR set to: 0
 30395                           ;uart_drv.c: 176: {
 30396                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 30397  0064EA  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 30398                           
 30399                           ;uart_drv.c: 179: }
 30400  0064EE  0012               	return	
 30401  0064F0                     l639:
 30402                           
 30403                           ; BSR set to: 0
 30404                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 30405                           
 30406                           ; BSR set to: 0
 30407  0064F0  0E02               	movlw	2
 30408  0064F2  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 30409  0064F4  A4D8               	btfss	status,2,c
 30410  0064F6  0012               	return	
 30411                           
 30412                           ; BSR set to: 0
 30413                           ;uart_drv.c: 181: {
 30414                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 30415  0064F8  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 30416                           
 30417                           ; BSR set to: 0
 30418  0064FC  0012               	return	
 30419  0064FE                     __end_of_UartWriteByte:
 30420                           	opt stack 0
 30421                           tosu	equ	0xFFF
 30422                           tosh	equ	0xFFE
 30423                           tosl	equ	0xFFD
 30424                           pclath	equ	0xFFA
 30425                           tblptru	equ	0xFF8
 30426                           tblptrh	equ	0xFF7
 30427                           tblptrl	equ	0xFF6
 30428                           tablat	equ	0xFF5
 30429                           prodh	equ	0xFF4
 30430                           prodl	equ	0xFF3
 30431                           intcon	equ	0xFF2
 30432                           intcon2	equ	0xFF1
 30433                           intcon3	equ	0xFF0
 30434                           indf0	equ	0xFEF
 30435                           postinc0	equ	0xFEE
 30436                           plusw0	equ	0xFEB
 30437                           fsr0h	equ	0xFEA
 30438                           fsr0l	equ	0xFE9
 30439                           wreg	equ	0xFE8
 30440                           indf1	equ	0xFE7
 30441                           postinc1	equ	0xFE6
 30442                           postdec1	equ	0xFE5
 30443                           plusw1	equ	0xFE3
 30444                           fsr1h	equ	0xFE2
 30445                           fsr1l	equ	0xFE1
 30446                           indf2	equ	0xFDF
 30447                           postinc2	equ	0xFDE
 30448                           postdec2	equ	0xFDD
 30449                           plusw2	equ	0xFDB
 30450                           fsr2h	equ	0xFDA
 30451                           fsr2l	equ	0xFD9
 30452                           status	equ	0xFD8
 30453                           
 30454 ;; *************** function _UartTxBufferStatus *****************
 30455 ;; Defined at:
 30456 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30457 ;; Parameters:    Size  Location     Type
 30458 ;;  Module          1    wreg     unsigned char 
 30459 ;; Auto vars:     Size  Location     Type
 30460 ;;  Module          1   30[BANK0 ] unsigned char 
 30461 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 30462 ;; Return value:  Size  Location     Type
 30463 ;;                  1    wreg      enum E9033
 30464 ;; Registers used:
 30465 ;;		wreg, status,2, status,0
 30466 ;; Tracked objects:
 30467 ;;		On entry : 0/0
 30468 ;;		On exit  : 0/0
 30469 ;;		Unchanged: 0/0
 30470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30474 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30475 ;;Total ram usage:        3 bytes
 30476 ;; Hardware stack levels used:    1
 30477 ;; Hardware stack levels required when called:   11
 30478 ;; This function calls:
 30479 ;;		Nothing
 30480 ;; This function is called by:
 30481 ;;		_Uart_WriteConstString
 30482 ;;		_Uart_WriteString
 30483 ;;		_Uart_WriteStringLen
 30484 ;; This function uses a non-reentrant model
 30485 ;;
 30486                           
 30487                           	psect	text138
 30488  005AA2                     __ptext138:
 30489                           	opt stack 0
 30490  005AA2                     _UartTxBufferStatus:
 30491                           	opt stack 12
 30492                           
 30493                           ; BSR set to: 0
 30494                           ;incstack = 0
 30495                           ;UartTxBufferStatus@Module stored from wreg
 30496  005AA2  0100               	movlb	0	; () banked
 30497  005AA4  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 30498                           
 30499                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 30500  005AA6  0E00               	movlw	0
 30501  005AA8  0100               	movlb	0	; () banked
 30502  005AAA  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30503                           
 30504                           ; BSR set to: 0
 30505                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 30506  005AAC  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 30507  005AAE  A4D8               	btfss	status,2,c
 30508  005AB0  D00B               	goto	l651
 30509                           
 30510                           ; BSR set to: 0
 30511                           ;uart_drv.c: 228: {
 30512                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30513  005AB2  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30514  005AB6  90D8               	bcf	status,0,c
 30515  005AB8  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30516  005ABA  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 30517  005ABC  D002               	goto	l652
 30518  005ABE                     u11140:
 30519                           
 30520                           ; BSR set to: 0
 30521                           ;uart_drv.c: 231: {
 30522                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 30523  005ABE  0E01               	movlw	1
 30524  005AC0  D014               	goto	L51
 30525  005AC2                     l652:
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30529                           
 30530                           ; BSR set to: 0
 30531  005AC2  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30532  005AC6  D00C               	goto	L80
 30533  005AC8                     l651:
 30534                           
 30535                           ; BSR set to: 0
 30536                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 30537                           
 30538                           ; BSR set to: 0
 30539  005AC8  0E02               	movlw	2
 30540  005ACA  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 30541  005ACC  A4D8               	btfss	status,2,c
 30542  005ACE  D00E               	goto	l660
 30543                           
 30544                           ; BSR set to: 0
 30545                           ;uart_drv.c: 244: {
 30546                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30547  005AD0  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30548  005AD4  90D8               	bcf	status,0,c
 30549  005AD6  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30550  005AD8  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30551  005ADA  D7F1               	goto	u11140
 30552                           
 30553                           ; BSR set to: 0
 30554                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30555                           
 30556                           ; BSR set to: 0
 30557                           
 30558                           ;uart_drv.c: 249: }
 30559                           
 30560                           ; BSR set to: 0
 30561                           ;uart_drv.c: 247: {
 30562                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 30563  005ADC  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30564  005AE0                     L80:
 30565  005AE0  90D8               	bcf	status,0,c
 30566  005AE2  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30567  005AE4  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30568  005AE6  D002               	goto	l660
 30569                           
 30570                           ; BSR set to: 0
 30571                           ;uart_drv.c: 251: {
 30572                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 30573  005AE8  0E02               	movlw	2
 30574  005AEA                     L51:
 30575  005AEA  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30576  005AEC                     l660:
 30577                           
 30578                           ; BSR set to: 0
 30579                           ;uart_drv.c: 257: }
 30580                           ;uart_drv.c: 258: }
 30581                           ;uart_drv.c: 260: return TxBufferStatus;
 30582                           
 30583                           ; BSR set to: 0
 30584                           
 30585                           ; BSR set to: 0
 30586                           
 30587                           ; BSR set to: 0
 30588                           
 30589                           ; BSR set to: 0
 30590                           
 30591                           ;uart_drv.c: 254: else
 30592                           ;uart_drv.c: 255: {
 30593                           
 30594                           ; BSR set to: 0
 30595  005AEC  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 30596  005AEE  0012               	return	
 30597  005AF0                     __end_of_UartTxBufferStatus:
 30598                           	opt stack 0
 30599                           tosu	equ	0xFFF
 30600                           tosh	equ	0xFFE
 30601                           tosl	equ	0xFFD
 30602                           pclath	equ	0xFFA
 30603                           tblptru	equ	0xFF8
 30604                           tblptrh	equ	0xFF7
 30605                           tblptrl	equ	0xFF6
 30606                           tablat	equ	0xFF5
 30607                           prodh	equ	0xFF4
 30608                           prodl	equ	0xFF3
 30609                           intcon	equ	0xFF2
 30610                           intcon2	equ	0xFF1
 30611                           intcon3	equ	0xFF0
 30612                           indf0	equ	0xFEF
 30613                           postinc0	equ	0xFEE
 30614                           plusw0	equ	0xFEB
 30615                           fsr0h	equ	0xFEA
 30616                           fsr0l	equ	0xFE9
 30617                           wreg	equ	0xFE8
 30618                           indf1	equ	0xFE7
 30619                           postinc1	equ	0xFE6
 30620                           postdec1	equ	0xFE5
 30621                           plusw1	equ	0xFE3
 30622                           fsr1h	equ	0xFE2
 30623                           fsr1l	equ	0xFE1
 30624                           indf2	equ	0xFDF
 30625                           postinc2	equ	0xFDE
 30626                           postdec2	equ	0xFDD
 30627                           plusw2	equ	0xFDB
 30628                           fsr2h	equ	0xFDA
 30629                           fsr2l	equ	0xFD9
 30630                           status	equ	0xFD8
 30631                           
 30632 ;; *************** function _StringCopy *****************
 30633 ;; Defined at:
 30634 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 30635 ;; Parameters:    Size  Location     Type
 30636 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 30637 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), STR_15(20), STR_9(21), 
 30638 ;;		 -> MessageText(50), PhoneNumber(20), STR_5(10), Mdm_SmsRx.HeaderBuffer(80), 
 30639 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 30640 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 30641 ;;		 -> smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), 
 30642 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), 
 30643 ;;		 -> callerNumber(13), 
 30644 ;;  Len             2   33[BANK0 ] unsigned short 
 30645 ;; Auto vars:     Size  Location     Type
 30646 ;;  Index           2   37[BANK0 ] unsigned short 
 30647 ;; Return value:  Size  Location     Type
 30648 ;;                  1    wreg      void 
 30649 ;; Registers used:
 30650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30651 ;; Tracked objects:
 30652 ;;		On entry : 0/0
 30653 ;;		On exit  : 0/0
 30654 ;;		Unchanged: 0/0
 30655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30659 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30660 ;;Total ram usage:       10 bytes
 30661 ;; Hardware stack levels used:    1
 30662 ;; Hardware stack levels required when called:   11
 30663 ;; This function calls:
 30664 ;;		Nothing
 30665 ;; This function is called by:
 30666 ;;		_ModemEvtParser
 30667 ;;		_GetSmsSm
 30668 ;;		_SendSmsSm
 30669 ;;		_Mdm_GetSmsData
 30670 ;;		_InitGprsNetwork
 30671 ;;		_HttpGetMethod
 30672 ;;		_Eeprom_Write
 30673 ;;		_Mdm_SendSmsData
 30674 ;; This function uses a non-reentrant model
 30675 ;;
 30676                           
 30677                           	psect	text139
 30678  005442                     __ptext139:
 30679                           	opt stack 0
 30680  005442                     _StringCopy:
 30681                           	opt stack 14
 30682                           
 30683                           ;sf.c: 106: UINT16 Index = 0;
 30684                           
 30685                           ; BSR set to: 0
 30686                           ;incstack = 0
 30687  005442  0E00               	movlw	0
 30688  005444  0100               	movlb	0	; () banked
 30689  005446  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 30690  005448  0E00               	movlw	0
 30691  00544A  6F85               	movwf	StringCopy@Index& (0+255),b
 30692                           
 30693                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 30694  00544C  0E00               	movlw	0
 30695  00544E  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 30696  005450  0E00               	movlw	0
 30697  005452  6F85               	movwf	StringCopy@Index& (0+255),b
 30698  005454  D020               	goto	l2244
 30699  005456                     
 30700                           ; BSR set to: 0
 30701                           ;sf.c: 110: {
 30702                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 30703                           
 30704                           ; BSR set to: 0
 30705  005456  5185               	movf	StringCopy@Index& (0+255),w,b
 30706  005458  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 30707  00545A  6F83               	movwf	??_StringCopy& (0+255),b
 30708  00545C  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 30709  00545E  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 30710  005460  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 30711  005462  C083  FFF6         	movff	??_StringCopy,tblptrl
 30712  005466  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 30713  00546A  6AF8               	clrf	tblptru,c
 30714  00546C  5185               	movf	StringCopy@Index& (0+255),w,b
 30715  00546E  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 30716  005470  6ED9               	movwf	fsr2l,c
 30717  005472  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 30718  005474  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 30719  005476  6EDA               	movwf	fsr2h,c
 30720  005478  0E0E               	movlw	(high __ramtop+-1)
 30721  00547A  64F7               	cpfsgt	tblptrh,c
 30722  00547C  D003               	bra	u12257
 30723  00547E  0008               	tblrd		*
 30724  005480  50F5               	movf	tablat,w,c
 30725  005482  D005               	bra	u12250
 30726  005484                     u12257:
 30727  005484  CFF6 FFE9          	movff	tblptrl,fsr0l
 30728  005488  CFF7 FFEA          	movff	tblptrh,fsr0h
 30729  00548C  50EF               	movf	indf0,w,c
 30730  00548E                     u12250:
 30731  00548E  6EDF               	movwf	indf2,c
 30732  005490  0100               	movlb	0	; () banked
 30733  005492  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 30734  005494  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 30735  005496                     l2244:
 30736                           
 30737                           ; BSR set to: 0
 30738                           
 30739                           ; BSR set to: 0
 30740  005496  5181               	movf	StringCopy@Len& (0+255),w,b
 30741  005498  5D85               	subwf	StringCopy@Index& (0+255),w,b
 30742  00549A  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 30743  00549C  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 30744  00549E  B0D8               	btfsc	status,0,c
 30745  0054A0  0012               	return	
 30746  0054A2  D7D9               	goto	l2245
 30747  0054A4                     __end_of_StringCopy:
 30748                           	opt stack 0
 30749                           tosu	equ	0xFFF
 30750                           tosh	equ	0xFFE
 30751                           tosl	equ	0xFFD
 30752                           pclath	equ	0xFFA
 30753                           tblptru	equ	0xFF8
 30754                           tblptrh	equ	0xFF7
 30755                           tblptrl	equ	0xFF6
 30756                           tablat	equ	0xFF5
 30757                           prodh	equ	0xFF4
 30758                           prodl	equ	0xFF3
 30759                           intcon	equ	0xFF2
 30760                           intcon2	equ	0xFF1
 30761                           intcon3	equ	0xFF0
 30762                           indf0	equ	0xFEF
 30763                           postinc0	equ	0xFEE
 30764                           plusw0	equ	0xFEB
 30765                           fsr0h	equ	0xFEA
 30766                           fsr0l	equ	0xFE9
 30767                           wreg	equ	0xFE8
 30768                           indf1	equ	0xFE7
 30769                           postinc1	equ	0xFE6
 30770                           postdec1	equ	0xFE5
 30771                           plusw1	equ	0xFE3
 30772                           fsr1h	equ	0xFE2
 30773                           fsr1l	equ	0xFE1
 30774                           indf2	equ	0xFDF
 30775                           postinc2	equ	0xFDE
 30776                           postdec2	equ	0xFDD
 30777                           plusw2	equ	0xFDB
 30778                           fsr2h	equ	0xFDA
 30779                           fsr2l	equ	0xFD9
 30780                           status	equ	0xFD8
 30781                           
 30782 ;; *************** function _OsTmr_StartTimer *****************
 30783 ;; Defined at:
 30784 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30785 ;; Parameters:    Size  Location     Type
 30786 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 30787 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 30788 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 30789 ;;  Timeout         4   35[BANK0 ] unsigned long 
 30790 ;; Auto vars:     Size  Location     Type
 30791 ;;		None
 30792 ;; Return value:  Size  Location     Type
 30793 ;;                  1    wreg      void 
 30794 ;; Registers used:
 30795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30796 ;; Tracked objects:
 30797 ;;		On entry : 0/0
 30798 ;;		On exit  : 0/0
 30799 ;;		Unchanged: 0/0
 30800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30801 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30804 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30805 ;;Total ram usage:        6 bytes
 30806 ;; Hardware stack levels used:    1
 30807 ;; Hardware stack levels required when called:   12
 30808 ;; This function calls:
 30809 ;;		_GetOsTickCounter
 30810 ;; This function is called by:
 30811 ;;		_OsTmr_Wait
 30812 ;;		_CheckModem
 30813 ;;		_SendSmsSm
 30814 ;;		_InitGprsNetwork
 30815 ;;		_HttpGetMethod
 30816 ;;		_I2cSlv_QueryI2cData
 30817 ;;		_Term_MainSm
 30818 ;; This function uses a non-reentrant model
 30819 ;;
 30820                           
 30821                           	psect	text140
 30822  005502                     __ptext140:
 30823                           	opt stack 0
 30824  005502                     _OsTmr_StartTimer:
 30825                           	opt stack 12
 30826                           
 30827                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 30828                           
 30829                           ; BSR set to: 0
 30830                           ;incstack = 0
 30831  005502  0100               	movlb	0	; () banked
 30832  005504  EE20 F001          	lfsr	2,1
 30833  005508  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30834  00550A  26D9               	addwf	fsr2l,f,c
 30835  00550C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30836  00550E  22DA               	addwfc	fsr2h,f,c
 30837  005510  0E00               	movlw	0
 30838  005512  6EDF               	movwf	indf2,c
 30839                           
 30840                           ; BSR set to: 0
 30841                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 30842  005514  EC59  F033         	call	_GetOsTickCounter	;wreg free
 30843  005518  0100               	movlb	0	; () banked
 30844  00551A  EE20 F002          	lfsr	2,2
 30845  00551E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30846  005520  26D9               	addwf	fsr2l,f,c
 30847  005522  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30848  005524  22DA               	addwfc	fsr2h,f,c
 30849  005526  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 30850  00552A  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 30851  00552E  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 30852  005532  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 30853                           
 30854                           ; BSR set to: 0
 30855                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 30856  005536  EE20 F006          	lfsr	2,6
 30857  00553A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30858  00553C  26D9               	addwf	fsr2l,f,c
 30859  00553E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30860  005540  22DA               	addwfc	fsr2h,f,c
 30861  005542  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 30862  005546  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 30863  00554A  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 30864  00554E  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 30865                           
 30866                           ; BSR set to: 0
 30867                           ;os_timers.c: 127: Timer->Enabled = 1u;
 30868  005552  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 30869  005556  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 30870  00555A  0E01               	movlw	1
 30871  00555C  6EDF               	movwf	indf2,c
 30872                           
 30873                           ; BSR set to: 0
 30874  00555E  0012               	return		;funcret
 30875  005560                     __end_of_OsTmr_StartTimer:
 30876                           	opt stack 0
 30877                           tosu	equ	0xFFF
 30878                           tosh	equ	0xFFE
 30879                           tosl	equ	0xFFD
 30880                           pclath	equ	0xFFA
 30881                           tblptru	equ	0xFF8
 30882                           tblptrh	equ	0xFF7
 30883                           tblptrl	equ	0xFF6
 30884                           tablat	equ	0xFF5
 30885                           prodh	equ	0xFF4
 30886                           prodl	equ	0xFF3
 30887                           intcon	equ	0xFF2
 30888                           intcon2	equ	0xFF1
 30889                           intcon3	equ	0xFF0
 30890                           indf0	equ	0xFEF
 30891                           postinc0	equ	0xFEE
 30892                           plusw0	equ	0xFEB
 30893                           fsr0h	equ	0xFEA
 30894                           fsr0l	equ	0xFE9
 30895                           wreg	equ	0xFE8
 30896                           indf1	equ	0xFE7
 30897                           postinc1	equ	0xFE6
 30898                           postdec1	equ	0xFE5
 30899                           plusw1	equ	0xFE3
 30900                           fsr1h	equ	0xFE2
 30901                           fsr1l	equ	0xFE1
 30902                           indf2	equ	0xFDF
 30903                           postinc2	equ	0xFDE
 30904                           postdec2	equ	0xFDD
 30905                           plusw2	equ	0xFDB
 30906                           fsr2h	equ	0xFDA
 30907                           fsr2l	equ	0xFD9
 30908                           status	equ	0xFD8
 30909                           
 30910 ;; *************** function _OsTmr_GetTimerStatus *****************
 30911 ;; Defined at:
 30912 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30913 ;; Parameters:    Size  Location     Type
 30914 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 30915 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 30916 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 30917 ;; Auto vars:     Size  Location     Type
 30918 ;;		None
 30919 ;; Return value:  Size  Location     Type
 30920 ;;                  1    wreg      enum E7740
 30921 ;; Registers used:
 30922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30923 ;; Tracked objects:
 30924 ;;		On entry : 0/0
 30925 ;;		On exit  : 0/0
 30926 ;;		Unchanged: 0/0
 30927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30932 ;;Total ram usage:        6 bytes
 30933 ;; Hardware stack levels used:    1
 30934 ;; Hardware stack levels required when called:   13
 30935 ;; This function calls:
 30936 ;;		_GetElapsedTime
 30937 ;; This function is called by:
 30938 ;;		_OsTmr_Wait
 30939 ;;		_CheckModem
 30940 ;;		_SendSmsSm
 30941 ;;		_InitGprsNetwork
 30942 ;;		_HttpGetMethod
 30943 ;;		_I2cSlv_QueryI2cData
 30944 ;;		_Term_MainSm
 30945 ;; This function uses a non-reentrant model
 30946 ;;
 30947                           
 30948                           	psect	text141
 30949  004C2E                     __ptext141:
 30950                           	opt stack 0
 30951  004C2E                     _OsTmr_GetTimerStatus:
 30952                           	opt stack 11
 30953                           
 30954                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 30955                           
 30956                           ; BSR set to: 0
 30957                           ;incstack = 0
 30958  004C2E  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 30959  004C32  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 30960  004C36  04DE               	decf	postinc2,w,c
 30961  004C38  A4D8               	btfss	status,2,c
 30962  004C3A  D030               	goto	l864
 30963                           
 30964                           ;os_timers.c: 197: {
 30965                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 30966  004C3C  0100               	movlb	0	; () banked
 30967  004C3E  EE20 F006          	lfsr	2,6
 30968  004C42  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30969  004C44  26D9               	addwf	fsr2l,f,c
 30970  004C46  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30971  004C48  22DA               	addwfc	fsr2h,f,c
 30972  004C4A  EE10 F002          	lfsr	1,2
 30973  004C4E  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30974  004C50  26E1               	addwf	fsr1l,f,c
 30975  004C52  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30976  004C54  22E2               	addwfc	fsr1h,f,c
 30977  004C56  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 30978  004C5A  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 30979  004C5E  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 30980  004C62  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 30981  004C66  EC33  F01F         	call	_GetElapsedTime	;wreg free
 30982  004C6A  50DE               	movf	postinc2,w,c
 30983  004C6C  0100               	movlb	0	; () banked
 30984  004C6E  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 30985  004C70  50DE               	movf	postinc2,w,c
 30986  004C72  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 30987  004C74  50DE               	movf	postinc2,w,c
 30988  004C76  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 30989  004C78  50DE               	movf	postinc2,w,c
 30990  004C7A  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 30991  004C7C  A0D8               	btfss	status,0,c
 30992  004C7E  D017               	goto	l867
 30993                           
 30994                           ; BSR set to: 0
 30995                           ;os_timers.c: 200: {
 30996                           ;os_timers.c: 202: Timer->Enabled = 0u;
 30997  004C80  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 30998  004C84  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 30999  004C88  0E00               	movlw	0
 31000  004C8A  6EDF               	movwf	indf2,c
 31001                           
 31002                           ; BSR set to: 0
 31003                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31004  004C8C  EE20 F001          	lfsr	2,1
 31005  004C90  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31006  004C92  26D9               	addwf	fsr2l,f,c
 31007  004C94  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31008  004C96  22DA               	addwfc	fsr2h,f,c
 31009  004C98  0E01               	movlw	1
 31010  004C9A  D008               	goto	L81
 31011  004C9C                     l864:
 31012                           
 31013                           ;os_timers.c: 211: else
 31014                           ;os_timers.c: 212: {
 31015                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31016                           
 31017                           ; BSR set to: 0
 31018  004C9C  0100               	movlb	0	; () banked
 31019  004C9E  EE20 F001          	lfsr	2,1
 31020  004CA2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31021  004CA4  26D9               	addwf	fsr2l,f,c
 31022  004CA6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31023  004CA8  22DA               	addwfc	fsr2h,f,c
 31024  004CAA  0E02               	movlw	2
 31025  004CAC                     L81:
 31026  004CAC  6EDF               	movwf	indf2,c
 31027  004CAE                     l867:
 31028                           
 31029                           ; BSR set to: 0
 31030                           ;os_timers.c: 215: }
 31031                           ;os_timers.c: 218: return Timer->Status;
 31032  004CAE  EE20 F001          	lfsr	2,1
 31033  004CB2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31034  004CB4  26D9               	addwf	fsr2l,f,c
 31035  004CB6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31036  004CB8  22DA               	addwfc	fsr2h,f,c
 31037  004CBA  50DF               	movf	indf2,w,c
 31038  004CBC  0012               	return	
 31039  004CBE                     __end_of_OsTmr_GetTimerStatus:
 31040                           	opt stack 0
 31041                           tosu	equ	0xFFF
 31042                           tosh	equ	0xFFE
 31043                           tosl	equ	0xFFD
 31044                           pclath	equ	0xFFA
 31045                           tblptru	equ	0xFF8
 31046                           tblptrh	equ	0xFF7
 31047                           tblptrl	equ	0xFF6
 31048                           tablat	equ	0xFF5
 31049                           prodh	equ	0xFF4
 31050                           prodl	equ	0xFF3
 31051                           intcon	equ	0xFF2
 31052                           intcon2	equ	0xFF1
 31053                           intcon3	equ	0xFF0
 31054                           indf0	equ	0xFEF
 31055                           postinc0	equ	0xFEE
 31056                           plusw0	equ	0xFEB
 31057                           fsr0h	equ	0xFEA
 31058                           fsr0l	equ	0xFE9
 31059                           wreg	equ	0xFE8
 31060                           indf1	equ	0xFE7
 31061                           postinc1	equ	0xFE6
 31062                           postdec1	equ	0xFE5
 31063                           plusw1	equ	0xFE3
 31064                           fsr1h	equ	0xFE2
 31065                           fsr1l	equ	0xFE1
 31066                           indf2	equ	0xFDF
 31067                           postinc2	equ	0xFDE
 31068                           postdec2	equ	0xFDD
 31069                           plusw2	equ	0xFDB
 31070                           fsr2h	equ	0xFDA
 31071                           fsr2l	equ	0xFD9
 31072                           status	equ	0xFD8
 31073                           
 31074 ;; *************** function _GetElapsedTime *****************
 31075 ;; Defined at:
 31076 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31077 ;; Parameters:    Size  Location     Type
 31078 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31079 ;; Auto vars:     Size  Location     Type
 31080 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31081 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31082 ;; Return value:  Size  Location     Type
 31083 ;;                  4   33[BANK0 ] unsigned long 
 31084 ;; Registers used:
 31085 ;;		wreg, status,2, status,0, cstack
 31086 ;; Tracked objects:
 31087 ;;		On entry : 0/0
 31088 ;;		On exit  : 0/0
 31089 ;;		Unchanged: 0/0
 31090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31092 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31093 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31094 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31095 ;;Total ram usage:       20 bytes
 31096 ;; Hardware stack levels used:    1
 31097 ;; Hardware stack levels required when called:   12
 31098 ;; This function calls:
 31099 ;;		_GetOsTickCounter
 31100 ;; This function is called by:
 31101 ;;		_OsTmr_GetTimerStatus
 31102 ;;		_OsTmr_GetRemainingTime
 31103 ;; This function uses a non-reentrant model
 31104 ;;
 31105                           
 31106                           	psect	text142
 31107  003E66                     __ptext142:
 31108                           	opt stack 0
 31109  003E66                     _GetElapsedTime:
 31110                           	opt stack 11
 31111                           
 31112                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31113                           ;os_timers.c: 87: UINT32 TimeValue;
 31114                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31115                           
 31116                           ; BSR set to: 0
 31117                           ;incstack = 0
 31118  003E66  EC59  F033         	call	_GetOsTickCounter	;wreg free
 31119  003E6A  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31120  003E6E  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31121  003E72  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31122  003E76  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31123                           
 31124                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31125  003E7A  0100               	movlb	0	; () banked
 31126  003E7C  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31127  003E7E  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31128  003E80  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31129  003E82  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31130  003E84  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31131  003E86  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31132  003E88  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31133  003E8A  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31134  003E8C  A0D8               	btfss	status,0,c
 31135  003E8E  D01D               	goto	l844
 31136                           
 31137                           ; BSR set to: 0
 31138                           ;os_timers.c: 94: {
 31139                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31140  003E90  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31141  003E94  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31142  003E98  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31143  003E9C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31144  003EA0  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31145  003EA2  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31146  003EA4  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31147  003EA6  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31148  003EA8  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31149  003EAA  0E00               	movlw	0
 31150  003EAC  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31151  003EAE  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31152  003EB0  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31153  003EB2  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31154  003EB4  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31155  003EB6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31156  003EB8  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31157  003EBA  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31158  003EBC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31159  003EBE  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31160  003EC0  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31161  003EC2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31162  003EC4  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31163  003EC6  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31164  003EC8  D028               	goto	L52
 31165  003ECA                     l844:
 31166                           
 31167                           ; BSR set to: 0
 31168                           ;os_timers.c: 97: else
 31169                           ;os_timers.c: 98: {
 31170                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31171                           
 31172                           ; BSR set to: 0
 31173  003ECA  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31174  003ECE  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31175  003ED2  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31176  003ED6  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31177  003EDA  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31178  003EDC  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31179  003EDE  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31180  003EE0  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31181  003EE2  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31182  003EE4  0E00               	movlw	0
 31183  003EE6  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31184  003EE8  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31185  003EEA  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31186  003EEC  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31187  003EEE  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31188  003EF0  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31189  003EF2  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31190  003EF4  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31191  003EF6  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31192  003EF8  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31193  003EFA  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31194  003EFC  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31195  003EFE  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31196  003F00  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31197  003F02  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31198  003F04  0EFF               	movlw	255
 31199  003F06  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31200  003F08  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31201  003F0A  0EFF               	movlw	255
 31202  003F0C  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31203  003F0E  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31204  003F10  0EFF               	movlw	255
 31205  003F12  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31206  003F14  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31207  003F16  0EFF               	movlw	255
 31208  003F18  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31209  003F1A                     L52:
 31210  003F1A  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31211                           
 31212                           ; BSR set to: 0
 31213                           ;os_timers.c: 100: }
 31214                           ;os_timers.c: 102: return TimeValue;
 31215                           
 31216                           ; BSR set to: 0
 31217  003F1C  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31218  003F20  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31219  003F24  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31220  003F28  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31221  003F2C  0012               	return	
 31222  003F2E                     __end_of_GetElapsedTime:
 31223                           	opt stack 0
 31224                           tosu	equ	0xFFF
 31225                           tosh	equ	0xFFE
 31226                           tosl	equ	0xFFD
 31227                           pclath	equ	0xFFA
 31228                           tblptru	equ	0xFF8
 31229                           tblptrh	equ	0xFF7
 31230                           tblptrl	equ	0xFF6
 31231                           tablat	equ	0xFF5
 31232                           prodh	equ	0xFF4
 31233                           prodl	equ	0xFF3
 31234                           intcon	equ	0xFF2
 31235                           intcon2	equ	0xFF1
 31236                           intcon3	equ	0xFF0
 31237                           indf0	equ	0xFEF
 31238                           postinc0	equ	0xFEE
 31239                           plusw0	equ	0xFEB
 31240                           fsr0h	equ	0xFEA
 31241                           fsr0l	equ	0xFE9
 31242                           wreg	equ	0xFE8
 31243                           indf1	equ	0xFE7
 31244                           postinc1	equ	0xFE6
 31245                           postdec1	equ	0xFE5
 31246                           plusw1	equ	0xFE3
 31247                           fsr1h	equ	0xFE2
 31248                           fsr1l	equ	0xFE1
 31249                           indf2	equ	0xFDF
 31250                           postinc2	equ	0xFDE
 31251                           postdec2	equ	0xFDD
 31252                           plusw2	equ	0xFDB
 31253                           fsr2h	equ	0xFDA
 31254                           fsr2l	equ	0xFD9
 31255                           status	equ	0xFD8
 31256                           
 31257 ;; *************** function _GetOsTickCounter *****************
 31258 ;; Defined at:
 31259 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31260 ;; Parameters:    Size  Location     Type
 31261 ;;		None
 31262 ;; Auto vars:     Size  Location     Type
 31263 ;;		None
 31264 ;; Return value:  Size  Location     Type
 31265 ;;                  4   29[BANK0 ] unsigned long 
 31266 ;; Registers used:
 31267 ;;		None
 31268 ;; Tracked objects:
 31269 ;;		On entry : 0/0
 31270 ;;		On exit  : 0/0
 31271 ;;		Unchanged: 0/0
 31272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31277 ;;Total ram usage:        4 bytes
 31278 ;; Hardware stack levels used:    1
 31279 ;; Hardware stack levels required when called:   11
 31280 ;; This function calls:
 31281 ;;		Nothing
 31282 ;; This function is called by:
 31283 ;;		_GetElapsedTime
 31284 ;;		_OsTmr_StartTimer
 31285 ;;		_OsTmr_GetElapsedTime
 31286 ;; This function uses a non-reentrant model
 31287 ;;
 31288                           
 31289                           	psect	text143
 31290  0066B2                     __ptext143:
 31291                           	opt stack 0
 31292  0066B2                     _GetOsTickCounter:
 31293                           	opt stack 12
 31294                           
 31295                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31296                           
 31297                           ; BSR set to: 0
 31298                           ;incstack = 0
 31299  0066B2  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31300  0066B6  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31301  0066BA  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31302  0066BE  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31303  0066C2  0012               	return		;funcret
 31304  0066C4                     __end_of_GetOsTickCounter:
 31305                           	opt stack 0
 31306                           tosu	equ	0xFFF
 31307                           tosh	equ	0xFFE
 31308                           tosl	equ	0xFFD
 31309                           pclath	equ	0xFFA
 31310                           tblptru	equ	0xFF8
 31311                           tblptrh	equ	0xFF7
 31312                           tblptrl	equ	0xFF6
 31313                           tablat	equ	0xFF5
 31314                           prodh	equ	0xFF4
 31315                           prodl	equ	0xFF3
 31316                           intcon	equ	0xFF2
 31317                           intcon2	equ	0xFF1
 31318                           intcon3	equ	0xFF0
 31319                           indf0	equ	0xFEF
 31320                           postinc0	equ	0xFEE
 31321                           plusw0	equ	0xFEB
 31322                           fsr0h	equ	0xFEA
 31323                           fsr0l	equ	0xFE9
 31324                           wreg	equ	0xFE8
 31325                           indf1	equ	0xFE7
 31326                           postinc1	equ	0xFE6
 31327                           postdec1	equ	0xFE5
 31328                           plusw1	equ	0xFE3
 31329                           fsr1h	equ	0xFE2
 31330                           fsr1l	equ	0xFE1
 31331                           indf2	equ	0xFDF
 31332                           postinc2	equ	0xFDE
 31333                           postdec2	equ	0xFDD
 31334                           plusw2	equ	0xFDB
 31335                           fsr2h	equ	0xFDA
 31336                           fsr2l	equ	0xFD9
 31337                           status	equ	0xFD8
 31338                           
 31339 ;; *************** function _ClearBuffer *****************
 31340 ;; Defined at:
 31341 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31342 ;; Parameters:    Size  Location     Type
 31343 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31344 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31345 ;;		 -> callerNumber(13), RxBuffer(400), 
 31346 ;;  Len             2   31[BANK0 ] unsigned short 
 31347 ;; Auto vars:     Size  Location     Type
 31348 ;;  Index           2   33[BANK0 ] unsigned short 
 31349 ;; Return value:  Size  Location     Type
 31350 ;;                  1    wreg      void 
 31351 ;; Registers used:
 31352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31353 ;; Tracked objects:
 31354 ;;		On entry : 0/0
 31355 ;;		On exit  : 0/0
 31356 ;;		Unchanged: 0/0
 31357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31362 ;;Total ram usage:        6 bytes
 31363 ;; Hardware stack levels used:    1
 31364 ;; Hardware stack levels required when called:   11
 31365 ;; This function calls:
 31366 ;;		Nothing
 31367 ;; This function is called by:
 31368 ;;		_GetSmsSm
 31369 ;;		_GetCallerNumber
 31370 ;;		_InitGprsNetwork
 31371 ;;		_HttpGetMethod
 31372 ;;		_GsmGprsTerminal
 31373 ;; This function uses a non-reentrant model
 31374 ;;
 31375                           
 31376                           	psect	text144
 31377  006064                     __ptext144:
 31378                           	opt stack 0
 31379  006064                     _ClearBuffer:
 31380                           	opt stack 15
 31381                           
 31382                           ;sf.c: 126: UINT16 Index = 0;
 31383                           
 31384                           ;incstack = 0
 31385  006064  0E00               	movlw	0
 31386  006066  0100               	movlb	0	; () banked
 31387  006068  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31388  00606A  0E00               	movlw	0
 31389  00606C  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31390                           
 31391                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 31392  00606E  0E00               	movlw	0
 31393  006070  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31394  006072  0E00               	movlw	0
 31395  006074  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31396  006076  D00A               	goto	l2250
 31397  006078                     
 31398                           ; BSR set to: 0
 31399                           ;sf.c: 130: {
 31400                           ;sf.c: 131: *(Buffer + Index) = 0;
 31401                           
 31402                           ; BSR set to: 0
 31403  006078  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31404  00607A  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 31405  00607C  6ED9               	movwf	fsr2l,c
 31406  00607E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31407  006080  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 31408  006082  6EDA               	movwf	fsr2h,c
 31409  006084  0E00               	movlw	0
 31410  006086  6EDF               	movwf	indf2,c
 31411                           
 31412                           ; BSR set to: 0
 31413  006088  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 31414  00608A  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 31415  00608C                     l2250:
 31416                           
 31417                           ; BSR set to: 0
 31418                           
 31419                           ; BSR set to: 0
 31420  00608C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31421  00608E  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 31422  006090  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31423  006092  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 31424  006094  A0D8               	btfss	status,0,c
 31425  006096  0012               	return	
 31426  006098  D7EF               	goto	l2251
 31427  00609A                     __end_of_ClearBuffer:
 31428                           	opt stack 0
 31429                           tosu	equ	0xFFF
 31430                           tosh	equ	0xFFE
 31431                           tosl	equ	0xFFD
 31432                           pclath	equ	0xFFA
 31433                           tblptru	equ	0xFF8
 31434                           tblptrh	equ	0xFF7
 31435                           tblptrl	equ	0xFF6
 31436                           tablat	equ	0xFF5
 31437                           prodh	equ	0xFF4
 31438                           prodl	equ	0xFF3
 31439                           intcon	equ	0xFF2
 31440                           intcon2	equ	0xFF1
 31441                           intcon3	equ	0xFF0
 31442                           indf0	equ	0xFEF
 31443                           postinc0	equ	0xFEE
 31444                           plusw0	equ	0xFEB
 31445                           fsr0h	equ	0xFEA
 31446                           fsr0l	equ	0xFE9
 31447                           wreg	equ	0xFE8
 31448                           indf1	equ	0xFE7
 31449                           postinc1	equ	0xFE6
 31450                           postdec1	equ	0xFE5
 31451                           plusw1	equ	0xFE3
 31452                           fsr1h	equ	0xFE2
 31453                           fsr1l	equ	0xFE1
 31454                           indf2	equ	0xFDF
 31455                           postinc2	equ	0xFDE
 31456                           postdec2	equ	0xFDD
 31457                           plusw2	equ	0xFDB
 31458                           fsr2h	equ	0xFDA
 31459                           fsr2l	equ	0xFD9
 31460                           status	equ	0xFD8
 31461                           
 31462 ;; *************** function _LedStateMachine *****************
 31463 ;; Defined at:
 31464 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31465 ;; Parameters:    Size  Location     Type
 31466 ;;  Led             1    wreg     unsigned char 
 31467 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 31468 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 31469 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 31470 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 31471 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 31472 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31473 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 31474 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31475 ;; Auto vars:     Size  Location     Type
 31476 ;;  Led             1   57[BANK0 ] unsigned char 
 31477 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 31478 ;; Return value:  Size  Location     Type
 31479 ;;                  1    wreg      unsigned char 
 31480 ;; Registers used:
 31481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31482 ;; Tracked objects:
 31483 ;;		On entry : 0/0
 31484 ;;		On exit  : 0/0
 31485 ;;		Unchanged: 0/0
 31486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31490 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31491 ;;Total ram usage:       11 bytes
 31492 ;; Hardware stack levels used:    1
 31493 ;; Hardware stack levels required when called:   13
 31494 ;; This function calls:
 31495 ;;		_LedBlinkStateMachine
 31496 ;;		_LedPulseStateMachine
 31497 ;;		_Led_SetLedStatus
 31498 ;; This function is called by:
 31499 ;;		_Led_MainTask
 31500 ;; This function uses a non-reentrant model
 31501 ;;
 31502                           
 31503                           	psect	text145
 31504  00459A                     __ptext145:
 31505                           	opt stack 0
 31506  00459A                     _LedStateMachine:
 31507                           	opt stack 14
 31508                           
 31509                           ; BSR set to: 0
 31510                           ;incstack = 0
 31511                           ;LedStateMachine@Led stored from wreg
 31512  00459A  0100               	movlb	0	; () banked
 31513  00459C  6F99               	movwf	LedStateMachine@Led& (0+255),b
 31514                           
 31515                           ;led.c: 238: UINT8 LedOutSts = 0u;
 31516  00459E  0E00               	movlw	0
 31517  0045A0  0100               	movlb	0	; () banked
 31518  0045A2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31519                           
 31520                           ;led.c: 241: switch (*LedSts)
 31521  0045A4  D037               	goto	l2109
 31522  0045A6                     
 31523                           ; BSR set to: 0
 31524                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 31525                           
 31526                           ; BSR set to: 0
 31527  0045A6  0E00               	movlw	0
 31528  0045A8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31529                           
 31530                           ; BSR set to: 0
 31531                           ;led.c: 246: *LedOut = ((UINT8)(0));
 31532  0045AA  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31533  0045AE  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31534  0045B2  0E00               	movlw	0
 31535  0045B4  D007               	goto	L53
 31536  0045B6                     
 31537                           ; BSR set to: 0
 31538                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 31539                           
 31540                           ; BSR set to: 0
 31541  0045B6  0E01               	movlw	1
 31542  0045B8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31543                           
 31544                           ; BSR set to: 0
 31545                           ;led.c: 252: *LedOut = ((UINT8)(1));
 31546  0045BA  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31547  0045BE  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31548  0045C2  0E01               	movlw	1
 31549  0045C4                     L53:
 31550  0045C4  6EDF               	movwf	indf2,c
 31551                           
 31552                           ;led.c: 253: break;
 31553  0045C6  D03A               	goto	l2111
 31554  0045C8                     
 31555                           ; BSR set to: 0
 31556                           ;led.c: 257: if (*LedOut == 1)
 31557                           
 31558                           ; BSR set to: 0
 31559  0045C8  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31560  0045CC  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31561  0045D0  04DE               	decf	postinc2,w,c
 31562  0045D2  A4D8               	btfss	status,2,c
 31563  0045D4  D006               	goto	l2114
 31564                           
 31565                           ; BSR set to: 0
 31566                           ;led.c: 258: {
 31567                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 31568  0045D6  0E00               	movlw	0
 31569  0045D8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31570  0045DA  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31571  0045DC  ECE1  F030         	call	_Led_SetLedStatus
 31572                           
 31573                           ;led.c: 261: }
 31574  0045E0  D02D               	goto	l2111
 31575  0045E2                     l2114:
 31576                           
 31577                           ;led.c: 262: else
 31578                           ;led.c: 263: {
 31579                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 31580  0045E2  0E01               	movlw	1
 31581  0045E4  0100               	movlb	0	; () banked
 31582  0045E6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31583  0045E8  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31584  0045EA  ECE1  F030         	call	_Led_SetLedStatus
 31585                           
 31586                           ;led.c: 266: }
 31587                           ;led.c: 267: break;
 31588  0045EE  D026               	goto	l2111
 31589  0045F0                     
 31590                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 31591  0045F0  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 31592  0045F4  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 31593  0045F8  EC8D  F014         	call	_LedBlinkStateMachine	;wreg free
 31594  0045FC  D008               	goto	L54
 31595  0045FE                     
 31596                           ; BSR set to: 0
 31597                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 31598                           
 31599                           ; BSR set to: 0
 31600  0045FE  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 31601  004602  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 31602  004606  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 31603  00460A  ECBC  F019         	call	_LedPulseStateMachine	;wreg free
 31604  00460E                     L54:
 31605  00460E  0100               	movlb	0	; () banked
 31606  004610  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;led.c: 281: }
 31610                           
 31611                           ; BSR set to: 0
 31612                           ;led.c: 280: break;
 31613                           
 31614                           ;led.c: 279: default:
 31615                           
 31616                           ;led.c: 277: break;
 31617  004612  D014               	goto	l2111
 31618  004614                     l2109:
 31619                           
 31620                           ; BSR set to: 0
 31621                           
 31622                           ; BSR set to: 0
 31623  004614  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 31624  004618  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 31625  00461C  50DF               	movf	indf2,w,c
 31626                           
 31627                           ; Switch size 1, requested type "space"
 31628                           ; Number of cases is 5, Range of values is 0 to 4
 31629                           ; switch strategies available:
 31630                           ; Name         Instructions Cycles
 31631                           ; simple_byte           16     9 (average)
 31632                           ;	Chosen strategy is simple_byte
 31633  00461E  0A00               	xorlw	0	; case 0
 31634  004620  B4D8               	btfsc	status,2,c
 31635  004622  D7C1               	goto	l2110
 31636  004624  0A01               	xorlw	1	; case 1
 31637  004626  B4D8               	btfsc	status,2,c
 31638  004628  D7C6               	goto	l2112
 31639  00462A  0A03               	xorlw	3	; case 2
 31640  00462C  B4D8               	btfsc	status,2,c
 31641  00462E  D7CC               	goto	l2113
 31642  004630  0A01               	xorlw	1	; case 3
 31643  004632  B4D8               	btfsc	status,2,c
 31644  004634  D7DD               	goto	l2116
 31645  004636  0A07               	xorlw	7	; case 4
 31646  004638  B4D8               	btfsc	status,2,c
 31647  00463A  D7E1               	goto	l2117
 31648  00463C                     l2111:
 31649                           
 31650                           ;led.c: 283: return LedOutSts;
 31651                           
 31652                           ; BSR set to: 0
 31653  00463C  0100               	movlb	0	; () banked
 31654  00463E  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 31655  004640  0012               	return	
 31656  004642                     __end_of_LedStateMachine:
 31657                           	opt stack 0
 31658                           tosu	equ	0xFFF
 31659                           tosh	equ	0xFFE
 31660                           tosl	equ	0xFFD
 31661                           pclath	equ	0xFFA
 31662                           tblptru	equ	0xFF8
 31663                           tblptrh	equ	0xFF7
 31664                           tblptrl	equ	0xFF6
 31665                           tablat	equ	0xFF5
 31666                           prodh	equ	0xFF4
 31667                           prodl	equ	0xFF3
 31668                           intcon	equ	0xFF2
 31669                           intcon2	equ	0xFF1
 31670                           intcon3	equ	0xFF0
 31671                           indf0	equ	0xFEF
 31672                           postinc0	equ	0xFEE
 31673                           plusw0	equ	0xFEB
 31674                           fsr0h	equ	0xFEA
 31675                           fsr0l	equ	0xFE9
 31676                           wreg	equ	0xFE8
 31677                           indf1	equ	0xFE7
 31678                           postinc1	equ	0xFE6
 31679                           postdec1	equ	0xFE5
 31680                           plusw1	equ	0xFE3
 31681                           fsr1h	equ	0xFE2
 31682                           fsr1l	equ	0xFE1
 31683                           indf2	equ	0xFDF
 31684                           postinc2	equ	0xFDE
 31685                           postdec2	equ	0xFDD
 31686                           plusw2	equ	0xFDB
 31687                           fsr2h	equ	0xFDA
 31688                           fsr2l	equ	0xFD9
 31689                           status	equ	0xFD8
 31690                           
 31691 ;; *************** function _LedPulseStateMachine *****************
 31692 ;; Defined at:
 31693 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 31696 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31697 ;;  Led             1   44[BANK0 ] unsigned char 
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;		None
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1    wreg      unsigned char 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31704 ;; Tracked objects:
 31705 ;;		On entry : 0/0
 31706 ;;		On exit  : 0/0
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31709 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;Total ram usage:        5 bytes
 31714 ;; Hardware stack levels used:    1
 31715 ;; Hardware stack levels required when called:   12
 31716 ;; This function calls:
 31717 ;;		_Led_SetLedStatus
 31718 ;;		___lwdiv
 31719 ;; This function is called by:
 31720 ;;		_LedStateMachine
 31721 ;; This function uses a non-reentrant model
 31722 ;;
 31723                           
 31724                           	psect	text146
 31725  003378                     __ptext146:
 31726                           	opt stack 0
 31727  003378                     _LedPulseStateMachine:
 31728                           	opt stack 14
 31729                           
 31730                           ;led.c: 185: switch (LedPulse->LedPulseState)
 31731                           
 31732                           ; BSR set to: 0
 31733                           ;incstack = 0
 31734  003378  D05C               	goto	l2099
 31735  00337A                     
 31736                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 31737  00337A  0100               	movlb	0	; () banked
 31738  00337C  EE20 F001          	lfsr	2,1
 31739  003380  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31740  003382  26D9               	addwf	fsr2l,f,c
 31741  003384  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31742  003386  22DA               	addwfc	fsr2h,f,c
 31743  003388  0E01               	movlw	1
 31744  00338A  6EDF               	movwf	indf2,c
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 31748  00338C  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31749  003390  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31750  003394  0E01               	movlw	1
 31751  003396  D036               	goto	L55
 31752  003398                     
 31753                           ;led.c: 196: LedPulse->LedPulseCounter++;
 31754                           
 31755                           ; BSR set to: 0
 31756  003398  0100               	movlb	0	; () banked
 31757  00339A  EE20 F002          	lfsr	2,2
 31758  00339E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31759  0033A0  26D9               	addwf	fsr2l,f,c
 31760  0033A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31761  0033A4  22DA               	addwfc	fsr2h,f,c
 31762  0033A6  2ADE               	incf	postinc2,f,c
 31763  0033A8  0E00               	movlw	0
 31764  0033AA  22DD               	addwfc	postdec2,f,c
 31765                           
 31766                           ; BSR set to: 0
 31767                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 31768  0033AC  EE20 F004          	lfsr	2,4
 31769  0033B0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31770  0033B2  26D9               	addwf	fsr2l,f,c
 31771  0033B4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31772  0033B6  22DA               	addwfc	fsr2h,f,c
 31773  0033B8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 31774  0033BC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 31775  0033C0  0E00               	movlw	0
 31776  0033C2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 31777  0033C4  0E32               	movlw	50
 31778  0033C6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 31779  0033C8  EC36  F02C         	call	___lwdiv	;wreg free
 31780  0033CC  0100               	movlb	0	; () banked
 31781  0033CE  EE20 F002          	lfsr	2,2
 31782  0033D2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31783  0033D4  26D9               	addwf	fsr2l,f,c
 31784  0033D6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31785  0033D8  22DA               	addwfc	fsr2h,f,c
 31786  0033DA  5183               	movf	?___lwdiv& (0+255),w,b
 31787  0033DC  5CDE               	subwf	postinc2,w,c
 31788  0033DE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 31789  0033E0  58DE               	subwfb	postinc2,w,c
 31790  0033E2  A0D8               	btfss	status,0,c
 31791  0033E4  D034               	goto	l2101
 31792                           
 31793                           ; BSR set to: 0
 31794                           ;led.c: 199: {
 31795                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 31796  0033E6  EE20 F002          	lfsr	2,2
 31797  0033EA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31798  0033EC  26D9               	addwf	fsr2l,f,c
 31799  0033EE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31800  0033F0  22DA               	addwfc	fsr2h,f,c
 31801  0033F2  0E00               	movlw	0
 31802  0033F4  6EDE               	movwf	postinc2,c
 31803  0033F6  0E00               	movlw	0
 31804  0033F8  6EDD               	movwf	postdec2,c
 31805                           
 31806                           ; BSR set to: 0
 31807                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 31808  0033FA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31809  0033FE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31810  003402  0E02               	movlw	2
 31811  003404                     L55:
 31812  003404  6EDF               	movwf	indf2,c
 31813                           
 31814                           ; BSR set to: 0
 31815                           ;led.c: 204: }
 31816                           ;led.c: 205: break;
 31817  003406  D023               	goto	l2101
 31818  003408                     
 31819                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 31820                           
 31821                           ; BSR set to: 0
 31822  003408  0100               	movlb	0	; () banked
 31823  00340A  EE20 F001          	lfsr	2,1
 31824  00340E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31825  003410  26D9               	addwf	fsr2l,f,c
 31826  003412  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31827  003414  22DA               	addwfc	fsr2h,f,c
 31828  003416  0E00               	movlw	0
 31829  003418  6EDF               	movwf	indf2,c
 31830                           
 31831                           ; BSR set to: 0
 31832                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 31833  00341A  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31834  00341E  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31835  003422  0E00               	movlw	0
 31836  003424  6EDF               	movwf	indf2,c
 31837                           
 31838                           ; BSR set to: 0
 31839                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 31840  003426  0E00               	movlw	0
 31841  003428  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31842  00342A  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 31843  00342C  ECE1  F030         	call	_Led_SetLedStatus
 31844                           
 31845                           ;led.c: 218: }
 31846                           
 31847                           ;led.c: 217: break;
 31848                           
 31849                           ;led.c: 216: default:
 31850                           
 31851                           ;led.c: 214: break;
 31852  003430  D00E               	goto	l2101
 31853  003432                     l2099:
 31854  003432  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31855  003436  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31856  00343A  50DF               	movf	indf2,w,c
 31857                           
 31858                           ; Switch size 1, requested type "space"
 31859                           ; Number of cases is 3, Range of values is 0 to 2
 31860                           ; switch strategies available:
 31861                           ; Name         Instructions Cycles
 31862                           ; simple_byte           10     6 (average)
 31863                           ;	Chosen strategy is simple_byte
 31864  00343C  0A00               	xorlw	0	; case 0
 31865  00343E  B4D8               	btfsc	status,2,c
 31866  003440  D79C               	goto	l2100
 31867  003442  0A01               	xorlw	1	; case 1
 31868  003444  B4D8               	btfsc	status,2,c
 31869  003446  D7A8               	goto	l2102
 31870  003448  0A03               	xorlw	3	; case 2
 31871  00344A  B4D8               	btfsc	status,2,c
 31872  00344C  D7DD               	goto	l2104
 31873  00344E                     l2101:
 31874                           
 31875                           ;led.c: 221: return (LedPulse->LedOutState);
 31876  00344E  0100               	movlb	0	; () banked
 31877  003450  EE20 F001          	lfsr	2,1
 31878  003454  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31879  003456  26D9               	addwf	fsr2l,f,c
 31880  003458  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31881  00345A  22DA               	addwfc	fsr2h,f,c
 31882  00345C  50DF               	movf	indf2,w,c
 31883  00345E  0012               	return	
 31884  003460                     __end_of_LedPulseStateMachine:
 31885                           	opt stack 0
 31886                           tosu	equ	0xFFF
 31887                           tosh	equ	0xFFE
 31888                           tosl	equ	0xFFD
 31889                           pclath	equ	0xFFA
 31890                           tblptru	equ	0xFF8
 31891                           tblptrh	equ	0xFF7
 31892                           tblptrl	equ	0xFF6
 31893                           tablat	equ	0xFF5
 31894                           prodh	equ	0xFF4
 31895                           prodl	equ	0xFF3
 31896                           intcon	equ	0xFF2
 31897                           intcon2	equ	0xFF1
 31898                           intcon3	equ	0xFF0
 31899                           indf0	equ	0xFEF
 31900                           postinc0	equ	0xFEE
 31901                           plusw0	equ	0xFEB
 31902                           fsr0h	equ	0xFEA
 31903                           fsr0l	equ	0xFE9
 31904                           wreg	equ	0xFE8
 31905                           indf1	equ	0xFE7
 31906                           postinc1	equ	0xFE6
 31907                           postdec1	equ	0xFE5
 31908                           plusw1	equ	0xFE3
 31909                           fsr1h	equ	0xFE2
 31910                           fsr1l	equ	0xFE1
 31911                           indf2	equ	0xFDF
 31912                           postinc2	equ	0xFDE
 31913                           postdec2	equ	0xFDD
 31914                           plusw2	equ	0xFDB
 31915                           fsr2h	equ	0xFDA
 31916                           fsr2l	equ	0xFD9
 31917                           status	equ	0xFD8
 31918                           
 31919 ;; *************** function _Led_SetLedStatus *****************
 31920 ;; Defined at:
 31921 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31922 ;; Parameters:    Size  Location     Type
 31923 ;;  Led             1    wreg     unsigned char 
 31924 ;;  LedSts          1   29[BANK0 ] enum E8950
 31925 ;; Auto vars:     Size  Location     Type
 31926 ;;  Led             1   30[BANK0 ] unsigned char 
 31927 ;; Return value:  Size  Location     Type
 31928 ;;                  1    wreg      void 
 31929 ;; Registers used:
 31930 ;;		wreg, status,2, status,0
 31931 ;; Tracked objects:
 31932 ;;		On entry : 0/0
 31933 ;;		On exit  : 0/0
 31934 ;;		Unchanged: 0/0
 31935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31936 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31940 ;;Total ram usage:        2 bytes
 31941 ;; Hardware stack levels used:    1
 31942 ;; Hardware stack levels required when called:   11
 31943 ;; This function calls:
 31944 ;;		Nothing
 31945 ;; This function is called by:
 31946 ;;		_LedPulseStateMachine
 31947 ;;		_LedStateMachine
 31948 ;;		_MyApp_Task
 31949 ;;		_waitSetupCall
 31950 ;;		_blinkForSeconds
 31951 ;; This function uses a non-reentrant model
 31952 ;;
 31953                           
 31954                           	psect	text147
 31955  0061C2                     __ptext147:
 31956                           	opt stack 0
 31957  0061C2                     _Led_SetLedStatus:
 31958                           	opt stack 15
 31959                           
 31960                           ; BSR set to: 0
 31961                           ;incstack = 0
 31962                           ;Led_SetLedStatus@Led stored from wreg
 31963  0061C2  0100               	movlb	0	; () banked
 31964  0061C4  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 31965                           
 31966                           ;led.c: 341: switch (Led)
 31967  0061C6  D009               	goto	l2130
 31968  0061C8                     l2131:
 31969                           
 31970                           ; BSR set to: 0
 31971                           ;led.c: 344: Led1Sts = LedSts;
 31972  0061C8  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 31973                           
 31974                           ;led.c: 345: break;
 31975  0061CC  0012               	return	
 31976  0061CE                     l2133:
 31977                           
 31978                           ; BSR set to: 0
 31979                           ;led.c: 348: Led2Sts = LedSts;
 31980  0061CE  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 31981                           
 31982                           ;led.c: 349: break;
 31983  0061D2  0012               	return	
 31984  0061D4                     l2134:
 31985                           
 31986                           ; BSR set to: 0
 31987                           ;led.c: 352: Led3Sts = LedSts;
 31988  0061D4  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 31989                           
 31990                           ; BSR set to: 0
 31991                           ;led.c: 357: }
 31992                           
 31993                           ; BSR set to: 0
 31994                           ;led.c: 356: break;
 31995                           
 31996                           ;led.c: 355: default:
 31997                           
 31998                           ;led.c: 353: break;
 31999  0061D8  0012               	return	
 32000  0061DA                     l2130:
 32001                           
 32002                           ; BSR set to: 0
 32003  0061DA  0100               	movlb	0	; () banked
 32004  0061DC  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32005                           
 32006                           ; Switch size 1, requested type "space"
 32007                           ; Number of cases is 3, Range of values is 1 to 3
 32008                           ; switch strategies available:
 32009                           ; Name         Instructions Cycles
 32010                           ; simple_byte           10     6 (average)
 32011                           ;	Chosen strategy is simple_byte
 32012  0061DE  0A01               	xorlw	1	; case 1
 32013  0061E0  B4D8               	btfsc	status,2,c
 32014  0061E2  D7F2               	goto	l2131
 32015  0061E4  0A03               	xorlw	3	; case 2
 32016  0061E6  B4D8               	btfsc	status,2,c
 32017  0061E8  D7F2               	goto	l2133
 32018  0061EA  0A01               	xorlw	1	; case 3
 32019  0061EC  A4D8               	btfss	status,2,c
 32020  0061EE  0012               	return	
 32021  0061F0  D7F1               	goto	l2134
 32022  0061F2                     __end_of_Led_SetLedStatus:
 32023                           	opt stack 0
 32024                           tosu	equ	0xFFF
 32025                           tosh	equ	0xFFE
 32026                           tosl	equ	0xFFD
 32027                           pclath	equ	0xFFA
 32028                           tblptru	equ	0xFF8
 32029                           tblptrh	equ	0xFF7
 32030                           tblptrl	equ	0xFF6
 32031                           tablat	equ	0xFF5
 32032                           prodh	equ	0xFF4
 32033                           prodl	equ	0xFF3
 32034                           intcon	equ	0xFF2
 32035                           intcon2	equ	0xFF1
 32036                           intcon3	equ	0xFF0
 32037                           indf0	equ	0xFEF
 32038                           postinc0	equ	0xFEE
 32039                           plusw0	equ	0xFEB
 32040                           fsr0h	equ	0xFEA
 32041                           fsr0l	equ	0xFE9
 32042                           wreg	equ	0xFE8
 32043                           indf1	equ	0xFE7
 32044                           postinc1	equ	0xFE6
 32045                           postdec1	equ	0xFE5
 32046                           plusw1	equ	0xFE3
 32047                           fsr1h	equ	0xFE2
 32048                           fsr1l	equ	0xFE1
 32049                           indf2	equ	0xFDF
 32050                           postinc2	equ	0xFDE
 32051                           postdec2	equ	0xFDD
 32052                           plusw2	equ	0xFDB
 32053                           fsr2h	equ	0xFDA
 32054                           fsr2l	equ	0xFD9
 32055                           status	equ	0xFD8
 32056                           
 32057 ;; *************** function _LedBlinkStateMachine *****************
 32058 ;; Defined at:
 32059 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32060 ;; Parameters:    Size  Location     Type
 32061 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32062 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32063 ;; Auto vars:     Size  Location     Type
 32064 ;;		None
 32065 ;; Return value:  Size  Location     Type
 32066 ;;                  1    wreg      unsigned char 
 32067 ;; Registers used:
 32068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32069 ;; Tracked objects:
 32070 ;;		On entry : 0/0
 32071 ;;		On exit  : 0/0
 32072 ;;		Unchanged: 0/0
 32073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32076 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32077 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32078 ;;Total ram usage:        4 bytes
 32079 ;; Hardware stack levels used:    1
 32080 ;; Hardware stack levels required when called:   12
 32081 ;; This function calls:
 32082 ;;		___lwdiv
 32083 ;; This function is called by:
 32084 ;;		_LedStateMachine
 32085 ;; This function uses a non-reentrant model
 32086 ;;
 32087                           
 32088                           	psect	text148
 32089  00291A                     __ptext148:
 32090                           	opt stack 0
 32091  00291A                     _LedBlinkStateMachine:
 32092                           	opt stack 14
 32093                           
 32094                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32095                           
 32096                           ; BSR set to: 0
 32097                           ;incstack = 0
 32098  00291A  D08F               	goto	l2086
 32099  00291C                     
 32100                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32101  00291C  0100               	movlb	0	; () banked
 32102  00291E  EE20 F008          	lfsr	2,8
 32103  002922  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32104  002924  26D9               	addwf	fsr2l,f,c
 32105  002926  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32106  002928  22DA               	addwfc	fsr2h,f,c
 32107  00292A  EE10 F001          	lfsr	1,1
 32108  00292E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32109  002930  26E1               	addwf	fsr1l,f,c
 32110  002932  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32111  002934  22E2               	addwfc	fsr1h,f,c
 32112  002936  CFDF FFE7          	movff	indf2,indf1
 32113                           
 32114                           ; BSR set to: 0
 32115                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32116  00293A  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32117  00293E  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32118  002942  D040               	goto	L56
 32119  002944                     
 32120                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32121                           
 32122                           ; BSR set to: 0
 32123  002944  0100               	movlb	0	; () banked
 32124  002946  EE20 F002          	lfsr	2,2
 32125  00294A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32126  00294C  26D9               	addwf	fsr2l,f,c
 32127  00294E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32128  002950  22DA               	addwfc	fsr2h,f,c
 32129  002952  2ADE               	incf	postinc2,f,c
 32130  002954  0E00               	movlw	0
 32131  002956  22DD               	addwfc	postdec2,f,c
 32132                           
 32133                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32134  002958  EE20 F001          	lfsr	2,1
 32135  00295C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32136  00295E  26D9               	addwf	fsr2l,f,c
 32137  002960  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32138  002962  22DA               	addwfc	fsr2h,f,c
 32139  002964  50DF               	movf	indf2,w,c
 32140  002966  A4D8               	btfss	status,2,c
 32141  002968  D02F               	goto	l2090
 32142                           
 32143                           ; BSR set to: 0
 32144                           ;led.c: 142: {
 32145                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32146  00296A  EE20 F006          	lfsr	2,6
 32147  00296E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32148  002970  26D9               	addwf	fsr2l,f,c
 32149  002972  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32150  002974  22DA               	addwfc	fsr2h,f,c
 32151  002976  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32152  00297A  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32153  00297E  0E00               	movlw	0
 32154  002980  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32155  002982  0E32               	movlw	50
 32156  002984  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32157  002986  EC36  F02C         	call	___lwdiv	;wreg free
 32158  00298A  0100               	movlb	0	; () banked
 32159  00298C  EE20 F002          	lfsr	2,2
 32160  002990  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32161  002992  26D9               	addwf	fsr2l,f,c
 32162  002994  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32163  002996  22DA               	addwfc	fsr2h,f,c
 32164  002998  5183               	movf	?___lwdiv& (0+255),w,b
 32165  00299A  5CDE               	subwf	postinc2,w,c
 32166  00299C  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32167  00299E  58DE               	subwfb	postinc2,w,c
 32168  0029A0  A0D8               	btfss	status,0,c
 32169  0029A2  D056               	goto	l2088
 32170                           
 32171                           ; BSR set to: 0
 32172                           ;led.c: 145: {
 32173                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32174  0029A4  EE20 F002          	lfsr	2,2
 32175  0029A8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32176  0029AA  26D9               	addwf	fsr2l,f,c
 32177  0029AC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32178  0029AE  22DA               	addwfc	fsr2h,f,c
 32179  0029B0  0E00               	movlw	0
 32180  0029B2  6EDE               	movwf	postinc2,c
 32181  0029B4  0E00               	movlw	0
 32182  0029B6  6EDD               	movwf	postdec2,c
 32183                           
 32184                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32185  0029B8  EE20 F001          	lfsr	2,1
 32186  0029BC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32187  0029BE  26D9               	addwf	fsr2l,f,c
 32188  0029C0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32189  0029C2  22DA               	addwfc	fsr2h,f,c
 32190  0029C4                     L56:
 32191  0029C4  0E01               	movlw	1
 32192  0029C6  D037               	goto	L57
 32193  0029C8                     l2090:
 32194                           
 32195                           ; BSR set to: 0
 32196                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32197                           
 32198                           ; BSR set to: 0
 32199  0029C8  EE20 F001          	lfsr	2,1
 32200  0029CC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32201  0029CE  26D9               	addwf	fsr2l,f,c
 32202  0029D0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32203  0029D2  22DA               	addwfc	fsr2h,f,c
 32204  0029D4  04DE               	decf	postinc2,w,c
 32205  0029D6  A4D8               	btfss	status,2,c
 32206  0029D8  D03B               	goto	l2088
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;led.c: 153: {
 32210                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32211  0029DA  EE20 F004          	lfsr	2,4
 32212  0029DE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32213  0029E0  26D9               	addwf	fsr2l,f,c
 32214  0029E2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32215  0029E4  22DA               	addwfc	fsr2h,f,c
 32216  0029E6  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32217  0029EA  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32218  0029EE  0E00               	movlw	0
 32219  0029F0  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32220  0029F2  0E32               	movlw	50
 32221  0029F4  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32222  0029F6  EC36  F02C         	call	___lwdiv	;wreg free
 32223  0029FA  0100               	movlb	0	; () banked
 32224  0029FC  EE20 F002          	lfsr	2,2
 32225  002A00  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32226  002A02  26D9               	addwf	fsr2l,f,c
 32227  002A04  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32228  002A06  22DA               	addwfc	fsr2h,f,c
 32229  002A08  5183               	movf	?___lwdiv& (0+255),w,b
 32230  002A0A  5CDE               	subwf	postinc2,w,c
 32231  002A0C  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32232  002A0E  58DE               	subwfb	postinc2,w,c
 32233  002A10  A0D8               	btfss	status,0,c
 32234  002A12  D01E               	goto	l2088
 32235                           
 32236                           ; BSR set to: 0
 32237                           ;led.c: 156: {
 32238                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32239  002A14  EE20 F002          	lfsr	2,2
 32240  002A18  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32241  002A1A  26D9               	addwf	fsr2l,f,c
 32242  002A1C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32243  002A1E  22DA               	addwfc	fsr2h,f,c
 32244  002A20  0E00               	movlw	0
 32245  002A22  6EDE               	movwf	postinc2,c
 32246  002A24  0E00               	movlw	0
 32247  002A26  6EDD               	movwf	postdec2,c
 32248                           
 32249                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32250  002A28  EE20 F001          	lfsr	2,1
 32251  002A2C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32252  002A2E  26D9               	addwf	fsr2l,f,c
 32253  002A30  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32254  002A32  22DA               	addwfc	fsr2h,f,c
 32255  002A34  0E00               	movlw	0
 32256  002A36                     L57:
 32257  002A36  6EDF               	movwf	indf2,c
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;led.c: 167: }
 32261                           
 32262                           ; BSR set to: 0
 32263                           ;led.c: 166: break;
 32264                           
 32265                           ;led.c: 165: default:
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;led.c: 161: }
 32269                           ;led.c: 162: }
 32270                           ;led.c: 163: break;
 32271                           
 32272                           ; BSR set to: 0
 32273                           
 32274                           ; BSR set to: 0
 32275  002A38  D00B               	goto	l2088
 32276  002A3A                     l2086:
 32277                           
 32278                           ; BSR set to: 0
 32279  002A3A  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32280  002A3E  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32281  002A42  50DF               	movf	indf2,w,c
 32282                           
 32283                           ; Switch size 1, requested type "space"
 32284                           ; Number of cases is 2, Range of values is 0 to 1
 32285                           ; switch strategies available:
 32286                           ; Name         Instructions Cycles
 32287                           ; simple_byte            7     4 (average)
 32288                           ;	Chosen strategy is simple_byte
 32289  002A44  0A00               	xorlw	0	; case 0
 32290  002A46  B4D8               	btfsc	status,2,c
 32291  002A48  D769               	goto	l2087
 32292  002A4A  0A01               	xorlw	1	; case 1
 32293  002A4C  B4D8               	btfsc	status,2,c
 32294  002A4E  D77A               	goto	l2089
 32295  002A50                     l2088:
 32296                           
 32297                           ;led.c: 170: return (LedBlink->LedOutState);
 32298  002A50  0100               	movlb	0	; () banked
 32299  002A52  EE20 F001          	lfsr	2,1
 32300  002A56  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32301  002A58  26D9               	addwf	fsr2l,f,c
 32302  002A5A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32303  002A5C  22DA               	addwfc	fsr2h,f,c
 32304  002A5E  50DF               	movf	indf2,w,c
 32305  002A60  0012               	return	
 32306  002A62                     __end_of_LedBlinkStateMachine:
 32307                           	opt stack 0
 32308                           tosu	equ	0xFFF
 32309                           tosh	equ	0xFFE
 32310                           tosl	equ	0xFFD
 32311                           pclath	equ	0xFFA
 32312                           tblptru	equ	0xFF8
 32313                           tblptrh	equ	0xFF7
 32314                           tblptrl	equ	0xFF6
 32315                           tablat	equ	0xFF5
 32316                           prodh	equ	0xFF4
 32317                           prodl	equ	0xFF3
 32318                           intcon	equ	0xFF2
 32319                           intcon2	equ	0xFF1
 32320                           intcon3	equ	0xFF0
 32321                           indf0	equ	0xFEF
 32322                           postinc0	equ	0xFEE
 32323                           plusw0	equ	0xFEB
 32324                           fsr0h	equ	0xFEA
 32325                           fsr0l	equ	0xFE9
 32326                           wreg	equ	0xFE8
 32327                           indf1	equ	0xFE7
 32328                           postinc1	equ	0xFE6
 32329                           postdec1	equ	0xFE5
 32330                           plusw1	equ	0xFE3
 32331                           fsr1h	equ	0xFE2
 32332                           fsr1l	equ	0xFE1
 32333                           indf2	equ	0xFDF
 32334                           postinc2	equ	0xFDE
 32335                           postdec2	equ	0xFDD
 32336                           plusw2	equ	0xFDB
 32337                           fsr2h	equ	0xFDA
 32338                           fsr2l	equ	0xFD9
 32339                           status	equ	0xFD8
 32340                           
 32341 ;; *************** function ___lwdiv *****************
 32342 ;; Defined at:
 32343 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32344 ;; Parameters:    Size  Location     Type
 32345 ;;  dividend        2   35[BANK0 ] unsigned int 
 32346 ;;  divisor         2   37[BANK0 ] unsigned int 
 32347 ;; Auto vars:     Size  Location     Type
 32348 ;;  quotient        2   40[BANK0 ] unsigned int 
 32349 ;;  counter         1   39[BANK0 ] unsigned char 
 32350 ;; Return value:  Size  Location     Type
 32351 ;;                  2   35[BANK0 ] unsigned int 
 32352 ;; Registers used:
 32353 ;;		wreg, status,2, status,0
 32354 ;; Tracked objects:
 32355 ;;		On entry : 0/0
 32356 ;;		On exit  : 0/0
 32357 ;;		Unchanged: 0/0
 32358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32360 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;Total ram usage:        7 bytes
 32364 ;; Hardware stack levels used:    1
 32365 ;; Hardware stack levels required when called:   11
 32366 ;; This function calls:
 32367 ;;		Nothing
 32368 ;; This function is called by:
 32369 ;;		_LedBlinkStateMachine
 32370 ;;		_LedPulseStateMachine
 32371 ;;		_secondsAppTimer
 32372 ;;		_utoa
 32373 ;; This function uses a non-reentrant model
 32374 ;;
 32375                           
 32376                           	psect	text149
 32377  00586C                     __ptext149:
 32378                           	opt stack 0
 32379  00586C                     ___lwdiv:
 32380                           	opt stack 14
 32381                           
 32382                           ; BSR set to: 0
 32383                           ;incstack = 0
 32384  00586C  0E00               	movlw	0
 32385  00586E  0100               	movlb	0	; () banked
 32386  005870  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 32387  005872  0E00               	movlw	0
 32388  005874  6F88               	movwf	___lwdiv@quotient& (0+255),b
 32389                           
 32390                           ; BSR set to: 0
 32391  005876  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32392  005878  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 32393  00587A  B4D8               	btfsc	status,2,c
 32394  00587C  D01C               	goto	l3256
 32395                           
 32396                           ; BSR set to: 0
 32397  00587E  0E01               	movlw	1
 32398  005880  6F87               	movwf	___lwdiv@counter& (0+255),b
 32399  005882  D004               	goto	l3251
 32400  005884                     
 32401                           ; BSR set to: 0
 32402                           
 32403                           ; BSR set to: 0
 32404  005884  90D8               	bcf	status,0,c
 32405  005886  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 32406  005888  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 32407  00588A  2B87               	incf	___lwdiv@counter& (0+255),f,b
 32408  00588C                     l3251:
 32409                           
 32410                           ; BSR set to: 0
 32411                           
 32412                           ; BSR set to: 0
 32413  00588C  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 32414  00588E  D7FA               	goto	l3252
 32415  005890                     u11640:
 32416                           
 32417                           ; BSR set to: 0
 32418                           
 32419                           ; BSR set to: 0
 32420                           
 32421                           ; BSR set to: 0
 32422  005890  90D8               	bcf	status,0,c
 32423  005892  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 32424  005894  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 32425                           
 32426                           ; BSR set to: 0
 32427  005896  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32428  005898  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 32429  00589A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32430  00589C  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 32431  00589E  A0D8               	btfss	status,0,c
 32432  0058A0  D005               	goto	l3255
 32433                           
 32434                           ; BSR set to: 0
 32435  0058A2  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32436  0058A4  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 32437  0058A6  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32438  0058A8  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 32439                           
 32440                           ; BSR set to: 0
 32441  0058AA  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 32442  0058AC                     l3255:
 32443                           
 32444                           ; BSR set to: 0
 32445                           
 32446                           ; BSR set to: 0
 32447  0058AC  90D8               	bcf	status,0,c
 32448  0058AE  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 32449  0058B0  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 32450                           
 32451                           ; BSR set to: 0
 32452  0058B2  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 32453  0058B4  D7ED               	goto	u11640
 32454  0058B6                     l3256:
 32455                           
 32456                           ; BSR set to: 0
 32457                           
 32458                           ; BSR set to: 0
 32459  0058B6  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 32460  0058BA  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32461                           
 32462                           ; BSR set to: 0
 32463  0058BE  0012               	return		;funcret
 32464  0058C0                     __end_of___lwdiv:
 32465                           	opt stack 0
 32466                           tosu	equ	0xFFF
 32467                           tosh	equ	0xFFE
 32468                           tosl	equ	0xFFD
 32469                           pclath	equ	0xFFA
 32470                           tblptru	equ	0xFF8
 32471                           tblptrh	equ	0xFF7
 32472                           tblptrl	equ	0xFF6
 32473                           tablat	equ	0xFF5
 32474                           prodh	equ	0xFF4
 32475                           prodl	equ	0xFF3
 32476                           intcon	equ	0xFF2
 32477                           intcon2	equ	0xFF1
 32478                           intcon3	equ	0xFF0
 32479                           indf0	equ	0xFEF
 32480                           postinc0	equ	0xFEE
 32481                           plusw0	equ	0xFEB
 32482                           fsr0h	equ	0xFEA
 32483                           fsr0l	equ	0xFE9
 32484                           wreg	equ	0xFE8
 32485                           indf1	equ	0xFE7
 32486                           postinc1	equ	0xFE6
 32487                           postdec1	equ	0xFE5
 32488                           plusw1	equ	0xFE3
 32489                           fsr1h	equ	0xFE2
 32490                           fsr1l	equ	0xFE1
 32491                           indf2	equ	0xFDF
 32492                           postinc2	equ	0xFDE
 32493                           postdec2	equ	0xFDD
 32494                           plusw2	equ	0xFDB
 32495                           fsr2h	equ	0xFDA
 32496                           fsr2l	equ	0xFD9
 32497                           status	equ	0xFD8
 32498                           
 32499 ;; *************** function _OsAlrm_SetOsAlarm *****************
 32500 ;; Defined at:
 32501 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32502 ;; Parameters:    Size  Location     Type
 32503 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 32504 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 32505 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 32506 ;;		 -> I2cDummyTx(1), 
 32507 ;; Auto vars:     Size  Location     Type
 32508 ;;		None
 32509 ;; Return value:  Size  Location     Type
 32510 ;;                  1    wreg      void 
 32511 ;; Registers used:
 32512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32513 ;; Tracked objects:
 32514 ;;		On entry : 0/0
 32515 ;;		On exit  : 0/0
 32516 ;;		Unchanged: 0/0
 32517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32518 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32521 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32522 ;;Total ram usage:        8 bytes
 32523 ;; Hardware stack levels used:    1
 32524 ;; Hardware stack levels required when called:   12
 32525 ;; This function calls:
 32526 ;;		___wmul
 32527 ;; This function is called by:
 32528 ;;		_I2cSlv_MainTask
 32529 ;; This function uses a non-reentrant model
 32530 ;;
 32531                           
 32532                           	psect	text150
 32533  003F2E                     __ptext150:
 32534                           	opt stack 0
 32535  003F2E                     _OsAlrm_SetOsAlarm:
 32536                           	opt stack 15
 32537                           
 32538                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 32539                           
 32540                           ; BSR set to: 0
 32541                           ;incstack = 0
 32542  003F2E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32543  003F32  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32544  003F36  0E00               	movlw	0
 32545  003F38  0100               	movlb	0	; () banked
 32546  003F3A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32547  003F3C  0E0B               	movlw	11
 32548  003F3E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32549  003F40  EC67  F031         	call	___wmul	;wreg free
 32550  003F44  0E00               	movlw	low _OsAlarms
 32551  003F46  0100               	movlb	0	; () banked
 32552  003F48  257D               	addwf	?___wmul& (0+255),w,b
 32553  003F4A  6ED9               	movwf	fsr2l,c
 32554  003F4C  0E06               	movlw	high _OsAlarms
 32555  003F4E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32556  003F50  6EDA               	movwf	fsr2h,c
 32557  003F52  0E01               	movlw	1
 32558  003F54  6EDF               	movwf	indf2,c
 32559                           
 32560                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 32561  003F56  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32562  003F5A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32563  003F5E  0E00               	movlw	0
 32564  003F60  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32565  003F62  0E0B               	movlw	11
 32566  003F64  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32567  003F66  EC67  F031         	call	___wmul	;wreg free
 32568  003F6A  0E01               	movlw	1
 32569  003F6C  0100               	movlb	0	; () banked
 32570  003F6E  277D               	addwf	?___wmul& (0+255),f,b
 32571  003F70  0E00               	movlw	0
 32572  003F72  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32573  003F74  0E00               	movlw	low _OsAlarms
 32574  003F76  257D               	addwf	?___wmul& (0+255),w,b
 32575  003F78  6ED9               	movwf	fsr2l,c
 32576  003F7A  0E06               	movlw	high _OsAlarms
 32577  003F7C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32578  003F7E  6EDA               	movwf	fsr2h,c
 32579  003F80  6ADE               	clrf	postinc2,c
 32580  003F82  6ADE               	clrf	postinc2,c
 32581  003F84  6ADE               	clrf	postinc2,c
 32582  003F86  6ADD               	clrf	postdec2,c
 32583                           
 32584                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 32585  003F88  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32586  003F8C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32587  003F90  0E00               	movlw	0
 32588  003F92  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32589  003F94  0E0B               	movlw	11
 32590  003F96  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32591  003F98  EC67  F031         	call	___wmul	;wreg free
 32592  003F9C  0E05               	movlw	5
 32593  003F9E  0100               	movlb	0	; () banked
 32594  003FA0  277D               	addwf	?___wmul& (0+255),f,b
 32595  003FA2  0E00               	movlw	0
 32596  003FA4  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32597  003FA6  0E00               	movlw	low _OsAlarms
 32598  003FA8  257D               	addwf	?___wmul& (0+255),w,b
 32599  003FAA  6ED9               	movwf	fsr2l,c
 32600  003FAC  0E06               	movlw	high _OsAlarms
 32601  003FAE  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32602  003FB0  6EDA               	movwf	fsr2h,c
 32603  003FB2  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 32604  003FB6  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 32605  003FBA  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 32606  003FBE  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 32607                           
 32608                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 32609  003FC2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32610  003FC6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32611  003FCA  0E00               	movlw	0
 32612  003FCC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32613  003FCE  0E0B               	movlw	11
 32614  003FD0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32615  003FD2  EC67  F031         	call	___wmul	;wreg free
 32616  003FD6  0E09               	movlw	9
 32617  003FD8  0100               	movlb	0	; () banked
 32618  003FDA  277D               	addwf	?___wmul& (0+255),f,b
 32619  003FDC  0E00               	movlw	0
 32620  003FDE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32621  003FE0  0E00               	movlw	low _OsAlarms
 32622  003FE2  257D               	addwf	?___wmul& (0+255),w,b
 32623  003FE4  6ED9               	movwf	fsr2l,c
 32624  003FE6  0E06               	movlw	high _OsAlarms
 32625  003FE8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32626  003FEA  6EDA               	movwf	fsr2h,c
 32627  003FEC  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 32628  003FF0  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 32629                           
 32630                           ; BSR set to: 0
 32631  003FF4  0012               	return		;funcret
 32632  003FF6                     __end_of_OsAlrm_SetOsAlarm:
 32633                           	opt stack 0
 32634                           tosu	equ	0xFFF
 32635                           tosh	equ	0xFFE
 32636                           tosl	equ	0xFFD
 32637                           pclath	equ	0xFFA
 32638                           tblptru	equ	0xFF8
 32639                           tblptrh	equ	0xFF7
 32640                           tblptrl	equ	0xFF6
 32641                           tablat	equ	0xFF5
 32642                           prodh	equ	0xFF4
 32643                           prodl	equ	0xFF3
 32644                           intcon	equ	0xFF2
 32645                           intcon2	equ	0xFF1
 32646                           intcon3	equ	0xFF0
 32647                           indf0	equ	0xFEF
 32648                           postinc0	equ	0xFEE
 32649                           plusw0	equ	0xFEB
 32650                           fsr0h	equ	0xFEA
 32651                           fsr0l	equ	0xFE9
 32652                           wreg	equ	0xFE8
 32653                           indf1	equ	0xFE7
 32654                           postinc1	equ	0xFE6
 32655                           postdec1	equ	0xFE5
 32656                           plusw1	equ	0xFE3
 32657                           fsr1h	equ	0xFE2
 32658                           fsr1l	equ	0xFE1
 32659                           indf2	equ	0xFDF
 32660                           postinc2	equ	0xFDE
 32661                           postdec2	equ	0xFDD
 32662                           plusw2	equ	0xFDB
 32663                           fsr2h	equ	0xFDA
 32664                           fsr2l	equ	0xFD9
 32665                           status	equ	0xFD8
 32666                           
 32667 ;; *************** function ___wmul *****************
 32668 ;; Defined at:
 32669 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32670 ;; Parameters:    Size  Location     Type
 32671 ;;  multiplier      2   29[BANK0 ] unsigned int 
 32672 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 32673 ;; Auto vars:     Size  Location     Type
 32674 ;;  product         2   33[BANK0 ] unsigned int 
 32675 ;; Return value:  Size  Location     Type
 32676 ;;                  2   29[BANK0 ] unsigned int 
 32677 ;; Registers used:
 32678 ;;		wreg, status,2, status,0, prodl, prodh
 32679 ;; Tracked objects:
 32680 ;;		On entry : 0/0
 32681 ;;		On exit  : 0/0
 32682 ;;		Unchanged: 0/0
 32683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32685 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;Total ram usage:        6 bytes
 32689 ;; Hardware stack levels used:    1
 32690 ;; Hardware stack levels required when called:   11
 32691 ;; This function calls:
 32692 ;;		Nothing
 32693 ;; This function is called by:
 32694 ;;		_OsAlrm_SetOsAlarm
 32695 ;;		_secondsAppTimer
 32696 ;;		_atoi
 32697 ;; This function uses a non-reentrant model
 32698 ;;
 32699                           
 32700                           	psect	text151
 32701  0062CE                     __ptext151:
 32702                           	opt stack 0
 32703  0062CE                     ___wmul:
 32704                           	opt stack 13
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;incstack = 0
 32708  0062CE  0100               	movlb	0	; () banked
 32709  0062D0  517D               	movf	___wmul@multiplier& (0+255),w,b
 32710  0062D2  037F               	mulwf	___wmul@multiplicand& (0+255),b
 32711  0062D4  CFF3 F081          	movff	prodl,___wmul@product
 32712  0062D8  CFF4 F082          	movff	prodh,___wmul@product+1
 32713  0062DC  517D               	movf	___wmul@multiplier& (0+255),w,b
 32714  0062DE  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 32715  0062E0  50F3               	movf	prodl,w,c
 32716  0062E2  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 32717  0062E4  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 32718  0062E6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 32719  0062E8  50F3               	movf	prodl,w,c
 32720  0062EA  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 32721                           
 32722                           ; BSR set to: 0
 32723  0062EC  C081  F07D         	movff	___wmul@product,?___wmul
 32724  0062F0  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 32725  0062F4  0012               	return	
 32726  0062F6                     __end_of___wmul:
 32727                           	opt stack 0
 32728                           tosu	equ	0xFFF
 32729                           tosh	equ	0xFFE
 32730                           tosl	equ	0xFFD
 32731                           pclath	equ	0xFFA
 32732                           tblptru	equ	0xFF8
 32733                           tblptrh	equ	0xFF7
 32734                           tblptrl	equ	0xFF6
 32735                           tablat	equ	0xFF5
 32736                           prodh	equ	0xFF4
 32737                           prodl	equ	0xFF3
 32738                           intcon	equ	0xFF2
 32739                           intcon2	equ	0xFF1
 32740                           intcon3	equ	0xFF0
 32741                           indf0	equ	0xFEF
 32742                           postinc0	equ	0xFEE
 32743                           plusw0	equ	0xFEB
 32744                           fsr0h	equ	0xFEA
 32745                           fsr0l	equ	0xFE9
 32746                           wreg	equ	0xFE8
 32747                           indf1	equ	0xFE7
 32748                           postinc1	equ	0xFE6
 32749                           postdec1	equ	0xFE5
 32750                           plusw1	equ	0xFE3
 32751                           fsr1h	equ	0xFE2
 32752                           fsr1l	equ	0xFE1
 32753                           indf2	equ	0xFDF
 32754                           postinc2	equ	0xFDE
 32755                           postdec2	equ	0xFDD
 32756                           plusw2	equ	0xFDB
 32757                           fsr2h	equ	0xFDA
 32758                           fsr2l	equ	0xFD9
 32759                           status	equ	0xFD8
 32760                           
 32761 ;; *************** function _I2c_InitI2cModule *****************
 32762 ;; Defined at:
 32763 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32764 ;; Parameters:    Size  Location     Type
 32765 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 32766 ;;		 -> I2cConfig(10), 
 32767 ;; Auto vars:     Size  Location     Type
 32768 ;;		None
 32769 ;; Return value:  Size  Location     Type
 32770 ;;                  1    wreg      void 
 32771 ;; Registers used:
 32772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32773 ;; Tracked objects:
 32774 ;;		On entry : 0/0
 32775 ;;		On exit  : 0/0
 32776 ;;		Unchanged: 0/0
 32777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32782 ;;Total ram usage:        4 bytes
 32783 ;; Hardware stack levels used:    1
 32784 ;; Hardware stack levels required when called:   13
 32785 ;; This function calls:
 32786 ;;		_SetBaudRate
 32787 ;; This function is called by:
 32788 ;;		_I2cSlv_MainTask
 32789 ;; This function uses a non-reentrant model
 32790 ;;
 32791                           
 32792                           	psect	text152
 32793  00515E                     __ptext152:
 32794                           	opt stack 0
 32795  00515E                     _I2c_InitI2cModule:
 32796                           	opt stack 14
 32797                           
 32798                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 32799                           
 32800                           ; BSR set to: 0
 32801                           ;incstack = 0
 32802  00515E  8295               	bsf	3989,1,c	;volatile
 32803                           
 32804                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 32805  005160  8095               	bsf	3989,0,c	;volatile
 32806                           
 32807                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 32808  005162  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 32809  005166  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 32810  00516A  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 32811  00516E  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 32812  005172  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 32813  005176  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 32814  00517A  0100               	movlb	0	; () banked
 32815  00517C  EE20 F004          	lfsr	2,4
 32816  005180  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32817  005182  26D9               	addwf	fsr2l,f,c
 32818  005184  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32819  005186  22DA               	addwfc	fsr2h,f,c
 32820  005188  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 32821  00518C  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 32822  005190  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 32823  005194  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 32824  005198  EC78  F02D         	call	_SetBaudRate	;wreg free
 32825                           
 32826                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 32827  00519C  0100               	movlb	0	; () banked
 32828  00519E  EE20 F008          	lfsr	2,8
 32829  0051A2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32830  0051A4  26D9               	addwf	fsr2l,f,c
 32831  0051A6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32832  0051A8  22DA               	addwfc	fsr2h,f,c
 32833  0051AA  50DF               	movf	indf2,w,c
 32834  0051AC  1272               	iorwf	3954,f,c	;volatile
 32835                           
 32836                           ; BSR set to: 0
 32837                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 32838  0051AE  EE20 F009          	lfsr	2,9
 32839  0051B2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32840  0051B4  26D9               	addwf	fsr2l,f,c
 32841  0051B6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32842  0051B8  22DA               	addwfc	fsr2h,f,c
 32843  0051BA  50DF               	movf	indf2,w,c
 32844  0051BC  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 32845  0051BE  0E05               	movlw	5
 32846  0051C0  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 32847  0051C2                     u13995:
 32848  0051C2  90D8               	bcf	status,0,c
 32849  0051C4  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 32850  0051C6  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 32851  0051C8  D7FC               	goto	u13995
 32852  0051CA  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 32853  0051CC  1272               	iorwf	3954,f,c	;volatile
 32854                           
 32855                           ; BSR set to: 0
 32856  0051CE  0012               	return		;funcret
 32857  0051D0                     __end_of_I2c_InitI2cModule:
 32858                           	opt stack 0
 32859                           tosu	equ	0xFFF
 32860                           tosh	equ	0xFFE
 32861                           tosl	equ	0xFFD
 32862                           pclath	equ	0xFFA
 32863                           tblptru	equ	0xFF8
 32864                           tblptrh	equ	0xFF7
 32865                           tblptrl	equ	0xFF6
 32866                           tablat	equ	0xFF5
 32867                           prodh	equ	0xFF4
 32868                           prodl	equ	0xFF3
 32869                           intcon	equ	0xFF2
 32870                           intcon2	equ	0xFF1
 32871                           intcon3	equ	0xFF0
 32872                           indf0	equ	0xFEF
 32873                           postinc0	equ	0xFEE
 32874                           plusw0	equ	0xFEB
 32875                           fsr0h	equ	0xFEA
 32876                           fsr0l	equ	0xFE9
 32877                           wreg	equ	0xFE8
 32878                           indf1	equ	0xFE7
 32879                           postinc1	equ	0xFE6
 32880                           postdec1	equ	0xFE5
 32881                           plusw1	equ	0xFE3
 32882                           fsr1h	equ	0xFE2
 32883                           fsr1l	equ	0xFE1
 32884                           indf2	equ	0xFDF
 32885                           postinc2	equ	0xFDE
 32886                           postdec2	equ	0xFDD
 32887                           plusw2	equ	0xFDB
 32888                           fsr2h	equ	0xFDA
 32889                           fsr2l	equ	0xFD9
 32890                           status	equ	0xFD8
 32891                           
 32892 ;; *************** function _SetBaudRate *****************
 32893 ;; Defined at:
 32894 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32895 ;; Parameters:    Size  Location     Type
 32896 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 32897 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 32898 ;; Auto vars:     Size  Location     Type
 32899 ;;		None
 32900 ;; Return value:  Size  Location     Type
 32901 ;;                  1    wreg      void 
 32902 ;; Registers used:
 32903 ;;		wreg, status,2, status,0, cstack
 32904 ;; Tracked objects:
 32905 ;;		On entry : 0/0
 32906 ;;		On exit  : 0/0
 32907 ;;		Unchanged: 0/0
 32908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32911 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32912 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32913 ;;Total ram usage:       12 bytes
 32914 ;; Hardware stack levels used:    1
 32915 ;; Hardware stack levels required when called:   12
 32916 ;; This function calls:
 32917 ;;		___lldiv
 32918 ;; This function is called by:
 32919 ;;		_I2c_InitI2cModule
 32920 ;; This function uses a non-reentrant model
 32921 ;;
 32922                           
 32923                           	psect	text153
 32924  005AF0                     __ptext153:
 32925                           	opt stack 0
 32926  005AF0                     _SetBaudRate:
 32927                           	opt stack 14
 32928                           
 32929                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 32930                           
 32931                           ; BSR set to: 0
 32932                           ;incstack = 0
 32933  005AF0  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 32934  005AF4  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 32935  005AF8  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 32936  005AFC  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 32937  005B00  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 32938  005B04  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 32939  005B08  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 32940  005B0C  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 32941  005B10  0E02               	movlw	2
 32942  005B12                     u12905:
 32943  005B12  90D8               	bcf	status,0,c
 32944  005B14  0100               	movlb	0	; () banked
 32945  005B16  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 32946  005B18  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 32947  005B1A  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 32948  005B1C  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 32949  005B1E  2EE8               	decfsz	wreg,f,c
 32950  005B20  D7F8               	goto	u12905
 32951  005B22  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 32952  005B26  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 32953  005B2A  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 32954  005B2E  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 32955  005B32  ECB9  F027         	call	___lldiv	;wreg free
 32956  005B36  0100               	movlb	0	; () banked
 32957  005B38  0589               	decf	?___lldiv& (0+255),w,b
 32958  005B3A  6E74               	movwf	3956,c	;volatile
 32959                           
 32960                           ; BSR set to: 0
 32961  005B3C  0012               	return		;funcret
 32962  005B3E                     __end_of_SetBaudRate:
 32963                           	opt stack 0
 32964                           tosu	equ	0xFFF
 32965                           tosh	equ	0xFFE
 32966                           tosl	equ	0xFFD
 32967                           pclath	equ	0xFFA
 32968                           tblptru	equ	0xFF8
 32969                           tblptrh	equ	0xFF7
 32970                           tblptrl	equ	0xFF6
 32971                           tablat	equ	0xFF5
 32972                           prodh	equ	0xFF4
 32973                           prodl	equ	0xFF3
 32974                           intcon	equ	0xFF2
 32975                           intcon2	equ	0xFF1
 32976                           intcon3	equ	0xFF0
 32977                           indf0	equ	0xFEF
 32978                           postinc0	equ	0xFEE
 32979                           plusw0	equ	0xFEB
 32980                           fsr0h	equ	0xFEA
 32981                           fsr0l	equ	0xFE9
 32982                           wreg	equ	0xFE8
 32983                           indf1	equ	0xFE7
 32984                           postinc1	equ	0xFE6
 32985                           postdec1	equ	0xFE5
 32986                           plusw1	equ	0xFE3
 32987                           fsr1h	equ	0xFE2
 32988                           fsr1l	equ	0xFE1
 32989                           indf2	equ	0xFDF
 32990                           postinc2	equ	0xFDE
 32991                           postdec2	equ	0xFDD
 32992                           plusw2	equ	0xFDB
 32993                           fsr2h	equ	0xFDA
 32994                           fsr2l	equ	0xFD9
 32995                           status	equ	0xFD8
 32996                           
 32997 ;; *************** function ___lldiv *****************
 32998 ;; Defined at:
 32999 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33000 ;; Parameters:    Size  Location     Type
 33001 ;;  dividend        4   41[BANK0 ] unsigned long 
 33002 ;;  divisor         4   45[BANK0 ] unsigned long 
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;  quotient        4   49[BANK0 ] unsigned long 
 33005 ;;  counter         1   53[BANK0 ] unsigned char 
 33006 ;; Return value:  Size  Location     Type
 33007 ;;                  4   41[BANK0 ] unsigned long 
 33008 ;; Registers used:
 33009 ;;		wreg, status,2, status,0
 33010 ;; Tracked objects:
 33011 ;;		On entry : 0/0
 33012 ;;		On exit  : 0/0
 33013 ;;		Unchanged: 0/0
 33014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33015 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33016 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33018 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33019 ;;Total ram usage:       13 bytes
 33020 ;; Hardware stack levels used:    1
 33021 ;; Hardware stack levels required when called:   11
 33022 ;; This function calls:
 33023 ;;		Nothing
 33024 ;; This function is called by:
 33025 ;;		_SetBaudRate
 33026 ;;		_Tmr_TmrBPrSet
 33027 ;;		_SetUartBaudRate
 33028 ;; This function uses a non-reentrant model
 33029 ;;
 33030                           
 33031                           	psect	text154
 33032  004F72                     __ptext154:
 33033                           	opt stack 0
 33034  004F72                     ___lldiv:
 33035                           	opt stack 15
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;incstack = 0
 33039  004F72  0E00               	movlw	0
 33040  004F74  0100               	movlb	0	; () banked
 33041  004F76  6F91               	movwf	___lldiv@quotient& (0+255),b
 33042  004F78  0E00               	movlw	0
 33043  004F7A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33044  004F7C  0E00               	movlw	0
 33045  004F7E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33046  004F80  0E00               	movlw	0
 33047  004F82  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33048                           
 33049                           ; BSR set to: 0
 33050  004F84  518D               	movf	___lldiv@divisor& (0+255),w,b
 33051  004F86  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33052  004F88  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33053  004F8A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33054  004F8C  B4D8               	btfsc	status,2,c
 33055  004F8E  D02A               	goto	l3203
 33056                           
 33057                           ; BSR set to: 0
 33058  004F90  0E01               	movlw	1
 33059  004F92  6F95               	movwf	___lldiv@counter& (0+255),b
 33060  004F94  D006               	goto	l3198
 33061  004F96                     
 33062                           ; BSR set to: 0
 33063                           
 33064                           ; BSR set to: 0
 33065  004F96  90D8               	bcf	status,0,c
 33066  004F98  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33067  004F9A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33068  004F9C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33069  004F9E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33070  004FA0  2B95               	incf	___lldiv@counter& (0+255),f,b
 33071  004FA2                     l3198:
 33072                           
 33073                           ; BSR set to: 0
 33074                           
 33075                           ; BSR set to: 0
 33076  004FA2  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33077  004FA4  D7F8               	goto	l3199
 33078  004FA6                     u11970:
 33079                           
 33080                           ; BSR set to: 0
 33081                           
 33082                           ; BSR set to: 0
 33083                           
 33084                           ; BSR set to: 0
 33085  004FA6  90D8               	bcf	status,0,c
 33086  004FA8  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33087  004FAA  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33088  004FAC  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33089  004FAE  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33090                           
 33091                           ; BSR set to: 0
 33092  004FB0  518D               	movf	___lldiv@divisor& (0+255),w,b
 33093  004FB2  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33094  004FB4  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33095  004FB6  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33096  004FB8  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33097  004FBA  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33098  004FBC  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33099  004FBE  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33100  004FC0  A0D8               	btfss	status,0,c
 33101  004FC2  D009               	goto	l3202
 33102                           
 33103                           ; BSR set to: 0
 33104  004FC4  518D               	movf	___lldiv@divisor& (0+255),w,b
 33105  004FC6  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33106  004FC8  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33107  004FCA  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33108  004FCC  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33109  004FCE  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33110  004FD0  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33111  004FD2  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33112                           
 33113                           ; BSR set to: 0
 33114  004FD4  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33115  004FD6                     l3202:
 33116                           
 33117                           ; BSR set to: 0
 33118                           
 33119                           ; BSR set to: 0
 33120  004FD6  90D8               	bcf	status,0,c
 33121  004FD8  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33122  004FDA  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33123  004FDC  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33124  004FDE  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33125                           
 33126                           ; BSR set to: 0
 33127  004FE0  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33128  004FE2  D7E1               	goto	u11970
 33129  004FE4                     l3203:
 33130                           
 33131                           ; BSR set to: 0
 33132                           
 33133                           ; BSR set to: 0
 33134  004FE4  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33135  004FE8  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33136  004FEC  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33137  004FF0  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33138                           
 33139                           ; BSR set to: 0
 33140  004FF4  0012               	return		;funcret
 33141  004FF6                     __end_of___lldiv:
 33142                           	opt stack 0
 33143                           tosu	equ	0xFFF
 33144                           tosh	equ	0xFFE
 33145                           tosl	equ	0xFFD
 33146                           pclath	equ	0xFFA
 33147                           tblptru	equ	0xFF8
 33148                           tblptrh	equ	0xFF7
 33149                           tblptrl	equ	0xFF6
 33150                           tablat	equ	0xFF5
 33151                           prodh	equ	0xFF4
 33152                           prodl	equ	0xFF3
 33153                           intcon	equ	0xFF2
 33154                           intcon2	equ	0xFF1
 33155                           intcon3	equ	0xFF0
 33156                           indf0	equ	0xFEF
 33157                           postinc0	equ	0xFEE
 33158                           plusw0	equ	0xFEB
 33159                           fsr0h	equ	0xFEA
 33160                           fsr0l	equ	0xFE9
 33161                           wreg	equ	0xFE8
 33162                           indf1	equ	0xFE7
 33163                           postinc1	equ	0xFE6
 33164                           postdec1	equ	0xFE5
 33165                           plusw1	equ	0xFE3
 33166                           fsr1h	equ	0xFE2
 33167                           fsr1l	equ	0xFE1
 33168                           indf2	equ	0xFDF
 33169                           postinc2	equ	0xFDE
 33170                           postdec2	equ	0xFDD
 33171                           plusw2	equ	0xFDB
 33172                           fsr2h	equ	0xFDA
 33173                           fsr2l	equ	0xFD9
 33174                           status	equ	0xFD8
 33175                           
 33176 ;; *************** function _I2cSetConfig *****************
 33177 ;; Defined at:
 33178 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33179 ;; Parameters:    Size  Location     Type
 33180 ;;		None
 33181 ;; Auto vars:     Size  Location     Type
 33182 ;;		None
 33183 ;; Return value:  Size  Location     Type
 33184 ;;                  1    wreg      void 
 33185 ;; Registers used:
 33186 ;;		wreg, status,2
 33187 ;; Tracked objects:
 33188 ;;		On entry : 0/0
 33189 ;;		On exit  : 0/0
 33190 ;;		Unchanged: 0/0
 33191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33196 ;;Total ram usage:        0 bytes
 33197 ;; Hardware stack levels used:    1
 33198 ;; Hardware stack levels required when called:   11
 33199 ;; This function calls:
 33200 ;;		Nothing
 33201 ;; This function is called by:
 33202 ;;		_I2cSlv_MainTask
 33203 ;; This function uses a non-reentrant model
 33204 ;;
 33205                           
 33206                           	psect	text155
 33207  00624E                     __ptext155:
 33208                           	opt stack 0
 33209  00624E                     _I2cSetConfig:
 33210                           	opt stack 16
 33211                           
 33212                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33213                           
 33214                           ; BSR set to: 0
 33215                           ;incstack = 0
 33216  00624E  0E80               	movlw	128
 33217  006250  0103               	movlb	3	; () banked
 33218  006252  6F48               	movwf	_I2cConfig& (0+255),b
 33219  006254  0E1A               	movlw	26
 33220  006256  6F49               	movwf	(_I2cConfig+1)& (0+255),b
 33221  006258  0E06               	movlw	6
 33222  00625A  6F4A               	movwf	(_I2cConfig+2)& (0+255),b
 33223  00625C  0E00               	movlw	0
 33224  00625E  6F4B               	movwf	(_I2cConfig+3)& (0+255),b
 33225                           
 33226                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33227  006260  0E00               	movlw	0
 33228  006262  6F4C               	movwf	(_I2cConfig+4)& (0+255),b
 33229  006264  0E6C               	movlw	108
 33230  006266  6F4D               	movwf	(_I2cConfig+5)& (0+255),b
 33231  006268  0EDC               	movlw	220
 33232  00626A  6F4E               	movwf	(_I2cConfig+6)& (0+255),b
 33233  00626C  0E02               	movlw	2
 33234  00626E  6F4F               	movwf	(_I2cConfig+7)& (0+255),b
 33235                           
 33236                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33237  006270  0E08               	movlw	8
 33238  006272  6F50               	movwf	(_I2cConfig+8)& (0+255),b
 33239                           
 33240                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33241  006274  0E01               	movlw	1
 33242  006276  6F51               	movwf	(_I2cConfig+9)& (0+255),b
 33243                           
 33244                           ; BSR set to: 3
 33245  006278  0012               	return		;funcret
 33246  00627A                     __end_of_I2cSetConfig:
 33247                           	opt stack 0
 33248                           tosu	equ	0xFFF
 33249                           tosh	equ	0xFFE
 33250                           tosl	equ	0xFFD
 33251                           pclath	equ	0xFFA
 33252                           tblptru	equ	0xFF8
 33253                           tblptrh	equ	0xFF7
 33254                           tblptrl	equ	0xFF6
 33255                           tablat	equ	0xFF5
 33256                           prodh	equ	0xFF4
 33257                           prodl	equ	0xFF3
 33258                           intcon	equ	0xFF2
 33259                           intcon2	equ	0xFF1
 33260                           intcon3	equ	0xFF0
 33261                           indf0	equ	0xFEF
 33262                           postinc0	equ	0xFEE
 33263                           plusw0	equ	0xFEB
 33264                           fsr0h	equ	0xFEA
 33265                           fsr0l	equ	0xFE9
 33266                           wreg	equ	0xFE8
 33267                           indf1	equ	0xFE7
 33268                           postinc1	equ	0xFE6
 33269                           postdec1	equ	0xFE5
 33270                           plusw1	equ	0xFE3
 33271                           fsr1h	equ	0xFE2
 33272                           fsr1l	equ	0xFE1
 33273                           indf2	equ	0xFDF
 33274                           postinc2	equ	0xFDE
 33275                           postdec2	equ	0xFDD
 33276                           plusw2	equ	0xFDB
 33277                           fsr2h	equ	0xFDA
 33278                           fsr2l	equ	0xFD9
 33279                           status	equ	0xFD8
 33280                           
 33281 ;; *************** function _I2cSendMsgSm *****************
 33282 ;; Defined at:
 33283 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33284 ;; Parameters:    Size  Location     Type
 33285 ;;		None
 33286 ;; Auto vars:     Size  Location     Type
 33287 ;;		None
 33288 ;; Return value:  Size  Location     Type
 33289 ;;                  1    wreg      void 
 33290 ;; Registers used:
 33291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33292 ;; Tracked objects:
 33293 ;;		On entry : 0/0
 33294 ;;		On exit  : 0/0
 33295 ;;		Unchanged: 0/0
 33296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33301 ;;Total ram usage:        0 bytes
 33302 ;; Hardware stack levels used:    1
 33303 ;; Hardware stack levels required when called:   13
 33304 ;; This function calls:
 33305 ;;		_I2c_ReadData
 33306 ;;		_I2c_WriteData
 33307 ;;		_ReceiveEvt
 33308 ;; This function is called by:
 33309 ;;		_I2cSlv_MainTask
 33310 ;; This function uses a non-reentrant model
 33311 ;;
 33312                           
 33313                           	psect	text156
 33314  003FF6                     __ptext156:
 33315                           	opt stack 0
 33316  003FF6                     _I2cSendMsgSm:
 33317                           	opt stack 14
 33318                           
 33319                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33320                           ;i2c_slv.c: 122: switch(I2cComState)
 33321                           
 33322                           ; BSR set to: 3
 33323                           ;incstack = 0
 33324  003FF6  D04F               	goto	l1379
 33325  003FF8                     
 33326                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33327  003FF8  0ED8               	movlw	low _I2cWriteDataEvt
 33328  003FFA  0100               	movlb	0	; () banked
 33329  003FFC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33330  003FFE  0E00               	movlw	high _I2cWriteDataEvt
 33331  004000  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33332  004002  EC10  F031         	call	_ReceiveEvt	;wreg free
 33333  004006  0900               	iorlw	0
 33334  004008  B4D8               	btfsc	status,2,c
 33335  00400A  D007               	goto	l1381
 33336                           
 33337                           ;i2c_slv.c: 127: {
 33338                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33339  00400C  0E01               	movlw	1
 33340  00400E  0101               	movlb	1	; () banked
 33341  004010  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33342                           
 33343                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33344  004012  0E01               	movlw	1
 33345  004014  0100               	movlb	0	; () banked
 33346  004016  6FCE               	movwf	_I2cComSts& (0+255),b
 33347                           
 33348                           ;i2c_slv.c: 132: }
 33349  004018  0012               	return	
 33350  00401A                     l1381:
 33351                           
 33352                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33353                           
 33354                           ; BSR set to: 0
 33355  00401A  0ED7               	movlw	low _I2cReadDataEvt
 33356  00401C  0100               	movlb	0	; () banked
 33357  00401E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33358  004020  0E00               	movlw	high _I2cReadDataEvt
 33359  004022  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33360  004024  EC10  F031         	call	_ReceiveEvt	;wreg free
 33361  004028  0900               	iorlw	0
 33362  00402A  B4D8               	btfsc	status,2,c
 33363  00402C  D007               	goto	l1383
 33364                           
 33365                           ;i2c_slv.c: 134: {
 33366                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33367  00402E  0E02               	movlw	2
 33368  004030  0101               	movlb	1	; () banked
 33369  004032  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33370                           
 33371                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33372  004034  0E02               	movlw	2
 33373  004036  0100               	movlb	0	; () banked
 33374  004038  6FCE               	movwf	_I2cComSts& (0+255),b
 33375                           
 33376                           ;i2c_slv.c: 139: }
 33377  00403A  0012               	return	
 33378  00403C                     l1383:
 33379                           
 33380                           ;i2c_slv.c: 140: else
 33381                           ;i2c_slv.c: 141: {
 33382                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33383                           
 33384                           ; BSR set to: 0
 33385  00403C  0E00               	movlw	0
 33386  00403E  0100               	movlb	0	; () banked
 33387  004040  6FCE               	movwf	_I2cComSts& (0+255),b
 33388                           
 33389                           ; BSR set to: 0
 33390                           ;i2c_slv.c: 144: }
 33391                           ;i2c_slv.c: 145: break;
 33392                           
 33393                           ; BSR set to: 0
 33394  004042  0012               	return	
 33395  004044                     
 33396                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 33397                           
 33398                           ; BSR set to: 0
 33399  004044  0E99               	movlw	low _I2cTxPacket
 33400  004046  0100               	movlb	0	; () banked
 33401  004048  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 33402  00404A  0E03               	movlw	high _I2cTxPacket
 33403  00404C  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 33404  00404E  EC80  F010         	call	_I2c_WriteData	;wreg free
 33405  004052  0900               	iorlw	0
 33406  004054  B4D8               	btfsc	status,2,c
 33407  004056  0012               	return	
 33408                           
 33409                           ;i2c_slv.c: 150: {
 33410                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 33411  004058  0E03               	movlw	3
 33412  00405A  0101               	movlb	1	; () banked
 33413  00405C  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33414                           
 33415                           ; BSR set to: 1
 33416                           ;i2c_slv.c: 153: }
 33417                           ;i2c_slv.c: 154: break;
 33418  00405E  0012               	return	
 33419  004060                     
 33420                           ; BSR set to: 1
 33421                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 33422                           
 33423                           ; BSR set to: 1
 33424  004060  0E8E               	movlw	low _I2cRxPacket
 33425  004062  0100               	movlb	0	; () banked
 33426  004064  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 33427  004066  0E03               	movlw	high _I2cRxPacket
 33428  004068  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 33429  00406A  EC37  F011         	call	_I2c_ReadData	;wreg free
 33430  00406E  0900               	iorlw	0
 33431  004070  B4D8               	btfsc	status,2,c
 33432  004072  0012               	return	
 33433                           
 33434                           ;i2c_slv.c: 159: {
 33435                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 33436  004074  0E04               	movlw	4
 33437  004076  0101               	movlb	1	; () banked
 33438  004078  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33439                           
 33440                           ; BSR set to: 1
 33441                           ;i2c_slv.c: 162: }
 33442                           ;i2c_slv.c: 164: break;
 33443  00407A  0012               	return	
 33444  00407C                     
 33445                           ; BSR set to: 1
 33446                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 33447                           
 33448                           ; BSR set to: 1
 33449  00407C  0E00               	movlw	0
 33450  00407E  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33451                           
 33452                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 33453  004080  0E00               	movlw	0
 33454  004082  0100               	movlb	0	; () banked
 33455  004084  6FCE               	movwf	_I2cComSts& (0+255),b
 33456                           
 33457                           ;i2c_slv.c: 171: break;
 33458  004086  0012               	return	
 33459  004088                     
 33460                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 33461                           
 33462                           ; BSR set to: 0
 33463  004088  0E00               	movlw	0
 33464  00408A  0101               	movlb	1	; () banked
 33465  00408C  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33466                           
 33467                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 33468  00408E  0E00               	movlw	0
 33469  004090  0100               	movlb	0	; () banked
 33470  004092  6FCE               	movwf	_I2cComSts& (0+255),b
 33471                           
 33472                           ; BSR set to: 0
 33473                           ;i2c_slv.c: 182: }
 33474                           
 33475                           ; BSR set to: 0
 33476                           ;i2c_slv.c: 181: break;
 33477                           
 33478                           ;i2c_slv.c: 180: default:
 33479                           
 33480                           ;i2c_slv.c: 178: break;
 33481  004094  0012               	return	
 33482  004096                     l1379:
 33483                           
 33484                           ; BSR set to: 0
 33485  004096  0101               	movlb	1	; () banked
 33486  004098  51E7               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 33487                           
 33488                           ; Switch size 1, requested type "space"
 33489                           ; Number of cases is 5, Range of values is 0 to 4
 33490                           ; switch strategies available:
 33491                           ; Name         Instructions Cycles
 33492                           ; simple_byte           16     9 (average)
 33493                           ;	Chosen strategy is simple_byte
 33494  00409A  0A00               	xorlw	0	; case 0
 33495  00409C  B4D8               	btfsc	status,2,c
 33496  00409E  D7AC               	goto	l1380
 33497  0040A0  0A01               	xorlw	1	; case 1
 33498  0040A2  B4D8               	btfsc	status,2,c
 33499  0040A4  D7CF               	goto	l1386
 33500  0040A6  0A03               	xorlw	3	; case 2
 33501  0040A8  B4D8               	btfsc	status,2,c
 33502  0040AA  D7DA               	goto	l1388
 33503  0040AC  0A01               	xorlw	1	; case 3
 33504  0040AE  B4D8               	btfsc	status,2,c
 33505  0040B0  D7E5               	goto	l1390
 33506  0040B2  0A07               	xorlw	7	; case 4
 33507  0040B4  A4D8               	btfss	status,2,c
 33508  0040B6  0012               	return	
 33509  0040B8  D7E7               	goto	l1391
 33510  0040BA                     __end_of_I2cSendMsgSm:
 33511                           	opt stack 0
 33512                           tosu	equ	0xFFF
 33513                           tosh	equ	0xFFE
 33514                           tosl	equ	0xFFD
 33515                           pclath	equ	0xFFA
 33516                           tblptru	equ	0xFF8
 33517                           tblptrh	equ	0xFF7
 33518                           tblptrl	equ	0xFF6
 33519                           tablat	equ	0xFF5
 33520                           prodh	equ	0xFF4
 33521                           prodl	equ	0xFF3
 33522                           intcon	equ	0xFF2
 33523                           intcon2	equ	0xFF1
 33524                           intcon3	equ	0xFF0
 33525                           indf0	equ	0xFEF
 33526                           postinc0	equ	0xFEE
 33527                           plusw0	equ	0xFEB
 33528                           fsr0h	equ	0xFEA
 33529                           fsr0l	equ	0xFE9
 33530                           wreg	equ	0xFE8
 33531                           indf1	equ	0xFE7
 33532                           postinc1	equ	0xFE6
 33533                           postdec1	equ	0xFE5
 33534                           plusw1	equ	0xFE3
 33535                           fsr1h	equ	0xFE2
 33536                           fsr1l	equ	0xFE1
 33537                           indf2	equ	0xFDF
 33538                           postinc2	equ	0xFDE
 33539                           postdec2	equ	0xFDD
 33540                           plusw2	equ	0xFDB
 33541                           fsr2h	equ	0xFDA
 33542                           fsr2l	equ	0xFD9
 33543                           status	equ	0xFD8
 33544                           
 33545 ;; *************** function _ReceiveEvt *****************
 33546 ;; Defined at:
 33547 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33548 ;; Parameters:    Size  Location     Type
 33549 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33550 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 33551 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 33552 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 33553 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 33554 ;;		 -> ActivateRiDetection(1), 
 33555 ;; Auto vars:     Size  Location     Type
 33556 ;;  EventStatus     1   32[BANK0 ] enum E7727
 33557 ;; Return value:  Size  Location     Type
 33558 ;;                  1    wreg      enum E7699
 33559 ;; Registers used:
 33560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33561 ;; Tracked objects:
 33562 ;;		On entry : 0/0
 33563 ;;		On exit  : 0/0
 33564 ;;		Unchanged: 0/0
 33565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33570 ;;Total ram usage:        4 bytes
 33571 ;; Hardware stack levels used:    1
 33572 ;; Hardware stack levels required when called:   11
 33573 ;; This function calls:
 33574 ;;		Nothing
 33575 ;; This function is called by:
 33576 ;;		_MdmCntSm
 33577 ;;		_CheckModem
 33578 ;;		_ModemEvtParser
 33579 ;;		_GetSmsSm
 33580 ;;		_SendSmsSm
 33581 ;;		_Mdm_GetSmsData
 33582 ;;		_Mdm_IsSmsReceived
 33583 ;;		_Mdm_IsRinging
 33584 ;;		_GetCallerNumber
 33585 ;;		_InitGprsNetwork
 33586 ;;		_HttpGetMethod
 33587 ;;		_I2cSendMsgSm
 33588 ;;		_I2cSlv_I2cReadMsgSts
 33589 ;;		_RiSm
 33590 ;;		_GsmGprsTerminal
 33591 ;; This function uses a non-reentrant model
 33592 ;;
 33593                           
 33594                           	psect	text157
 33595  006220                     __ptext157:
 33596                           	opt stack 0
 33597  006220                     _ReceiveEvt:
 33598                           	opt stack 13
 33599                           
 33600                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 33601                           
 33602                           ;incstack = 0
 33603  006220  0E00               	movlw	0
 33604  006222  0100               	movlb	0	; () banked
 33605  006224  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33606                           
 33607                           ; BSR set to: 0
 33608                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 33609  006226  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33610  00622A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33611  00622E  0E02               	movlw	2
 33612  006230  18DE               	xorwf	postinc2,w,c
 33613  006232  A4D8               	btfss	status,2,c
 33614  006234  D008               	goto	l832
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;os_ser.c: 106: {
 33618                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 33619  006236  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33620  00623A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33621  00623E  0E01               	movlw	1
 33622  006240  6EDF               	movwf	indf2,c
 33623                           
 33624                           ; BSR set to: 0
 33625                           ;os_ser.c: 110: EventStatus = EventReceived;
 33626  006242  0E01               	movlw	1
 33627  006244  D001               	goto	L58
 33628  006246                     l832:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;os_ser.c: 112: else
 33632                           ;os_ser.c: 113: {
 33633                           ;os_ser.c: 115: EventStatus = EventIdle;
 33634                           
 33635                           ; BSR set to: 0
 33636  006246  0E00               	movlw	0
 33637  006248                     L58:
 33638  006248  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33639                           
 33640                           ; BSR set to: 0
 33641                           ;os_ser.c: 116: }
 33642                           ;os_ser.c: 119: return(EventStatus);
 33643  00624A  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 33644  00624C  0012               	return	
 33645  00624E                     __end_of_ReceiveEvt:
 33646                           	opt stack 0
 33647                           tosu	equ	0xFFF
 33648                           tosh	equ	0xFFE
 33649                           tosl	equ	0xFFD
 33650                           pclath	equ	0xFFA
 33651                           tblptru	equ	0xFF8
 33652                           tblptrh	equ	0xFF7
 33653                           tblptrl	equ	0xFF6
 33654                           tablat	equ	0xFF5
 33655                           prodh	equ	0xFF4
 33656                           prodl	equ	0xFF3
 33657                           intcon	equ	0xFF2
 33658                           intcon2	equ	0xFF1
 33659                           intcon3	equ	0xFF0
 33660                           indf0	equ	0xFEF
 33661                           postinc0	equ	0xFEE
 33662                           plusw0	equ	0xFEB
 33663                           fsr0h	equ	0xFEA
 33664                           fsr0l	equ	0xFE9
 33665                           wreg	equ	0xFE8
 33666                           indf1	equ	0xFE7
 33667                           postinc1	equ	0xFE6
 33668                           postdec1	equ	0xFE5
 33669                           plusw1	equ	0xFE3
 33670                           fsr1h	equ	0xFE2
 33671                           fsr1l	equ	0xFE1
 33672                           indf2	equ	0xFDF
 33673                           postinc2	equ	0xFDE
 33674                           postdec2	equ	0xFDD
 33675                           plusw2	equ	0xFDB
 33676                           fsr2h	equ	0xFDA
 33677                           fsr2l	equ	0xFD9
 33678                           status	equ	0xFD8
 33679                           
 33680 ;; *************** function _I2c_WriteData *****************
 33681 ;; Defined at:
 33682 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33683 ;; Parameters:    Size  Location     Type
 33684 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 33685 ;;		 -> I2cTxPacket(5), 
 33686 ;; Auto vars:     Size  Location     Type
 33687 ;;		None
 33688 ;; Return value:  Size  Location     Type
 33689 ;;                  1    wreg      enum E7740
 33690 ;; Registers used:
 33691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33692 ;; Tracked objects:
 33693 ;;		On entry : 0/0
 33694 ;;		On exit  : 0/0
 33695 ;;		Unchanged: 0/0
 33696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33701 ;;Total ram usage:        4 bytes
 33702 ;; Hardware stack levels used:    1
 33703 ;; Hardware stack levels required when called:   12
 33704 ;; This function calls:
 33705 ;;		_CheckAckStatus
 33706 ;;		_CheckTxStatus
 33707 ;;		_StartCondition
 33708 ;;		_StopCondition
 33709 ;;		_WriteByte
 33710 ;; This function is called by:
 33711 ;;		_I2cSendMsgSm
 33712 ;; This function uses a non-reentrant model
 33713 ;;
 33714                           
 33715                           	psect	text158
 33716  002100                     __ptext158:
 33717                           	opt stack 0
 33718  002100                     _I2c_WriteData:
 33719                           	opt stack 14
 33720                           
 33721                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 33722                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 33723                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 33724                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 33725                           ;i2c_drv.c: 260: switch (I2cWriteState)
 33726                           
 33727                           ; BSR set to: 0
 33728                           ;incstack = 0
 33729  002100  D095               	goto	l160
 33730  002102                     
 33731                           ;i2c_drv.c: 264: StartCondition();
 33732  002102  ECCB  F033         	call	_StartCondition	;wreg free
 33733                           
 33734                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 33735  002106  0E00               	movlw	0
 33736  002108  6E34               	movwf	I2c_WriteData@WriteStatus,c
 33737                           
 33738                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 33739  00210A  0E01               	movlw	1
 33740  00210C  D084               	goto	L65
 33741  00210E                     
 33742                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 33743  00210E  0100               	movlb	0	; () banked
 33744  002110  EE20 F001          	lfsr	2,1
 33745  002114  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33746  002116  26D9               	addwf	fsr2l,f,c
 33747  002118  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33748  00211A  22DA               	addwfc	fsr2h,f,c
 33749  00211C  50DF               	movf	indf2,w,c
 33750  00211E  6F80               	movwf	??_I2c_WriteData& (0+255),b
 33751  002120  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33752  002124  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33753  002128  50DF               	movf	indf2,w,c
 33754  00212A  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 33755  00212C  90D8               	bcf	status,0,c
 33756  00212E  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 33757  002130  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 33758  002132  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33759  002136  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33760  00213A  6EDF               	movwf	indf2,c
 33761                           
 33762                           ; BSR set to: 0
 33763                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 33764  00213C  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33765  002140  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33766  002144  50DF               	movf	indf2,w,c
 33767  002146  ECA9  F033         	call	_WriteByte
 33768                           
 33769                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 33770  00214A  0E02               	movlw	2
 33771  00214C  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33772  00214E                     
 33773                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 33774  00214E  ECB3  F033         	call	_CheckTxStatus	;wreg free
 33775  002152  0900               	iorlw	0
 33776  002154  A4D8               	btfss	status,2,c
 33777  002156  D089               	goto	l162
 33778                           
 33779                           ;i2c_drv.c: 282: {
 33780                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 33781  002158  0E03               	movlw	3
 33782  00215A  D01A               	goto	L67
 33783  00215C                     
 33784                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 33785  00215C  0100               	movlb	0	; () banked
 33786  00215E  EE20 F002          	lfsr	2,2
 33787  002162  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33788  002164  26D9               	addwf	fsr2l,f,c
 33789  002166  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33790  002168  22DA               	addwfc	fsr2h,f,c
 33791  00216A  CFDE F080          	movff	postinc2,??_I2c_WriteData
 33792  00216E  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 33793  002172  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 33794  002176  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 33795  00217A  50DF               	movf	indf2,w,c
 33796  00217C  ECA9  F033         	call	_WriteByte
 33797                           
 33798                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 33799  002180  0E04               	movlw	4
 33800  002182  D049               	goto	L65
 33801  002184                     
 33802                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 33803  002184  ECB3  F033         	call	_CheckTxStatus	;wreg free
 33804  002188  0900               	iorlw	0
 33805  00218A  A4D8               	btfss	status,2,c
 33806  00218C  D06E               	goto	l162
 33807                           
 33808                           ;i2c_drv.c: 300: {
 33809                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 33810  00218E  0E05               	movlw	5
 33811  002190                     L67:
 33812  002190  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33813                           
 33814                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 33815  002192  0E08               	movlw	8
 33816  002194  D040               	goto	L65
 33817  002196                     
 33818                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 33819  002196  0100               	movlb	0	; () banked
 33820  002198  EE20 F004          	lfsr	2,4
 33821  00219C  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33822  00219E  26D9               	addwf	fsr2l,f,c
 33823  0021A0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33824  0021A2  22DA               	addwfc	fsr2h,f,c
 33825  0021A4  50DF               	movf	indf2,w,c
 33826  0021A6  B4D8               	btfsc	status,2,c
 33827  0021A8  D010               	goto	l170
 33828                           
 33829                           ; BSR set to: 0
 33830                           ;i2c_drv.c: 310: {
 33831                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 33832  0021AA  EE20 F004          	lfsr	2,4
 33833  0021AE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33834  0021B0  26D9               	addwf	fsr2l,f,c
 33835  0021B2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33836  0021B4  22DA               	addwfc	fsr2h,f,c
 33837  0021B6  06DF               	decf	indf2,f,c
 33838                           
 33839                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 33840  0021B8  EE20 F002          	lfsr	2,2
 33841  0021BC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33842  0021BE  26D9               	addwf	fsr2l,f,c
 33843  0021C0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33844  0021C2  22DA               	addwfc	fsr2h,f,c
 33845  0021C4  2ADE               	incf	postinc2,f,c
 33846  0021C6  0E00               	movlw	0
 33847  0021C8  22DD               	addwfc	postdec2,f,c
 33848  0021CA                     l170:
 33849                           
 33850                           ; BSR set to: 0
 33851                           ;i2c_drv.c: 315: }
 33852                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 33853  0021CA  EE20 F004          	lfsr	2,4
 33854  0021CE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33855  0021D0  26D9               	addwf	fsr2l,f,c
 33856  0021D2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33857  0021D4  22DA               	addwfc	fsr2h,f,c
 33858  0021D6  50DF               	movf	indf2,w,c
 33859  0021D8  A4D8               	btfss	status,2,c
 33860  0021DA  D002               	goto	l171
 33861                           
 33862                           ; BSR set to: 0
 33863                           ;i2c_drv.c: 319: {
 33864                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 33865  0021DC  0E06               	movlw	6
 33866  0021DE  D01B               	goto	L65
 33867  0021E0                     l171:
 33868                           
 33869                           ; BSR set to: 0
 33870                           ;i2c_drv.c: 323: else
 33871                           ;i2c_drv.c: 324: {
 33872                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 33873                           
 33874                           ; BSR set to: 0
 33875  0021E0  0E03               	movlw	3
 33876  0021E2  D019               	goto	L65
 33877  0021E4                     
 33878                           ;i2c_drv.c: 332: StopCondition();
 33879                           
 33880                           ; BSR set to: 0
 33881  0021E4  ECC9  F033         	call	_StopCondition	;wreg free
 33882                           
 33883                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 33884  0021E8  0E07               	movlw	7
 33885  0021EA  D015               	goto	L65
 33886  0021EC                     
 33887                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 33888  0021EC  0E00               	movlw	0
 33889  0021EE  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33890                           
 33891                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 33892  0021F0  0E00               	movlw	0
 33893  0021F2  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33894                           
 33895                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 33896  0021F4  0E02               	movlw	2
 33897  0021F6  D018               	goto	L66
 33898  0021F8                     
 33899                           ;i2c_drv.c: 347: TentativeCounter++;
 33900  0021F8  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 33901                           
 33902                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 33903  0021FA  ECB8  F033         	call	_CheckAckStatus	;wreg free
 33904  0021FE  0900               	iorlw	0
 33905  002200  A4D8               	btfss	status,2,c
 33906  002202  D005               	goto	l176
 33907                           
 33908                           ;i2c_drv.c: 350: {
 33909                           ;i2c_drv.c: 352: TentativeCounter = 0;
 33910  002204  0E00               	movlw	0
 33911  002206  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 33912                           
 33913                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 33914  002208  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 33915                           
 33916                           ;i2c_drv.c: 355: }
 33917  00220C  D02E               	goto	l162
 33918  00220E                     l176:
 33919                           
 33920                           ;i2c_drv.c: 356: else
 33921                           ;i2c_drv.c: 357: {
 33922                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 33923  00220E  0E02               	movlw	2
 33924  002210  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 33925  002212  D02B               	goto	l162
 33926                           
 33927                           ;i2c_drv.c: 360: {
 33928                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 33929  002214  0E09               	movlw	9
 33930  002216                     L65:
 33931  002216  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33932                           
 33933                           ;i2c_drv.c: 363: }
 33934                           ;i2c_drv.c: 364: }
 33935                           ;i2c_drv.c: 365: break;
 33936  002218  D028               	goto	l162
 33937  00221A                     
 33938                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 33939  00221A  0E00               	movlw	0
 33940  00221C  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33941                           
 33942                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 33943  00221E  0E00               	movlw	0
 33944  002220  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33945                           
 33946                           ;i2c_drv.c: 372: TentativeCounter = 0;
 33947  002222  0E00               	movlw	0
 33948  002224  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 33949                           
 33950                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 33951  002226  0E01               	movlw	1
 33952  002228                     L66:
 33953  002228  6E34               	movwf	I2c_WriteData@WriteStatus,c
 33954                           
 33955                           ;i2c_drv.c: 379: }
 33956                           
 33957                           ;i2c_drv.c: 378: break;
 33958                           
 33959                           ;i2c_drv.c: 377: default:
 33960                           
 33961                           ;i2c_drv.c: 375: break;
 33962  00222A  D01F               	goto	l162
 33963  00222C                     l160:
 33964  00222C  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 33965                           
 33966                           ; Switch size 1, requested type "space"
 33967                           ; Number of cases is 10, Range of values is 0 to 9
 33968                           ; switch strategies available:
 33969                           ; Name         Instructions Cycles
 33970                           ; simple_byte           31    16 (average)
 33971                           ;	Chosen strategy is simple_byte
 33972  00222E  0A00               	xorlw	0	; case 0
 33973  002230  B4D8               	btfsc	status,2,c
 33974  002232  D767               	goto	l161
 33975  002234  0A01               	xorlw	1	; case 1
 33976  002236  B4D8               	btfsc	status,2,c
 33977  002238  D76A               	goto	l163
 33978  00223A  0A03               	xorlw	3	; case 2
 33979  00223C  B4D8               	btfsc	status,2,c
 33980  00223E  D787               	goto	l164
 33981  002240  0A01               	xorlw	1	; case 3
 33982  002242  B4D8               	btfsc	status,2,c
 33983  002244  D78B               	goto	l166
 33984  002246  0A07               	xorlw	7	; case 4
 33985  002248  B4D8               	btfsc	status,2,c
 33986  00224A  D79C               	goto	l167
 33987  00224C  0A01               	xorlw	1	; case 5
 33988  00224E  B4D8               	btfsc	status,2,c
 33989  002250  D7A2               	goto	l169
 33990  002252  0A03               	xorlw	3	; case 6
 33991  002254  B4D8               	btfsc	status,2,c
 33992  002256  D7C6               	goto	l173
 33993  002258  0A01               	xorlw	1	; case 7
 33994  00225A  B4D8               	btfsc	status,2,c
 33995  00225C  D7C7               	goto	l174
 33996  00225E  0A0F               	xorlw	15	; case 8
 33997  002260  B4D8               	btfsc	status,2,c
 33998  002262  D7CA               	goto	l175
 33999  002264  0A01               	xorlw	1	; case 9
 34000  002266  B4D8               	btfsc	status,2,c
 34001  002268  D7D8               	goto	l179
 34002  00226A                     l162:
 34003                           
 34004                           ;i2c_drv.c: 382: return WriteStatus;
 34005  00226A  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34006  00226C  0012               	return	
 34007  00226E                     __end_of_I2c_WriteData:
 34008                           	opt stack 0
 34009                           tosu	equ	0xFFF
 34010                           tosh	equ	0xFFE
 34011                           tosl	equ	0xFFD
 34012                           pclath	equ	0xFFA
 34013                           tblptru	equ	0xFF8
 34014                           tblptrh	equ	0xFF7
 34015                           tblptrl	equ	0xFF6
 34016                           tablat	equ	0xFF5
 34017                           prodh	equ	0xFF4
 34018                           prodl	equ	0xFF3
 34019                           intcon	equ	0xFF2
 34020                           intcon2	equ	0xFF1
 34021                           intcon3	equ	0xFF0
 34022                           indf0	equ	0xFEF
 34023                           postinc0	equ	0xFEE
 34024                           plusw0	equ	0xFEB
 34025                           fsr0h	equ	0xFEA
 34026                           fsr0l	equ	0xFE9
 34027                           wreg	equ	0xFE8
 34028                           indf1	equ	0xFE7
 34029                           postinc1	equ	0xFE6
 34030                           postdec1	equ	0xFE5
 34031                           plusw1	equ	0xFE3
 34032                           fsr1h	equ	0xFE2
 34033                           fsr1l	equ	0xFE1
 34034                           indf2	equ	0xFDF
 34035                           postinc2	equ	0xFDE
 34036                           postdec2	equ	0xFDD
 34037                           plusw2	equ	0xFDB
 34038                           fsr2h	equ	0xFDA
 34039                           fsr2l	equ	0xFD9
 34040                           status	equ	0xFD8
 34041                           
 34042 ;; *************** function _I2c_ReadData *****************
 34043 ;; Defined at:
 34044 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34045 ;; Parameters:    Size  Location     Type
 34046 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34047 ;;		 -> I2cRxPacket(6), 
 34048 ;; Auto vars:     Size  Location     Type
 34049 ;;		None
 34050 ;; Return value:  Size  Location     Type
 34051 ;;                  1    wreg      enum E7787
 34052 ;; Registers used:
 34053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34054 ;; Tracked objects:
 34055 ;;		On entry : 0/0
 34056 ;;		On exit  : 0/0
 34057 ;;		Unchanged: 0/0
 34058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34062 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34063 ;;Total ram usage:        4 bytes
 34064 ;; Hardware stack levels used:    1
 34065 ;; Hardware stack levels required when called:   12
 34066 ;; This function calls:
 34067 ;;		_CheckAckStatus
 34068 ;;		_CheckTxStatus
 34069 ;;		_EnableReceiver
 34070 ;;		_GenerateEvt
 34071 ;;		_ReadByte
 34072 ;;		_SetAckStatus
 34073 ;;		_StartCondition
 34074 ;;		_StopCondition
 34075 ;;		_WriteByte
 34076 ;; This function is called by:
 34077 ;;		_I2cSendMsgSm
 34078 ;; This function uses a non-reentrant model
 34079 ;;
 34080                           
 34081                           	psect	text159
 34082  00226E                     __ptext159:
 34083                           	opt stack 0
 34084  00226E                     _I2c_ReadData:
 34085                           	opt stack 14
 34086                           
 34087                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34088                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34089                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34090                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34091                           ;i2c_drv.c: 402: switch (I2cReadState)
 34092                           
 34093                           ;incstack = 0
 34094  00226E  D090               	goto	l192
 34095  002270                     
 34096                           ;i2c_drv.c: 406: StartCondition();
 34097  002270  ECCB  F033         	call	_StartCondition	;wreg free
 34098                           
 34099                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34100  002274  0E00               	movlw	0
 34101  002276  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34102                           
 34103                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34104  002278  0E01               	movlw	1
 34105  00227A  D083               	goto	L75
 34106  00227C                     
 34107                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34108  00227C  0100               	movlb	0	; () banked
 34109  00227E  EE20 F001          	lfsr	2,1
 34110  002282  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34111  002284  26D9               	addwf	fsr2l,f,c
 34112  002286  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34113  002288  22DA               	addwfc	fsr2h,f,c
 34114  00228A  50DF               	movf	indf2,w,c
 34115  00228C  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34116  00228E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34117  002292  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34118  002296  50DF               	movf	indf2,w,c
 34119  002298  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34120  00229A  90D8               	bcf	status,0,c
 34121  00229C  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34122  00229E  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34123  0022A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34124  0022A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34125  0022A8  6EDF               	movwf	indf2,c
 34126                           
 34127                           ; BSR set to: 0
 34128                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34129  0022AA  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34130  0022AE  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34131  0022B2  50DF               	movf	indf2,w,c
 34132  0022B4  ECA9  F033         	call	_WriteByte
 34133                           
 34134                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34135  0022B8  0E02               	movlw	2
 34136  0022BA  D063               	goto	L75
 34137  0022BC                     
 34138                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34139  0022BC  ECB3  F033         	call	_CheckTxStatus	;wreg free
 34140  0022C0  0900               	iorlw	0
 34141  0022C2  A4D8               	btfss	status,2,c
 34142  0022C4  D081               	goto	l194
 34143                           
 34144                           ;i2c_drv.c: 425: {
 34145                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34146  0022C6  0E03               	movlw	3
 34147  0022C8  D05C               	goto	L75
 34148  0022CA                     
 34149                           ;i2c_drv.c: 433: TentativeCounter++;
 34150  0022CA  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34151                           
 34152                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34153  0022CC  ECB8  F033         	call	_CheckAckStatus	;wreg free
 34154  0022D0  0900               	iorlw	0
 34155  0022D2  A4D8               	btfss	status,2,c
 34156  0022D4  D004               	goto	l199
 34157                           
 34158                           ;i2c_drv.c: 436: {
 34159                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34160  0022D6  0E00               	movlw	0
 34161  0022D8  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34162  0022DA                     
 34163                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34164  0022DA  0E04               	movlw	4
 34165  0022DC  D052               	goto	L75
 34166  0022DE                     l199:
 34167                           
 34168                           ;i2c_drv.c: 442: else
 34169                           ;i2c_drv.c: 443: {
 34170                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34171  0022DE  0E02               	movlw	2
 34172  0022E0  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34173  0022E2  D072               	goto	l194
 34174                           
 34175                           ;i2c_drv.c: 446: {
 34176                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34177  0022E4  0E08               	movlw	8
 34178  0022E6  D04D               	goto	L75
 34179  0022E8                     
 34180                           ;i2c_drv.c: 455: EnableReceiver();
 34181  0022E8  ECCD  F033         	call	_EnableReceiver	;wreg free
 34182                           
 34183                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34184  0022EC  0E05               	movlw	5
 34185  0022EE  D049               	goto	L75
 34186  0022F0                     
 34187                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34188  0022F0  ECB3  F033         	call	_CheckTxStatus	;wreg free
 34189  0022F4  0900               	iorlw	0
 34190  0022F6  A4D8               	btfss	status,2,c
 34191  0022F8  D067               	goto	l194
 34192                           
 34193                           ;i2c_drv.c: 463: {
 34194                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34195  0022FA  0100               	movlb	0	; () banked
 34196  0022FC  EE20 F002          	lfsr	2,2
 34197  002300  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34198  002302  26D9               	addwf	fsr2l,f,c
 34199  002304  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34200  002306  22DA               	addwfc	fsr2h,f,c
 34201  002308  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34202  00230C  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34203  002310  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34204  002314  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34205  002318  ECAE  F033         	call	_ReadByte	;wreg free
 34206  00231C  6EDF               	movwf	indf2,c
 34207                           
 34208                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34209  00231E  0100               	movlb	0	; () banked
 34210  002320  EE20 F002          	lfsr	2,2
 34211  002324  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34212  002326  26D9               	addwf	fsr2l,f,c
 34213  002328  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34214  00232A  22DA               	addwfc	fsr2h,f,c
 34215  00232C  2ADE               	incf	postinc2,f,c
 34216  00232E  0E00               	movlw	0
 34217  002330  22DD               	addwfc	postdec2,f,c
 34218                           
 34219                           ; BSR set to: 0
 34220                           ;i2c_drv.c: 469: DataCounter++;
 34221  002332  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34222                           
 34223                           ; BSR set to: 0
 34224                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34225  002334  0E06               	movlw	6
 34226  002336  D025               	goto	L75
 34227  002338                     
 34228                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34229                           
 34230                           ; BSR set to: 0
 34231  002338  0100               	movlb	0	; () banked
 34232  00233A  EE20 F004          	lfsr	2,4
 34233  00233E  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34234  002340  26D9               	addwf	fsr2l,f,c
 34235  002342  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34236  002344  22DA               	addwfc	fsr2h,f,c
 34237  002346  50DE               	movf	postinc2,w,c
 34238  002348  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34239  00234A  A0D8               	btfss	status,0,c
 34240  00234C  D008               	goto	l206
 34241                           
 34242                           ; BSR set to: 0
 34243                           ;i2c_drv.c: 478: {
 34244                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34245  00234E  0E01               	movlw	1
 34246  002350  EC3D  F033         	call	_SetAckStatus
 34247                           
 34248                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34249  002354  0E07               	movlw	7
 34250  002356  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34251                           
 34252                           ;i2c_drv.c: 484: DataCounter = 0;
 34253  002358  0E00               	movlw	0
 34254  00235A  6E32               	movwf	I2c_ReadData@DataCounter,c
 34255                           
 34256                           ;i2c_drv.c: 485: }
 34257  00235C  D035               	goto	l194
 34258  00235E                     l206:
 34259                           
 34260                           ;i2c_drv.c: 486: else
 34261                           ;i2c_drv.c: 487: {
 34262                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34263  00235E  0E00               	movlw	0
 34264  002360  EC3D  F033         	call	_SetAckStatus
 34265  002364  D7BA               	goto	L76
 34266  002366                     
 34267                           ;i2c_drv.c: 497: StopCondition();
 34268  002366  ECC9  F033         	call	_StopCondition	;wreg free
 34269                           
 34270                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34271  00236A  0E02               	movlw	2
 34272  00236C  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34273                           
 34274                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34275  00236E  0E05               	movlw	5
 34276  002370  0100               	movlb	0	; () banked
 34277  002372  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34278  002374  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34279  002376  0E00               	movlw	0
 34280  002378  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34281  00237A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34282  00237C  EC05  F033         	call	_GenerateEvt	;wreg free
 34283                           
 34284                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34285  002380  0E00               	movlw	0
 34286  002382                     L75:
 34287  002382  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34288                           
 34289                           ;i2c_drv.c: 504: break;
 34290  002384  D021               	goto	l194
 34291  002386                     
 34292                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34293  002386  0E00               	movlw	0
 34294  002388  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34295                           
 34296                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34297  00238A  0E01               	movlw	1
 34298  00238C  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34299                           
 34300                           ;i2c_drv.c: 515: }
 34301                           
 34302                           ;i2c_drv.c: 514: break;
 34303                           
 34304                           ;i2c_drv.c: 513: default:
 34305                           
 34306                           ;i2c_drv.c: 511: break;
 34307  00238E  D01C               	goto	l194
 34308  002390                     l192:
 34309  002390  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34310                           
 34311                           ; Switch size 1, requested type "space"
 34312                           ; Number of cases is 9, Range of values is 0 to 8
 34313                           ; switch strategies available:
 34314                           ; Name         Instructions Cycles
 34315                           ; simple_byte           28    15 (average)
 34316                           ;	Chosen strategy is simple_byte
 34317  002392  0A00               	xorlw	0	; case 0
 34318  002394  B4D8               	btfsc	status,2,c
 34319  002396  D76C               	goto	l193
 34320  002398  0A01               	xorlw	1	; case 1
 34321  00239A  B4D8               	btfsc	status,2,c
 34322  00239C  D76F               	goto	l195
 34323  00239E  0A03               	xorlw	3	; case 2
 34324  0023A0  B4D8               	btfsc	status,2,c
 34325  0023A2  D78C               	goto	l196
 34326  0023A4  0A01               	xorlw	1	; case 3
 34327  0023A6  B4D8               	btfsc	status,2,c
 34328  0023A8  D790               	goto	l198
 34329  0023AA  0A07               	xorlw	7	; case 4
 34330  0023AC  B4D8               	btfsc	status,2,c
 34331  0023AE  D79C               	goto	l202
 34332  0023B0  0A01               	xorlw	1	; case 5
 34333  0023B2  B4D8               	btfsc	status,2,c
 34334  0023B4  D79D               	goto	l203
 34335  0023B6  0A03               	xorlw	3	; case 6
 34336  0023B8  B4D8               	btfsc	status,2,c
 34337  0023BA  D7BE               	goto	l205
 34338  0023BC  0A01               	xorlw	1	; case 7
 34339  0023BE  B4D8               	btfsc	status,2,c
 34340  0023C0  D7D2               	goto	l208
 34341  0023C2  0A0F               	xorlw	15	; case 8
 34342  0023C4  B4D8               	btfsc	status,2,c
 34343  0023C6  D7DF               	goto	l209
 34344  0023C8                     l194:
 34345                           
 34346                           ;i2c_drv.c: 518: return ReadStatus;
 34347  0023C8  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34348  0023CA  0012               	return	
 34349  0023CC                     __end_of_I2c_ReadData:
 34350                           	opt stack 0
 34351                           tosu	equ	0xFFF
 34352                           tosh	equ	0xFFE
 34353                           tosl	equ	0xFFD
 34354                           pclath	equ	0xFFA
 34355                           tblptru	equ	0xFF8
 34356                           tblptrh	equ	0xFF7
 34357                           tblptrl	equ	0xFF6
 34358                           tablat	equ	0xFF5
 34359                           prodh	equ	0xFF4
 34360                           prodl	equ	0xFF3
 34361                           intcon	equ	0xFF2
 34362                           intcon2	equ	0xFF1
 34363                           intcon3	equ	0xFF0
 34364                           indf0	equ	0xFEF
 34365                           postinc0	equ	0xFEE
 34366                           plusw0	equ	0xFEB
 34367                           fsr0h	equ	0xFEA
 34368                           fsr0l	equ	0xFE9
 34369                           wreg	equ	0xFE8
 34370                           indf1	equ	0xFE7
 34371                           postinc1	equ	0xFE6
 34372                           postdec1	equ	0xFE5
 34373                           plusw1	equ	0xFE3
 34374                           fsr1h	equ	0xFE2
 34375                           fsr1l	equ	0xFE1
 34376                           indf2	equ	0xFDF
 34377                           postinc2	equ	0xFDE
 34378                           postdec2	equ	0xFDD
 34379                           plusw2	equ	0xFDB
 34380                           fsr2h	equ	0xFDA
 34381                           fsr2l	equ	0xFD9
 34382                           status	equ	0xFD8
 34383                           
 34384 ;; *************** function _WriteByte *****************
 34385 ;; Defined at:
 34386 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34387 ;; Parameters:    Size  Location     Type
 34388 ;;  Byte            1    wreg     unsigned char 
 34389 ;; Auto vars:     Size  Location     Type
 34390 ;;  Byte            1   29[BANK0 ] unsigned char 
 34391 ;; Return value:  Size  Location     Type
 34392 ;;                  1    wreg      void 
 34393 ;; Registers used:
 34394 ;;		wreg
 34395 ;; Tracked objects:
 34396 ;;		On entry : 0/0
 34397 ;;		On exit  : 0/0
 34398 ;;		Unchanged: 0/0
 34399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34404 ;;Total ram usage:        1 bytes
 34405 ;; Hardware stack levels used:    1
 34406 ;; Hardware stack levels required when called:   11
 34407 ;; This function calls:
 34408 ;;		Nothing
 34409 ;; This function is called by:
 34410 ;;		_I2c_WriteData
 34411 ;;		_I2c_ReadData
 34412 ;; This function uses a non-reentrant model
 34413 ;;
 34414                           
 34415                           	psect	text160
 34416  006752                     __ptext160:
 34417                           	opt stack 0
 34418  006752                     _WriteByte:
 34419                           	opt stack 14
 34420                           
 34421                           ;incstack = 0
 34422                           ;WriteByte@Byte stored from wreg
 34423  006752  0100               	movlb	0	; () banked
 34424  006754  6F7D               	movwf	WriteByte@Byte& (0+255),b
 34425                           
 34426                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 34427  006756  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 34428  00675A  0012               	return		;funcret
 34429  00675C                     __end_of_WriteByte:
 34430                           	opt stack 0
 34431                           tosu	equ	0xFFF
 34432                           tosh	equ	0xFFE
 34433                           tosl	equ	0xFFD
 34434                           pclath	equ	0xFFA
 34435                           tblptru	equ	0xFF8
 34436                           tblptrh	equ	0xFF7
 34437                           tblptrl	equ	0xFF6
 34438                           tablat	equ	0xFF5
 34439                           prodh	equ	0xFF4
 34440                           prodl	equ	0xFF3
 34441                           intcon	equ	0xFF2
 34442                           intcon2	equ	0xFF1
 34443                           intcon3	equ	0xFF0
 34444                           indf0	equ	0xFEF
 34445                           postinc0	equ	0xFEE
 34446                           plusw0	equ	0xFEB
 34447                           fsr0h	equ	0xFEA
 34448                           fsr0l	equ	0xFE9
 34449                           wreg	equ	0xFE8
 34450                           indf1	equ	0xFE7
 34451                           postinc1	equ	0xFE6
 34452                           postdec1	equ	0xFE5
 34453                           plusw1	equ	0xFE3
 34454                           fsr1h	equ	0xFE2
 34455                           fsr1l	equ	0xFE1
 34456                           indf2	equ	0xFDF
 34457                           postinc2	equ	0xFDE
 34458                           postdec2	equ	0xFDD
 34459                           plusw2	equ	0xFDB
 34460                           fsr2h	equ	0xFDA
 34461                           fsr2l	equ	0xFD9
 34462                           status	equ	0xFD8
 34463                           
 34464 ;; *************** function _StopCondition *****************
 34465 ;; Defined at:
 34466 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34467 ;; Parameters:    Size  Location     Type
 34468 ;;		None
 34469 ;; Auto vars:     Size  Location     Type
 34470 ;;		None
 34471 ;; Return value:  Size  Location     Type
 34472 ;;                  1    wreg      void 
 34473 ;; Registers used:
 34474 ;;		status,2, status,0
 34475 ;; Tracked objects:
 34476 ;;		On entry : 0/0
 34477 ;;		On exit  : 0/0
 34478 ;;		Unchanged: 0/0
 34479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34484 ;;Total ram usage:        0 bytes
 34485 ;; Hardware stack levels used:    1
 34486 ;; Hardware stack levels required when called:   11
 34487 ;; This function calls:
 34488 ;;		Nothing
 34489 ;; This function is called by:
 34490 ;;		_I2c_WriteData
 34491 ;;		_I2c_ReadData
 34492 ;; This function uses a non-reentrant model
 34493 ;;
 34494                           
 34495                           	psect	text161
 34496  006792                     __ptext161:
 34497                           	opt stack 0
 34498  006792                     _StopCondition:
 34499                           	opt stack 14
 34500                           
 34501                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 34502                           
 34503                           ;incstack = 0
 34504  006792  8471               	bsf	3953,2,c	;volatile
 34505  006794  0012               	return		;funcret
 34506  006796                     __end_of_StopCondition:
 34507                           	opt stack 0
 34508                           tosu	equ	0xFFF
 34509                           tosh	equ	0xFFE
 34510                           tosl	equ	0xFFD
 34511                           pclath	equ	0xFFA
 34512                           tblptru	equ	0xFF8
 34513                           tblptrh	equ	0xFF7
 34514                           tblptrl	equ	0xFF6
 34515                           tablat	equ	0xFF5
 34516                           prodh	equ	0xFF4
 34517                           prodl	equ	0xFF3
 34518                           intcon	equ	0xFF2
 34519                           intcon2	equ	0xFF1
 34520                           intcon3	equ	0xFF0
 34521                           indf0	equ	0xFEF
 34522                           postinc0	equ	0xFEE
 34523                           plusw0	equ	0xFEB
 34524                           fsr0h	equ	0xFEA
 34525                           fsr0l	equ	0xFE9
 34526                           wreg	equ	0xFE8
 34527                           indf1	equ	0xFE7
 34528                           postinc1	equ	0xFE6
 34529                           postdec1	equ	0xFE5
 34530                           plusw1	equ	0xFE3
 34531                           fsr1h	equ	0xFE2
 34532                           fsr1l	equ	0xFE1
 34533                           indf2	equ	0xFDF
 34534                           postinc2	equ	0xFDE
 34535                           postdec2	equ	0xFDD
 34536                           plusw2	equ	0xFDB
 34537                           fsr2h	equ	0xFDA
 34538                           fsr2l	equ	0xFD9
 34539                           status	equ	0xFD8
 34540                           
 34541 ;; *************** function _StartCondition *****************
 34542 ;; Defined at:
 34543 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34544 ;; Parameters:    Size  Location     Type
 34545 ;;		None
 34546 ;; Auto vars:     Size  Location     Type
 34547 ;;		None
 34548 ;; Return value:  Size  Location     Type
 34549 ;;                  1    wreg      void 
 34550 ;; Registers used:
 34551 ;;		status,2, status,0
 34552 ;; Tracked objects:
 34553 ;;		On entry : 0/0
 34554 ;;		On exit  : 0/0
 34555 ;;		Unchanged: 0/0
 34556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34561 ;;Total ram usage:        0 bytes
 34562 ;; Hardware stack levels used:    1
 34563 ;; Hardware stack levels required when called:   11
 34564 ;; This function calls:
 34565 ;;		Nothing
 34566 ;; This function is called by:
 34567 ;;		_I2c_WriteData
 34568 ;;		_I2c_ReadData
 34569 ;; This function uses a non-reentrant model
 34570 ;;
 34571                           
 34572                           	psect	text162
 34573  006796                     __ptext162:
 34574                           	opt stack 0
 34575  006796                     _StartCondition:
 34576                           	opt stack 14
 34577                           
 34578                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 34579                           
 34580                           ;incstack = 0
 34581  006796  8071               	bsf	3953,0,c	;volatile
 34582  006798  0012               	return		;funcret
 34583  00679A                     __end_of_StartCondition:
 34584                           	opt stack 0
 34585                           tosu	equ	0xFFF
 34586                           tosh	equ	0xFFE
 34587                           tosl	equ	0xFFD
 34588                           pclath	equ	0xFFA
 34589                           tblptru	equ	0xFF8
 34590                           tblptrh	equ	0xFF7
 34591                           tblptrl	equ	0xFF6
 34592                           tablat	equ	0xFF5
 34593                           prodh	equ	0xFF4
 34594                           prodl	equ	0xFF3
 34595                           intcon	equ	0xFF2
 34596                           intcon2	equ	0xFF1
 34597                           intcon3	equ	0xFF0
 34598                           indf0	equ	0xFEF
 34599                           postinc0	equ	0xFEE
 34600                           plusw0	equ	0xFEB
 34601                           fsr0h	equ	0xFEA
 34602                           fsr0l	equ	0xFE9
 34603                           wreg	equ	0xFE8
 34604                           indf1	equ	0xFE7
 34605                           postinc1	equ	0xFE6
 34606                           postdec1	equ	0xFE5
 34607                           plusw1	equ	0xFE3
 34608                           fsr1h	equ	0xFE2
 34609                           fsr1l	equ	0xFE1
 34610                           indf2	equ	0xFDF
 34611                           postinc2	equ	0xFDE
 34612                           postdec2	equ	0xFDD
 34613                           plusw2	equ	0xFDB
 34614                           fsr2h	equ	0xFDA
 34615                           fsr2l	equ	0xFD9
 34616                           status	equ	0xFD8
 34617                           
 34618 ;; *************** function _SetAckStatus *****************
 34619 ;; Defined at:
 34620 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34621 ;; Parameters:    Size  Location     Type
 34622 ;;  AckSts          1    wreg     unsigned char 
 34623 ;; Auto vars:     Size  Location     Type
 34624 ;;  AckSts          1   29[BANK0 ] unsigned char 
 34625 ;; Return value:  Size  Location     Type
 34626 ;;                  1    wreg      void 
 34627 ;; Registers used:
 34628 ;;		wreg
 34629 ;; Tracked objects:
 34630 ;;		On entry : 0/0
 34631 ;;		On exit  : 0/0
 34632 ;;		Unchanged: 0/0
 34633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34638 ;;Total ram usage:        1 bytes
 34639 ;; Hardware stack levels used:    1
 34640 ;; Hardware stack levels required when called:   11
 34641 ;; This function calls:
 34642 ;;		Nothing
 34643 ;; This function is called by:
 34644 ;;		_I2c_ReadData
 34645 ;; This function uses a non-reentrant model
 34646 ;;
 34647                           
 34648                           	psect	text163
 34649  00667A                     __ptext163:
 34650                           	opt stack 0
 34651  00667A                     _SetAckStatus:
 34652                           	opt stack 14
 34653                           
 34654                           ;incstack = 0
 34655                           ;SetAckStatus@AckSts stored from wreg
 34656  00667A  0100               	movlb	0	; () banked
 34657  00667C  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 34658                           
 34659                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 34660  00667E  0100               	movlb	0	; () banked
 34661  006680  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 34662  006682  D002               	bra	u12145
 34663  006684  9A71               	bcf	3953,5,c	;volatile
 34664  006686  D001               	bra	u12146
 34665  006688                     u12145:
 34666  006688  8A71               	bsf	3953,5,c	;volatile
 34667  00668A                     u12146:
 34668                           
 34669                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 34670  00668A  8871               	bsf	3953,4,c	;volatile
 34671  00668C  0012               	return		;funcret
 34672  00668E                     __end_of_SetAckStatus:
 34673                           	opt stack 0
 34674                           tosu	equ	0xFFF
 34675                           tosh	equ	0xFFE
 34676                           tosl	equ	0xFFD
 34677                           pclath	equ	0xFFA
 34678                           tblptru	equ	0xFF8
 34679                           tblptrh	equ	0xFF7
 34680                           tblptrl	equ	0xFF6
 34681                           tablat	equ	0xFF5
 34682                           prodh	equ	0xFF4
 34683                           prodl	equ	0xFF3
 34684                           intcon	equ	0xFF2
 34685                           intcon2	equ	0xFF1
 34686                           intcon3	equ	0xFF0
 34687                           indf0	equ	0xFEF
 34688                           postinc0	equ	0xFEE
 34689                           plusw0	equ	0xFEB
 34690                           fsr0h	equ	0xFEA
 34691                           fsr0l	equ	0xFE9
 34692                           wreg	equ	0xFE8
 34693                           indf1	equ	0xFE7
 34694                           postinc1	equ	0xFE6
 34695                           postdec1	equ	0xFE5
 34696                           plusw1	equ	0xFE3
 34697                           fsr1h	equ	0xFE2
 34698                           fsr1l	equ	0xFE1
 34699                           indf2	equ	0xFDF
 34700                           postinc2	equ	0xFDE
 34701                           postdec2	equ	0xFDD
 34702                           plusw2	equ	0xFDB
 34703                           fsr2h	equ	0xFDA
 34704                           fsr2l	equ	0xFD9
 34705                           status	equ	0xFD8
 34706                           
 34707 ;; *************** function _ReadByte *****************
 34708 ;; Defined at:
 34709 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34710 ;; Parameters:    Size  Location     Type
 34711 ;;		None
 34712 ;; Auto vars:     Size  Location     Type
 34713 ;;  Byte            1   29[BANK0 ] unsigned char 
 34714 ;; Return value:  Size  Location     Type
 34715 ;;                  1    wreg      unsigned char 
 34716 ;; Registers used:
 34717 ;;		wreg, status,2
 34718 ;; Tracked objects:
 34719 ;;		On entry : 0/0
 34720 ;;		On exit  : 0/0
 34721 ;;		Unchanged: 0/0
 34722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34727 ;;Total ram usage:        1 bytes
 34728 ;; Hardware stack levels used:    1
 34729 ;; Hardware stack levels required when called:   11
 34730 ;; This function calls:
 34731 ;;		Nothing
 34732 ;; This function is called by:
 34733 ;;		_I2c_ReadData
 34734 ;; This function uses a non-reentrant model
 34735 ;;
 34736                           
 34737                           	psect	text164
 34738  00675C                     __ptext164:
 34739                           	opt stack 0
 34740  00675C                     _ReadByte:
 34741                           	opt stack 14
 34742                           
 34743                           ;i2c_drv.c: 207: UINT8 Byte;
 34744                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 34745                           
 34746                           ;incstack = 0
 34747  00675C  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 34748                           
 34749                           ;i2c_drv.c: 213: return Byte;
 34750  006760  0100               	movlb	0	; () banked
 34751  006762  517D               	movf	ReadByte@Byte& (0+255),w,b
 34752  006764  0012               	return	
 34753  006766                     __end_of_ReadByte:
 34754                           	opt stack 0
 34755                           tosu	equ	0xFFF
 34756                           tosh	equ	0xFFE
 34757                           tosl	equ	0xFFD
 34758                           pclath	equ	0xFFA
 34759                           tblptru	equ	0xFF8
 34760                           tblptrh	equ	0xFF7
 34761                           tblptrl	equ	0xFF6
 34762                           tablat	equ	0xFF5
 34763                           prodh	equ	0xFF4
 34764                           prodl	equ	0xFF3
 34765                           intcon	equ	0xFF2
 34766                           intcon2	equ	0xFF1
 34767                           intcon3	equ	0xFF0
 34768                           indf0	equ	0xFEF
 34769                           postinc0	equ	0xFEE
 34770                           plusw0	equ	0xFEB
 34771                           fsr0h	equ	0xFEA
 34772                           fsr0l	equ	0xFE9
 34773                           wreg	equ	0xFE8
 34774                           indf1	equ	0xFE7
 34775                           postinc1	equ	0xFE6
 34776                           postdec1	equ	0xFE5
 34777                           plusw1	equ	0xFE3
 34778                           fsr1h	equ	0xFE2
 34779                           fsr1l	equ	0xFE1
 34780                           indf2	equ	0xFDF
 34781                           postinc2	equ	0xFDE
 34782                           postdec2	equ	0xFDD
 34783                           plusw2	equ	0xFDB
 34784                           fsr2h	equ	0xFDA
 34785                           fsr2l	equ	0xFD9
 34786                           status	equ	0xFD8
 34787                           
 34788 ;; *************** function _GenerateEvt *****************
 34789 ;; Defined at:
 34790 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34791 ;; Parameters:    Size  Location     Type
 34792 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34793 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34794 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34795 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34796 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34797 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34798 ;; Auto vars:     Size  Location     Type
 34799 ;;  EventStatus     1   31[BANK0 ] enum E7727
 34800 ;; Return value:  Size  Location     Type
 34801 ;;                  1    wreg      enum E7699
 34802 ;; Registers used:
 34803 ;;		wreg, fsr2l, fsr2h, status,2
 34804 ;; Tracked objects:
 34805 ;;		On entry : 0/0
 34806 ;;		On exit  : 0/0
 34807 ;;		Unchanged: 0/0
 34808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34813 ;;Total ram usage:        3 bytes
 34814 ;; Hardware stack levels used:    1
 34815 ;; Hardware stack levels required when called:   11
 34816 ;; This function calls:
 34817 ;;		Nothing
 34818 ;; This function is called by:
 34819 ;;		_I2c_ReadData
 34820 ;;		_CheckModem
 34821 ;;		_TurnOnModem
 34822 ;;		_ConfigureModem
 34823 ;;		_ModemEvtParser
 34824 ;;		_GetSmsSm
 34825 ;;		_Mdm_RequestSmsData
 34826 ;;		_I2cSlv_SendI2cMsg
 34827 ;;		_I2cSlv_ReceiveI2cMsg
 34828 ;;		_RiSm
 34829 ;;		_Mdm_SendSmsData
 34830 ;;		_MdmHttp_InitGprsNetwork
 34831 ;;		_MdmHttp_GetMethod
 34832 ;;		_Alarm
 34833 ;; This function uses a non-reentrant model
 34834 ;;
 34835                           
 34836                           	psect	text165
 34837  00660A                     __ptext165:
 34838                           	opt stack 0
 34839  00660A                     _GenerateEvt:
 34840                           	opt stack 13
 34841                           
 34842                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34843                           
 34844                           ; BSR set to: 0
 34845                           ;incstack = 0
 34846  00660A  0E00               	movlw	0
 34847  00660C  0100               	movlb	0	; () banked
 34848  00660E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 34849                           
 34850                           ; BSR set to: 0
 34851                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34852  006610  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 34853  006614  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 34854  006618  0E02               	movlw	2
 34855  00661A  6EDF               	movwf	indf2,c
 34856                           
 34857                           ; BSR set to: 0
 34858                           ;os_ser.c: 83: EventStatus = EventSent;
 34859  00661C  0E02               	movlw	2
 34860  00661E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 34861  006620  0012               	return	
 34862  006622                     __end_of_GenerateEvt:
 34863                           	opt stack 0
 34864                           tosu	equ	0xFFF
 34865                           tosh	equ	0xFFE
 34866                           tosl	equ	0xFFD
 34867                           pclath	equ	0xFFA
 34868                           tblptru	equ	0xFF8
 34869                           tblptrh	equ	0xFF7
 34870                           tblptrl	equ	0xFF6
 34871                           tablat	equ	0xFF5
 34872                           prodh	equ	0xFF4
 34873                           prodl	equ	0xFF3
 34874                           intcon	equ	0xFF2
 34875                           intcon2	equ	0xFF1
 34876                           intcon3	equ	0xFF0
 34877                           indf0	equ	0xFEF
 34878                           postinc0	equ	0xFEE
 34879                           plusw0	equ	0xFEB
 34880                           fsr0h	equ	0xFEA
 34881                           fsr0l	equ	0xFE9
 34882                           wreg	equ	0xFE8
 34883                           indf1	equ	0xFE7
 34884                           postinc1	equ	0xFE6
 34885                           postdec1	equ	0xFE5
 34886                           plusw1	equ	0xFE3
 34887                           fsr1h	equ	0xFE2
 34888                           fsr1l	equ	0xFE1
 34889                           indf2	equ	0xFDF
 34890                           postinc2	equ	0xFDE
 34891                           postdec2	equ	0xFDD
 34892                           plusw2	equ	0xFDB
 34893                           fsr2h	equ	0xFDA
 34894                           fsr2l	equ	0xFD9
 34895                           status	equ	0xFD8
 34896                           
 34897 ;; *************** function _EnableReceiver *****************
 34898 ;; Defined at:
 34899 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34900 ;; Parameters:    Size  Location     Type
 34901 ;;		None
 34902 ;; Auto vars:     Size  Location     Type
 34903 ;;		None
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  1    wreg      void 
 34906 ;; Registers used:
 34907 ;;		status,2, status,0
 34908 ;; Tracked objects:
 34909 ;;		On entry : 0/0
 34910 ;;		On exit  : 0/0
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34917 ;;Total ram usage:        0 bytes
 34918 ;; Hardware stack levels used:    1
 34919 ;; Hardware stack levels required when called:   11
 34920 ;; This function calls:
 34921 ;;		Nothing
 34922 ;; This function is called by:
 34923 ;;		_I2c_ReadData
 34924 ;; This function uses a non-reentrant model
 34925 ;;
 34926                           
 34927                           	psect	text166
 34928  00679A                     __ptext166:
 34929                           	opt stack 0
 34930  00679A                     _EnableReceiver:
 34931                           	opt stack 14
 34932                           
 34933                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 34934                           
 34935                           ; BSR set to: 0
 34936                           ;incstack = 0
 34937  00679A  8671               	bsf	3953,3,c	;volatile
 34938  00679C  0012               	return		;funcret
 34939  00679E                     __end_of_EnableReceiver:
 34940                           	opt stack 0
 34941                           tosu	equ	0xFFF
 34942                           tosh	equ	0xFFE
 34943                           tosl	equ	0xFFD
 34944                           pclath	equ	0xFFA
 34945                           tblptru	equ	0xFF8
 34946                           tblptrh	equ	0xFF7
 34947                           tblptrl	equ	0xFF6
 34948                           tablat	equ	0xFF5
 34949                           prodh	equ	0xFF4
 34950                           prodl	equ	0xFF3
 34951                           intcon	equ	0xFF2
 34952                           intcon2	equ	0xFF1
 34953                           intcon3	equ	0xFF0
 34954                           indf0	equ	0xFEF
 34955                           postinc0	equ	0xFEE
 34956                           plusw0	equ	0xFEB
 34957                           fsr0h	equ	0xFEA
 34958                           fsr0l	equ	0xFE9
 34959                           wreg	equ	0xFE8
 34960                           indf1	equ	0xFE7
 34961                           postinc1	equ	0xFE6
 34962                           postdec1	equ	0xFE5
 34963                           plusw1	equ	0xFE3
 34964                           fsr1h	equ	0xFE2
 34965                           fsr1l	equ	0xFE1
 34966                           indf2	equ	0xFDF
 34967                           postinc2	equ	0xFDE
 34968                           postdec2	equ	0xFDD
 34969                           plusw2	equ	0xFDB
 34970                           fsr2h	equ	0xFDA
 34971                           fsr2l	equ	0xFD9
 34972                           status	equ	0xFD8
 34973                           
 34974 ;; *************** function _CheckTxStatus *****************
 34975 ;; Defined at:
 34976 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34977 ;; Parameters:    Size  Location     Type
 34978 ;;		None
 34979 ;; Auto vars:     Size  Location     Type
 34980 ;;		None
 34981 ;; Return value:  Size  Location     Type
 34982 ;;                  1    wreg      unsigned char 
 34983 ;; Registers used:
 34984 ;;		wreg, status,2, status,0
 34985 ;; Tracked objects:
 34986 ;;		On entry : 0/0
 34987 ;;		On exit  : 0/0
 34988 ;;		Unchanged: 0/0
 34989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34994 ;;Total ram usage:        0 bytes
 34995 ;; Hardware stack levels used:    1
 34996 ;; Hardware stack levels required when called:   11
 34997 ;; This function calls:
 34998 ;;		Nothing
 34999 ;; This function is called by:
 35000 ;;		_I2c_WriteData
 35001 ;;		_I2c_ReadData
 35002 ;; This function uses a non-reentrant model
 35003 ;;
 35004                           
 35005                           	psect	text167
 35006  006766                     __ptext167:
 35007                           	opt stack 0
 35008  006766                     _CheckTxStatus:
 35009                           	opt stack 14
 35010                           
 35011                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35012                           
 35013                           ;incstack = 0
 35014  006766  4073               	rrncf	3955,w,c	;volatile
 35015  006768  42E8               	rrncf	wreg,f,c
 35016  00676A  0B3F               	andlw	63
 35017  00676C  0B01               	andlw	1
 35018  00676E  0012               	return	
 35019  006770                     __end_of_CheckTxStatus:
 35020                           	opt stack 0
 35021                           tosu	equ	0xFFF
 35022                           tosh	equ	0xFFE
 35023                           tosl	equ	0xFFD
 35024                           pclath	equ	0xFFA
 35025                           tblptru	equ	0xFF8
 35026                           tblptrh	equ	0xFF7
 35027                           tblptrl	equ	0xFF6
 35028                           tablat	equ	0xFF5
 35029                           prodh	equ	0xFF4
 35030                           prodl	equ	0xFF3
 35031                           intcon	equ	0xFF2
 35032                           intcon2	equ	0xFF1
 35033                           intcon3	equ	0xFF0
 35034                           indf0	equ	0xFEF
 35035                           postinc0	equ	0xFEE
 35036                           plusw0	equ	0xFEB
 35037                           fsr0h	equ	0xFEA
 35038                           fsr0l	equ	0xFE9
 35039                           wreg	equ	0xFE8
 35040                           indf1	equ	0xFE7
 35041                           postinc1	equ	0xFE6
 35042                           postdec1	equ	0xFE5
 35043                           plusw1	equ	0xFE3
 35044                           fsr1h	equ	0xFE2
 35045                           fsr1l	equ	0xFE1
 35046                           indf2	equ	0xFDF
 35047                           postinc2	equ	0xFDE
 35048                           postdec2	equ	0xFDD
 35049                           plusw2	equ	0xFDB
 35050                           fsr2h	equ	0xFDA
 35051                           fsr2l	equ	0xFD9
 35052                           status	equ	0xFD8
 35053                           
 35054 ;; *************** function _CheckAckStatus *****************
 35055 ;; Defined at:
 35056 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35057 ;; Parameters:    Size  Location     Type
 35058 ;;		None
 35059 ;; Auto vars:     Size  Location     Type
 35060 ;;		None
 35061 ;; Return value:  Size  Location     Type
 35062 ;;                  1    wreg      unsigned char 
 35063 ;; Registers used:
 35064 ;;		wreg, status,2, status,0
 35065 ;; Tracked objects:
 35066 ;;		On entry : 0/0
 35067 ;;		On exit  : 0/0
 35068 ;;		Unchanged: 0/0
 35069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35074 ;;Total ram usage:        0 bytes
 35075 ;; Hardware stack levels used:    1
 35076 ;; Hardware stack levels required when called:   11
 35077 ;; This function calls:
 35078 ;;		Nothing
 35079 ;; This function is called by:
 35080 ;;		_I2c_WriteData
 35081 ;;		_I2c_ReadData
 35082 ;; This function uses a non-reentrant model
 35083 ;;
 35084                           
 35085                           	psect	text168
 35086  006770                     __ptext168:
 35087                           	opt stack 0
 35088  006770                     _CheckAckStatus:
 35089                           	opt stack 14
 35090                           
 35091                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35092                           
 35093                           ;incstack = 0
 35094  006770  4471               	rlncf	3953,w,c	;volatile
 35095  006772  46E8               	rlncf	wreg,f,c
 35096  006774  0B03               	andlw	3
 35097  006776  0B01               	andlw	1
 35098  006778  0012               	return	
 35099  00677A                     __end_of_CheckAckStatus:
 35100                           	opt stack 0
 35101                           tosu	equ	0xFFF
 35102                           tosh	equ	0xFFE
 35103                           tosl	equ	0xFFD
 35104                           pclath	equ	0xFFA
 35105                           tblptru	equ	0xFF8
 35106                           tblptrh	equ	0xFF7
 35107                           tblptrl	equ	0xFF6
 35108                           tablat	equ	0xFF5
 35109                           prodh	equ	0xFF4
 35110                           prodl	equ	0xFF3
 35111                           intcon	equ	0xFF2
 35112                           intcon2	equ	0xFF1
 35113                           intcon3	equ	0xFF0
 35114                           indf0	equ	0xFEF
 35115                           postinc0	equ	0xFEE
 35116                           plusw0	equ	0xFEB
 35117                           fsr0h	equ	0xFEA
 35118                           fsr0l	equ	0xFE9
 35119                           wreg	equ	0xFE8
 35120                           indf1	equ	0xFE7
 35121                           postinc1	equ	0xFE6
 35122                           postdec1	equ	0xFE5
 35123                           plusw1	equ	0xFE3
 35124                           fsr1h	equ	0xFE2
 35125                           fsr1l	equ	0xFE1
 35126                           indf2	equ	0xFDF
 35127                           postinc2	equ	0xFDE
 35128                           postdec2	equ	0xFDD
 35129                           plusw2	equ	0xFDB
 35130                           fsr2h	equ	0xFDA
 35131                           fsr2l	equ	0xFD9
 35132                           status	equ	0xFD8
 35133                           
 35134 ;; *************** function _LowPriorityIsr *****************
 35135 ;; Defined at:
 35136 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35137 ;; Parameters:    Size  Location     Type
 35138 ;;		None
 35139 ;; Auto vars:     Size  Location     Type
 35140 ;;		None
 35141 ;; Return value:  Size  Location     Type
 35142 ;;                  1    wreg      void 
 35143 ;; Registers used:
 35144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35145 ;; Tracked objects:
 35146 ;;		On entry : 0/0
 35147 ;;		On exit  : 0/0
 35148 ;;		Unchanged: 0/0
 35149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35152 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35153 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35154 ;;Total ram usage:       21 bytes
 35155 ;; Hardware stack levels used:    1
 35156 ;; Hardware stack levels required when called:   10
 35157 ;; This function calls:
 35158 ;;		_Tmr_Tmr2Isr
 35159 ;; This function is called by:
 35160 ;;		Interrupt level 1
 35161 ;; This function uses a non-reentrant model
 35162 ;;
 35163                           
 35164                           	psect	intcodelo
 35165  000018                     __pintcodelo:
 35166                           	opt stack 0
 35167  000018                     _LowPriorityIsr:
 35168                           	opt stack 8
 35169                           
 35170                           ;incstack = 0
 35171  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35172  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35173  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35174  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35175  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35176  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35177  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35178  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35179  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35180  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35181  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35182  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35183  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35184  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35185  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35186  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35187  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35188  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35189  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35190  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35191  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35192  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35193                           
 35194                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35195  00006E  B29E               	btfsc	3998,1,c	;volatile
 35196                           
 35197                           ;irq.c: 259: {
 35198                           ;irq.c: 261: Tmr_Tmr2Isr();
 35199  000070  ECD7  F031         	call	_Tmr_Tmr2Isr	;wreg free
 35200  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35201  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35202  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35203  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35204  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35205  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35206  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35207  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35208  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35209  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35210  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35211  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35212  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35213  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35214  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35215  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35216  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35217  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35218  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35219  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35220  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35221  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35222  0000CA  0010               	retfie	
 35223  0000CC                     __end_of_LowPriorityIsr:
 35224                           	opt stack 0
 35225                           tosu	equ	0xFFF
 35226                           tosh	equ	0xFFE
 35227                           tosl	equ	0xFFD
 35228                           pclatu	equ	0xFFB
 35229                           pclath	equ	0xFFA
 35230                           tblptru	equ	0xFF8
 35231                           tblptrh	equ	0xFF7
 35232                           tblptrl	equ	0xFF6
 35233                           tablat	equ	0xFF5
 35234                           prodh	equ	0xFF4
 35235                           prodl	equ	0xFF3
 35236                           intcon	equ	0xFF2
 35237                           intcon2	equ	0xFF1
 35238                           intcon3	equ	0xFF0
 35239                           indf0	equ	0xFEF
 35240                           postinc0	equ	0xFEE
 35241                           plusw0	equ	0xFEB
 35242                           fsr0h	equ	0xFEA
 35243                           fsr0l	equ	0xFE9
 35244                           wreg	equ	0xFE8
 35245                           indf1	equ	0xFE7
 35246                           postinc1	equ	0xFE6
 35247                           postdec1	equ	0xFE5
 35248                           plusw1	equ	0xFE3
 35249                           fsr1h	equ	0xFE2
 35250                           fsr1l	equ	0xFE1
 35251                           bsr	equ	0xFE0
 35252                           indf2	equ	0xFDF
 35253                           postinc2	equ	0xFDE
 35254                           postdec2	equ	0xFDD
 35255                           plusw2	equ	0xFDB
 35256                           fsr2h	equ	0xFDA
 35257                           fsr2l	equ	0xFD9
 35258                           status	equ	0xFD8
 35259                           
 35260 ;; *************** function _Tmr_Tmr2Isr *****************
 35261 ;; Defined at:
 35262 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35263 ;; Parameters:    Size  Location     Type
 35264 ;;		None
 35265 ;; Auto vars:     Size  Location     Type
 35266 ;;		None
 35267 ;; Return value:  Size  Location     Type
 35268 ;;                  1    wreg      void 
 35269 ;; Registers used:
 35270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35271 ;; Tracked objects:
 35272 ;;		On entry : 0/0
 35273 ;;		On exit  : 0/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35280 ;;Total ram usage:        0 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:    9
 35283 ;; This function calls:
 35284 ;;		Absolute function
 35285 ;;		_Sch_SchmIntService
 35286 ;; This function is called by:
 35287 ;;		_LowPriorityIsr
 35288 ;; This function uses a non-reentrant model
 35289 ;;
 35290                           
 35291                           	psect	text170
 35292  0063AE                     __ptext170:
 35293                           	opt stack 0
 35294  0063AE                     _Tmr_Tmr2Isr:
 35295                           	opt stack 8
 35296                           
 35297                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35298                           
 35299                           ;incstack = 0
 35300  0063AE  929E               	bcf	3998,1,c	;volatile
 35301                           
 35302                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35303  0063B0  0102               	movlb	2	; () banked
 35304  0063B2  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 35305  0063B4  11EA               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35306  0063B6  B4D8               	btfsc	status,2,c
 35307  0063B8  0012               	return	
 35308                           
 35309                           ; BSR set to: 2
 35310                           ;tmr_drv.c: 315: {
 35311                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35312  0063BA  D801               	call	i1u1572_28
 35313  0063BC  0012               	return	
 35314  0063BE                     i1u1572_28:
 35315  0063BE  0005               	push	
 35316  0063C0  6EFA               	movwf	pclath,c
 35317  0063C2  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 35318  0063C4  6EFD               	movwf	tosl,c
 35319  0063C6  51EA               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35320  0063C8  6EFE               	movwf	tosh,c
 35321  0063CA  50F8               	movf	tblptru,w,c
 35322  0063CC  6EFF               	movwf	tosu,c
 35323  0063CE  50FA               	movf	pclath,w,c
 35324  0063D0  0012               	return		;indir
 35325  0063D2                     __end_of_Tmr_Tmr2Isr:
 35326                           	opt stack 0
 35327                           tosu	equ	0xFFF
 35328                           tosh	equ	0xFFE
 35329                           tosl	equ	0xFFD
 35330                           pclatu	equ	0xFFB
 35331                           pclath	equ	0xFFA
 35332                           tblptru	equ	0xFF8
 35333                           tblptrh	equ	0xFF7
 35334                           tblptrl	equ	0xFF6
 35335                           tablat	equ	0xFF5
 35336                           prodh	equ	0xFF4
 35337                           prodl	equ	0xFF3
 35338                           intcon	equ	0xFF2
 35339                           intcon2	equ	0xFF1
 35340                           intcon3	equ	0xFF0
 35341                           indf0	equ	0xFEF
 35342                           postinc0	equ	0xFEE
 35343                           plusw0	equ	0xFEB
 35344                           fsr0h	equ	0xFEA
 35345                           fsr0l	equ	0xFE9
 35346                           wreg	equ	0xFE8
 35347                           indf1	equ	0xFE7
 35348                           postinc1	equ	0xFE6
 35349                           postdec1	equ	0xFE5
 35350                           plusw1	equ	0xFE3
 35351                           fsr1h	equ	0xFE2
 35352                           fsr1l	equ	0xFE1
 35353                           bsr	equ	0xFE0
 35354                           indf2	equ	0xFDF
 35355                           postinc2	equ	0xFDE
 35356                           postdec2	equ	0xFDD
 35357                           plusw2	equ	0xFDB
 35358                           fsr2h	equ	0xFDA
 35359                           fsr2l	equ	0xFD9
 35360                           status	equ	0xFD8
 35361                           
 35362 ;; *************** function _Sch_SchmIntService *****************
 35363 ;; Defined at:
 35364 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35365 ;; Parameters:    Size  Location     Type
 35366 ;;		None
 35367 ;; Auto vars:     Size  Location     Type
 35368 ;;		None
 35369 ;; Return value:  Size  Location     Type
 35370 ;;                  1    wreg      void 
 35371 ;; Registers used:
 35372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35373 ;; Tracked objects:
 35374 ;;		On entry : 0/0
 35375 ;;		On exit  : 0/0
 35376 ;;		Unchanged: 0/0
 35377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35382 ;;Total ram usage:        0 bytes
 35383 ;; Hardware stack levels used:    1
 35384 ;; Hardware stack levels required when called:    8
 35385 ;; This function calls:
 35386 ;;		_OsAlrm_ProcessOsAlarms
 35387 ;;		_UpdateOsCounters
 35388 ;;		_UpdateSchFlag
 35389 ;; This function is called by:
 35390 ;;		_SystemInit
 35391 ;;		_Tmr_Tmr2Isr
 35392 ;; This function uses a non-reentrant model
 35393 ;;
 35394                           
 35395                           	psect	text171
 35396  006714                     __ptext171:
 35397                           	opt stack 0
 35398  006714                     _Sch_SchmIntService:
 35399                           	opt stack 8
 35400                           
 35401                           ;os_sched.c: 217: UpdateSchFlag();
 35402                           
 35403                           ;incstack = 0
 35404  006714  EC9D  F032         	call	_UpdateSchFlag	;wreg free
 35405                           
 35406                           ;os_sched.c: 219: UpdateOsCounters();
 35407  006718  EC7A  F033         	call	_UpdateOsCounters	;wreg free
 35408                           
 35409                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 35410  00671C  EC91  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 35411  006720  0012               	return		;funcret
 35412  006722                     __end_of_Sch_SchmIntService:
 35413                           	opt stack 0
 35414                           tosu	equ	0xFFF
 35415                           tosh	equ	0xFFE
 35416                           tosl	equ	0xFFD
 35417                           pclatu	equ	0xFFB
 35418                           pclath	equ	0xFFA
 35419                           tblptru	equ	0xFF8
 35420                           tblptrh	equ	0xFF7
 35421                           tblptrl	equ	0xFF6
 35422                           tablat	equ	0xFF5
 35423                           prodh	equ	0xFF4
 35424                           prodl	equ	0xFF3
 35425                           intcon	equ	0xFF2
 35426                           intcon2	equ	0xFF1
 35427                           intcon3	equ	0xFF0
 35428                           indf0	equ	0xFEF
 35429                           postinc0	equ	0xFEE
 35430                           plusw0	equ	0xFEB
 35431                           fsr0h	equ	0xFEA
 35432                           fsr0l	equ	0xFE9
 35433                           wreg	equ	0xFE8
 35434                           indf1	equ	0xFE7
 35435                           postinc1	equ	0xFE6
 35436                           postdec1	equ	0xFE5
 35437                           plusw1	equ	0xFE3
 35438                           fsr1h	equ	0xFE2
 35439                           fsr1l	equ	0xFE1
 35440                           bsr	equ	0xFE0
 35441                           indf2	equ	0xFDF
 35442                           postinc2	equ	0xFDE
 35443                           postdec2	equ	0xFDD
 35444                           plusw2	equ	0xFDB
 35445                           fsr2h	equ	0xFDA
 35446                           fsr2l	equ	0xFD9
 35447                           status	equ	0xFD8
 35448                           
 35449 ;; *************** function _UpdateSchFlag *****************
 35450 ;; Defined at:
 35451 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35452 ;; Parameters:    Size  Location     Type
 35453 ;;		None
 35454 ;; Auto vars:     Size  Location     Type
 35455 ;;		None
 35456 ;; Return value:  Size  Location     Type
 35457 ;;                  1    wreg      void 
 35458 ;; Registers used:
 35459 ;;		wreg, status,2, status,0
 35460 ;; Tracked objects:
 35461 ;;		On entry : 0/0
 35462 ;;		On exit  : 0/0
 35463 ;;		Unchanged: 0/0
 35464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35469 ;;Total ram usage:        0 bytes
 35470 ;; Hardware stack levels used:    1
 35471 ;; Hardware stack levels required when called:    4
 35472 ;; This function calls:
 35473 ;;		Nothing
 35474 ;; This function is called by:
 35475 ;;		_Sch_SchmIntService
 35476 ;; This function uses a non-reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text172
 35480  00653A                     __ptext172:
 35481                           	opt stack 0
 35482  00653A                     _UpdateSchFlag:
 35483                           	opt stack 11
 35484                           
 35485                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 35486                           ;os_sched.c: 138: InterruptCounter++;
 35487                           
 35488                           ;incstack = 0
 35489  00653A  0102               	movlb	2	; () banked
 35490  00653C  4BDB               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 35491  00653E  2BDC               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 35492                           
 35493                           ; BSR set to: 2
 35494                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 35495  006540  51DB               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 35496  006542  11DC               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 35497  006544  B4D8               	btfsc	status,2,c
 35498  006546  0012               	return	
 35499                           
 35500                           ; BSR set to: 2
 35501                           ;os_sched.c: 141: {
 35502                           ;os_sched.c: 143: InterruptCounter = 0;
 35503  006548  0E00               	movlw	0
 35504  00654A  6FDC               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 35505  00654C  0E00               	movlw	0
 35506  00654E  6FDB               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 35507                           
 35508                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 35509  006550  0E00               	movlw	0
 35510  006552  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 35511  006554  0012               	return	
 35512  006556                     __end_of_UpdateSchFlag:
 35513                           	opt stack 0
 35514                           tosu	equ	0xFFF
 35515                           tosh	equ	0xFFE
 35516                           tosl	equ	0xFFD
 35517                           pclatu	equ	0xFFB
 35518                           pclath	equ	0xFFA
 35519                           tblptru	equ	0xFF8
 35520                           tblptrh	equ	0xFF7
 35521                           tblptrl	equ	0xFF6
 35522                           tablat	equ	0xFF5
 35523                           prodh	equ	0xFF4
 35524                           prodl	equ	0xFF3
 35525                           intcon	equ	0xFF2
 35526                           intcon2	equ	0xFF1
 35527                           intcon3	equ	0xFF0
 35528                           indf0	equ	0xFEF
 35529                           postinc0	equ	0xFEE
 35530                           plusw0	equ	0xFEB
 35531                           fsr0h	equ	0xFEA
 35532                           fsr0l	equ	0xFE9
 35533                           wreg	equ	0xFE8
 35534                           indf1	equ	0xFE7
 35535                           postinc1	equ	0xFE6
 35536                           postdec1	equ	0xFE5
 35537                           plusw1	equ	0xFE3
 35538                           fsr1h	equ	0xFE2
 35539                           fsr1l	equ	0xFE1
 35540                           bsr	equ	0xFE0
 35541                           indf2	equ	0xFDF
 35542                           postinc2	equ	0xFDE
 35543                           postdec2	equ	0xFDD
 35544                           plusw2	equ	0xFDB
 35545                           fsr2h	equ	0xFDA
 35546                           fsr2l	equ	0xFD9
 35547                           status	equ	0xFD8
 35548                           
 35549 ;; *************** function _UpdateOsCounters *****************
 35550 ;; Defined at:
 35551 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35552 ;; Parameters:    Size  Location     Type
 35553 ;;		None
 35554 ;; Auto vars:     Size  Location     Type
 35555 ;;		None
 35556 ;; Return value:  Size  Location     Type
 35557 ;;                  1    wreg      void 
 35558 ;; Registers used:
 35559 ;;		wreg, status,2, status,0
 35560 ;; Tracked objects:
 35561 ;;		On entry : 0/0
 35562 ;;		On exit  : 0/0
 35563 ;;		Unchanged: 0/0
 35564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35569 ;;Total ram usage:        0 bytes
 35570 ;; Hardware stack levels used:    1
 35571 ;; Hardware stack levels required when called:    4
 35572 ;; This function calls:
 35573 ;;		Nothing
 35574 ;; This function is called by:
 35575 ;;		_Sch_SchmIntService
 35576 ;; This function uses a non-reentrant model
 35577 ;;
 35578                           
 35579                           	psect	text173
 35580  0066F4                     __ptext173:
 35581                           	opt stack 0
 35582  0066F4                     _UpdateOsCounters:
 35583                           	opt stack 11
 35584                           
 35585                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 35586                           
 35587                           ; BSR set to: 2
 35588                           ;incstack = 0
 35589  0066F4  0E01               	movlw	1
 35590  0066F6  0103               	movlb	3	; () banked
 35591  0066F8  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 35592  0066FA  0E00               	movlw	0
 35593  0066FC  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 35594  0066FE  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 35595  006700  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 35596                           
 35597                           ; BSR set to: 3
 35598  006702  0012               	return		;funcret
 35599  006704                     __end_of_UpdateOsCounters:
 35600                           	opt stack 0
 35601                           tosu	equ	0xFFF
 35602                           tosh	equ	0xFFE
 35603                           tosl	equ	0xFFD
 35604                           pclatu	equ	0xFFB
 35605                           pclath	equ	0xFFA
 35606                           tblptru	equ	0xFF8
 35607                           tblptrh	equ	0xFF7
 35608                           tblptrl	equ	0xFF6
 35609                           tablat	equ	0xFF5
 35610                           prodh	equ	0xFF4
 35611                           prodl	equ	0xFF3
 35612                           intcon	equ	0xFF2
 35613                           intcon2	equ	0xFF1
 35614                           intcon3	equ	0xFF0
 35615                           indf0	equ	0xFEF
 35616                           postinc0	equ	0xFEE
 35617                           plusw0	equ	0xFEB
 35618                           fsr0h	equ	0xFEA
 35619                           fsr0l	equ	0xFE9
 35620                           wreg	equ	0xFE8
 35621                           indf1	equ	0xFE7
 35622                           postinc1	equ	0xFE6
 35623                           postdec1	equ	0xFE5
 35624                           plusw1	equ	0xFE3
 35625                           fsr1h	equ	0xFE2
 35626                           fsr1l	equ	0xFE1
 35627                           bsr	equ	0xFE0
 35628                           indf2	equ	0xFDF
 35629                           postinc2	equ	0xFDE
 35630                           postdec2	equ	0xFDD
 35631                           plusw2	equ	0xFDB
 35632                           fsr2h	equ	0xFDA
 35633                           fsr2l	equ	0xFD9
 35634                           status	equ	0xFD8
 35635                           
 35636 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 35637 ;; Defined at:
 35638 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35639 ;; Parameters:    Size  Location     Type
 35640 ;;		None
 35641 ;; Auto vars:     Size  Location     Type
 35642 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 35643 ;; Return value:  Size  Location     Type
 35644 ;;                  1    wreg      void 
 35645 ;; Registers used:
 35646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35647 ;; Tracked objects:
 35648 ;;		On entry : 0/0
 35649 ;;		On exit  : 0/0
 35650 ;;		Unchanged: 0/0
 35651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35654 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35655 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35656 ;;Total ram usage:       10 bytes
 35657 ;; Hardware stack levels used:    1
 35658 ;; Hardware stack levels required when called:    7
 35659 ;; This function calls:
 35660 ;;		_I2cDummyTx
 35661 ;;		_OsAlrm_ClearOsAlarm
 35662 ;;		i1___wmul
 35663 ;; This function is called by:
 35664 ;;		_Sch_SchmIntService
 35665 ;; This function uses a non-reentrant model
 35666 ;;
 35667                           
 35668                           	psect	text174
 35669  002522                     __ptext174:
 35670                           	opt stack 0
 35671  002522                     _OsAlrm_ProcessOsAlarms:
 35672                           	opt stack 8
 35673                           
 35674                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 35675                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 35676                           
 35677                           ; BSR set to: 3
 35678                           ;incstack = 0
 35679  002522  0E00               	movlw	0
 35680  002524  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 35681  002526  0E00               	movlw	0
 35682  002528  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 35683  00252A  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 35684  00252C  E105               	bnz	i1u1536_20
 35685  00252E  0E14               	movlw	20
 35686  002530  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 35687  002532  B0D8               	btfsc	status,0,c
 35688  002534  0012               	return	
 35689  002536  D001               	goto	i1l742
 35690  002538                     i1u1536_20:
 35691  002538  0012               	return	
 35692  00253A                     i1l742:
 35693                           
 35694                           ;os_alarms.c: 121: {
 35695                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 35696  00253A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35697  00253E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35698  002542  0E00               	movlw	0
 35699  002544  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35700  002546  0E0B               	movlw	11
 35701  002548  6E1B               	movwf	i1___wmul@multiplicand,c
 35702  00254A  EC8E  F031         	call	i1___wmul	;wreg free
 35703  00254E  0E00               	movlw	low _OsAlarms
 35704  002550  2419               	addwf	?i1___wmul,w,c
 35705  002552  6ED9               	movwf	fsr2l,c
 35706  002554  0E06               	movlw	high _OsAlarms
 35707  002556  201A               	addwfc	?i1___wmul+1,w,c
 35708  002558  6EDA               	movwf	fsr2h,c
 35709  00255A  04DE               	decf	postinc2,w,c
 35710  00255C  A4D8               	btfss	status,2,c
 35711  00255E  D086               	goto	i1u1540_29
 35712                           
 35713                           ;os_alarms.c: 124: {
 35714                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 35715  002560  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35716  002564  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35717  002568  0E00               	movlw	0
 35718  00256A  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35719  00256C  0E0B               	movlw	11
 35720  00256E  6E1B               	movwf	i1___wmul@multiplicand,c
 35721  002570  EC8E  F031         	call	i1___wmul	;wreg free
 35722  002574  0E01               	movlw	1
 35723  002576  2619               	addwf	?i1___wmul,f,c
 35724  002578  0E00               	movlw	0
 35725  00257A  221A               	addwfc	?i1___wmul+1,f,c
 35726  00257C  0E00               	movlw	low _OsAlarms
 35727  00257E  2419               	addwf	?i1___wmul,w,c
 35728  002580  6ED9               	movwf	fsr2l,c
 35729  002582  0E06               	movlw	high _OsAlarms
 35730  002584  201A               	addwfc	?i1___wmul+1,w,c
 35731  002586  6EDA               	movwf	fsr2h,c
 35732  002588  2ADE               	incf	postinc2,f,c
 35733  00258A  0E00               	movlw	0
 35734  00258C  22DE               	addwfc	postinc2,f,c
 35735  00258E  22DE               	addwfc	postinc2,f,c
 35736  002590  22DE               	addwfc	postinc2,f,c
 35737                           
 35738                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 35739  002592  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35740  002596  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35741  00259A  0E00               	movlw	0
 35742  00259C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35743  00259E  0E0B               	movlw	11
 35744  0025A0  6E1B               	movwf	i1___wmul@multiplicand,c
 35745  0025A2  EC8E  F031         	call	i1___wmul	;wreg free
 35746  0025A6  0E05               	movlw	5
 35747  0025A8  2619               	addwf	?i1___wmul,f,c
 35748  0025AA  0E00               	movlw	0
 35749  0025AC  221A               	addwfc	?i1___wmul+1,f,c
 35750  0025AE  0E00               	movlw	low _OsAlarms
 35751  0025B0  2419               	addwf	?i1___wmul,w,c
 35752  0025B2  6ED9               	movwf	fsr2l,c
 35753  0025B4  0E06               	movlw	high _OsAlarms
 35754  0025B6  201A               	addwfc	?i1___wmul+1,w,c
 35755  0025B8  6EDA               	movwf	fsr2h,c
 35756  0025BA  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35757  0025BE  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35758  0025C2  0E00               	movlw	0
 35759  0025C4  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35760  0025C6  0E0B               	movlw	11
 35761  0025C8  6E1B               	movwf	i1___wmul@multiplicand,c
 35762  0025CA  EC8E  F031         	call	i1___wmul	;wreg free
 35763  0025CE  0E01               	movlw	1
 35764  0025D0  2619               	addwf	?i1___wmul,f,c
 35765  0025D2  0E00               	movlw	0
 35766  0025D4  221A               	addwfc	?i1___wmul+1,f,c
 35767  0025D6  0E00               	movlw	low _OsAlarms
 35768  0025D8  2419               	addwf	?i1___wmul,w,c
 35769  0025DA  6EE1               	movwf	fsr1l,c
 35770  0025DC  0E06               	movlw	high _OsAlarms
 35771  0025DE  201A               	addwfc	?i1___wmul+1,w,c
 35772  0025E0  6EE2               	movwf	fsr1h,c
 35773  0025E2  50DE               	movf	postinc2,w,c
 35774  0025E4  5CE6               	subwf	postinc1,w,c
 35775  0025E6  50DE               	movf	postinc2,w,c
 35776  0025E8  58E6               	subwfb	postinc1,w,c
 35777  0025EA  50DE               	movf	postinc2,w,c
 35778  0025EC  58E6               	subwfb	postinc1,w,c
 35779  0025EE  50DE               	movf	postinc2,w,c
 35780  0025F0  58E6               	subwfb	postinc1,w,c
 35781  0025F2  A0D8               	btfss	status,0,c
 35782  0025F4  D03B               	goto	i1u1540_29
 35783                           
 35784                           ;os_alarms.c: 129: {
 35785                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 35786  0025F6  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 35787  0025F8  EC62  F02B         	call	_OsAlrm_ClearOsAlarm
 35788                           
 35789                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 35790  0025FC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35791  002600  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35792  002604  0E00               	movlw	0
 35793  002606  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35794  002608  0E0B               	movlw	11
 35795  00260A  6E1B               	movwf	i1___wmul@multiplicand,c
 35796  00260C  EC8E  F031         	call	i1___wmul	;wreg free
 35797  002610  0E09               	movlw	9
 35798  002612  2619               	addwf	?i1___wmul,f,c
 35799  002614  0E00               	movlw	0
 35800  002616  221A               	addwfc	?i1___wmul+1,f,c
 35801  002618  0E00               	movlw	low _OsAlarms
 35802  00261A  2419               	addwf	?i1___wmul,w,c
 35803  00261C  6ED9               	movwf	fsr2l,c
 35804  00261E  0E06               	movlw	high _OsAlarms
 35805  002620  201A               	addwfc	?i1___wmul+1,w,c
 35806  002622  6EDA               	movwf	fsr2h,c
 35807  002624  50DE               	movf	postinc2,w,c
 35808  002626  10DE               	iorwf	postinc2,w,c
 35809  002628  B4D8               	btfsc	status,2,c
 35810  00262A  D020               	goto	i1u1540_29
 35811                           
 35812                           ;os_alarms.c: 134: {
 35813                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 35814  00262C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35815  002630  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35816  002634  0E00               	movlw	0
 35817  002636  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35818  002638  0E0B               	movlw	11
 35819  00263A  6E1B               	movwf	i1___wmul@multiplicand,c
 35820  00263C  EC8E  F031         	call	i1___wmul	;wreg free
 35821  002640  0E09               	movlw	9
 35822  002642  2619               	addwf	?i1___wmul,f,c
 35823  002644  0E00               	movlw	0
 35824  002646  221A               	addwfc	?i1___wmul+1,f,c
 35825  002648  0E00               	movlw	low _OsAlarms
 35826  00264A  2419               	addwf	?i1___wmul,w,c
 35827  00264C  6ED9               	movwf	fsr2l,c
 35828  00264E  0E06               	movlw	high _OsAlarms
 35829  002650  201A               	addwfc	?i1___wmul+1,w,c
 35830  002652  6EDA               	movwf	fsr2h,c
 35831  002654  D801               	call	i1u1540_28
 35832  002656  D00A               	goto	i1u1540_29
 35833  002658                     i1u1540_28:
 35834  002658  0005               	push	
 35835  00265A  6EFA               	movwf	pclath,c
 35836  00265C  50DE               	movf	postinc2,w,c
 35837  00265E  6EFD               	movwf	tosl,c
 35838  002660  50DE               	movf	postinc2,w,c
 35839  002662  6EFE               	movwf	tosh,c
 35840  002664  50F8               	movf	tblptru,w,c
 35841  002666  6EFF               	movwf	tosu,c
 35842  002668  50FA               	movf	pclath,w,c
 35843  00266A  0012               	return		;indir
 35844  00266C                     i1u1540_29:
 35845  00266C  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 35846  00266E  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 35847  002670  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 35848  002672  E101               	bnz	i1l747
 35849  002674  D75C               	goto	L77
 35850  002676                     i1l747:
 35851  002676  0012               	return		;funcret
 35852  002678                     __end_of_OsAlrm_ProcessOsAlarms:
 35853                           	opt stack 0
 35854                           tosu	equ	0xFFF
 35855                           tosh	equ	0xFFE
 35856                           tosl	equ	0xFFD
 35857                           pclatu	equ	0xFFB
 35858                           pclath	equ	0xFFA
 35859                           tblptru	equ	0xFF8
 35860                           tblptrh	equ	0xFF7
 35861                           tblptrl	equ	0xFF6
 35862                           tablat	equ	0xFF5
 35863                           prodh	equ	0xFF4
 35864                           prodl	equ	0xFF3
 35865                           intcon	equ	0xFF2
 35866                           intcon2	equ	0xFF1
 35867                           intcon3	equ	0xFF0
 35868                           indf0	equ	0xFEF
 35869                           postinc0	equ	0xFEE
 35870                           plusw0	equ	0xFEB
 35871                           fsr0h	equ	0xFEA
 35872                           fsr0l	equ	0xFE9
 35873                           wreg	equ	0xFE8
 35874                           indf1	equ	0xFE7
 35875                           postinc1	equ	0xFE6
 35876                           postdec1	equ	0xFE5
 35877                           plusw1	equ	0xFE3
 35878                           fsr1h	equ	0xFE2
 35879                           fsr1l	equ	0xFE1
 35880                           bsr	equ	0xFE0
 35881                           indf2	equ	0xFDF
 35882                           postinc2	equ	0xFDE
 35883                           postdec2	equ	0xFDD
 35884                           plusw2	equ	0xFDB
 35885                           fsr2h	equ	0xFDA
 35886                           fsr2l	equ	0xFD9
 35887                           status	equ	0xFD8
 35888                           
 35889 ;; *************** function i1___wmul *****************
 35890 ;; Defined at:
 35891 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 35892 ;; Parameters:    Size  Location     Type
 35893 ;;  multiplier      2   24[COMRAM] unsigned int 
 35894 ;;  multiplicand    2   26[COMRAM] unsigned int 
 35895 ;; Auto vars:     Size  Location     Type
 35896 ;;  __wmul          2   28[COMRAM] unsigned int 
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  2   24[COMRAM] unsigned int 
 35899 ;; Registers used:
 35900 ;;		wreg, status,2, status,0, prodl, prodh
 35901 ;; Tracked objects:
 35902 ;;		On entry : 0/0
 35903 ;;		On exit  : 0/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35910 ;;Total ram usage:        6 bytes
 35911 ;; Hardware stack levels used:    1
 35912 ;; Hardware stack levels required when called:    4
 35913 ;; This function calls:
 35914 ;;		Nothing
 35915 ;; This function is called by:
 35916 ;;		_OsAlrm_ProcessOsAlarms
 35917 ;; This function uses a non-reentrant model
 35918 ;;
 35919                           
 35920                           	psect	text175
 35921  00631C                     __ptext175:
 35922                           	opt stack 0
 35923  00631C                     i1___wmul:
 35924                           	opt stack 10
 35925                           
 35926                           ;incstack = 0
 35927  00631C  5019               	movf	i1___wmul@multiplier,w,c
 35928  00631E  021B               	mulwf	i1___wmul@multiplicand,c
 35929  006320  CFF3 F01D          	movff	prodl,i1___wmul@product
 35930  006324  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 35931  006328  5019               	movf	i1___wmul@multiplier,w,c
 35932  00632A  021C               	mulwf	i1___wmul@multiplicand+1,c
 35933  00632C  50F3               	movf	prodl,w,c
 35934  00632E  261E               	addwf	i1___wmul@product+1,f,c
 35935  006330  501A               	movf	i1___wmul@multiplier+1,w,c
 35936  006332  021B               	mulwf	i1___wmul@multiplicand,c
 35937  006334  50F3               	movf	prodl,w,c
 35938  006336  261E               	addwf	i1___wmul@product+1,f,c
 35939  006338  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 35940  00633C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 35941  006340  0012               	return	
 35942  006342                     __end_ofi1___wmul:
 35943                           	opt stack 0
 35944                           tosu	equ	0xFFF
 35945                           tosh	equ	0xFFE
 35946                           tosl	equ	0xFFD
 35947                           pclatu	equ	0xFFB
 35948                           pclath	equ	0xFFA
 35949                           tblptru	equ	0xFF8
 35950                           tblptrh	equ	0xFF7
 35951                           tblptrl	equ	0xFF6
 35952                           tablat	equ	0xFF5
 35953                           prodh	equ	0xFF4
 35954                           prodl	equ	0xFF3
 35955                           intcon	equ	0xFF2
 35956                           intcon2	equ	0xFF1
 35957                           intcon3	equ	0xFF0
 35958                           indf0	equ	0xFEF
 35959                           postinc0	equ	0xFEE
 35960                           plusw0	equ	0xFEB
 35961                           fsr0h	equ	0xFEA
 35962                           fsr0l	equ	0xFE9
 35963                           wreg	equ	0xFE8
 35964                           indf1	equ	0xFE7
 35965                           postinc1	equ	0xFE6
 35966                           postdec1	equ	0xFE5
 35967                           plusw1	equ	0xFE3
 35968                           fsr1h	equ	0xFE2
 35969                           fsr1l	equ	0xFE1
 35970                           bsr	equ	0xFE0
 35971                           indf2	equ	0xFDF
 35972                           postinc2	equ	0xFDE
 35973                           postdec2	equ	0xFDD
 35974                           plusw2	equ	0xFDB
 35975                           fsr2h	equ	0xFDA
 35976                           fsr2l	equ	0xFD9
 35977                           status	equ	0xFD8
 35978                           
 35979 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 35980 ;; Defined at:
 35981 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35982 ;; Parameters:    Size  Location     Type
 35983 ;;  OsAlarmId       1    wreg     unsigned char 
 35984 ;; Auto vars:     Size  Location     Type
 35985 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 35986 ;; Return value:  Size  Location     Type
 35987 ;;                  1    wreg      void 
 35988 ;; Registers used:
 35989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35990 ;; Tracked objects:
 35991 ;;		On entry : 0/0
 35992 ;;		On exit  : 0/0
 35993 ;;		Unchanged: 0/0
 35994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35999 ;;Total ram usage:        1 bytes
 36000 ;; Hardware stack levels used:    1
 36001 ;; Hardware stack levels required when called:    4
 36002 ;; This function calls:
 36003 ;;		Nothing
 36004 ;; This function is called by:
 36005 ;;		_OsAlrm_ProcessOsAlarms
 36006 ;; This function uses a non-reentrant model
 36007 ;;
 36008                           
 36009                           	psect	text176
 36010  0056C4                     __ptext176:
 36011                           	opt stack 0
 36012  0056C4                     _OsAlrm_ClearOsAlarm:
 36013                           	opt stack 10
 36014                           
 36015                           ;incstack = 0
 36016                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36017  0056C4  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36018                           
 36019                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36020  0056C6  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36021  0056C8  0D0B               	mullw	11
 36022  0056CA  0E00               	movlw	low _OsAlarms
 36023  0056CC  24F3               	addwf	prodl,w,c
 36024  0056CE  6ED9               	movwf	fsr2l,c
 36025  0056D0  0E06               	movlw	high _OsAlarms
 36026  0056D2  20F4               	addwfc	prodh,w,c
 36027  0056D4  6EDA               	movwf	fsr2h,c
 36028  0056D6  0E00               	movlw	0
 36029  0056D8  6EDF               	movwf	indf2,c
 36030                           
 36031                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36032  0056DA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36033  0056DC  0D0B               	mullw	11
 36034  0056DE  0E01               	movlw	1
 36035  0056E0  26F3               	addwf	prodl,f,c
 36036  0056E2  0E00               	movlw	0
 36037  0056E4  22F4               	addwfc	prodh,f,c
 36038  0056E6  0E00               	movlw	low _OsAlarms
 36039  0056E8  24F3               	addwf	prodl,w,c
 36040  0056EA  6ED9               	movwf	fsr2l,c
 36041  0056EC  0E06               	movlw	high _OsAlarms
 36042  0056EE  20F4               	addwfc	prodh,w,c
 36043  0056F0  6EDA               	movwf	fsr2h,c
 36044  0056F2  6ADE               	clrf	postinc2,c
 36045  0056F4  6ADE               	clrf	postinc2,c
 36046  0056F6  6ADE               	clrf	postinc2,c
 36047  0056F8  6ADD               	clrf	postdec2,c
 36048                           
 36049                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36050  0056FA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36051  0056FC  0D0B               	mullw	11
 36052  0056FE  0E05               	movlw	5
 36053  005700  26F3               	addwf	prodl,f,c
 36054  005702  0E00               	movlw	0
 36055  005704  22F4               	addwfc	prodh,f,c
 36056  005706  0E00               	movlw	low _OsAlarms
 36057  005708  24F3               	addwf	prodl,w,c
 36058  00570A  6ED9               	movwf	fsr2l,c
 36059  00570C  0E06               	movlw	high _OsAlarms
 36060  00570E  20F4               	addwfc	prodh,w,c
 36061  005710  6EDA               	movwf	fsr2h,c
 36062  005712  6ADE               	clrf	postinc2,c
 36063  005714  6ADE               	clrf	postinc2,c
 36064  005716  6ADE               	clrf	postinc2,c
 36065  005718  6ADD               	clrf	postdec2,c
 36066  00571A  0012               	return		;funcret
 36067  00571C                     __end_of_OsAlrm_ClearOsAlarm:
 36068                           	opt stack 0
 36069                           tosu	equ	0xFFF
 36070                           tosh	equ	0xFFE
 36071                           tosl	equ	0xFFD
 36072                           pclatu	equ	0xFFB
 36073                           pclath	equ	0xFFA
 36074                           tblptru	equ	0xFF8
 36075                           tblptrh	equ	0xFF7
 36076                           tblptrl	equ	0xFF6
 36077                           tablat	equ	0xFF5
 36078                           prodh	equ	0xFF4
 36079                           prodl	equ	0xFF3
 36080                           intcon	equ	0xFF2
 36081                           intcon2	equ	0xFF1
 36082                           intcon3	equ	0xFF0
 36083                           indf0	equ	0xFEF
 36084                           postinc0	equ	0xFEE
 36085                           plusw0	equ	0xFEB
 36086                           fsr0h	equ	0xFEA
 36087                           fsr0l	equ	0xFE9
 36088                           wreg	equ	0xFE8
 36089                           indf1	equ	0xFE7
 36090                           postinc1	equ	0xFE6
 36091                           postdec1	equ	0xFE5
 36092                           plusw1	equ	0xFE3
 36093                           fsr1h	equ	0xFE2
 36094                           fsr1l	equ	0xFE1
 36095                           bsr	equ	0xFE0
 36096                           indf2	equ	0xFDF
 36097                           postinc2	equ	0xFDE
 36098                           postdec2	equ	0xFDD
 36099                           plusw2	equ	0xFDB
 36100                           fsr2h	equ	0xFDA
 36101                           fsr2l	equ	0xFD9
 36102                           status	equ	0xFD8
 36103                           
 36104 ;; *************** function _I2cDummyTx *****************
 36105 ;; Defined at:
 36106 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36107 ;; Parameters:    Size  Location     Type
 36108 ;;		None
 36109 ;; Auto vars:     Size  Location     Type
 36110 ;;		None
 36111 ;; Return value:  Size  Location     Type
 36112 ;;                  1    wreg      void 
 36113 ;; Registers used:
 36114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36115 ;; Tracked objects:
 36116 ;;		On entry : 0/0
 36117 ;;		On exit  : 0/0
 36118 ;;		Unchanged: 0/0
 36119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36124 ;;Total ram usage:        0 bytes
 36125 ;; Hardware stack levels used:    1
 36126 ;; Hardware stack levels required when called:    6
 36127 ;; This function calls:
 36128 ;;		i1_I2cSlv_SendI2cMsg
 36129 ;; This function is called by:
 36130 ;;		_I2cSlv_MainTask
 36131 ;;		_OsAlrm_ProcessOsAlarms
 36132 ;; This function uses a non-reentrant model
 36133 ;;
 36134                           
 36135                           	psect	text177
 36136  006556                     __ptext177:
 36137                           	opt stack 0
 36138  006556                     _I2cDummyTx:
 36139                           	opt stack 8
 36140                           
 36141                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36142                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36143                           
 36144                           ;incstack = 0
 36145  006556  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36146  006558  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36147  00655A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36148  00655C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36149  00655E  0E00               	movlw	0
 36150  006560  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36151  006562  0E01               	movlw	1
 36152  006564  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36153  006566  ECFA  F02F         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36154                           
 36155                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36156  00656A  0E01               	movlw	1
 36157  00656C  0101               	movlb	1	; () banked
 36158  00656E  6FE8               	movwf	_I2cBusStatus& (0+255),b
 36159                           
 36160                           ; BSR set to: 1
 36161  006570  0012               	return		;funcret
 36162  006572                     __end_of_I2cDummyTx:
 36163                           	opt stack 0
 36164                           tosu	equ	0xFFF
 36165                           tosh	equ	0xFFE
 36166                           tosl	equ	0xFFD
 36167                           pclatu	equ	0xFFB
 36168                           pclath	equ	0xFFA
 36169                           tblptru	equ	0xFF8
 36170                           tblptrh	equ	0xFF7
 36171                           tblptrl	equ	0xFF6
 36172                           tablat	equ	0xFF5
 36173                           prodh	equ	0xFF4
 36174                           prodl	equ	0xFF3
 36175                           intcon	equ	0xFF2
 36176                           intcon2	equ	0xFF1
 36177                           intcon3	equ	0xFF0
 36178                           indf0	equ	0xFEF
 36179                           postinc0	equ	0xFEE
 36180                           plusw0	equ	0xFEB
 36181                           fsr0h	equ	0xFEA
 36182                           fsr0l	equ	0xFE9
 36183                           wreg	equ	0xFE8
 36184                           indf1	equ	0xFE7
 36185                           postinc1	equ	0xFE6
 36186                           postdec1	equ	0xFE5
 36187                           plusw1	equ	0xFE3
 36188                           fsr1h	equ	0xFE2
 36189                           fsr1l	equ	0xFE1
 36190                           bsr	equ	0xFE0
 36191                           indf2	equ	0xFDF
 36192                           postinc2	equ	0xFDE
 36193                           postdec2	equ	0xFDD
 36194                           plusw2	equ	0xFDB
 36195                           fsr2h	equ	0xFDA
 36196                           fsr2l	equ	0xFD9
 36197                           status	equ	0xFD8
 36198                           
 36199 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36200 ;; Defined at:
 36201 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36202 ;; Parameters:    Size  Location     Type
 36203 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36204 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36205 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36206 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36207 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36208 ;; Auto vars:     Size  Location     Type
 36209 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36210 ;; Return value:  Size  Location     Type
 36211 ;;                  1    wreg      unsigned char 
 36212 ;; Registers used:
 36213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36214 ;; Tracked objects:
 36215 ;;		On entry : 0/0
 36216 ;;		On exit  : 0/0
 36217 ;;		Unchanged: 0/0
 36218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36222 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36223 ;;Total ram usage:        5 bytes
 36224 ;; Hardware stack levels used:    1
 36225 ;; Hardware stack levels required when called:    5
 36226 ;; This function calls:
 36227 ;;		i1_GenerateEvt
 36228 ;; This function is called by:
 36229 ;;		_I2cDummyTx
 36230 ;; This function uses a non-reentrant model
 36231 ;;
 36232                           
 36233                           	psect	text178
 36234  005FF4                     __ptext178:
 36235                           	opt stack 0
 36236  005FF4                     i1_I2cSlv_SendI2cMsg:
 36237                           	opt stack 8
 36238                           
 36239                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36240                           
 36241                           ; BSR set to: 1
 36242                           ;incstack = 0
 36243  005FF4  0E00               	movlw	0
 36244  005FF6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36245                           
 36246                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36247  005FF8  0100               	movlb	0	; () banked
 36248  005FFA  05CE               	decf	_I2cComSts& (0+255),w,b
 36249  005FFC  B4D8               	btfsc	status,2,c
 36250  005FFE  D014               	goto	i1l1409
 36251                           
 36252                           ; BSR set to: 0
 36253                           ;i2c_slv.c: 257: {
 36254                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36255  006000  C01E  F399         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36256                           
 36257                           ; BSR set to: 0
 36258                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36259  006004  0E00               	movlw	0
 36260  006006  0103               	movlb	3	; () banked
 36261  006008  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 36262                           
 36263                           ; BSR set to: 3
 36264                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36265  00600A  C01F  F39D         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36266                           
 36267                           ; BSR set to: 3
 36268                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36269  00600E  C01C  F39B         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36270  006012  C01D  F39C         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36271                           
 36272                           ; BSR set to: 3
 36273                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36274  006016  0ED8               	movlw	low _I2cWriteDataEvt
 36275  006018  6E19               	movwf	i1GenerateEvt@Event,c
 36276  00601A  0E00               	movlw	high _I2cWriteDataEvt
 36277  00601C  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36278  00601E  EC27  F033         	call	i1_GenerateEvt	;wreg free
 36279                           
 36280                           ;i2c_slv.c: 267: TxSts = 1u;
 36281  006022  0E01               	movlw	1
 36282  006024  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36283                           
 36284                           ;i2c_slv.c: 268: }
 36285  006026  0012               	return	
 36286  006028                     i1l1409:
 36287                           
 36288                           ;i2c_slv.c: 269: else
 36289                           ;i2c_slv.c: 270: {
 36290                           ;i2c_slv.c: 272: TxSts = 0u;
 36291  006028  0E00               	movlw	0
 36292  00602A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36293  00602C  0012               	return	
 36294  00602E                     __end_ofi1_I2cSlv_SendI2cMsg:
 36295                           	opt stack 0
 36296                           tosu	equ	0xFFF
 36297                           tosh	equ	0xFFE
 36298                           tosl	equ	0xFFD
 36299                           pclatu	equ	0xFFB
 36300                           pclath	equ	0xFFA
 36301                           tblptru	equ	0xFF8
 36302                           tblptrh	equ	0xFF7
 36303                           tblptrl	equ	0xFF6
 36304                           tablat	equ	0xFF5
 36305                           prodh	equ	0xFF4
 36306                           prodl	equ	0xFF3
 36307                           intcon	equ	0xFF2
 36308                           intcon2	equ	0xFF1
 36309                           intcon3	equ	0xFF0
 36310                           indf0	equ	0xFEF
 36311                           postinc0	equ	0xFEE
 36312                           plusw0	equ	0xFEB
 36313                           fsr0h	equ	0xFEA
 36314                           fsr0l	equ	0xFE9
 36315                           wreg	equ	0xFE8
 36316                           indf1	equ	0xFE7
 36317                           postinc1	equ	0xFE6
 36318                           postdec1	equ	0xFE5
 36319                           plusw1	equ	0xFE3
 36320                           fsr1h	equ	0xFE2
 36321                           fsr1l	equ	0xFE1
 36322                           bsr	equ	0xFE0
 36323                           indf2	equ	0xFDF
 36324                           postinc2	equ	0xFDE
 36325                           postdec2	equ	0xFDD
 36326                           plusw2	equ	0xFDB
 36327                           fsr2h	equ	0xFDA
 36328                           fsr2l	equ	0xFD9
 36329                           status	equ	0xFD8
 36330                           
 36331 ;; *************** function i1_GenerateEvt *****************
 36332 ;; Defined at:
 36333 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36334 ;; Parameters:    Size  Location     Type
 36335 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36336 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36337 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36338 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36339 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36340 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36341 ;; Auto vars:     Size  Location     Type
 36342 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36343 ;; Return value:  Size  Location     Type
 36344 ;;                  1    wreg      enum E7699
 36345 ;; Registers used:
 36346 ;;		wreg, fsr2l, fsr2h, status,2
 36347 ;; Tracked objects:
 36348 ;;		On entry : 0/0
 36349 ;;		On exit  : 0/0
 36350 ;;		Unchanged: 0/0
 36351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36356 ;;Total ram usage:        3 bytes
 36357 ;; Hardware stack levels used:    1
 36358 ;; Hardware stack levels required when called:    4
 36359 ;; This function calls:
 36360 ;;		Nothing
 36361 ;; This function is called by:
 36362 ;;		i1_I2cSlv_SendI2cMsg
 36363 ;; This function uses a non-reentrant model
 36364 ;;
 36365                           
 36366                           	psect	text179
 36367  00664E                     __ptext179:
 36368                           	opt stack 0
 36369  00664E                     i1_GenerateEvt:
 36370                           	opt stack 8
 36371                           
 36372                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36373                           
 36374                           ;incstack = 0
 36375  00664E  0E00               	movlw	0
 36376  006650  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36377                           
 36378                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36379  006652  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36380  006656  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36381  00665A  0E02               	movlw	2
 36382  00665C  6EDF               	movwf	indf2,c
 36383                           
 36384                           ;os_ser.c: 83: EventStatus = EventSent;
 36385  00665E  0E02               	movlw	2
 36386  006660  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36387  006662  0012               	return	
 36388  006664                     __end_ofi1_GenerateEvt:
 36389                           	opt stack 0
 36390                           tosu	equ	0xFFF
 36391                           tosh	equ	0xFFE
 36392                           tosl	equ	0xFFD
 36393                           pclatu	equ	0xFFB
 36394                           pclath	equ	0xFFA
 36395                           tblptru	equ	0xFF8
 36396                           tblptrh	equ	0xFF7
 36397                           tblptrl	equ	0xFF6
 36398                           tablat	equ	0xFF5
 36399                           prodh	equ	0xFF4
 36400                           prodl	equ	0xFF3
 36401                           intcon	equ	0xFF2
 36402                           intcon2	equ	0xFF1
 36403                           intcon3	equ	0xFF0
 36404                           indf0	equ	0xFEF
 36405                           postinc0	equ	0xFEE
 36406                           plusw0	equ	0xFEB
 36407                           fsr0h	equ	0xFEA
 36408                           fsr0l	equ	0xFE9
 36409                           wreg	equ	0xFE8
 36410                           indf1	equ	0xFE7
 36411                           postinc1	equ	0xFE6
 36412                           postdec1	equ	0xFE5
 36413                           plusw1	equ	0xFE3
 36414                           fsr1h	equ	0xFE2
 36415                           fsr1l	equ	0xFE1
 36416                           bsr	equ	0xFE0
 36417                           indf2	equ	0xFDF
 36418                           postinc2	equ	0xFDE
 36419                           postdec2	equ	0xFDD
 36420                           plusw2	equ	0xFDB
 36421                           fsr2h	equ	0xFDA
 36422                           fsr2l	equ	0xFD9
 36423                           status	equ	0xFD8
 36424                           
 36425 ;; *************** function _HighPriorityIsr *****************
 36426 ;; Defined at:
 36427 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36428 ;; Parameters:    Size  Location     Type
 36429 ;;		None
 36430 ;; Auto vars:     Size  Location     Type
 36431 ;;		None
 36432 ;; Return value:  Size  Location     Type
 36433 ;;                  1    wreg      void 
 36434 ;; Registers used:
 36435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36436 ;; Tracked objects:
 36437 ;;		On entry : 0/0
 36438 ;;		On exit  : 0/0
 36439 ;;		Unchanged: 0/0
 36440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36443 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36444 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36445 ;;Total ram usage:       18 bytes
 36446 ;; Hardware stack levels used:    1
 36447 ;; Hardware stack levels required when called:    3
 36448 ;; This function calls:
 36449 ;;		_Mcu_Int0Isr
 36450 ;;		_Mcu_Int1Isr
 36451 ;;		_Rtcc_RtcIsr
 36452 ;;		_Uart_Uart1RxIsr
 36453 ;; This function is called by:
 36454 ;;		Interrupt level 2
 36455 ;; This function uses a non-reentrant model
 36456 ;;
 36457                           
 36458                           	psect	intcode
 36459  000008                     __pintcode:
 36460                           	opt stack 0
 36461  000008                     _HighPriorityIsr:
 36462                           	opt stack 8
 36463                           
 36464                           ;incstack = 0
 36465  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36466  00000A  EFCE  F021         	goto	int_func
 36467                           tosu	equ	0xFFF
 36468                           tosh	equ	0xFFE
 36469                           tosl	equ	0xFFD
 36470                           pclatu	equ	0xFFB
 36471                           pclath	equ	0xFFA
 36472                           tblptru	equ	0xFF8
 36473                           tblptrh	equ	0xFF7
 36474                           tblptrl	equ	0xFF6
 36475                           tablat	equ	0xFF5
 36476                           prodh	equ	0xFF4
 36477                           prodl	equ	0xFF3
 36478                           intcon	equ	0xFF2
 36479                           intcon2	equ	0xFF1
 36480                           intcon3	equ	0xFF0
 36481                           indf0	equ	0xFEF
 36482                           postinc0	equ	0xFEE
 36483                           plusw0	equ	0xFEB
 36484                           fsr0h	equ	0xFEA
 36485                           fsr0l	equ	0xFE9
 36486                           wreg	equ	0xFE8
 36487                           indf1	equ	0xFE7
 36488                           postinc1	equ	0xFE6
 36489                           postdec1	equ	0xFE5
 36490                           plusw1	equ	0xFE3
 36491                           fsr1h	equ	0xFE2
 36492                           fsr1l	equ	0xFE1
 36493                           bsr	equ	0xFE0
 36494                           indf2	equ	0xFDF
 36495                           postinc2	equ	0xFDE
 36496                           postdec2	equ	0xFDD
 36497                           plusw2	equ	0xFDB
 36498                           fsr2h	equ	0xFDA
 36499                           fsr2l	equ	0xFD9
 36500                           status	equ	0xFD8
 36501                           
 36502                           	psect	intcode_body
 36503  00439C                     __pintcode_body:
 36504                           	opt stack 8
 36505  00439C                     int_func:
 36506                           	opt stack 8
 36507  00439C  CFFA F007          	movff	pclath,??_HighPriorityIsr
 36508  0043A0  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 36509  0043A4  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 36510  0043A8  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 36511  0043AC  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 36512  0043B0  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 36513  0043B4  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 36514  0043B8  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 36515  0043BC  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 36516  0043C0  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 36517  0043C4  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 36518  0043C8  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 36519  0043CC  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 36520  0043D0  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 36521  0043D4  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 36522  0043D8  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 36523  0043DC  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 36524  0043E0  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 36525                           
 36526                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 36527  0043E4  B2F2               	btfsc	intcon,1,c	;volatile
 36528                           
 36529                           ;irq.c: 158: {
 36530                           ;irq.c: 160: Mcu_Int0Isr();
 36531  0043E6  ECD3  F033         	call	_Mcu_Int0Isr	;wreg free
 36532                           
 36533                           ;irq.c: 161: }
 36534                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 36535  0043EA  B0F0               	btfsc	intcon3,0,c	;volatile
 36536                           
 36537                           ;irq.c: 167: {
 36538                           ;irq.c: 169: Mcu_Int1Isr();
 36539  0043EC  ECD1  F033         	call	_Mcu_Int1Isr	;wreg free
 36540                           
 36541                           ;irq.c: 170: }
 36542                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 36543  0043F0  B0A4               	btfsc	4004,0,c	;volatile
 36544                           
 36545                           ;irq.c: 203: {
 36546                           ;irq.c: 205: Rtcc_RtcIsr();
 36547  0043F2  ECCF  F033         	call	_Rtcc_RtcIsr	;wreg free
 36548                           
 36549                           ;irq.c: 206: }
 36550                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 36551  0043F6  BA9E               	btfsc	3998,5,c	;volatile
 36552                           
 36553                           ;irq.c: 212: {
 36554                           ;irq.c: 214: Uart_Uart1RxIsr();
 36555  0043F8  EC82  F033         	call	_Uart_Uart1RxIsr	;wreg free
 36556  0043FC  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 36557  004400  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 36558  004404  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 36559  004408  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 36560  00440C  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 36561  004410  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 36562  004414  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 36563  004418  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 36564  00441C  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 36565  004420  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 36566  004424  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 36567  004428  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 36568  00442C  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 36569  004430  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 36570  004434  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 36571  004438  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 36572  00443C  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 36573  004440  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 36574  004444  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 36575  004446  0011               	retfie		f
 36576  004448                     __end_of_HighPriorityIsr:
 36577                           	opt stack 0
 36578                           tosu	equ	0xFFF
 36579                           tosh	equ	0xFFE
 36580                           tosl	equ	0xFFD
 36581                           pclatu	equ	0xFFB
 36582                           pclath	equ	0xFFA
 36583                           tblptru	equ	0xFF8
 36584                           tblptrh	equ	0xFF7
 36585                           tblptrl	equ	0xFF6
 36586                           tablat	equ	0xFF5
 36587                           prodh	equ	0xFF4
 36588                           prodl	equ	0xFF3
 36589                           intcon	equ	0xFF2
 36590                           intcon2	equ	0xFF1
 36591                           intcon3	equ	0xFF0
 36592                           indf0	equ	0xFEF
 36593                           postinc0	equ	0xFEE
 36594                           plusw0	equ	0xFEB
 36595                           fsr0h	equ	0xFEA
 36596                           fsr0l	equ	0xFE9
 36597                           wreg	equ	0xFE8
 36598                           indf1	equ	0xFE7
 36599                           postinc1	equ	0xFE6
 36600                           postdec1	equ	0xFE5
 36601                           plusw1	equ	0xFE3
 36602                           fsr1h	equ	0xFE2
 36603                           fsr1l	equ	0xFE1
 36604                           bsr	equ	0xFE0
 36605                           indf2	equ	0xFDF
 36606                           postinc2	equ	0xFDE
 36607                           postdec2	equ	0xFDD
 36608                           plusw2	equ	0xFDB
 36609                           fsr2h	equ	0xFDA
 36610                           fsr2l	equ	0xFD9
 36611                           status	equ	0xFD8
 36612                           
 36613 ;; *************** function _Uart_Uart1RxIsr *****************
 36614 ;; Defined at:
 36615 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 36616 ;; Parameters:    Size  Location     Type
 36617 ;;		None
 36618 ;; Auto vars:     Size  Location     Type
 36619 ;;		None
 36620 ;; Return value:  Size  Location     Type
 36621 ;;                  1    wreg      void 
 36622 ;; Registers used:
 36623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36624 ;; Tracked objects:
 36625 ;;		On entry : 0/0
 36626 ;;		On exit  : 0/0
 36627 ;;		Unchanged: 0/0
 36628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36633 ;;Total ram usage:        0 bytes
 36634 ;; Hardware stack levels used:    1
 36635 ;; Hardware stack levels required when called:    2
 36636 ;; This function calls:
 36637 ;;		_Uart_MdmGsmGprsReadService
 36638 ;; This function is called by:
 36639 ;;		_HighPriorityIsr
 36640 ;; This function uses a non-reentrant model
 36641 ;;
 36642                           
 36643                           	psect	text181
 36644  006704                     __ptext181:
 36645                           	opt stack 0
 36646  006704                     _Uart_Uart1RxIsr:
 36647                           	opt stack 8
 36648                           
 36649                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 36650                           ;uart_drv.c: 590: UartRxData = RCREG1;
 36651                           
 36652                           ;incstack = 0
 36653  006704  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 36654                           
 36655                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 36656  006708  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 36657  00670C  0E01               	movlw	1
 36658  00670E  EC6A  F01E         	call	_Uart_MdmGsmGprsReadService
 36659  006712  0012               	return		;funcret
 36660  006714                     __end_of_Uart_Uart1RxIsr:
 36661                           	opt stack 0
 36662                           tosu	equ	0xFFF
 36663                           tosh	equ	0xFFE
 36664                           tosl	equ	0xFFD
 36665                           pclatu	equ	0xFFB
 36666                           pclath	equ	0xFFA
 36667                           tblptru	equ	0xFF8
 36668                           tblptrh	equ	0xFF7
 36669                           tblptrl	equ	0xFF6
 36670                           tablat	equ	0xFF5
 36671                           prodh	equ	0xFF4
 36672                           prodl	equ	0xFF3
 36673                           intcon	equ	0xFF2
 36674                           intcon2	equ	0xFF1
 36675                           intcon3	equ	0xFF0
 36676                           indf0	equ	0xFEF
 36677                           postinc0	equ	0xFEE
 36678                           plusw0	equ	0xFEB
 36679                           fsr0h	equ	0xFEA
 36680                           fsr0l	equ	0xFE9
 36681                           wreg	equ	0xFE8
 36682                           indf1	equ	0xFE7
 36683                           postinc1	equ	0xFE6
 36684                           postdec1	equ	0xFE5
 36685                           plusw1	equ	0xFE3
 36686                           fsr1h	equ	0xFE2
 36687                           fsr1l	equ	0xFE1
 36688                           bsr	equ	0xFE0
 36689                           indf2	equ	0xFDF
 36690                           postinc2	equ	0xFDE
 36691                           postdec2	equ	0xFDD
 36692                           plusw2	equ	0xFDB
 36693                           fsr2h	equ	0xFDA
 36694                           fsr2l	equ	0xFD9
 36695                           status	equ	0xFD8
 36696                           
 36697 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 36698 ;; Defined at:
 36699 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 36700 ;; Parameters:    Size  Location     Type
 36701 ;;  Module          1    wreg     unsigned char 
 36702 ;;  UartData        1    3[COMRAM] unsigned char 
 36703 ;; Auto vars:     Size  Location     Type
 36704 ;;  Module          1    0[COMRAM] unsigned char 
 36705 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 36706 ;; Return value:  Size  Location     Type
 36707 ;;                  1    wreg      void 
 36708 ;; Registers used:
 36709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36710 ;; Tracked objects:
 36711 ;;		On entry : 0/0
 36712 ;;		On exit  : 0/0
 36713 ;;		Unchanged: 0/0
 36714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36719 ;;Total ram usage:        3 bytes
 36720 ;; Hardware stack levels used:    1
 36721 ;; Hardware stack levels required when called:    1
 36722 ;; This function calls:
 36723 ;;		i2_GenerateEvt
 36724 ;; This function is called by:
 36725 ;;		_Uart_Uart1RxIsr
 36726 ;; This function uses a non-reentrant model
 36727 ;;
 36728                           
 36729                           	psect	text182
 36730  003CD4                     __ptext182:
 36731                           	opt stack 0
 36732  003CD4                     _Uart_MdmGsmGprsReadService:
 36733                           	opt stack 8
 36734                           
 36735                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 36736                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 36737                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 36738                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 36739                           
 36740                           ;incstack = 0
 36741  003CD4  0E00               	movlw	0
 36742  003CD6  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 36743  003CD8  0E00               	movlw	0
 36744  003CDA  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 36745                           
 36746                           ;uart_drv.c: 383: switch (RxState)
 36747  003CDC  D058               	goto	i2l680
 36748  003CDE                     
 36749                           ;uart_drv.c: 387: if (UartData == '\r')
 36750  003CDE  0E0D               	movlw	13
 36751  003CE0  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 36752  003CE2  A4D8               	btfss	status,2,c
 36753  003CE4  D003               	goto	i2l682
 36754                           
 36755                           ;uart_drv.c: 388: {
 36756                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 36757  003CE6  0E01               	movlw	1
 36758  003CE8  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 36759                           
 36760                           ;uart_drv.c: 391: }
 36761  003CEA  0012               	return	
 36762  003CEC                     i2l682:
 36763                           
 36764                           ;uart_drv.c: 392: else
 36765                           ;uart_drv.c: 393: {
 36766                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 36767  003CEC  0E90               	movlw	144
 36768  003CEE  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36769  003CF0  0E01               	movlw	1
 36770  003CF2  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36771  003CF4  B0D8               	btfsc	status,0,c
 36772  003CF6  0012               	return	
 36773                           
 36774                           ;uart_drv.c: 395: {
 36775                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 36776  003CF8  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 36777  003CFA  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36778  003CFC  6ED9               	movwf	fsr2l,c
 36779  003CFE  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 36780  003D00  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36781  003D02  6EDA               	movwf	fsr2h,c
 36782  003D04  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 36783                           
 36784                           ;uart_drv.c: 399: RxCounter++;
 36785  003D08  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 36786  003D0A  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 36787                           
 36788                           ;uart_drv.c: 400: }
 36789                           ;uart_drv.c: 401: }
 36790                           ;uart_drv.c: 402: break;
 36791  003D0C  0012               	return	
 36792  003D0E                     
 36793                           ;uart_drv.c: 406: if (UartData == '\n')
 36794  003D0E  0E0A               	movlw	10
 36795  003D10  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 36796  003D12  A4D8               	btfss	status,2,c
 36797  003D14  D035               	goto	i2l688
 36798                           
 36799                           ;uart_drv.c: 407: {
 36800                           ;uart_drv.c: 409: if (RxCounter > 0)
 36801  003D16  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36802  003D18  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36803  003D1A  B4D8               	btfsc	status,2,c
 36804  003D1C  D031               	goto	i2l688
 36805                           
 36806                           ;uart_drv.c: 410: {
 36807                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 36808  003D1E  0E00               	movlw	0
 36809  003D20  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 36810  003D22  0E00               	movlw	0
 36811  003D24  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 36812  003D26  D010               	goto	i2l689
 36813  003D28                     
 36814                           ;uart_drv.c: 413: {
 36815                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 36816  003D28  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 36817  003D2A  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36818  003D2C  6ED9               	movwf	fsr2l,c
 36819  003D2E  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 36820  003D30  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36821  003D32  6EDA               	movwf	fsr2h,c
 36822  003D34  0E58               	movlw	low _RxBuffer
 36823  003D36  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36824  003D38  6EE1               	movwf	fsr1l,c
 36825  003D3A  0E0C               	movlw	high _RxBuffer
 36826  003D3C  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36827  003D3E  6EE2               	movwf	fsr1h,c
 36828  003D40  CFDF FFE7          	movff	indf2,indf1
 36829  003D44  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 36830  003D46  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 36831  003D48                     i2l689:
 36832  003D48  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36833  003D4A  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36834  003D4C  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36835  003D4E  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36836  003D50  A0D8               	btfss	status,0,c
 36837  003D52  D7EA               	goto	i2l690
 36838                           
 36839                           ;uart_drv.c: 415: }
 36840                           ;uart_drv.c: 417: RxLen = RxCounter;
 36841  003D54  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 36842  003D58  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 36843                           
 36844                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 36845  003D5C  0E3C               	movlw	low _NewStringReceived
 36846  003D5E  6E01               	movwf	i2GenerateEvt@Event,c
 36847  003D60  0E00               	movlw	high _NewStringReceived
 36848  003D62  6E02               	movwf	i2GenerateEvt@Event+1,c
 36849  003D64  EC32  F033         	call	i2_GenerateEvt	;wreg free
 36850                           
 36851                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 36852  003D68  0E3B               	movlw	low _NewMdmEvtParserRequest
 36853  003D6A  6E01               	movwf	i2GenerateEvt@Event,c
 36854  003D6C  0E00               	movlw	high _NewMdmEvtParserRequest
 36855  003D6E  6E02               	movwf	i2GenerateEvt@Event+1,c
 36856  003D70  EC32  F033         	call	i2_GenerateEvt	;wreg free
 36857                           
 36858                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 36859  003D74  0E3A               	movlw	low _NewStringMdmTerminal
 36860  003D76  6E01               	movwf	i2GenerateEvt@Event,c
 36861  003D78  0E00               	movlw	high _NewStringMdmTerminal
 36862  003D7A  6E02               	movwf	i2GenerateEvt@Event+1,c
 36863  003D7C  EC32  F033         	call	i2_GenerateEvt	;wreg free
 36864  003D80                     i2l688:
 36865                           
 36866                           ;uart_drv.c: 427: }
 36867                           ;uart_drv.c: 429: RxState = ReadData;
 36868                           
 36869                           ;uart_drv.c: 424: else
 36870                           ;uart_drv.c: 425: {
 36871                           
 36872                           ;uart_drv.c: 422: }
 36873                           ;uart_drv.c: 423: }
 36874  003D80  0E00               	movlw	0
 36875  003D82  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 36876                           
 36877                           ;uart_drv.c: 431: RxCounter = 0;
 36878  003D84  0E00               	movlw	0
 36879  003D86  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 36880  003D88  0E00               	movlw	0
 36881  003D8A  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 36882                           
 36883                           ;uart_drv.c: 436: }
 36884                           
 36885                           ;uart_drv.c: 435: break;
 36886                           
 36887                           ;uart_drv.c: 434: default:
 36888                           
 36889                           ;uart_drv.c: 432: break;
 36890  003D8C  0012               	return	
 36891  003D8E                     i2l680:
 36892  003D8E  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 36893                           
 36894                           ; Switch size 1, requested type "space"
 36895                           ; Number of cases is 2, Range of values is 0 to 1
 36896                           ; switch strategies available:
 36897                           ; Name         Instructions Cycles
 36898                           ; simple_byte            7     4 (average)
 36899                           ;	Chosen strategy is simple_byte
 36900  003D90  0A00               	xorlw	0	; case 0
 36901  003D92  B4D8               	btfsc	status,2,c
 36902  003D94  D7A4               	goto	i2l681
 36903  003D96  0A01               	xorlw	1	; case 1
 36904  003D98  A4D8               	btfss	status,2,c
 36905  003D9A  0012               	return	
 36906  003D9C  D7B8               	goto	i2l686
 36907  003D9E                     __end_of_Uart_MdmGsmGprsReadService:
 36908                           	opt stack 0
 36909                           tosu	equ	0xFFF
 36910                           tosh	equ	0xFFE
 36911                           tosl	equ	0xFFD
 36912                           pclatu	equ	0xFFB
 36913                           pclath	equ	0xFFA
 36914                           tblptru	equ	0xFF8
 36915                           tblptrh	equ	0xFF7
 36916                           tblptrl	equ	0xFF6
 36917                           tablat	equ	0xFF5
 36918                           prodh	equ	0xFF4
 36919                           prodl	equ	0xFF3
 36920                           intcon	equ	0xFF2
 36921                           intcon2	equ	0xFF1
 36922                           intcon3	equ	0xFF0
 36923                           indf0	equ	0xFEF
 36924                           postinc0	equ	0xFEE
 36925                           plusw0	equ	0xFEB
 36926                           fsr0h	equ	0xFEA
 36927                           fsr0l	equ	0xFE9
 36928                           wreg	equ	0xFE8
 36929                           indf1	equ	0xFE7
 36930                           postinc1	equ	0xFE6
 36931                           postdec1	equ	0xFE5
 36932                           plusw1	equ	0xFE3
 36933                           fsr1h	equ	0xFE2
 36934                           fsr1l	equ	0xFE1
 36935                           bsr	equ	0xFE0
 36936                           indf2	equ	0xFDF
 36937                           postinc2	equ	0xFDE
 36938                           postdec2	equ	0xFDD
 36939                           plusw2	equ	0xFDB
 36940                           fsr2h	equ	0xFDA
 36941                           fsr2l	equ	0xFD9
 36942                           status	equ	0xFD8
 36943                           
 36944 ;; *************** function i2_GenerateEvt *****************
 36945 ;; Defined at:
 36946 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36947 ;; Parameters:    Size  Location     Type
 36948 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 36949 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36950 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36951 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36952 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36953 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36954 ;; Auto vars:     Size  Location     Type
 36955 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 36956 ;; Return value:  Size  Location     Type
 36957 ;;                  1    wreg      enum E7699
 36958 ;; Registers used:
 36959 ;;		wreg, fsr2l, fsr2h, status,2
 36960 ;; Tracked objects:
 36961 ;;		On entry : 0/0
 36962 ;;		On exit  : 0/0
 36963 ;;		Unchanged: 0/0
 36964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36969 ;;Total ram usage:        3 bytes
 36970 ;; Hardware stack levels used:    1
 36971 ;; This function calls:
 36972 ;;		Nothing
 36973 ;; This function is called by:
 36974 ;;		_Uart_MdmGsmGprsReadService
 36975 ;; This function uses a non-reentrant model
 36976 ;;
 36977                           
 36978                           	psect	text183
 36979  006664                     __ptext183:
 36980                           	opt stack 0
 36981  006664                     i2_GenerateEvt:
 36982                           	opt stack 8
 36983                           
 36984                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36985                           
 36986                           ;incstack = 0
 36987  006664  0E00               	movlw	0
 36988  006666  6E03               	movwf	i2GenerateEvt@EventStatus,c
 36989                           
 36990                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36991  006668  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 36992  00666C  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 36993  006670  0E02               	movlw	2
 36994  006672  6EDF               	movwf	indf2,c
 36995                           
 36996                           ;os_ser.c: 83: EventStatus = EventSent;
 36997  006674  0E02               	movlw	2
 36998  006676  6E03               	movwf	i2GenerateEvt@EventStatus,c
 36999  006678  0012               	return	
 37000  00667A                     __end_ofi2_GenerateEvt:
 37001                           	opt stack 0
 37002                           tosu	equ	0xFFF
 37003                           tosh	equ	0xFFE
 37004                           tosl	equ	0xFFD
 37005                           pclatu	equ	0xFFB
 37006                           pclath	equ	0xFFA
 37007                           tblptru	equ	0xFF8
 37008                           tblptrh	equ	0xFF7
 37009                           tblptrl	equ	0xFF6
 37010                           tablat	equ	0xFF5
 37011                           prodh	equ	0xFF4
 37012                           prodl	equ	0xFF3
 37013                           intcon	equ	0xFF2
 37014                           intcon2	equ	0xFF1
 37015                           intcon3	equ	0xFF0
 37016                           indf0	equ	0xFEF
 37017                           postinc0	equ	0xFEE
 37018                           plusw0	equ	0xFEB
 37019                           fsr0h	equ	0xFEA
 37020                           fsr0l	equ	0xFE9
 37021                           wreg	equ	0xFE8
 37022                           indf1	equ	0xFE7
 37023                           postinc1	equ	0xFE6
 37024                           postdec1	equ	0xFE5
 37025                           plusw1	equ	0xFE3
 37026                           fsr1h	equ	0xFE2
 37027                           fsr1l	equ	0xFE1
 37028                           bsr	equ	0xFE0
 37029                           indf2	equ	0xFDF
 37030                           postinc2	equ	0xFDE
 37031                           postdec2	equ	0xFDD
 37032                           plusw2	equ	0xFDB
 37033                           fsr2h	equ	0xFDA
 37034                           fsr2l	equ	0xFD9
 37035                           status	equ	0xFD8
 37036                           
 37037 ;; *************** function _Rtcc_RtcIsr *****************
 37038 ;; Defined at:
 37039 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37040 ;; Parameters:    Size  Location     Type
 37041 ;;		None
 37042 ;; Auto vars:     Size  Location     Type
 37043 ;;		None
 37044 ;; Return value:  Size  Location     Type
 37045 ;;                  1    wreg      void 
 37046 ;; Registers used:
 37047 ;;		wreg, status,2, status,0
 37048 ;; Tracked objects:
 37049 ;;		On entry : 0/0
 37050 ;;		On exit  : 0/0
 37051 ;;		Unchanged: 0/0
 37052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37057 ;;Total ram usage:        0 bytes
 37058 ;; Hardware stack levels used:    1
 37059 ;; This function calls:
 37060 ;;		Nothing
 37061 ;; This function is called by:
 37062 ;;		_HighPriorityIsr
 37063 ;; This function uses a non-reentrant model
 37064 ;;
 37065                           
 37066                           	psect	text184
 37067  00679E                     __ptext184:
 37068                           	opt stack 0
 37069  00679E                     _Rtcc_RtcIsr:
 37070                           	opt stack 10
 37071                           
 37072                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37073                           
 37074                           ;incstack = 0
 37075  00679E  90A4               	bcf	4004,0,c	;volatile
 37076  0067A0  0012               	return	
 37077  0067A2                     __end_of_Rtcc_RtcIsr:
 37078                           	opt stack 0
 37079                           tosu	equ	0xFFF
 37080                           tosh	equ	0xFFE
 37081                           tosl	equ	0xFFD
 37082                           pclatu	equ	0xFFB
 37083                           pclath	equ	0xFFA
 37084                           tblptru	equ	0xFF8
 37085                           tblptrh	equ	0xFF7
 37086                           tblptrl	equ	0xFF6
 37087                           tablat	equ	0xFF5
 37088                           prodh	equ	0xFF4
 37089                           prodl	equ	0xFF3
 37090                           intcon	equ	0xFF2
 37091                           intcon2	equ	0xFF1
 37092                           intcon3	equ	0xFF0
 37093                           indf0	equ	0xFEF
 37094                           postinc0	equ	0xFEE
 37095                           plusw0	equ	0xFEB
 37096                           fsr0h	equ	0xFEA
 37097                           fsr0l	equ	0xFE9
 37098                           wreg	equ	0xFE8
 37099                           indf1	equ	0xFE7
 37100                           postinc1	equ	0xFE6
 37101                           postdec1	equ	0xFE5
 37102                           plusw1	equ	0xFE3
 37103                           fsr1h	equ	0xFE2
 37104                           fsr1l	equ	0xFE1
 37105                           bsr	equ	0xFE0
 37106                           indf2	equ	0xFDF
 37107                           postinc2	equ	0xFDE
 37108                           postdec2	equ	0xFDD
 37109                           plusw2	equ	0xFDB
 37110                           fsr2h	equ	0xFDA
 37111                           fsr2l	equ	0xFD9
 37112                           status	equ	0xFD8
 37113                           
 37114 ;; *************** function _Mcu_Int1Isr *****************
 37115 ;; Defined at:
 37116 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37117 ;; Parameters:    Size  Location     Type
 37118 ;;		None
 37119 ;; Auto vars:     Size  Location     Type
 37120 ;;		None
 37121 ;; Return value:  Size  Location     Type
 37122 ;;                  1    wreg      void 
 37123 ;; Registers used:
 37124 ;;		wreg, status,2, status,0
 37125 ;; Tracked objects:
 37126 ;;		On entry : 0/0
 37127 ;;		On exit  : 0/0
 37128 ;;		Unchanged: 0/0
 37129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37134 ;;Total ram usage:        0 bytes
 37135 ;; Hardware stack levels used:    1
 37136 ;; This function calls:
 37137 ;;		Nothing
 37138 ;; This function is called by:
 37139 ;;		_HighPriorityIsr
 37140 ;; This function uses a non-reentrant model
 37141 ;;
 37142                           
 37143                           	psect	text185
 37144  0067A2                     __ptext185:
 37145                           	opt stack 0
 37146  0067A2                     _Mcu_Int1Isr:
 37147                           	opt stack 10
 37148                           
 37149                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37150                           
 37151                           ;incstack = 0
 37152  0067A2  90F0               	bcf	intcon3,0,c	;volatile
 37153  0067A4  0012               	return	
 37154  0067A6                     __end_of_Mcu_Int1Isr:
 37155                           	opt stack 0
 37156                           tosu	equ	0xFFF
 37157                           tosh	equ	0xFFE
 37158                           tosl	equ	0xFFD
 37159                           pclatu	equ	0xFFB
 37160                           pclath	equ	0xFFA
 37161                           tblptru	equ	0xFF8
 37162                           tblptrh	equ	0xFF7
 37163                           tblptrl	equ	0xFF6
 37164                           tablat	equ	0xFF5
 37165                           prodh	equ	0xFF4
 37166                           prodl	equ	0xFF3
 37167                           intcon	equ	0xFF2
 37168                           intcon2	equ	0xFF1
 37169                           intcon3	equ	0xFF0
 37170                           indf0	equ	0xFEF
 37171                           postinc0	equ	0xFEE
 37172                           plusw0	equ	0xFEB
 37173                           fsr0h	equ	0xFEA
 37174                           fsr0l	equ	0xFE9
 37175                           wreg	equ	0xFE8
 37176                           indf1	equ	0xFE7
 37177                           postinc1	equ	0xFE6
 37178                           postdec1	equ	0xFE5
 37179                           plusw1	equ	0xFE3
 37180                           fsr1h	equ	0xFE2
 37181                           fsr1l	equ	0xFE1
 37182                           bsr	equ	0xFE0
 37183                           indf2	equ	0xFDF
 37184                           postinc2	equ	0xFDE
 37185                           postdec2	equ	0xFDD
 37186                           plusw2	equ	0xFDB
 37187                           fsr2h	equ	0xFDA
 37188                           fsr2l	equ	0xFD9
 37189                           status	equ	0xFD8
 37190                           
 37191 ;; *************** function _Mcu_Int0Isr *****************
 37192 ;; Defined at:
 37193 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37194 ;; Parameters:    Size  Location     Type
 37195 ;;		None
 37196 ;; Auto vars:     Size  Location     Type
 37197 ;;		None
 37198 ;; Return value:  Size  Location     Type
 37199 ;;                  1    wreg      void 
 37200 ;; Registers used:
 37201 ;;		wreg, status,2, status,0
 37202 ;; Tracked objects:
 37203 ;;		On entry : 0/0
 37204 ;;		On exit  : 0/0
 37205 ;;		Unchanged: 0/0
 37206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37211 ;;Total ram usage:        0 bytes
 37212 ;; Hardware stack levels used:    1
 37213 ;; This function calls:
 37214 ;;		Nothing
 37215 ;; This function is called by:
 37216 ;;		_HighPriorityIsr
 37217 ;; This function uses a non-reentrant model
 37218 ;;
 37219                           
 37220                           	psect	text186
 37221  0067A6                     __ptext186:
 37222                           	opt stack 0
 37223  0067A6                     _Mcu_Int0Isr:
 37224                           	opt stack 10
 37225                           
 37226                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37227                           
 37228                           ;incstack = 0
 37229  0067A6  92F2               	bcf	intcon,1,c	;volatile
 37230  0067A8  0012               	return	
 37231  0067AA                     __end_of_Mcu_Int0Isr:
 37232                           	opt stack 0
 37233                           tosu	equ	0xFFF
 37234                           tosh	equ	0xFFE
 37235                           tosl	equ	0xFFD
 37236                           pclatu	equ	0xFFB
 37237                           pclath	equ	0xFFA
 37238                           tblptru	equ	0xFF8
 37239                           tblptrh	equ	0xFF7
 37240                           tblptrl	equ	0xFF6
 37241                           tablat	equ	0xFF5
 37242                           prodh	equ	0xFF4
 37243                           prodl	equ	0xFF3
 37244                           intcon	equ	0xFF2
 37245                           intcon2	equ	0xFF1
 37246                           intcon3	equ	0xFF0
 37247                           indf0	equ	0xFEF
 37248                           postinc0	equ	0xFEE
 37249                           plusw0	equ	0xFEB
 37250                           fsr0h	equ	0xFEA
 37251                           fsr0l	equ	0xFE9
 37252                           wreg	equ	0xFE8
 37253                           indf1	equ	0xFE7
 37254                           postinc1	equ	0xFE6
 37255                           postdec1	equ	0xFE5
 37256                           plusw1	equ	0xFE3
 37257                           fsr1h	equ	0xFE2
 37258                           fsr1l	equ	0xFE1
 37259                           bsr	equ	0xFE0
 37260                           indf2	equ	0xFDF
 37261                           postinc2	equ	0xFDE
 37262                           postdec2	equ	0xFDD
 37263                           plusw2	equ	0xFDB
 37264                           fsr2h	equ	0xFDA
 37265                           fsr2l	equ	0xFD9
 37266                           status	equ	0xFD8
 37267                           tosu	equ	0xFFF
 37268                           tosh	equ	0xFFE
 37269                           tosl	equ	0xFFD
 37270                           pclatu	equ	0xFFB
 37271                           pclath	equ	0xFFA
 37272                           tblptru	equ	0xFF8
 37273                           tblptrh	equ	0xFF7
 37274                           tblptrl	equ	0xFF6
 37275                           tablat	equ	0xFF5
 37276                           prodh	equ	0xFF4
 37277                           prodl	equ	0xFF3
 37278                           intcon	equ	0xFF2
 37279                           intcon2	equ	0xFF1
 37280                           intcon3	equ	0xFF0
 37281                           indf0	equ	0xFEF
 37282                           postinc0	equ	0xFEE
 37283                           plusw0	equ	0xFEB
 37284                           fsr0h	equ	0xFEA
 37285                           fsr0l	equ	0xFE9
 37286                           wreg	equ	0xFE8
 37287                           indf1	equ	0xFE7
 37288                           postinc1	equ	0xFE6
 37289                           postdec1	equ	0xFE5
 37290                           plusw1	equ	0xFE3
 37291                           fsr1h	equ	0xFE2
 37292                           fsr1l	equ	0xFE1
 37293                           bsr	equ	0xFE0
 37294                           indf2	equ	0xFDF
 37295                           postinc2	equ	0xFDE
 37296                           postdec2	equ	0xFDD
 37297                           plusw2	equ	0xFDB
 37298                           fsr2h	equ	0xFDA
 37299                           fsr2l	equ	0xFD9
 37300                           status	equ	0xFD8
 37301                           
 37302                           	psect	text187
 37303  000000                     __ptext187:
 37304                           	opt stack 0
 37305                           tosu	equ	0xFFF
 37306                           tosh	equ	0xFFE
 37307                           tosl	equ	0xFFD
 37308                           pclatu	equ	0xFFB
 37309                           pclath	equ	0xFFA
 37310                           tblptru	equ	0xFF8
 37311                           tblptrh	equ	0xFF7
 37312                           tblptrl	equ	0xFF6
 37313                           tablat	equ	0xFF5
 37314                           prodh	equ	0xFF4
 37315                           prodl	equ	0xFF3
 37316                           intcon	equ	0xFF2
 37317                           intcon2	equ	0xFF1
 37318                           intcon3	equ	0xFF0
 37319                           indf0	equ	0xFEF
 37320                           postinc0	equ	0xFEE
 37321                           plusw0	equ	0xFEB
 37322                           fsr0h	equ	0xFEA
 37323                           fsr0l	equ	0xFE9
 37324                           wreg	equ	0xFE8
 37325                           indf1	equ	0xFE7
 37326                           postinc1	equ	0xFE6
 37327                           postdec1	equ	0xFE5
 37328                           plusw1	equ	0xFE3
 37329                           fsr1h	equ	0xFE2
 37330                           fsr1l	equ	0xFE1
 37331                           bsr	equ	0xFE0
 37332                           indf2	equ	0xFDF
 37333                           postinc2	equ	0xFDE
 37334                           postdec2	equ	0xFDD
 37335                           plusw2	equ	0xFDB
 37336                           fsr2h	equ	0xFDA
 37337                           fsr2l	equ	0xFD9
 37338                           status	equ	0xFD8
 37339                           
 37340                           	psect	rparam
 37341  0000                     tosu	equ	0xFFF
 37342                           tosh	equ	0xFFE
 37343                           tosl	equ	0xFFD
 37344                           pclatu	equ	0xFFB
 37345                           pclath	equ	0xFFA
 37346                           tblptru	equ	0xFF8
 37347                           tblptrh	equ	0xFF7
 37348                           tblptrl	equ	0xFF6
 37349                           tablat	equ	0xFF5
 37350                           prodh	equ	0xFF4
 37351                           prodl	equ	0xFF3
 37352                           intcon	equ	0xFF2
 37353                           intcon2	equ	0xFF1
 37354                           intcon3	equ	0xFF0
 37355                           indf0	equ	0xFEF
 37356                           postinc0	equ	0xFEE
 37357                           plusw0	equ	0xFEB
 37358                           fsr0h	equ	0xFEA
 37359                           fsr0l	equ	0xFE9
 37360                           wreg	equ	0xFE8
 37361                           indf1	equ	0xFE7
 37362                           postinc1	equ	0xFE6
 37363                           postdec1	equ	0xFE5
 37364                           plusw1	equ	0xFE3
 37365                           fsr1h	equ	0xFE2
 37366                           fsr1l	equ	0xFE1
 37367                           bsr	equ	0xFE0
 37368                           indf2	equ	0xFDF
 37369                           postinc2	equ	0xFDE
 37370                           postdec2	equ	0xFDD
 37371                           plusw2	equ	0xFDB
 37372                           fsr2h	equ	0xFDA
 37373                           fsr2l	equ	0xFD9
 37374                           status	equ	0xFD8
 37375                           
 37376                           	psect	temp
 37377  000042                     btemp:
 37378                           	opt stack 0
 37379  000042                     	ds	1
 37380  0000                     int$flags	set	btemp
 37381  0000                     wtemp6	set	btemp+1
 37382                           tosu	equ	0xFFF
 37383                           tosh	equ	0xFFE
 37384                           tosl	equ	0xFFD
 37385                           pclatu	equ	0xFFB
 37386                           pclath	equ	0xFFA
 37387                           tblptru	equ	0xFF8
 37388                           tblptrh	equ	0xFF7
 37389                           tblptrl	equ	0xFF6
 37390                           tablat	equ	0xFF5
 37391                           prodh	equ	0xFF4
 37392                           prodl	equ	0xFF3
 37393                           intcon	equ	0xFF2
 37394                           intcon2	equ	0xFF1
 37395                           intcon3	equ	0xFF0
 37396                           indf0	equ	0xFEF
 37397                           postinc0	equ	0xFEE
 37398                           plusw0	equ	0xFEB
 37399                           fsr0h	equ	0xFEA
 37400                           fsr0l	equ	0xFE9
 37401                           wreg	equ	0xFE8
 37402                           indf1	equ	0xFE7
 37403                           postinc1	equ	0xFE6
 37404                           postdec1	equ	0xFE5
 37405                           plusw1	equ	0xFE3
 37406                           fsr1h	equ	0xFE2
 37407                           fsr1l	equ	0xFE1
 37408                           bsr	equ	0xFE0
 37409                           indf2	equ	0xFDF
 37410                           postinc2	equ	0xFDE
 37411                           postdec2	equ	0xFDD
 37412                           plusw2	equ	0xFDB
 37413                           fsr2h	equ	0xFDA
 37414                           fsr2l	equ	0xFD9
 37415                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    577
    Data        182
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     256
    BANK4           192      4     192
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), STR_15(CODE[20]), STR_9(CODE[21]), 
		 -> MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), callerNumber(BANK4[13]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4612$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4612$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4612$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4612$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3065$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3055$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3055$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3031$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3031$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3031$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3031$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2532_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2532_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  806637
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  802006
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  401096
                                            200 BANK2      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  400910
                                            200 BANK2      1     1      0
                                              0 BANK4      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          10    10      0  138766
                                             19 BANK1      9     9      0
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                      _isNumberValid
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2    9508
                                             46 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3008
                                             40 BANK0      9     7      2
                      _StringCompare
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28017
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                    _GetCallerNumber (ARG)
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9342
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9342
                                             39 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   39945
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24226
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24146
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    7541
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   71700
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   12514
                                             40 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _isNumberValid
         _parseCommand
           _StringCompare
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _isNumberValid
         _parseCommand
           _StringCompare
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A2       8        0.0%
DATA                 0      0     CC2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 26 20:46:40 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 56C4  
                              _USB_SD_Ptr FC1D                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 64FE  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 23CC                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 22E8  
                                     l203 22F0                                       l205 2338  
                                     l206 235E                                       l208 2366  
                                     l160 222C                                       l209 2386  
                                     l161 2102                                       l162 226A  
                                     l170 21CA                                       l171 21E0  
                                     l163 210E                                       l315 457E  
                                     l323 454A                                       l164 214E  
                                     l316 44F4                                       l420 4A8E  
                                     l500 493E                                       l173 21E4  
                                     l325 4564                                       l421 4AAE  
                                     l237 650A                                       l174 21EC  
                                     l166 215C                                       l318 44FE  
                                     l422 4ABA               __end_of_USBStdGetDscHandler 2F40  
                                     l510 4910                                       l502 48D0  
                                     l175 21F8                                       l167 2184  
                                     l319 4524                                       l423 4AC6  
                                     l511 4900                                       l503 48C0  
                                     l192 2390                                       l176 220E  
                                     l416 4ADA                                       l424 4AD2  
                                     l512 4924                                       l504 48E6  
                                     l520 5B78                                       l193 2270  
                                     l169 2196                                       l417 4A80  
                                     l441 1A38                                       l513 4904  
                                     l505 48C4                                       l521 5B44  
                                     l194 23C8                                       l418 4B08  
                                     l442 1840                                       l514 490A  
                                     l506 48CA                                       l530 3306  
                                     l195 227C                                       l179 221A  
                                     l419 4A88                                       l523 5B5E  
                                     l531 336C                                       l196 22BC  
                                     l700 5E22                                       l444 1888  
                                     l532 3332                                       l445 18D0  
                                     l541 64A8                                       l198 22CA  
                                     l446 1918                                       l199 22DE  
                                     l631 2C56                                       l447 1960  
                                     l448 19A8                                       l528 3372  
                                     l633 2CCE                                       l625 2BE2  
                                     l449 19F0                                       l529 335E  
                                     l538 64AC                                       l546 3DF6  
                                     l651 5AC8                                       l707 5F46  
                                     l627 2C06                                       l715 5EBA  
                                     l539 64A4                                       l547 3E12  
                                     l660 5AEC                                       l652 5AC2  
                                     l716 5E90                                       l709 5F60  
                                     l629 2C2E                                       l718 5EA8  
                                     l639 64F0                                       l832 6246  
                                     l844 3ECA                                       l668 0C44  
                                     _BDT 000400                                       l790 6526  
                                     l855 5058                                       l775 3062  
                                     l864 4C9C                                       l856 4FFE  
                                     l857 5072                                       l698 5E06  
                                     l858 502E                                       l867 4CAE  
                                     l982 27A6                                       l983 267A  
                                     l985 269E                                       l987 26B8  
                                     l988 26EC                                       l989 275E  
                                     l998 2782                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4448  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 60CE                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1DF6  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CD  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5E84  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2678  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5CAC  
         InitGprsNetwork@GprsNetInitState 01EB                                      l1100 1D66  
                                    l1101 1DB2                                      l1013 5CC4  
                                    l1110 59CC                               RiSm@Counter 02DF  
                                    l1031 3724                                      l1111 59E0  
                                    l1032 375E                                      l1033 3784  
                                    l1009 5CDE                                      l1121 5A38  
                                    l1027 37C6                                      l1035 37AC  
                                    l2003 54A6                                      l1107 59F2  
                                    l2100 337A                                      l1220 0DE8  
                                    l1028 3712                                      l1052 20D4  
                                    l1060 20A6                                      l1108 59B6  
                                    l2101 344E                                      l1221 0E22  
                                    l1053 1FEE                                      l2005 54AC  
                                    l2102 3398                                      l2110 45A6  
                                    l1222 0E96                                      l1070 2DF4  
                                    l2111 463C                                      l1223 0E5E  
                                    l1071 2CEC                                      l1055 20EE  
                                    l2104 3408                                      l2112 45B6  
                                    l1216 1078                                      l1056 2020  
                                    l1136 63A8                                      l2032 5808  
                                    l1152 6384                                      l3000 4F28  
                                    l2113 45C8                                      l1233 1010  
                                    l1225 0F3E                                      l1217 0DD0  
                                    l1129 530A                                      l1401 575E  
                                    l2130 61DA                                      l2114 45E2  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2D08  
                                    l1058 2070                                      l2034 5814  
                                    l3010 510E                                      l1402 571E  
                                    l2122 3BF6                                      l2131 61C8  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2D20                                      l1091 1DCC  
                                    l3003 4F50                                      l2123 3B3E  
                                    l2211 4D26                                      l2116 45F0  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l1092 1C4A  
                                    l1156 6058                                      l2140 581E  
                                    l3004 4F5A                                      l3012 5124  
                                    l1404 5758                                      l2133 61CE  
                                    l2109 4614                                      l2117 45FE  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l3005 4F68  
                                    l3013 511C                                      l2125 3B4C  
                                    l2134 61D4                                      l1270 096E  
                                    l1262 0856                                      l1254 0646  
                                    l1238 106E                                      l1078 2D92  
                                    l2142 5830                                      l1414 5E7E  
                                    l1263 0890                                      l1255 0680  
                                    l1095 1C66                                      l2143 5842  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1D1C                                      l1440 39BC  
                                    l3016 513C                                      l2400 01AE  
                                    l2208 4D3A                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1D40                                      l1409 5F38  
                                    l3017 5146                                      l3009 5102  
                                    l2401 019C                                      l1601 2416  
                                    l2209 4CC0                                      l3202 4FD6  
                                    l2090 29C8                                      l2250 608C  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 3A1A  
                                    l3018 5154                                      l3203 4FE4  
                                    l2251 6078                                      l1283 0A4A  
                                    l1275 09AA                                      l2139 5854  
                                    l1419 6494                                      l1443 3A2E  
                                    l2411 0392                                      l1603 243E  
                                    l1291 5C66                                      l1380 3FF8  
                                    l2244 5496                                      l2412 0326  
                                    l1700 3840                                      l1620 1E6C  
                                    l1612 1E22                                      l1381 401A  
                                    l2245 5456                                      l1277 09C4  
                                    l1269 092A                                      l2237 5954  
                                    l1437 3A54                                      l1445 3A4C  
                                    l2413 02B4                                      l1605 247E  
                                    l1621 1E78                                      l1613 1E18  
                                    l2501 63DC                                      l1390 407C  
                                    l2086 2A3A                                      l1278 0A32  
                                    l2238 592A                                      l1438 399E  
                                    l2414 0250                                      l2406 01D0  
                                    l1710 30C2                                      l1630 1F0C  
                                    l1614 1E16                                      l1391 4088  
                                    l1383 403C                                      l2087 291C  
                                    l2239 5950                                      l1439 3A6A  
                                    l2431 045E                                      l2423 0402  
                                    l1703 38BC                                      l1711 309C  
                                    l1623 1EA0                                      l2088 2A50  
                                    l2432 0578                                      l2424 03D2  
                                    l2416 0304                                      l1704 3882  
                                    l1640 5D48                                      l1288 5C98  
                                    l2600 1640                                      l2089 2944  
                                    l2417 02C6                                      l1713 313A  
                                    l1641 5D58                                      l1633 1F32  
                                    l1625 1EB6                                      l1617 1E3E  
                                    l1386 4044                                      l3170 448C  
                                    l2434 04B4                                      l3410 558A  
                                    l1714 3120                                      l1730 2F28  
                                    l1722 34AE                                      l1810 3652  
                                    l1626 1EC2                                      l1618 1E4E  
                                    l2610 16EC                                      l2602 16BE  
                                    l1379 4096                                      l3251 588C  
                                    l2099 3432                                      l3171 44CE  
                                    l2435 0478                                      l3411 5580  
                                    l1731 2E24                                      l1811 3666  
                                    l1635 1F56                                      l1627 1EEC  
                                    l1619 1E56                                      l2611 1704  
                                    l2603 1662                                      l1388 4060  
                                    l3252 5884                                      l3164 5D9E  
                                    l1900 4312                                      l1724 3522  
                                    l1812 366C                                      l1628 1EF8  
                                    l2620 1790                USBConfigureEndpoint@handle 0083  
                                    l1645 4196                                      l3261 5DD4  
                                    l2429 041E                                      l2453 131E  
                                    l1733 2E38                                      l1805 36CC  
                                    l1637 1F74                                      l2613 1746  
                                    l3158 6474                                      l3262 5DCC  
                                    l2438 0524                                      l3422 5ED4  
                                    l2454 10B8                                      l1902 432A  
                                    l1822 137E                                      l1734 2EC0  
                                    l1750 427E                                      l1814 3672  
                                    l1806 363C                                      l1670 47D4  
                                    l3255 58AC                                      l1647 41C0  
                                    l2439 0570                                      l3407 5570  
                                    l3423 5ECE                                      l2471 12F8  
                                    l2463 110E                                      l1903 4338  
                                    l1831 14EA                                      l1823 1384  
                                    l1743 42C0                                      l1815 3690  
                                    l2615 175C                                      l3256 58B6  
                                    l3168 4450                                      l3416 6114  
                                    l3440 1AC0                                      l2800 3A7A  
                                    l3408 556A                                      l2456 10DE  
                                    l1664 3C50                                      l1904 4356  
                                    l1736 2EC8                                      l1744 4246  
                                    l1816 36AC                                      l1808 3646  
                                    l1672 47EE                                      l2713 46A4  
                                    l1649 421C                                      l1921 49E0  
                                    l3265 5DEC                                      l3417 610A  
                                    l2393 05D2                                      l3281 617E  
                                    l2801 3A94                                      l2473 1318  
                                    l2465 112E                                      l1905 436E  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2F18  
                                    l1809 364C                                      l1681 320A  
                                    l2481 658E                                      l2625 17C4  
                                    l2609 16D2                                      l3266 5DF6  
                                    l3514 61B8                                      l3442 1B14  
                                    l2394 00E2                                      l3282 616C  
                                    l2802 3AF6                                      l2458 10FA  
                                    l1834 14D0                                      l1682 31B2  
                                    l2626 17E4                                      l2715 46D0  
                                    l3451 1B4E                                      l3531 5FB0  
                                    l2811 3B16                                      l2467 114E  
                                    l1843 15C6                                      l1827 143E  
                                    l1739 2F20                                      l1747 42D6  
                                    l3275 5C08                                      l1771 4A68  
                                    l2716 46E0                                      l1924 498E  
                                    l3524 6430                                      l1676 4888  
                                    l1836 1532                                      l1828 1440  
                                    l1748 4258                                      l3276 5BE6  
                                    l1772 4A62                                      l2661 4C0C  
                                    l1925 49BA                                      l2397 0152  
                                    l2805 3A9A                                      l2469 128E  
                                    l1837 153E                                      l1829 145C  
                                    l1749 425E                                      l1757 5D30  
                                    l1765 5FE8                                      l3198 4FA2  
                                    l2670 4C04                                      l2662 4BA6  
                                    l2574 4B6E                                      l1926 4994  
                                    l3462 6606                                      l3454 1B60  
                                    l3438 1AA8                                      l2398 01E2  
                                    l1790 40EC                                      l1782 5320  
                                    l1838 15BA                                      l1686 3234  
                                    l1758 5D2E                                      l1766 5FE6  
                                    l2478 6594                                      l3199 4F96  
                                    l2751 64D8                                      l3519 62C6  
                                    l3455 1BCC                                      l3535 65EE  
                                    l2807 3AE2                                      l1951 2A86  
                                    l1695 380C                                      l1791 40F2  
                                    l2680 4EB8                                      l2576 4B98  
                                    l3448 1B24                                      l2808 3AC4  
                                    l1960 2AF0                                      l1792 416E  
                                    l1784 536E                                      l2825 5626  
                                    l3457 1BF2                                      l3449 1B34  
                                    l1953 2ABA                                      l1697 3816  
                                    l1793 4134                                      l2826 563A  
                                    l2682 4EE8                                      l3458 1C2C  
                                    l3482 35E4                                      l2498 63E2  
                                    l2683 4EC4                                      l2667 4C28  
                                    l2691 5C4A                                      l2755 5A90  
                                    l3483 359C                                      l1963 2B6A  
                                    l1699 387A                                      l1795 4154  
                                    l2499 63D4                                      l2595 1828  
                                    l2684 4ECA                                      l2668 4BD8  
                                    l2692 5C24                                      l2780 5434  
                                    l3484 35B4                                      l3476 355C  
                                    l1964 2B32                                      l1956 2ACC  
                                    l2596 1626                                      l2677 4ED4  
                                    l2669 4BEC                                      l2781 543A  
                                    l2757 5A9C                                      l3485 35C4  
                                    l3477 3556                                      l1957 2AD0  
                                    l1949 2A78                                      l2678 4E72  
                                    l2694 5C5E                                      l2790 4E56  
                                    l1990 6344                                      l2695 5C32  
                                    l3479 3584                                      l1967 2B84  
                                    l1959 2B28                                      l2599 17F6  
              __size_of_Mdm_IsSmsReceived 0024                                      l3488 3622  
                                    l1968 2B88                                      l1992 634A  
                              _Led1OutSts 01FA                                      l2697 5C44  
                                    l2778 5402                                      l2787 4DF6  
                                    l1899 4378                                      l2788 4E5C  
                                    l2980 390E                                      l1997 54B2  
                                    l1989 6354                                      l2983 395E  
                                    l2984 3920                                      l2977 38CC  
                                    l2986 3992                                      l2978 38C6  
                                    l2996 4F02                                      l2997 4F12  
                                    l2999 4F30                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE88                                      STR_9 FEBC  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    u8665 5B4E                                      u8666 5B50  
                                    u8675 5B5A                                      u8676 5B5C  
                                    u8685 5B68                                      u8686 5B6A  
                                    u8695 5B74                                      u8696 5B76  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 677A  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0031               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D5  
                    _NewStringMdmTerminal 003A                                      _atoi 38C4  
                                    _main 673C                           ??_Mdm_IsRinging 0081  
                                    _itoa 5D78                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 6064                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4448                                      _xtoi 3546  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6782  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4A7A  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5EC4                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 5818   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6622  
                           _isNumberValid 53DC                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0111  
              __end_of_USBCheckStdRequest 3710                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 66C4  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3E66  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 571C                  Eeprom_Write@SlaveAddress 008C  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0089  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 5F40                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAA                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DC  
                                   l14112 240E                                     l14140 2476  
                                   l14064 60AC                                     l12536 3816  
                                   l13700 46E0                                     l12732 34A6  
                                   l13550 395A                                     l11766 650A  
                                   l15240 09A4                                     l13384 5BE6  
                                   l15074 0FB0                                     l12498 616C  
                                   l14552 53FA                                     l16314 54CC  
                                   l16316 54FC                                     l14726 3372  
                                   l15392 1F04                                     l13938 4A94  
                                   l14852 1FE6                                     l14874 20A0  
                                   l15960 2F4A                                     l15948 5082  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4F72  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE5E  
                                   STR_30 FF2E                                     STR_14 FEA7  
                                   STR_31 FEF9                                     STR_15 FEE5  
                                   STR_23 FED1                                     STR_24 FFF4  
                                   STR_32 FFA9                                     STR_16 FF1D  
                                   STR_25 FFF4                                     STR_33 FFD7  
                                   STR_17 FF82                                     STR_26 FE85  
                                   STR_18 FF8F                                     STR_27 FF0C  
                                   STR_28 FFB5                           __end_of___awmod 515E  
                                   STR_29 FF2E         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4FF6                                     ?_utoa 008A  
                                   u12010 62C2                                     u11140 5ABE  
                                   u12100 5F94                                     u11300 34DA  
                                   u12030 61A8                                     u11070 3868  
                                   u12200 2C2A                                     u12120 5FA0  
                                   u11090 38AA                                     u10275 6288  
                                   u11340 2E8A                                     u10276 628A  
                         ___awdiv@divisor 007F                                     u11077 385E  
                                   u10285 6294                                     u11350 2EBA  
                                   u10286 6296                                     u10295 62A0  
                                   u10296 62A2                                     u12145 6688  
                                   u13105 0D22                                     u13025 6648  
                                   u11097 38A0                                     u12146 668A  
                                   u12250 548E                                     u13026 664A  
                                   u11370 2F0C                    __end_of_USBDeviceTasks 1F7E  
                                   u11347 2E80                                     u13220 24DA  
                                   u13045 0AF4                                     u11357 2EB0  
                                   u14005 669C                                     u11710 5E30  
                                   u14030 455C                                     u14110 2714  
                                   u14006 669E                                     u13055 0B14  
                                   ?_xtoi 0083                                     u11640 5890  
                                   u14040 4576                                     u13160 5960  
                                   u12600 1AB0                                     u12257 5484  
                                   u13065 0B9E                                     u14201 1FAA  
                                   u11377 2F02                                     u11730 5F6E  
                                   u14130 2728                                     u14211 1FBC  
                                   u15100 2B5A                                     u13085 0C78  
                                   u12390 496A                                     u11670 5DD8  
                                   u12630 1AEA                                     u15110 2B72  
                                   u11590 1554                                     u13190 2432  
                                   u13095 0C98                                     u14065 6632  
                                   u14066 6636                                     u12810 4F34  
                                   u12650 1AFA                                     u15107 2B50  
                                   u14191 1F98                                     u15151 53D2  
                                   u14280 20F4                                     u13720 04BE  
                                   u15080 2B18                                     u12905 5B12  
                                   u11970 4FA6                 ?_USBCtrlEPServiceComplete 0001  
                                   u13910 4BB6                                     u12870 5128  
                                   u15087 2B0E                                     u13840 3B2E  
                                   u15451 4D18                                     u13780 55B2  
                                   u15461 4D30                                     u13890 543E  
                                   u13787 55A8                                     u15648 50B8  
                                   u15649 50E6                                     u13995 51C2  
                                   u14990 1F7A                                     u15688 3016  
                                   u15689 3044                           __end_of___lwdiv 58C0  
                         __end_of___lwmod 5E00                 TurnOnModem@TurnOnMdmState 0028  
                      ??_UpdateOsCounters 0019                                     i1l742 253A  
                                   i1l747 2676                                     i2l680 3D8E  
                                   i2l681 3CDE                                     i2l690 3D28  
                                   i2l682 3CEC                                     i2l686 3D0E  
                                   i2l688 3D80                                     i2l689 3D48  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03AB              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E7                                     _USTAT 000F64  
                 __end_of_LedStateMachine 4642        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 4822  
                           _StringCompare 5912                                     _sd000 FE5A  
                                   _sd001 FE13                                     _sd002 FDED  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3C08                               _ApnLenLocal 01EF  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 5C64                           __end_of_isalpha 61C2  
                         __end_of_isdigit 647C                 saveNumberInMemory@address 0090  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0089                               _ClearBuffer 6064  
                         __end_of_isspace 62CE               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0037                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 6438  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 6342                 __end_of_Rtcc_GetRtccValue 4B0E  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 523C                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 571C  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                        parseCommand@text 0088                                     wtemp6 0043  
                         __end_of_sprintf 3B3C                           __end_of_tolower 65F2  
                     __end_of_Mcu_Int0Isr 67AA                       __end_of_Mcu_Int1Isr 67A6  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 660A                    __end_of_GetElapsedTime 3F2E  
                   __end_of_UartSetConfig 5614                      __end_of_Eeprom_Write 5912  
                  __size_of_initGprsModem 0090                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 65A6                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2E12                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 627A  
                          _InitSchedTimer 61F2                           __initialization 27CA  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 459A  
                    __end_of_I2c_ReadData 23CC                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 40BA                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 15EE                              __end_of_atoi 399C  
                            __end_of_main 6748                       StringCompare@Result 0085  
                            __end_of_itoa 5DBC                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DF                              __end_of_utoa 44F2  
                            __end_of_xtoi 362C                  __end_of_Rtcm_SetRtccDate 57C4  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6766              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D4                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE48                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4950                             ?_initPreamble 007D  
                              _ReceiveEvt 6220          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 66E4  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103              isNumberInMemory@searchFailed 010F  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4FF6                              _cdc_mem_type 01E0  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F5  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC        __size_of_initMemorizedNumbersCount 001A  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3D9E  
              _Uart_MdmGsmGprsReadService 3CD4                __end_of_UsbDevice_MainTask 6366  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 64DE  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 64FE  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 57C4  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 6028                               _GenerateEvt 660A  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002B  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC2F  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 52A8                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6220                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 679A  
                              _UartConfig 0328                      __end_of_Mdm_MainTask 5A04  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CC  
                           ??_Term_MainSm 00A7                                    _Relay1 01DA  
                                  _Relay2 01D9                                    _Relay3 01D8  
                                  _Relay4 01D7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5CAA  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5B3E                                    ___lmul 5614  
                    _I2cSlv_ReceiveI2cMsg 5E44                        TurnOnModem@Counter 02D9  
                            ?_putUSBUSART 0083                                    ___wmul 62CE  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5A04  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5818  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 49E6  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5D34           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5BD4                    __size_of_HttpGetMethod 04D0  
                                  _memset 6162                                    clear_0 287C  
                                  clear_1 288E                                    clear_2 289A  
                                  clear_3 28A6                                    clear_4 28B2  
                                  clear_5 28BE                                    clear_6 28CA  
                                  clear_7 28D6                         parseCommand@F9015 FC2A  
                                  clear_8 28E2                                    clear_9 28EE  
                       parseCommand@F9017 FC27                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E3                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EC                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F2  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 5560                                    _strcpy 6100  
                                  _strlen 5EC4                                    _strtol 1A68  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 5FBA                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4B9E  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03C1  
                     ModemEvtParser@F9112 03B7                       ModemEvtParser@F9106 03CB  
                     ModemEvtParser@F9108 03C6                              _CDCTxService 2A62  
                     MdmCntSm@MdmCntState 002D                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC1C  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04CC                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6792  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 5770                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 67A6  
                             _Mcu_Int1Isr 67A2                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0090                    __size_of_ScheduleTasks 0126  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A0                      _controlTransferState 00CB  
       __end_of_initMemorizedNumbersCount 65DA                     __end_ofi1_GenerateEvt 6664  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4D4C  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0088  
                      _ExtInt1IsrCallback 02E1                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 290C  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 679E                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5AF0  
         I2cSlv_QueryI2cData@TimeoutTimer 033D                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5442  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DD                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5D78  
                             _InitNetwork 00DA                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5E  
                           __end_of_sd001 FE31                             __end_of_sd002 FE13  
                            __pidataBANK0 67AC                              __pidataBANK1 67AA  
                            __pidataBANK2 6722                              __pidataBANK3 5B8A  
                            __pidataBANK4 672F                              __pidataBANK5 5964  
               __end_ofparseCommand@F9015 FC2D                 __end_ofparseCommand@F9017 FC2A  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5E00          isNumberInMemory@searchInProgress 0110  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 60CE  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008D  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6572  
             __end_of_USBCtrlTrfInHandler 417C                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 008A  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 664E  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E6                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 6132  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 3378  
                   __end_of_waitSetupCall 5AA2                       __end_of_Rtcc_RtcIsr 67A2  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD21  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                     _memorizedNumbersCount 0038  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 602E  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E1  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4642  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 627A  
                  _USBStdGetStatusHandler 423A                         __end_of_SendSmsSm 1DF6  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EE  
                          _Rtcc_RtcConfig 46E4                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 008A                                __pbssBANK2 02C9  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 667A  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 5F7E  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 63D2  
                             _SetBaudRate 5AF0                 initGprsModem@modemCounter 03B5  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01F0  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 328A                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6766                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0113                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 008A                                   ?___lmul 007D  
                            _Led_MainTask 3B3C                            _Rtcc_UnlockRtc 66C4  
                            _I2cBusStatus 01E8                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2F40  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 226E  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE48                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 49E6                     __end_of_UpdateSchFlag 6556  
                            _EepromBuffer 04BD                                _ep_data_in 02D2  
                         _I2cWriteDataEvt 00D8                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 318A                         __end_of_WriteByte 675C  
                      _USBCheckStdRequest 362C                         _configDescriptor1 FDAA  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A9  
                            _Eeprom_Write 58C0                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 38C4                         triggerRelay@F9023 03D2  
                     _USBStdSetCfgHandler 3460                   __size_of_ConfigureModem 00DC  
                  I2cSlv_QueryI2cData@Ret 01E5                 Eeprom_Write@MemoryAddress 008B  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 624E  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 4784                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 226E                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3FF6  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DD  
          __end_of_Pm_DsReleasePinControl 6788                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 024C  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E1  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 0029  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                     _I2cSlv_QueryI2cData 399C                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 6722  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 678E  
                    __end_of_initPreamble 631C                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002A                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C9  
                   __end_of_Mdm_IsRinging 638A                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CC                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DC                                   _RelayB2 01DB  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D7                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 51D0  
                  __end_of_Rtcc_UnlockRtc 66D4                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 668E  
                              _initEeprom 4E62                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD21  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 651C  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6638  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4EEC  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 50EC  
                                 ___lldiv 4F72                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 586C  
                       ??_USBStallHandler 007D                                   ___lwmod 5DBC  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 64BE  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 679E                      __size_of_putUSBUSART 0022  
                                 __pcinit 27CA                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CE  
                     __end_of_TurnOnModem 5CF0                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0348  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDED  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0089  
                             Terminal@Len 03A7                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 673C                                   __ptext1 6132  
                                 __ptext2 6748                                   __ptext3 6782  
                                 __ptext4 64FE                                   __ptext5 6572  
                                 __ptext6 627A                                   __ptext7 61F2  
                                 __ptext8 3D9E                                   __ptext9 328A  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 46E4  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 5C1C                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 6192  
                                 _isdigit 645A            isNumberInMemory@memoryOpResult 0112  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 28FA  
                                 clear_11 2906                          ___awmod@dividend 007D  
                       ??_InitializeTasks 04FC                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E9       __end_of_Tmr_RegisterTmr2IsrCallback 6752  
             _Tmr_RegisterTmr2IsrCallback 6748                                   _isspace 62A4  
                            _Mdm_MainTask 59B4                                   _isupper 6416  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0495  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2522                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC2F                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 63AE                                   _sprintf 3A6E  
                                 _tolower 65DA           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6704                          _HttpGetDataLocal 039E  
                __end_of_Mdm_SetSmsFormat 5A54                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 439C                                   _toupper 65F2  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 290C                              _getsUSBUSART 4950  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DB               ?_Uart_MdmGsmGprsReadService 0004  
                  MyApp_Task@cmdAddNumber 0116             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC23  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC1C  
                          _ModemEvtParser 1F7E                                   int_func 439C  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 036D  
                               i1u1540_28 2658                                 i1u1540_29 266C  
                               i1u1536_20 2538                                 i1u1572_28 63BE  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 65C0                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 653A                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 183A  
                       _Rtcc_SetRtcStatus 6622                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 6100                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4784                        _UsbDevice_MainTask 6342  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 678E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 318A                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E9                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 27CA                           _RtccIsrCallback 02E5  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 4DD8                      __end_of_parseCommand 4B9E  
              _USBStatusStageEnabledFlag1 00C7                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 63F4  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 66A0  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 649E  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E7  
                        _HttpGetMethodSts 01ED                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01E2                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0036                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 2100  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D5                     __end_of_StopCondition 6796  
                __size_of_HighPriorityIsr 4440                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0364  
                               _Led2Blink 035B                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0352              __end_of_USBTransferOnePacket 423A  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0388  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1A68                 __end_of_Rtcc_SetRtcStatus 6638  
                               _Led2Pulse 0382                                 _Led3Pulse 037C  
                       _I2cSlv_SendI2cMsg 5F02           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04FC  
                          _Tmr_TmrBConfig 3D9E                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 66A0                         _OsAlrm_SetOsAlarm 3F2E  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5B3E  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5CAA                                 _ClipEvent 00DE  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 008E                                 _GetMethod 00D9  
                  _USBCtrlTrfSetupHandler 4D4C                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 2522  
   __end_of_USBIncrement1msInternalTimers 6416    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 63F4               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 566C                            _CheckAckStatus 6770  
                          __end_of___wmul 62F6                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 66B2                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5C1C                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002C                            __end_of_memset 6192  
                      _UartTxBufferStatus 5AA2                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E3                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 6714                                 _MdmStatus 00D1  
                          __end_of_strcat 55BC                            __end_of_strcpy 6132  
                          __end_of_strlen 5F02                            __end_of_strtol 1C3E  
                     start_initialization 27CA           isNumberInMemory@currentPosition 00E2  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3710                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 609A                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 48BA  
                   __size_of_initPreamble 0026           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC31                        __end_of_MyApp_Task 183A  
                        _UpdateOsCounters 66F4                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3CD4                 __end_of_I2cSlv_SendI2cMsg 5F40  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4A7A                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
              ?_initMemorizedNumbersCount 0001                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 66E4                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3E66  
                               _SendSmsSm 1C3E                 __end_of_OsAlrm_SetOsAlarm 3FF6  
                  __end_of_Tmr_TmrBIrqSet 5B8A                                 _TaskTable 05A4  
                               _RingEvent 00DF                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D4  
                   __end_of_isNumberValid 5442                         __size_of_ReadByte 000A  
                               _RtcConfig 03AF                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 55BC  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 624E  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 658C  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 677A  
                                ??___lmul 0085                             _isxdigit$6622 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2E12                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5078                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E2                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03B7  
              isNumberInMemory@readBuffer 0102                               __pdataBANK4 04EF  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 586C                    __end_of_ConfigureModem 37EC  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D6  
          __end_of_USBStdGetStatusHandler 42EC                              _initPreamble 62F6  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC31  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5964                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04FC                           RiSm@MdmDrvState 002E  
                            _SetAckStatus 667A                              _isalpha$6612 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6752  
                     __size_of_initEeprom 008A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6346 007E             UpdateSchFlag@InterruptCounter 02DB  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5E84  
     InitGprsNetwork@GprsNetInitNextState 00D0                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 64DE                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5FF4              __end_of_LedBlinkStateMachine 2A62  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5CF0                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6572  
              __end_of_USBCheckCDCRequest 439C              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 56C4                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 64BE                              ??_StringCopy 0083  
                        _Led_SetLedStatus 61C2                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 647C  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0090                    __size_of_waitSetupCall 004E  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC1C  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 58C0  
                               __ptext101 5C1C                                 __ptext110 5E44  
                               __ptext102 4B9E                                 __ptext111 647C  
                               __ptext103 4642                                 __ptext120 5E84  
                               __ptext112 66E4                                 __ptext104 5A04  
                               __ptext121 1F7E                                 __ptext113 638A  
                               __ptext105 4E62                                 __ptext130 2678  
                               __ptext122 609A                                 __ptext114 52A8  
                               __ptext106 57C4                             Terminal@Index 00A6  
                               __ptext131 44F2                                 __ptext123 5912  
                               __ptext115 5818                                 __ptext107 399C  
                               __ptext140 5502                                 __ptext132 677A  
                               __ptext124 2CE0                                 __ptext116 602E  
                               __ptext108 4FF6                                 __ptext141 4C2E  
                               __ptext133 0DC8                                 __ptext125 3710  
                               __ptext117 55BC                                 __ptext109 5F02  
                               __ptext150 3F2E                                 __ptext142 3E66  
                               __ptext134 05EC                                 __ptext126 0ABC  
                               __ptext118 5CAA                                 __ptext151 62CE  
                               __ptext143 66B2                                 __ptext135 5F40  
                               __ptext127 2BA8                                 __ptext119 1C3E  
                               __ptext160 6752                                 __ptext152 515E  
                               __ptext144 6064                                 __ptext136 5E00  
                               __ptext128 5614                                 __ptext161 6792  
                               __ptext153 5AF0                                 __ptext145 459A  
                               __ptext137 64DE                                 __ptext129 566C  
                               __ptext170 63AE                                 __ptext162 6796  
                               __ptext154 4F72                                 __ptext146 3378  
                               __ptext138 5AA2                                 __ptext171 6714  
                               __ptext163 667A                                 __ptext155 624E  
                               __ptext147 61C2                                 __ptext139 5442  
                               __ptext172 653A                                 __ptext164 675C  
                               __ptext156 3FF6                                 __ptext148 291A  
                               __ptext181 6704                                 __ptext173 66F4  
                               __ptext165 660A                                 __ptext157 6220  
                               __ptext149 586C                                 __ptext182 3CD4  
                               __ptext174 2522                                 __ptext166 679A  
                               __ptext158 2100                                 __ptext183 6664  
                               __ptext175 631C                                 __ptext167 6766  
                               __ptext159 226E                                 __ptext184 679E  
                               __ptext176 56C4                                 __ptext168 6770  
                               __ptext185 67A2                                 __ptext177 6556  
                               __ptext186 67A6                                 __ptext178 5FF4  
                               __ptext187 0000                                 __ptext179 664E  
                                ?___awmod 007D                        _Sch_SchmIntService 6714  
                         _InitializeTasks 5078                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E4  
                 Eeprom_Write@WriteBuffer 0087                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 038E  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 417C                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 044F                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 0399            InitializeTasks@ActiveTaskIndex 02C8  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 52A8                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 5376                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 5376  
              ConfigureModem@DelayCounter 0326                        __end_of_StringCopy 54A4  
                             _ep_data_out 02CF                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E0  
                         Terminal@SwTimer 04D9                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03B3  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02EB  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                MyApp_Task@numberInMemory 011B                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D7                          _OsTmr_StartTimer 5502  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 4E62              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 664E  
              __end_of_Mcu_StartSystemPll 651C                              _parseCommand 4B0E  
                            _PhoneNumbLen 00D2                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 63D2                             _Rtcm_MainTask 4CBE  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0092  
                        SendSmsSm@SwTimer 03EA                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F4           HttpGetMethod@GetMethodNextState 00CF  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 515E  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 6162  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4CBE  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A1                      _USBConfigureEndpoint 4822  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 65A6                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2678                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 631C                     __end_of_initGprsModem 4C2E  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6782                    __end_of_Mdm_GetSmsData 5310  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E4  
                                _ApnLocal 0324                            _StartCondition 6796  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01EA                             _Tmr_TmrBPrSet 328A  
                           _waitSetupCall 5A54                       ?_saveNumberInMemory 008E  
                       _NewStringReceived 003C                              _isspace$6615 007E  
                        _UartSetConfigLow 566C                                  _GetSmsSm 2CE0  
                 __end_of_USBStallHandler 5D34                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 0394                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DF                                  _MdmCntSm 44F2  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 27DE                                 copy_data1 27FE  
                               copy_data2 281E                                 copy_data3 2856  
            __end_of_LedPulseStateMachine 3460                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3546  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 675C                             i2_GenerateEvt 6664  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5A                 __end_of_I2c_InitI2cModule 51D0  
                                _MsgReady FE31                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 50EC                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
             __end_of_I2cSlv_QueryI2cData 3A6E                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 48BA  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0090                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DD  
                         _SetUartBaudRate 2BA8              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 2100                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9031 03CF  
                         MyApp_Task@F9029 FC23                  __end_of_UpdateOsCounters 6704  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 653A                       __end_of_putUSBUSART 645A  
                             _line_coding 0375                              _Rtcc_LockRtc 66D4  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 291A  
                  __end_of_StartCondition 679A                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F1  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 008A  
                         ?_Mdm_GetSmsData 0087                  I2c_WriteData@WriteStatus 0034  
                            _isupper$6618 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0032                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 0048                  MyApp_Task@smsPhoneNumber 04EF  
                          ?_waitSetupCall 0001                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 66B2                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A3  
                ModemEvtParser@RingString 009C                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                                __ptext10 5B3E                                  __ptext11 649E  
                                __ptext20 6342                                  __ptext12 48BA  
                                __ptext21 5C64                                  __ptext13 651C  
                         ??_UartWriteByte 007E                                  __ptext30 60CE  
                                __ptext22 59B4                                  __ptext14 2F40  
                                __ptext31 5CF0                                  __ptext23 571C  
                                __ptext15 5078                                  __ptext40 3460  
                                __ptext32 63F4                                  __ptext24 6788  
                                __ptext16 15EE                                  __ptext41 423A  
                                __ptext33 23CC                                  __ptext25 63D2  
                                __ptext17 658C                                  __ptext50 3066  
                                __ptext42 2E12                                  __ptext34 49E6  
                                __ptext26 668E                                  __ptext18 4CBE  
                                __ptext51 3C08                                  __ptext43 135A  
                                __ptext35 5BD4                                  __ptext27 678E  
                                __ptext19 3B3C                                  __ptext60 00D0  
                                __ptext52 40BA                                  __ptext44 54A4  
                                __ptext36 4D4C                                  __ptext28 1DF6  
                                __ptext61 3546                                  __ptext53 37EC  
                                __ptext45 42EC                                  __ptext37 318A  
                                __ptext29 5FBA                                  __ptext70 6438  
                                __ptext62 65DA                                  __ptext54 2A62  
                                __ptext46 51D0                                  __ptext38 4784  
                                __ptext71 5D78                                  __ptext63 5F7E  
                                __ptext55 10B6                                  __ptext47 5D34  
                                __ptext39 362C                                  __ptext80 183A  
                                __ptext72 4448                                  __ptext64 1A68  
                                __ptext56 5EC4                                  __ptext48 4822  
                                __ptext81 50EC                                  __ptext73 5DBC  
                                __ptext65 65F2                                  __ptext57 5560  
                                __ptext49 5310                                  __ptext90 5A54  
                                __ptext82 4EEC                                  __ptext74 4950  
                                __ptext66 62A4                                  __ptext58 3A6E  
                                __ptext91 64BE                                  __ptext83 66D4  
                                __ptext75 417C                                  __ptext67 6192  
                                __ptext59 6162                                  __ptext92 6366  
                                __ptext84 5376                                  __ptext76 38C4  
                                __ptext68 6416                                  __ptext93 66A0  
                                __ptext85 4A7A                                  __ptext77 645A  
                                __ptext69 6100                                  __ptext94 65A6  
                                __ptext86 6622                                  __ptext78 5770  
                                __ptext95 4B0E                                  __ptext87 46E4  
                                __ptext79 66C4                                  __ptext96 4DD8  
                                __ptext88 6638                                  __ptext97 53DC  
                                __ptext89 523C                                  __ptext98 65C0  
                                __ptext99 62F6                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 6556  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 4EEC  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002F  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 638A               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4DD8                             __size_of_main 000C  
             ??_initMemorizedNumbersCount 008E                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6770  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6788  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5F7E  
                           _Mdm_IsRinging 6366                       _USBCtrlTrfInHandler 40BA  
                I2c_ReadData@I2cReadState 0033                __end_of_Mdm_RequestSmsData 66F4  
                   __end_of_ScheduleTasks 3066                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5310                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3C08                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 02C8  
                              strtol@sign 0093                           Term_MainSm@Data 0463  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5FF4  
                __end_of_Mcu_ConfigExtInt 658C                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C8                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 0087             I2c_WriteData@TentativeCounter 0035  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 649E  
                __end_of_Led_SetLedStatus 61F2                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5770                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 63AE                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4C2E  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5502  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 54A4                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2CE0  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                   __end_ofMyApp_Task@F9029 FC27  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01D6            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0097                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5E44                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 602E  
                __end_of_Rtcm_GetRtccDate 53DC                               _putUSBUSART 6438  
               Eeprom_Write@CommandLength 008D                       _USBCtrlTrfRxService 3066  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 5FBA                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 5560  
                    _LedPulseStateMachine 3378                        _USBCheckCDCRequest 42EC  
                     _USBCtrlTrfTxService 37EC                       RtccIrqInit@Priority 007D  
               _initMemorizedNumbersCount 65C0                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 008A  
                        _Rtcc_AlarmConfig 523C                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DE  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5C64  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 62A4  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CA  
                              _WDTCONbits 000FC0                    MyApp_Task@memoryResult 011A  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 459A          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 6792                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C9                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 609A  
                    __end_of_CDCTxService 2BA8                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2D                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F3  
                 _UsbMasterPhoneNumberLen 0322                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 668E  
